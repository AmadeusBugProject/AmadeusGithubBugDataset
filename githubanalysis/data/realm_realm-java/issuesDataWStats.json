{"projectName": "realm/realm-java", "bugLabels": ["Breaking", "T-Bug", "T-Bug-Crash"], "captureTime": "Sat Jul  4 00:31:41 2020", "issues": [{"title": "Bump min API and remove mips in preparation for NDK21 support", "body": "Set min API = 16\n\nRemove Mips support.\n\n", "url": "https://github.com/realm/realm-java/issues/6679", "user": "RealmBot", "labels": ["Breaking"], "created": "2019-12-03 14:56:52", "closed": "2019-12-17 09:55:58", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "Switch to NDK21", "body": "", "url": "https://github.com/realm/realm-java/issues/6408", "user": "emanuelez", "labels": ["Breaking", "T-Feature"], "created": "2019-01-21 10:16:47", "closed": "2020-03-03 12:54:08", "commits": {}, "ttf": 407.0002777777778, "commitsDetails": []}, {"title": "Rethink sync error reporting", "body": "With the PR introducing error categories https://github.com/realm/realm-java/pull/6379 the whole error concept is starting to smell quite a bit (a lot). \n\nIt roots in the fundamental mismatch between the native layer reporting errors as `(string category, int code)`, while Java tries to make it easy to enumerate errors by forcing them into enum values.\n\nRight now we try to fix this by prefixing the enums with a category description. This might be the best solution but the downside is that the enum descriptions get quite long. Also, the list of error cases are very long which means it becomes overwhelming as it is hard to know which errors to handle and which to ignore.\n\nThis PR covers taking a fresh look at how errors are reported and if we can do anything to make it easier, even if it involves breaking changes.", "url": "https://github.com/realm/realm-java/issues/6387", "user": "cmelchior", "labels": ["Breaking", "Design-Required", "T-Feature"], "created": "2019-01-07 16:31:05", "closed": "2020-01-17 08:27:06", "commits": {}, "ttf": 374.0002777777778, "commitsDetails": []}, {"title": "Partial Sync: Unify Notification System", "body": "See https://github.com/realm/product/issues/392 for details.\r\n\r\nNote that this introduce a small breaking change to the Java API's as `OrderedChangeSet` will no longer be `@Nullable` in callbacks.", "url": "https://github.com/realm/realm-java/issues/5619", "user": "cmelchior", "labels": ["Breaking", "T-Feature"], "created": "2017-12-14 15:23:18", "closed": "2018-01-25 10:06:19", "commits": {}, "ttf": 41.000277777777775, "commitsDetails": []}, {"title": "Breaking WishList for 5.0", "body": "This ticket is for general discussion of the breaking changes in a future 5.0 release. Some items have been moved from #4785 \n\nPlease edit the main post to add a topic with a sequence number, and we can discuss it in the comments. If the breaking change is decided to be worthy to add, then create a separate issue for it.\n\n1. Do not allow having both typed Realm instance and Dynamic Realm instance on the same thread. Throw an exception instead. This creates lots of troubles with Realm instance cache management. By disallowing it, the RealmCache implementation can be much simpler and give us an option to totally manage the Realm instance through Object Store.\n\n2. Remove the mips so file since there is NO mips device in the market. Perhaps consider having a parameter in the `realm` closure for including `mips/arm` but not have them be part of the standard library. We would need to modify our build system for that.", "url": "https://github.com/realm/realm-java/issues/5372", "user": "cmelchior", "labels": ["Breaking", "Pipeline-Idea-Backlog", "T-Internal"], "created": "2017-10-03 11:10:51", "closed": "2019-11-27 21:39:55", "commits": {}, "ttf": 785.0002777777778, "commitsDetails": []}, {"title": "Breaking change Wishlist for 4.0", "body": "This ticket is for general discussion of the breaking changes in the coming 4.0 release.\r\n\r\n**Please edit the main post to add a topic with a sequence number, and we can discuss it in the comments. If the breaking change is decided to be worthy to add, then create a separated issue for it.**\r\n\r\n1) [POSTPONED] Do not allow having both typed Realm instance and Dynamic Realm instance on the same thread. Throw an exception instead.\r\n    This creates lots of troubles with Realm instance cache management. By disallowing it, the `RealmCache` implementation can be much simpler and give us an option to totally manage the Realm instance through Object Store.\r\n\r\n2) [POSTPONED]  Change the behavior of `distinct()` to work against query result. See #4774\r\n\r\n3) [DONE] ~~Replace RxJava1 with RxJava2. This issue here #3497 describes an approach where we split RxJava support into a separate library, but after trying that out in a sample project, it just feels really clunky. Doing `realm.where(Person.class).findAll().asFlowable()` is just so much nicer than doing `RxRealm.asFlowable(realm.where(Person.class).findAll())` and if one thing Kotlin has proved, then it is that small things matter~~ \ud83d\ude04 \r\n\r\n4) [POSTPONED] Remove the mips so file since there is NO mips device in the market.\r\n\r\n5) [DONE](https://github.com/realm/realm-java/pull/5314) [NH] ~~Rename [getAccessToken](https://github.com/realm/realm-java/blob/691c0f4720156187bb5cde1dfa4cc1272a0aaa11/realm/realm-library/src/objectServer/java/io/realm/SyncUser.java#L569) either rename it to reflect the fact that it's returning a `refresh_token`, or abstract the name to the end user.~~\r\n\r\n6) [DONE](https://github.com/realm/realm-java/pull/5314) [NH] ~~Remove deprecated methods `retrieveUser` and `retrieveUserAsync` as well as the deprecated `SyncUser#Callback`~~", "url": "https://github.com/realm/realm-java/issues/4785", "user": "beeender", "labels": ["Breaking", "T-Internal"], "created": "2017-06-14 09:54:03", "closed": "2017-10-03 11:11:22", "commits": {}, "ttf": 111.00027777777778, "commitsDetails": []}, {"title": "findFirstAsync is not emitting object when queried object is deleted from Realm", "body": "#### Goal\n\nReceive emitted object in following code when RealmObject is deleted from Realm.\n\n```\nrealm.where(GitHubUserProfile.class)\n         .equalTo(\"login\", login)\n         .findFirstAsync()\n         .asObservable()\n```\n#### Expected Results\n\nWant to receive a callback when Queried RealmObject is deleted from Realm, just like we do when RealmObject gets modified. I am getting a callback when I use findAllAsync() even when object is deleted.\n#### Actual Results\n\nNot getting a callback when RealmObject is deleted from Realm.\n#### Code Sample\n\n```\n/* Realm NOT emitting when I delete the queried object */\nprivate void sampleQuery1(String login) {\n    realm.where(GitHubUserProfile.class)\n             .equalTo(\"login\", login)\n             .findFirstAsync()\n             .asObservable()\n             .cast(GitHubUserProfile.class)\n             .filter(realmObject -> realmObject.isLoaded())\n             .filter(realmObject -> realmObject.isValid())\n             .subscribeOn(AndroidSchedulers.mainThread())\n             .observeOn(AndroidSchedulers.mainThread())\n             .subscribe(gitHubUserProfile -> {\n                  view.setData(gitHubUserProfile);\n              });\n}\n\n/* Realm emitting when I delete the queried object */\nprivate void sampleQuery2(String login) {\n    realm.where(GitHubUserProfile.class)\n             .equalTo(\"login\", login)\n             .findAllAsync()\n             .asObservable()\n             .cast(GitHubUserProfile.class)\n             .filter(realmObject -> realmObject.isLoaded())\n             .filter(realmObject -> realmObject.isValid())\n             .subscribeOn(AndroidSchedulers.mainThread())\n             .observeOn(AndroidSchedulers.mainThread())\n             .subscribe(gitHubUserProfile -> {\n                  view.setData(gitHubUserProfile);\n              });\n}\n\npublic void clearGitHubUserProfileFromRealm(String login) {\n    GitHubUserProfile gitHubUserProfile = realm.where(GitHubUserProfile.class)\n        .equalTo(\"login\", login)\n        .findFirst();\n\n    Realm realm = Realm.getDefaultInstance();\n    if (gitHubUserProfile != null) {\n        realm.executeTransaction(realm1 -> gitHubUserProfile.deleteFromRealm());\n    }\n    realm.close();\n}\n```\n#### Version of Realm and tooling\n\nRealm version(s): 1.1.0\n\nAndroid Studio version: 2.1.2\n\nWhich Android version and device: 6.0.1, One plus One\n", "url": "https://github.com/realm/realm-java/issues/3138", "user": "viraj49", "labels": ["Breaking", "T-Enhancement"], "created": "2016-07-05 13:24:44", "closed": "2017-02-24 08:57:20", "commits": {}, "ttf": 233.00027777777777, "commitsDetails": []}, {"title": "RealmChangeListener not called for newly created objects", "body": "#### Goal\n\nGet a row from a table (asynchronously) if it exists, or be notified when said row is created.\n#### Expected Results\n\n`RealmChangeListener` being called once when the query is done, with `object.isValid` set to `false` (the row is not in the table yet).\nWhen the row is inserted, `RealmChangeListener` should be called a second time, with `object.isValid` set to `true`.\n#### Actual Results\n\n`RealmChangeListener` is called once, with `object.isValid` set to `false`, but not a second time after the object has been saved in the database.\n#### Steps & Code to Reproduce\n\nYou can looks at [this class](https://github.com/MGaetan89/ShowsRage/blob/master/app/src/main/kotlin/com/mgaetan89/showsrage/fragment/StatisticsFragment.kt) for an example of implementation.\n- In [`onCreate()`](https://github.com/MGaetan89/ShowsRage/blob/master/app/src/main/kotlin/com/mgaetan89/showsrage/fragment/StatisticsFragment.kt#L88) I read the data from the database (asynchronously, with a listener) and send a request to the server.\n- In [`success()`](https://github.com/MGaetan89/ShowsRage/blob/master/app/src/main/kotlin/com/mgaetan89/showsrage/fragment/StatisticsFragment.kt#L142) I save the data received from the server in the database.\n- In [`onChange()`](https://github.com/MGaetan89/ShowsRage/blob/master/app/src/main/kotlin/com/mgaetan89/showsrage/fragment/StatisticsFragment.kt#L40) I try to display the data if the `object` is valid.\n#### Version of Realm and tooling\n\nRealm version(s): 0.90.0\nAndroid Studio version: 2.1\n", "url": "https://github.com/realm/realm-java/issues/2748", "user": "MGaetan89", "labels": ["Breaking", "T-Enhancement"], "created": "2016-05-08 16:01:52", "closed": "2017-03-27 13:35:32", "commits": {}, "ttf": 322.0002777777778, "commitsDetails": []}, {"title": "Encryption of user meta data doesn't work", "body": "It is possible to add `AppConfiguration.Builder.encryptionKey()` but it doesn't propagate all the way to the C++ layer. So this issue is:\n\n### TODO\n* [ ] Add tests making sure we actually encrypt the metadata Realm.\n\n* [\u00a0]Implement it all the way down.\n\n", "url": "https://github.com/realm/realm-java/issues/6950", "user": "RealmBot", "labels": ["T-Bug"], "created": "2020-06-16 12:35:08", "closed": "2020-06-29 14:52:40", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "Sync does not resume after toggeling airplane mode", "body": "An internal demo app seemed to have problems resuming syncing after airplane mode was enabled and disabled.\n\nWe do have connection listeners in place that should account for this scenario, but we need to ensure they actually work correctly in this case.\n\n", "url": "https://github.com/realm/realm-java/issues/6932", "user": "RealmBot", "labels": ["MongoDBRealm", "T-Bug"], "created": "2020-06-08 11:45:34", "closed": "2020-06-26 13:40:02", "commits": {}, "ttf": 18.00027777777778, "commitsDetails": []}, {"title": "Download progress listeners report wrong numbers", "body": "In some cases the download progress listeners never reach a point where `downloaded == downloadble` which can break a lot of client-side logic using that to determine when upload or download is complete.\n\nOne example\u00a0\n\n```java\n2020-05-11 12:47:10.135 28945-29025/io.realm.test D/REALM_SYNC: Connection[4]: Session[4]: Progress handler called, downloaded = 0, downloadable(total) = 0, uploaded = 0, uploadable = 131, reliable_download_progress = 0, snapshot version = 2\r\n2020-05-11 12:47:10.135 28945-29025/io.realm.test I/REALM_SYNC: Connection[4]: Connected to endpoint '127.0.0.1:9090' (from '127.0.0.1:50724')\r\n2020-05-11 12:47:10.136 28945-29025/io.realm.test D/REALM_SYNC: Connection[4]: WebSocket::initiate_client_handshake()\r\n2020-05-11 12:47:10.159 28945-29025/io.realm.test D/REALM_SYNC: Connection[4]: WebSocket::handle_http_response_received()\r\n2020-05-11 12:47:10.159 28945-29025/io.realm.test D/REALM_SYNC: Connection[4]: Negotiated protocol version: 1\r\n2020-05-11 12:47:10.159 28945-29025/io.realm.test D/REALM_SYNC: Connection[4]: Will emit a ping in 53830 milliseconds\r\n2020-05-11 12:47:10.159 28945-29025/io.realm.test D/REALM_SYNC: Connection[4]: Session[4]: Sending: BIND(path='\"9c0e3d7a-a337-4740-899f-8a407d21f869\"', signed_user_token_size=695, need_client_file_ident=1, is_subserver=0)\r\n2020-05-11 12:47:10.170 28945-29025/io.realm.test D/REALM_SYNC: Connection[4]: Session[4]: Received: IDENT(client_file_ident=17, client_file_ident_salt=4155555971344219390)\r\n2020-05-11 12:47:10.172 28945-29025/io.realm.test D/REALM_SYNC: Connection[4]: Session[4]: Sending: IDENT(client_file_ident=17, client_file_ident_salt=4155555971344219390, scan_server_version=0, scan_client_version=0, latest_server_version=0, latest_server_version_salt=0)\r\n2020-05-11 12:47:10.172 28945-29025/io.realm.test D/REALM_SYNC: Connection[4]: Session[4]: Sending: MARK(request_ident=1)\r\n2020-05-11 12:47:10.180 28945-29025/io.realm.test D/REALM_SYNC: Connection[4]: Session[4]: Received: DOWNLOAD(download_server_version=2, download_client_version=0, latest_server_version=2, latest_server_version_salt=8412427211269738421, upload_client_version=0, upload_server_version=0, downloadable_bytes=623, num_changesets=2, ...)\r\n2020-05-11 12:47:10.181 28945-29025/io.realm.test D/REALM_SYNC: Connection[4]: Session[4]: Finished changeset indexing (incoming: 2 changeset(s) / 28 instructions, local: 1 changeset(s) / 8 instructions, conflict group(s): 12)\r\n2020-05-11 12:47:10.181 28945-29025/io.realm.test D/REALM_SYNC: Connection[4]: Session[4]: Finished transforming 1 local changesets through 2 incoming changesets (8 vs 28 instructions, in 12 conflict groups)\r\n2020-05-11 12:47:10.187 28945-29025/io.realm.test D/REALM_SYNC: Connection[4]: Session[4]: 2 remote changesets integrated, producing client version 4\r\n2020-05-11 12:47:10.187 28945-29025/io.realm.test D/REALM_SYNC: Connection[4]: Session[4]: Progress handler called, downloaded = 575, downloadable(total) = 1198, uploaded = 0, uploadable = 131, reliable_download_progress = 1, snapshot version = 4\r\n2020-05-11 12:47:17.387 28945-29025/io.realm.test E/REALM_JAVA: From native: Progress{transferredBytes=575, transferableBytes=1198}\r\n2020-05-11 12:47:20.649 28945-29025/io.realm.test D/REALM_SYNC: Connection[4]: Session[4]: Received: MARK(request_ident=1)\r\n2020-05-11 12:47:20.651 28945-29025/io.realm.test D/REALM_SYNC: Connection[4]: Session[4]: Sending: UPLOAD(progress_client_version=4, progress_server_version=2, locked_server_version=2, num_changesets=1)\r\n2020-05-11 12:47:20.652 28945-29025/io.realm.test D/REALM_SYNC: Connection[4]: Session[4]: Upload compaction: original size = 131, compacted size = 131\r\n2020-05-11 12:47:20.740 28945-29025/io.realm.test D/REALM_SYNC: Connection[4]: Session[4]: Received: DOWNLOAD(download_server_version=3, download_client_version=2, latest_server_version=3, latest_server_version_salt=5140446775280041719, upload_client_version=4, upload_server_version=2, downloadable_bytes=645, num_changesets=0, ...)\r\n2020-05-11 12:47:20.745 28945-29025/io.realm.test D/REALM_SYNC: Connection[4]: Session[4]: Sending: UPLOAD(progress_client_version=5, progress_server_version=3, locked_server_version=3, num_changesets=0)\r\n2020-05-11 12:47:20.745 28945-29025/io.realm.test D/REALM_SYNC: Connection[4]: Session[4]: Progress handler called, downloaded = 575, downloadable(total) = 1220, uploaded = 131, uploadable = 131, reliable_download_progress = 1, snapshot version = 5\r\n2020-05-11 12:47:25.964 28945-29025/io.realm.test E/REALM_JAVA: From native: Progress{transferredBytes=575, transferableBytes=1198}\n```\n\nBlocked by https://jira.mongodb.org/browse/REALMC-5354\n\n", "url": "https://github.com/realm/realm-java/issues/6921", "user": "RealmBot", "labels": ["MongoDBRealm", "T-Bug"], "created": "2020-06-05 10:40:20", "closed": "2020-06-29 12:16:18", "commits": {}, "ttf": 24.00027777777778, "commitsDetails": []}, {"title": "Registering sync connection listeners fails", "body": "An assertion is made when trying to add a listener with `SyncSession.addConnectionChangeListener`.\u00a0\n\nCurrently ignored tests are added in\u00a0[https://github.com/realm/realm-java/pull/6884](https://github.com/realm/realm-java/pull/6884)\n\n", "url": "https://github.com/realm/realm-java/issues/6909", "user": "RealmBot", "labels": ["MongoDBRealm", "T-Bug"], "created": "2020-06-04 08:14:23", "closed": "2020-06-05 11:39:34", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Index out of bounds in migration transformation", "body": "#### Goal\nRun transformation in a migration for all elements. If a linking object (`Bar`) is found, I want to set a the string from `Bar.bbb` on the `DynamicRealmObject` (`Foo.aaa`) and if not, I want to remove the `Foo`-object.\n\n```kotlin\nschema.get(\"Foo\")?.apply {\n    addField(\"aaa\", String::class.java)\n\n    transform { dro ->\n        dro.linkingObjects(\"Bar\", \"foo\")\n            ?.firstOrNull()\n            ?.apply {\n                dro.setString(\"aaa\", getString(\"bbb\"))\n            }\n            ?: dro.deleteFromRealm()\n    }\n}\n```\n\n#### Actual Results\nThis works fine on a few test devices I could test but crashlytics reports many crashes for end users.\nI get 2 crashes:\n\n```java\nFatal Exception: java.lang.IllegalStateException: Row index out of range\nException backtrace:\n<backtrace not supported on this platform>\n       at io.realm.internal.CheckedRow.nativeSetString(CheckedRow.java)\n       at io.realm.internal.UncheckedRow.setString(UncheckedRow.java:234)\n       at io.realm.DynamicRealmObject.setString(DynamicRealmObject.java:689)\n       at de.loewen.lcsmobile.migration.MigrateToVersion23Kt$migrateToVersion23$1$1.apply(MigrateToVersion23Kt.java:36)\n       at io.realm.MutableRealmObjectSchema.transform(MutableRealmObjectSchema.java:288)\n       at de.loewen.lcsmobile.migration.MigrateToVersion23Kt.migrateToVersion23(MigrateToVersion23Kt.java:26)\n       at de.loewen.lcsmobile.migration.RealmMigrationManager.migrate(RealmMigrationManager.java:50)\n```\n\nand \n\n```java\nFatal Exception: java.lang.ArrayIndexOutOfBoundsException: rowIndex > available rows: 54 > 53\n       at io.realm.internal.Table.nativeMoveLastOver(Table.java)\n       at io.realm.internal.Table.moveLastOver(Table.java:330)\n       at io.realm.RealmObject.deleteFromRealm(RealmObject.java:115)\n       at io.realm.RealmObject.deleteFromRealm(RealmObject.java:87)\n       at de.loewen.lcsmobile.migration.MigrateToVersion23Kt$migrateToVersion23$1$1.apply(MigrateToVersion23Kt.java:46)\n       at io.realm.MutableRealmObjectSchema.transform(MutableRealmObjectSchema.java:288)\n       at de.loewen.lcsmobile.migration.MigrateToVersion23Kt.migrateToVersion23(MigrateToVersion23Kt.java:26)\n       at de.loewen.lcsmobile.migration.RealmMigrationManager.migrate(RealmMigrationManager.java:50)\n```\n\n#### Steps & Code to Reproduce\nThis seems to happen everytime the user opens the app (and a migration is needed). As said, I cannot reproduce it myself because it's working on my devices.\n\n#### Version of Realm and tooling\n\nRealm version(s): 6.0.0\n\nRealm Sync feature enabled: No\n\nAndroid Studio version: 3.6 Beta 3\n\nAndroid Build Tools version: 29.0.2\n\nGradle version: 5.6.4\n\nWhich Android version and device(s): 8.0.0 (Galaxy S7) crashes on the user; I've tested an S7 with 8.0.0 as well which worked. Also tested Android 10, 9, 8, 7, 6, 5 - all working.", "url": "https://github.com/realm/realm-java/issues/6657", "user": "hardysim", "labels": ["O-Community", "T-Bug"], "created": "2019-11-11 12:43:55", "closed": "2020-03-03 07:07:21", "commits": {}, "ttf": 112.00027777777778, "commitsDetails": []}, {"title": "Android updated realm-gradle-plugin from 5.12 to 5.15 throws exception", "body": "#### Goal\r\n  I updated realm from 5.12 to 5.15 and without any changes on the models I got this exception when updating the app, but if I install as a fresh apk it will work.\r\n \r\njava.lang.IllegalStateException: The following changes cannot be made in additive-only schema mode:\r\n    - Property '__ResultSets.created_at' has been made required.\r\n    - Property '__ResultSets.updated_at' has been made required.\r\n        at io.realm.internal.OsSharedRealm.nativeGetSharedRealm(Native Method)\r\n        at io.realm.internal.OsSharedRealm.<init>(OsSharedRealm.java:171)\r\n        at io.realm.internal.OsSharedRealm.getInstance(OsSharedRealm.java:241)\r\n \r\n\r\n#### Steps & Code to Reproduce\r\n Calling like this:\r\n          Realm.setDefaultConfiguration(SyncConfiguration.automatic())\r\n          mRealm = Realm.getDefaultInstance()\r\n \r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): 5.12 <-> 5.15.1\r\n\r\nRealm Sync feature enabled: Yes \r\n\r\nAndroid Studio version: 3.5\r\n\r\nAndroid Build Tools version: 29\r\n\r\nGradle version: 3.5.0\r\n\r\nWhich Android version and device(s): All versions\r\n", "url": "https://github.com/realm/realm-java/issues/6619", "user": "tloshi", "labels": ["O-Community", "T-Bug"], "created": "2019-09-18 08:05:09", "closed": "2019-09-30 12:41:40", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "isLoaded not firing as expected", "body": "#### Issue\r\n`isLoaded()` is no longer being fired as expected. \r\n\r\n#### Actual Results\r\nisLoaded never returns true in some cases. \r\n\r\n#### Steps & Code to Reproduce\r\n\r\nIt doesn't happen all the time but we can definitely get into a state where isLoaded never returns true. In the below, `realmObject.isLoaded()` returns false and then never returns true again. We have verified that the Single isn't being disposed of before it has a chance to return true. There is no error being thrown.\r\n\r\n```\r\nreturn realmObjectExample\r\n\t\t\t\t.<T>asFlowable()\r\n\t\t\t\t.filter(realmObject -> realmObject.isLoaded())\r\n\t\t\t\t.firstOrError()\r\n```\r\n\r\nThe object definitely exists in the database. \r\nIt happens on individual realm objects and RealmResults.\r\nThis works in version 5.8.0 and 5.9.0 which we are currently stuck on because of this. \r\n\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): 5.10.0 and above\r\n\r\nRealm Sync feature enabled: No\r\n\r\nAndroid Studio version: 3.4.1\r\n\r\nAndroid Build Tools version: 3.4.1\r\n\r\nGradle version: gradle-5.1.1\r\n\r\nWhich Android version and device(s): Pixel 2, Android 9\r\n", "url": "https://github.com/realm/realm-java/issues/6556", "user": "ecramer", "labels": ["O-Community", "Reproduction-Required", "T-Bug"], "created": "2019-07-05 15:37:06", "closed": "2019-09-20 15:45:55", "commits": {}, "ttf": 77.00027777777778, "commitsDetails": []}, {"title": "App_name is overridden by realm-android-kotlin-extensions library", "body": "#### Goal\r\nInstalling the app with my chosen name from the strings.xml\r\n\r\n#### Actual Results\r\nThe app name (app_name) is \"kotlin-extensions\"\r\n\r\n#### Steps & Code to Reproduce\r\nSetup a new project, using kotlin-dsl gradle, make it modulair and include Realm in the additional module (I have multiple modules, but only the cache module implements Realm). Run the app. App_name is now \"kotlin_extensions\".\r\n\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): 5.11.0\r\nRealm Sync feature enabled: No\r\nAndroid Studio version: 3.4.1\r\nAndroid Build Tools version: 28\r\nGradle version: 5.1.1\r\n\r\nWhich Android version and device(s): \r\n", "url": "https://github.com/realm/realm-java/issues/6536", "user": "nmrsmn", "labels": ["O-Community", "T-Bug"], "created": "2019-06-06 15:08:13", "closed": "2019-06-20 14:24:15", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "Query with in() returns an empty RealmResults", "body": "#### Goal\r\nI want to query a table and retrieve objects by their IDS\r\n\r\n#### Actual Results\r\nThe RealmResults returns an empty list, even if the objects are in the table (checked with Realm Studio).\r\n\r\n#### Steps & Code to Reproduce\r\nRequesting the table with multiples IDs always return an empty list, but querying the IDs separately returns a list with the object.\r\n\r\n`realm.where(\"mytable\").equalTo(\"uid\", \"firstUID\").findAll()`-> returns a list with the object\r\n`realm.where(\"mytable\").equalTo(\"uid\", \"secondUID\").findAll()`-> returns a list with the object\r\n\r\n`realm.where(\"mytable\").beginGroup().equalTo(\"uid\", \"firstUID\").or().equalTo(\"uid\", \"secondUID\").endGroup().findAll()`-> returns an empty list\r\n\r\n`realm.where(\"mytable\").in(\"uid\", new String[]{\"firstUID\", \"secondUID\"}).findAll()`-> returns an empty list\r\n\r\nMaybe it has something to do with the following PR: (Realm Core PR #3250).\r\nReverting to 5.9.1 solved the issue.\r\n\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): ? 5.11.0\r\n\r\nRealm Sync feature enabled: No\r\n\r\nAndroid Studio version: ? 3.4 stable\r\n\r\nAndroid Build Tools version: ? 28.0.3\r\n\r\nGradle version: ? 5.1.1\r\n\r\nWhich Android version and device(s): ? Android API 28, Emulator\r\n", "url": "https://github.com/realm/realm-java/issues/6522", "user": "mick1418", "labels": ["O-Community", "T-Bug"], "created": "2019-05-20 14:34:40", "closed": "2019-08-05 21:13:45", "commits": {"c2b1b047d67ccab85b0f49d40f32c6f79015b822": {"commitGHEventType": "referenced", "commitUser": "cmelchior"}}, "ttf": 77.00027777777778, "commitsDetails": [{"commitHash": "c2b1b047d67ccab85b0f49d40f32c6f79015b822", "commitGHEventType": "referenced", "commitUser": "cmelchior", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "java.lang.ArrayIndexOutOfBoundsException: Out of range Bulk update!", "body": "#### Goal\r\nTo update the same property i query \r\n\r\n#### Actual Results\r\n```\r\n Caused by: java.lang.ArrayIndexOutOfBoundsException: Out of range  in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_OsResults.cpp line 334(requested: 20103 valid: 20103)\r\n        at io.realm.internal.OsResults.nativeSetBoolean(Native Method)\r\n        at io.realm.internal.OsResults.setBoolean(OsResults.java:408)\r\n        at io.realm.RealmResults.setBoolean(RealmResults.java:270)\r\n```\r\n\r\n#### Steps & Code to Reproduce\r\n````\r\nrealm.where(Product.class)\r\n                .equalTo(\"priceInfoUpToDate\",false)\r\n                .findAll()\r\n                .setBoolean(\"priceInfoUpToDate\",true);\r\n````\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): ?\r\n5.8.0\r\n\r\nRealm Sync feature enabled: Yes/No\r\nNo\r\nAndroid Build Tools version: ?\r\n3.4.0\r\nGradle version: ?\r\n3.4.0\r\nWhich Android version and device(s): ?\r\nAndroid 9 Galaxy S10+", "url": "https://github.com/realm/realm-java/issues/6521", "user": "idok595", "labels": ["O-Community", "T-Bug"], "created": "2019-05-19 08:18:15", "closed": "2019-05-19 19:29:45", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "applyPermissions onSuccess called but actual data changed later", "body": "I am call `applyPermissions()`,  `onSuccess()` called then i fetch permissions again to update UI list, its return old result and i need to wait until actual data will changed in server to fetch again, i attached change listener to permissions `RealmResult `and i see in the log that `onSuccess `called  before `onChange`.\r\n\r\nAccording to documentation i thought that `onSuccess()` called when the permission successfully modified?\r\n\r\n```\r\npublic void applyPermissions(String email, ConnectionListener callback) {\r\n\r\n        if (currentUser() != null) {\r\n\r\n            PermissionManager pm = currentUser().getPermissionManager();\r\n\r\n            String path = \"/\" + currentUser().getIdentity() + \"/\" + \"defaultName\";//\r\n            String url = AppConsts.REALM_URL + path;\r\n\r\n            UserCondition condition = UserCondition.username(email);\r\n            AccessLevel accessLevel = AccessLevel.WRITE;\r\n            PermissionRequest request = new PermissionRequest(condition, url, accessLevel);\r\n\r\n            //TODO callback not work as accepted, onSuccess called but when fetching data returns old result(delay)\r\n            pm.applyPermissions(request, new PermissionManager.ApplyPermissionsCallback() {\r\n\r\n                @Override\r\n                public void onSuccess() {\r\n                    Log.d(TAG, \"onSuccess: apply permissions\");\r\n                    if (callback != null)\r\n                        callback.onSuccess();\r\n                }\r\n\r\n                @Override\r\n                public void onError(ObjectServerError error) {\r\n                    Log.d(TAG, \"onError: apply permissions \" + error.getErrorMessage());\r\n                    if (callback != null)\r\n                        callback.onError(error.getErrorMessage());\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n```", "url": "https://github.com/realm/realm-java/issues/6450", "user": "pavelpoley", "labels": ["O-Community", "Reproduction-Required", "T-Bug"], "created": "2019-03-01 11:14:25", "closed": "2019-07-30 13:35:51", "commits": {}, "ttf": 151.00027777777777, "commitsDetails": []}, {"title": "Unable to build realm-java with realm-core from source (coreSourcePath set)", "body": "#### Goal\r\nBuilding realm-java with realm-core from source WITHOUT sync.\r\n\r\n#### Actual Results\r\n```\r\nCould not determine the dependencies of task ':realm:kotlin-extensions:compileObjectServerReleaseAidl'.\r\n> Could not resolve all task dependencies for configuration ':realm:kotlin-extensions:objectServerReleaseCompileClasspath'.\r\n   > Could not resolve project :realm:realm-library.\r\n     Required by:\r\n         project :realm:kotlin-extensions\r\n      > Unable to find a matching variant of project :realm:realm-library:\r\n          - Variant 'baseDebugApiElements':\r\n              - Required api 'objectServer' and found incompatible value 'base'.\r\n              - Required com.android.build.api.attributes.BuildTypeAttr 'release' and found incompatible value 'debug'.\r\n              - Found com.android.build.api.attributes.VariantAttr 'baseDebug' but wasn't required.\r\n              - Required com.android.build.gradle.internal.dependency.AndroidTypeAttr 'Aar' and found compatible value 'Aar'.\r\n              - Required org.gradle.usage 'java-api' and found compatible value 'java-api'.\r\n          - Variant 'baseDebugRuntimeElements':\r\n              - Required api 'objectServer' and found incompatible value 'base'.\r\n              - Required com.android.build.api.attributes.BuildTypeAttr 'release' and found incompatible value 'debug'.\r\n              - Found com.android.build.api.attributes.VariantAttr 'baseDebug' but wasn't required.\r\n              - Required com.android.build.gradle.internal.dependency.AndroidTypeAttr 'Aar' and found compatible value 'Aar'.\r\n              - Required org.gradle.usage 'java-api' and found incompatible value 'java-runtime'.\r\n          - Variant 'baseReleaseApiElements':\r\n              - Required api 'objectServer' and found incompatible value 'base'.\r\n              - Required com.android.build.api.attributes.BuildTypeAttr 'release' and found compatible value 'release'.\r\n              - Found com.android.build.api.attributes.VariantAttr 'baseRelease' but wasn't required.\r\n              - Required com.android.build.gradle.internal.dependency.AndroidTypeAttr 'Aar' and found compatible value 'Aar'.\r\n              - Required org.gradle.usage 'java-api' and found compatible value 'java-api'.\r\n          - Variant 'baseReleaseRuntimeElements':\r\n              - Required api 'objectServer' and found incompatible value 'base'.\r\n              - Required com.android.build.api.attributes.BuildTypeAttr 'release' and found compatible value 'release'.\r\n              - Found com.android.build.api.attributes.VariantAttr 'baseRelease' but wasn't required.\r\n              - Required com.android.build.gradle.internal.dependency.AndroidTypeAttr 'Aar' and found compatible value 'Aar'.\r\n              - Required org.gradle.usage 'java-api' and found incompatible value 'java-runtime'.\r\n```\r\n\r\n#### Steps & Code to Reproduce\r\nadded coreSourcePath to realm.properties in rootDir\r\n\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): realm-java v5.9.1 realm-core v5.15.0\r\n\r\nRealm Sync feature enabled: Yes/No\r\n\r\nAndroid Studio version: Not used, building on console with gradle\r\n\r\nAndroid Build Tools version: 27.0.2\r\n\r\nGradle version: 4.9\r\n\r\nWhich Android version and device(s): No device\r\n", "url": "https://github.com/realm/realm-java/issues/6444", "user": "mschickervxob", "labels": ["O-Community", "T-Bug"], "created": "2019-02-27 18:40:22", "closed": "2019-08-02 11:19:20", "commits": {}, "ttf": 155.00027777777777, "commitsDetails": []}, {"title": "PermissionRequest with UserConditions.userName() ", "body": "PermissionRequest with UserConditions.userName()  throw error, UserConditions.userId() work fine.\r\n\r\n> Your request parameters did not validate.\r\n\r\nI am using usernames as emails so i use this format `UserConditions.userName(\"p***@gmail.com\")`\r\n\r\n```\r\n\r\nPermissionManager pm = currentUser().getPermissionManager();\r\n\r\n            String path = \"/id/\" + \"defaultName\";\r\n            String url = AppConsts.REALM_URL + path;\r\n\r\n            UserCondition condition = UserCondition.username(\"p***@gmail.com\");\r\n            AccessLevel accessLevel = AccessLevel.WRITE;\r\n            PermissionRequest request = new PermissionRequest(condition, url, accessLevel);\r\n\r\n            pm.applyPermissions(request, new PermissionManager.ApplyPermissionsCallback() {\r\n\r\n                @Override\r\n                public void onSuccess() {\r\n                    Log.d(TAG, \"onSuccess: apply permissions\");\r\n                }\r\n\r\n                @Override\r\n                public void onError(ObjectServerError error) {\r\n                    // Something went wrong\r\n                    Log.d(TAG, \"onError: apply permissions \"+error.getErrorMessage());;\r\n                }\r\n            });\r\n\r\n```\r\nRealm studio log show\r\n\r\n> Error: Your request parameters did not validate. 'metadataValue': The provided metadata value (p***@gmail.com) matched no users.\r\n\r\nBut it exist for sure, because i copy the email from users lists in realm studio.\r\n\r\nApp users logging with `SyncCredentials.nickname()` , maybe nickName and userName is has different functionality?", "url": "https://github.com/realm/realm-java/issues/6443", "user": "pavelpoley", "labels": ["O-Community", "Reproduction-Required", "T-Bug"], "created": "2019-02-27 12:51:56", "closed": "2019-04-14 13:32:56", "commits": {}, "ttf": 46.000277777777775, "commitsDetails": []}, {"title": "Update realm.io documentation to use version 5.9.0", "body": "https://realm.io/docs/java/latest/ is still pointing to 5.8.0\r\n\r\nwhich has a build error that is fixed in 5.9.0: https://github.com/realm/realm-java/issues/6300", "url": "https://github.com/realm/realm-java/issues/6424", "user": "kassim", "labels": ["O-Community", "T-Bug"], "created": "2019-02-08 09:34:17", "closed": "2019-02-15 13:56:30", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "MissingLibraryException: librealm-jni.so", "body": "#### Goal\nSince switching to a Bundle, a lot of users have been crashing when opening the app. We do not have enough information to directly diagnose the cause, and other issues opened on github are old and do not relate to Bundle.\n\n#### Actual Results\n```\nDevice Information:\nModel: LG-VS985\nAndroid Version: Android 9.0 (December patch)\nCPU Architecture: ARMv7 (32-bit)\n\nLogcat:\nFATAL EXCEPTION: main\nProcess: io.fusetech.stackademia, PID: 22454\njava.lang.RuntimeException: Unable to create application io.fusetech.stackademia.Stackademia: com.getkeepsafe.relinker.MissingLibraryException: librealm-jni.so\nat android.app.ActivityThread.handleBindApplication(ActivityThread.java:5925)\nat android.app.ActivityThread.access$1100(ActivityThread.java:200)\nat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1656)\nat android.os.Handler.dispatchMessage(Handler.java:106)\nat android.os.Looper.loop(Looper.java:193)\nat android.app.ActivityThread.main(ActivityThread.java:6718)\nat java.lang.reflect.Method.invoke(Native Method)\nat com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858)\nCaused by: com.getkeepsafe.relinker.MissingLibraryException: librealm-jni.so\nat com.getkeepsafe.relinker.ApkLibraryInstaller.installLibrary(ApkLibraryInstaller.java:123)\nat com.getkeepsafe.relinker.ReLinkerInstance.loadLibraryInternal(ReLinkerInstance.java:180)\nat com.getkeepsafe.relinker.ReLinkerInstance.loadLibrary(ReLinkerInstance.java:136)\nat com.getkeepsafe.relinker.ReLinker.loadLibrary(ReLinker.java:70)\nat com.getkeepsafe.relinker.ReLinker.loadLibrary(ReLinker.java:57)\nat io.realm.internal.RealmCore.loadLibrary(RealmCore.java:60)\nat io.realm.Realm.initializeRealm(Realm.java:322)\nat io.realm.Realm.init(Realm.java:265)\nat io.fusetech.stackademia.Stackademia.onCreate(Stackademia.java:71)\nat android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1154)\nat android.app.ActivityThread.handleBindApplication(ActivityThread.java:5920)\n... 8 more\n```\n\n#### Steps & Code to Reproduce\n- Install the app\n- Or update the app\n\n#### Version of Realm and tooling\n\nRealm version(s): 5.8.0\n\nRealm Sync feature enabled: Yes\n\nAndroid Studio version: 3.3\n\nAndroid Build Tools version: 28.0.3\n\nGradle version: 4.10.1\n\nWhich Android version and device(s): Varies", "url": "https://github.com/realm/realm-java/issues/6418", "user": "Jonty800", "labels": ["O-Community", "T-Bug"], "created": "2019-02-04 13:29:11", "closed": "2019-11-27 15:01:22", "commits": {}, "ttf": 296.0002777777778, "commitsDetails": []}, {"title": "Can object deletion affects insertions in a changesetObservable ?", "body": "Hi, \r\n\r\nI'm facing an issue regarding the usage of the _asChangesetObservable()_ method. I suspect the root cause has something to do with poor threading / synchronization management in my code but it might just be a misconception about the API behavior as well.\r\n\r\n**1. Goals**\r\n\r\nGiven a RealmObject _Element_ with a _synchronizationState_ property, I want to detect when new elements match the specific state value \"_UPLOADABLE\"_. From there an upload procedure is launched for those new elements. Once the uploading completed, they are deleted from Realm.\r\n\r\n**2. Expected results**\r\n\r\nWhenever an element's state is set to the specific value, a change is triggered with the corresponding insertion.\r\nWhenever an element is deleted, a change is triggered with the corresponding deletion. \r\n\r\n**3. Actual results**\r\n\r\nWhenever an element is deleted, a change is triggered with the corresponding deletion but sometimes the changeset also contains insertion(s) even though there is no new uploadable element, which seems unsettling to me. The edge effect is that, when this happens, an already uploaded element is being uploaded again (then its deletion fails because it has already been deleted after the first upload).\r\n\r\n**4. Steps to reproduce**\r\n\r\n1. Set a change listener on the RealmResult using _asChangesetObservable()_.\r\n2. Update multiple elements states to _\"UPLOADABLE\"_ within a single transaction. The change listener is triggered with the matching insertions : all is fine thus far.\r\n3. Delete elements that have been uploaded, each one in a dedicated transaction. The change listener is triggered multiple times with matching deletions but also, sometimes, with insertion(s).\r\n\r\nSomehow the number of uploadable elements added in step 2 seems to matter : I've never observed the phenomenon with only a couple elements, but the more there is, the more the probability to observe it is high. \r\n\r\n**5. Code sample that highlights the issue**\r\n\r\nhttps://github.com/jrmybrault/realm-changeset-simple-test\r\n\r\nThe code has been reduced to the bare minimum. Notably, the upload procedure has been completely replaced by a simple delay simulation. The UI allows to see the list of elements, add new elements and mark them as uploadable. The issue can be observed in the logs.\r\n\r\n**6. Version of Realm/Android Studio/OS**\r\n\r\nRealm 5.4.1\r\nAndroid Studio 3.1.4\r\nReproduced both on simulator running Nougat and a real device running Oreo", "url": "https://github.com/realm/realm-java/issues/6374", "user": "jrmybrault", "labels": ["O-Community", "T-Bug"], "created": "2018-12-20 10:23:56", "closed": "2018-12-20 16:37:32", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ErrorCode is not correct", "body": "The enum names for the Realm Object Server error codes in `ErrorCode.java` seems to have diverged from their current meaning. \r\n\r\nThis is unfortunate as it is most likely a breaking change to fix it, but we need to update them regardless so they are accurate.\r\n\r\nExample is `BAD_SERVER_VERSION_DOWNLOAD(111)` which is `bad_changeset_header_syntax(111)`\r\n\r\n----\r\n\r\nEDIT: This is actually more severe than that. Core reports errors using `(category, code)`, but only the code is sent to Java, this means that some errors are not being mapped correctly.  We need to fix this so error mapping are done using both the error code and category", "url": "https://github.com/realm/realm-java/issues/6364", "user": "cmelchior", "labels": ["T-Bug"], "created": "2018-12-07 16:29:37", "closed": "2019-01-15 08:35:16", "commits": {}, "ttf": 38.000277777777775, "commitsDetails": []}, {"title": "FindAllAsync doesn't trigger the INITIAL callback for Query-based Realms when offline", "body": "To reproduce:\r\n\r\n1) Use the `objectServerExample`\r\n2) Log into the app to create a user\r\n3) See that the changelistener for the async query is correctly called.\r\n4) Kill the app\r\n5) Go into offline mode\r\n6) Open the app again\r\n7) See that the listener for the async query isn't called when the query completes but is called when a write is made.\r\n", "url": "https://github.com/realm/realm-java/issues/6235", "user": "cmelchior", "labels": ["T-Bug"], "created": "2018-10-18 20:52:40", "closed": "2018-10-22 12:36:18", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Gradle build error:  org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':sdk:transformClassesWithRealmTransformerForDebug'. ", "body": "<!---\r\n\r\n**Questions**: If you have questions about how to use Realm, ask on\r\n[StackOverflow](http://stackoverflow.com/questions/ask?tags=realm).\r\nWe monitor the `realm` tag.\r\n\r\n**Feature Request**: Just fill in the first two sections below.\r\n\r\n**Bugs**: To help you as fast as possible with an issue please describe your issue\r\nand the steps you have taken to reproduce it in as many details as possible.\r\n\r\n-->\r\n\r\n#### Goal\r\n\r\nOn realm-gradle-plugin:5.3.0, the gradle seems to work fine but as I upgrade to realm-gradle-plugin:5.4.0, the build creation is failing.\r\n#### Expected Results\r\n\r\n> ?\r\n\r\n#### Actual Results\r\n\r\n>  org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':sdk:transformClassesWithRealmTransformerForDebug'.\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:100)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:70)\r\n        at org.gradle.api.internal.tasks.execution.OutputDirectoryCreatingTaskExecuter.execute(OutputDirectoryCreatingTaskExecuter.java:51)\r\n        at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:62)\r\n        at org.gradle.api.internal.tasks.execution.ResolveTaskOutputCachingStateExecuter.execute(ResolveTaskOutputCachingStateExecuter.java:54)\r\n        at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:60)\r\n        at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:97)\r\n        at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:87)\r\n        at org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:52)\r\n        at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:52)\r\n        at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:54)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)\r\n        at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:34)\r\n        at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker$1.run(DefaultTaskGraphExecuter.java:248)\r\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:336)\r\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:328)\r\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:199)\r\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110)\r\n        at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:241)\r\n        at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:230)\r\n        at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.processTask(DefaultTaskPlanExecutor.java:123)\r\n        at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.access$200(DefaultTaskPlanExecutor.java:79)\r\n        at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:104)\r\n        at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:98)\r\n        at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.execute(DefaultTaskExecutionPlan.java:626)\r\n        at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.executeWithTask(DefaultTaskExecutionPlan.java:581)\r\n        at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.run(DefaultTaskPlanExecutor.java:98)\r\n        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)\r\n        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)\r\n        at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)\r\nCaused by: java.lang.NullPointerException\r\n        at io.realm.transformer.Utils.getTargetSdk(Utils.java:67)\r\n        at io.realm.transformer.RealmTransformer.sendAnalytics(RealmTransformer.kt:154)\r\n        at io.realm.transformer.RealmTransformer.exitTransform(RealmTransformer.kt:116)\r\n        at io.realm.transformer.RealmTransformer.transform(RealmTransformer.kt:111)\r\n        at com.android.build.api.transform.Transform.transform(Transform.java:288)\r\n        at com.android.build.gradle.internal.pipeline.TransformTask$2.call(TransformTask.java:221)\r\n        at com.android.build.gradle.internal.pipeline.TransformTask$2.call(TransformTask.java:217)\r\n        at com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:102)\r\n        at com.android.build.gradle.internal.pipeline.TransformTask.transform(TransformTask.java:212)\r\n        at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:73)\r\n        at org.gradle.api.internal.project.taskfactory.IncrementalTaskAction.doExecute(IncrementalTaskAction.java:46)\r\n        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:39)\r\n        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:26)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$1.run(ExecuteActionsTaskExecuter.java:121)\r\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:336)\r\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:328)\r\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:199)\r\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:110)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:92)\r\n        ... 29 more\r\n#### Steps & Code to Reproduce\r\n\r\n> Describe your current debugging efforts.\r\n\r\n#### Code Sample\r\n\r\n```java\r\n\r\n> Your code here. Bigger samples should ideally be as separate Android Studio project, \r\n> in gists/repositories or privately at help@realm.io)\r\n\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): ?\r\n\r\nRealm sync feature enabled: yes/no\r\n\r\nAndroid Studio version: 3.1.3\r\n\r\nWhich Android version and device:  \r\n", "url": "https://github.com/realm/realm-java/issues/6082", "user": "sandeepbol", "labels": ["O-Community", "T-Bug"], "created": "2018-07-25 09:53:49", "closed": "2018-08-03 06:01:45", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Build fail with 5.4.0", "body": "updated from 5.3.1 to 5.4.0, then gradle build fails. 'Clean Project' returns the same exception.\r\n\r\n```\r\nFAILURE: Build failed with an exception.\r\n\r\n* What went wrong:\r\nA problem occurred configuring project ':myapp'.\r\n> Cannot change dependencies of configuration ':myapp:api' after it has been included in dependency resolution.\r\n\r\n* Try:\r\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.\r\n\r\n* Get more help at https://help.gradle.org\r\n\r\nBUILD FAILED in 0s\r\n```\r\n\r\nMy project gradle\r\n```\r\nbuildscript {\r\n    ext.kotlin_version = '1.2.60-eap-27'\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }\r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:3.2.0-beta04'\r\n        classpath 'io.realm:realm-gradle-plugin:5.4.0'\r\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\r\n        classpath 'com.google.gms:google-services:4.0.1'\r\n    }\r\n}\r\n\r\nallprojects {\r\n\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        maven { url 'http://clojars.org/repo' }\r\n        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }\r\n    }\r\n}\r\n\r\next {\r\n    minSdk = 17\r\n    targetSdk = 28\r\n    compileSdk = 28\r\n    supportLib = '27.1.1'\r\n    fb = '4.34.0'\r\n    glide = '4.7.1'\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\n```", "url": "https://github.com/realm/realm-java/issues/6080", "user": "Jeff11", "labels": ["O-Community", "T-Bug"], "created": "2018-07-23 09:06:58", "closed": "2018-08-03 06:02:02", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "Critical bug in Realm 5.3.1, instances returned by Realm (by using findFirst(), findAll(), etc.) change to null", "body": "Okay, so my guess is that this one bug is causing a lot of unexpected behaviour in Realm 5.3.1. The following is what I observed:\r\n1) realm.createObject(<Class Name>.class, int id) saves all values except for the id as null or 0. (realm.copyToRealm() works.)\r\n2) Any query (such as findAll(), findFrist(), etc) returns an object(s) with the correct id but all other fields as null.\r\n3) When using a static method to return RealmResults or an Object, the object fields have their correct values inside the function, but change to null once you try using them anywhere else.\r\nEg:\r\n```Java\r\n    public static RealmResults<SubscriptionTypeModel> getAllSubscriptionTypeModelsFromRealm() {\r\n        Realm realm = Realm.getDefaultInstance();\r\n        RealmResults<SubscriptionTypeModel> realmResults =\r\n                        realm.where(SubscriptionTypeModel.class).findAll();\r\n        for (SubscriptionTypeModel i: realmResults) {\r\n            Log.d(TAG,\"getAllSubscriptionModelsFromRealm, id: \" + i.id);\r\n            Log.d(TAG,\"getAllSubscriptionModelsFromRealm, name: \" + i.name);\r\n            Log.d(TAG,\"getAllSubscriptionModelsFromRealm, minage: \" + i.minAge);\r\n            Log.d(TAG,\"getAllSubscriptionModelsFromRealm, maxage: \" + i.maxAge);\r\n        }\r\n        return realmResults;\r\n    }\r\n```\r\nThe logs in this function will print the correct values. However if you log the returned results in another function of another class, all objects will have the correct id, but all other fields will be either null or 0.\r\n\r\nNOTE: To anyone who is facing the same issues, you can downgrade your Realm version to 5.0.1 and Realm will start working fine.", "url": "https://github.com/realm/realm-java/issues/6056", "user": "m-Bilal", "labels": ["O-Community", "T-Bug"], "created": "2018-07-07 04:32:58", "closed": "2018-07-18 10:36:24", "commits": {"8aac7d7dab0ddf35624ca2af7aa987995fcceb1e": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "8aac7d7dab0ddf35624ca2af7aa987995fcceb1e", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "People report that the incremental transformer doesn't always work", "body": "https://stackoverflow.com/q/51008957/2413303\r\n\r\nHe says 5.3.x was returning nulls and 0s on field access, while 5.1.0 returns the correct values. \r\n\r\nThis implies that the incremental transformer sometimes silently fails (or just ignores certain parts). ", "url": "https://github.com/realm/realm-java/issues/6041", "user": "Zhuinden", "labels": ["O-Community", "T-Bug"], "created": "2018-06-25 11:09:12", "closed": "2018-07-18 10:36:41", "commits": {}, "ttf": 22.00027777777778, "commitsDetails": []}, {"title": "Always query with null RealmList", "body": "First, i get a json array from serve.\r\n[\r\n {'id': '1', 'title': 'a'},  {'id': '2', 'title': 'b'} \r\n]\r\n\r\ni force to create RealmList. but still get null. For 3.5.0, i don't need to check null. Also, i call the executeTransactionAsync again. Always get null.\r\n\r\n```java\r\npublic class Plan extends RealmObject {\r\n    @PrimaryKey\r\n    private String id;\r\n    String title = \"\";\r\n    public RealmList<Place> places;\r\n}\r\n\r\nrealm.executeTransactionAsync(\r\n                    new Realm.Transaction() {\r\n                        @Override\r\n                        public void execute(Realm realm) {\r\n                           realm.createOrUpdateAllFromJson(Plan.class, jsonArray);\r\n                           Plan plan = realm.where(Plan.class).equalTo(\"id\", \"1\").findFirst();\r\n                           Log.d(plan.places); // <--- always null\r\n                           if(null == plan.places){\r\n                              plan.places = new RealmList<>();\r\n                           }\r\n                        }\r\n                    });\r\n```\r\n\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): Upgrade from 3.5.0 to 5.2.0\r\n\r\nRealm sync feature enabled: no\r\nAndroid Studio version: 3.1.3\r\nWhich Android version and device: 7.0.0\r\n", "url": "https://github.com/realm/realm-java/issues/6009", "user": "KingWu", "labels": ["O-Community", "Reproduction-Required", "T-Bug"], "created": "2018-06-09 06:09:31", "closed": "2018-11-28 11:50:14", "commits": {}, "ttf": 172.00027777777777, "commitsDetails": []}, {"title": "realmQuery.distinct().count() might return incorrect value", "body": "A mapping of a Stack Overflow question that is most likely a bug.\r\n\r\n#### Goal\r\n\r\n> What do you want to achieve?\r\n\r\nEvaluate number of distinct items without having to use `findAll().size()`\r\n\r\n#### Expected Results\r\n\r\n`realm.where(Blah.class).distinct(\"birthday\").count()` should work\r\n\r\n#### Actual Results\r\n\r\nCount returns the size of the full table data set.\r\n\r\n#### Steps & Code to Reproduce\r\n\r\nSee https://stackoverflow.com/questions/50363904/realm-giving-wrong-result-count-on-distinct\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 5.1.0\r\n\r\nRealm sync feature enabled: no", "url": "https://github.com/realm/realm-java/issues/5958", "user": "Zhuinden", "labels": ["O-Community", "T-Bug"], "created": "2018-05-17 11:06:33", "closed": "2018-07-17 19:38:48", "commits": {}, "ttf": 61.000277777777775, "commitsDetails": []}, {"title": "RealmQuery between problems with double datatype", "body": "I want to get data from Realm Cloud with `between` filter 2 numbers. Previously I used `long` type for `date` column and It will return value if I query this:\r\n```\r\nlong start = calendarStart.getTimeInMillis() / 1000;\r\nlong end = calendarEnd.getTimeInMillis() / 1000;\r\n\r\nresult =  getRealmSyncInstance()\r\n                .where(MyClass.class)\r\n//                .greaterThanOrEqualTo(\"date\", start)\r\n//                .lessThanOrEqualTo(\"date\", end)\r\n                .between(\"date\", start, end)\r\n                .sort(\"date\", Sort.ASCENDING)\r\n                .findAllAsync();\r\n```\r\nThen I clear Realm Cloud and change local `MyClass` `date`, start, end from `long` to `double`. Then no result received.\r\nI also use `greaterThanOrEqualTo` and `lessThanOrEqualTo` but no luck.\r\n\r\nSeem like it only happens on realm cloud.\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 5.0.0\r\n\r\nRealm sync feature enabled: yes\r\n\r\nAndroid Studio version: 3.1\r\n\r\nWhich Android version and device: Oreo\r\n", "url": "https://github.com/realm/realm-java/issues/5928", "user": "kainjinez", "labels": ["O-Community", "T-Bug"], "created": "2018-05-02 09:22:58", "closed": "2018-09-06 12:58:41", "commits": {}, "ttf": 127.00027777777778, "commitsDetails": []}, {"title": "Primary key migration from optional to required deleting rows", "body": "<!---\r\n\r\n**Questions**: If you have questions about how to use Realm, ask on\r\n[StackOverflow](http://stackoverflow.com/questions/ask?tags=realm).\r\nWe monitor the `realm` tag.\r\n\r\n**Feature Request**: Just fill in the first two sections below.\r\n\r\n**Bugs**: To help you as fast as possible with an issue please describe your issue\r\nand the steps you have taken to reproduce it in as many details as possible.\r\n\r\n-->\r\n\r\nHi guys, i just encountered a weird problem and don't know if is a bug or i just don't know how to\r\nmigrate things. \r\nI found a workaround for that, create new field with required attribute, transform to get the value of the old primary key, remove old primary key and set primary key to the newly created field.\r\n\r\n#### Goal\r\nChange primary key name and required to true (Kotlin non-null but not @Required)\r\n\r\n#### Expected Results\r\nThe primary key with the new name and the field to be required\r\n\r\n#### Actual Results\r\nMigration removing 4 of 5 rows in the table after seting setRequired(Y, true)\r\nI checked the operation before and all the rows have the primary key with a value and are not null\r\n\r\n#### Steps & Code to Reproduce\r\nDidn't check with another project but in my case was:\r\nHave a realm object schema with nullable primary key.\r\nMultiple objects of that type with values in the primary key.\r\nMake a migration changing the name and required to true\r\nThe new table contains only one row and not the 5 before the migration\r\n\r\n\r\n#### Code Sample\r\n\r\n```java\r\n\r\n> Your code here. Bigger samples should ideally be as separate Android Studio project, \r\n> in gists/repositories or privately at help@realm.io)\r\n\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): ?\r\n4.3.3\r\nRealm sync feature enabled: yes/no\r\nNo\r\nAndroid Studio version: ?\r\n3.1.1\r\nWhich Android version and device: ?\r\n7.0", "url": "https://github.com/realm/realm-java/issues/5899", "user": "eisamat", "labels": ["T-Bug"], "created": "2018-04-13 17:35:13", "closed": "2018-04-25 09:30:39", "commits": {"d45d04a60b02c3ea6fb59457b11915a182b2ba0c": {"commitGHEventType": "referenced", "commitUser": "cmelchior"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "d45d04a60b02c3ea6fb59457b11915a182b2ba0c", "commitGHEventType": "referenced", "commitUser": "cmelchior", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "RealmList.move behaves incorrectly if RealmList is unmanaged", "body": "#### Goal\r\nI have an unmanaged `RealmList` with multiple elements. I want to update it via the `move(int oldPos, int newPos)` method to notify it that an element has changed positions.\r\n\r\nScenario 1: Move an item to a higher position:\r\n```kotlin\r\nclass MyObject(var label: String) : RealmObject()\r\n\r\nval myList = RealmList<MyObject>()\r\nmyList.add(MyObject(\"A\"))\r\nmyList.add(MyObject(\"B\"))\r\n\r\nmyList.move(0, 1)\r\n\r\nassert(myList[0]?.label == \"B\")\r\nassert(myList[1]?.label == \"A\")\r\n```\r\n\r\nScenario 2: Move an item to a lower position:\r\n```kotlin\r\nclass MyObject(var label: String) : RealmObject()\r\n\r\nval myList = RealmList<MyObject>()\r\nmyList.add(MyObject(\"A\"))\r\nmyList.add(MyObject(\"B\"))\r\n\r\nmyList.move(1, 0)\r\n\r\nassert(myList[0]?.label == \"B\")\r\nassert(myList[1]?.label == \"A\")\r\n```\r\n\r\n#### Expected Results\r\nIn both scenarios, I expect that \"A\" and \"B\" have swaped places, i.e., my list is now \"B\", \"A\".\r\n\r\n#### Actual Results\r\nIn scenario 1 the list remains unchanged. (Still \"A, \"B\")\r\nIn scenario 2 the items have swaped places as expected.\r\n\r\n#### Steps & Code to Reproduce\r\nSee my code samples above. The problem only occurs with unmanaged `RealmList`. The items reorder correctly when the list is managed.\r\n\r\n#### Code Sample\r\nSee above.\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 5.0.0\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 3.0.1\r\n\r\nWhich Android version and device: Android 7.0 on an LG G6\r\n", "url": "https://github.com/realm/realm-java/issues/5860", "user": "Waboodoo", "labels": ["T-Bug"], "created": "2018-03-26 15:21:47", "closed": "2018-04-04 07:12:31", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Problems with partial sync tutorial app", "body": "We assume that you have built the first version of the demo app without partial sync and have the data syncked with the cloud.\r\n\r\nIf you then go on and build the advanced app with partial sync, then it cannot sync with the cloud. You get logs like this:\r\n```\r\n03-07 09:22:29.139 4099-4099/io.realm.todo W/IInputConnectionWrapper: finishComposingText on inactive InputConnection\r\n03-07 09:22:29.139 4099-4099/io.realm.todo W/IInputConnectionWrapper: finishComposingText on inactive InputConnection\r\n03-07 09:22:29.214 4099-4150/io.realm.todo E/REALM_SYNC: Connection[1]: Websocket: HTTP response is 502-504\r\n03-07 09:22:29.216 4099-4150/io.realm.todo W/REALM_JAVA: Unknown error code: 8\r\n03-07 09:22:29.216 4099-4150/io.realm.todo E/REALM_JAVA: Session Error[realms://my-shopping-list.us1a.cloud.realm.io/items]: UNKNOWN(-1)\r\n                                                         Bad WebSocket handshake response 502-504 received\r\n03-07 09:22:30.070 4099-4150/io.realm.todo E/REALM_SYNC: Connection[1]: Websocket: HTTP response is 502-504\r\n```\r\nThe app is running on Nexus 5X / Android 8.1.0", "url": "https://github.com/realm/realm-java/issues/5811", "user": "jedelbo", "labels": ["P-1-Required", "T-Bug"], "created": "2018-03-07 08:33:55", "closed": "2018-03-08 07:03:07", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Problems in advanced tutorial", "body": "A couple of problems were identified when trying to follow https://docs.realm.io/cloud/android-demo-app/adding-partial-sync:\r\n\r\nUnder \"Creating a partial sync configuration\":\r\n- In the first code snippet, `REALM_URL` should be `REALM_BASE_URL`\r\n- Saying that the rest of the code is unchanged is not true. There are changes in the import section and you have to replace `this.goToItemsActivity` with `setUpRealmAndGoToListTaskActivity`\r\n\r\nYou will have to add `title_select_projects` to strings.xml\r\n\r\nThe `ProjectsActivity` has to be added to the manifest", "url": "https://github.com/realm/realm-java/issues/5807", "user": "jedelbo", "labels": ["P-1-Required", "T-Bug"], "created": "2018-03-06 18:43:03", "closed": "2018-03-12 15:16:09", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Kotlin extensions from oneOf group don't support arrays with not-nulls", "body": "<!---\r\n\r\n**Questions**: If you have questions about how to use Realm, ask on\r\n[StackOverflow](http://stackoverflow.com/questions/ask?tags=realm).\r\nWe monitor the `realm` tag.\r\n\r\n**Feature Request**: Just fill in the first two sections below.\r\n\r\n**Bugs**: To help you as fast as possible with an issue please describe your issue\r\nand the steps you have taken to reproduce it in as many details as possible.\r\n\r\n-->\r\n\r\n#### Goal\r\n\r\n> I want to pass `Array<Long>` as query parameter to `oneOf` function from Kotlin extensions\r\n\r\n#### Actual Results\r\n\r\n> `Array<Long>` can't be passed to `oneOf` function, because Kotlin extensions for this function can consume only arrays of nullable types (for example `Array<Long?>` in my case) while with old `in` function everything works as expected. Perhaps you should add `out` variance to generics in these extensions like this:\r\n\r\n```kotlin\r\n\r\nfun <T : RealmModel> RealmQuery<T>.oneOf(propertyName: String, value: Array<out Long?>): RealmQuery<T> {\r\n        return this.`in`(propertyName, value)\r\n}\r\n\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 4.3.3\r\n\r\nAndroid Studio version: 3.0.1\r\n", "url": "https://github.com/realm/realm-java/issues/5717", "user": "denispo3", "labels": ["T-Bug"], "created": "2018-01-26 14:46:06", "closed": "2018-01-29 12:27:27", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "findFirst() not working with sort()", "body": "Using DynamicRealm 4.3.3 \r\n\r\nA) \r\n`DynamicRealmObject lastTrack = realm.where(Model.TRACK).sort(\"timeStart\", Sort.DESCENDING).findAll().first(null);`\r\nand \r\nB) \r\n`DynamicRealmObject lastTrack = realm.where(Model.TRACK).sort(\"timeStart\", Sort.DESCENDING).findFirst();`\r\n\r\nA) and B) have different results. A) is correct working, B) not working\r\n", "url": "https://github.com/realm/realm-java/issues/5714", "user": "paldrian", "labels": ["O-Community", "T-Bug"], "created": "2018-01-26 09:49:12", "closed": "2018-03-21 09:05:17", "commits": {}, "ttf": 53.000277777777775, "commitsDetails": []}, {"title": "Why all gradle plugin is build on alpha android plugin?", "body": "It will cause the test only apk problem of android studio\r\n\r\nsee this: [https://stackoverflow.com/questions/14643564/android-error-install-failed-test-only](https://stackoverflow.com/questions/14643564/android-error-install-failed-test-only)", "url": "https://github.com/realm/realm-java/issues/5640", "user": "wejoy", "labels": ["T-Bug"], "created": "2017-12-22 05:51:00", "closed": "2018-03-05 09:45:26", "commits": {}, "ttf": 73.00027777777778, "commitsDetails": []}, {"title": "Reconnect seems to be broken since 4.3.0", "body": "On version `4.3.0` or later  the sync session doesn't reconnect after a connection loss. With version `4.2.0` reconnecting works fine. I'm using version `2.2.0` of the Realm Object Server.\r\n\r\nThis is what is logged by Realm:\r\n```\r\n12-15 23:50:33.038 30915-30948/my.app.name E/REALM_SYNC: Connection[2]: Reading failed: Software caused connection abort\r\n12-15 23:50:33.039 30915-30948/my.app.name I/REALM_SYNC: Connection[2]: Connection closed due to error\r\n12-15 23:50:33.039 30915-30948/my.app.name D/REALM_JNI: error_handler lambda invoked\r\n12-15 23:50:33.040 30915-30948/my.app.name E/MyApp: BAD_SYNTAX(103)\r\n                                                                          Software caused connection abort\r\n                                                                              at io.realm.SyncSession.notifySessionError(SyncSession.java:178)\r\n                                                                              at io.realm.SyncManager.notifyErrorHandler(SyncManager.java:324)\r\n12-15 23:50:33.040 30915-30948/my.app.name D/REALM_SYNC: Connection[2]: Reconnecting in 0 milliseconds\r\n12-15 23:50:33.040 30915-30948/my.app.name I/REALM_SYNC: Closing Realm file: /data/data/my.app.name/files/realm-object-server/l9NZ8m0iVHhX0Zoce2cFcJJxoCD3/l9NZ8m0iVHhX0Zoce2cFcJJxoCD3/default\r\n12-15 23:50:33.040 30915-30948/my.app.name E/REALM_SYNC: Connection[1]: Reading failed: Software caused connection abort\r\n12-15 23:50:33.040 30915-30948/my.app.name I/REALM_SYNC: Connection[1]: Connection closed due to error\r\n12-15 23:50:33.040 30915-30948/my.app.name D/REALM_JNI: error_handler lambda invoked\r\n12-15 23:50:33.041 30915-30948/my.app.name E/MyApp: BAD_SYNTAX(103)\r\n                                                                          Software caused connection abort\r\n                                                                              at io.realm.SyncSession.notifySessionError(SyncSession.java:178)\r\n                                                                              at io.realm.SyncManager.notifyErrorHandler(SyncManager.java:324)\r\n12-15 23:50:33.041 30915-30948/my.app.name D/REALM_SYNC: Connection[1]: Reconnecting in 0 milliseconds\r\n12-15 23:50:33.041 30915-30948/my.app.name I/REALM_SYNC: Closing Realm file: /data/data/my.app.name/files/realm-object-server/l9NZ8m0iVHhX0Zoce2cFcJJxoCD3/ZX9HtldX1zehzBx6YCS70EUfsg53/default\r\n12-15 23:50:33.788 30915-30915/my.app.name D/REALM_JAVA: NetworkListener: Connection available\r\n12-15 23:50:33.805 30915-30915/my.app.name D/REALM_JAVA: NetworkListener: Connection lost\r\n12-15 23:50:33.840 30915-30915/my.app.name D/REALM_JAVA: NetworkListener: Connection lost\r\n12-15 23:50:57.532 30915-30915/my.app.name D/REALM_JAVA: NetworkListener: Connection available\r\n12-15 23:50:59.203 30915-30915/my.app.name D/REALM_JAVA: NetworkListener: Connection available\r\n12-15 23:50:59.227 30915-30915/my.app.name D/REALM_JAVA: NetworkListener: Connection available\r\n```", "url": "https://github.com/realm/realm-java/issues/5626", "user": "joluet", "labels": ["T-Bug"], "created": "2017-12-15 23:03:25", "closed": "2018-01-18 12:48:14", "commits": {}, "ttf": 33.000277777777775, "commitsDetails": []}, {"title": "4.3.0 adds kotlin stdlib into project", "body": "After update from 4.2.0, I found that my project had a dependency on kotlin stdlib.\r\n\r\nWell, I'm glad that kotlin became official language for Android Development, but isn't it too soon? :)\r\nI guess, that is a bug and kotlin + extensions must be optional.\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 4.3.0\r\nRealm sync feature enabled: no\r\nAndroid Studio version: 3.0.1", "url": "https://github.com/realm/realm-java/issues/5587", "user": "Kazemir", "labels": ["T-Bug"], "created": "2017-12-05 16:08:33", "closed": "2017-12-06 10:18:40", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Crash on deleting realm after migrating to 4.1.1 from 3.3.1", "body": "We are using below code to to open realm instance. It used to work fine for version 3.1.1\r\nIdea is that we have some migrations for last two three versions but for version before that we dont so it throws exception or in case migration fails we delete that current realm and open again.\r\n\r\nthis used to work fine in 3.1.1 how ever we just upgraded to 4.1.1 last sprint and after it we are seeing a-lot of crashes.\r\n```\r\n            Realm.init(context);\r\n            RealmConfiguration configuration = new RealmConfiguration.Builder()\r\n                    .schemaVersion(<version>)\r\n                    .migration(<migrator>)\r\n                    .build();\r\n\r\n            try {\r\n                defaultInstance = Realm.getInstance(configuration );\r\n            } catch (IllegalArgumentException | IllegalStateException | RealmMigrationNeededException ex) {\r\n                Realm.deleteRealm(configuration);\r\n                defaultInstance = Realm.getInstance(configuration);\r\n            }\r\n```\r\n\r\n#### Expected Results\r\n\r\n>it should not crash\r\n\r\n#### Actual Results\r\n\r\nThis is the exception we are getting\r\n```\r\nCaused by java.lang.IllegalStateException: It's not allowed to delete the file associated with an open Realm. Remember to close() all the instances of the Realm before deleting its file: /data/data/com.x.x/files/default.realm\r\n       at io.realm.Realm.io.realm.BaseRealm.deleteRealm(SourceFile:14624)\r\n       at com.x.x.x.RealmManager.getDefaultInstance(SourceFile:52)\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 4.1.1\r\n\r\nRealm sync feature enabled: yes/no\r\n\r\nAndroid Studio version: 3.0.0\r\n\r\nWhich Android version and device: no specific version happening on almost every os\r\n", "url": "https://github.com/realm/realm-java/issues/5570", "user": "AamirAbro", "labels": ["T-Bug"], "created": "2017-11-27 08:32:51", "closed": "2017-11-29 13:57:27", "commits": {"6370f294697551cfe675a63d2779d7ac7cd4034e": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "a0d73b933c2f9fd6a6b463e5907747edcf801f92": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "6370f294697551cfe675a63d2779d7ac7cd4034e", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a0d73b933c2f9fd6a6b463e5907747edcf801f92", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["de8167df3fa47aaacb386851e538b39c42f39ae0"], "nameRev": "a0d73b933c2f9fd6a6b463e5907747edcf801f92 tags/push~3^2~2", "commitMessage": "Life cycle of temp OsSharedRealm in callbacks (#5576)\n\nEvery temp OsSharedRealm created during construction for the callbacks\r\nhave to be closed before the exception throws to users.\r\nclose #5570\r\n", "commitDateTime": "2017-11-29 21:57:18", "authoredDateTime": "2017-11-29 21:57:18", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmTests.java", "insertions": 24, "deletions": 1, "lines": 25}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_OsRealmConfig.cpp", "insertions": 2, "deletions": 8, "lines": 10}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/OsSharedRealm.java", "insertions": 37, "deletions": 2, "lines": 39}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmTests.getInstance_migrationExceptionThrows_migrationBlockDefiend_realmInstancesShouldBeClosed()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OsSharedRealm.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.OsSharedRealm", "TOT": 9, "UPD": 0, "INS": 7, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "NoClassDefFoundError (SafeVarargs) API 17", "body": "<!---\r\n\r\n**Questions**: If you have questions about how to use Realm, ask on\r\n[StackOverflow](http://stackoverflow.com/questions/ask?tags=realm).\r\nWe monitor the `realm` tag.\r\n\r\n**Feature Request**: Just fill in the first two sections below.\r\n\r\n**Bugs**: To help you as fast as possible with an issue please describe your issue\r\nand the steps you have taken to reproduce it in as many details as possible.\r\n\r\n-->\r\n\r\n#### Goal\r\n\r\n> Use realm-java on android api level 17\r\n\r\n#### Expected Results\r\n\r\n> realm-java does not crash on api level 17\r\n\r\n#### Actual Results\r\n\r\n>  I am encountering the following exception when I upgrade my project from 3.7.2 to 4.1.0: java.lang.NoClassDefFoundError: java/lang/SafeVarargs. This is only occurring on api level 17, all apis above 17 seem to work fine. Before this crash I get an error specifically regarding RealmList: \r\nE/dalvikvm: Unable to resolve Lio/realm/RealmList; annotation class 7880\r\n\r\n#### Steps & Code to Reproduce\r\n\r\n> Fairly certain this is occurring due to the recent use of the SafeVarargs annotation in RealmList and RealmConfiguration. This can be reproduced by using a RealmList within a project on the api level 17 emulator.\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 4.1.0\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.3.3\r\n\r\nWhich Android version and device: Emulator, API 17.\r\n", "url": "https://github.com/realm/realm-java/issues/5463", "user": "gremzor", "labels": ["T-Bug"], "created": "2017-10-24 21:09:49", "closed": "2017-10-26 09:54:53", "commits": {"f58cca48f67313fab55c7e08f6b3878973757024": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}, "68f4e79404fe6ed991b1ec40c7dee5ced6eb58c1": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "f58cca48f67313fab55c7e08f6b3878973757024", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "68f4e79404fe6ed991b1ec40c7dee5ced6eb58c1", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["dc0f5ecd5c286b366d52ddceb2cd4d9d315a9b06"], "nameRev": "68f4e79404fe6ed991b1ec40c7dee5ced6eb58c1 tags/v4.1.1~4", "commitMessage": " Removed @SafeVarargs annotation since it's not available until API 19 (#5469)\n\n* removed @SafeVarargs annotation since it's not available until API 19, fixes #5463", "commitDateTime": "2017-10-26 10:54:44", "authoredDateTime": "2017-10-26 10:54:44", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmConfiguration.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmList.java", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmConfiguration.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmConfiguration.Builder.schema(java.lang.Class,java.lang.Class[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RealmList.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Error in javadoc of findAllAsync(): \"Finds all objects that fulfill the query conditions and sorted by specific field name\"", "body": "There isn't a fieldName parameter. Someone copypasted the description from findAllSorted which is below.\r\n\r\nhttps://github.com/realm/realm-java/blob/d9e0ae4ac083286c5440cc4bdb0f18d9c70fdb45/realm/realm-library/src/main/java/io/realm/RealmQuery.java#L1805-L1812\r\n\r\nI checked and it isn't fixed in 4.0\r\n\r\nhttps://github.com/realm/realm-java/blob/master-4.0/realm/realm-library/src/main/java/io/realm/RealmQuery.java#L1805", "url": "https://github.com/realm/realm-java/issues/5422", "user": "octarino", "labels": ["T-Bug"], "created": "2017-10-14 17:08:27", "closed": "2017-10-17 02:40:55", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Cannot open the read only Realm. 'Permission' is missing ", "body": "ISSUE TYPE: BUG\r\n=============\r\n\r\n#### Goal\r\n\r\n> Fetch permissions for a user\r\n\r\n#### Expected Results\r\n\r\n> Successful fetch of permissions\r\n\r\n#### Actual Results\r\n\r\n>  REALM_JAVA: io.realm.exceptions.RealmMigrationNeededException: Cannot open the read only Realm. 'Permission' is missing.\r\n                                                                   at io.realm.Realm.<init>(Realm.java:165)\r\n                                                                   at io.realm.Realm.createInstance(Realm.java:417)\r\n                                                                   at io.realm.RealmCache.doCreateRealmOrGetFromCache(RealmCache.java:348)\r\n                                                                   at io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:281)\r\n                                                                   at io.realm.RealmCache$CreateRealmRunnable.run(RealmCache.java:115)\r\n                                                                   at io.realm.internal.async.BgPriorityRunnable.run(BgPriorityRunnable.java:34)\r\n                                                                   at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)\r\n                                                                   at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n                                                                   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)\r\n                                                                   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n                                                                   at java.lang.Thread.run(Thread.java:764)\r\n                                                               `CreateRealmRunnable` failed.\r\n\r\n#### Steps & Code to Reproduce\r\n\r\n> Following instructions [here](https://realm.io/docs/java/3.7.1/#retrieving-permissions)\r\n\r\n#### Code Sample\r\n\r\n```java\r\npublic static void fetchPermissions() {\r\n        final PermissionManager pm = SyncUser.currentUser().getPermissionManager();\r\n        // Retrieve\r\n        pm.getPermissions(new PermissionManager.PermissionsCallback() {\r\n            @Override\r\n            public void onSuccess(RealmResults<Permission> permissions) {\r\n\r\n                Log.i(TAG, \"PRINTING ALL PERMISSIONS\");\r\n                printPermissions(permissions);\r\n\r\n                // Change listeners can be registered\r\n                // The PermissionManager keeps a reference to these as long as the Permission Manager\r\n                // is open, so they do not risk getting GC'ed\r\n                permissions.addChangeListener(new RealmChangeListener<RealmResults<Permission>>() {\r\n                    @Override\r\n                    public void onChange(RealmResults<Permission> permissions) {\r\n                        Log.i(TAG, \"CHANGED PERMISSIONS\");\r\n                        printPermissions(permissions);\r\n                    }\r\n                });\r\n                pm.close();\r\n            }\r\n\r\n            @Override\r\n            public void onError(ObjectServerError error) {\r\n                // handle error\r\n                Log.i(TAG, \"Error fetching permissions\");\r\n                Log.i(TAG, error.toString());\r\n                pm.close();\r\n            }\r\n        });\r\n}\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 3.7.1\r\n\r\nRealm sync feature enabled: yes\r\n\r\nAndroid Studio version: 2.3.3\r\n\r\nWhich Android version and device: ?\r\n", "url": "https://github.com/realm/realm-java/issues/5414", "user": "jaisontj", "labels": ["T-Bug"], "created": "2017-10-12 15:26:04", "closed": "2017-10-16 15:15:36", "commits": {"8f8b9d5087f22897f61d98e3afc5de08d983a7ca": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "0d53f67e519be979a4eb17fafc3a5cbdc07dc49d": {"commitGHEventType": "closed", "commitUser": "cmelchior"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "8f8b9d5087f22897f61d98e3afc5de08d983a7ca", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0d53f67e519be979a4eb17fafc3a5cbdc07dc49d", "commitGHEventType": "closed", "commitUser": "cmelchior", "commitParents": ["19a434d795b3d8ebdf576fc85dd49096679512d6"], "nameRev": "0d53f67e519be979a4eb17fafc3a5cbdc07dc49d tags/v4.0.0~2^2~2", "commitMessage": "Remove readonly for defaultPermissionRealmConfig\n\nclose #5414\n", "commitDateTime": "2017-10-13 21:50:15", "authoredDateTime": "2017-10-13 18:13:28", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/PermissionManager.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PermissionManager.java", "spoonMethods": [{"spoonMethodName": "io.realm.PermissionManager", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0d53f67e519be979a4eb17fafc3a5cbdc07dc49d"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3.0, "deletions": 1.0, "lines": 4.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3.0, "UPD": 1.0, "INS": 0.0, "MOV": 1.0, "DEL": 1.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-library/src/objectServer/java/io/realm"], "changesInPackagesSPOON": ["io.realm.PermissionManager"]}, {"title": "Missing Collection notifications", "body": "We have huge problems on CI with tests timing out with what looks like notifications being skipped.\r\nI was able to somewhat reproduce it locally, but it looks very timing dependant and @beeender has not been able to verify on his machine:\r\n\r\nReproduce\r\n1) Install ROS locally `npm install -g realm-object-server@rc`\r\n2) Disable `startSyncServer/stopSyncServer` in `StandardIntegrationTest` class\r\n3) Run `PermissionManagerTests#getPermissions_updatedWithNewRealms` once from Android Studio to install test app on the device and see that it runs green\r\n4) Goto commandline and run \r\nI\u2019m running this script:\r\n```\r\n#!/bin/bash\r\nadb shell am instrument -w -r   -e debug false -e class io.realm.PermissionManagerTests#getPermissions_updatedWithNewRealms io.realm.test/android.support.test.runner.AndroidJUnitRunner\r\nwhile [ $? -eq 0 ]; do\r\n    adb shell am instrument -w -r   -e debug false -e class io.realm.PermissionManagerTests#getPermissions_updatedWithNewRealms io.realm.test/android.support.test.runner.AndroidJUnitRunner\r\ndone\r\n```\r\n\r\nwith \r\n\r\n```\r\nwhile ./test.sh; do :; done\r\n```\r\n5) Prepare to wait for a while. ROS might eventually run out of filedescriptors on Mac, in that case, restart server and script\r\n6) When the bug is caught, the test will timeout and show the below output. The log statements probably doesn't make much sense, but the important ones are the `before_advance` and `after_advance` which is used to trigger notifications.\r\n\r\nThis is the code in `after_advance`:\r\n```\r\nvoid CollectionNotifier::after_advance()\r\n{\r\n    __android_log_print(ANDROID_LOG_ERROR, \"OS\", \"After advance: Size %d\", m_callbacks.size());\r\n    for_each_callback([&](auto& lock, auto& callback) {\r\n        if (callback.initial_delivered && callback.changes_to_deliver.empty()) {\r\n            __android_log_print(ANDROID_LOG_ERROR, \"OS\", \"After advance: Ignore callback (%s, %s)\", callback.initial_delivered?\"true\":\"false\", callback.changes_to_deliver.empty()?\"true\":\"false\");\r\n            return;\r\n        }\r\n        callback.initial_delivered = true;\r\n\r\n        auto changes = std::move(callback.changes_to_deliver);\r\n        // acquire a local reference to the callback so that removing the\r\n        // callback from within it can't result in a dangling pointer\r\n        auto cb = callback.fn;\r\n        lock.unlock();\r\n        __android_log_print(ANDROID_LOG_ERROR, \"OS\", \"After advance: Trigger callback (%s, %s)\", callback.initial_delivered?\"true\":\"false\", callback.changes_to_deliver.empty()?\"true\":\"false\");\r\n        cb.after(changes);\r\n    });\r\n}\r\n```\r\n\r\nLogs\r\n```\r\nSuccessfull attempt\r\n10-12 10:02:45.266 8690-8709/? E/OS: Add callback\r\n10-12 10:02:45.267 8690-8709/? E/OS: After advance: Size 1\r\n10-12 10:02:45.267 8690-8709/? E/OS: After advance: Trigger callback (true, true)\r\n10-12 10:02:45.268 8690-8709/? E/REALM_JAVA: Size: 2, State: ACTIVE\r\n10-12 10:02:45.268 8690-8709/? E/OS: Remove callback\r\n10-12 10:02:45.320 8690-8709/? E/OS: Add callback\r\n10-12 10:02:45.321 8690-8709/? E/OS: After advance: Trigger callback (true, true)\r\n10-12 10:02:45.321 8690-8709/? E/OS: After advance: Size 1\r\n10-12 10:02:45.321 8690-8709/? E/OS: After advance: Ignore callback (true, true) <!--\r\n10-12 10:02:45.321 8690-8709/? E/OS: After advance: Size 0\r\n10-12 10:02:45.333 8690-8709/? E/OS: Before advance: Size 1\r\n10-12 10:02:45.333 8690-8709/? E/OS: Before advance: Size 0\r\n10-12 10:02:45.333 8690-8709/? E/OS: After advance: Size 1\r\n10-12 10:02:45.334 8690-8709/? E/OS: After advance: Trigger callback (true, true)\r\n10-12 10:02:45.336 8690-8709/? E/REALM_JAVA: Testlistener: 3\r\n10-12 10:02:45.338 8690-8709/? E/OS: After advance: Size 0\r\n\r\n\r\nFailed attemp:\r\n10-12 10:09:37.937 13397-13416/? E/OS: Add callback\r\n10-12 10:09:37.937 13397-13416/? E/OS: After advance: Size 1\r\n10-12 10:09:37.937 13397-13416/? E/OS: After advance: Trigger callback (true, true)\r\n10-12 10:09:37.938 13397-13416/? E/REALM_JAVA: Size: 2, State: ACTIVE\r\n10-12 10:09:37.938 13397-13416/? E/OS: Remove callback\r\n10-12 10:09:37.988 13397-13416/? E/OS: Add callback\r\n10-12 10:09:37.988 13397-13416/? E/OS: After advance: Trigger callback (true, true)\r\n10-12 10:09:37.988 13397-13416/? E/OS: Before advance: Size 1\r\n10-12 10:09:37.988 13397-13416/? E/OS: Before advance: Size 0\r\n10-12 10:09:37.989 13397-13416/? E/OS: After advance: Size 1\r\n10-12 10:09:37.989 13397-13416/? E/OS: After advance: Ignore callback (true, true) <!-- Did it move here? \r\n10-12 10:09:37.989 13397-13416/? E/OS: After advance: Size 0 \r\n<!-- Test times out here\r\n10-12 10:09:38.991 13397-13416/io.realm.test E/REALM_JAVA: Real size: 3 <!-- Opening the Realm on another thread verified that the change is in the DB\r\n```\r\n\r\nI have narrowed it down to https://github.com/realm/realm-object-store/blob/master/src/impl/collection_notifier.cpp#L326 but I have no explanation as to why it is happening:\r\n\r\n\r\n**Open questions:**\r\n* `after_advance` is called twice. It is unclear why. Probably because two `Results` exist, but it doesn't look like I create two. Conclussion: Doesn't look related\r\n* When failing, it looks like code inside the callback isn't triggered. Add more logging to verify how far it gets. Conclussion: Done, see https://github.com/realm/realm-java/issues/5413#issuecomment-336212117\r\n* https://github.com/realm/realm-java/issues/5411 did not catch this ", "url": "https://github.com/realm/realm-java/issues/5413", "user": "cmelchior", "labels": ["T-Bug"], "created": "2017-10-12 15:06:06", "closed": "2017-11-15 11:12:54", "commits": {}, "ttf": 33.000277777777775, "commitsDetails": []}, {"title": "Removing and re-adding listener inside a callback doesn't work", "body": "Removing and re-adding the same listener inside a callback doesn't work. Discovered this while trying to find another bug:\r\n\r\n``` \r\n  @Test\r\n    @RunTestInLooperThread\r\n    public void listener_notTriggeredTest() {\r\n        final Realm realm = looperThread.getRealm();\r\n        realm.beginTransaction();\r\n        realm.deleteAll();\r\n        realm.commitTransaction();\r\n        final int TEST_SIZE = 100;\r\n        final RealmResults<AllTypes> results = realm.where(AllTypes.class).greaterThan(AllTypes.FIELD_LONG, 0).findAllAsync();\r\n        results.addChangeListener(new RealmChangeListener<RealmResults<AllTypes>>() {\r\n            @Override\r\n            public void onChange(RealmResults<AllTypes> allTypes) {\r\n                RealmLog.error(\"Size: \" + allTypes.size());\r\n                if (allTypes.size() == TEST_SIZE) {\r\n                    looperThread.testComplete();\r\n                } else {\r\n                    results.removeChangeListener(this);\r\n                    realm.executeTransactionAsync(new Realm.Transaction() {\r\n                        @Override\r\n                        public void execute(Realm realm) {\r\n                            long count = realm.where(AllTypes.class).count();\r\n                            RealmLog.error(\"Write data: \" + count);\r\n                            realm.createObject(AllTypes.class).setColumnLong(count);\r\n                        }\r\n                    });\r\n                    results.addChangeListener(this);\r\n                }\r\n            }\r\n        });\r\n        looperThread.keepStrongReference(results);\r\n    }\r\n```\r\n", "url": "https://github.com/realm/realm-java/issues/5411", "user": "cmelchior", "labels": ["T-Bug"], "created": "2017-10-12 08:36:13", "closed": "2017-10-12 14:27:50", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Test: Reconnect not happening correctly", "body": "Leaving a phone in airplane mode for a couple of minutes, then try to activate it again. The Java layer does not seem to handle this well resulting in the access token not being refreshed\r\n\r\n```\r\n10-10 13:58:15.082 20935-21485/io.realm.examples.objectserver E/REALM_SYNC: Connection[2]: Failed to connect to endpoint '192.168.87.111:9080': Network is unreachable\r\n10-10 13:58:15.083 20935-21485/io.realm.examples.objectserver E/REALM_SYNC: Connection[2]: Failed to connect to '192.168.87.111:9080': All endpoints failed\r\n10-10 13:58:15.083 20935-21485/io.realm.examples.objectserver D/REALM_SYNC: Connection[2]: Reconnecting in 55173 milliseconds\r\n10-10 13:58:20.776 20935-20935/io.realm.examples.objectserver D/REALM_JAVA: NetworkListener: Connection available\r\n10-10 13:58:47.485 20935-22048/io.realm.examples.objectserver D/REALM_JAVA: Network request (authenticate): http://192.168.87.111:9080/auth\r\n10-10 13:58:54.420 20935-20935/io.realm.examples.objectserver D/REALM_JAVA: NetworkListener: Connection available\r\n10-10 13:58:54.422 20935-20935/io.realm.examples.objectserver D/REALM_JAVA: NetworkListener: Connection available\r\n10-10 13:58:59.640 20935-22048/io.realm.examples.objectserver D/REALM_JAVA: AuthenticateResponse - Error: UNKNOWN(-1)\r\n                                                                            java.net.SocketException: Connection reset\r\n                                                                                at java.net.SocketInputStream.read(SocketInputStream.java:209)\r\n                                                                                at java.net.SocketInputStream.read(SocketInputStream.java:139)\r\n                                                                                at okio.Okio$2.read(Okio.java:138)\r\n                                                                                at okio.AsyncTimeout$2.read(AsyncTimeout.java:236)\r\n                                                                                at okio.RealBufferedSource.indexOf(RealBufferedSource.java:344)\r\n                                                                                at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:216)\r\n                                                                                at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:210)\r\n                                                                                at okhttp3.internal.http1.Http1Codec.readResponseHeaders(Http1Codec.java:189)\r\n                                                                                at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:75)\r\n                                                                                at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n                                                                                at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45)\r\n                                                                                at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n                                                                                at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n                                                                                at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n                                                                                at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n                                                                                at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n                                                                                at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n                                                                                at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n                                                                                at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:120)\r\n                                                                                at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n                                                                                at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n                                                                                at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:185)\r\n                                                                                at okhttp3.RealCall.execute(RealCall.java:69)\r\n                                                                                at io.realm.internal.network.OkHttpAuthenticationServer.authenticate(OkHttpAuthenticationServer.java:145)\r\n                                                                                at io.realm.internal.network.OkHttpAuthenticationServer.refreshUser(OkHttpAuthenticationServer.java:80)\r\n                                                                                at io.realm.SyncSession$4.execute(SyncSession.java:644)\r\n                                                                                at io.realm.SyncSession$4.execute(SyncSession.java:640)\r\n                                                                                at io.realm.internal.network.ExponentialBackoffTask.run(ExponentialBackoffTask.java:66)\r\n                                                                                at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)\r\n                                                                                at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n                                                                                at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)\r\n                                                                                at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n                                                                                at java.lang.Thread.run(Thread.java:764)\r\n10-10 13:58:59.643 20935-22048/io.realm.examples.objectserver E/REALM_JAVA: Unrecoverable error, while refreshing the access Token (UNKNOWN(-1)\r\n                                                                            java.net.SocketException: Connection reset\r\n                                                                                at java.net.SocketInputStream.read(SocketInputStream.java:209)\r\n                                                                                at java.net.SocketInputStream.read(SocketInputStream.java:139)\r\n                                                                                at okio.Okio$2.read(Okio.java:138)\r\n                                                                                at okio.AsyncTimeout$2.read(AsyncTimeout.java:236)\r\n                                                                                at okio.RealBufferedSource.indexOf(RealBufferedSource.java:344)\r\n                                                                                at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:216)\r\n                                                                                at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:210)\r\n                                                                                at okhttp3.internal.http1.Http1Codec.readResponseHeaders(Http1Codec.java:189)\r\n                                                                                at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:75)\r\n                                                                                at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n                                                                                at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45)\r\n                                                                                at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n                                                                                at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n                                                                                at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n                                                                                at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n                                                                                at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n                                                                                at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n                                                                                at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n                                                                                at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:120)\r\n                                                                                at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n                                                                                at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n                                                                                at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:185)\r\n                                                                                at okhttp3.RealCall.execute(RealCall.java:69)\r\n                                                                                at io.realm.internal.network.OkHttpAuthenticationServer.authenticate(OkHttpAuthenticationServer.java:145)\r\n                                                                                at io.realm.internal.network.OkHttpAuthenticationServer.refreshUser(OkHttpAuthenticationServer.java:80)\r\n                                                                                at io.realm.SyncSession$4.execute(SyncSession.java:644)\r\n                                                                                at io.realm.SyncSession$4.execute(SyncSession.java:640)\r\n                                                                                at io.realm.internal.network.ExponentialBackoffTask.run(ExponentialBackoffTask.java:66)\r\n                                                                                at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)\r\n                                                                                at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n                                                                                at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)\r\n                                                                                at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n                                                                                at java.lang.Thread.run(Thread.java:764)\r\n                                                                            ) reschedule will not happen\r\n10-10 13:59:10.055 20935-21485/io.realm.examples.objectserver I/REALM_SYNC: Connection[2]: Resolving '192.168.87.111:9080'\r\n10-10 13:59:10.061 20935-21485/io.realm.examples.objectserver I/REALM_SYNC: Connection[2]: Connecting to endpoint '192.168.87.111:9080' (1/1)\r\n10-10 13:59:10.503 20935-21485/io.realm.examples.objectserver I/REALM_SYNC: Connection[2]: Connected to endpoint '192.168.87.111:9080' (from '192.168.87.104:44952')\r\n10-10 13:59:10.503 20935-21485/io.realm.examples.objectserver D/REALM_SYNC: Connection[2]: WebSocket::initiate_client_handshake()\r\n10-10 13:59:10.577 20935-21485/io.realm.examples.objectserver E/REALM_SYNC: Connection[2]: Websocket: HTTP response invalid\r\n10-10 13:59:10.577 20935-21485/io.realm.examples.objectserver I/REALM_SYNC: Connection[2]: Connection closed due to error\r\n10-10 13:59:10.577 20935-21485/io.realm.examples.objectserver D/REALM_SYNC: Connection[2]: Reconnecting in 3182343 milliseconds\r\n```", "url": "https://github.com/realm/realm-java/issues/5403", "user": "cmelchior", "labels": ["T-Bug"], "created": "2017-10-10 12:01:59", "closed": "2018-01-19 10:38:55", "commits": {"08a3a4e785b1d8e980b0c1db971a71702c9fe179": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}}, "ttf": 100.00027777777778, "commitsDetails": [{"commitHash": "08a3a4e785b1d8e980b0c1db971a71702c9fe179", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "Assigning own list unintentionally clears the list items.", "body": "#### Goal\r\n\r\n`model.setColumnRealmList(model.getColumnRealmList());`  should be no-op.\r\n\r\n#### Expected Results\r\n\r\nThe list keeps its contents.\r\n\r\n#### Actual Results\r\n\r\nThe items in the list is cleared.\r\n\r\n#### Steps & Code to Reproduce\r\n\r\n``` java\r\n    @Test\r\n    public void assignOwnList() {\r\n        RealmList<AllTypesRealmModel> allTypesRealmModels = new RealmList<AllTypesRealmModel>();\r\n        AllTypesRealmModel allTypePojo;\r\n        for (int i = 0; i < 2; i++) {\r\n            allTypePojo = new AllTypesRealmModel();\r\n            allTypePojo.columnLong = i;\r\n            allTypesRealmModels.add(allTypePojo);\r\n        }\r\n\r\n        RealmModelWithRealmListOfRealmModel model = new RealmModelWithRealmListOfRealmModel();\r\n        model.setColumnRealmList(allTypesRealmModels);\r\n\r\n        realm.beginTransaction();\r\n        model = realm.copyToRealm(model);\r\n        realm.commitTransaction();\r\n\r\n        assertEquals(2, model.getColumnRealmList().size());\r\n        realm.beginTransaction();\r\n        model.setColumnRealmList(model.getColumnRealmList());\r\n        realm.commitTransaction();\r\n        assertEquals(2, model.getColumnRealmList().size());\r\n    }\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 3.x\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 3.0.0-beta7\r\n\r\nWhich Android version and device: any\r\n", "url": "https://github.com/realm/realm-java/issues/5395", "user": "zaki50", "labels": ["T-Bug"], "created": "2017-10-08 14:09:04", "closed": "2017-10-12 12:39:19", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Can't initiate Realm Configuration in AttachBaseContext in Application Class.", "body": "\r\n\r\n#### Expected Results\r\n\r\nRealm initialized with the RealmConfiguration.\r\n\r\n#### Actual Results\r\n\r\njava.lang.IllegalStateException: Call `Realm.init(Context)` before creating a RealmConfiguration\r\n\r\n#### Steps & Code to Reproduce\r\n\r\nCan't set realm configuration in Application class in attachBaseContext. it is possible in OnCreate.\r\n\r\n#### Code Sample\r\n\r\n```java\r\n\r\n@Override\r\n\tprotected void attachBaseContext(final Context base) {\r\n\t\tinitRealm(base);\r\n}\r\nprivate void initRealm(Context context) {\r\n\t\tRealm.init(context);\r\n\r\n\t\ttry {\r\n\t\t\tRealmConfiguration configuration = new RealmConfiguration.Builder().name(REALM_NAME).schemaVersion(1).deleteRealmIfMigrationNeeded()\r\n\t\t\t\t\t.build();\r\n\t\t\tRealm.setDefaultConfiguration(configuration);\r\n\t\t} catch (Exception ignore) {\r\n\t\t\tignore.printStackTrace();\r\n\t\t}\r\n\r\n\t}\r\n\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): ?\r\n\r\n3.7.2\r\n\r\nRealm sync feature enabled: yes/no\r\n\r\nno.\r\n\r\nAndroid Studio version: ?\r\n\r\n3.0 b7\r\n\r\nWhich Android version and device: ?\r\n\r\nEmulator, any android version.", "url": "https://github.com/realm/realm-java/issues/5389", "user": "reinaldomoreira", "labels": ["T-Bug"], "created": "2017-10-06 17:17:51", "closed": "2017-10-12 10:20:39", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Iterating result very slow", "body": "Hi,\r\n\r\nHere are my java classes : \r\n\r\n```java\r\npublic class PublicArticleEntity extends RealmObject {\r\n\r\n    /**\r\n     * For fast import no @PrimaryKey defined\r\n     */\r\n    private String id;\r\n\r\n    private String type;\r\n\r\n    @Index\r\n    private String manufacturerId;\r\n\r\n    private Boolean sterilizable;\r\n\r\n    private Boolean active;\r\n\r\n    private Date importModified;\r\n\r\n    private RealmList<PublicArticlePartNumberEntity> partNumbers = new RealmList<>();\r\n    private RealmList<PublicArticleCodificationEntity> codifications = new RealmList<>();\r\n\r\npublic class PublicArticlePartNumberEntity extends RealmObject {\r\n\r\n    @Index\r\n    private String partNumber;\r\n\r\n    @Index\r\n    private String normalizedPartNumber;\r\n\r\n    private PublicArticleEntity publicArticle;\r\n}\r\n\r\npublic class PublicArticleCodificationEntity extends RealmObject {\r\n\r\n    @Index\r\n    private String type;\r\n\r\n    @Index\r\n    private String value;\r\n\r\n    private PublicArticleEntity publicArticle;\r\n}\r\n```\r\n\r\nAnd here is the piece of code where I have a problem. The query returns 24 results and I use the `limit` to get the 21 first elements. It tooks 2000ms to do the iteration :o\r\n\r\n```java\r\nRealmResults<PublicArticlePartNumberEntity> entities = realm.where(PublicArticlePartNumberEntity.class)\r\n                .equalTo(\"publicArticle.manufacturerId\", manufacturerId.toString())\r\n                .beginGroup()\r\n                .contains(\"partNumber\", search, Case.INSENSITIVE)\r\n                .or()\r\n                .contains(\"normalizedPartNumber\", search, Case.INSENSITIVE)\r\n                .endGroup()\r\n                .findAllSorted(\"partNumber\", Sort.ASCENDING);\r\n\r\n        Set<String> items = new HashSet<>();\r\n        int listSize = entities.size();\r\n        for (int i = 0; i < listSize && i < limit; i++) {\r\n            items.add(entities.get(i).getPartNumber());\r\n        }\r\n```\r\n\r\nHere the state of each :\r\n<img width=\"214\" alt=\"screenshot at oct 06 15-04-13\" src=\"https://user-images.githubusercontent.com/3430304/31279027-a792c920-aaa7-11e7-8be7-5c1bc23d9776.png\">\r\n\r\nBecause Realm is using lazy loading the request if very very fast, but the `for` is taking 2s.\r\nDid I miss something ?\r\n", "url": "https://github.com/realm/realm-java/issues/5387", "user": "mgohin", "labels": ["T-Bug"], "created": "2017-10-06 13:06:22", "closed": "2017-11-23 08:16:43", "commits": {"34e5370accfa3b90a92d598624b5df6202b0508e": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "cd90163433ddc128cbe96531f7fe62f24c17b32e": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 47.000277777777775, "commitsDetails": [{"commitHash": "34e5370accfa3b90a92d598624b5df6202b0508e", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "cd90163433ddc128cbe96531f7fe62f24c17b32e", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["aa437daa2168e6c52bdf1928f16757f1e07ff2e9"], "nameRev": "cd90163433ddc128cbe96531f7fe62f24c17b32e tags/push~3^2~6", "commitMessage": "Evaluate queries immediately for sync queries\n\n- OsResults.load() actually does evaluate queries if needed now by using\n  newly exposed OS method Results.evaluate_query_if_needed(). So the\n  Results's mode will be changed to TABLEVIEW from QUERY. This matches\n  the old async query behaviour and solved the performance issues when\n  the query results are huge, the size() method took unnecessary long\n  time even the Results accessor will be called at the next line.\n  close #5328 close #5387\n- Update Object Store to 3eb19c014fdf .\n- Refactor the APIs for creating OsResults.\n", "commitDateTime": "2017-11-23 16:16:32", "authoredDateTime": "2017-11-21 18:41:19", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/OrderedRealmCollectionTests.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/internal/OsResultsTests.java", "insertions": 27, "deletions": 27, "lines": 54}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_OsResults.cpp", "insertions": 12, "deletions": 21, "lines": 33}, {"filePath": "realm/realm-library/src/main/cpp/object-store", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmList.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmQuery.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmResults.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/OsResults.java", "insertions": 24, "deletions": 53, "lines": 77}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/OsSharedRealm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/PendingRow.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OrderedRealmCollectionTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.OrderedRealmCollectionTests.createSnapshot()", "TOT": 9, "UPD": 0, "INS": 7, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "OsResultsTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.OsResultsTests.constructor_withDistinct()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.constructor_queryIsValidated()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.constructor_queryOnDeletedTable()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.size()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.where()", "TOT": 12, "UPD": 0, "INS": 3, "MOV": 6, "DEL": 3}, {"spoonMethodName": "io.realm.internal.OsResultsTests.sort()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.clear()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.contains()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.indexOf()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.distinct()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.addListener_shouldBeCalledToReturnTheQueryResults()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.addListener_shouldBeCalledWhenRefreshToReturnTheQueryResults()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.addListener_shouldBeCalledWhenRefreshAfterLocalCommit()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.addListener_triggeredByRefresh()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.addListener_queryNotReturned()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.addListener_queryReturned()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.addListener_triggeredByLocalCommit()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.collectionIterator_detach_byBeginTransaction()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.collectionIterator_detach_createdInTransaction()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.collectionIterator_invalid_nonLooperThread_byRefresh()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.collectionIterator_invalid_looperThread_byRemoteTransaction()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.collectionIterator_newInstance_throwsWhenSharedRealmIsClosed()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.getMode()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.createSnapshot()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.load()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RealmList.java", "spoonMethods": []}, {"spoonFilePath": "RealmQuery.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmQuery.findFirstAsync()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmQuery.createRealmResults(io.realm.internal.TableQuery,io.realm.internal.SortDescriptor,io.realm.internal.SortDescriptor,boolean)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RealmResults.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmResults.createBacklinkResults(io.realm.BaseRealm,io.realm.internal.Row,java.lang.Class,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmResults.createDynamicBacklinkResults(io.realm.DynamicRealm,io.realm.internal.CheckedRow,io.realm.internal.Table,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OsResults.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.OsResults.createBacklinksCollection(io.realm.internal.OsSharedRealm,io.realm.internal.UncheckedRow,io.realm.internal.Table,java.lang.String)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.OsResults.nativeCreateResultsFromList(long,long,io.realm.internal.SortDescriptor)", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.internal.OsResults.sort(io.realm.internal.SortDescriptor)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.OsResults.distinct(io.realm.internal.SortDescriptor)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.OsResults", "TOT": 23, "UPD": 0, "INS": 1, "MOV": 14, "DEL": 8}, {"spoonMethodName": "io.realm.internal.OsResults.createFromQuery(io.realm.internal.OsSharedRealm,io.realm.internal.TableQuery,io.realm.internal.SortDescriptor,io.realm.internal.SortDescriptor)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.OsResults.createFromQuery(io.realm.internal.OsSharedRealm,io.realm.internal.TableQuery)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.OsResults.load()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OsSharedRealm.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.OsSharedRealm.runPartialSyncRegistrationCallback(java.lang.String,long,io.realm.internal.OsSharedRealm$PartialSyncCallback)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "PendingRow.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.PendingRow", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Performance regression in query (nativeSize and nativeGetRow)", "body": "#### Goal\r\n\r\n> What do you want to achieve?\r\n\r\nUpgrade Realm to latest and retain performance\r\n\r\n#### Expected Results\r\n\r\nNo performance drop\r\n\r\n#### Actual Results\r\n\r\nMy query which looks like this became slow when updating from 1.2.0 -> 4.0.0-BETA3-SNAPSHOT.\r\n\r\n``` java\r\n        Date startDate = DateUtils.setToMidnight(date);\r\n        Date endDate = DateUtils.setToEndOfDay(startDate);\r\n        RealmResults<Schedule> schedules = query(realm)\r\n                .beginGroup()\r\n                .beginGroup()\r\n                .lessThan(ScheduleFields.START_TIME, endDate)\r\n                .greaterThanOrEqualTo(ScheduleFields.START_TIME, startDate)\r\n                .endGroup()\r\n                .or()\r\n                .beginGroup()\r\n                .greaterThanOrEqualTo(ScheduleFields.END_TIME, startDate)\r\n                .lessThan(ScheduleFields.START_TIME, endDate)\r\n                .endGroup()\r\n                .endGroup()\r\n                .lessThanOrEqualTo(ScheduleFields.START_TIME, date)\r\n                .equalTo(ScheduleFields.CHANNEL_ID, channel.getId())\r\n                .findAllSorted(ScheduleFields.START_TIME);\r\n        if(!schedules.isEmpty()) {\r\n            return schedules.get(schedules.size() - 1);\r\n        } else {\r\n            return null;\r\n        }\r\n```\r\n\r\nWith a schema that looks like this\r\n\r\n``` java\r\npublic class Schedule\r\n        extends RealmObject {\r\n    @PrimaryKey\r\n    private long id;\r\n\r\n    private String title;\r\n\r\n    @Index\r\n    private String titleLowerCase;\r\n\r\n    private long categoryId;\r\n\r\n    private String category;\r\n\r\n    @Index\r\n    private Date startTime;\r\n\r\n    @Index\r\n    private Date endTime;\r\n\r\n    private int duration;\r\n\r\n    private String ageLimit;\r\n\r\n    private long programId;\r\n\r\n    private String episodeId;\r\n\r\n    @Index\r\n    private long channelId;\r\n\r\n    private Channel channel;\r\n\r\n    private RealmList<TVGroup> tvGroups;\r\n```\r\n\r\nThe query was then reduced to \r\n\r\n``` java\r\n        Schedule schedule = query(realm)\r\n                .lessThanOrEqualTo(ScheduleFields.START_TIME, date)\r\n                .equalTo(ScheduleFields.CHANNEL_ID, channel.getId())\r\n                .findAllSorted(ScheduleFields.START_TIME, Sort.DESCENDING)\r\n                .first(null); // <-- added this\r\n        if(schedule == null) {\r\n            return null;\r\n        }\r\n        long scheduleStartTime = schedule.getStartTime().getTime();\r\n        long scheduleEndTime = schedule.getEndTime().getTime();\r\n\r\n        if((scheduleStartTime < endDate.getTime() && scheduleStartTime >= startDate.getTime())\r\n            || (scheduleEndTime >= startDate.getTime() && scheduleStartTime < endDate.getTime()) ){\r\n            return schedule;\r\n        }\r\n        return null;\r\n```\r\n\r\nBut it is still slower in `first()` than in Realm 2.3.0 (and then slow in Realm 3.0.0)\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 1.2.0 -> 4.0.0-BETA3-SNAPSHOT\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.3.3\r\n\r\nWhich Android version and device: LG Nexus 5X, 8.0.0", "url": "https://github.com/realm/realm-java/issues/5328", "user": "Zhuinden", "labels": ["T-Bug"], "created": "2017-09-26 13:17:13", "closed": "2017-11-23 08:16:43", "commits": {"34e5370accfa3b90a92d598624b5df6202b0508e": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "cd90163433ddc128cbe96531f7fe62f24c17b32e": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 57.000277777777775, "commitsDetails": [{"commitHash": "34e5370accfa3b90a92d598624b5df6202b0508e", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "cd90163433ddc128cbe96531f7fe62f24c17b32e", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["aa437daa2168e6c52bdf1928f16757f1e07ff2e9"], "nameRev": "cd90163433ddc128cbe96531f7fe62f24c17b32e tags/push~3^2~6", "commitMessage": "Evaluate queries immediately for sync queries\n\n- OsResults.load() actually does evaluate queries if needed now by using\n  newly exposed OS method Results.evaluate_query_if_needed(). So the\n  Results's mode will be changed to TABLEVIEW from QUERY. This matches\n  the old async query behaviour and solved the performance issues when\n  the query results are huge, the size() method took unnecessary long\n  time even the Results accessor will be called at the next line.\n  close #5328 close #5387\n- Update Object Store to 3eb19c014fdf .\n- Refactor the APIs for creating OsResults.\n", "commitDateTime": "2017-11-23 16:16:32", "authoredDateTime": "2017-11-21 18:41:19", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/OrderedRealmCollectionTests.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/internal/OsResultsTests.java", "insertions": 27, "deletions": 27, "lines": 54}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_OsResults.cpp", "insertions": 12, "deletions": 21, "lines": 33}, {"filePath": "realm/realm-library/src/main/cpp/object-store", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmList.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmQuery.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmResults.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/OsResults.java", "insertions": 24, "deletions": 53, "lines": 77}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/OsSharedRealm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/PendingRow.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OrderedRealmCollectionTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.OrderedRealmCollectionTests.createSnapshot()", "TOT": 9, "UPD": 0, "INS": 7, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "OsResultsTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.OsResultsTests.constructor_withDistinct()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.constructor_queryIsValidated()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.constructor_queryOnDeletedTable()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.size()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.where()", "TOT": 12, "UPD": 0, "INS": 3, "MOV": 6, "DEL": 3}, {"spoonMethodName": "io.realm.internal.OsResultsTests.sort()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.clear()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.contains()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.indexOf()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.distinct()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.addListener_shouldBeCalledToReturnTheQueryResults()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.addListener_shouldBeCalledWhenRefreshToReturnTheQueryResults()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.addListener_shouldBeCalledWhenRefreshAfterLocalCommit()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.addListener_triggeredByRefresh()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.addListener_queryNotReturned()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.addListener_queryReturned()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.addListener_triggeredByLocalCommit()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.collectionIterator_detach_byBeginTransaction()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.collectionIterator_detach_createdInTransaction()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.collectionIterator_invalid_nonLooperThread_byRefresh()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.collectionIterator_invalid_looperThread_byRemoteTransaction()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.collectionIterator_newInstance_throwsWhenSharedRealmIsClosed()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.getMode()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.createSnapshot()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.OsResultsTests.load()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RealmList.java", "spoonMethods": []}, {"spoonFilePath": "RealmQuery.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmQuery.findFirstAsync()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmQuery.createRealmResults(io.realm.internal.TableQuery,io.realm.internal.SortDescriptor,io.realm.internal.SortDescriptor,boolean)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RealmResults.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmResults.createBacklinkResults(io.realm.BaseRealm,io.realm.internal.Row,java.lang.Class,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmResults.createDynamicBacklinkResults(io.realm.DynamicRealm,io.realm.internal.CheckedRow,io.realm.internal.Table,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OsResults.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.OsResults.createBacklinksCollection(io.realm.internal.OsSharedRealm,io.realm.internal.UncheckedRow,io.realm.internal.Table,java.lang.String)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.OsResults.nativeCreateResultsFromList(long,long,io.realm.internal.SortDescriptor)", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.internal.OsResults.sort(io.realm.internal.SortDescriptor)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.OsResults.distinct(io.realm.internal.SortDescriptor)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.OsResults", "TOT": 23, "UPD": 0, "INS": 1, "MOV": 14, "DEL": 8}, {"spoonMethodName": "io.realm.internal.OsResults.createFromQuery(io.realm.internal.OsSharedRealm,io.realm.internal.TableQuery,io.realm.internal.SortDescriptor,io.realm.internal.SortDescriptor)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.OsResults.createFromQuery(io.realm.internal.OsSharedRealm,io.realm.internal.TableQuery)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.OsResults.load()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OsSharedRealm.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.OsSharedRealm.runPartialSyncRegistrationCallback(java.lang.String,long,io.realm.internal.OsSharedRealm$PartialSyncCallback)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "PendingRow.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.PendingRow", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "JSON parser throws IndexOutOfBoundsException when converting ISO8601-compliant dates with a 2-digit time zone designator", "body": "#### Goal\r\n\r\nI want to parse JSON data that contains ISO8601-compliant timestamps with a 2-digit time zone designator, such as `2017-09-20T20:00:00+04`, using Realm\u2019s own JSON parse. Based on the discussion on Issue #1213 the parser should support all valid ISO8601 dates. According to IS8601, the time zone can be indicated with only 2 digits.\r\n\r\n#### Expected Results\r\n\r\nThe JSON is parsed successfully and the object(s) is(are) created successfully.\r\n\r\n#### Actual Results\r\n\r\nThe parser throws IndexOutOfBoundException with message \"Mismatching time zone indicator: GMT04 given, resolves to GMT0400\".\r\n\r\n#### Steps & Code to Reproduce\r\n\r\nCreate a class with a Date field. Try to convert JSON data that contains the corresponding parameter as a valid ISO8601 date with a 2-digit time zone designator using Realm\u2019s own parser. Observe the exception to be thrown.\r\n\r\n#### Code Sample\r\n\r\nExample class:\r\n```\r\npublic class Foo extends RealmObject {\r\n    private Date bar;\r\n}\r\n```\r\n\r\nJSON parsing:\r\n```\r\nfinal String json = \"{\\\"bar\\\":\\\"2017-09-20T20:00:00+04\\\"}\";\r\nfinal Realm realm = Realm.getDefaultInstance();\r\nrealm.beginTransaction();\r\nrealm.createOrUpdateObjectFromJSON(Foo.class, json);\r\nrealm.commitTransaction();\r\nrealm.close();\r\n```\r\n\r\nThat will lead to IndexOutOfBoundsException with the message given above.\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 3.7.2 (was originally observed with 3.5.0)\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: -\r\n\r\nWhich Android version and device: -\r\n", "url": "https://github.com/realm/realm-java/issues/5309", "user": "JussiPekonen", "labels": ["T-Bug"], "created": "2017-09-22 10:05:48", "closed": "2017-09-26 12:49:55", "commits": {"2bb7be83c4f819df9d25fa23ab500c39118dc329": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "2bb7be83c4f819df9d25fa23ab500c39118dc329", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["6a03b11f764baaf79b0a7696e014dcade59e5cd6", "ff932d23c8f0e24f0fb4f7b5c436932c016fc539"], "nameRev": "2bb7be83c4f819df9d25fa23ab500c39118dc329 tags/v4.0.0-RC1~18^2~2", "commitMessage": "Merge pull request #5310 from JussiPekonen/fix/5309/iso8601-2-digit-time-zone-designator\n\nAdd support for ISO8601 2-digit time zone designator in Date parsing (#5309)", "commitDateTime": "2017-09-26 20:33:35", "authoredDateTime": "2017-09-26 20:33:35", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/internal/android/ISO8601UtilsTest.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/android/ISO8601Utils.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ISO8601UtilsTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.android.ISO8601UtilsTest.testTimeZoneDesignator()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ISO8601Utils.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.android.ISO8601Utils.parse(java.lang.String,java.text.ParsePosition)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "equalTo() fails to find null values on an indexed field if using Case.INSENSITIVE", "body": "It appears that Realm versions from 3.1.3 onward have a bug where using equalTo() on a query no longer finds indexed fields which have null values, _but only when the `Case.INSENSITIVE` flag is being used_.  Using `Case.SENSITIVE` (the default) still works.\r\n\r\nIn the [Realm Java changelog for 3.1.3](https://github.com/realm/realm-java/blob/master/CHANGELOG.md#313-2017-04-20) we can see the following under enhancements:\r\n> Upgraded to Realm Core 2.6.1.\r\n\r\nWe can see in the [Realm Core changelog for 2.6.0](https://github.com/realm/realm-core/blob/master/CHANGELOG.md#260-release-notes) the following, which looks like it could be the culprit:\r\n> Made case insensitive queries use the new index based case insensitive search. PR [#2486](https://github.com/realm/realm-core/pull/2486)\r\n\r\n#### Expected Results\r\n\r\n> I would expect to be able to find records whose values for the field we're searching on are `null`\r\n\r\n#### Actual Results\r\n\r\n> No records are found\r\n\r\n#### Code Sample\r\n\r\n`RealmTest.class` is a subclass of `RealmObject` and defines `test_field` like so:\r\n```java\r\n    @Index\r\n    private String test_field;\r\n```\r\n\r\nNow the query:\r\n```java\r\n    Realm realm = Realm.getDefaultInstance();\r\n\r\n    String searchString = \"test\";\r\n    realm.where(RealmTest.class)\r\n        .equalTo(\"test_field\", searchString, Case.INSENSITIVE)\r\n        .findAll();\r\n// 3.1.0 behaviour: returns all results where test_field has a value of \"test\" \u2705\r\n// 3.1.3 behaviour: returns all results where test_field has a value of \"test\" \u2705\r\n\r\n\r\n    searchString = null;\r\n    realm.where(RealmTest.class)\r\n        .equalTo(\"test_field\", searchString, Case.INSENSITIVE)\r\n        .findAll();\r\n// 3.1.0 behaviour: returns all results where test_field has a value of null \u2705\r\n// 3.1.3 behaviour: does NOT return results where test_field has a value of null \u274c\r\n```\r\n\r\nAgain, this bug is only seen when `Case.INSENSITIVE` is used, which makes me suspicious that [Realm-Core PR #2486](https://github.com/realm/realm-core/pull/2486) *might* be the cause of this issue, but I'm not sure.\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): >= 3.1.3\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.3.3\r\n\r\nWhich Android version and device: 8.0, Pixel.", "url": "https://github.com/realm/realm-java/issues/5299", "user": "morris86", "labels": ["T-Bug"], "created": "2017-09-21 06:15:20", "closed": "2017-10-02 12:28:52", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "downloadChangesWhenRealmOutOfScope fail when revocation is enabled ", "body": "The test `downloadChangesWhenRealmOutOfScope` uses `downloadAllServerChanges` to make sure all changes were downloaded from ROS. \r\n\r\nSomehow when enabling revocation inside the `SyncUser#logout` method the wait blocks indefinitely, probably because the revoked `refresh_token` might be used by the session \r\n\r\n```\r\nD/REALM_JAVA( 2811): Network request (logout): http://127.0.0.1:9080/auth/revoke\r\nD/REALM_JAVA( 2811): Network request (logout): http://127.0.0.1:9080/auth/revoke\r\nD/REALM_JAVA( 2811): Network request (logout): http://127.0.0.1:9080/auth/revoke\r\nD/REALM_JAVA( 2811): Logout response - Error: The path is invalid or current user has no access.\r\nE/REALM_JAVA( 2811): Failed to log user out.\r\nE/REALM_JAVA( 2811): ACCESS_DENIED(614)\r\nE/REALM_JAVA( 2811): The path is invalid or current user has no access.\r\nD/REALM_JAVA( 2811): Logout response - Success\r\nD/REALM_JAVA( 2811): Logout response - Error: The path is invalid or current user has no access.\r\nE/REALM_JAVA( 2811): Failed to log user out.\r\nE/REALM_JAVA( 2811): ACCESS_DENIED(614)\r\nE/REALM_JAVA( 2811): The path is invalid or current user has no access.\r\nI/TestRunner( 2811): failed: downloadChangesWhenRealmOutOfScope(io.realm.objectserver.SyncSessionTests)\r\n```\r\n\r\nWe also need to investigate the use case where calling `Realm.getInstance(config)` with a revoked user, will actually activate the user again", "url": "https://github.com/realm/realm-java/issues/5294", "user": "nhachicha", "labels": ["T-Bug"], "created": "2017-09-20 18:49:43", "closed": "2017-10-03 12:32:43", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "Gridview example doesn't parse JSON correctly.", "body": "#### Goal\r\n\r\nParse names of cities correctly.\r\n\r\n#### Expected Results\r\n\r\nAll names of cities are displayed correctly.\r\n\r\n#### Actual Results\r\n\r\n<img width=\"324\" alt=\"screen_shot_2017-09-13_at_11 54 08_pm_1024\" src=\"https://user-images.githubusercontent.com/145585/30472918-55a82124-9a39-11e7-834b-52c0fc5b757d.png\">\r\n\r\nSince all names are parsed as null, all cities names are blank.\r\n\r\n#### Steps & Code to Reproduce\r\n\r\nJust run `Gridview` example on the `releases` branch.\r\n\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): `releases` branch. Not test on other branches yet.\r\n\r\nRealm sync feature enabled: No\r\n\r\nAndroid Studio version:  3.0 Beta 5\r\n\r\nWhich Android version and device: Genymotion emulator.\r\n", "url": "https://github.com/realm/realm-java/issues/5262", "user": "dalinaum", "labels": ["T-Bug"], "created": "2017-09-15 08:17:12", "closed": "2017-09-18 16:35:50", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "RealmList.delete*() does not delete target object.", "body": "`RealmList.delete*()` must delete target objects in addition to removing them from the list.\r\nDue to a bug introduced our refactoring introduced in `3.7.1`, `RealmList.delete*()` (except for `deleteAllFromRealm()`) only remove the target objects from the list and target objects still remain in the database.\r\n\r\nFollowing test exposes the bug.\r\n\r\n```\r\n@Test\r\npublic void deleteFromRealm() {\r\n    Owner owner = realm.where(Owner.class).findFirst();\r\n    //noinspection ConstantConditions\r\n    RealmList<Dog> dogs = owner.getDogs();\r\n    assertEquals(TEST_SIZE, dogs.size());\r\n\r\n    int expectedSize = TEST_SIZE;\r\n    realm.beginTransaction();\r\n    dogs.deleteFromRealm(TEST_SIZE / 2);\r\n    expectedSize--;\r\n    realm.commitTransaction();\r\n    assertEquals(expectedSize, dogs.size());\r\n    assertEquals(expectedSize, realm.where(Dog.class).count());\r\n\r\n    realm.beginTransaction();\r\n    dogs.deleteFromRealm(0);\r\n    expectedSize--;\r\n    realm.commitTransaction();\r\n    assertEquals(expectedSize, dogs.size());\r\n    assertEquals(expectedSize, realm.where(Dog.class).count());\r\n\r\n    realm.beginTransaction();\r\n    dogs.deleteFromRealm(dogs.size() - 1);\r\n    expectedSize--;\r\n    realm.commitTransaction();\r\n    assertEquals(expectedSize, dogs.size());\r\n    assertEquals(expectedSize, realm.where(Dog.class).count());\r\n}\r\n\r\n@Test\r\npublic void deleteFirstFromRealm() {\r\n    Owner owner = realm.where(Owner.class).findFirst();\r\n    //noinspection ConstantConditions\r\n    RealmList<Dog> dogs = owner.getDogs();\r\n    assertEquals(TEST_SIZE, dogs.size());\r\n\r\n    realm.beginTransaction();\r\n    dogs.deleteFirstFromRealm();\r\n    realm.commitTransaction();\r\n    assertEquals(TEST_SIZE - 1, dogs.size());\r\n    assertEquals(TEST_SIZE - 1, realm.where(Dog.class).count());\r\n}\r\n\r\n@Test\r\npublic void deleteLastFromRealm() {\r\n    Owner owner = realm.where(Owner.class).findFirst();\r\n    //noinspection ConstantConditions\r\n    RealmList<Dog> dogs = owner.getDogs();\r\n    assertEquals(TEST_SIZE, dogs.size());\r\n\r\n    realm.beginTransaction();\r\n    dogs.deleteLastFromRealm();\r\n    realm.commitTransaction();\r\n    assertEquals(TEST_SIZE - 1, dogs.size());\r\n    assertEquals(TEST_SIZE - 1, realm.where(Dog.class).count());\r\n}\r\n```\r\n\r\nAnd the result is:\r\n\r\n```\r\nio.realm.RealmListTests > deleteLastFromRealm[Nexus_5X_API_21(AVD) - 5.0.2] FAILED\r\n        java.lang.AssertionError: expected:<9> but was:<10>\r\n        at org.junit.Assert.fail(Assert.java:88)\r\n\r\nio.realm.RealmListTests > deleteFirstFromRealm[Nexus_5X_API_21(AVD) - 5.0.2] FAILED\r\n        java.lang.AssertionError: expected:<9> but was:<10>\r\n        at org.junit.Assert.fail(Assert.java:88)\r\n\r\nio.realm.RealmListTests > deleteFromRealm[Nexus_5X_API_21(AVD) - 5.0.2] FAILED\r\n        java.lang.AssertionError: expected:<9> but was:<10>\r\n        at org.junit.Assert.fail(Assert.java:88)\r\n```", "url": "https://github.com/realm/realm-java/issues/5233", "user": "zaki50", "labels": ["T-Bug"], "created": "2017-09-09 05:18:46", "closed": "2017-09-12 04:28:12", "commits": {"d0563ea889a9e20f5792f9d77b76488b249a64e1": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "c592689357a896064074181b8d85fdfb6daf29a5": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "2f5d0f0728fb9c4ce5458c7bc757519ffd7ba858": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "196b195606489686a62281dd6fa5a34224f59b13": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "4c6380473584da256489dc7e852c271058fdfc22": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "d0563ea889a9e20f5792f9d77b76488b249a64e1", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c592689357a896064074181b8d85fdfb6daf29a5", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "2f5d0f0728fb9c4ce5458c7bc757519ffd7ba858", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "196b195606489686a62281dd6fa5a34224f59b13", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["1863bebeddafd9d3d161a7691f792cdf34a63265"], "nameRev": "196b195606489686a62281dd6fa5a34224f59b13 tags/v3.7.2~4", "commitMessage": "Fix a bug that RealmList.delete*() does not delete target objects (#5234)\n\n* added test cases exposing #5233\r\n\r\n* make RealmList.delete*() delete target objects.\r\n\r\nThis commit requires to applky following patch to Object Store.\r\n\r\ndiff --git a/src/list.cpp b/src/list.cpp\r\nindex 1734cfa..d8aa1e2 100644\r\n--- a/src/list.cpp\r\n+++ b/src/list.cpp\r\n@@ -349,6 +349,16 @@ void List::swap(size_t ndx1, size_t ndx2)\r\n         m_table->swap_rows(ndx1, ndx2);\r\n }\r\n\r\n+void List::delete_(size_t row_ndx)\r\n+{\r\n+    verify_in_transaction();\r\n+    verify_valid_row(row_ndx);\r\n+    if (m_link_view)\r\n+        m_link_view->remove_target_row(row_ndx);\r\n+    else\r\n+        m_table->remove(row_ndx);\r\n+}\r\n+\r\n void List::delete_all()\r\n {\r\n     verify_in_transaction();\r\ndiff --git a/src/list.hpp b/src/list.hpp\r\nindex a3b52af..db4e8d4 100644\r\n--- a/src/list.hpp\r\n+++ b/src/list.hpp\r\n@@ -77,6 +77,7 @@ public:\r\n     void remove(size_t list_ndx);\r\n     void remove_all();\r\n     void swap(size_t ndx1, size_t ndx2);\r\n+    void delete_(size_t list_ndx);\r\n     void delete_all();\r\n\r\n     template<typename T = RowExpr>\r\n\r\n* Fixed a bug that RealmList.deleteFromRealm(int), RealmList.deleteFirstFromRealm() and RealmList.deleteLastFromRealm() did not remove target objects from Realm. This bug was introduced in 3.7.1 (#5233).\r\n\r\n* Fix tests\r\n", "commitDateTime": "2017-09-11 09:06:30", "authoredDateTime": "2017-09-11 09:06:30", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/CollectionTests.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/ManagedOrderedRealmCollectionTests.java", "insertions": 26, "deletions": 9, "lines": 35}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/ManagedRealmCollectionTests.java", "insertions": 11, "deletions": 5, "lines": 16}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmListTests.java", "insertions": 29, "deletions": 64, "lines": 93}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_OsList.cpp", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "realm/realm-library/src/main/cpp/object-store", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmList.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/OsList.java", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CollectionTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.CollectionTests.isRealmList(io.realm.CollectionTests$ManagedCollection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ManagedOrderedRealmCollectionTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.ManagedOrderedRealmCollectionTests.deleteFromRealm()", "TOT": 16, "UPD": 0, "INS": 5, "MOV": 8, "DEL": 3}, {"spoonMethodName": "io.realm.ManagedOrderedRealmCollectionTests.deleteFirstFromRealm()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.ManagedOrderedRealmCollectionTests.deleteLastFromRealm()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ManagedRealmCollectionTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.ManagedRealmCollectionTests.deleteAllFromRealm_invalidList()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.ManagedRealmCollectionTests.deleteAllFromRealm()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmListTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmListTests.removeAllFromRealm()", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "io.realm.RealmListTests.remove_allAfterContainerObjectRemoved()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTests.removeAllFromRealm_emptyList()", "TOT": 18, "UPD": 10, "INS": 0, "MOV": 7, "DEL": 1}, {"spoonMethodName": "io.realm.RealmListTests.removeAllFromRealm_outsideTransaction()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.RealmListTests.removeAllFromRealm_invalidListShouldThrow()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.RealmListTests.remove_byIndex()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTests.remove_last()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTests.remove_byObject()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTests.remove_first()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmList.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmList.deleteFromRealm(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OsList.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.OsList.delete(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.OsList.nativeDelete(long,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "4c6380473584da256489dc7e852c271058fdfc22", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 4, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Can't cancel a non-existing write transaction", "body": "Hello, i'm having an issue. I needed to add migration to my project and after that i caught some crashes with the following stacktrace:\r\n\r\n```\r\njava.lang.RuntimeException: Unable to create application com.project.app.App: java.lang.IllegalStateException: Can't cancel a non-existing write transaction in /home/cc/repo/realm/release/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 272\r\n\tat android.app.ActivityThread.handleBindApplication(ActivityThread.java:6057)\r\n\tat android.app.ActivityThread.access$1700(ActivityThread.java:218)\r\n\tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1805)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:102)\r\n\tat android.os.Looper.loop(Looper.java:145)\r\n\tat android.app.ActivityThread.main(ActivityThread.java:7007)\r\n\tat java.lang.reflect.Method.invoke(Native Method)\r\n\tat java.lang.reflect.Method.invoke(Method.java:372)\r\n\tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1404)\r\n\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1199)\r\nCaused by: java.lang.IllegalStateException: Can't cancel a non-existing write transaction in /home/cc/repo/realm/release/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 272\r\n\tat io.realm.internal.SharedRealm.nativeCancelTransaction(Native Method)\r\n\tat io.realm.internal.SharedRealm.cancelTransaction(SharedRealm.java:267)\r\n\tat io.realm.BaseRealm.cancelTransaction(BaseRealm.java:372)\r\n\tat io.realm.DynamicRealm.cancelTransaction(DynamicRealm.java:48)\r\n\tat io.realm.BaseRealm$4.onResult(BaseRealm.java:661)\r\n\tat io.realm.RealmCache.doInvokeWithGlobalRefCount(RealmCache.java:489)\r\n\tat io.realm.RealmCache.invokeWithGlobalRefCount(RealmCache.java:484)\r\n\tat io.realm.BaseRealm.migrateRealm(BaseRealm.java:634)\r\n\tat io.realm.Realm.migrateRealm(Realm.java:1692)\r\n\tat io.realm.Realm.createInstance(Realm.java:355)\r\n\tat io.realm.RealmCache.doCreateRealmOrGetFromCache(RealmCache.java:345)\r\n\tat io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:283)\r\n\tat io.realm.Realm.getDefaultInstance(Realm.java:272)\r\n\tat com.project.data.db.DbHelper$Companion.init(DbHelper.kt:67)\r\n\tat com.project.app.App.onCreate(App.java:52)\r\n\tat android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1035)\r\n\tat android.app.ActivityThread.handleBindApplication(ActivityThread.java:6054)\r\n```\r\n\r\nThis is my DbHelper init method:\r\n\r\n```\r\nfun init(context: Context) {\r\n            Realm.init(context)\r\n            Realm.setDefaultConfiguration(defaultConfig())\r\n\r\n            var realm: Realm? = null\r\n            try {\r\n                realm = Realm.getDefaultInstance()\r\n            } catch (exception: IllegalArgumentException) {\r\n                Realm.deleteRealm(defaultConfig())\r\n            } finally {\r\n                realm?.close()\r\n            }\r\n}\r\n\r\nfun defaultConfig() = RealmConfiguration.Builder()\r\n                .schemaVersion(MyRealmMigration.REALM_VERSION)\r\n                .migration(MyRealmMigration())\r\n                .build()\r\n```\r\n\r\nAnd migration class:\r\n\r\n```\r\npublic class MyRealmMigration implements RealmMigration {\r\n\r\n    public static final long REALM_VERSION = 1;\r\n\r\n    @Override\r\n    public void migrate(DynamicRealm realm, long oldVersion, long newVersion) {\r\n        RealmSchema schema = realm.getSchema();\r\n        if (oldVersion == 0) {\r\n            RealmObjectSchema routeSchedule = schema.get(\"RouteSchedule\");\r\n            if (routeSchedule.getFieldType(\"price\").equals(RealmFieldType.FLOAT)) {\r\n                routeSchedule\r\n                        .removeField(\"price\")\r\n                        .addField(\"price\", String.class);\r\n            }\r\n\r\n            RealmObjectSchema routeTrip = schema.get(\"RouteTrip\");\r\n            if (!routeTrip.hasField(\"platformFrom\")) {\r\n                routeTrip.addField(\"platformFrom\", String.class)\r\n                        .addField(\"platformTo\", String.class);\r\n            }\r\n\r\n            oldVersion++;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 3.2.1\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.3.3\r\n\r\nWhich Android version and device: Various devices and versions\r\n", "url": "https://github.com/realm/realm-java/issues/5163", "user": "DKKovalev", "labels": ["T-Bug"], "created": "2017-08-28 08:32:52", "closed": "2017-09-18 10:23:47", "commits": {}, "ttf": 21.00027777777778, "commitsDetails": []}, {"title": "signal 11 (SIGSEGV), code 1 (SEGV_MAPERR) in nativeClear", "body": "On my application, I am seeing the following natice crash.\nI was not able to reproduce it, and it was only reported on one device and Android version (see below).\nI don't think it is a critical issue, considering the number of report, but maybe you can do something about it in a future release or guide me in the right direction.\n\nThe stacktrace I have in the Play Console is:\n```\nbacktrace:\n  native: pc 00000000001cfdb0  /data/app/com.myapp-1/lib/arm64/librealm-jni.so\n  native: pc 00000000001d6404  /data/app/com.myapp-1/lib/arm64/librealm-jni.so\n  native: pc 00000000001daaf0  /data/app/com.myapp-1/lib/arm64/librealm-jni.so\n  native: pc 00000000001df724  /data/app/com.myapp-1/lib/arm64/librealm-jni.so\n  native: pc 00000000000c587c  /data/app/com.myapp-1/lib/arm64/librealm-jni.so\n  native: pc 000000000004ae24  /data/app/com.myapp-1/lib/arm64/librealm-jni.so (Java_io_realm_internal_Collection_nativeClear+48)\n  native: pc 00000000000ed354  /data/app/com.myapp-1/oat/arm64/base.odex (deleted) (offset 0xb02000)\n```\n\n#### Version of Realm and tooling\n\nRealm version(s): **3.4.0**\n\nRealm sync feature enabled: **no**\n\nAndroid Studio version: **3.0-beta2**\n\nWhich Android version and device: **Android 7.0** on **Galaxy S7 Edge** (hero2lte)", "url": "https://github.com/realm/realm-java/issues/5138", "user": "MGaetan89", "labels": ["O-Community", "Pipeline-On-Hold", "Reproduction-Required", "T-Bug"], "created": "2017-08-22 14:04:07", "closed": "2019-11-27 21:34:58", "commits": {}, "ttf": 827.0002777777778, "commitsDetails": []}, {"title": "Class name in error message from query condition methods is wrong", "body": "Following test case will fail with `org.junit.ComparisonFailure: expected:<...eld 'age' in table '[Cat]' is of invalid type...> but was:<...eld 'age' in table '[Owner]' is of invalid type...>`\r\n\r\n```\r\n@Test\r\npublic void isEmpty_acrossLink_wrongTypeThrows() {\r\n    for (RealmFieldType type : RealmFieldType.values()) {\r\n        if (SUPPORTED_IS_EMPTY_TYPES.contains(type)) {\r\n            continue;\r\n        }\r\n\r\n        RealmQuery<Owner> query = realm.where(Owner.class);\r\n        try {\r\n            query.isEmpty(Owner.FIELD_CAT + \".\" + Cat.FIELD_AGE);\r\n            fail();\r\n        } catch (IllegalArgumentException expected) {\r\n            assertEquals(String.format(Locale.US,\r\n                    \"Invalid query: field '%s' in table '%s' is of invalid type '%s'.\",\r\n                    Cat.FIELD_AGE, Cat.CLASS_NAME, RealmFieldType.INTEGER.name()),\r\n                    expected.getMessage());\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe point is that the test case uses link query.", "url": "https://github.com/realm/realm-java/issues/5096", "user": "zaki50", "labels": ["T-Bug"], "created": "2017-08-11 11:26:32", "closed": "2017-08-16 04:52:26", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Slight documentation error in chapter Threading?", "body": "\r\n#### Goal\r\n\r\n> I am reading about Threading to investigate [this Realm SO question](https://stackoverflow.com/q/45530635/8295283) and found a confusing line of text.\r\n\r\n#### Confusing text\r\n\r\nSee: https://realm.io/docs/java/latest/#threading\r\n\r\n> Once the background service adds new customers **to the UI**, the customers list is automatically updated in the UI without any additional intervention on your part.\r\n\r\nConfusion: So if you update it in the UI, it is updated in the UI???\r\n\r\n#### Expected\r\n\r\n> Once the background service adds new customers **to the realm database**, the customers list is automatically updated in the UI without any additional intervention on your part.\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): latest\r\n", "url": "https://github.com/realm/realm-java/issues/5071", "user": "aschrijver", "labels": ["T-Bug", "T-Doc"], "created": "2017-08-07 05:39:42", "closed": "2017-08-07 11:14:03", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Avoid to call compactOnLaunch if there are Realm instances opened.", "body": "This has been fixed in Object Store by https://github.com/realm/realm-object-store/pull/496\r\n\r\nHowever, it doesn't fix the java side problem since we are using dynamic schema mode of the `SharedRealm`.\r\n\r\nRevisit this issue after the OS schema integration work finished.\r\n\r\n", "url": "https://github.com/realm/realm-java/issues/5036", "user": "beeender", "labels": ["T-Bug"], "created": "2017-07-28 04:42:46", "closed": "2017-09-01 11:04:03", "commits": {"14381c5de35baa975f7ff2110f9ea3e8a04cfdd8": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "f5b6ec3fad6e06ad4ba95180c4dc5b13339d8af8": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 35.000277777777775, "commitsDetails": [{"commitHash": "14381c5de35baa975f7ff2110f9ea3e8a04cfdd8", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f5b6ec3fad6e06ad4ba95180c4dc5b13339d8af8", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["680b89b86085c0a63480a8f00219e5277da9931d"], "nameRev": "f5b6ec3fad6e06ad4ba95180c4dc5b13339d8af8 tags/v3.6.0~3", "commitMessage": "Optimize opening Realm\n\n- Open realm for checking legacy PK table issue only if 1) the realm\n  file doesn't exist, 2) it is not a sync realm config.\n- Open realm for downloading initial data only if 1) it is sync realm\n  config, 2) the realm file doesn't exist.\n- Modify the compactOnLaunch_multipleThread to reflect the fix in\n  https://github.com/realm/realm-object-store/pull/496\n  Close #5036\n- Optimize the compactOnLaunch test case. Populate 300000 objects with\n  debug version core will take 3+ minutes.\n", "commitDateTime": "2017-09-01 19:04:01", "authoredDateTime": "2017-09-01 11:07:45", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmTests.java", "insertions": 28, "deletions": 8, "lines": 36}, {"filePath": "realm/realm-library/src/main/java/io/realm/DefaultCompactOnLaunchCallback.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmCache.java", "insertions": 31, "deletions": 26, "lines": 57}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmTests.populateTestRealmAndCompactOnLaunch(io.realm.CompactOnLaunchCallback,int)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.compactOnLaunch_multipleThread()", "TOT": 8, "UPD": 2, "INS": 3, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.populateTestRealmAndCompactOnLaunch(io.realm.CompactOnLaunchCallback)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.compactOnLaunch_insufficientAmount()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.defaultCompactOnLaunch()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.defaultCompactOnLaunch_insufficientAmount()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.populateTestRealmForCompact(io.realm.Realm,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.compactOnLaunch_multipleThread().8.run()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DefaultCompactOnLaunchCallback.java", "spoonMethods": []}, {"spoonFilePath": "RealmCache.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmCache.doCreateRealmOrGetFromCache(io.realm.RealmConfiguration,java.lang.Class)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f5b6ec3fad6e06ad4ba95180c4dc5b13339d8af8"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 31.0, "deletions": 28.0, "lines": 59.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 4.0, "UPD": 0.0, "INS": 1.0, "MOV": 3.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-library/src/main/java/io/realm"], "changesInPackagesSPOON": ["io.realm.RealmCache.doCreateRealmOrGetFromCache(io.realm.RealmConfiguration,java.lang.Class)"]}, {"title": "[Sync] ClientReset, using the backup Realm file is not possible", "body": "Following the concerns from this post https://forums.realm.io/t/how-can-i-test-my-apps-error-handling/393/7\r\nit seems we don't expose a way to reuse the backup Realm file (after a ClientReset). The current API returns the full path name, making it impossible to build a new `SyncConfiguration` that targets the saved file, so the user can copy data from it, making the saved Realm nearly unusable.\r\n", "url": "https://github.com/realm/realm-java/issues/4997", "user": "nhachicha", "labels": ["Blocked", "T-Bug"], "created": "2017-07-19 20:54:13", "closed": "2017-10-03 12:58:44", "commits": {}, "ttf": 75.00027777777778, "commitsDetails": []}, {"title": "Update ErrorCode enum with new errorcodes", "body": "A user has received \"IllegalArgumentException: Unknown error code: 112\" because \r\nthere are more error codes than the ones defined in https://github.com/realm/realm-java/blob/master/realm/realm-library/src/objectServer/java/io/realm/ErrorCode.java\r\n\r\n110-116 are not defined here, but are defined in https://github.com/realm/realm-sync/blob/master/src/realm/sync/client.hpp:\r\n\r\nenum class Client::Error {\r\n    connection_closed           = 100, ///< Connection closed (no error)\r\n    unknown_message             = 101, ///< Unknown type of input message\r\n    bad_syntax                  = 102, ///< Bad syntax in input message head\r\n    limits_exceeded             = 103, ///< Limits exceeded in input message\r\n    bad_session_ident           = 104, ///< Bad session identifier in input message\r\n    bad_message_order           = 105, ///< Bad input message order\r\n    bad_file_ident_pair         = 106, ///< Bad file identifier pair (ALLOC)\r\n    bad_progress                = 107, ///< Bad progress information (DOWNLOAD)\r\n    bad_changeset_header_syntax = 108, ///< Bad syntax in changeset header (DOWNLOAD)\r\n    bad_changeset_size          = 109, ///< Bad changeset size in changeset header (DOWNLOAD)\r\n    bad_origin_file_ident       = 110, ///< Bad origin file identifier in changeset header (DOWNLOAD)\r\n    bad_server_version          = 111, ///< Bad server version in changeset header (DOWNLOAD)\r\n    bad_changeset               = 112, ///< Bad changeset (DOWNLOAD)\r\n    bad_request_ident           = 113, ///< Bad request identifier (MARK)\r\n    bad_error_code              = 114, ///< Bad error code (ERROR),\r\n    bad_compression             = 115, ///< Bad compression (DOWNLOAD)\r\n    bad_client_version          = 116, ///< Bad last integrated client version in changeset header (DOWNLOAD)\r\n};\r\n\r\nSince \"Bad changeset\" is easy to get with mismatched models, a good explanation of this error would be good.", "url": "https://github.com/realm/realm-java/issues/4980", "user": "bmunkholm", "labels": ["T-Bug"], "created": "2017-07-18 08:23:56", "closed": "2017-07-19 08:49:37", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "logout and `currentUser()`", "body": "Below test case will fail with:\r\n```\r\njava.lang.IllegalStateException: Current user is not valid if more that one valid, logged-in user exists.\r\n```\r\n\r\n```java\r\n    @Test\r\n    public void logout_currentUserMoreThanOne(){\r\n        final CountDownLatch latch = new CountDownLatch(1);\r\n        SyncUser user1 = UserFactory.createUniqueUser(Constants.AUTH_URL);\r\n        final RealmConfiguration config1 = configurationFactory.createSyncConfigurationBuilder(user1, Constants.USER_REALM)\r\n                .build();\r\n        SyncUser.currentUser().logout();\r\n        SyncUser user2 = UserFactory.createUniqueUser(Constants.AUTH_URL);\r\n        Realm realm = Realm.getInstance(config1);\r\n        SyncUser user3 = SyncUser.currentUser();\r\n    }\r\n```", "url": "https://github.com/realm/realm-java/issues/4975", "user": "beeender", "labels": ["P-0-EXPEDITE", "T-Bug"], "created": "2017-07-17 08:29:14", "closed": "2017-07-25 09:13:43", "commits": {"191d2333deb4a762530470a359d236d5929820e4": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}, "902e92a291219ceaf40186dd8ba2ed41f2644f5e": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "191d2333deb4a762530470a359d236d5929820e4", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "902e92a291219ceaf40186dd8ba2ed41f2644f5e", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["b444a595c4b272b252518a53da150961f3af31e1"], "nameRev": "902e92a291219ceaf40186dd8ba2ed41f2644f5e tags/v3.6.0~7^2~27", "commitMessage": "fixes #4975 (#5000)\n\n* fixes #4975", "commitDateTime": "2017-07-25 10:13:33", "authoredDateTime": "2017-07-25 10:13:33", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/SyncManager.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/SyncUser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/internal/SyncObjectServerFacade.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "realm/realm-library/src/syncIntegrationTest/java/io/realm/objectserver/AuthTests.java", "insertions": 15, "deletions": 0, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SyncManager.java", "spoonMethods": [{"spoonMethodName": "io.realm.SyncManager.getUserStore()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SyncUser.java", "spoonMethods": [{"spoonMethodName": "io.realm.SyncUser.isValid()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "SyncObjectServerFacade.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.SyncObjectServerFacade.getUserAndServerUrl(io.realm.RealmConfiguration)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "AuthTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.objectserver.AuthTests.logout_currentUserMoreThanOne()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "tgkill crashes in realm", "body": "\r\n#### Regarding Realm tgkill Crashes\r\n\r\n> Hi guys recently I am seeing crashes due to realm in some specific devices mostly **motorola deivces** (till now around 40 crashes happend) \r\nI have used crashlytics to capture crashes but these are not being captured by crashlytics.\r\nI am seeing this crashes only in playstore ANRs & Crashes section.\r\n\r\nbefore posting it here I have searched online but couldn't find any solution\r\n\r\n#### Error details\r\n\r\n>  backtrace:\r\n  native: pc 0000000000049c44  /system/lib/libc.so (tgkill+12)\r\n  native: pc 00000000000473e3  /system/lib/libc.so (pthread_kill+34)\r\n  native: pc 000000000001d535  /system/lib/libc.so (raise+10)\r\n  native: pc 0000000000019081  /system/lib/libc.so (__libc_android_abort+34)\r\n  native: pc 00000000000170e4  /system/lib/libc.so (abort+4)\r\n  native: pc 000000000015d938  /data/app/com.appsbynelli.seniorbro-1/lib/arm/librealm-jni.so (_ZN9__gnu_cxx27__verbose_terminate_handlerEv+348)\r\n  native: pc 00000000001307ec  /data/app/com.appsbynelli.seniorbro-1/lib/arm/librealm-jni.so (_ZN10__cxxabiv111__terminateEPFvvE+8)\r\n  native: pc 000000000013088c  /data/app/com.appsbynelli.seniorbro-1/lib/arm/librealm-jni.so (_ZSt9terminatev+12)\r\n  native: pc 000000000015c828  /data/app/com.appsbynelli.seniorbro-1/lib/arm/librealm-jni.so\r\n  native: pc 0000000000046eb3  /system/lib/libc.so (_ZL15__pthread_startPv+22)\r\n  native: pc 0000000000019acd  /system/lib/libc.so (__start_thread+6)\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 3.0.0\r\n\r\nRealm sync feature enabled: no\r\n\r\nWhich Android version and devices: ?\r\nMoto G(4) Plus (athene_f)\t8\t22.9%\r\nMoto X Play (lux_uds)\t7\t20.0%\r\nMoto G (5) Plus (potter_n)\t6\t17.1%\r\nOne (A0001)\t6\t17.1%\r\nVIBE K6 Power (K33a42)\t4\t11.4%\r\nMoto E3 Power (taido_row)\t3\t8.6%\r\nX (OnePlus)\t1\t2.9%\r\n\r\nBy Android Version :- \r\n\r\nAndroid 7.0 | 18 | 51.4%\r\n-- | -- | --\r\nAndroid 6.0 | 17 | 48.6%\r\n\r\n\r\n\r\n\r\n", "url": "https://github.com/realm/realm-java/issues/4970", "user": "Prashanth-Nelli", "labels": ["P-3-Optional", "Reproduction-Required", "T-Bug"], "created": "2017-07-14 19:52:39", "closed": "2017-07-31 17:33:02", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "Admin user and UserStore", "body": "```c++\r\nstd::shared_ptr<SyncUser> SyncManager::get_user(const std::string& identity,\r\n                                       std::string refresh_token,\r\n                                       util::Optional<std::string> auth_server_url=none,\r\n                                       SyncUser::TokenType token_type=SyncUser::TokenType::Normal);\r\n```\r\n\r\nis called to create a user in user store.\r\n\r\n```c++\r\nJNIEXPORT void JNICALL Java_io_realm_RealmFileUserStore_nativeUpdateOrCreateUser(JNIEnv* env, jclass,\r\n                                                                                 jstring identity, jstring json_token,\r\n                                                                                 jstring url)\r\n{\r\n    TR_ENTER()\r\n    try {\r\n        JStringAccessor user_identity(env, identity);     // throws\r\n        JStringAccessor user_json_token(env, json_token); // throws\r\n        JStringAccessor auth_url(env, url);               // throws\r\n        SyncManager::shared().get_user(user_identity, user_json_token, std::string(auth_url));\r\n    }\r\n    CATCH_STD()\r\n}\r\n```\r\n\r\nBut for the admin user, `token_type` is not set. So the admin user will be stored as normal user. Why?\r\n\r\nAlso, if we are going to fix this, also have to check https://github.com/realm/realm-object-store/blob/master/src/sync/sync_user.cpp#L141 which doesn't allow admin user to logout. why?", "url": "https://github.com/realm/realm-java/issues/4967", "user": "beeender", "labels": ["P-1-Required", "T-Bug"], "created": "2017-07-14 04:45:16", "closed": "2017-07-14 05:17:04", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "android:debuggable=\"true\" and strange crash with  JNI DETECTED ERROR IN APPLICATION", "body": "#4963 reverted a change that `android:debuggable=\"true\"` in `AndroidManifest.xml` .\r\n\r\nWhen this is set, `RealmTests` will fail on `compactOnLaunch_shouldNotCompact` with a native crash:\r\n\r\n```\r\n07-13 04:51:34.308 F/DEBUG   (  485): Abort message: 'art/runtime/java_vm_ext.cc:410] JNI DETECTED ERROR IN APPLICATION: can't call boolean io.realm.DefaultCompactOnLaunchCallback.shouldCompact(long, long) on instance of io.realm.RealmTests$6'\r\n```\r\n\r\nThis is very strange. I did some debugging and I can confirm a `CompactOnLaunchCallback` was passed to the relevant JNI method. And it is NOT a `RealmTests` instance.\r\n\r\nSo, it looks when that setting is enabled, Android has a bug somewhere that the `jobject` entries are messed up, the `CallBooleanMethod` was not trying to call the method on the given `jobject`, instead, it was calling the method on some object which was created before the given `jobject`.\r\n\r\nMaybe a memory issue in the ART/DAVIK? \r\n\r\nFull callstack:\r\n\r\n```\r\n07-13 09:19:26.174 F/libc    (24509): Fatal signal 6 (SIGABRT), code -6 in tid 24536 (roidJUnitRunner)\r\n07-13 09:19:26.285 F/DEBUG   (  485): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n07-13 09:19:26.285 F/DEBUG   (  485): Build fingerprint: 'google/bullhead/bullhead:6.0/MDA89E/2296692:user/release-keys'\r\n07-13 09:19:26.285 F/DEBUG   (  485): Revision: 'rev_1.0'\r\n07-13 09:19:26.285 F/DEBUG   (  485): ABI: 'arm64'\r\n07-13 09:19:26.285 F/DEBUG   (  485): pid: 24509, tid: 24536, name: roidJUnitRunner  >>> io.realm.test <<<\r\n07-13 09:19:26.286 F/DEBUG   (  485): signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------\r\n07-13 09:19:26.275 W/debuggerd64(  485): type=1400 audit(0.0:42592): avc: denied { search } for name=\"io.realm.test\" dev=\"dm-2\" ino=392526 scontext=u:r:debuggerd:s0 tcontext=u:object_r:app_data_file:s0:c512,c768 tclass=dir permissive=0\r\n07-13 09:19:26.306 F/DEBUG   (  485): Abort message: 'art/runtime/java_vm_ext.cc:410] JNI DETECTED ERROR IN APPLICATION: can't call boolean io.realm.DefaultCompactOnLaunchCallback.shouldCompact(long, long) on instance of io.realm.RealmTests$6'\r\n07-13 09:19:26.307 F/DEBUG   (  485):     x0   0000000000000000  x1   0000000000005fd8  x2   0000000000000006  x3   0000000000000000\r\n07-13 09:19:26.307 F/DEBUG   (  485):     x4   0000000000000000  x5   0000000000000001  x6   0000000000000000  x7   0000000000000000\r\n07-13 09:19:26.307 F/DEBUG   (  485):     x8   0000000000000083  x9   00000000000139c0  x10  00000000862e34f8  x11  00000000862e3638\r\n07-13 09:19:26.308 F/DEBUG   (  485):     x12  0000000000000000  x13  0000007f79d30000  x14  0000000000000000  x15  0000000000000000\r\n07-13 09:19:26.308 F/DEBUG   (  485):     x16  0000007f79d22568  x17  0000007f79cb4f9c  x18  0000007f79d33f50  x19  0000007f70937500\r\n07-13 09:19:26.308 F/DEBUG   (  485):     x20  0000007f70937440  x21  0000000000000000  x22  0000000000000006  x23  0000007f7580b800\r\n07-13 09:19:26.308 F/DEBUG   (  485):     x24  0000007f586539c0  x25  0000000000000000  x26  0000007f76969000  x27  0000000000000000\r\n07-13 09:19:26.308 F/DEBUG   (  485):     x28  0000007f7580b800  x29  0000007f70935030  x30  0000007f79cb2858\r\n07-13 09:19:26.308 F/DEBUG   (  485):     sp   0000007f70935030  pc   0000007f79cb4fa4  pstate 0000000020000000\r\n07-13 09:19:26.331 F/DEBUG   (  485): \r\n07-13 09:19:26.331 F/DEBUG   (  485): backtrace:\r\n07-13 09:19:26.331 F/DEBUG   (  485):     #00 pc 000000000006afa4  /system/lib64/libc.so (tgkill+8)\r\n07-13 09:19:26.331 F/DEBUG   (  485):     #01 pc 0000000000068854  /system/lib64/libc.so (pthread_kill+68)\r\n07-13 09:19:26.332 F/DEBUG   (  485):     #02 pc 0000000000023838  /system/lib64/libc.so (raise+28)\r\n07-13 09:19:26.332 F/DEBUG   (  485):     #03 pc 000000000001dfd8  /system/lib64/libc.so (abort+60)\r\n07-13 09:19:26.332 F/DEBUG   (  485):     #04 pc 00000000004357d0  /system/lib64/libart.so (art::Runtime::Abort()+324)\r\n07-13 09:19:26.332 F/DEBUG   (  485):     #05 pc 0000000000138164  /system/lib64/libart.so (art::LogMessage::~LogMessage()+3136)\r\n07-13 09:19:26.332 F/DEBUG   (  485):     #06 pc 0000000000310ab8  /system/lib64/libart.so (art::JavaVMExt::JniAbort(char const*, char const*)+2080)\r\n07-13 09:19:26.332 F/DEBUG   (  485):     #07 pc 0000000000310f38  /system/lib64/libart.so (art::JavaVMExt::JniAbortV(char const*, char const*, std::__va_list)+116)\r\n07-13 09:19:26.332 F/DEBUG   (  485):     #08 pc 0000000000143f1c  /system/lib64/libart.so (art::ScopedCheck::AbortF(char const*, ...)+144)\r\n07-13 09:19:26.333 F/DEBUG   (  485):     #09 pc 0000000000144314  /system/lib64/libart.so (art::ScopedCheck::CheckMethodAndSig(art::ScopedObjectAccess&, _jobject*, _jclass*, _jmethodID*, art::Primitive::Type, art::InvokeType)+724)\r\n07-13 09:19:26.333 F/DEBUG   (  485):     #10 pc 000000000015d9f8  /system/lib64/libart.so (art::CheckJNI::CallMethodV(char const*, _JNIEnv*, _jobject*, _jclass*, _jmethodID*, std::__va_list, art::Primitive::Type, art::InvokeType)+724)\r\n07-13 09:19:26.333 F/DEBUG   (  485):     #11 pc 0000000000160490  /system/lib64/libart.so (art::CheckJNI::CallBooleanMethodV(_JNIEnv*, _jobject*, _jmethodID*, std::__va_list)+68)\r\n07-13 09:19:26.333 F/DEBUG   (  485):     #12 pc 00000000000d370c  /data/app/io.realm.test-1/lib/arm64/librealm-jni.so (_JNIEnv::CallBooleanMethod(_jobject*, _jmethodID*, ...)+124)\r\n07-13 09:19:26.333 F/DEBUG   (  485):     #13 pc 00000000000d3750  /data/app/io.realm.test-1/lib/arm64/librealm-jni.so (std::_Function_handler<bool (unsigned long, unsigned long), Java_io_realm_internal_SharedRealm_nativeCreateConfig::'lambda'(unsigned long, unsigned long)>::_M_invoke(std::_Any_data const&, unsigned long, unsigned long)+56)\r\n07-13 09:19:26.333 F/DEBUG   (  485):     #14 pc 000000000014dc68  /data/app/io.realm.test-1/lib/arm64/librealm-jni.so (std::function<bool (unsigned long, unsigned long)>::operator()(unsigned long, unsigned long) const+24)\r\n07-13 09:19:26.333 F/DEBUG   (  485):     #15 pc 00000000001509d8  /data/app/io.realm.test-1/lib/arm64/librealm-jni.so (realm::Realm::open_with_config(realm::Realm::Config const&, std::unique_ptr<realm::Replication, std::default_delete<realm::Replication> >&, std::unique_ptr<realm::SharedGroup, std::default_delete<realm::SharedGroup> >&, std::unique_ptr<realm::Group, std::default_delete<realm::Group> >&, realm::Realm*)+3628)\r\n07-13 09:19:26.334 F/DEBUG   (  485):     #16 pc 0000000000150dc8  /data/app/io.realm.test-1/lib/arm64/librealm-jni.so (realm::Realm::Realm(realm::Realm::Config, std::shared_ptr<realm::_impl::RealmCoordinator>)+580)\r\n07-13 09:19:26.334 F/DEBUG   (  485):     #17 pc 000000000016b044  /data/app/io.realm.test-1/lib/arm64/librealm-jni.so (realm::_impl::RealmCoordinator::get_realm(realm::Realm::Config)+1776)\r\n07-13 09:19:26.334 F/DEBUG   (  485):     #18 pc 000000000014e0d0  /data/app/io.realm.test-1/lib/arm64/librealm-jni.so (realm::Realm::get_shared_realm(realm::Realm::Config)+372)\r\n07-13 09:19:26.334 F/DEBUG   (  485):     #19 pc 00000000000d7b54  /data/app/io.realm.test-1/lib/arm64/librealm-jni.so (Java_io_realm_internal_SharedRealm_nativeGetSharedRealm+536)\r\n07-13 09:19:26.334 F/DEBUG   (  485):     #20 pc 0000000001326e1c  /data/app/io.realm.test-1/oat/arm64/base.odex (offset 0xac2000) (long io.realm.internal.SharedRealm.nativeGetSharedRealm(long, io.realm.internal.RealmNotifier)+160)\r\n07-13 09:19:26.334 F/DEBUG   (  485):     #21 pc 0000000001324458  /data/app/io.realm.test-1/oat/arm64/base.odex (offset 0xac2000) (void io.realm.internal.SharedRealm.<init>(long, io.realm.RealmConfiguration, io.realm.internal.SharedRealm$SchemaVersionListener)+604)\r\n07-13 09:19:26.334 F/DEBUG   (  485):     #22 pc 0000000001325418  /data/app/io.realm.test-1/oat/arm64/base.odex (offset 0xac2000) (io.realm.internal.SharedRealm io.realm.internal.SharedRealm.getInstance(io.realm.RealmConfiguration, io.realm.internal.SharedRealm$SchemaVersionListener, boolean)+1884)\r\n07-13 09:19:26.335 F/DEBUG   (  485):     #23 pc 0000000001324c1c  /data/app/io.realm.test-1/oat/arm64/base.odex (offset 0xac2000) (io.realm.internal.SharedRealm io.realm.internal.SharedRealm.getInstance(io.realm.RealmConfiguration)+112)\r\n07-13 09:19:26.335 F/DEBUG   (  485):     #24 pc 0000000000c0bba0  /data/app/io.realm.test-1/oat/arm64/base.odex (offset 0xac2000) (io.realm.BaseRealm io.realm.RealmCache.doCreateRealmOrGetFromCache(io.realm.RealmConfiguration, java.lang.Class)+532)\r\n07-13 09:19:26.335 F/DEBUG   (  485):     #25 pc 0000000000c0b790  /data/app/io.realm.test-1/oat/arm64/base.odex (offset 0xac2000) (io.realm.BaseRealm io.realm.RealmCache.createRealmOrGetFromCache(io.realm.RealmConfiguration, java.lang.Class)+196)\r\n07-13 09:19:26.335 F/DEBUG   (  485):     #26 pc 0000000001236e00  /data/app/io.realm.test-1/oat/arm64/base.odex (offset 0xac2000) (io.realm.Realm io.realm.Realm.getInstance(io.realm.RealmConfiguration)+340)\r\n07-13 09:19:26.335 F/DEBUG   (  485):     #27 pc 0000000000cf22e0  /data/app/io.realm.test-1/oat/arm64/base.odex (offset 0xac2000) (io.realm.internal.util.Pair io.realm.RealmTests.populateTestRealmAndCompactOnLaunch(io.realm.CompactOnLaunchCallback, int)+836)\r\n07-13 09:19:26.335 F/DEBUG   (  485):     #28 pc 0000000000cf1f54  /data/app/io.realm.test-1/oat/arm64/base.odex (offset 0xac2000) (io.realm.internal.util.Pair io.realm.RealmTests.populateTestRealmAndCompactOnLaunch(io.realm.CompactOnLaunchCallback)+88)\r\n07-13 09:19:26.336 F/DEBUG   (  485):     #29 pc 0000000000cf7a38  /data/app/io.realm.test-1/oat/arm64/base.odex (offset 0xac2000) (void io.realm.RealmTests.compactOnLaunch_shouldNotCompact()+140)\r\n07-13 09:19:26.336 F/DEBUG   (  485):     #30 pc 000000000011e164  /system/lib64/libart.so (art_quick_invoke_stub+580)\r\n07-13 09:19:26.336 F/DEBUG   (  485):     #31 pc 000000000012e01c  /system/lib64/libart.so (art::ArtMethod::Invoke(art::Thread*, unsigned int*, unsigned int, art::JValue*, char const*)+176)\r\n07-13 09:19:26.336 F/DEBUG   (  485):     #32 pc 0000000000430ac8  /system/lib64/libart.so (art::InvokeMethod(art::ScopedObjectAccessAlreadyRunnable const&, _jobject*, _jobject*, _jobject*, unsigned long)+888)\r\n07-13 09:19:26.336 F/DEBUG   (  485):     #33 pc 00000000003c93dc  /system/lib64/libart.so (art::Method_invoke(_JNIEnv*, _jobject*, _jobject*, _jobject*)+40)\r\n07-13 09:19:26.336 F/DEBUG   (  485):     #34 pc 000000007273f3a4  /data/dalvik-cache/arm64/system@framework@boot.oat (offset 0x1ed4000)\r\n07-13 09:19:27.055 W/ActivityManager(  880): Error in app io.realm.test running instrumentation ComponentInfo{io.realm.test/android.support.test.runner.AndroidJUnitRunner}:\r\n07-13 09:19:27.055 W/ActivityManager(  880):   Native crash\r\n07-13 09:19:27.055 W/ActivityManager(  880):   Native crash: Aborted\r\n\r\n```", "url": "https://github.com/realm/realm-java/issues/4964", "user": "beeender", "labels": ["P-1-Required", "T-Bug"], "created": "2017-07-13 08:23:11", "closed": "2017-08-02 04:14:08", "commits": {"3036a9ff4efc9cd2b81d3c90d9bb6d195e7ff711": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "d7f7e839600fef3922ddbafce959599b5d485375": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "0bc6e9c5fab66d48edf704492da7336596fc7a70": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "1f1a44260eaaddc3cd1e7d059ca202fd8c02285e": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 19.00027777777778, "commitsDetails": [{"commitHash": "3036a9ff4efc9cd2b81d3c90d9bb6d195e7ff711", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d7f7e839600fef3922ddbafce959599b5d485375", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0bc6e9c5fab66d48edf704492da7336596fc7a70", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1f1a44260eaaddc3cd1e7d059ca202fd8c02285e", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["64582d29074410609feff83a74e334a6df91dfb1"], "nameRev": "1f1a44260eaaddc3cd1e7d059ca202fd8c02285e tags/v3.6.0~7^2~22", "commitMessage": "Work around jmethod bug with Android\n\n- cherry-pick #4939 to enabled debug in menifest which caused a crash\n  described in #4964.\n- Removed API to create JavaMethod from jobject/class name string.\n  There seems to be a bug in Android JVM when getting the method by:\n  jclass cls = env->GetObjectClass(obj);\n  jmethodID method = env->GetMethodID(cls, \"xxx\", \"xxx\")\n  The methodID retrieved by the above way triggers a strange bug in JVM,\n  it reports the method cannot be found on a non-relevant object. Like:\n  \"\n  can't call boolean\n  io.realm.DefaultCompactOnLaunchCallback.shouldCompact(long, long) on\n  instance of io.realm.RealmTests$6'\n  \"\n  Where RealmTest$6 has nothing to do with that JNI call.\n  It is not because of the local ref of cls has been deleted -- Even if\n  it is deleted, the methodID should still be valid according to the\n  doc:\n\n  The class references, field IDs, and method IDs are guaranteed valid\n  until the class is unloaded. Classes are only unloaded if all classes\n  associated with a ClassLoader can be garbage collected, which is rare\n  but will not be impossible in Android.\n\n  The class should never be unload in this case!\n- For safety reasons, the JavaMethod should only be created from a\n  JavaClass right now to avoid future surprise.\n\nClose #4964\n", "commitDateTime": "2017-08-02 12:13:59", "authoredDateTime": "2017-07-28 18:34:29", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_Collection.cpp", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_OsObject.cpp", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "realm/realm-library/src/main/cpp/java_binding_context.cpp", "insertions": 9, "deletions": 2, "lines": 11}, {"filePath": "realm/realm-library/src/main/cpp/java_binding_context.hpp", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "realm/realm-library/src/main/cpp/java_sort_descriptor.cpp", "insertions": 11, "deletions": 3, "lines": 14}, {"filePath": "realm/realm-library/src/main/cpp/java_sort_descriptor.hpp", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "realm/realm-library/src/main/cpp/jni_util/java_method.cpp", "insertions": 2, "deletions": 22, "lines": 24}, {"filePath": "realm/realm-library/src/main/cpp/jni_util/java_method.hpp", "insertions": 21, "deletions": 3, "lines": 24}, {"filePath": "realm/realm-library/src/main/java/io/realm/CompactOnLaunchCallback.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/OsObject.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/SortDescriptor.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/SyncManager.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/SyncSession.java", "insertions": 0, "deletions": 3, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CompactOnLaunchCallback.java", "spoonMethods": []}, {"spoonFilePath": "OsObject.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.OsObject.notifyChangeListeners(java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SortDescriptor.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.SortDescriptor.getColumnIndices()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.SortDescriptor.getAscendings()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.SortDescriptor.getTablePtr()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SyncManager.java", "spoonMethods": [{"spoonMethodName": "io.realm.SyncManager.notifyProgressListener(java.lang.String,long,long,long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SyncSession.java", "spoonMethods": [{"spoonMethodName": "io.realm.SyncSession.notifySessionError(int,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.SyncSession.getState()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Logout and opend Realm instance", "body": "From the `SyncUser.logout()` document:\r\n\r\n```\r\n     * @throws IllegalStateException if any Realms owned by this user is still open. They should be closed before\r\n     * logging out.\r\n```\r\n\r\nBut this is not true. It is checking `ObjectServerUser.sessions` to determine if there is any Realm instance is still opened. But `ObjectServerUser.sessions` is used anymore after we moved session logic to Object Store.\r\n\r\nTo solve this:\r\n - Do we really want to restrict user from logging out when Realm instance are still opened? From my opinion. it is very difficult if there are realm instance in the background in user's app. It the relevant Realm instance stops syncing, then it would be good enough for user.\r\n- If we allow this, we need to ensure user won't open a Realm instance with the same name for a different user even in **multi-processes** environment !\r\n- If we disallow this, then needs to also consider the corner case for `getInstanceAsync()`.", "url": "https://github.com/realm/realm-java/issues/4962", "user": "beeender", "labels": ["P-1-Required", "T-Bug"], "created": "2017-07-13 04:09:38", "closed": "2017-08-21 10:34:53", "commits": {"5db33bcb5966468a2716450b58240a9d2f0d5a86": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}}, "ttf": 39.000277777777775, "commitsDetails": [{"commitHash": "5db33bcb5966468a2716450b58240a9d2f0d5a86", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": ["0804efa356ca075728b331ba57daee29655b728f"], "nameRev": "5db33bcb5966468a2716450b58240a9d2f0d5a86 tags/v3.6.0~17", "commitMessage": "Remove ObjectServerUser #3741 #4962 #5028 (#5020)\n\n* remove ObjectServerUser\r\n\r\n* add multiple session tests\r\n\r\n* Add regression test for old SyncUser JSON\r\n\r\n* Using identity with authURL to identity a SyncUser\r\n", "commitDateTime": "2017-08-21 11:31:21", "authoredDateTime": "2017-08-21 11:31:21", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "examples/secureTokenAndroidKeyStore/src/main/java/io/realm/examples/securetokenandroidkeystore/MainActivity.java", "insertions": 0, "deletions": 10, "lines": 10}, {"filePath": "realm/realm-library/src/androidTestObjectServer/java/io/realm/AuthenticateRequestTests.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "realm/realm-library/src/androidTestObjectServer/java/io/realm/SessionTests.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "realm/realm-library/src/androidTestObjectServer/java/io/realm/SyncUserTests.java", "insertions": 125, "deletions": 1, "lines": 126}, {"filePath": "realm/realm-library/src/androidTestObjectServer/java/io/realm/internal/objectserver/ObjectServerUserTests.java", "insertions": 0, "deletions": 75, "lines": 75}, {"filePath": "realm/realm-library/src/androidTestObjectServer/java/io/realm/util/SyncTestUtils.java", "insertions": 6, "deletions": 55, "lines": 61}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_SyncManager.cpp", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/RealmFileUserStore.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/SyncManager.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/SyncSession.java", "insertions": 29, "deletions": 25, "lines": 54}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/SyncUser.java", "insertions": 105, "deletions": 93, "lines": 198}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/internal/SyncObjectServerFacade.java", "insertions": 0, "deletions": 12, "lines": 12}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/internal/objectserver/ObjectServerUser.java", "insertions": 0, "deletions": 258, "lines": 258}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/internal/objectserver/SyncUtil.java", "insertions": 0, "deletions": 37, "lines": 37}, {"filePath": "realm/realm-library/src/syncIntegrationTest/java/io/realm/SyncedRealmTests.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "realm/realm-library/src/syncIntegrationTest/java/io/realm/objectserver/AuthTests.java", "insertions": 162, "deletions": 34, "lines": 196}, {"filePath": "realm/realm-library/src/syncIntegrationTest/java/io/realm/objectserver/EncryptedSynchronizedRealmTests.java", "insertions": 27, "deletions": 8, "lines": 35}, {"filePath": "realm/realm-library/src/syncIntegrationTest/java/io/realm/objectserver/SyncSessionTests.java", "insertions": 300, "deletions": 18, "lines": 318}, {"filePath": "realm/realm-library/src/syncIntegrationTest/java/io/realm/objectserver/utils/Constants.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tools/sync_test_server/configuration.yml", "insertions": 4, "deletions": 1, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Duplicate PrimaryKeys with CopyToRealmOrUpdate - how is this possible?", "body": "Hi,\r\nI've got some nested RealmObjects which I try to insert into Realm via copytoRealmOrUpdate. This is my object\r\n\r\n```\r\npublic class Site extends RealmObject {\r\n\r\n    @Required\r\n    @PrimaryKey\r\n    private String SiteUUID;\r\n\r\n    private RealmList<AttributeObject> mAttributeObjects;\r\n    private RealmList<Campaign> Campaigns;\r\n\r\n    public Site() {}\r\n\r\n    //getter und setter\r\n}\r\n\r\npublic class Campaign extends RealmObject {\r\n\r\n    @Required\r\n    @PrimaryKey\r\n    private String CampaignUUID;\r\n\r\n    @Expose\r\n    @SerializedName(\"name\")\r\n    private String Name;\r\n\r\n    public Campaign() {}\r\n}\r\n\r\npublic class AttributeObject extends RealmObject {\r\n\r\n    @PrimaryKey\r\n    @Required\r\n    private String AttributeObjectUUID;\r\n\r\n    private Site site;\r\n\r\n    public AttributeObject() {}\r\n}\r\n```\r\n\r\nThe tricky part for this object relies in this other class attributes which could contain a copy of the site object themselfs. I try to clarify this with the JSON which gets parsed into the Site object.\r\n\r\n```\r\n{\r\n    \"siteUUID\": \"4d310340-1dd1-436b-ab05-723eaea9730f\",\r\n    \"attributes\": [\r\n        {\r\n            \"attributeUUID\": \"270568ce-f31a-4343-9a53-ba32f3a0ded8\",\r\n            \"site\": {\r\n                \"siteUUID\": \"4d310340-1dd1-436b-ab05-723eaea9730f\",\r\n                \"campaigns\": [\r\n                    {\r\n                        \"campaignUUID\": \"2c2890d0-b15b-497b-946d-affce01c0bfa\",\r\n                        \"name\": \"Campaign1\"\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    ],\r\n    \"campaigns\": [\r\n        {\r\n            \"campaignUUID\": \"2c2890d0-b15b-497b-946d-affce01c0bfa\",\r\n            \"name\": \"Campaign1\"\r\n        }\r\n    ]\r\n}\r\n```\r\nAs we can see the root Site object got a campaign and some other objects called \"attributes\". However these objects need to have a reference to its parent site and this site also contains the Campaign object. So we have two Sites with the same PrimaryKey and two Campaign objects with the same PrimaryKey. \r\n\r\nAfter I've parsed the object from JSON to RealmObject I tried to store the object in the database with my appendToRealm method\r\n\r\n```\r\npublic static RealmObject appendToRealm(final RealmObject object) {\r\n       try (Realm realm = Realm.getDefaultInstance()) {\r\n\r\n           final RealmObject[] managedObject = new RealmObject[1];\r\n           realm.executeTransaction(new Realm.Transaction() {\r\n               @Override\r\n               public void execute(Realm realm) {\r\n                    managedObject[0] = realm.copyToRealmOrUpdate(object);\r\n               }\r\n           });\r\n\r\n           return managedObject[0];\r\n       } catch (Exception e) {\r\n           e.printStackTrace();\r\n           HockeyCrashHelper.getInstance().sendCrash(e);\r\n       }\r\n\r\n       return null;\r\n}\r\n```\r\nIf my understanding is correct I expect Realm to loop the object tree recursively and inserts or updates all objects to the database. And because both duplicate objects contain the same primary key I expected Realm to only contain one Site object and only one Campaign object in the database after the appendToRealm method. But the Campaign object was inserted twice. If I see the logs in my app and inspect the database in RealmBrowser they show two instances of the Campaign object with the same uuid as primary key. The Site object is present only once, although it has been twice in the JSON, too. How is this even possible? For all other objects copyToRealmOrUpdate works as expected. Maybe you can clarify this problem?\r\n\r\nThanks in advance :)\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 3.3.2\r\nRealm sync feature enabled: no\r\nAndroid Studio version: 2.3.3\r\nWhich Android version and device: Sony Xperia Z5, Android 7.0\r\n", "url": "https://github.com/realm/realm-java/issues/4957", "user": "jennymolske", "labels": ["P-1-Required", "T-Bug"], "created": "2017-07-12 07:33:42", "closed": "2017-08-01 08:11:30", "commits": {"11d3c3a5eaa42c04105dc9b62e23da6ff8a0fa10": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "59d9f29fb4fa580b02ee3bec4d5eae1920915113": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 20.00027777777778, "commitsDetails": [{"commitHash": "11d3c3a5eaa42c04105dc9b62e23da6ff8a0fa10", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "59d9f29fb4fa580b02ee3bec4d5eae1920915113", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["129ce562547d03574709b088de45cd472c9e76e4"], "nameRev": "59d9f29fb4fa580b02ee3bec4d5eae1920915113 tags/v3.6.0~7^2~24", "commitMessage": "copyToRealmOrUpdate cause dup values in list field (#5023)\n\nClose #4957\r\nWe are using HashMap to maintain a cache of added managed RealmObject\r\nwhen doing copyOrUpdate. But if the given object graph contains objects\r\nwhich have same PK but are different java object, cache missing will\r\nhappen. That caused the object got set multiple times. For non-list\r\nfields, it is not a problem since it will eventually has the expected\r\nvalue if user's objects graph is consistent. For list, that results the\r\nelements in the list are added multiple times since we don't clear the\r\nRealmList in copy().\r\n", "commitDateTime": "2017-08-01 16:11:18", "authoredDateTime": "2017-08-01 16:11:18", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyClassGenerator.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/AllTypesRealmProxy.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmTests.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/entities/Object4957.java", "insertions": 50, "deletions": 0, "lines": 50}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmProxyClassGenerator.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitCopyMethod(com.squareup.javawriter.JavaWriter)", "TOT": 13, "UPD": 11, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AllTypesRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.AllTypesRealmProxy.copy(io.realm.Realm,some.test.AllTypes,boolean,java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmTests.copyToRealmOrUpdate_bug4957()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Object4957.java", "spoonMethods": [{"spoonMethodName": "io.realm.entities.Object4957", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Realm 3.4.0: isEmpty for linked relationships causes SIGSEGV", "body": "#### Goal\r\n\r\nQuery for empty inverse relationships: get all dogs without owners.\r\n\r\n#### Expected Results\r\n\r\nQuery should return the dogs without owners.\r\n\r\n#### Actual Results\r\n\r\nSIGSEGV:\r\n```\r\n06-27 22:21:19.670 3461-3461/com.realm.bug.realmbug A/libc: Fatal signal 11 (SIGSEGV), code 2, fault addr 0x2429a227 in tid 3461 (lm.bug.realmbug)\r\n                                                            \r\n                                                            [ 06-27 22:21:19.670  1256: 1256 W/         ]\r\n                                                            debuggerd: handling request: pid=3461 uid=10079 gid=10079 tid=3461\r\n```\r\nFull log attached: [full_log.txt](https://github.com/realm/realm-java/files/1106998/full_log.txt)\r\n\r\n#### Steps & Code to Reproduce\r\n\r\nThe first query (`equalTo(\"owner.id\", \"person\")`) is successful, and works as expected:\r\n`06-27 21:52:47.999 31101-31101/com.realm.bug.realmbug I/MainActivity: size=1`\r\nHowever the second (`isEmpty(\"owner\")`) causes segfault.\r\n\r\n#### Code Sample\r\n\r\n`Dog` and `Person` are simple `RealmObject`s with `@PrimaryKey` id.\r\n\r\n```java\r\nprivate void testRealmBug(Context context) {\r\n    Realm.init(context);\r\n    RealmConfiguration realmConfiguration = new RealmConfiguration.Builder()\r\n            .inMemory()\r\n            .schemaVersion(2)\r\n            .build();\r\n    Realm realm = Realm.getInstance(realmConfiguration);\r\n\r\n    realm.executeTransaction(new Realm.Transaction() {\r\n        @Override\r\n        public void execute(Realm realm) {\r\n            Dog dog = realm.createObject(Dog.class, \"dog\");\r\n            Person person = realm.createObject(Person.class, \"person\");\r\n            person.getDogs().add(dog);\r\n        }\r\n    });\r\n\r\n    // works as expected\r\n    RealmResults<Dog> dogs = realm.where(Dog.class)\r\n            .equalTo(\"owner.id\", \"person\")\r\n            .findAll();\r\n    Log.i(TAG, \"size=\" + dogs.size());\r\n\r\n    // SIGSEGV\r\n    dogs = realm.where(Dog.class)\r\n            .isEmpty(\"owner\")\r\n            .findAll();\r\n    Log.i(TAG, \"size=\" + dogs.size());\r\n}\r\n```\r\n\r\n```java\r\n@RealmClass\r\npublic class Person extends RealmObject {\r\n\r\n    @PrimaryKey\r\n    private String id;\r\n\r\n    private RealmList<Dog> dogs;\r\n\r\n    public Person() {\r\n    }\r\n\r\n    public RealmList<Dog> getDogs() {\r\n        return dogs;\r\n    }\r\n\r\n    public String getId() {\r\n        return id;\r\n    }\r\n}\r\n```\r\n\r\n```java\r\n@RealmClass\r\npublic class Dog extends RealmObject {\r\n\r\n    @PrimaryKey\r\n    private String id;\r\n\r\n    @LinkingObjects(\"dogs\")\r\n    private final RealmResults<Person> owner = null;\r\n\r\n    public Dog() {\r\n    }\r\n\r\n    public String getId() {\r\n        return id;\r\n    }\r\n}\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 3.4.0\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.3.3\r\n\r\nWhich Android version and device: API24 Nexus 5X (emulator), API25 Pixel (emulator)\r\n", "url": "https://github.com/realm/realm-java/issues/4864", "user": "polgacsa", "labels": ["T-Bug"], "created": "2017-06-27 22:10:01", "closed": "2017-07-03 19:16:30", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Realm 3.4.0: exception for nested isNull() query", "body": "#### Goal\r\nI had a nested _isNull_ query on a child object (like described in the [documentation](https://realm.io/docs/java/latest/#chaining-queries)). The query worked well until I updated to realm version 3.4.0.\r\n\r\n#### Expected Results\r\nI expected that the query is executed without exception using realm version 3.4.0 like it was with realm version 3.3.2.\r\n\r\nDocumentation of _isNull_:\r\n```java\r\n /**\r\n     * Tests if a field is {@code null}. Only works for nullable fields.\r\n     * <p>\r\n     * For link queries, if any part of the link path is {@code null} the whole path is considered to be {@code null}\r\n     * e.g., {@code isNull(\"linkField.stringField\")} will be considered to be {@code null} if either {@code linkField} or\r\n     * {@code linkField.stringField} is {@code null}.\r\n     *\r\n     * @param fieldName the field name.\r\n     * @return the query object.\r\n     * @throws java.lang.IllegalArgumentException if the field is not nullable.\r\n     * @see Required for further infomation.\r\n     */\r\n```\r\n\r\n#### Actual Results\r\nI received an exception using the nested _isNull_ query\r\n```\r\njava.lang.IllegalArgumentException: Illegal Argument: isNull() by nested query for link field is not supported.\r\n at io.realm.internal.TableQuery.nativeIsNull(Native Method)\r\n at io.realm.internal.TableQuery.isNull(TableQuery.java:611)\r\n at io.realm.RealmQuery.isNull(RealmQuery.java:205)\r\n at com.bz.realmchildquery.MainActivity.executeQuery(MainActivity.java:63)\r\n```\r\n\r\n#### Code Sample\r\nYou can download a sample project from: \r\nhttps://github.com/baloghz/RealmChildQuery.git\r\n\r\nFor demonstration I slightly modified the example from the [documentation](https://realm.io/docs/java/latest/#chaining-queries). A person can have one optional dog and the dog has an optional parameters (ate_at).\r\n\r\n```java\r\npublic class Dog extends RealmObject {\r\n    private Long ate_at;  // optional\r\n    // getters & setters ...\r\n}\r\n\r\npublic class Person extends RealmObject {\r\n    private Dog dog; // optional\r\n    // getters & setters ...\r\n}\r\n```\r\nI would like to find the Persons whose dog's ate_at is null\r\n```java\r\nRealmQuery<Person> query = realm.where(Person.class).isNull(\"dog.ate_at\");\r\n```\r\n\r\nTry to change realm versions and you can see that everything works fine in 3.3.2 and not in 3.4.0\r\n\r\n#### Version of Realm and tooling\r\nRealm version when the query worked: 3.3.2 \r\nRealm version when the query gave an exception: 3.4.0\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.3.3\r\n\r\nWhich Android version and device: API21, Samsung SM-N9005", "url": "https://github.com/realm/realm-java/issues/4856", "user": "baloghz", "labels": ["T-Bug"], "created": "2017-06-27 12:33:57", "closed": "2017-06-30 07:55:00", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "impossible to get progress notification with readOnly database at the first time", "body": "when trying to open readOnly realm at the first time it is require to waitForInitialRemoteData(), the only way to work with such config is to getInstanseAsync, when i am trying to work with this method and adding Progress lisetener i am getting error \"Cannot register a progress listener before a session is created. A session will be created after the first call to Realm.getInstance()\" even if i do that after call to getInstanseAsync, if i will call getInstanse() i will block the ui thread so i will never be able to add the progress notification.\n\nRealm Version: 3.4.0", "url": "https://github.com/realm/realm-java/issues/4845", "user": "idok595", "labels": ["O-Community", "T-Bug"], "created": "2017-06-25 08:19:37", "closed": "2019-11-27 21:24:44", "commits": {}, "ttf": 885.0002777777778, "commitsDetails": []}, {"title": "Case.INSENSITIVE query broken at 3.1.3", "body": "It appears that case-insensitive queries are broken in some cases.\r\n\r\nIt appears that if you have a field with the same string in different cases, querying on the field in a case-insensitive manner returns no results, rather than the expected two results.\r\n\r\nThis behaviour was working in 3.1.2 but broke in 3.1.3. I suspect this may have been due to a change to realm core. It is still broken as of 3.3.2.\r\n\r\nSee the Repo here with a failing test:\r\nhttps://github.com/51systems/RealmBugs\r\n\r\nThe following test fails:\r\n\r\n```java\r\nrealm.beginTransaction();\r\nDog dog1 = realm.copyToRealm(Dog.create(\"ROVER\"));\r\nDog dog2 = realm.copyToRealm(Dog.create(\"Rover\"));\r\nrealm.commitTransaction();\r\n\r\nassertThat(realm.where(Dog.class).equalTo(\"name\", \"ROVER\", Case.SENSITIVE).findAll(),\r\n        containsInAnyOrder(dog1));\r\n\r\nassertThat(realm.where(Dog.class).equalTo(\"name\", \"Rover\", Case.SENSITIVE).findAll(),\r\n        containsInAnyOrder(dog2));\r\n\r\n//Fails here\r\nassertThat(realm.where(Dog.class).equalTo(\"name\", \"rover\", Case.INSENSITIVE).findAll(),\r\n        containsInAnyOrder(dog1, dog2));\r\n```", "url": "https://github.com/realm/realm-java/issues/4788", "user": "51systems", "labels": ["Blocked", "T-Bug"], "created": "2017-06-15 01:43:40", "closed": "2017-07-11 09:29:53", "commits": {}, "ttf": 26.00027777777778, "commitsDetails": []}, {"title": "Malformed JSON when accessing synced Realms", "body": "#### Goal\r\n\r\nSeveral users reported about their attempts to change permissions and make use of those extended permissions. It's not yet exactly clear yet when and where the error is happening, but from the reports we've received so far it appears to be related to client-side code paths used around permission management or accessing global Realms.\r\n\r\nhttps://github.com/realm/realm-mobile-platform/issues/199\r\nhttps://github.com/realm/realm-mobile-platform/issues/202\r\nhttps://github.com/realm/realm-mobile-platform/issues/205\r\nhttps://github.com/realm/realm-java/issues/4516#issuecomment-304252816\r\n\r\n#### Preliminary Investigation Results\r\n\r\nIn these cases the SDK is connecting with a malformed access token. The value used here must have been set to the sync client session, so that the value is passed into the header field `X-Realm-Access-Token` which is filled by the sync client implementation.\r\n\r\n```sh\r\n[proxy] internal error. Code undefined, status: undefined, message: SyntaxError: Unexpected token j in JSON at position 0\r\n    at Object.parse (native)\r\n    at ProxyService.webSocketUpgradeHandler (/usr/lib/nodejs/realm-object-server-developer/.build/src/node/services/proxy.js:104:30)\r\n    at ProxyService.safeUpgrade (/usr/lib/nodejs/realm-object-server-developer/.build/src/node/services/proxy.js:78:12)\r\n    at emitThree (events.js:116:13)\r\n    at Server.emit (events.js:194:7)\r\n    at onParserExecuteCommon (_http_server.js:411:14)\r\n    at HTTPParser.onParserExecute (_http_server.js:379:5)\r\n```\r\n\r\n[Logs](https://pastebin.com/3yjvxJNV), we've received, show that the following headers are sent to the server when trying to establish a websockets connection:\r\n```\r\nGET /realm-object-server HTTP/1.1\r\nConnection: Upgrade\r\nHost: 192.168.1.70\r\nSec-WebSocket-Key: uGIkQ5M+ipdA8KBswVeGoQ==\r\nSec-WebSocket-Protocol: io.realm.protocol\r\nSec-WebSocket-Version: 13\r\nUpgrade: websocket\r\nX-Realm-Access-Token: {\"authUrl\":\"http:\\/\\/192.168.1.70:9080\\/auth\",\"userToken\":{\"token\":\"\",\"token_data\":{\"identity\":\"a163774fa72aeabff4f05cfa472cccd3\",\"path\":\"\",\"expires\":1811193952,\"access\":[\"unknown\"],\"is_admin\":true}},\"realms\":[]}\r\n```\r\n\r\nThe server would expect a Base64-encoded access token concatenated with its signature, separated by a colon. (basically interpreted as `JSON.parse(tokenJson.split(':')[0])`) Trying to interpret the given value as such would cause a syntax error as seen above. The syntax error occuring which is internally caught and causes that the request is rejected with status code 400 as Bad Request which eventually prevents the client from establishing a connection.\r\n\r\nThe value given equals the internal JSON representation exclusively used by the Java SDK to represent an `ObjectServerUser` or `SyncUser`.\r\n\r\n#### Version of Realm and tooling\r\n\r\nThis was reported for:\r\n\r\nServer OS & Version: Ubuntu 16.04, Realm Object Server v1.7.2\r\n\r\nClient Version: 3.3.1\r\n\r\nRealm sync feature enabled: yes\r\n\r\nAndroid Studio version: 2.3.2 (compileSdkVersion 25)\r\n\r\nWhich Android version and device: unknown\r\n\r\n/c @bigfish24 @cmelchior @kneth\r\n", "url": "https://github.com/realm/realm-java/issues/4750", "user": "mrackwitz", "labels": ["T-Bug"], "created": "2017-06-02 11:13:28", "closed": "2017-06-13 06:37:34", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "String formatting should not happen for ignored log", "body": "In `RealmLog`, string formatting is always happening even when the log is ignored.\r\n\r\nWe should do it only when the log entry is actually used.", "url": "https://github.com/realm/realm-java/issues/4734", "user": "zaki50", "labels": ["T-Bug"], "created": "2017-05-31 08:49:36", "closed": "2017-06-02 09:07:34", "commits": {"ee81160e82609a550742570593e894fc27af99c5": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "92ca75b9e1b87b2c60961981b187a6888c8fb923": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "ee81160e82609a550742570593e894fc27af99c5", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "92ca75b9e1b87b2c60961981b187a6888c8fb923", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["277eb0dfaa15fbf0d3efa3e74e1d64e214506443"], "nameRev": "92ca75b9e1b87b2c60961981b187a6888c8fb923 tags/v3.3.2~7", "commitMessage": "Only format log message if the level is enabled\n\nfix #4734\n", "commitDateTime": "2017-06-02 17:07:25", "authoredDateTime": "2017-06-02 15:16:17", "commitGitStats": [{"filePath": "realm/realm-library/src/main/java/io/realm/log/RealmLog.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmLog.java", "spoonMethods": [{"spoonMethodName": "io.realm.log.RealmLog.log(int,java.lang.Throwable,java.lang.String,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["92ca75b9e1b87b2c60961981b187a6888c8fb923"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4.0, "deletions": 0.0, "lines": 4.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1.0, "UPD": 0.0, "INS": 1.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-library/src/main/java/io/realm/log"], "changesInPackagesSPOON": ["io.realm.log.RealmLog.log(int,java.lang.Throwable,java.lang.String,java.lang.Object[])"]}, {"title": "After `login_withAccessToken`, sync client thread not responses anymore", "body": "To reproduce this issue, just pull branch `mc/sync-client-no-responding-error`\r\nand run test under package `io.realm.objectserver.integrationtest`\r\n\r\nIt will run two tests, `login_withAccessToken` then `expectSimpleCommit`\r\n\r\nAfter `login_withAccessToken` finished, Realm can be opened successfully in `expectSimpleCommit` without any error message on the main process. However, when changes committed in the remote process, the sync client thread on the main process doesn't have any response to it.\r\n\r\nVery much like something is not right in sync.\r\n\r\nBut if `expectALot` is enabled in `ProcessCommitTests` as well, the `expectSimpleCommit` will still fail but `expectALot` will pass. It feels like the sync client gets reset at some point.", "url": "https://github.com/realm/realm-java/issues/4711", "user": "beeender", "labels": ["T-Bug"], "created": "2017-05-26 13:35:03", "closed": "2017-09-21 07:18:35", "commits": {"9d38e6d9dddb95ded641d1d5f9a5dcd920c56f4b": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "4b655703464d483f68229af477604482068e9644": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 117.00027777777778, "commitsDetails": [{"commitHash": "9d38e6d9dddb95ded641d1d5f9a5dcd920c56f4b", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "4b655703464d483f68229af477604482068e9644", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["1be534ea65193f641ed94c7c3bea4025bd2ecf8c"], "nameRev": "4b655703464d483f68229af477604482068e9644 tags/v4.0.0-RC1~33", "commitMessage": "Enable test login_withAccessToken\n\nClose #4711\n", "commitDateTime": "2017-09-21 15:18:34", "authoredDateTime": "2017-09-20 16:28:43", "commitGitStats": [{"filePath": "realm/realm-library/src/syncIntegrationTest/java/io/realm/objectserver/AuthTests.java", "insertions": 2, "deletions": 13, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AuthTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.objectserver.AuthTests.login_withAccessToken()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.objectserver.AuthTests.login_withAccessToken().3.onSuccess(io.realm.SyncUser).2.run()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "io.realm.objectserver.AuthTests.login_withAccessToken().3.onSuccess(io.realm.SyncUser)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4b655703464d483f68229af477604482068e9644"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Call reconnect when refresh token is received", "body": "For details:\r\n\r\n> there should be very little to change binding-side to resolve this, just to call `cancel_reconnect_delay()` when receiving a refreshed token. See cocoa PR: https://github.com/realm/realm-cocoa/pull/4957\r\n", "url": "https://github.com/realm/realm-java/issues/4676", "user": "cmelchior", "labels": ["T-Bug"], "created": "2017-05-20 13:29:39", "closed": "2017-06-20 06:20:44", "commits": {}, "ttf": 30.00027777777778, "commitsDetails": []}, {"title": "javassist.NotFoundException on Realm classes when running connectedAndroidTest", "body": "Using last android plugin (3.0.0-alpha1) running the connectedAndroidTest task makes it crash on compile with a Error:Execution failed for task ':app:transformClassesWithRealmTransformerForDebugAndroidTest'.\r\n> javassist.NotFoundException: com.package.myapp.model.MyModel\r\n\r\nthe app compilation itself works, but the androidTest can't find the classes.\r\nIt's a 100% Kotlin project.\r\nIf you need a sample project I can give one for you I think (it is reproductible on the projects I work on)\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 3.2.0\r\nRealm sync feature enabled: no\r\nAndroid Studio version: 3.0.0\r\nUsing Kotlin and gradle 4.0.0-m2\r\n\r\n", "url": "https://github.com/realm/realm-java/issues/4662", "user": "NitroG42", "labels": ["T-Bug"], "created": "2017-05-18 12:46:16", "closed": "2017-09-16 15:39:48", "commits": {"61da52288a1865a4d916f3d7c492a6e56677b626": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "1516e5ef382c3136f51747d47ef319502c3fa026": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 121.00027777777778, "commitsDetails": [{"commitHash": "61da52288a1865a4d916f3d7c492a6e56677b626", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1516e5ef382c3136f51747d47ef319502c3fa026", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "in android studio 3.0 Warnings:Transform 'RealmTransformer' uses scope PROJECT_LOCAL_DEPS which is deprecated and replaced with EXTERNAL_LIBRARIES error", "body": "I regaled realm with android studio 2.7, it worked fine, but after upgrading to android studio 3.0 gradle gives warnings  `Warning:Transform 'RealmTransformer' uses scope PROJECT_LOCAL_DEPS which is deprecated and replaced with EXTERNAL_LIBRARIES\r\n```\r\nWarning:Transform 'RealmTransformer' uses scope SUB_PROJECTS_LOCAL_DEPS which is deprecated and replaced with EXTERNAL_LIBRARIES\r\nWarning:Transform 'RealmTransformer' uses scope PROJECT_LOCAL_DEPS which is deprecated and replaced with EXTERNAL_LIBRARIES\r\nWarning:Transform 'RealmTransformer' uses scope SUB_PROJECTS_LOCAL_DEPS which is deprecated and replaced with EXTERNAL_LIBRARIES\r\nWarning:Transform 'RealmTransformer' uses scope PROJECT_LOCAL_DEPS which is deprecated and replaced with EXTERNAL_LIBRARIES\r\nWarning:Transform 'RealmTransformer' uses scope SUB_PROJECTS_LOCAL_DEPS which is deprecated and replaced with EXTERNAL_LIBRARIES\r\n```", "url": "https://github.com/realm/realm-java/issues/4659", "user": "Axrorxoja", "labels": ["T-Bug"], "created": "2017-05-18 06:53:53", "closed": "2017-06-16 03:12:13", "commits": {}, "ttf": 28.00027777777778, "commitsDetails": []}, {"title": "Upgrading Synced Realms breaks existing clients", "body": "### Problem\r\nChanging the Realm Schema (e.g. Adding a new property on an object) breaks existing clients.  \r\n\r\n### Steps to reproduce using [RealmTasks](https://github.com/realm-demos/realm-tasks) Android project.\r\n1. Clone RealmTasks\r\n1. Open the Android Project\r\n1. Open `UserManager.java` and add `.schemaVersion(1)` to the SyncConfiguration.\r\n1. Install RealmTasks onto 2 device simulators. (I used a Nexus 6 and 6P)\r\n1. Exit the app on both simulators.\r\n1. Add a property to the `Task.java` Realm object.\r\n1. Open `UserManager.java` and change the schema version to 2, i.e. `.schemaVersion(2)`.\r\n1. Build and run on the 1st simulator\r\n1. Just launch the old version of the app on the 2nd simulator.  (do not install the new version)\r\n\r\n### Actual Result\r\nThe updated client (1st simulator) - Runs with the new schema.\r\nThe old client (2nd simulator) - Crashes after a sync happens with ROS and then every time you launch the app with the exception `IllegalArgumentException: The schema was changed but the schema version was not updated.  The configured schema version (1) must be greater than the version in the Realm file (2) in order to update the schema`\r\n\r\n### Expected Result\r\nThe updated client (1st simulator) - Runs with the new schema.\r\nThe old client (2nd simulator) - Runs with the old schema just fine.\r\n\r\nWould also be nice not to need to supply the schema version, but failure to do so prevents the upgrade.  You wouldn't be able to install the new version on the 1st simulator.  This also might be a bug in the Java binding, because the other platforms don't require schema version numbers.", "url": "https://github.com/realm/realm-java/issues/4658", "user": "ericmaxwell2003", "labels": ["P-0-EXPEDITE", "T-Bug"], "created": "2017-05-18 00:27:46", "closed": "2017-05-19 09:40:25", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Investigate odd memory use", "body": "This application runs out of memory in a particularly precipitous manner.  It is likely to be a bug and requires investigation.\r\n\r\nhttps://drive.google.com/open?id=0B8IZPM39UfyXWnN0RWgzUUkza2s", "url": "https://github.com/realm/realm-java/issues/4657", "user": "bmeike", "labels": ["T-Bug"], "created": "2017-05-17 20:29:46", "closed": "2017-05-24 17:55:10", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "\"Realm instance has been closed\" exception on un-closed Realm", "body": "@cmelchior and @zhuinden recall quirky experiences with `RealmCache` causing an open Realm to appear closed.\r\n\r\nThe issue arose, recently in #4641 \r\n\r\nThis issue tracks identifying and fixing the bug", "url": "https://github.com/realm/realm-java/issues/4648", "user": "bmeike", "labels": ["T-Bug"], "created": "2017-05-15 22:51:20", "closed": "2017-12-12 05:16:52", "commits": {}, "ttf": 210.00027777777777, "commitsDetails": []}, {"title": "Inverse Relationships not compatible with Kotlin", "body": "We are trying to implement [Inverse Relationships](https://news.realm.io/news/realm-java-3-1) in our Kotlin codebase but when we decorate our model with the '@LinkingObjects' annotation we get the following compilation error:\r\n```\r\nError:Field 'messages' of type \"io.realm.RealmResults<xxxxx.models.Message>\" is not supported.\r\n\r\nWarning:Unclosed files for the types '[io.realm.ChatRealmProxy]'; these types will not undergo annotation processing\r\n```\r\n\r\nThe definition for the objects involved is the following:\r\n``` Kotlin\r\n@RealmClass\r\nopen class Chat : RealmModel {\r\n    ...\r\n    @LinkingObjects( \"chat\" )\r\n    var messages:RealmResults<Message>? = null\r\n    ...\r\n}\r\n\r\n\r\n@RealmClass\r\nopen class Message : RealmModel {\r\n    ...\r\n    open var chat:Chat? = null\r\n    ...\r\n}\r\n```\r\n\r\nIs the use of annotations to implement the Inverse Relationships incompatible with Kotlin?\r\n\r\n\r\nRealm version: 3.1.4\r\nRealm sync feature enabled: no\r\nAndroid Studio version: 2.4 Preview 7\r\nWhich Android version and device: Any", "url": "https://github.com/realm/realm-java/issues/4611", "user": "marchy", "labels": ["T-Bug"], "created": "2017-05-08 12:44:14", "closed": "2017-06-01 11:33:24", "commits": {}, "ttf": 23.00027777777778, "commitsDetails": []}, {"title": "OnSuccess callback called infinite times for Async Transaction ", "body": "#### Goal\r\n\r\nDo an action on onSuccess of async transaction \r\n\r\n#### Expected Results\r\n\r\nonSuccess listener invoked once \r\n\r\n#### Actual Results\r\n\r\nonSuccess Listener invoked infinite times\r\n\r\n#### Code Sample\r\n\r\n```java\r\n  realm.executeTransactionAsync(r -> {\r\n\r\n            ChatDialog dialog = r.where(ChatDialog.class).equalTo(\r\n                    ChatDialog.FIELDS.DIALOG_ID, id).findFirst();\r\n            if (dialog != null) {\r\n                dialog.getChatInfo().setDealerChatStatus(status);\r\n                dialog.getChatInfo().setConsumerChatStatus(status);\r\n            }\r\n        }, success);\r\n```\r\n\r\nAnd here is the onSuccess Code \r\n```\r\n realm.executeTransaction(r -> {\r\n            List<ChatDialog> ChatDialogs = realm.where(ChatDialog.class).equalTo(\r\n                    ChatDialog.FIELDS.DEALER_CHAT_STATUS, localStatus).findAll();\r\n            if (ChatDialogs.size() > 0) {\r\n                for (ChatDialog carChatDialog :ChatDialogs) {\r\n                    carChatDialog.getChatInfo().setDealerChatStatus(status);\r\n                   ChatService.start(context,\r\n                            SyncDialogStatusCommand.getSyncDialogStatusCommandIntent(\r\n                                    carChatDialog.getDialogId()));\r\n                }\r\n            }\r\n        });\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 3.0.0 but this issue not produceable on same code using version 1.2.0\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.3.1\r\n\r\nWhich Android version and device: 6.0.0, galaxy note 5\r\n", "url": "https://github.com/realm/realm-java/issues/4595", "user": "TonyHaddad91", "labels": ["T-Bug"], "created": "2017-05-03 04:18:48", "closed": "2017-05-04 07:29:57", "commits": {"71cbba5ba01d0399e18df87a7dd8385805bdc40a": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "4469f7aecfea87db5a9f4e9effd45f7c0309225a": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "71cbba5ba01d0399e18df87a7dd8385805bdc40a", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "4469f7aecfea87db5a9f4e9effd45f7c0309225a", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["4e64cb9e6b464f1889aa367c256dbcb1c4e2c8e7"], "nameRev": "4469f7aecfea87db5a9f4e9effd45f7c0309225a tags/v3.1.4~3", "commitMessage": "Remove onSuccess callback before calling it (#4596)\n\nOtherwise it will cause infinite recursion if a transaction is committed\r\nin the callback.\r\nFix #4595", "commitDateTime": "2017-05-04 15:29:46", "authoredDateTime": "2017-05-04 15:29:46", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmAsyncQueryTests.java", "insertions": 54, "deletions": 0, "lines": 54}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/RealmNotifier.java", "insertions": 9, "deletions": 3, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmAsyncQueryTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmAsyncQueryTests.stressTestBackgroundCommits()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync().30", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_withNotification().31", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_forceLoad().32", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync().33", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_initialEmptyRow().34", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_updatedIfSyncRealmObjectIsUpdated().35", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_withNotification().36", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_forceLoad().37", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_twoListenersOnSameInvalidObjectsCauseNPE().38", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_twoListenersOnSameInvalidObjectsCauseNPE().39", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync().40", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.combiningAsyncAndSync().41", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.stressTestBackgroundCommits().42", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.stressTestBackgroundCommits().43", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.stressTestBackgroundCommits().44", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().45", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().46", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().47", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().48", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().49", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_rememberQueryParams().50", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().51", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().52", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().53", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().54", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().55", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().56", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().57", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().58", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().59", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().60", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.queryingLinkHandover().61", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.badVersion_syncTransaction().62", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdate_localRefIsDeletedInLoopOfNativeBatchUpdateQueries().63", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync().30.onChange(io.realm.RealmResults)", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_withNotification().31.onChange(io.realm.RealmResults)", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_forceLoad().32.onChange(io.realm.RealmResults)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync().33.onChange(io.realm.entities.AllTypes)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_initialEmptyRow().34.onChange(io.realm.entities.AllTypes)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_updatedIfSyncRealmObjectIsUpdated().35.onChange(io.realm.entities.AllTypes)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_withNotification().36.onChange(io.realm.entities.AllTypes)", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_forceLoad().37.onChange(io.realm.RealmModel,io.realm.ObjectChangeSet)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_twoListenersOnSameInvalidObjectsCauseNPE().38.onChange(io.realm.entities.AllTypes)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_twoListenersOnSameInvalidObjectsCauseNPE().39.onChange(io.realm.entities.AllTypes)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync().40.onChange(io.realm.RealmResults)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.combiningAsyncAndSync().41.onChange(io.realm.RealmResults)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.stressTestBackgroundCommits().43.onChange(io.realm.RealmResults)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().46.onChange(io.realm.RealmResults)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().47.onChange(io.realm.RealmResults)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().48.onChange(io.realm.RealmResults)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().49.onChange(io.realm.RealmResults)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_rememberQueryParams().50.onChange(io.realm.RealmResults)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().52.onChange(io.realm.RealmResults)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().53.onChange(io.realm.RealmResults)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().54.onChange(io.realm.RealmResults)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().55.onChange(io.realm.RealmResults)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.badVersion_syncTransaction().62.onChange(io.realm.RealmResults)", "TOT": 7, "UPD": 5, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.queryingLinkHandover().61.onChange(io.realm.RealmResults)", "TOT": 21, "UPD": 13, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().45.run()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().51.run()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdate_localRefIsDeletedInLoopOfNativeBatchUpdateQueries().63.onChange(io.realm.RealmResults)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransactionAsync_callbacksShouldBeClearedBeforeCalling()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmNotifier.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.RealmNotifier.didChange()", "TOT": 7, "UPD": 1, "INS": 1, "MOV": 4, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "`createSnapshot()` causes parent object to be deleted", "body": "#### Goal\r\n\r\nDelete the child Feed here:\r\n\r\n```java\r\n// Empty database before this.\r\n\r\ngetRealm().executeTransaction(new Realm.Transaction() {\r\n    @Override\r\n    public void execute(Realm realm) {\r\n        App app = realm.copyToRealm(App.create((long) 0));\r\n        Feed feed = realm.copyToRealm(Feed.create((long) 23));\r\n        app.feeds.add(feed);\r\n    }\r\n});\r\n\r\nfinal App app = getRealm().where(App.class).equalTo(\"id\", 0).findFirst();\r\nfinal List<Feed> appFeeds = app.feeds.createSnapshot();\r\n\r\ngetRealm().beginTransaction();\r\nappFeeds.get(0).deleteFromRealm();\r\ngetRealm().commitTransaction();\r\n\r\nList<App> apps = getRealm().where(App.class).findAll();\r\nList<Feed> feeds = getRealm().where(Feed.class).findAll();\r\n\r\nLog.i(\"LOG\", \"apps \" + apps);\r\nLog.i(\"LOG\", \"feeds \" + feeds);\r\n```\r\n\r\n#### Expected Results\r\n\r\nChild deleted. It works as intended **without** `createSnapshot()`.\r\n\r\n```\r\nI/LOG: apps [App = [{id:0},{feeds:RealmList<Feed>[0]}]]\r\nI/LOG: feeds []\r\n```\r\n\r\n#### Actual Results\r\n\r\nParent deleted.\r\n\r\n```\r\nI/LOG: apps []\r\nI/LOG: feeds [Feed = [{id:23}]]\r\n```\r\n\r\n#### Classes\r\n\r\n```java\r\npublic class App extends RealmObject {\r\n\r\n    public static App create(Long id) {\r\n        App app = new App();\r\n        app.id = id;\r\n        app.feeds = new RealmList<>();\r\n        return app;\r\n    }\r\n\r\n    @PrimaryKey\r\n    public Long id;\r\n\r\n    public RealmList<Feed> feeds;\r\n}\r\n```\r\n```java\r\npublic class Feed extends RealmObject {\r\n\r\n    public static Feed create(Long id) {\r\n        Feed feed = new Feed();\r\n        feed.id = id;\r\n        return feed;\r\n    }\r\n\r\n    @PrimaryKey\r\n    public Long id;\r\n}\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version: 3.1.3\r\n", "url": "https://github.com/realm/realm-java/issues/4554", "user": "jpmcosta", "labels": ["T-Bug"], "created": "2017-04-26 02:05:27", "closed": "2017-04-28 04:20:54", "commits": {"bd60dd0d1171e8a8e0df55f16f517ada2f37d9ba": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "15371fe3ae64687eaa1f07178afff8ec5d670c81": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "bd60dd0d1171e8a8e0df55f16f517ada2f37d9ba", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "15371fe3ae64687eaa1f07178afff8ec5d670c81", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["8a25e80e4dd674b7152d8e3175cf375aa1ca4335"], "nameRev": "15371fe3ae64687eaa1f07178afff8ec5d670c81 tags/v3.1.4~10", "commitMessage": "Use target table to create snapshot from LinkView (#4556)\n\n- Fix #4554 .\r\n- Remove useless confusing `LinkView.getTable()`.", "commitDateTime": "2017-04-28 12:20:46", "authoredDateTime": "2017-04-28 12:20:46", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmListTests.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/Collection.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/LinkView.java", "insertions": 1, "deletions": 9, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmListTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmListTests.createSnapshot_shouldUseTargetTable()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Collection.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.Collection", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LinkView.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.LinkView.getTable()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.LinkView.getTargetTable()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Accessing backlinks field should throw IllegalState instead of IllegalArgument if the object is deleted or not loaded", "body": "accessing backlinks of deleted or not loaded object is now throwing `IllegalArgumentException`.\r\n\r\nThis should be `IllegalStateException`.", "url": "https://github.com/realm/realm-java/issues/4499", "user": "zaki50", "labels": ["T-Bug"], "created": "2017-04-14 06:57:46", "closed": "2017-04-17 01:03:25", "commits": {"b90cd7961d5e7e05dab98870472755c5ffa00b97": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "bcdc277e238df2f10fde148a0a535fd9d28e84d8": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "b90cd7961d5e7e05dab98870472755c5ffa00b97", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "bcdc277e238df2f10fde148a0a535fd9d28e84d8", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["bad5b7faf54be1be3ca1d7344bec3ec689b3844b"], "nameRev": "bcdc277e238df2f10fde148a0a535fd9d28e84d8 tags/v3.1.3~8", "commitMessage": "Fix exception thrown from backlinks field (#4500)\n\n* add test case that reproduce #4499\r\n\r\n* now backlinks geters throw IllegalStateException if the object is deleted or not yet loaded.\r\n\r\n* update CHANGELOG\r\n\r\n* add test\r\n\r\n* update a test\r\n\r\n* modify method name Row.checkIfBacklinkAvailable() to Row.checkIfAttached()\r\n\r\n* update variable names in test\r\n", "commitDateTime": "2017-04-17 07:43:39", "authoredDateTime": "2017-04-17 07:43:39", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyClassGenerator.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/AllTypesRealmProxy.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/LinkingObjectsManagedTests.java", "insertions": 100, "deletions": 0, "lines": 100}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/entities/BacklinksSource.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/entities/BacklinksTarget.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/InvalidRow.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/PendingRow.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/Row.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/UncheckedRow.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmProxyClassGenerator.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitBacklinkFieldAccessors(com.squareup.javawriter.JavaWriter)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AllTypesRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.AllTypesRealmProxy.realmGet$parentObjects()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LinkingObjectsManagedTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.LinkingObjectsManagedTests.verifyPostConditions(io.realm.Realm,io.realm.LinkingObjectsManagedTests$PostConditions,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.LinkingObjectsManagedTests.verifyPostConditions(io.realm.Realm,io.realm.LinkingObjectsManagedTests$PostConditions,java.lang.Object[]).11", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.LinkingObjectsManagedTests.linkingObjects_IllegalStateException_ifNotYetLoaded()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.LinkingObjectsManagedTests.linkingObjects_IllegalStateException_ifDeleted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.LinkingObjectsManagedTests.linkingObjects_IllegalStateException_ifDeletedIndirectly()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BacklinksSource.java", "spoonMethods": [{"spoonMethodName": "io.realm.entities.BacklinksSource", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BacklinksTarget.java", "spoonMethods": [{"spoonMethodName": "io.realm.entities.BacklinksTarget", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InvalidRow.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.InvalidRow.checkIfAttached()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PendingRow.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.PendingRow.checkIfAttached()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Row.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.checkIfAttached()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UncheckedRow.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.UncheckedRow.checkIfAttached()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "NullPointerException on RealmChangeListener with async queries workflow", "body": "#### Goal\r\n\r\nBy making use of two `RealmChangeListeners` and one async query, my goal is to reutilize objects when possible, or create a new ones if needed.\r\n\r\n#### Results\r\n\r\n- Before Realm `3.0` this workflow worked well;\r\n- On `3.0.0` it stopped working, because of https://github.com/realm/realm-java/issues/4352;\r\n- On `3.1.1` it throws a `NullPointerException`.\r\n\r\n```\r\njava.lang.NullPointerException: Attempt to invoke virtual method 'void io.realm.internal.Collection.removeListener(java.lang.Object, io.realm.RealmChangeListener)' on a null object reference\r\n\tat io.realm.internal.PendingRow.clearPendingCollection(PendingRow.java:205)\r\n\tat io.realm.internal.PendingRow.notifyFrontEnd(PendingRow.java:236)\r\n\tat io.realm.internal.PendingRow.access$000(PendingRow.java:18)\r\n\tat io.realm.internal.PendingRow$1.onChange(PendingRow.java:46)\r\n\tat io.realm.internal.PendingRow$1.onChange(PendingRow.java:43)\r\n\tat io.realm.internal.Collection$RealmChangeListenerWrapper.onChange(Collection.java:62)\r\n\tat io.realm.internal.Collection$CollectionObserverPair.onChange(Collection.java:43)\r\n\tat io.realm.internal.Collection$Callback.onCalled(Collection.java:87)\r\n\tat io.realm.internal.Collection$Callback.onCalled(Collection.java:77)\r\n\tat io.realm.internal.ObserverPairList.foreach(ObserverPairList.java:108)\r\n\tat io.realm.internal.Collection.notifyChangeListeners(Collection.java:524)\r\n\tat android.os.MessageQueue.nativePollOnce(Native Method)\r\n\tat android.os.MessageQueue.next(MessageQueue.java:143)\r\n\tat android.os.Looper.loop(Looper.java:122)\r\n\tat android.app.ActivityThread.main(ActivityThread.java:5254)\r\n\tat java.lang.reflect.Method.invoke(Native Method)\r\n\tat java.lang.reflect.Method.invoke(Method.java:372)\r\n\tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:903)\r\n\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:698)\r\n```\r\n\r\n#### Steps & Code to Reproduce\r\n\r\n- The bug seems to occur when the last `Transaction` tries to call its listeners, after `item.reset();`\r\n- `doThings(item);` is never called.\r\n\r\n##### Classes\r\n\r\n```java\r\npublic class Item extends RealmObject {\r\n\r\n    public static Item create(Long id) {\r\n        Item item = new Item();\r\n        item.id = id;\r\n        return item;\r\n    }\r\n\r\n    @PrimaryKey\r\n    public Long id;\r\n\r\n    public String name;\r\n\r\n    public Feed parentFeed;\r\n\r\n\r\n    public void reset() {\r\n        name = \"\";\r\n    }\r\n}\r\n```\r\n```java\r\npublic class Feed extends RealmObject {\r\n\r\n    @PrimaryKey\r\n    public Long id;\r\n\r\n    public String name;\r\n}\r\n```\r\n\r\n##### Code Sample\r\n\r\n```java\r\nfinal Item item = getRealm().where(Item.class).isNull(\"parentFeed\").findFirstAsync();\r\n\r\n// Create a new item, if no valid item is found.\r\nitem.addChangeListener(new RealmChangeListener<Item>() {\r\n\r\n    @Override\r\n    public void onChange(Item item) {\r\n        if (!item.isValid()) {\r\n            item.removeChangeListener(this);\r\n\r\n            getRealm().executeTransaction(new Realm.Transaction() {\r\n\r\n                @Override\r\n                public void execute(Realm realm) {\r\n                    getRealm().copyToRealm(Item.create(getLastId()));\r\n                }\r\n            });\r\n        }\r\n    }\r\n});\r\n\r\n// Wait for valid item, reset, and use it to do things.\r\nitem.addChangeListener(new RealmChangeListener<Item>() {\r\n\r\n    @Override\r\n    public void onChange(final Item item) {\r\n        if (item.isValid()) {\r\n            item.removeChangeListener(this);\r\n\r\n            getRealm().executeTransaction(new Realm.Transaction() {\r\n\r\n                @Override\r\n                public void execute(Realm realm) {\r\n                    item.reset();\r\n                }\r\n            });\r\n\r\n            doThings(item);\r\n        }\r\n    }\r\n});\r\n```\r\n\r\n#### Notes\r\n\r\nI could use just a single `RealmChangeListener`, but I'm using Kotlin in my project, and I'm making use of two different extensions functions, which is why I end up using two different listeners.\r\n\r\n#### Version of Realm\r\n\r\nRealm version(s): 3.1.1", "url": "https://github.com/realm/realm-java/issues/4495", "user": "jpmcosta", "labels": ["T-Bug"], "created": "2017-04-14 01:22:09", "closed": "2017-04-18 09:58:42", "commits": {"4ef9163eac7f8525ba05ed645cf006cfbfdc0765": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "af6734c6b64010d88489217a6d1d7c812f152e40": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "4ef9163eac7f8525ba05ed645cf006cfbfdc0765", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "af6734c6b64010d88489217a6d1d7c812f152e40", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["bcdc277e238df2f10fde148a0a535fd9d28e84d8"], "nameRev": "af6734c6b64010d88489217a6d1d7c812f152e40 tags/v3.1.3~7", "commitMessage": "Clear pending collection first for findFirstAsync (#4497)\n\nOtherwise the pending query will be executed again if there is a local\r\ntransaction in the listener. That would cause a infinite recursion or\r\nNPE (like #4495).\r\n\r\nFix #4495\r\n", "commitDateTime": "2017-04-18 17:58:34", "authoredDateTime": "2017-04-18 17:58:34", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmAsyncQueryTests.java", "insertions": 35, "deletions": 3, "lines": 38}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/PendingRow.java", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmAsyncQueryTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_forceLoad()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.stressTestBackgroundCommits()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync().38", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.combiningAsyncAndSync().39", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.stressTestBackgroundCommits().40", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.stressTestBackgroundCommits().41", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.stressTestBackgroundCommits().42", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().43", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().44", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().45", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().46", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().47", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_rememberQueryParams().48", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().49", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().50", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().51", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().52", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().53", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().54", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().55", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().56", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().57", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().58", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.queryingLinkHandover().59", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.badVersion_syncTransaction().60", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdate_localRefIsDeletedInLoopOfNativeBatchUpdateQueries().61", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync().38.onChange(io.realm.RealmResults)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.combiningAsyncAndSync().39.onChange(io.realm.RealmResults)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.stressTestBackgroundCommits().41.onChange(io.realm.RealmResults)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().44.onChange(io.realm.RealmResults)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().45.onChange(io.realm.RealmResults)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().46.onChange(io.realm.RealmResults)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().47.onChange(io.realm.RealmResults)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_rememberQueryParams().48.onChange(io.realm.RealmResults)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().50.onChange(io.realm.RealmResults)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().51.onChange(io.realm.RealmResults)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().52.onChange(io.realm.RealmResults)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().53.onChange(io.realm.RealmResults)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.badVersion_syncTransaction().60.onChange(io.realm.RealmResults)", "TOT": 7, "UPD": 5, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().58.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.queryingLinkHandover().59.onChange(io.realm.RealmResults)", "TOT": 21, "UPD": 13, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().43.run()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().49.run()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdate_localRefIsDeletedInLoopOfNativeBatchUpdateQueries().61.onChange(io.realm.RealmResults)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_twoListenersOnSameInvalidObjectsCauseNPE()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().55.onChange(io.realm.RealmResults)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PendingRow.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.PendingRow.notifyFrontEnd()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Cannot get Realm instance: io.realm.exceptions.RealmFileException: Unable to open a realm at path ", "body": "#### Goal\r\n\r\nCall `Realm realm = Realm.getInstance(mRealmConfig);` where\r\n\r\n`\r\nmRealmConfig = RealmConfiguration.Builder()\r\n                .schemaVersion(2)\r\n                .deleteRealmIfMigrationNeeded()\r\n                .build();\r\n`\r\n\r\n#### Expected Results\r\n\r\nGet a Realm without exception.\r\n\r\n#### Actual Results\r\n\r\nThe following exception is thrown:\r\n`io.realm.exceptions.RealmFileException: Unable to open a realm at path '/data/data/com.dropbox.paper/files/default.realm.management': make_dir() failed: No such file or directory. (make_dir() failed: No such file or directory) (/data/data/com.dropbox.paper/files/default.realm.management) in /home/cc/repo/realm/release/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 217 Kind: ACCESS_ERROR.`\r\n\r\nMore here:\r\n[realm-exception.txt](https://github.com/realm/realm-java/files/920336/realm-exception.txt)\r\n\r\n#### Steps & Code to Reproduce\r\n\r\nThis happens on first launch of the app.\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 2.2.1\r\n\r\nTried upgrading to 3.1.2 but still seeing the same issue.\r\n\r\nRealm sync feature enabled: unsure. Would this affect this? How can I turn this on/off?\r\n\r\nAndroid Studio version: 2.3\r\n\r\nWhich Android version and device:\r\n\r\n- Nexus 5 on 6.0.1\r\n- Google Pixel 7.1.1\r\n", "url": "https://github.com/realm/realm-java/issues/4493", "user": "rajuashok", "labels": ["T-Bug"], "created": "2017-04-13 17:11:16", "closed": "2017-04-27 07:47:37", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "RealmObjects from linking objects hold wrong table.", "body": "Following test fails because of `Table` object in `sourceFromBacklinks` is wrong.\r\n\r\n```\r\n        realm.beginTransaction();\r\n        final BacklinksTarget target = realm.createObject(BacklinksTarget.class);\r\n        target.setId(1);\r\n        final BacklinksSource source = realm.createObject(BacklinksSource.class);\r\n        source.setChild(target);\r\n        realm.commitTransaction();\r\n\r\n        final RealmResults<BacklinksSource> parents = target.getParents();\r\n        final BacklinksSource sourceFromBacklinks = parents.first();\r\n\r\n        assertEquals(source, sourceFromBacklinks);\r\n```\r\n\r\nThe `Table` object is only used in `equals()`, `hashCode()`, and default value assignment.\r\nSince RealmObjects from linking objects never set default values, this bug affects only `equals()` and `hashCode()`.", "url": "https://github.com/realm/realm-java/issues/4487", "user": "zaki50", "labels": ["T-Bug"], "created": "2017-04-13 11:32:05", "closed": "2017-04-13 16:50:10", "commits": {"ad2c97dd93e59616c69d4c608feada6849afc942": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "49a5af054d7fba35656ace1c0786ebafb26eaa28": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "ad2c97dd93e59616c69d4c608feada6849afc942", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "49a5af054d7fba35656ace1c0786ebafb26eaa28", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["2078e27d577490063959de1377116d84325b1e2e"], "nameRev": "49a5af054d7fba35656ace1c0786ebafb26eaa28 tags/v3.1.3~10", "commitMessage": "fix a bug that Collection from backlink holds wrong table pointer. (#4485)\n\n* fix a bug that Collection from backlink holds wrong table pointer.\r\n\r\n* add a test that reproduce https://github.com/realm/realm-java/issues/4487\r\n\r\n* add changelog entry\r\n\r\n* Update CHANGELOG.md\r\n\r\n* more detail test case name\r\n\r\n* remove extra line\r\n", "commitDateTime": "2017-04-14 00:58:02", "authoredDateTime": "2017-04-14 00:58:02", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/LinkingObjectsManagedTests.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/Collection.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LinkingObjectsManagedTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.LinkingObjectsManagedTests.issue4487_checkIfTableIsCorrect()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Collection.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.Collection.createBacklinksCollection(io.realm.internal.SharedRealm,io.realm.internal.UncheckedRow,io.realm.internal.Table,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["49a5af054d7fba35656ace1c0786ebafb26eaa28"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1.0, "deletions": 1.0, "lines": 2.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2.0, "UPD": 0.0, "INS": 1.0, "MOV": 0.0, "DEL": 1.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-library/src/main/java/io/realm/internal"], "changesInPackagesSPOON": ["io.realm.internal.Collection.createBacklinksCollection(io.realm.internal.SharedRealm,io.realm.internal.UncheckedRow,io.realm.internal.Table,java.lang.String)"]}, {"title": "OrderedRealmCollectionChangeListener issue when a change causes insertion or removal", "body": "#### Goal\r\n\r\nHave `RealmResults` filtered by a field (`isBoomarked`, in my case), change value of the field to insert or remove objects.\r\n\r\n#### Expected Results\r\n\r\nChange `isBookmarked` value on a single object, and get a `changeSet` with a single `deletionRange` or `insertionRange`.\r\n\r\n#### Actual Results\r\n\r\nSometimes a \"random\" `changeRange` is included in the `changeSet`.\r\n\r\n##### Example\r\nWhen `isBookmarked` is changed to `false` on single object, the `changeSet` usually comes with:\r\n- a `deletionRange` with the `startIndex` of the deleted object and `length = 1` -> this is correct;\r\n- a `changeRange` with `startIndex = 0` and `length = 1` -> this seems like a bug, and it happens very often (not always). The removed object doesn't have `startIndex = 0`.\r\n\r\n#### Code (Kotlin)\r\n\r\n```kotlin\r\nwhere(Item::class.java).equalTo(\"isBookmarked\", true).findAllSortedAsync(\"id\", Sort.DESCENDING)\r\n```\r\n\r\n```kotlin\r\nrealm.executeTransaction { realm ->\r\n    item.isBookmarked = !item.isBookmarked\r\n}\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 3.1.1\r\n", "url": "https://github.com/realm/realm-java/issues/4474", "user": "jpmcosta", "labels": ["T-Bug"], "created": "2017-04-11 16:03:14", "closed": "2017-04-20 07:58:47", "commits": {"b6c0d009f401be42b413558328295d9e2c9de1b8": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "ff1d01ab0f5a3956d0d948b36d0acc483e187251": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "b6c0d009f401be42b413558328295d9e2c9de1b8", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ff1d01ab0f5a3956d0d948b36d0acc483e187251", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["4b728ff2906e583a56c306e020dd9e97e0bdf450"], "nameRev": "ff1d01ab0f5a3956d0d948b36d0acc483e187251 tags/v3.1.3~3", "commitMessage": "Update Object Store (#4522)\n\nTo dfddfa7f7bf5\r\nFix #4474\r\n", "commitDateTime": "2017-04-20 15:58:39", "authoredDateTime": "2017-04-20 15:58:39", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/ObjectChangeSetTests.java", "insertions": 46, "deletions": 0, "lines": 46}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/entities/Dog.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/main/cpp/object-store", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ObjectChangeSetTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.ObjectChangeSetTests.allParentObjectShouldBeInChangeSet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Dog.java", "spoonMethods": [{"spoonMethodName": "io.realm.entities.Dog", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Don't reset the `SharedRealm.nativePtr` in `close()`", "body": "#### Goal\r\n\r\n> What do you want to achieve?\r\nI want to get List<Group> from realm db.\r\n#### Expected Results\r\n\r\n> \r\nGet filled list.\r\n\r\n#### Actual Results\r\n```\r\n04-11 15:48:04.274 7158-7158/org.kaaproject.kaa.examples.gpiocontrol A/libc: Fatal signal 11 (SIGSEGV), code 1, fault addr 0x0 in tid 7158 (les.gpiocontrol)\r\n04-11 15:48:04.376 192-192/? A/DEBUG: pid: 7158, tid: 7158, name: les.gpiocontrol  >>> org.kaaproject.kaa.examples.gpiocontrol <<<\r\n04-11 15:48:04.438 192-192/? A/DEBUG:     #00 pc 0002ace6  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/lib/arm/librealm-jni.so (Java_io_realm_internal_SharedRealm_nativeIsInTransaction+21)\r\n04-11 15:48:04.439 192-192/? A/DEBUG:     #01 pc 011b6265  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/oat/arm/base.odex (offset 0x9e7000) (boolean io.realm.internal.SharedRealm.nativeIsInTransaction(long)+88)\r\n04-11 15:48:04.439 192-192/? A/DEBUG:     #02 pc 011b7b91  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/oat/arm/base.odex (offset 0x9e7000) (boolean io.realm.internal.SharedRealm.isInTransaction()+68)\r\n04-11 15:48:04.439 192-192/? A/DEBUG:     #03 pc 00d8fe15  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/oat/arm/base.odex (offset 0x9e7000) (void io.realm.internal.Collection$Iterator.<init>(io.realm.internal.Collection)+296)\r\n04-11 15:48:04.439 192-192/? A/DEBUG:     #04 pc 0119fe53  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/oat/arm/base.odex (offset 0x9e7000) (void io.realm.OrderedRealmCollectionImpl$RealmCollectionIterator.<init>(io.realm.OrderedRealmCollectionImpl)+102)\r\n04-11 15:48:04.439 192-192/? A/DEBUG:     #05 pc 014ce709  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/oat/arm/base.odex (offset 0x9e7000) (java.util.Iterator io.realm.OrderedRealmCollectionImpl.iterator()+76)\r\n04-11 15:48:04.439 192-192/? A/DEBUG:     #06 pc 01603e99  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/oat/arm/base.odex (offset 0x9e7000) (java.util.Iterator io.realm.RealmResults.iterator()+60)\r\n04-11 15:48:04.439 192-192/? A/DEBUG:     #07 pc 00f23f41  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/oat/arm/base.odex (offset 0x9e7000) (java.util.List org.kaaproject.kaa.examples.gpiocontrol.utils.Utils.getViewDeviceListFromGroup(java.util.List)+100)\r\n04-11 15:48:04.439 192-192/? A/DEBUG:     #08 pc 00f23805  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/oat/arm/base.odex (offset 0x9e7000) (java.util.List org.kaaproject.kaa.examples.gpiocontrol.utils.Utils.getMockedHeaderList(org.kaaproject.kaa.examples.gpiocontrol.storage.Repository)+128)\r\n04-11 15:48:04.439 192-192/? A/DEBUG:     #09 pc 01580557  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/oat/arm/base.odex (offset 0x9e7000) (void org.kaaproject.kaa.examples.gpiocontrol.screen.deviceSwitchManagement.DeviceSwitchManagementFragment.setupRecyclerView(android.content.Context, android.os.Bundle)+442)\r\n04-11 15:48:04.439 192-192/? A/DEBUG:     #10 pc 015823fd  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/oat/arm/base.odex (offset 0x9e7000) (android.view.View org.kaaproject.kaa.examples.gpiocontrol.screen.deviceSwitchManagement.DeviceSwitchManagementFragment.onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)+568)\r\n04-11 15:48:04.439 192-192/? A/DEBUG:     #11 pc 00a4d889  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/oat/arm/base.odex (offset 0x9e7000) (android.view.View android.support.v4.app.Fragment.performCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)+132)\r\n04-11 15:48:04.439 192-192/? A/DEBUG:     #12 pc 00f9b179  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/oat/arm/base.odex (offset 0x9e7000) (void android.support.v4.app.FragmentManagerImpl.moveToState(android.support.v4.app.Fragment, int, int, int, boolean)+6196)\r\n04-11 15:48:04.439 192-192/? A/DEBUG:     #13 pc 00f98f6d  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/oat/arm/base.odex (offset 0x9e7000) (void android.support.v4.app.FragmentManagerImpl.moveFragmentToExpectedState(android.support.v4.app.Fragment)+352)\r\n04-11 15:48:04.439 192-192/? A/DEBUG:     #14 pc 00f9956d  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/oat/arm/base.odex (offset 0x9e7000) (void android.support.v4.app.FragmentManagerImpl.moveToState(int, boolean)+456)\r\n04-11 15:48:04.440 192-192/? A/DEBUG:     #15 pc 00f841ff  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/oat/arm/base.odex (offset 0x9e7000) (void android.support.v4.app.BackStackRecord.executeOps()+1378)\r\n04-11 15:48:04.440 192-192/? A/DEBUG:     #16 pc 00f8c44b  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/oat/arm/base.odex (offset 0x9e7000) (void android.support.v4.app.FragmentManagerImpl.executeOps(java.util.ArrayList, java.util.ArrayList, int, int)+462)\r\n04-11 15:48:04.440 192-192/? A/DEBUG:     #17 pc 00f8c945  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/oat/arm/base.odex (offset 0x9e7000) (void android.support.v4.app.FragmentManagerImpl.executeOpsTogether(java.util.ArrayList, java.util.ArrayList, int, int)+1128)\r\n04-11 15:48:04.440 192-192/? A/DEBUG:     #18 pc 00f8e4fd  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/oat/arm/base.odex (offset 0x9e7000) (void android.support.v4.app.FragmentManagerImpl.optimizeAndExecuteOps(java.util.ArrayList, java.util.ArrayList)+944)\r\n04-11 15:48:04.440 192-192/? A/DEBUG:     #19 pc 00f96c17  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/oat/arm/base.odex (offset 0x9e7000) (boolean android.support.v4.app.FragmentManagerImpl.execPendingActions()+218)\r\n04-11 15:48:04.440 192-192/? A/DEBUG:     #20 pc 00a52cb1  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/oat/arm/base.odex (offset 0x9e7000) (boolean android.support.v4.app.FragmentController.execPendingActions()+76)\r\n04-11 15:48:04.440 192-192/? A/DEBUG:     #21 pc 016dcae5  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/oat/arm/base.odex (offset 0x9e7000) (void android.support.v4.app.FragmentActivity.onStart()+296)\r\n04-11 15:48:04.440 192-192/? A/DEBUG:     #22 pc 01748fad  /data/app/org.kaaproject.kaa.examples.gpiocontrol-2/oat/arm/base.odex (offset 0x9e7000) (void android.support.v7.app.AppCompatActivity.onStart()+56)\r\n```\r\n>  E.g. full stack trace with exception\r\n\r\n#### Steps & Code to Reproduce\r\nHere is the full project https://github.com/iamtodor/gpio-control/tree/realm-report\r\nIt appearances once `DeviceSwitchManagementFragment` will start\r\n> Describe your current debugging efforts.\r\nIf I use \r\n`List<Group> groupList = instance.where(Group.class).findAll();` - app crashes with the stacktrace, that I attached above\r\neither I use this option `List<Group> groupList = instance.copyFromRealm(instance.where(Group.class).findAll());` getting data is okay, but after all operations I have to write within transaction `realm.insertOrUpdate(group);`\r\n\r\n#### Code Sample\r\n\r\n```java\r\nhttps://github.com/iamtodor/gpio-control/tree/realm-report\r\n\r\n> Your code here. Bigger samples should ideally be as separate Android Studio project, \r\n> in gists/repositories or privately at help@realm.io)\r\n\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 3.0.0\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.2.3\r\n\r\nWhich Android version and device: Nexus 7 2013, 6.0.1\r\n", "url": "https://github.com/realm/realm-java/issues/4471", "user": "iamtodor", "labels": ["T-Bug"], "created": "2017-04-11 13:55:00", "closed": "2017-04-12 09:31:32", "commits": {"176abd130e27d935c15e2e00e07c584865a515d5": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "1fe5b9f8100338a9d18d071e7215b26941e71431": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "176abd130e27d935c15e2e00e07c584865a515d5", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1fe5b9f8100338a9d18d071e7215b26941e71431", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["854275d122e0ffd46b4e1b340750d1b313de0164"], "nameRev": "1fe5b9f8100338a9d18d071e7215b26941e71431 tags/v3.1.2~2", "commitMessage": "Dont reset SharedRealm ptr (#4478)\n\n- Keep the SharedRealm ptr valid when close it. To allow the is_closed\r\n  checking could throw in the Object Store and it can be converted to a\r\n  friendly Java exception.\r\n- Check if SharedRealm is closed when create collection iterator. Throw\r\n  an ISE if it is. Fix #4471 .\r\n", "commitDateTime": "2017-04-12 17:31:25", "authoredDateTime": "2017-04-12 17:31:25", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/internal/CollectionTests.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/internal/SharedRealmTests.java", "insertions": 25, "deletions": 1, "lines": 26}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/Collection.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/SharedRealm.java", "insertions": 5, "deletions": 8, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CollectionTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.CollectionTests.collectionIterator_newInstance_throwsWhenSharedRealmIsClosed()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SharedRealmTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.SharedRealmTests.isInTransaction_returnFalseWhenRealmClosed()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.SharedRealmTests.isClosed()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.SharedRealmTests.close_twice()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.SharedRealmTests.tearDown()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Collection.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.Collection", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.Collection.Iterator", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SharedRealm.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.SharedRealm.isClosed()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.internal.SharedRealm.close()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.internal.SharedRealm", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "OsObject.notifyChangeListeners() get obfuscated by the proguard", "body": "I've got this error on LTE. No wifi. What's matter?  I tested with proguard.\r\n\r\n04-11 10:11:52.025 19739-19739/? E/BoostFramework: BoostFramework() : Exception_1 = java.lang.ClassNotFoundException: Didn't find class \"com.qualcomm.qti.Performance\" on path: DexPathList[[],nativeLibraryDirectories=[/system/lib, /vendor/lib]]\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470] JNI DETECTED ERROR IN APPLICATION: mid == null\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]     in call to CallVoidMethodV\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]     from void android.os.MessageQueue.nativePollOnce(long, int)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470] \"main\" prio=5 tid=1 Runnable\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   | group=\"main\" sCount=0 dsCount=0 obj=0x7660c968 self=0xeda85400\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   | sysTid=19739 nice=0 cgrp=default sched=0/0 handle=0xf1038534\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   | state=R schedstat=( 694933766 45404731 1180 ) utm=55 stm=14 core=5 HZ=100\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   | stack=0xff704000-0xff706000 stackSize=8MB\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   | held mutexes= \"mutator lock\"(shared held)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   native: #00 pc 00350b49  /system/lib/libart.so (_ZN3art15DumpNativeStackERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEiP12BacktraceMapPKcPNS_9ArtMethodEPv+128)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   native: #01 pc 00331079  /system/lib/libart.so (_ZNK3art6Thread9DumpStackERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEbP12BacktraceMap+304)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   native: #02 pc 00239873  /system/lib/libart.so (_ZN3art9JavaVMExt8JniAbortEPKcS2_+846)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   native: #03 pc 00239e1f  /system/lib/libart.so (_ZN3art9JavaVMExt9JniAbortFEPKcS2_z+66)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   native: #04 pc 0026a759  /system/lib/libart.so (_ZN3art3JNI15CallVoidMethodVEP7_JNIEnvP8_jobjectP10_jmethodIDSt9__va_list+524)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   native: #05 pc 00022cd7  /data/app/com.product.app-1/lib/arm/librealm-jni.so (???)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   native: #06 pc 0005e111  /data/app/com.product.app-1/lib/arm/librealm-jni.so (???)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   native: #07 pc 0002c685  /data/app/com.product.app-1/lib/arm/librealm-jni.so (???)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   native: #08 pc 0007b501  /data/app/com.product.app-1/lib/arm/librealm-jni.so (???)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   native: #09 pc 0007b615  /data/app/com.product.app-1/lib/arm/librealm-jni.so (???)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   native: #10 pc 0008f853  /data/app/com.product.app-1/lib/arm/librealm-jni.so (???)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   native: #11 pc 0008fa09  /data/app/com.product.app-1/lib/arm/librealm-jni.so (???)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   native: #12 pc 00080e3d  /data/app/com.product.app-1/lib/arm/librealm-jni.so (???)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   native: #13 pc 00073bf1  /data/app/com.product.app-1/lib/arm/librealm-jni.so (???)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   native: #14 pc 0009152d  /data/app/com.product.app-1/lib/arm/librealm-jni.so (???)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   native: #15 pc 00091e21  /data/app/com.product.app-1/lib/arm/librealm-jni.so (???)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   native: #16 pc 00011e77  /system/lib/libutils.so (_ZN7android6Looper9pollInnerEi+614)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   native: #17 pc 00011b83  /system/lib/libutils.so (_ZN7android6Looper8pollOnceEiPiS1_PPv+26)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   native: #18 pc 00097c2d  /system/lib/libandroid_runtime.so (_ZN7android18NativeMessageQueue8pollOnceEP7_JNIEnvP8_jobjecti+22)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   native: #19 pc 007035d5  /system/framework/arm/boot-framework.oat (Java_android_os_MessageQueue_nativePollOnce__JI+96)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   at android.os.MessageQueue.nativePollOnce(Native method)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   at android.os.MessageQueue.next(MessageQueue.java:323)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   at android.os.Looper.loop(Looper.java:136)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   at android.app.ActivityThread.main(ActivityThread.java:6692)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   at java.lang.reflect.Method.invoke!(Native method)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1468)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1358)\r\n04-11 10:11:52.593 19739-19739/? A/art: art/runtime/java_vm_ext.cc:470]\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403] Runtime aborting...\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403] Aborting thread:\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403] \"main\" prio=5 tid=1 Native\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   | group=\"\" sCount=0 dsCount=0 obj=0x7660c968 self=0xeda85400\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   | sysTid=19739 nice=0 cgrp=default sched=0/0 handle=0xf1038534\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   | state=R schedstat=( 763534573 48718771 1287 ) utm=58 stm=18 core=4 HZ=100\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   | stack=0xff704000-0xff706000 stackSize=8MB\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   | held mutexes= \"abort lock\"\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #00 pc 00350b49  /system/lib/libart.so (_ZN3art15DumpNativeStackERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEiP12BacktraceMapPKcPNS_9ArtMethodEPv+128)\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #01 pc 00331079  /system/lib/libart.so (_ZNK3art6Thread9DumpStackERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEbP12BacktraceMap+304)\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #02 pc 00324069  /system/lib/libart.so (_ZNK3art10AbortState10DumpThreadERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEPNS_6ThreadE+24)\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #03 pc 00323ef1  /system/lib/libart.so (_ZNK3art10AbortState4DumpERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE+424)\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #04 pc 0031ad03  /system/lib/libart.so (_ZN3art7Runtime5AbortEv+90)\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #05 pc 000b4ac7  /system/lib/libart.so (_ZN3art10LogMessageD2Ev+866)\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #06 pc 00239b55  /system/lib/libart.so (_ZN3art9JavaVMExt8JniAbortEPKcS2_+1584)\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #07 pc 00239e1f  /system/lib/libart.so (_ZN3art9JavaVMExt9JniAbortFEPKcS2_z+66)\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #08 pc 0026a759  /system/lib/libart.so (_ZN3art3JNI15CallVoidMethodVEP7_JNIEnvP8_jobjectP10_jmethodIDSt9__va_list+524)\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #09 pc 00022cd7  /data/app/com.product.app-1/lib/arm/librealm-jni.so (???)\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #10 pc 0005e111  /data/app/com.product.app-1/lib/arm/librealm-jni.so (???)\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #11 pc 0002c685  /data/app/com.product.app-1/lib/arm/librealm-jni.so (???)\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #12 pc 0007b501  /data/app/com.product.app-1/lib/arm/librealm-jni.so (???)\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #13 pc 0007b615  /data/app/com.product.app-1/lib/arm/librealm-jni.so (???)\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #14 pc 0008f853  /data/app/com.product.app-1/lib/arm/librealm-jni.so (???)\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #15 pc 0008fa09  /data/app/com.product.app-1/lib/arm/librealm-jni.so (???)\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #16 pc 00080e3d  /data/app/com.product.app-1/lib/arm/librealm-jni.so (???)\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #17 pc 00073bf1  /data/app/com.product.app-1/lib/arm/librealm-jni.so (???)\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #18 pc 0009152d  /data/app/com.product.app-1/lib/arm/librealm-jni.so (???)\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #19 pc 00091e21  /data/app/com.product.app-1/lib/arm/librealm-jni.so (???)\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #20 pc 00011e77  /system/lib/libutils.so (_ZN7android6Looper9pollInnerEi+614)\r\n04-11 10:11:52.766 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #21 pc 00011b83  /system/lib/libutils.so (_ZN7android6Looper8pollOnceEiPiS1_PPv+26)\r\n04-11 10:11:52.767 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #22 pc 00097c2d  /system/lib/libandroid_runtime.so (_ZN7android18NativeMessageQueue8pollOnceEP7_JNIEnvP8_jobjecti+22)\r\n04-11 10:11:52.767 19739-19739/? A/art: art/runtime/runtime.cc:403]   native: #23 pc 007035d5  /system/framework/arm/boot-framework.oat (???)\r\n04-11 10:11:52.767 19739-19739/? A/art: art/runtime/runtime.cc:403]   at android.os.MessageQueue.nativePollOnce(Native method)\r\n04-11 10:11:52.767 19739-19739/? A/art: art/runtime/runtime.cc:403]   at android.os.MessageQueue.next(MessageQueue.java:323)\r\n04-11 10:11:52.767 19739-19739/? A/art: art/runtime/runtime.cc:403]   at android.os.Looper.loop(Looper.java:136)\r\n04-11 10:11:52.767 19739-19739/? A/art: art/runtime/runtime.cc:403]   at android.app.ActivityThread.main(ActivityThread.java:6692)\r\n04-11 10:11:52.767 19739-19739/? A/art: art/runtime/runtime.cc:403]   at java.lang.reflect.Method.invoke!(Native method)\r\n04-11 10:11:52.767 19739-19739/? A/art: art/runtime/runtime.cc:403]   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1468)\r\n04-11 10:11:52.767 19739-19739/? A/art: art/runtime/runtime.cc:403]   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1358)\r\n04-11 10:11:52.767 19739-19739/? A/art: art/runtime/runtime.cc:403] Pending exception java.lang.NoSuchMethodError: no non-static method \"Lio/realm/internal/OsObject;.notifyChangeListeners([Ljava/lang/String;)V\"\r\n04-11 10:11:52.767 19739-19739/? A/art: art/runtime/runtime.cc:403]   at void android.os.MessageQueue.nativePollOnce(long, int) (MessageQueue.java:-2)\r\n04-11 10:11:52.767 19739-19739/? A/art: art/runtime/runtime.cc:403]   at android.os.Message android.os.MessageQueue.next() (MessageQueue.java:323)\r\n04-11 10:11:52.767 19739-19739/? A/art: art/runtime/runtime.cc:403]   at void android.os.Looper.loop() (Looper.java:136)\r\n04-11 10:11:52.767 19739-19739/? A/art: art/runtime/runtime.cc:403]   at void android.app.ActivityThread.main(java.lang.String[]) (ActivityThread.java:6692)\r\n04-11 10:11:52.767 19739-19739/? A/art: art/runtime/runtime.cc:403]   at java.lang.Object java.lang.reflect.Method.invoke!(java.lang.Object, java.lang.Object[]) (Method.java:-2)\r\n04-11 10:11:52.767 19739-19739/? A/art: art/runtime/runtime.cc:403]   at void com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run() (ZygoteInit.java:1468)\r\n04-11 10:11:52.767 19739-19739/? A/art: art/runtime/runtime.cc:403]   at void com.android.internal.os.ZygoteInit.main(java.lang.String[]) (ZygoteInit.java:1358)\r\n04-11 10:11:52.767 19739-19739/? A/art: art/runtime/runtime.cc:403] Dumping all threads without appropriate locks held: thread list lock mutator lock\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 3.1.1\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.3.1\r\n\r\nWhich Android version and device: Galaxy S7 7.0\r\n", "url": "https://github.com/realm/realm-java/issues/4463", "user": "codguru", "labels": ["T-Bug"], "created": "2017-04-11 01:31:20", "closed": "2017-04-11 13:02:07", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "In one plus mobile phone has a problem, trouble to help solve the next, the mobile phone system 7.0, thanks", "body": "FATAL EXCEPTION: main\r\n                                                   Process: cn.funtalk.miao, PID: 21507\r\n                                                   io.realm.exceptions.RealmError: Unrecoverable error. Invalid argument in /home/cc/repo/realm/realm-java-release/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 87\r\n                                                       at io.realm.internal.SharedRealm.nativeGetSharedRealm(Native Method)\r\n                                                       at io.realm.internal.SharedRealm.getInstance(SharedRealm.java:208)\r\n                                                       at io.realm.internal.SharedRealm.getInstance(SharedRealm.java:186)\r\n                                                       at io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:124)\r\n                                                       at io.realm.Realm.getDefaultInstance(Realm.java:209)\r\n                                                       at cn.funtalk.miao.pojo.DbUtils$dbWhereBuilder.<init>(DbUtils.java:67)\r\n                                                       at cn.funtalk.miao.packaging.service.business.StepManager.getCurrentStep(StepManager.java:354)\r\n                                                       at cn.funtalk.miao.packaging.service.business.StepManager.<init>(StepManager.java:74)\r\n                                                       at cn.funtalk.miao.packaging.service.business.StepManager.init(StepManager.java:89)\r\n                                                       at cn.funtalk.miao.packaging.service.CommonService.onBind(CommonService.java:73)\r\n                                                       at android.app.ActivityThread.handleBindService(ActivityThread.java:3281)\r\n                                                       at android.app.ActivityThread.-wrap3(ActivityThread.java)\r\n                                                       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1598)\r\n                                                       at android.os.Handler.dispatchMessage(Handler.java:102)\r\n                                                       at android.os.Looper.loop(Looper.java:154)\r\n                                                       at android.app.ActivityThread.main(ActivityThread.java:6209)\r\n                                                       at java.lang.reflect.Method.invoke(Native Method)\r\n                                                       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:865)\r\n                                                       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:755)\r\n\r\n\r\n\r\n", "url": "https://github.com/realm/realm-java/issues/4461", "user": "hw-beijing", "labels": ["T-Bug"], "created": "2017-04-10 10:04:14", "closed": "2017-04-20 07:11:43", "commits": {"bcb07e6dcab36ff6d86a2589a2f798bfc1ae0899": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "c9380bdadf8c429f47962d21a8cc392fd4b6fe70": {"commitGHEventType": "closed", "commitUser": "zaki50"}, "8fdf3717f5c696c080543bc886b3e22aad9d5a01": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "4b728ff2906e583a56c306e020dd9e97e0bdf450": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "bcb07e6dcab36ff6d86a2589a2f798bfc1ae0899", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c9380bdadf8c429f47962d21a8cc392fd4b6fe70", "commitGHEventType": "closed", "commitUser": "zaki50", "commitParents": ["f73308716c5b9fcd35fc900d18d676d67cc376d4"], "nameRev": "c9380bdadf8c429f47962d21a8cc392fd4b6fe70 tags/v3.1.2~6", "commitMessage": "KeepMember OsObject.notifyChangeListeners\n\n- Fix #4461.\n- Use release assertion when finding java method.\n", "commitDateTime": "2017-04-11 21:00:12", "authoredDateTime": "2017-04-11 17:11:51", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "realm/realm-library/src/main/cpp/jni_util/java_method.cpp", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/OsObject.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OsObject.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.OsObject", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.OsObject.notifyChangeListeners(java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "8fdf3717f5c696c080543bc886b3e22aad9d5a01", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "4b728ff2906e583a56c306e020dd9e97e0bdf450", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["9122c0a9255ce4a3f545619707d1af08457a0caa"], "nameRev": "4b728ff2906e583a56c306e020dd9e97e0bdf450 tags/v3.1.3~4", "commitMessage": "Update realm sync to 1.6.0 (#4523)\n\ncore to 2.6.1\r\nFix #4461\r\n", "commitDateTime": "2017-04-20 15:11:34", "authoredDateTime": "2017-04-20 15:11:34", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "dependencies.list", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c9380bdadf8c429f47962d21a8cc392fd4b6fe70"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5.0, "deletions": 3.0, "lines": 8.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 2.0, "UPD": 0.0, "INS": 2.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-library/src/main/java/io/realm/internal", "realm/realm-library/src/main/cpp/jni_util/java_method.cpp"], "changesInPackagesSPOON": ["io.realm.internal.OsObject.notifyChangeListeners(java.lang.String[])", "io.realm.internal.OsObject"]}, {"title": "com.android.build.api.transform.TransformException: java.util.zip.ZipException: duplicate entry: io/realm/DefaultRealmModule.class", "body": "**In my app:**\r\n\r\n```java\r\nRealm.init(this);\r\nRealmConfiguration realmConfiguration = new RealmConfiguration.Builder()\r\n    .name(\"myrealm.app\")\r\n    .modules(Realm.getDefaultModule(),new SampleRealmModule())\r\n    .schemaVersion(1)\r\n    .build();\r\n\r\nRealm.setDefaultConfiguration(realmConfiguration);\r\n```\r\n\r\n**In my library**\r\n\r\n```java\r\n@RealmModule(library = true,allClasses = true)\r\npublic class SampleRealmModule {\r\n\r\n}\r\n```", "url": "https://github.com/realm/realm-java/issues/4452", "user": "vamshikhoslalabs", "labels": ["Reproduction-Required", "T-Bug"], "created": "2017-04-07 12:32:42", "closed": "2017-10-24 12:31:14", "commits": {}, "ttf": 199.00027777777777, "commitsDetails": []}, {"title": "realm getSchema incorrect return type", "body": "realm.getSchema() function return object from type StandardRealmSchema \r\nthis type is object have packcge only access so it is impossible to access his methods,\r\nthe only way is to convert this object to (RealmSchema), i think it is mistake \r\nthe return type need to be RealmSchema and not StandardRealmSchema \r\n\r\nrealm version in use :3.1.0", "url": "https://github.com/realm/realm-java/issues/4443", "user": "idok595", "labels": ["T-Bug"], "created": "2017-04-06 11:30:24", "closed": "2017-04-12 08:54:09", "commits": {"2e5a9623f8a99dbd3cfd2db6fdcf751b6476e6a3": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "0304332efaa9cda7dc770e89aaa80b28bd0b319e": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "3310496bb343042ed06fd55c77d642a67734de58": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "2e5a9623f8a99dbd3cfd2db6fdcf751b6476e6a3", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0304332efaa9cda7dc770e89aaa80b28bd0b319e", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "3310496bb343042ed06fd55c77d642a67734de58", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["15484f3aecf086933697ee81d9fc9d7b986c3b23"], "nameRev": "3310496bb343042ed06fd55c77d642a67734de58 tags/v3.1.1~4", "commitMessage": "Hide StandardRealmSchema class from public API. (#4444)\n\nfixes #4443\r\n\r\n* add package private methods to RealmSchema instead of BaseRealm.getSchemaInternal().", "commitDateTime": "2017-04-07 19:26:38", "authoredDateTime": "2017-04-07 20:26:38", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "realm/realm-library/src/main/java/io/realm/OsRealmSchema.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmSchema.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "realm/realm-library/src/main/java/io/realm/StandardRealmSchema.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OsRealmSchema.java", "spoonMethods": [{"spoonMethodName": "io.realm.OsRealmSchema.getTable(java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.OsRealmSchema.getTable(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.OsRealmSchema.getSchemaForClass(java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.OsRealmSchema.getSchemaForClass(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.OsRealmSchema.Creator.getTable(java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.OsRealmSchema.Creator.getTable(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.OsRealmSchema.Creator.getSchemaForClass(java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.OsRealmSchema.Creator.getSchemaForClass(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmSchema.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmSchema.getTable(java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmSchema.getTable(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmSchema.getSchemaForClass(java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmSchema.getSchemaForClass(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StandardRealmSchema.java", "spoonMethods": [{"spoonMethodName": "io.realm.StandardRealmSchema.getTable(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.StandardRealmSchema.getTable(java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.StandardRealmSchema.getSchemaForClass(java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.StandardRealmSchema.getSchemaForClass(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "failed to create temporary directory /data/user/0/xxx/files/.realm.temp", "body": "Reported on SO http://stackoverflow.com/questions/43219226/realm-init-fails-data-user?noredirect=1#comment73512411_43219226\r\n\r\n```java\r\nRealm.init(this);\r\nRealm.setDefaultConfiguration(new RealmConfiguration.Builder()\r\n        .name(\"default.realm\")\r\n        .modules(Realm.getDefaultModule(), new RealmCoreModule())\r\n        .schemaVersion(10)\r\n        .migration(new SampleRealmMigration())\r\n        .build());\r\n```\r\n\r\n\r\n> Fatal Exception: java.lang.RuntimeException: Unable to create application com.zappos.android.ZapposApplication: io.realm.internal.IOException: failed to create temporary directory: /data/user/0/com.zappos.android/files/.realm.temp at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4800) at android.app.ActivityThread.access$1600(ActivityThread.java:157) at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1417) at android.os.Handler.dispatchMessage(Handler.java:102) at android.os.Looper.loop(Looper.java:148) at android.app.ActivityThread.main(ActivityThread.java:5527) at java.lang.reflect.Method.invoke(Method.java) at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:730) at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:620) Caused by io.realm.internal.IOException: failed to create temporary directory: /data/user/0/com.sample.android/files/.realm.temp at io.realm.internal.SharedRealm.initialize(SharedRealm.java:48) at io.realm.Realm.init(Realm.java:191) at com.sample.android.SampleApplication.onCreate(SampleApplication.java:223) at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1014) at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4797) at android.app.ActivityThread.access$1600(ActivityThread.java:157) at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1417) at android.os.Handler.dispatchMessage(Handler.java:102) at android.os.Looper.loop(Looper.java:148) at android.app.ActivityThread.main(ActivityThread.java:5527) at java.lang.reflect.Method.invoke(Method.java) at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:730) at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:620)\r\n\r\n\r\nI've noticed that this fails sometimes and more regularly on LG devices on Android 6.\r\n\r\nDisk space was not an issue and neither was RAM. From a little more research it says /data/user/0 is something that gets returned during multiple user profiles on the phone. I haven't had luck trying to replicate it.\r\n", "url": "https://github.com/realm/realm-java/issues/4430", "user": "beeender", "labels": ["Reproduction-Required", "T-Bug"], "created": "2017-04-05 04:02:24", "closed": "2017-04-27 08:32:26", "commits": {}, "ttf": 22.00027777777778, "commitsDetails": []}, {"title": "Reach the Local Ref Table size limit when 512+ fields changes for the same object.", "body": "Currently the `String` array of changed field names are created from JNI which may reach the local ref table size limits. \r\n\r\nIdea to fix it is creating `JavaString` class and acquire a global ref then release the local ref.\r\n\r\nTest to reproduce it:\r\n\r\n```java\r\n    @Test\r\n    @RunTestInLooperThread\r\n    public void moreFieldsChangedThanLocalRefTableSize() {\r\n        final String CLASS_NAME = \"ManyFields\";\r\n        final int FIELD_COUNT = 1024;\r\n        RealmConfiguration config = looperThread.createConfiguration(\"many_fields\");\r\n        DynamicRealm realm = DynamicRealm.getInstance(config);\r\n\r\n        realm.beginTransaction();\r\n        RealmSchema schema = realm.getSchema();\r\n        RealmObjectSchema objectSchema = schema.create(CLASS_NAME);\r\n        for (int i = 0; i < FIELD_COUNT; i++) {\r\n            objectSchema.addField(\"field\" + i, int.class);\r\n        }\r\n        DynamicRealmObject obj = realm.createObject(CLASS_NAME);\r\n        realm.commitTransaction();\r\n\r\n        obj.addChangeListener(new RealmObjectChangeListener<DynamicRealmObject>() {\r\n            @Override\r\n            public void onChange(DynamicRealmObject object, ObjectChangeSet changeSet) {\r\n                assertEquals(FIELD_COUNT, changeSet.getChangedFields().length);\r\n                looperThread.testComplete();\r\n            }\r\n        });\r\n\r\n        realm.beginTransaction();\r\n        for (int i = 0; i < FIELD_COUNT; i++) {\r\n            obj.setInt(\"field\" + i, 42);\r\n        }\r\n        realm.commitTransaction();\r\n    }\r\n```", "url": "https://github.com/realm/realm-java/issues/4378", "user": "beeender", "labels": ["T-Bug"], "created": "2017-03-24 10:04:49", "closed": "2017-04-04 08:40:45", "commits": {"c1dbe473f66bc8ccb0cf69cf2bbe5620da4e855d": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "207f0903af5d9bf0c4cebb8941982a50a0d228c5": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 10.000277777777777, "commitsDetails": [{"commitHash": "c1dbe473f66bc8ccb0cf69cf2bbe5620da4e855d", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "207f0903af5d9bf0c4cebb8941982a50a0d228c5", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["5b55c6d382a848a10ab01cc00b2d7b1b1c4a7833"], "nameRev": "207f0903af5d9bf0c4cebb8941982a50a0d228c5 tags/v3.1.0~7", "commitMessage": "Acquire a global ref of jstring for field changes (#4421)\n\nWhen there are more than 512 fields change, the JNI local ref table\r\nsize limitation may be reached.\r\nFix #4378", "commitDateTime": "2017-04-04 16:40:44", "authoredDateTime": "2017-04-04 16:40:44", "commitGitStats": [{"filePath": "realm/realm-library/src/androidTest/java/io/realm/ObjectChangeSetTests.java", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_OsObject.cpp", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "realm/realm-library/src/main/cpp/jni_util/java_global_ref.hpp", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ObjectChangeSetTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.ObjectChangeSetTests.moreFieldsChangedThanLocalRefTableSize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Sync certificate verify failed only in android", "body": "- realm-mobile-platform version :  1.2.1\r\n- realm-java version : 3.0.0 \r\n- realm-cocoa version : 2.4.4\r\n- ream-browser(Mac APP) version : 2.1.5\r\n\r\nThis issue exists only in Android.\r\n\r\n```\r\nConnection[1]: SSL handshake failed: certificate verify failed\r\n```\r\n\r\nrealm-cocoa / realm-browser has been confirmed to work..", "url": "https://github.com/realm/realm-java/issues/4371", "user": "probepark", "labels": ["Blocked", "T-Bug"], "created": "2017-03-23 17:05:54", "closed": "2017-05-22 15:37:48", "commits": {"424c6b2f889eabfd721ef17b929e7e34f9841bf5": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}, "3db8db8d7255283c4630fe3cd36596475e8a5961": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "79ca7666432a7a17b0dc29a1dfa7185f27b4f216": {"commitGHEventType": "closed", "commitUser": "nhachicha"}}, "ttf": 59.000277777777775, "commitsDetails": [{"commitHash": "424c6b2f889eabfd721ef17b929e7e34f9841bf5", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "3db8db8d7255283c4630fe3cd36596475e8a5961", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "79ca7666432a7a17b0dc29a1dfa7185f27b4f216", "commitGHEventType": "closed", "commitUser": "nhachicha", "commitParents": ["cc99936bcd889c6a97ac9d006bf303834f9cf656"], "nameRev": "79ca7666432a7a17b0dc29a1dfa7185f27b4f216 tags/v3.3.0~6", "commitMessage": "Nh/android support ssl (#4591)\n\n* Expose two new SyncConfiguration options to 1: Disable TLS verification. 2: provide the trusted root CA to validate the RealmObjectServer TLS connection (since OpenSSL doesn't have access to Android keystore) fixes #4371", "commitDateTime": "2017-05-22 16:37:44", "authoredDateTime": "2017-05-22 16:37:44", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 8, "deletions": 2, "lines": 10}, {"filePath": "Jenkinsfile", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/build.gradle", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmJsonTests.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp", "insertions": 18, "deletions": 5, "lines": 23}, {"filePath": "realm/realm-library/src/main/cpp/object-store", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmCache.java", "insertions": 54, "deletions": 39, "lines": 93}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmConfiguration.java", "insertions": 8, "deletions": 10, "lines": 18}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/ObjectServerFacade.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/SharedRealm.java", "insertions": 13, "deletions": 7, "lines": 20}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/Util.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/SyncConfiguration.java", "insertions": 108, "deletions": 6, "lines": 114}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/internal/SyncObjectServerFacade.java", "insertions": 23, "deletions": 3, "lines": 26}, {"filePath": "realm/realm-library/src/syncIntegrationTest/assets/trusted_ca.pem", "insertions": 123, "deletions": 0, "lines": 123}, {"filePath": "realm/realm-library/src/syncIntegrationTest/java/io/realm/SSLConfigurationTests.java", "insertions": 204, "deletions": 0, "lines": 204}, {"filePath": "realm/realm-library/src/syncIntegrationTest/java/io/realm/SyncedRealmTests.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "realm/realm-library/src/syncIntegrationTest/java/io/realm/objectserver/SyncedRealmTests.java", "insertions": 0, "deletions": 184, "lines": 184}, {"filePath": "realm/realm-library/src/syncIntegrationTest/java/io/realm/objectserver/utils/Constants.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "tools/sync_test_server/Dockerfile", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tools/sync_test_server/configuration.yml", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "tools/sync_test_server/keys/127_0_0_1-chain.crt.pem", "insertions": 229, "deletions": 0, "lines": 229}, {"filePath": "tools/sync_test_server/keys/127_0_0_1-server.key.pem", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "tools/sync_test_server/start_server.sh", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmJsonTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmJsonTests.createFromJson_respectDefaultValues()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmCache.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmCache.copyAssetFileIfNeeded(io.realm.RealmConfiguration)", "TOT": 27, "UPD": 5, "INS": 1, "MOV": 19, "DEL": 2}, {"spoonMethodName": "io.realm.RealmCache.copyFileIfNeeded(java.lang.String,java.io.File)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmConfiguration.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmConfiguration.getAssetFile()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.RealmConfiguration.hasAssetFile()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmConfiguration.Builder.assetFile(java.lang.String)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmConfiguration.Builder.inMemory()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ObjectServerFacade.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.ObjectServerFacade.getUserAndServerUrl(io.realm.RealmConfiguration)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.ObjectServerFacade.getSyncServerCertificateAssetName(io.realm.RealmConfiguration)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.ObjectServerFacade.getSyncServerCertificateFilePath(io.realm.RealmConfiguration)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SharedRealm.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.SharedRealm.getInstance(io.realm.RealmConfiguration,io.realm.internal.SharedRealm$SchemaVersionListener,boolean)", "TOT": 5, "UPD": 1, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.SharedRealm.nativeCreateConfig(java.lang.String,byte[],byte,boolean,boolean,long,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Util.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.Util.isEmptyString(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SyncConfiguration.java", "spoonMethods": [{"spoonMethodName": "io.realm.SyncConfiguration.Builder.build()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.SyncConfiguration", "TOT": 9, "UPD": 0, "INS": 9, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.SyncConfiguration.getServerCertificateAssetName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.SyncConfiguration.getServerCertificateFilePath()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.SyncConfiguration.syncClientValidateSsl()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.SyncConfiguration.equals(java.lang.Object)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.SyncConfiguration.hashCode()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.SyncConfiguration.Builder", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 0}, {"spoonMethodName": "io.realm.SyncConfiguration.Builder.trustedRootCA(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.SyncConfiguration.Builder.disableSSLVerification()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SyncObjectServerFacade.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.SyncObjectServerFacade.getUserAndServerUrl(io.realm.RealmConfiguration)", "TOT": 4, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.SyncObjectServerFacade.getSyncServerCertificateAssetName(io.realm.RealmConfiguration)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.SyncObjectServerFacade.getSyncServerCertificateFilePath(io.realm.RealmConfiguration)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SSLConfigurationTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.SSLConfigurationTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SyncedRealmTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.objectserver.SyncedRealmTests", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Constants.java", "spoonMethods": [{"spoonMethodName": "io.realm.objectserver.utils.Constants", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Issue with addChangeListener on async query, without objects created.", "body": "#### Goal\r\n\r\nIn Realm `3.0.0`, the following code, documented in `isLoaded()` method, doesn't seem to work, if there aren't any `Person` objects created in the database.\r\n\r\n```Java\r\nPerson person = realm.where(Person.class).findFirstAsync();\r\nperson.isLoaded(); // == false\r\nperson.addChangeListener(new RealmChangeListener() {\r\n    @Override\r\n    public void onChange(Person person) {\r\n        person.isLoaded(); // Always true here\r\n        if (person.isValid()) {\r\n            // It is safe to access the person.\r\n        }\r\n    }\r\n});\r\n```\r\n\r\n#### Expected Results\r\n\r\n`onChange()` should be called with `person.isLoaded() == true` and `person.isValid() == false`.\r\n\r\n#### Actual Results\r\n\r\n`onChange()` is never called.\r\n\r\n#### Version of Realm and tooling\r\n\r\nRealm version: 3.0.0", "url": "https://github.com/realm/realm-java/issues/4352", "user": "jpmcosta", "labels": ["T-Bug"], "created": "2017-03-20 19:17:32", "closed": "2017-03-21 09:46:59", "commits": {"4e92bd58ebeee1cbeb6866bc5f5105d5fa52f213": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "f96ea990e58c437d4931f4c7d427554229178008": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "4e92bd58ebeee1cbeb6866bc5f5105d5fa52f213", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f96ea990e58c437d4931f4c7d427554229178008", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["52ba434e3dc57072ef93df0d4a6c936f7682e790"], "nameRev": "f96ea990e58c437d4931f4c7d427554229178008 tags/v3.1.0~3^2~8", "commitMessage": "findFirstAsync returns invalid row if no object\n\nFix #4352\nThe findFirstAsync()'s behavior doesn't match the javadoc from the first\nday the API was introduced. It kept running the query until it could\nfind a row match the query condition. This behavior create difficulties\nif user want to check if there is no object in the db. Also it was not\nconsistent with the behavior of findFirst() which will return an invalid\nrow in the same condition.\n", "commitDateTime": "2017-03-21 17:46:46", "authoredDateTime": "2017-03-21 16:36:45", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmAsyncQueryTests.java", "insertions": 4, "deletions": 12, "lines": 16}, {"filePath": "realm/realm-library/src/main/java/io/realm/ProxyState.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/PendingRow.java", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmAsyncQueryTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_initalEmptyRow()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_updatedIfsyncRealmObjectIsUpdated()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_initalEmptyRow().34.onChange(io.realm.entities.AllTypes)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "ProxyState.java", "spoonMethods": [{"spoonMethodName": "io.realm.ProxyState.onQueryFinished(io.realm.internal.Row)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.ProxyState.registerToRealmNotifier()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "PendingRow.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.PendingRow.1.onChange(io.realm.internal.PendingRow)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f96ea990e58c437d4931f4c7d427554229178008"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10.0, "deletions": 8.0, "lines": 18.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 8.0, "UPD": 0.0, "INS": 3.0, "MOV": 4.0, "DEL": 1.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-library/src/main/java/io/realm", "realm/realm-library/src/main/java/io/realm/internal"], "changesInPackagesSPOON": ["io.realm.ProxyState.onQueryFinished(io.realm.internal.Row)", "io.realm.internal.PendingRow.1.onChange(io.realm.internal.PendingRow)", "io.realm.ProxyState.registerToRealmNotifier()"]}, {"title": "[Sync] ExponentialBackoffTask not retrying", "body": "`ExponentialBackoffTask` should retry the query with incremental backoff.\r\n\r\nHowever, if you use `Airplane mode` in the device, the OkHttp query will fail, with an unknown `-1` code causing the `ExponentialBackoffTask` no to retry when the network is back \r\n\r\n```\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: Unrecoverable error, while refreshing the access Token (UNKNOWN(-1)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: java.net.ConnectException: Failed to connect to /172.19.216.95:9080\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:189)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat okhttp3.internal.connection.RealConnection.buildConnection(RealConnection.java:173)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat okhttp3.internal.connection.RealConnection.connect(RealConnection.java:114)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:193)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:129)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:98)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:109)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:124)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:170)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat okhttp3.RealCall.execute(RealCall.java:60)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat io.realm.internal.network.OkHttpAuthenticationServer.authenticate(OkHttpAuthenticationServer.java:110)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat io.realm.internal.network.OkHttpAuthenticationServer.refreshUser(OkHttpAuthenticationServer.java:73)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat io.realm.SyncSession$4.execute(SyncSession.java:264)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat io.realm.SyncSession$4.execute(SyncSession.java:260)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat io.realm.internal.network.ExponentialBackoffTask.run(ExponentialBackoffTask.java:66)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:423)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: \tat java.lang.Thread.run(Thread.java:818)\r\n03-10 14:50:23.002  1732  1810 E REALM_JAVA: ) reschedule will not happen\r\n\r\n```", "url": "https://github.com/realm/realm-java/issues/4310", "user": "nhachicha", "labels": ["T-Bug"], "created": "2017-03-10 15:49:09", "closed": "2017-06-20 08:47:03", "commits": {"abd6aad4b17679d0cbba19e8c8990815ffbde318": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}, "2b3054b7e0eee3044202e74573be861f8391c808": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 101.00027777777778, "commitsDetails": [{"commitHash": "abd6aad4b17679d0cbba19e8c8990815ffbde318", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "2b3054b7e0eee3044202e74573be861f8391c808", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["b96ba21cf1e6e69f4f35d0fe04ad21cb7dcfade8"], "nameRev": "2b3054b7e0eee3044202e74573be861f8391c808 tags/v3.4.0~7^2~2", "commitMessage": "Exponential Back Off now retry query in case of `ConnectionException` (#4805)\n\n* fixes #4310", "commitDateTime": "2017-06-20 09:46:54", "authoredDateTime": "2017-06-20 09:46:54", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/ErrorCode.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/internal/network/AuthenticateResponse.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/internal/network/ChangePasswordResponse.java", "insertions": 19, "deletions": 3, "lines": 22}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/internal/network/LogoutResponse.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/internal/network/OkHttpAuthenticationServer.java", "insertions": 8, "deletions": 10, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ErrorCode.java", "spoonMethods": [{"spoonMethodName": "io.realm.ErrorCode.fromException(java.lang.Exception)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AuthenticateResponse.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.network.AuthenticateResponse.from(java.lang.Exception)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ChangePasswordResponse.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.network.ChangePasswordResponse.createFailure(io.realm.ObjectServerError)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.network.ChangePasswordResponse.from(java.lang.Exception)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.network.ChangePasswordResponse.from(okhttp3.Response)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "LogoutResponse.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.network.LogoutResponse.from(java.lang.Exception)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OkHttpAuthenticationServer.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.network.OkHttpAuthenticationServer.changePassword(io.realm.internal.objectserver.Token,java.lang.String,java.net.URL)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.network.OkHttpAuthenticationServer.changePassword(io.realm.internal.objectserver.Token,java.lang.String,java.lang.String,java.net.URL)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.network.OkHttpAuthenticationServer.loginUser(io.realm.SyncCredentials,java.net.URL)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.network.OkHttpAuthenticationServer.loginToRealm(io.realm.internal.objectserver.Token,java.net.URI,java.net.URL)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.network.OkHttpAuthenticationServer.refreshUser(io.realm.internal.objectserver.Token,java.net.URI,java.net.URL)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.network.OkHttpAuthenticationServer.logout(io.realm.internal.objectserver.Token,java.net.URL)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Do thread checking in DynamicRealmObject", "body": "Methods in `DynamicRealmObject` don't have thread checks.\r\n\r\nI wrote following test to expose this bug.\r\n```\r\n    private enum ThreadConfinedMethods {\r\n        GET_LONG,\r\n    }\r\n\r\n    private static void callThreadConfinedMethod(DynamicRealmObject obj, ThreadConfinedMethods method) {\r\n        switch (method) {\r\n            case GET_LONG:\r\n                obj.getLong(AllJavaTypes.FIELD_LONG);\r\n                break;\r\n\r\n            default:\r\n                throw new AssertionError(\"missing case for \" + method);\r\n        }\r\n    }\r\n\r\n    @Test\r\n    public void callThreadConfinedMethodsFromWrongThread() throws Throwable {\r\n\r\n        dynamicRealm.beginTransaction();\r\n        dynamicRealm.deleteAll();\r\n        final DynamicRealmObject obj = dynamicRealm.createObject(AllJavaTypes.CLASS_NAME, 100L);\r\n        dynamicRealm.commitTransaction();\r\n\r\n        final AtomicReference<Throwable> throwableFromThread = new AtomicReference<Throwable>();\r\n        final CountDownLatch testFinished = new CountDownLatch(1);\r\n\r\n        final String expectedMessage;\r\n        //noinspection TryWithIdenticalCatches\r\n        try {\r\n            final Field expectedMessageField = BaseRealm.class.getDeclaredField(\"INCORRECT_THREAD_MESSAGE\");\r\n            expectedMessageField.setAccessible(true);\r\n            expectedMessage = (String) expectedMessageField.get(null);\r\n        } catch (NoSuchFieldException e) {\r\n            throw new AssertionError(e);\r\n        } catch (IllegalAccessException e) {\r\n            throw new AssertionError(e);\r\n        }\r\n\r\n        final Thread thread = new Thread(\"callThreadConfinedMethodsFromWrongThread\") {\r\n            @Override\r\n            public void run() {\r\n                try {\r\n                    for (ThreadConfinedMethods method : ThreadConfinedMethods.values()) {\r\n                        try {\r\n                            callThreadConfinedMethod(obj, method);\r\n                            fail(\"IllegalStateException must be thrown.\");\r\n                        } catch (Throwable e) {\r\n                            if (e instanceof IllegalStateException && expectedMessage.equals(e.getMessage())) {\r\n                                // expected exception\r\n                                continue;\r\n                            }\r\n                            throwableFromThread.set(e);\r\n                            return;\r\n                        }\r\n                    }\r\n                } finally {\r\n                    testFinished.countDown();\r\n                }\r\n            }\r\n        };\r\n        thread.start();\r\n\r\n        TestHelper.awaitOrFail(testFinished);\r\n        final Throwable throwable = throwableFromThread.get();\r\n        if (throwable != null) {\r\n            throw throwable;\r\n        }\r\n    }\r\n```", "url": "https://github.com/realm/realm-java/issues/4258", "user": "zaki50", "labels": ["T-Bug"], "created": "2017-02-27 15:34:24", "closed": "2017-02-28 13:08:24", "commits": {"c6b9c2aee1c366cd0e80a35bbd91751ac77fa3cc": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "20167a5b4ba72bb75d4abad1e920e4ec6d01e15e": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "b10f185dfbfb4cec950d9af5732c7d497655b3cb": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c6b9c2aee1c366cd0e80a35bbd91751ac77fa3cc", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "20167a5b4ba72bb75d4abad1e920e4ec6d01e15e", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b10f185dfbfb4cec950d9af5732c7d497655b3cb", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["05c35dc7d5b292b771daf161124763690021705e"], "nameRev": "b10f185dfbfb4cec950d9af5732c7d497655b3cb tags/v3.0.0~2^2~1", "commitMessage": "Add thread check to methods in DynamicRealmObject (#4259)\n\n* add a simple test case to expose #4258\r\n\r\n* update Changelog\r\n\r\n* fix issue4258\r\n\r\n* fix test failure\r\n\r\n* fix test process crash when RealmListTests#add_set_dynamicObjectFromOtherThread() fails\r\n", "commitDateTime": "2017-02-28 21:58:22", "authoredDateTime": "2017-02-28 21:58:22", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java", "insertions": 119, "deletions": 0, "lines": 119}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmListTests.java", "insertions": 39, "deletions": 27, "lines": 66}, {"filePath": "realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java", "insertions": 66, "deletions": 1, "lines": 67}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmList.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DynamicRealmObjectTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.DynamicRealmObjectTests.setObject_objectBelongToDiffThreadRealmThrows()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.setList_managedRealmList().2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.setList_managedRealmList().3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.setList_elementBelongToDiffThreadRealmThrows()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.setObject_objectBelongToDiffThreadRealmThrows().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.setList_elementBelongToDiffThreadRealmThrows().4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.setObject_objectBelongToDiffThreadRealmThrows().1.run()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.setList_elementBelongToDiffThreadRealmThrows().4.run()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.ThreadConfinedMethods", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.callThreadConfinedMethod(io.realm.DynamicRealmObject,io.realm.DynamicRealmObjectTests$ThreadConfinedMethods)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.callThreadConfinedMethodsFromWrongThread()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmListTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmListTests.add_set_dynamicObjectFromOtherThread()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTests.add_set_dynamicObjectFromOtherThread().2.run()", "TOT": 9, "UPD": 0, "INS": 1, "MOV": 8, "DEL": 0}]}, {"spoonFilePath": "DynamicRealmObject.java", "spoonMethods": [{"spoonMethodName": "io.realm.DynamicRealmObject.toString()", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 1}, {"spoonMethodName": "io.realm.DynamicRealmObject.get(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.getBoolean(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.getLong(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.getFloat(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.getDouble(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.getBlob(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.getString(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.getDate(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.getObject(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.getList(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.isNull(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.hasField(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.getFieldNames()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.set(java.lang.String,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.setBoolean(java.lang.String,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.setShort(java.lang.String,short)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.setInt(java.lang.String,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.setLong(java.lang.String,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.setByte(java.lang.String,byte)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.setFloat(java.lang.String,float)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.setDouble(java.lang.String,double)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.setString(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.setBlob(java.lang.String,byte[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.setDate(java.lang.String,java.util.Date)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.setObject(java.lang.String,io.realm.DynamicRealmObject)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.setList(java.lang.String,io.realm.RealmList)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.setNull(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.getType()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.getFieldType(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.hashCode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObject.equals(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmList.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmList.copyToRealmIfNeeded(io.realm.RealmModel)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "DynamicRealmObject.setList() does wrong type check", "body": "#### Goal\r\n\r\nSet the value of a field with the type RealmList via `DynamicRealmObject.setList()`.\r\n\r\n#### Expected Results\r\n\r\nThe value is set.\r\n\r\n#### Actual Results\r\n\r\n`java.lang.IllegalArgumentException: The elements in the list is not the proper type. Was EmailAddress expected class_User.`\r\nThe type of the items of the passed in list are checked against the type of the table. \r\n\r\n#### Code Sample\r\n```java\r\npublic class User extends RealmObject {\r\n    RealmList<EmailAddress> emailAddresses;\r\n\r\n    public User() {\r\n\r\n    }\r\n}\r\n```\r\n```java\r\npublic class EmailAddress extends RealmObject {\r\n    @PrimaryKey\r\n    String emailAddress;\r\n\r\n    public EmailAddress() {\r\n\r\n    }\r\n}\r\n```\r\n```java\r\ndynamicRealm.beginTransaction();\r\n\r\nDynamicRealmObject user = dynamicRealm.createObject(User.class.getSimpleName());\r\nDynamicRealmObject email = dynamicRealm.createObject(EmailAddress.class.getSimpleName(), \"email\");\r\nuser.getList(\"emailAddresses\").add(email);\r\n\r\nDynamicRealmObject user2 = dynamicRealm.createObject(User.class.getSimpleName());\r\nuser2.setList(\"emailAddresses\", user.getList(\"emailAddresses\"));\r\n\r\ndynamicRealm.commitTransaction();\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 2.3.1\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.2.3\r\n\r\nWhich Android version and device: Android 7.1.2 Nexus 5X\r\n", "url": "https://github.com/realm/realm-java/issues/4252", "user": "jonasrottmann", "labels": ["T-Bug"], "created": "2017-02-25 18:16:55", "closed": "2017-02-28 09:47:00", "commits": {"ea62d9376e61f76382f597b36d8cb972e7242808": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "d4224fc03864cfbdbc9db142c4da34828b5aa957": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "ba8b9f2793d4a5e36dacb2dfc9018ae6bec79802": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "ea62d9376e61f76382f597b36d8cb972e7242808", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d4224fc03864cfbdbc9db142c4da34828b5aa957", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ba8b9f2793d4a5e36dacb2dfc9018ae6bec79802", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["b41c7e0ede1622feb0004e686e8998474a610c65"], "nameRev": "ba8b9f2793d4a5e36dacb2dfc9018ae6bec79802 tags/v3.0.0~3^2~2", "commitMessage": "Fixed element type checking in DynamicRealmOject#setList(). (#4254)\n\n* Fixed element type checking in DynamicRealmOject#setList() (#4252).\r\n\r\n* Update CHANGELOG.md\r\n\r\n* PR fixes\r\n\r\n* PR fixes\r\n", "commitDateTime": "2017-02-28 18:45:35", "authoredDateTime": "2017-02-28 18:45:35", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java", "insertions": 25, "deletions": 12, "lines": 37}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/Row.java", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DynamicRealmObjectTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.DynamicRealmObjectTests.setList_elementBelongToDiffThreadRealmThrows()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.setList_elementBelongToDiffThreadRealmThrows().2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.setList_elementBelongToDiffThreadRealmThrows().2.run()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.setList_managedRealmList()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DynamicRealmObject.java", "spoonMethods": [{"spoonMethodName": "io.realm.DynamicRealmObject.setList(java.lang.String,io.realm.RealmList)", "TOT": 31, "UPD": 5, "INS": 10, "MOV": 15, "DEL": 1}]}, {"spoonFilePath": "Row.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Website header stuck in the middle of the screen on mobile", "body": "Using Chrome and a Nexus 6P,  browsing the realm java documentation online,  I experience the following bug: When scrolling down, the header containing the version of Realm stays in the middle of the screen, instead of scrolling up like the top header. I've attached a screenshot for clarity. \r\n![screenshot_20170223-084323](https://cloud.githubusercontent.com/assets/4106884/23261552/bae9f3f4-f9a4-11e6-89b8-73af1bd2328f.png)\r\n", "url": "https://github.com/realm/realm-java/issues/4234", "user": "AOrobator", "labels": ["T-Bug"], "created": "2017-02-23 13:48:55", "closed": "2017-02-28 10:24:15", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Do thread checking in `RealmQuery`", "body": "Somehow most APIs in `RealmQuery` don't do thread checking, so user can:\r\n`RealmQuery q1 = realm.where()` in thread1, then do `q2.equalTo()` in thread2.\r\n\r\n", "url": "https://github.com/realm/realm-java/issues/4228", "user": "beeender", "labels": ["T-Bug"], "created": "2017-02-23 09:07:08", "closed": "2017-02-28 17:14:05", "commits": {"a25875401380f6c3d814aa02eb1e9715de5e358a": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "2047e7323cc9758f09cc26bd8bc85b680f46f806": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "3b33640041b4a9901aec34900ef2b1eaa1855cf4": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "a25875401380f6c3d814aa02eb1e9715de5e358a", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "2047e7323cc9758f09cc26bd8bc85b680f46f806", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "3b33640041b4a9901aec34900ef2b1eaa1855cf4", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["ba8b9f2793d4a5e36dacb2dfc9018ae6bec79802"], "nameRev": "3b33640041b4a9901aec34900ef2b1eaa1855cf4 tags/v3.0.0~3^2~1", "commitMessage": "Add thread check to methods in RealmQuery. (#4257)\n\n* Throw IllegalStateException instead of process crash when any of thread confined methods in RealmQuery is called from wrong thread (#4228).\r\n\r\n* fix some bugs in test and remove 'methodParams'\r\n\r\n* no need to add 'realm.checkIfValid();' to RealmQuery.isValid()\r\n\r\n* PR fixes\r\n\r\n* removed section header comments\r\n", "commitDateTime": "2017-02-28 20:17:08", "authoredDateTime": "2017-02-28 20:17:08", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmQueryTests.java", "insertions": 287, "deletions": 0, "lines": 287}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmQuery.java", "insertions": 243, "deletions": 56, "lines": 299}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Realm.compactRealm on external storage throws RealmError: Unrecoverable error. Read-only file system", "body": "#### Introduction\r\n\r\nHi, I have a complex app with more than one Realm (because of sandboxing) and Realms are stored on External Storage. Until recently I was stuck at v1.0.1 because of various problems that were fixed ;)\r\nBut now I'm facing a new problem, the `compact` phase (which is started before opening the realm) is crashing the whole app. Even if I'm catching the `RealmError`, a native crash occurs afterwards.\r\n\r\n#### Goal\r\n\r\nCompact Realm before opening it, the Realm exists and is writable.\r\n\r\n#### Expected Results\r\n\r\nNo explosion\r\n\r\n#### Actual Results\r\n\r\n```java\r\nio.realm.exceptions.RealmError: Unrecoverable error. Read-only file system in /home/cc/repo/realm/realm-java-release/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 414\r\n        at io.realm.internal.SharedRealm.nativeCompact(Native Method)\r\n        at io.realm.internal.SharedRealm.compact(SharedRealm.java:327)\r\n        at io.realm.BaseRealm.compactRealm(BaseRealm.java:586)\r\n        at io.realm.Realm.compactRealm(Realm.java:1612)\r\n```\r\n\r\n#### Steps & Code to Reproduce\r\n\r\nSimple AndroidTestCase\r\n```java\r\npublic class RealmExternalTest extends AndroidTestCase {\r\n\r\n    @Override\r\n    protected void setUp() throws Exception {\r\n        Realm.init(getContext());\r\n    }\r\n\r\n    @Override\r\n    protected void tearDown() throws Exception {\r\n    }\r\n\r\n    public void testRealmCompactExternal() {\r\n        File directory = getContext().getExternalFilesDir(null);\r\n        directory.mkdirs();\r\n\r\n        assertTrue(directory.exists());\r\n\r\n        RealmConfiguration config = new RealmConfiguration.Builder().directory(directory).name(\"somerealm.realm\").build();\r\n        Realm realm = Realm.getInstance(config);\r\n\r\n        File realmFile = new File(config.getPath());\r\n        assertTrue(realmFile.exists() && realmFile.canWrite());\r\n\r\n        { // simple read/write\r\n            Test test = new Test();\r\n\r\n            realm.beginTransaction();\r\n            try {\r\n                realm.copyToRealm(test);\r\n\r\n                realm.commitTransaction();\r\n            } catch (Exception e) {\r\n                realm.cancelTransaction();\r\n                fail();\r\n            }\r\n\r\n            assertTrue(realm.where(Test.class).count() > 0);\r\n        }\r\n\r\n        realm.close();\r\n\r\n        assertTrue(Realm.compactRealm(config));\r\n    }\r\n}\r\n```\r\n\r\nThe whole test is passing, except the last line throwing the above exception :/\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 2.3.0\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.2.3\r\n\r\nWhich Android version and device: Samsung Galaxy Tab S2 (SM-T710) 6.0.1", "url": "https://github.com/realm/realm-java/issues/4140", "user": "tmeunier", "labels": ["T-Bug"], "created": "2017-02-02 15:01:32", "closed": "2017-02-24 10:24:57", "commits": {"0297392ec97128566434ffcbe230de314e5247d2": {"commitGHEventType": "referenced", "commitUser": "bmeike"}, "d37165fa23f8a2b005ff6867eefdae4355b29db9": {"commitGHEventType": "referenced", "commitUser": "bmeike"}, "b166d2790567e6a6b8718f7a7197ae83868abda3": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "ef8faf8b5021bf51bed75698ca98dc11aaec33e8": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 21.00027777777778, "commitsDetails": [{"commitHash": "0297392ec97128566434ffcbe230de314e5247d2", "commitGHEventType": "referenced", "commitUser": "bmeike", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d37165fa23f8a2b005ff6867eefdae4355b29db9", "commitGHEventType": "referenced", "commitUser": "bmeike", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b166d2790567e6a6b8718f7a7197ae83868abda3", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ef8faf8b5021bf51bed75698ca98dc11aaec33e8", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["8c18a88a180bb2f2d6a2a5a53b1e04feaf7294c2"], "nameRev": "ef8faf8b5021bf51bed75698ca98dc11aaec33e8 tags/v2.3.2~4", "commitMessage": "Fix compacting on external storage\n\nFix #4140.\r\nUpdate Object Store to 37a2ba42b.", "commitDateTime": "2017-02-24 18:24:50", "authoredDateTime": "2017-02-24 02:24:50", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmTests.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "realm/realm-library/src/main/cpp/object-store", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmTests.compactRealm_onExternalStorage()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ef8faf8b5021bf51bed75698ca98dc11aaec33e8"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3.0, "deletions": 2.0, "lines": 5.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-library/src/main/cpp/object-store", "realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp"], "changesInPackagesSPOON": []}, {"title": "asObservable doesn't support backpressure", "body": "From http://stackoverflow.com/questions/37774954/onerrornotimplementedexception-caused-by-rx-exceptions-missingbackpressureexcep\r\n\r\n```\r\nrx.exceptions.OnErrorNotImplementedException at rx.Observable$27.onError(Observable.java:8139)\r\n    at rx.observers.SafeSubscriber._onError(SafeSubscriber.java:157)\r\n    at rx.observers.SafeSubscriber.onError(SafeSubscriber.java:120)\r\n    at rx.internal.operators.OperatorZip$Zip$InnerSubscriber.onError(OperatorZip.java:325)\r\n    at rx.internal.operators.OperatorZip$Zip$InnerSubscriber.onNext(OperatorZip.java:333)\r\n    at io.realm.rx.RealmObservableFactory$5$1.onChange(RealmObservableFactory.java:143)\r\n    at io.realm.rx.RealmObservableFactory$5$1.onChange(RealmObservableFactory.java:139)\r\n    at io.realm.RealmResults.notifyChangeListeners(RealmResults.java:1010)\r\n    at io.realm.RealmResults.notifyChangeListeners(RealmResults.java:996)\r\n    at io.realm.HandlerController.notifyRealmResultsCallbacks(HandlerController.java:303)\r\n    at io.realm.HandlerController.notifySyncRealmResultsCallbacks(HandlerController.java:284)\r\n    at io.realm.HandlerController.notifyTypeBasedListeners(HandlerController.java:275)\r\n    at io.realm.HandlerController.notifyAllListeners(HandlerController.java:262)\r\n    at io.realm.HandlerController.realmChanged(HandlerController.java:385)\r\n    at io.realm.HandlerController.handleMessage(HandlerController.java:116)\r\n    at android.os.Handler.dispatchMessage(Handler.java:98)\r\n    at android.os.Looper.loop(Looper.java:148)\r\n    at android.app.ActivityThread.main(ActivityThread.java:5417)\r\n    at java.lang.reflect.Method.invoke(Native Method)\r\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)\r\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)\r\nCaused by: rx.exceptions.MissingBackpressureException\r\n    at rx.internal.util.RxRingBuffer.onNext(RxRingBuffer.java:352)\r\n    at rx.internal.operators.OperatorZip$Zip$InnerSubscriber.onNext(OperatorZip.java:331)\r\n    at io.realm.rx.RealmObservableFactory$5$1.onChange(RealmObservableFactory.java:143) \r\n    at io.realm.rx.RealmObservableFactory$5$1.onChange(RealmObservableFactory.java:139) \r\n    at io.realm.RealmResults.notifyChangeListeners(RealmResults.java:1010) \r\n    at io.realm.RealmResults.notifyChangeListeners(RealmResults.java:996) \r\n    at io.realm.HandlerController.notifyRealmResultsCallbacks(HandlerController.java:303) \r\n    at io.realm.HandlerController.notifySyncRealmResultsCallbacks(HandlerController.java:284) \r\n    at io.realm.HandlerController.notifyTypeBasedListeners(HandlerController.java:275) \r\n    at io.realm.HandlerController.notifyAllListeners(HandlerController.java:262) \r\n    at io.realm.HandlerController.realmChanged(HandlerController.java:385) \r\n    at io.realm.HandlerController.handleMessage(HandlerController.java:116) \r\n    at android.os.Handler.dispatchMessage(Handler.java:98) \r\n    at android.os.Looper.loop(Looper.java:148) \r\n    at android.app.ActivityThread.main(ActivityThread.java:5417) \r\n    at java.lang.reflect.Method.invoke(Native Method) \r\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726) \r\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)\r\n```\r\n\r\nIt looks like we might not support backpressure correctly.", "url": "https://github.com/realm/realm-java/issues/4137", "user": "cmelchior", "labels": ["Reproduction-Required", "T-Bug"], "created": "2017-02-02 07:27:17", "closed": "2017-10-24 12:50:43", "commits": {}, "ttf": 264.0002777777778, "commitsDetails": []}, {"title": "Realm receives NPE when updating async queries after Realm is closed", "body": "#### Goal\r\n\r\n> What do you want to achieve?\r\n\r\nWrite into Realm periodically and also run async queries.\r\n\r\n#### Expected Results\r\n\r\nNo exceptions in the log\r\n\r\n#### Actual Results\r\n\r\n\r\n      2-01 09:53:49.315 4201-4229/com.zhuinden.realmbreak E/REALM_JAVA: java.lang.NullPointerException\r\n                                                                       at io.realm.AndroidNotifier.completeAsyncResults(AndroidNotifier.java:120)\r\n                                                                       at io.realm.RealmQuery.closeSharedRealmAndSendEventToNotifier(RealmQuery.java:2233)\r\n                                                                       at io.realm.RealmQuery.access$000(RealmQuery.java:62)\r\n                                                                       at io.realm.RealmQuery$3.call(RealmQuery.java:1863)\r\n                                                                       at io.realm.RealmQuery$3.call(RealmQuery.java:1845)\r\n                                                                       at io.realm.internal.async.BgPriorityCallable.call(BgPriorityCallable.java:36)\r\n                                                                       at java.util.concurrent.FutureTask.run(FutureTask.java:234)\r\n                                                                       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)\r\n                                                                       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)\r\n                                                                       at java.lang.Thread.run(Thread.java:856)\r\n      02-01 09:53:53.735 4201-4229/com.zhuinden.realmbreak E/REALM_JAVA: java.lang.NullPointerException\r\n                                                                       at io.realm.AndroidNotifier.completeUpdateAsyncQueries(AndroidNotifier.java:145)\r\n                                                                       at io.realm.internal.async.QueryUpdateTask.run(QueryUpdateTask.java:112)\r\n                                                                       at io.realm.internal.async.BgPriorityRunnable.run(BgPriorityRunnable.java:34)\r\n                                                                       at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:390)\r\n                                                                       at java.util.concurrent.FutureTask.run(FutureTask.java:234)\r\n                                                                       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)\r\n                                                                       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)\r\n                                                                       at java.lang.Thread.run(Thread.java:856)\r\n\r\n#### Steps & Code to Reproduce\r\n\r\n> Describe your current debugging efforts.\r\n\r\n#### Code Sample\r\n\r\n`Word` table contains 440000 entries.\r\n\r\n```java\r\n\r\npublic class MainActivity\r\n        extends AppCompatActivity {\r\n    @BindView(R.id.recycler_view)\r\n    RecyclerView recyclerView;\r\n\r\n    Realm realm;\r\n\r\n    Subscription subscription;\r\n\r\n    @Override\r\n    @SuppressWarnings(\"NewApi\")\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        ButterKnife.bind(this);\r\n        realm = Realm.getDefaultInstance();\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false));\r\n        recyclerView.setAdapter(new RealmRecyclerViewAdapter<Word, ViewHolder>(this, realm.where(Word.class).findAllSortedAsync(WordFields.WORD), true) {\r\n            @Override\r\n            public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\r\n                return new ViewHolder(LayoutInflater.from(parent.getContext()).inflate(R.layout.item_row, parent, false));\r\n            }\r\n\r\n            @Override\r\n            public void onBindViewHolder(ViewHolder holder, int position) {\r\n                holder.bind(getData().get(position));\r\n            }\r\n        });\r\n        subscription = Observable.interval(50, TimeUnit.MILLISECONDS).subscribeOn(Schedulers.io()).subscribe(aLong -> {\r\n            try(Realm realm = Realm.getDefaultInstance()) {\r\n                realm.executeTransaction(_realm -> {\r\n                    String dogName = DogNames.values()[(((Long)(aLong)).intValue()) % DogNames.values().length].name();\r\n                    Log.i(\"WRITE\", \"Writing to Realm at [\" + aLong + \"]: [\" + dogName + \"]\");\r\n                    Word word = new Word();\r\n                    word.setWord(dogName);\r\n                    CustomApplication.wordToLetters(word, dogName);\r\n                    _realm.insert(word);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    public static class ViewHolder extends RecyclerView.ViewHolder {\r\n        @BindView(R.id.row_text)\r\n        TextView word;\r\n\r\n        public ViewHolder(View itemView) {\r\n            super(itemView);\r\n            ButterKnife.bind(this, itemView);\r\n        }\r\n\r\n        public void bind(Word word) {\r\n            this.word.setText(word.getWord());\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        if(subscription != null && !subscription.isUnsubscribed()) {\r\n            subscription.unsubscribe();\r\n            subscription = null;\r\n        }\r\n        if(realm != null && !realm.isClosed()) {\r\n            realm.close();\r\n            realm = null;\r\n        }\r\n        super.onDestroy();\r\n    }\r\n}\r\n``` \r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 2.3.0\r\n\r\nRealm sync feature enabled: no\r\n\r\nWhich Android version and device: 4.2.2\r\n", "url": "https://github.com/realm/realm-java/issues/4131", "user": "Zhuinden", "labels": ["T-Bug"], "created": "2017-02-01 10:30:09", "closed": "2017-02-28 15:29:23", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "RealmObservableFactory unsubscription subscriber order and addChangeListener should be inverted", "body": "#### Goal\r\n\r\n> What do you want to achieve?\r\n\r\nUse `take(1)`\r\n\r\n#### Expected Results\r\n\r\nUnsubscribe as needed.\r\n\r\n#### Actual Results\r\n\r\nNot sure, but according to Jake Wharton, I think the code in [RealmObservableFactory](https://github.com/realm/realm-java/blob/master/realm/realm-library/src/main/java/io/realm/rx/RealmObservableFactory.java#L81-L82) might not work as expected with `take(1)` and this change in RxBinding can be seen in https://github.com/JakeWharton/RxBinding/commit/3ccbd006152bfd282e75304836744971521b661c\r\n\r\n\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 2.3.0", "url": "https://github.com/realm/realm-java/issues/4095", "user": "Zhuinden", "labels": ["Reproduction-Required", "T-Bug"], "created": "2017-01-23 15:15:15", "closed": "2017-09-11 08:47:06", "commits": {}, "ttf": 230.00027777777777, "commitsDetails": []}, {"title": "Access token should be refreshed before the current one expires", "body": "I tested the 2.3.0 release with RealmTasks for Android and ROS 1.0.0 with the expiration time set to 60s.\r\n\r\nRight now, when the Android binding tries to send an UPLOAD message with and expired token, the server sends an error(`Sending: ERROR(error_code=202, message_size=20, try_again=0, session_ident=1)`) and closes the session.\r\n\r\nThe client then connects to the auth server and gets a new token.\r\n\r\n**This behaviour is incorrect, the client should request an access token before the current access token expires and send a REFRESH message to the server, so that the session does not get disconnected.**\r\n\r\nNot sure how much of this behaviour should be in object-store and how much in the binding.\r\n\r\ncc @austinzheng @mrackwitz ", "url": "https://github.com/realm/realm-java/issues/4094", "user": "radu-tutueanu", "labels": ["Blocked", "T-Bug"], "created": "2017-01-23 14:18:39", "closed": "2017-03-07 17:06:45", "commits": {}, "ttf": 43.000277777777775, "commitsDetails": []}, {"title": "AndroidTest for a Kotlin class does not compile", "body": "#### Goal\r\n\r\nI want to run an Android Test for a Kotlin class that uses Realm\r\n\r\n#### Actual Results\r\n\r\n```\r\nError:Execution failed for task ':data:compileDebugAndroidTestJavaWithJavac'.\r\n java.lang.NoClassDefFoundError:\r\norg/jetbrains/kotlin/annotation/AnnotationProcessorWrapper\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 2.3.0 (2.2.2 works)\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.2.3\r\n\r\nKotlin: 1.0.6", "url": "https://github.com/realm/realm-java/issues/4087", "user": "ziggy42", "labels": ["T-Bug"], "created": "2017-01-20 21:27:35", "closed": "2017-01-27 08:00:30", "commits": {"cefd8a8f68b50e1b9ef9fbc2d4a474c821f2bdca": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "43b22eb7040919650a3fe0b2119d066077f7661d": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "8055b1772f89998a87f3bb9e26ccdd0591615589": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "cefd8a8f68b50e1b9ef9fbc2d4a474c821f2bdca", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "43b22eb7040919650a3fe0b2119d066077f7661d", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "8055b1772f89998a87f3bb9e26ccdd0591615589", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["4eec891825e86ca2ce7731d71125e25b7827c199"], "nameRev": "8055b1772f89998a87f3bb9e26ccdd0591615589 tags/v2.3.1~11", "commitMessage": "remove kapt dependency to io.realm:realm-annotations (#4110)\n\n* remove kapt dependency to io.realm:realm-annotations since io.realm:realm-annotations-processor has a transitive dependency to it\r\n\r\nThis also fixes #4087.\r\n\r\n* add Changelog entry\r\n", "commitDateTime": "2017-01-27 17:00:21", "authoredDateTime": "2017-01-27 17:00:21", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "gradle-plugin/src/main/groovy/io/realm/gradle/Realm.groovy", "insertions": 0, "deletions": 6, "lines": 6}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "RealmResults.sort() on asynchronous query removes all conditions.", "body": "#### Goal\r\n\r\nSort `RealmResults`.\r\n\r\n#### Expected Results\r\n\r\nEither sorted results or an exception. I know that I should have done `findAllSortedAsync`, however, after changing synchronous queries to asynchronous ones, this behaviour snuck up on me. I think there should be some kind of warning, right?\r\n\r\n#### Actual Results\r\n\r\nAll objects of the given `RealmModel`, ignoring the conditions on the query behind the `RealmResult`.\r\n\r\n#### Code Sample\r\n\r\n```java\r\n// Query that returns a few objects\r\nresults = query.findAllAsync();\r\n\r\n// 0\r\nTimber.w(\"Query returning %d results before sort.\", results.size());\r\n\r\nresults = results.sort(new String[]{\"fieldA\", \"fieldB\", \"fieldC\"},\r\nnew Sort[]{Sort.DESCENDING, Sort.ASCENDING, Sort.ASCENDING});\r\n\r\n// All objects\r\nTimber.w(\"Query returning %d results after sort.\", results.size());\r\n\r\n```\r\n\r\n#### Version of Realm and tooling\r\n2.3.0\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.2.3\r\n\r\nWhich Android version and device: Emulator API 25.", "url": "https://github.com/realm/realm-java/issues/4081", "user": "benj56", "labels": ["T-Bug"], "created": "2017-01-20 10:17:53", "closed": "2017-02-20 13:46:43", "commits": {}, "ttf": 31.00027777777778, "commitsDetails": []}, {"title": "Sync- User should be notified about client reset", "body": "currently error code related to the sync client reset are managed directly in JNI\r\nhttps://github.com/realm/realm-java/blob/master/realm/realm-library/src/main/cpp/objectserver_shared.hpp#L87-L110\r\n\r\nthe current implementation will schedule a Realm backup/reset when the app starts again, we need also to return an error code so the user have a chance to stop the app.", "url": "https://github.com/realm/realm-java/issues/4080", "user": "nhachicha", "labels": ["T-Bug"], "created": "2017-01-19 21:43:18", "closed": "2017-03-15 14:37:05", "commits": {}, "ttf": 54.000277777777775, "commitsDetails": []}, {"title": "SyncSession needs to handle SESSION_DISABLED", "body": "Sync introduced a new error code (213 - SESSION_DISABLED). We need to handle it in Java until #3742 is completed.", "url": "https://github.com/realm/realm-java/issues/4062", "user": "cmelchior", "labels": ["T-Bug"], "created": "2017-01-18 08:09:11", "closed": "2017-01-18 22:31:44", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Default ports not correct", "body": "When setting a Realm URL it looks like it defaults to port 80 instead of 9080. This will cause it to throw a connection error if trying to connect to a default configured server.\r\n\r\n```\r\n// Will default to port 80, should default to 9080\r\nSyncConfiguration config = new SyncConfiguration.Builder(user, \"realm://ros.realm.io/~/default\");\r\n```\r\n\r\nAlso verify that `realms` default to the correct port (9443)\r\n\r\n", "url": "https://github.com/realm/realm-java/issues/4047", "user": "cmelchior", "labels": ["T-Bug"], "created": "2017-01-15 20:47:45", "closed": "2017-01-16 14:05:56", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "SyncClient Unable to renew Access Token", "body": "REALM_SYNC_VERSION=1.0.0-BETA-7.0\r\n\r\nROS=v1.0.0-BETA-5.1\r\n\r\nUsing the RealmTasks you can reproduce the following error.\r\n\r\nAfter you create a new user & login, wait a couple of minutes then add a new task (commit)\r\nthe SyncSession will stop syncing the changes because ROS send a fatal client error.\r\n\r\n- The server first send an `Access token expired (202)` so the client can renew the access token \r\n\r\n- The client receive this error but ignore it because of this bug #4038 \r\n\r\n- Even if the Sync Client is not ignoring the error, it tries to bind again because `session.isAuthenticated(session.configuration)` can return `true` if the client consider the token to be still valid (based on timestamps for example) this is not true for the server who consider the token to be expired (hence the first `202`)\r\n\r\n- If the client continue binding with the expired token, the server will return a fatal error (`203, Bad user authentication (BIND, REFRESH)`\r\n", "url": "https://github.com/realm/realm-java/issues/4039", "user": "nhachicha", "labels": ["T-Bug"], "created": "2017-01-13 08:05:04", "closed": "2017-01-14 16:04:28", "commits": {"4e0b1ba9458f48f14240e4fa2850032863f7eedc": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}, "ee9e40f2384a3d850b13adf986bfa240315cbdeb": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}, "1fcb027babdfa883b0f7cb7907b867a9579a09e6": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "4e0b1ba9458f48f14240e4fa2850032863f7eedc", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ee9e40f2384a3d850b13adf986bfa240315cbdeb", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1fcb027babdfa883b0f7cb7907b867a9579a09e6", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["71855ff62aa2ccfe9117b78f6bdc80400a30fff1"], "nameRev": "1fcb027babdfa883b0f7cb7907b867a9579a09e6 tags/v2.3.0~12^2~7", "commitMessage": "Nh/fixes token renew (#4040)\n\n* fixes #4039 and fixes #4038", "commitDateTime": "2017-01-14 16:04:17", "authoredDateTime": "2017-01-14 16:04:17", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/main/cpp/objectserver_shared.hpp", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/internal/objectserver/BoundState.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/internal/objectserver/ObjectServerSession.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/internal/objectserver/ObjectServerUser.java", "insertions": 8, "deletions": 4, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BoundState.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.objectserver.BoundState.onError(io.realm.ObjectServerError)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ObjectServerSession.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.objectserver.ObjectServerSession.removeAccessToken()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ObjectServerUser.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.objectserver.ObjectServerUser.setRefreshToken(io.realm.internal.objectserver.Token)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.objectserver.ObjectServerUser.isAuthenticated(io.realm.SyncConfiguration)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.objectserver.ObjectServerUser.getAccessToken(java.net.URI)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.objectserver.ObjectServerUser.removeAccessToken(java.net.URI)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "could not create WeakRealmNotifier ALooper message pipe: Too many open files", "body": "From https://github.com/realm/realm-object-store/issues/319 (see attached files there)\r\n\r\nhello,\r\nI try to evaluate different databases inside one android app- Therefore I created different scenarios. The scenarios are different in the size and count of objects I will store.\r\n\r\nAll calls to the realm database came from a class I called \"RealmDataManager\". Inside this I implement differend methods which I need for my evaluation.\r\n\r\nI use a IntentService which gets started from my Mainactivity. Inside my IntentService I defined the different scenarios and what to do for each.\r\n\r\nAt the Moment I have one problem. After my 4th Szenario (from 90 szenario's) I got the following Output in Logcat,\r\n\r\n01-06 13:51:54.957 14995-15287/de.gerding.dbcompare E/REALM: could not create WeakRealmNotifier ALooper message pipe: Too many open files\r\n01-06 13:51:54.959 14995-15287/de.gerding.dbcompare E/REALM: could not create WeakRealmNotifier ALooper message pipe: Too many open files\r\n01-06 13:51:54.963 14995-15012/de.gerding.dbcompare E/Parcel: dup() failed in Parcel::read, i is 0, fds[i] is -1, fd_count is 1, error: Too many open files\r\n01-06 13:51:54.966 14995-15287/de.gerding.dbcompare E/REALM: could not create WeakRealmNotifier ALooper message pipe: Too many open files\r\n01-06 13:51:54.967 14995-15287/de.gerding.dbcompare E/REALM: could not create WeakRealmNotifier ALooper message pipe: Too many open files\r\n01-06 13:51:54.972 14995-15287/de.gerding.dbcompare E/REALM: could not create WeakRealmNotifier ALooper message pipe: Too many open files\r\n01-06 13:51:54.974 14995-15287/de.gerding.dbcompare E/REALM: could not create WeakRealmNotifier ALooper message pipe: Too many open files\r\n01-06 13:51:54.980 14995-15012/de.gerding.dbcompare E/Parcel: dup() failed in Parcel::read, i is 0, fds[i] is -1, fd_count is 1, error: Too many open files\r\n01-06 13:51:54.982 14995-15012/de.gerding.dbcompare E/Surface: queueBuffer: error queuing buffer to SurfaceTexture, -22\r\n01-06 13:51:54.982 14995-15012/de.gerding.dbcompare I/Adreno: QueueBuffer: queueBuffer failed\r\n01-06 13:51:54.982 14995-15012/de.gerding.dbcompare W/OpenGLRenderer: swapBuffers encountered EGL_BAD_SURFACE on 0x7f82d04940, halting rendering...\r\n01-06 13:51:54.984 14995-15287/de.gerding.dbcompare E/REALM: could not create WeakRealmNotifier ALooper message pipe: Too many open files\r\n01-06 13:51:54.985 14995-15287/de.gerding.dbcompare E/REALM: could not create WeakRealmNotifier ALooper message pipe: Too many open files\r\n01-06 13:51:55.014 14995-15287/de.gerding.dbcompare E/REALM: could not create WeakRealmNotifier ALooper message pipe: Too many open files\r\n01-06 13:51:55.016 14995-15287/de.gerding.dbcompare E/REALM: could not create WeakRealmNotifier ALooper message pipe: Too many open files\r\n...\r\n\r\nCan you help me to figure out what I should change to solve this?\r\n\r\nIt's not a big problem, it looks like it works although this logcat output gets spammed. But I am not sure if it works for a long time. In my mainactivity I show an ProgressDialog when I start my \"MessService\", and this ProgressDialog in style circle doesn't move anymore when I got the logcat spam.\r\n\r\nI will attach you some of my classes.\r\nRealmDataManager - where all calls to the database are implemented.\r\n\r\nMessService - where all scenarios are defined and you can see how I use the RealmDataManager\r\nI take some comments inside my MessService so that not alle scenarios are used at the moment because some scenarios needs long time and this is not fine for debugging.\r\n\r\nRealmCANDaten - one of my two objecttypes stored in the database\r\n\r\nRealmFahrt - the other objecttype stored in the database\r\n\r\nIf you need more information for reproducing please let me know that. I hope we can fix this issue together.", "url": "https://github.com/realm/realm-java/issues/4002", "user": "kneth", "labels": ["T-Bug"], "created": "2017-01-07 09:36:31", "closed": "2017-01-13 06:45:16", "commits": {"f61175c2de644a0c1a4dc40e4b142c4d51de1673": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "5c8023e364107505cf3a9612c9100099c35efae9": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "9da0754b7a99221202854570438ea16c6f237b67": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "f61175c2de644a0c1a4dc40e4b142c4d51de1673", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5c8023e364107505cf3a9612c9100099c35efae9", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9da0754b7a99221202854570438ea16c6f237b67", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["63a0ad273765d5610de10757c97ef0d4794d078e"], "nameRev": "9da0754b7a99221202854570438ea16c6f237b67 tags/v2.3.0~12^2~5", "commitMessage": "Fix too many open files crash\n\nUpdate object store to 163c1e8fb0 to fix #4002\n", "commitDateTime": "2017-01-16 11:50:42", "authoredDateTime": "2017-01-13 14:47:49", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/main/cpp/object-store", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9da0754b7a99221202854570438ea16c6f237b67"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1.0, "deletions": 1.0, "lines": 2.0, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-library/src/main/cpp/object-store"]}, {"title": "Memory leak (Row) in Java_io_realm_internal_Table_nativeSetPrimaryKey", "body": "I just stumbled across this while investigating a Core crash \r\nseems we're allocating a Row on the heap \r\n\r\nhttps://github.com/realm/realm-java/blob/d547fde64271229cb6bb98df30deda05faeba9ce/realm/realm-library/src/main/cpp/io_realm_internal_Table.cpp#L1508 ", "url": "https://github.com/realm/realm-java/issues/3993", "user": "nhachicha", "labels": ["T-Bug", "T-Internal"], "created": "2017-01-06 11:33:27", "closed": "2017-01-09 22:13:18", "commits": {"f1bcb141244f32008b9c226c255a5a531fb66217": {"commitGHEventType": "referenced", "commitUser": "kneth"}, "db07dd398cebed8b35ab0e01f22f9aca51f5d016": {"commitGHEventType": "referenced", "commitUser": "kneth"}, "682c152f845db5bd1c3f942fed01ff5c99ad2401": {"commitGHEventType": "referenced", "commitUser": "kneth"}, "4f1ac5d4797faa95351e417d62739b1b7ab4ff6e": {"commitGHEventType": "referenced", "commitUser": "kneth"}, "fd9ced1252b435cd50e13b212fdf6b6c0073de7d": {"commitGHEventType": "referenced", "commitUser": "kneth"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "f1bcb141244f32008b9c226c255a5a531fb66217", "commitGHEventType": "referenced", "commitUser": "kneth", "commitParents": ["61aabad578b0ffdf84e7be2ac66168b5ffd88916"], "nameRev": "f1bcb141244f32008b9c226c255a5a531fb66217 tags/v2.3.0~12^2~16", "commitMessage": "Fix memory leak (#3993).\n", "commitDateTime": "2017-01-06 14:11:34", "authoredDateTime": "2017-01-06 14:11:34", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_Table.cpp", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "db07dd398cebed8b35ab0e01f22f9aca51f5d016", "commitGHEventType": "referenced", "commitUser": "kneth", "commitParents": ["f1bcb141244f32008b9c226c255a5a531fb66217"], "nameRev": "db07dd398cebed8b35ab0e01f22f9aca51f5d016 tags/v2.3.0~12^2~15", "commitMessage": "Revert \"Fix memory leak (#3993).\"\n\nThis reverts commit f1bcb141244f32008b9c226c255a5a531fb66217.\n", "commitDateTime": "2017-01-06 14:14:02", "authoredDateTime": "2017-01-06 14:14:02", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 0, "deletions": 6, "lines": 6}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_Table.cpp", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "682c152f845db5bd1c3f942fed01ff5c99ad2401", "commitGHEventType": "referenced", "commitUser": "kneth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "4f1ac5d4797faa95351e417d62739b1b7ab4ff6e", "commitGHEventType": "referenced", "commitUser": "kneth", "commitParents": ["db07dd398cebed8b35ab0e01f22f9aca51f5d016"], "nameRev": "4f1ac5d4797faa95351e417d62739b1b7ab4ff6e tags/v2.3.0~12^2~14", "commitMessage": "Fix memory leak (#3993) (#3995)\n\nFix memory leak (#3993)", "commitDateTime": "2017-01-06 17:45:09", "authoredDateTime": "2017-01-06 17:45:09", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_Table.cpp", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "fd9ced1252b435cd50e13b212fdf6b6c0073de7d", "commitGHEventType": "referenced", "commitUser": "kneth", "commitParents": ["302c1659bee675c5c557b288c8ee450796f7f1ad"], "nameRev": "fd9ced1252b435cd50e13b212fdf6b6c0073de7d tags/v2.3.0~32", "commitMessage": "Fix memory leak (#3993) (#3995) (#3996)\n\nFix memory leak (#3993)", "commitDateTime": "2017-01-06 18:43:16", "authoredDateTime": "2017-01-06 18:43:16", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_Table.cpp", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f1bcb141244f32008b9c226c255a5a531fb66217", "db07dd398cebed8b35ab0e01f22f9aca51f5d016"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 3.0, "deletions": 3.0, "lines": 6.0, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-library/src/main/cpp/io_realm_internal_Table.cpp"]}, {"title": "Realm 1.2.0: removing @PrimaryKey constraint does not trigger RealmMigrationNeededException", "body": "I like the whole issue template thing, but this one really doesn't need one.\r\n\r\n`deleteIfMigrationNeeded()` did not delete Realm after removing `@PrimaryKey` annotation.\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 1.2.0\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: .\r\n\r\nWhich Android version and device: .", "url": "https://github.com/realm/realm-java/issues/3966", "user": "Zhuinden", "labels": ["T-Bug"], "created": "2016-12-30 00:52:05", "closed": "2017-01-05 12:01:00", "commits": {"8588c7b947d35036388490ec065466c786c7c354": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}, "f05ab89dc0a4a8f59615e6e7efc2e40d77176b79": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "8588c7b947d35036388490ec065466c786c7c354", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f05ab89dc0a4a8f59615e6e7efc2e40d77176b79", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["5d1d1f1fe39ebcb5c03291da803a55ddfec09bd4"], "nameRev": "f05ab89dc0a4a8f59615e6e7efc2e40d77176b79 tags/v2.2.2~2", "commitMessage": "Nh/fix 3966 (#3979)\n\nRealm migration is triggered, when the primary key definition is altered (#3966)\r\n", "commitDateTime": "2017-01-05 10:07:05", "authoredDateTime": "2017-01-05 02:07:05", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyClassGenerator.java", "insertions": 19, "deletions": 7, "lines": 26}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/AllTypesRealmProxy.java", "insertions": 8, "deletions": 3, "lines": 11}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/BooleansRealmProxy.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/NullTypesRealmProxy.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/SimpleRealmProxy.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmMigrationTests.java", "insertions": 82, "deletions": 4, "lines": 86}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/migration/MigrationPrimaryKey.java", "insertions": 6, "deletions": 6, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmProxyClassGenerator.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitValidateTableMethod(com.squareup.javawriter.JavaWriter)", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "AllTypesRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.AllTypesRealmProxy.validateTable(io.realm.internal.SharedRealm,boolean)", "TOT": 9, "UPD": 1, "INS": 3, "MOV": 4, "DEL": 1}]}, {"spoonFilePath": "BooleansRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.BooleansRealmProxy.validateTable(io.realm.internal.SharedRealm,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NullTypesRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.NullTypesRealmProxy.validateTable(io.realm.internal.SharedRealm,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SimpleRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.SimpleRealmProxy.validateTable(io.realm.internal.SharedRealm,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmMigrationTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmMigrationTests.notSettingPrimaryKeyThrows()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.buildInitialMigrationSchema(java.lang.String,boolean).4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.renameClassTransferPrimaryKey().5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.rename_noSimilarPrimaryKeyWithOldSchema().6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.setClassName_transferPrimaryKey().7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.setClassName_noSimilarPrimaryKeyWithOldSchema().8", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.setClassName_throwOnLongClassName().9", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.setClassName_throwOnLongClassName().10", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.removeFieldsBeforePrimaryKey().11", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.removeFieldsAfterPrimaryKey().12", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.renamePrimaryKeyFieldInMigration().13", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.modifyPrimaryKeyFieldTypeToIntInMigration().15", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.modifyPrimaryKeyFieldTypeToIntegerInMigration().16", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.settingPrimaryKeyWithObjectSchema().17", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.setAnnotations().19", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.openPreNullRealmRequiredMissing().20", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.migratePreNull().21", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.notSettingNullableToPrimaryKeyThrows().25", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.createObjectsWithOldPrimaryKey(java.lang.String,boolean).14", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.addingSearchIndexTwice().18", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.notSettingRequiredForNotNullableThrows().22", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.settingRequiredForNullableThrows().23", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.settingNullableToPrimaryKey().24", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.realmOpenBeforeMigrationThrows()", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.migrating_nullableField_toward_notNullable_PrimaryKeyThrows().26", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.notSettingNullableToPrimaryKeyThrows()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.RealmMigrationTests.removingPrimaryKeyThrows()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.changingPrimaryKeyThrows()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.migrateRealm_configMigration_nonExistingRealmFile()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.migrating_nullableField_toward_notNullable_PrimaryKeyThrows()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.migrateRealm_config_nonExistingRealmFile()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "MigrationPrimaryKey.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "ThrowingException 5 - Unrecoverable error", "body": "#### Goal\r\n\r\n> I've been performing further tests on Realms observable Realms models since I have experienced issues previously [(see issue)](https://github.com/realm/realm-java/issues/3821) in order measure memory usage and performance.\r\n\r\n#### Expected Results\r\n\r\n> Did not expect the error to occurs so quickly.\r\n\r\n#### Actual Results\r\n\r\n>  Extending a test app created @beeender , I've managed to experience an exception *ThrowingException 5 - Unrecoverable error* when the `RealmResult` exceeds 65535, which looks suspicious:\r\n\r\n```\r\n12-29 20:35:11.926 14227-14277/tt.test.realmrxtest E/REALM_JNI: jni: ThrowingException 5, Try again in /tmp/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 123, .\r\n12-29 20:35:11.926 14227-14277/tt.test.realmrxtest E/REALM_JNI: Exception has been throw: Unrecoverable error. Try again in /tmp/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 123\r\n```\r\n\r\n#### Steps & Code to Reproduce\r\n\r\n> Describe your current debugging efforts.\r\n\r\n#### Code Sample\r\n\r\nI've issued a [PR](https://github.com/beeender/RealmRxTest/pull/1) on the project created by @beeender \r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): `2.3.0-SNAPSHOT`\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.3 Beta 1\r\n\r\nWhich Android version and device: Nexus 5 (5.1.1)\r\n", "url": "https://github.com/realm/realm-java/issues/3964", "user": "mitchwongho", "labels": ["T-Bug"], "created": "2016-12-29 20:32:37", "closed": "2017-01-04 01:48:11", "commits": {"70dd680af5c7d9100df100a78c328f6ab8022f7a": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "b97b0888a4d9303dc8e81ce857909ad0ed0490a4": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "70dd680af5c7d9100df100a78c328f6ab8022f7a", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b97b0888a4d9303dc8e81ce857909ad0ed0490a4", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["c385ecda12935f44378f2b33adb52702066c30cd"], "nameRev": "b97b0888a4d9303dc8e81ce857909ad0ed0490a4 tags/v2.2.2~5", "commitMessage": "Update object store\n\nto 814beb5a1e9\nFix #3945\nFix #3964\n", "commitDateTime": "2017-01-04 09:47:58", "authoredDateTime": "2017-01-03 23:54:55", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "realm/realm-library/src/main/cpp/object-store", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "findAllAsync() sometimes fails to return any results when using it in sync mode", "body": "Sometimes `findAllAsync()` does not call the change listener. \r\n\r\nI created a sample project that demonstrates the issue. Actually, I just copied the _RealmTasks_ example, removed the Facebook SDK and then replaced `findAll()` with `findAllAsync()`. You can find it here: https://github.com/joluet/RealmTasksDemo\r\n\r\nThis project lets you reproduce the issue consistently. To reproduce it I follow these steps:\r\n1. Make sure Realm Object Server is running and connected\r\n2. Register a new user in the app\r\n3. Navigate back to get to the TaskListActivity \r\n5. Observe that there is **no task list**\r\n6. Rotating the phone or restarting the app will bring back the list called _My Task_\r\n\r\nAlso, deleting, adding, or editing list items can make task lists disappear.", "url": "https://github.com/realm/realm-java/issues/3938", "user": "joluet", "labels": ["T-Bug"], "created": "2016-12-22 05:02:18", "closed": "2017-06-23 07:25:44", "commits": {}, "ttf": 183.00027777777777, "commitsDetails": []}, {"title": "Observables on RealmObject containing a RealmList behaving unexpectedly", "body": "#### Goal\r\n\r\n> RealmObjectA contains an id, value, and RealmList<RealmObjectB>. RealmObjectB contains just an id, and value.\r\n> Observable on RealmObjectA should only call onNext for changes within RealmObjectA table.\r\n\r\n#### Expected Results\r\n\r\n> Observable on RealmObjectA should only call onNext for changes within RealmObjectA table.\r\n\r\n#### Actual Results\r\n\r\n>  A change in RealmObjectB causes RealmObjectA Observable onNext to get called.\r\n\r\n#### Steps & Code to Reproduce\r\n\r\n> See the code below. When committing a transaction to RealmObject2, RealmObject1 observable is called.\r\n\r\n#### Code Sample\r\n\r\n```java\r\npublic class RealmObject1 extends RealmObject {\r\n    @PrimaryKey\r\n    Integer id;\r\n    String value;\r\n\r\n    RealmList<RealmObject2> relatedList1;\r\n}\r\n\r\npublic class RealmObject2 extends RealmObject {\r\n    @PrimaryKey\r\n    Integer id;\r\n    String value;\r\n}\r\n\r\nRealm.init(getApplicationContext());\r\n        final Realm realm = Realm.getDefaultInstance();\r\n        RealmResults<RealmObject1> rr = realm.where(RealmObject1.class).findAll();\r\n\r\n        rr.asObservable().subscribe(new Action1<RealmResults<RealmObject1>>() {\r\n            @Override\r\n            public void call(RealmResults<RealmObject1> realmObject1) {\r\n                Log.d(\"MainActivity\", \"Observable Called\");\r\n                Log.d(\"MainActivity\", Integer.toString(realmObject1.size()));\r\n            }\r\n        });\r\n\r\nRunnable runnable = new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                Log.d(\"MainActivity\", \"Begin Transaction\");\r\n                realm.beginTransaction();\r\n                RealmObject2 ro2 = new RealmObject2();\r\n                ro2.id = 1;\r\n                ro2.value = \"some string\";\r\n                realm.copyToRealmOrUpdate(ro2);\r\n                realm.commitTransaction();\r\n                Log.d(\"MainActivity\", \"Commit Transaction\");\r\n            }\r\n        };\r\n\r\n        Handler handler = new Handler();\r\n        handler.postDelayed(runnable, 5000);\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 2.2.1\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.2.3\r\n\r\nWhich Android version and device: Nexus 5x Emulator (Android 6.0)", "url": "https://github.com/realm/realm-java/issues/3894", "user": "shaunpanjabi", "labels": ["T-Bug"], "created": "2016-12-11 22:04:03", "closed": "2017-04-05 03:55:23", "commits": {}, "ttf": 114.00027777777778, "commitsDetails": []}, {"title": "Realm 1.2.0 finalizer crash", "body": "#### Goal\r\n\r\nDon't crash the jvm finalizer thread after corrupted realm open() call. \r\n\r\n#### Actual Results\r\n\r\nCrash.\r\n\r\n#### Steps & Code to Reproduce\r\n\r\n1) Create any corrupted realm file\r\n2) Use ShareGroup line 71 constructor\r\n\r\n```java\r\n  public SharedGroup(String canonicalPath, boolean enableImplicitTransactions, Durability durability, byte[] key) {\r\n        if (enableImplicitTransactions) {\r\n            nativeReplicationPtr = nativeCreateReplication(canonicalPath, key);\r\n            nativePtr = openSharedGroupOrFail(durability, key);\r\n            implicitTransactionsEnabled = true;\r\n        } else {\r\n            nativePtr = nativeCreate(canonicalPath, Durability.FULL.value, CREATE_FILE_YES, DISABLE_REPLICATION, key);\r\n        }\r\n        context = new Context();\r\n        path = canonicalPath;\r\n        checkNativePtrNotZero();\r\n    }\r\n```\r\n\r\nUnlike the single param constructor, this one sets context AFTER native call which can fail with exception due to realm corruption. However, even after exception, the SharedGroup object is already created within jvm, now with null context and crashes finalizer since it is used a monitor/synchronized lock. \r\n\r\nThis only applies to the 1.2.0 branch but since 2.X is not really stable yet (compatibility wise), I think it would be prudent to backport the fix it for the 1.2 branch users out there since the impact is quite severe as there is absolutely no way to recover. Normally, if a realm db is corrupted, the app can recover by copying in a backup, or delete it out right. With this bug, it is impossible to recover. \r\n\r\nFix is moving the context creation to first line like the first constructor in the class or add null protect to finalizer() block.", "url": "https://github.com/realm/realm-java/issues/3874", "user": "diegomontoya", "labels": ["T-Bug"], "created": "2016-12-05 10:47:40", "closed": "2017-03-20 06:17:55", "commits": {}, "ttf": 104.00027777777778, "commitsDetails": []}, {"title": "RealmThreadPoolExecutor: desired CORE_POOL_SIZE != calculated", "body": "```java\r\nRuntime.getRuntime().availableProcessors()\r\n```\r\n\r\nReturns the number of online/active cores in Android. If the class is loaded while the phone was in heavy sleep, it may report value of 1 even when it has 8 cores which translates to a much lower CORE_POOL_SIZE for the duration of the app than desired. \r\n\r\nReferenced from http://stackoverflow.com/questions/10133570/availableprocessors-returns-1-for-dualcore-phones.", "url": "https://github.com/realm/realm-java/issues/3810", "user": "diegomontoya", "labels": ["T-Bug"], "created": "2016-11-17 07:58:27", "closed": "2017-01-09 20:55:36", "commits": {"480de96253c7df1f42607a8b55fe6943915c9c33": {"commitGHEventType": "referenced", "commitUser": "bmeike"}, "0cf0ea30c8dad2863dc36f49b76e2a32c32bd312": {"commitGHEventType": "referenced", "commitUser": "bmeike"}}, "ttf": 53.000277777777775, "commitsDetails": [{"commitHash": "480de96253c7df1f42607a8b55fe6943915c9c33", "commitGHEventType": "referenced", "commitUser": "bmeike", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0cf0ea30c8dad2863dc36f49b76e2a32c32bd312", "commitGHEventType": "referenced", "commitUser": "bmeike", "commitParents": ["fd9ced1252b435cd50e13b212fdf6b6c0073de7d"], "nameRev": "0cf0ea30c8dad2863dc36f49b76e2a32c32bd312 tags/v2.3.0~31", "commitMessage": "Count 'cpuX' files in /sys/devices/system/cpu as a more accurate way (#3997)\n\n* Count 'cpuX' files in /sys/devices/system/cpu as a more accurate way\r\n  of counting processors and setting the max threads for the Executor. (#3810)\r\n\r\n* Suppress Findbugs warning\r\n\r\n* Better comments; Default to Runtime.getRuntime().availableProcessors()\r\n", "commitDateTime": "2017-01-09 10:50:40", "authoredDateTime": "2017-01-09 10:50:40", "commitGitStats": [{"filePath": "realm/realm-library/build.gradle", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/async/RealmThreadPoolExecutor.java", "insertions": 44, "deletions": 4, "lines": 48}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmThreadPoolExecutor.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.async.RealmThreadPoolExecutor", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 5, "DEL": 1}, {"spoonMethodName": "io.realm.internal.async.RealmThreadPoolExecutor.calculateCorePoolSize()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.async.RealmThreadPoolExecutor.countFilesInDir(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "SyncConfiguration.toString()", "body": "`SyncConfiguration.toString()` currently outputs an empty String. It should output debug information equal to `RealmConfiguration`.", "url": "https://github.com/realm/realm-java/issues/3787", "user": "cmelchior", "labels": ["T-Bug"], "created": "2016-11-14 11:26:06", "closed": "2017-01-03 15:05:57", "commits": {}, "ttf": 50.000277777777775, "commitsDetails": []}, {"title": "Fatal Exception: java.lang.NoSuchMethodError", "body": "#### Expected Results\r\n\r\n> Bug fix\r\n\r\n#### Actual Results\r\n\r\n> Fatal Exception: java.lang.NoSuchMethodError: no static method with name='trace' signature='(Ljava/lang/String;[Ljava/lang/Object;)V' in class Lio/realm/log/RealmLog;\r\n       at java.lang.Runtime.nativeLoad(Runtime.java)\r\n       at java.lang.Runtime.doLoad(Runtime.java:418)\r\n       at java.lang.Runtime.load(Runtime.java:328)\r\n       at java.lang.System.load(System.java:511)\r\n       at com.getkeepsafe.relinker.SystemLibraryLoader.loadPath(SystemLibraryLoader.java:29)\r\n       at com.getkeepsafe.relinker.ReLinkerInstance.loadLibraryInternal(ReLinkerInstance.java:198)\r\n       at com.getkeepsafe.relinker.ReLinkerInstance.loadLibrary(ReLinkerInstance.java:136)\r\n       at com.getkeepsafe.relinker.ReLinker.loadLibrary(ReLinker.java:70)\r\n       at com.getkeepsafe.relinker.ReLinker.loadLibrary(ReLinker.java:51)\r\n       at io.realm.internal.RealmCore.loadLibrary(RealmCore.java:59)\r\n       at io.realm.Realm.init(Realm.java:189)\r\n       at com.xyz.controller.DatabaseHelper.setupDefaultConfig(DatabaseHelper.java:45)\r\n       at com.xyz.MainApplication.onCreate(MainApplication.java:64)\r\n       at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1007)\r\n       at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4499)\r\n       at android.app.ActivityThread.access$1300(ActivityThread.java:144)\r\n       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1355)\r\n       at android.os.Handler.dispatchMessage(Handler.java:99)\r\n       at android.os.Looper.loop(Looper.java:150)\r\n       at android.app.ActivityThread.main(ActivityThread.java:5162)\r\n       at java.lang.reflect.Method.invokeNative(Method.java)\r\n       at java.lang.reflect.Method.invoke(Method.java:525)\r\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:744)\r\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:560)\r\n       at dalvik.system.NativeStart.main(NativeStart.java)\r\n\r\n#### Steps & Code to Reproduce\r\n\r\n> I can't reproduce this bug. But Crashlytics reported many crashes. \r\n\r\n#### Code Sample\r\n\r\n```java\r\n\r\nRealm.init(context);\r\nRealmConfiguration configuration = new RealmConfiguration.Builder()\r\n   .encryptionKey(KEY)\r\n   .schemaVersion(7)\r\n   .migration(new Migration())\r\n   .build();\r\nRealm.setDefaultConfiguration(configuration);\r\n\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 2.1.1\r\n\r\nRealm sync feature enabled: no\r\nAndroid Studio version: 2.2.2\r\n", "url": "https://github.com/realm/realm-java/issues/3775", "user": "thuat26", "labels": ["T-Bug"], "created": "2016-11-10 14:07:13", "closed": "2016-11-14 09:55:14", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Disable the default RealmModule generation if no realm model/module", "body": "#### Goal\r\n\r\nSome developpers might want to create a library that will use Realm, but won't declare any model or module in it. The problem is that if we don't declare any of them, the compilation will failed because the generated Mediator will contains no classes and throw a `getMissingProxyClassException(clazz);`\r\nThe same issue can happens (I think) if we have a Library that declare the model in Realm + a LibModule, and we use only the LibModule in the application, without declaring any more models.\r\n\r\n#### Expected Results\r\n\r\nA flag in build.gradle or a check that disable the generation of realm class or module for project that use Realm without declaring any of both.", "url": "https://github.com/realm/realm-java/issues/3746", "user": "NitroG42", "labels": ["T-Bug"], "created": "2016-11-04 11:00:49", "closed": "2016-11-08 10:20:53", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "NullPointerException: Null reference used for synchronization. SharedRealm.finalize()", "body": "#### Actual Results\r\n\r\n> E/System: Uncaught exception thrown by finalizer\r\n> E/System: java.lang.NullPointerException: Null reference used for synchronization (monitor-enter)\r\n> \tat io.realm.internal.SharedRealm.finalize(SharedRealm.java:318)\r\n> \tat java.lang.Daemons$FinalizerDaemon.doFinalize(Daemons.java:217)\r\n> \tat java.lang.Daemons$FinalizerDaemon.run(Daemons.java:200)\r\n> \tat java.lang.Thread.run(Thread.java:818)\r\n\r\n#### Steps & Code to Reproduce\r\n\r\n>Was reproduced by client. Appeared multiple times in logcat.\r\n>\"Once in a while a popup error message is shown telling that the app has crashed.\"\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 2.0.2\r\n\r\nRealm sync feature enabled: no\r\n\r\nWhich Android version and device: Samsung Galaxy A5 (Android 6.0.1)\r\n", "url": "https://github.com/realm/realm-java/issues/3730", "user": "YaroslavYrm", "labels": ["T-Bug"], "created": "2016-11-01 16:05:52", "closed": "2017-01-25 04:53:59", "commits": {"569757b76275b53ce7b63e540e4ca320be0f66a6": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "4eec891825e86ca2ce7731d71125e25b7827c199": {"commitGHEventType": "closed", "commitUser": "beeender"}}, "ttf": 84.00027777777778, "commitsDetails": [{"commitHash": "569757b76275b53ce7b63e540e4ca320be0f66a6", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "4eec891825e86ca2ce7731d71125e25b7827c199", "commitGHEventType": "closed", "commitUser": "beeender", "commitParents": ["01bd5940ad22aa9d65b1eeb5a59235f7752d02a4"], "nameRev": "4eec891825e86ca2ce7731d71125e25b7827c199 tags/v2.3.1~12", "commitMessage": "Free the SharedRealm in phantom daemon (#4096)\n\nTreat the SharedRealm the same as other native objects.\r\nSharedRealm.close will only call Object Store Realm::close without\r\ndeleting the ShareRealm pointer.\r\nThen we don't need the finalizer anymore. Fix #3730 .\r\nThis is related with\r\nhttps://github.com/realm/realm-object-store/pull/318\r\nas well. It is possible that java close the Realm in any of the Object Store's\r\ncallbacks. To avoid Object Store operating on a invalid SharedRealm\r\npointer, binding should try to make sure after callbacks. However, it\r\ncannot be totally avoided since user could set the Realm instance to\r\nnull and the instance can be GCed at any time. It is still something\r\nshould be considered in the Object Store implementation.", "commitDateTime": "2017-01-24 23:21:47", "authoredDateTime": "2017-01-24 23:21:47", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp", "insertions": 17, "deletions": 2, "lines": 19}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/SharedRealm.java", "insertions": 13, "deletions": 16, "lines": 29}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SharedRealm.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.SharedRealm.finalize()", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.internal.SharedRealm", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.SharedRealm.nativeGetFinalizerPtr()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.SharedRealm.getNativePtr()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Got build error when enabling shrink without proguard", "body": "#### Goal\n\nSuccessfully build an app with shrinking but without ProGuard\n#### Expected Results\n\nno error on build.\n#### Actual Results\n\n```\n:app:transformClassesWithNewClassShrinkerForRelease FAILED\n\nFAILURE: Build failed with an exception.\n\n* What went wrong:\nExecution failed for task ':app:transformClassesWithNewClassShrinkerForRelease'.\n> ProGuard configuration parser error: /Users/zaki/fromgit/realm/RealmTasks/RealmTasks Android/app/build/intermediates/exploded-aar/io.realm/realm-android-library-object-server/2.1.0/proguard.txt line 5:6 no viable alternative at input 'includedescriptorclasses'\n```\n#### Steps & Code to Reproduce\n\nAdd following configuration in `app/build.gradle`\n\n```\nandroid {\n    buildTypes{\n        release {\n            minifyEnabled true // add\n            useProguard false  // add\n        }\n    }\n}\n```\n#### Version of Realm and tooling\n\nRealm version(s): 2.1.1\n\nRealm sync feature enabled: both\n\nAndroid Studio version: 2.2.2\n\nWhich Android version and device: 7.1.1\n", "url": "https://github.com/realm/realm-java/issues/3714", "user": "zaki50", "labels": ["T-Bug"], "created": "2016-10-28 05:50:10", "closed": "2016-11-11 17:38:27", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "[WARNING!] Obfuscation is not working with 2.1.0", "body": "**Beware, don't release to Google Play with Realm 2.1.0** if you want your code to be obfuscated. Realm 2.1.0 won't allow any of your class names to be obfuscated, even on classes that are not RealmObjects.\n\nI'm using custom dictionaries for it, but it probably does not matter. I tested this multiple times and my code with 2.0.2 is always correctly obfuscated, code with 2.1.0 is not obfuscated at all. Luckily this happened to me once with another library and I'm checking the resulting apk with an apktool before releasing.\n", "url": "https://github.com/realm/realm-java/issues/3689", "user": "FrancescoCapari", "labels": ["T-Bug"], "created": "2016-10-25 19:46:21", "closed": "2016-10-27 16:58:41", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Rx off thread loading memory leak", "body": "Hello guys, I will be very grateful for any help in understanding this issue.\n\nI really enjoy the way I can async subscribe to data changes with Rx, but I have next situation - I need to convert RealmObjects to another objects from my project. Because the count of objects is huge, I want to do this conversion in off thread also and subscribe to all this stuff from Main thread.\n\nSo I am trying to do something like this:\n\n``` kotlin\n val workerThreadScheduler = AndroidSchedulers.from(threadManager?.getDBThread()?.looper)\n subscription = Observable.defer {\n            Log.d(LOG_TAG, \"create realm in ${Thread.currentThread().name}\")\n            Observable.just(Realm.getDefaultInstance())\n        }.flatMap { realm ->\n            realm.where(Person::class.java)\n                    .findAll()\n                    .asObservable()\n                    .doOnSubscribe { Log.d(LOG_TAG, \"subscribe in ${Thread.currentThread().name}\") }\n                    .doOnUnsubscribe {\n                        Log.d(LOG_TAG, \"unsubscribe and close realm in ${Thread.currentThread().name}\")\n                        realm.close()\n                    }\n                    .map { persons ->\n                        val emails = ArrayList<String>()\n                        for (person in persons) emails.add(person.email)\n                        return@map emails\n                    }\n        }\n                .subscribeOn(workerThreadScheduler)\n                .unsubscribeOn(workerThreadScheduler)\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe { emails -> Log.d(LOG_TAG, \"got emails ${emails.size}\") }\n```\n\nHere I am trying to subscribe to RealmResults from my own `HandlerThread` with looper, so that way I can manipulate with RealmObjects in off thread. I subscribe, unsubscribe, create and close Realm instance in this thread, `.doOnUnsubscribe` method fired.\n\nThe code behaves exactly as I want, except all RealmResults are leaking.\n\nFull example project is here https://github.com/gvoltr/android-realm-leak/tree/master/RealmLeakTest\n\nRealm version: 2.0.2\n", "url": "https://github.com/realm/realm-java/issues/3672", "user": "gvoltr", "labels": ["T-Bug"], "created": "2016-10-22 21:55:33", "closed": "2016-10-24 13:20:36", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Logging out doesn't remove the `currentUser`", "body": "From http://stackoverflow.com/questions/40058676/realm-cant-user-logout\n", "url": "https://github.com/realm/realm-java/issues/3638", "user": "cmelchior", "labels": ["T-Bug"], "created": "2016-10-17 07:13:52", "closed": "2016-10-17 11:25:04", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Documentation for 1.2.0 is NOT valid!", "body": "I have legacy app that I don't want migrate to 2.0.1 so I checked documenation and the outdated 1.2.0 is the same as 2.0.1. For starters, there is `Realm.init(context)` which is a new method (and it's not available on 1.2.0). It's really discouraging to be forced to use new version - I have no time now to migrate and handle new immutable primaryKey stuff.\n", "url": "https://github.com/realm/realm-java/issues/3603", "user": "janswist", "labels": ["T-Bug", "T-Doc"], "created": "2016-10-10 17:22:11", "closed": "2016-10-25 05:18:17", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "SyncSession#notifySessionError() seems to be unused", "body": "The comment for `SyncSession#notifySessionError()` says that it is called from `Session.cpp`, but I couldn't find `Session.cpp`.\nThere is a file `io_realm_internal_objectserver_SyncSession.cpp`, but it doesn't call the method.\n\nIf it's not needed, we should remove it.\nIf it should be called from JNI, we should fix it.\n", "url": "https://github.com/realm/realm-java/issues/3597", "user": "zaki50", "labels": ["T-Bug"], "created": "2016-10-09 19:14:49", "closed": "2016-10-13 08:23:31", "commits": {"7bb18772358f27bc462f849f60044d4204621315": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "1fda142ed1d20ad1d205695bfafe833bad103312": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "a4b1c485e1c3f4a6f4a9dd04aa22b3f3e2e873b8": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "7bb18772358f27bc462f849f60044d4204621315", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1fda142ed1d20ad1d205695bfafe833bad103312", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a4b1c485e1c3f4a6f4a9dd04aa22b3f3e2e873b8", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["466fe60facf35517e3b886875a17cafbf44083f8"], "nameRev": "a4b1c485e1c3f4a6f4a9dd04aa22b3f3e2e873b8 tags/v2.1.0~8^2~5", "commitMessage": "Call notifySessionError from native code (#3620)\n\nFix #3597", "commitDateTime": "2016-10-13 03:23:25", "authoredDateTime": "2016-10-13 03:23:25", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/main/cpp/objectserver_shared.hpp", "insertions": 9, "deletions": 7, "lines": 16}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/internal/objectserver/SyncSession.java", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SyncSession.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.objectserver.SyncSession.notifySessionError(int,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "SLF4J and Realm 2.0.1", "body": "Hello,\r\n\r\nI just updated realm from an older version to 2.0.1. From here, I'm unable to have my app working.\r\nIt seems to be the same bug as #3018 and #3043 : \r\n\r\nIn debug mode, app builds fine but crashes at launch with this error : \r\n\r\n```\r\njava.lang.NoClassDefFoundError: Failed resolution of: Lorg/gradle/internal/logging/slf4j/OutputEventListenerBackedLoggerContext;\r\n                                                                          at org.slf4j.impl.StaticLoggerBinder.<init>(StaticLoggerBinder.java:30)\r\n                                                                          at org.slf4j.impl.StaticLoggerBinder.<clinit>(StaticLoggerBinder.java:27)\r\n\r\n\r\n....\r\n\r\n\r\nCaused by: java.lang.ClassNotFoundException: Didn't find class \"org.gradle.internal.logging.slf4j.OutputEventListenerBackedLoggerContext\" on path: DexPathList[[dex file \"/data/data/.../files/instant-run/dex/slice-volley_8dd6661e4587145ffb6c9879c222bc51d500f59b-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-twitter-text-1.13.0_73d58164894a99049dcfd4f340b714ec4dfff779-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-support-annotations-24.2.1_c6ee83d5ac5d11c34968a1fdeaa1c92ddb4169e1-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-slice_9-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-slice_8-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-slice_7-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-slice_6-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-slice_5-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-slice_4-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-slice_3-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-slice_2-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-slice_1-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-slice_0-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-slf4j-api-1.7.12_8403b189700353d8954870a9ab4b928754b6726f-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-retrofit-mock-1.8.0_536419611962dc0f5a7dba16c5de9cbd3ffcc007-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-retrofit-1.8.0_66b3384cf917570f83f165d8fd59e737c65d8d49-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-realm-annotations-2.0.1_d5c759715192ab7f28772555b7c057574cf41796-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-protobuf-java-2.6.1_3d226d37e23b7f0c65ae825cf36e522dfb577471-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-picasso-2.5.2_1b2610b4fc0832caa7649b7ae564642090129b2b-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-netty-common-4.1.0.Beta5_067153349f28557a0254ff7129dc51e8ba45753b-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-netty-buffer-4.1.0.Beta5_bb5b00239d7f938d53f7b2af8f6fc4e60f2a0f3d-classes.dex\", dex file \"/data/data/.../\r\n10-06 09:47:48.276 17605-17605/... D/Error: ERR: exClass=java.lang.ClassNotFoundException\r\n10-06 09:47:48.276 17605-17605/... D/Error: ERR: exMsg=Didn't find class \"org.gradle.internal.logging.slf4j.OutputEventListenerBackedLoggerContext\" on path: DexPathList[[dex file \"/data/data/.../files/instant-run/dex/slice-volley_8dd6661e4587145ffb6c9879c222bc51d500f59b-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-twitter-text-1.13.0_73d58164894a99049dcfd4f340b714ec4dfff779-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-support-annotations-24.2.1_c6ee83d5ac5d11c34968a1fdeaa1c92ddb4169e1-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-slice_9-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-slice_8-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-slice_7-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-slice_6-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-slice_5-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-slice_4-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-slice_3-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-slice_2-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-slice_1-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-slice_0-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-slf4j-api-1.7.12_8403b189700353d8954870a9ab4b928754b6726f-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-retrofit-mock-1.8.0_536419611962dc0f5a7dba16c5de9cbd3ffcc007-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-retrofit-1.8.0_66b3384cf917570f83f165d8fd59e737c65d8d49-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-realm-annotations-2.0.1_d5c759715192ab7f28772555b7c057574cf41796-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-protobuf-java-2.6.1_3d226d37e23b7f0c65ae825cf36e522dfb577471-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-picasso-2.5.2_1b2610b4fc0832caa7649b7ae564642090129b2b-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-netty-common-4.1.0.Beta5_067153349f28557a0254ff7129dc51e8ba45753b-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-netty-buffer-4.1.0.Beta5_bb5b00239d7f938d53f7b2af8f6fc4e60f2a0f3d-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-net.danlew-android.joda-2.9.2_20414ec42e96fe4d2f49d22bba76f3b99e810184-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-me.leolin-ShortcutBadger-1.1.6_d59f8b5a23d0b47e2d707561f40f014d4983c997-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-library-2.4.0_265a2ac7e32367588cae5b6ff904496508213bc0-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-jul-to-slf4j-1.7.12_4ae047c43e83c396b289f783af72b206a1410606-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-jsr305-2.0.1_f098b5342d9eecf48cfd5cc82f41e5bca2267add-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-joda-time-2.9.2-no-tzdb_c56a9daa13ad90750ba344d6f2b040f34c61dc5b-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-javax.servlet-api-3.1.0_8f79d7ad58f4626ab26f0ae35222a1a350c347ea-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-io.underdark-underdark-1.0.10_731a34523f1f6497e067ede2b50c4fd6b2275467-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-io.realm-realm-android-library-2.0.1_6713d04e7feebf2ffade5b92941705ea3ab203d3-classes.dex\", dex file \"/data/data/.../files/instant-run/dex/slice-io.realm-androi\r\n10-06 09:47:48.276 17605-17605/... D/Error: ERR: file=BaseDexClassLoader.java\r\n10-06 09:47:48.276 17605-17605/... D/Error: ERR: class=dalvik.system.BaseDexClassLoader\r\n10-06 09:47:48.276 17605-17605/... D/Error: ERR: method=findClass line=56\r\n10-06 09:47:48.277 17605-17605/... D/Error: ERR: stack=java.lang.NoClassDefFoundError: Failed resolution of: Lorg/gradle/internal/logging/slf4j/OutputEventListenerBackedLoggerContext;\r\n                                                                 at org.slf4j.impl.StaticLoggerBinder.<init>(StaticLoggerBinder.java:30)\r\n                                                                 at org.slf4j.impl.StaticLoggerBinder.<clinit>(StaticLoggerBinder.java:27)\r\n```\r\n\r\nIn release mode, app does not build : \r\n\r\n```\r\nError:Gradle: Execution failed for task ':app:transformClassesAndResourcesWithProguardForRelease'.\r\n> java.io.IOException: Can't write [...\\app\\build\\intermediates\\transforms\\proguard\\release\\jars\\3\\1f\\main.jar] (Can't read [...\\app\\build\\intermediates\\transforms\\RealmTransformer\\release\\folders\\1\\1\\realm(;;;;;;**/*.class)] (Duplicate zip entry [org/slf4j/impl/StaticLoggerBinder.class]))\r\n```\r\n\r\nHere is my messy build.gradle : \r\n\r\n```\r\napply plugin: 'com.android.application'\r\napply plugin: 'android-apt'\r\napply plugin: 'realm-android'\r\napply plugin: 'io.fabric'\r\n\r\nrepositories {\r\n    jcenter()\r\n    maven {\r\n        url 'https://maven.fabric.io/public'\r\n    }\r\n    maven {\r\n        url 'https://dl.bintray.com/underdark/android/'\r\n    }\r\n    maven {\r\n        url 'https://github.com/uPhyca/stetho-realm/raw/master/maven-repo'\r\n    }\r\n}\r\n\r\nandroid {\r\n    compileSdkVersion 24\r\n    buildToolsVersion \"24.0.1\"\r\n\r\n\r\n    defaultConfig {\r\n        applicationId \"...\"\r\n        minSdkVersion 21\r\n        targetSdkVersion 22\r\n        versionCode 5\r\n        versionName \"1.1\"\r\n        generatedDensities = []\r\n        multiDexEnabled true\r\n    }\r\n\r\n    aaptOptions {\r\n        additionalParameters \"--no-version-vectors\"\r\n    }\r\n\r\n    lintOptions {\r\n        abortOnError false\r\n    }\r\n\r\n    signingConfigs {\r\n        config {\r\n            storeFile file('...jks')\r\n            storePassword '...'\r\n            keyAlias '...'\r\n            keyPassword '.'\r\n        }\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_7\r\n        targetCompatibility JavaVersion.VERSION_1_7\r\n    }\r\n    buildTypes {\r\n        debug {\r\n            debuggable true\r\n            useProguard false\r\n        }\r\n        release {\r\n            shrinkResources true\r\n            minifyEnabled true\r\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\r\n            zipAlignEnabled true\r\n            signingConfig signingConfigs.config\r\n        }\r\n    }\r\n    packagingOptions {\r\n        exclude 'META-INF/DEPENDENCIES.txt'\r\n        exclude 'META-INF/LICENSE.txt'\r\n        exclude 'META-INF/NOTICE.txt'\r\n    }\r\n}\r\n\r\ndependencies {\r\n    compile fileTree(include: ['*.jar'], dir: 'libs')\r\n    compile project(':linkedin-sdk')\r\n\r\n    compile 'com.android.support:multidex:1.0.1'\r\n    compile 'com.android.support:appcompat-v7:24.2.1'\r\n    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'\r\n\r\n    compile 'org.slf4j:slf4j-api:1.7.21'\r\n    compile 'org.androidannotations:androidannotations-api:4.0.0'\r\n    apt \"org.androidannotations:androidannotations:4.0.0\"\r\n    compile 'org.apache.commons:commons-io:1.3.2'\r\n    compile 'commons-validator:commons-validator:1.5.0'\r\n    compile 'com.squareup.picasso:picasso:2.5.2'\r\n    compile 'net.danlew:android.joda:2.9.2'\r\n    compile 'com.wang.avi:library:1.0.5'\r\n    compile 'com.nineoldandroids:library:2.4.0'\r\n    compile 'io.underdark:underdark:1.0.10'\r\n    compile 'com.facebook.stetho:stetho:1.4.1'\r\n    compile 'com.uphyca:stetho_realm:2.0.0'\r\n    compile 'io.realm:android-adapters:1.3.0'\r\n    compile 'me.leolin:ShortcutBadger:1.1.6@aar'\r\n    compile 'com.github.halysongoncalves:pugnotification:1.8.1'\r\n\r\n    compile 'com.facebook.android:facebook-android-sdk:4.11.0'\r\n    compile('com.twitter.sdk.android:twitter:1.14.1@aar') {\r\n        transitive = true;\r\n    }\r\n    compile 'com.google.android.gms:play-services-auth:9.2.1'\r\n}\r\n\r\nconfigurations {\r\n    all*.exclude group: 'commons-logging', module: 'commons-logging'\r\n}\r\n\r\napt {\r\n    arguments {\r\n        androidManifestFile variant.outputs[0].processResources.manifestFile\r\n        resourcePackageName '...'\r\n    }\r\n}\r\n\r\napply plugin: 'com.google.gms.google-services'\r\n```\r\n\r\nRegards,\r\n", "url": "https://github.com/realm/realm-java/issues/3568", "user": "mrp14", "labels": ["T-Bug"], "created": "2016-10-06 07:50:42", "closed": "2017-01-31 23:55:51", "commits": {"ec5de6309a51ddf5a9f900f62f7406037c8bd609": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "094fe49ff189150f8060806a06565f7382f7c1aa": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 117.00027777777778, "commitsDetails": [{"commitHash": "ec5de6309a51ddf5a9f900f62f7406037c8bd609", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "094fe49ff189150f8060806a06565f7382f7c1aa", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["4b6a1d627d729686b96aabc1a29c691a9612128f"], "nameRev": "094fe49ff189150f8060806a06565f7382f7c1aa tags/v2.3.1~9", "commitMessage": "Fixed a bug that the classes were replaced with a class in Gradle's classpath (#4127)\n\n* Fixed a bug that the classes were replaced with a class in Gradle's classpath (#3568).\r\n\r\n* update changelog entry\r\n", "commitDateTime": "2017-01-31 15:53:20", "authoredDateTime": "2017-01-31 15:53:20", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm-transformer/src/main/groovy/io/realm/transformer/RealmTransformer.groovy", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Update from 2.0.0 to 2.0.1", "body": "> What do you want to achieve?\n\nUpdate from 2.0.0 to 2.0.1\n\n> Actual Results\n\n```\nGradle sync failed: No signature of method: org.gradle.api.internal.artifacts.DefaultDependencySet.removeIf() is applicable for argument types: (io.realm.gradle.RealmPluginExtension$_setSyncEnabled_closure1) values: [io.realm.gradle.RealmPluginExtension$_setSyncEnabled_closure1@27508a7f]\n         Possible solutions: remove(java.lang.Object), removeAll(java.util.Collection), removeAll(groovy.lang.Closure), removeAll([Ljava.lang.Object;)\n         Consult IDE log for more details (Help | Show Log)\n```\n#### Code Sample\n\n``` java\n\nbuildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:1.5.0'\n        classpath 'io.realm:realm-gradle-plugin:2.0.1'\n    }\n}\n\n```\n#### Version of Realm and tooling\n\nRealm version(s): 2.0.1\n\nAndroid Studio version: 1.5.1\n", "url": "https://github.com/realm/realm-java/issues/3563", "user": "gang018", "labels": ["T-Bug"], "created": "2016-10-05 09:47:01", "closed": "2016-10-06 13:05:50", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Migrating fields crashes", "body": "Bug: Realm Migrations\nGoal: Successful Migration to be done\nExpected Result: To get migration done successful\nActual Result: Migration crash\nRealm version(s): 0.87.5\nAndroid Studio version: 2.2\nAndroid minSdkVersion: 15\n\nCode:\n\n```\n RealmSchema schema = realm.getSchema();\n......\nif (oldVersion == 16) {\n   schema.get(\"News\").addField(\"hide_news\", boolean.class, FieldAttribute.REQUIRED);\n   schema.get(\"News\").removeIndex(\"date_create_long\");\n   schema.get(\"News\").removePrimaryKey();\n   schema.get(\"News\").removeField(\"date_create_long\");\n    schema.get(\"News\").addField(\"news_url_base\", String.class, FieldAttribute.PRIMARY_KEY);\n\n    oldVersion++;\n}\n```\n\n```\nmyConfig = new RealmConfiguration.Builder(new File(func.getFolder(\"db\")))\n   .name(getResources().getString(R.string.app_name_db) + \".realm\")\n   .schemaVersion(17)\n   .migration(Constants.migration)\n   .build();\nRealm.setDefaultConfiguration(myConfig);\n```\n\nLast Model:\n\n```\n@RealmClass\npublic class News extends RealmObject {\n    @PrimaryKey\n    private Long date_create_long = new Date(System.currentTimeMillis()).getTime();  \n    private Date date_create = new Date(System.currentTimeMillis());  \n\n    private Authors author;               \n    private Books book;                    \n\n    private String value_old;\n    private String value_new;\n\n    private Boolean author_new_fio;\n    private Boolean author_new_photo;\n    private Boolean author_new_about;\n    private Boolean author_new_address;\n    private Boolean author_new_date_of_birth;\n    private Boolean author_new_residence;\n\n    private Boolean book_upd = false;\n    private Boolean book_new = false;\n    @Required\n    private Boolean author_err = false;\n    @Required\n    private Boolean book_err = false;\n    @Required\n    private Boolean book_err_true = false;\n    .....\n    setters and getters\n}\n```\n\nNew Model:\n\n```\n@RealmClass\npublic class News extends RealmObject {\n    @PrimaryKey\n    private String news_url_base;\n\n    private Date date_create = new Date(System.currentTimeMillis()); \n\n    private Authors author;\n    private Books book;\n\n    private String value_old;\n    private String value_new;\n\n    private Boolean author_new_fio;\n    private Boolean author_new_photo;\n    private Boolean author_new_about;\n    private Boolean author_new_address;\n    private Boolean author_new_date_of_birth;\n    private Boolean author_new_residence;\n\n\n    private Boolean book_upd = false;\n    private Boolean book_new = false;\n    @Required\n    private Boolean author_err = false;\n    @Required\n    private Boolean book_err = false;\n    @Required\n    private Boolean book_err_true = false;\n    @Required\n    private Boolean hide_news = false;\n\n    .....\n    setters and getters\n}\n```\n\nThe result of running the program:\n`Application terminated.`\n\nAnd the worst thing - there are no more messages.\nWhat do you recommend?\n", "url": "https://github.com/realm/realm-java/issues/3560", "user": "crysan", "labels": ["T-Bug"], "created": "2016-10-05 01:20:14", "closed": "2018-03-05 09:31:02", "commits": {}, "ttf": 516.0002777777778, "commitsDetails": []}, {"title": "Potential memory leak when creating Observable from Where asObservable.", "body": "When doing mRealm.where(Person.class).findAllAsync().asObservable().subscribe(new Subscriber...); in a Fragment and unsubscribing and closing the Realm when leaving a Fragment there still seems to be multiple instances of Realm and RealmResults in the Heap.\n\nI may be using Realm Where asObservable incorrectly but I posted on Stack Overflow and am yet to get an answer. I've created a basic empty project to illustrate the issue here: https://github.com/willjgriff/android-realm-leak\n\nThe original SO post with more details is here: http://stackoverflow.com/questions/39758862/possible-realm-memory-leak-in-android-when-creating-observable-from-where-clause\n#### Version of Realm and tooling\n\nRealm version(s): 2.0.0\nAndroid Studio version: 2.2\nWhich Android version and device: Tested on Api 18 and 23 on a Genymotion emulator. Tested on Api 23 on a Galaxy S6.\n\nAny help understanding this issue is appreciated.\n", "url": "https://github.com/realm/realm-java/issues/3552", "user": "willjgriff", "labels": ["T-Bug"], "created": "2016-10-03 19:20:58", "closed": "2016-10-24 13:20:36", "commits": {}, "ttf": 20.00027777777778, "commitsDetails": []}, {"title": "distinct query problem", "body": "#### Goal\n\n> I am having a problem with distinct query. I am getting different results for \"distinct()\" and \"distinctAsync()\"\n> I have five people in my Person table with id, name and age\n> **id** **name**    **age**\n> 1, Riyas,   20\n> 2, Febin,   21\n> 3, Amogh, 22\n> 4, Jose,     22\n> 5, Mani,     24\n\nwhen i run the following (not aynchronous) i am getting the expected result\n\n``` java\nRealmResults<Person> persons = realm.where(Person.class)\n                .notEqualTo(\"age\", 20).distinct(\"age\");\n```\n\nbut when i use asynchonous query it is giving me results with age=20 (that is excluded in query)\n\n``` java\nRealmResults<Person> persons = realm.where(Person.class)\n                .notEqualTo(\"age\", 20).distinctAsync(\"age\");\n```\n#### Expected Results\n\n> Febin 21\n> Amogh 22\n> Mani 24\n#### Actual Results\n\n> Riyas 20\n> Febin 21\n> Amogh 22\n> Mani 24\n#### Code Sample\n\n``` java\n\npublic class MainActivity extends AppCompatActivity\n    implements View.OnClickListener{\n    Realm realm;\n    TextView tvResult;\n    Button bSync;\n    Button bAsync;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        tvResult = (TextView)findViewById(R.id.tvResult);\n        bSync = (Button)findViewById(R.id.bSync);\n        bSync.setOnClickListener(this);\n        bAsync = (Button)findViewById(R.id.bAsync);\n        bAsync.setOnClickListener(this);\n        setupRealm();\n        createDummyPersons();\n    }\n\n    private void setupRealm() {\n        RealmConfiguration configuration = new RealmConfiguration.Builder(this)\n                //.name(REALM_FILE)\n                .schemaVersion(0)\n                .deleteRealmIfMigrationNeeded()\n                .build();\n        Realm.setDefaultConfiguration(configuration);\n        realm = Realm.getDefaultInstance();\n    }\n\n    private void createDummyPersons() {\n        realm.executeTransactionAsync(new Realm.Transaction() {\n            @Override\n            public void execute(Realm realm) {\n                Person riyas = getPerson(1,\"Riyas\",20);\n                realm.copyToRealmOrUpdate(riyas);\n                Person febin = getPerson(2,\"Febin\",21);\n                realm.copyToRealmOrUpdate(febin);\n                Person amogh = getPerson(3,\"Amogh\",22);\n                realm.copyToRealmOrUpdate(amogh);\n                Person jose = getPerson(4,\"Jose\",22);\n                realm.copyToRealmOrUpdate(jose);\n                Person mani = getPerson(5,\"Mani\",24);\n                realm.copyToRealmOrUpdate(mani);\n            }\n        });\n    }\n\n    private Person getPerson(int id, String name, int age) {\n        Person person = new Person();\n        person.setId(id);\n        person.setName(name);\n        person.setAge(age);\n        return person;\n    }\n\n    private void executeQuery(boolean async) {\n        RealmQuery<Person> query = realm.where(Person.class)\n                .notEqualTo(\"age\", 20);\n        RealmResults<Person> personsResult;\n        if (async) {\n            personsResult = query.distinctAsync(\"age\");\n            personsResult.addChangeListener(new RealmChangeListener<RealmResults<Person>>() {\n                @Override\n                public void onChange(RealmResults<Person> persons) {\n                    persons.removeChangeListeners();\n                    String result = createString(\"Async\",persons);\n                    tvResult.setText(result);\n                }\n            });\n        } else {\n            personsResult = query.distinct(\"age\");\n            String result = createString(\"Sync\",personsResult);\n            tvResult.setText(result);\n        }\n    }\n\n    private String createString(String title, RealmResults<Person> persons) {\n        StringBuilder builder = new StringBuilder();\n        builder.append(title);\n        builder.append(\"\\n\");\n        for (Person person:persons) {\n            builder.append(person.getName());\n            builder.append(\" : \");\n            builder.append(person.getAge());\n            builder.append(\"\\n\");\n        }\n        return builder.toString();\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        realm.close();\n    }\n\n    @Override\n    public void onClick(View v) {\n        switch (v.getId()) {\n            case R.id.bSync:\n                executeQuery(false);\n                break;\n            case R.id.bAsync:\n                executeQuery(true);\n                break;\n        }\n    }\n}\n\n\n\npublic class Person extends RealmObject {\n\n    @PrimaryKey\n    private int id;\n    private String name;\n    @Index\n    private int age;\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n\n    public int getId() {\n        return id;\n    }\n\n    public void setId(int id) {\n        this.id = id;\n    }\n}\n\n\n```\n#### Version of Realm and tooling\n\nRealm version(s): io.realm:realm-gradle-plugin:2.0.0\n\nAndroid Studio version: 2.2\n", "url": "https://github.com/realm/realm-java/issues/3537", "user": "riyase", "labels": ["T-Bug"], "created": "2016-09-30 07:26:34", "closed": "2016-10-04 14:08:48", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Exceptions in Custom loggers crash JNI", "body": "Correction: Was caused by a Custom Logger that crashed, but we should provide a much better exception in that case.\n\n```\nart/runtime/check_jni.cc:65] JNI DETECTED ERROR IN APPLICATION: JNI GetStringChars called with pending exception 'java.lang.IllegalArgumentException' thrown in unknown throw location\nart/runtime/check_jni.cc:65]     in call to GetStringChars\nart/runtime/check_jni.cc:65]     from long io.realm.internal.SharedRealm.nativeCreateConfig(java.lang.String, byte[], byte,boolean, boolean, boolean, boolean, java.lang.String, java.lang.String)\n\nart/runtime/check_jni.cc:65]   native: #08 pc 00055915  /data/app/com.invoice2go.dev-1/lib/arm/librealm-jni.so (???)\nart/runtime/check_jni.cc:65]   native: #09 pc 0001f537  /data/app/com.invoice2go.dev-1/lib/arm/librealm-jni.so (Java_io_realm_internal_SharedRealm_nativeCreateConfig+54)\nart/runtime/check_jni.cc:65]   native: #10 pc 006df8f7  /data/dalvik-cache/arm/data@app@com.invoice2go.dev-1@base.apk@classes.dex (Java_io_realm_internal_SharedRealm_nativeCreateConfig__Ljava_lang_String_2_3BBZZZZLjava_lang_String_2Ljava_lang_String_2+218)\nart/runtime/check_jni.cc:65]   at io.realm.internal.SharedRealm.nativeCreateConfig(Native method)\nart/runtime/check_jni.cc:65]   at io.realm.internal.SharedRealm.getInstance(SharedRealm.java:166)\nart/runtime/check_jni.cc:65]   at io.realm.internal.SharedRealm.getInstance(SharedRealm.java:155)\n```\n\nFrom this configuration in Kotlin:\n\n```\nRealmConfiguration.Builder()\n                        .name(realmName)\n                        .modules(myModule)\n                        .deleteRealmIfMigrationNeeded()\n                        .build()\n```\n", "url": "https://github.com/realm/realm-java/issues/3528", "user": "cmelchior", "labels": ["T-Bug"], "created": "2016-09-28 20:30:20", "closed": "2016-10-24 14:05:34", "commits": {"8d58ad0ab8893850b2d38f6c6c334dfaa0974d1d": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "14a53d8fa75a4a70ce9f4b7e3398d1418c2dc136": {"commitGHEventType": "closed", "commitUser": "beeender"}}, "ttf": 25.00027777777778, "commitsDetails": [{"commitHash": "8d58ad0ab8893850b2d38f6c6c334dfaa0974d1d", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "14a53d8fa75a4a70ce9f4b7e3398d1418c2dc136", "commitGHEventType": "closed", "commitUser": "beeender", "commitParents": ["1694c306cb0f7bb2f7dcc8cd84856ed580377922"], "nameRev": "14a53d8fa75a4a70ce9f4b7e3398d1418c2dc136 tags/v2.1.0~3", "commitMessage": "Refactor RealmLog (#3643)\n\nThe motivation:\r\n* The previous implementaion for JNI log needs calls like:\r\n  JNI -> Java -> JNI. It is not quite effecient for the most common case\r\n  -- log in JNI and sync.\r\n* The previous log levels are bit confusing.\r\n* util.cpp gets messy.\r\n* The Logger class in Java gets confusing with the Logger from\r\n  core/sync.\r\n\r\nSo this commit makes below changes:\r\n* Adds RealmLogger to replace Logger. Creates a adaptor to ensure the\r\n   subclass of Logger can still be used by the new system before we remove\r\n   the Logger class.\r\n* Adds cpp namespace jni_impl and jni_util, and make log relevant code\r\n  belong to these two namepsaces.\r\n* Moves the RealmLog to JNI.\r\n* Implenment a default Android logger in native code.\r\n* Add tag support for realm-java Logger. Java side is using tag\r\n  \"REALM_JAVA\", JNI side is using tag \"REALM_JNI\" and sync is using tag\r\n  \"REALM_CORE\".\r\n* All tags share the same log level.\r\n* Some cleanups.\r\n* Fix #3528 When there is existing java logger, calling log after ThrowNew\r\n   will crash in native code because of a pending Java exception. It should be\r\n   avoided.\r\n* Deprecate AndroidLogger.", "commitDateTime": "2016-10-24 09:05:31", "authoredDateTime": "2016-10-24 09:05:31", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "examples/objectServerExample/src/main/java/io/realm/examples/objectserver/MyApplication.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/NotificationsTest.java", "insertions": 7, "deletions": 4, "lines": 11}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmLogTests.java", "insertions": 156, "deletions": 0, "lines": 156}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/TestHelper.java", "insertions": 13, "deletions": 84, "lines": 97}, {"filePath": "realm/realm-library/src/androidTestObjectServer/java/io/realm/AuthenticateRequestTests.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "realm/realm-library/src/main/cpp/CMakeLists.txt", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_SyncManager.cpp", "insertions": 4, "deletions": 69, "lines": 73}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_Util.cpp", "insertions": 0, "deletions": 33, "lines": 33}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_log_RealmLog.cpp", "insertions": 84, "deletions": 0, "lines": 84}, {"filePath": "realm/realm-library/src/main/cpp/jni_impl/android_logger.cpp", "insertions": 93, "deletions": 0, "lines": 93}, {"filePath": "realm/realm-library/src/main/cpp/jni_impl/android_logger.hpp", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "realm/realm-library/src/main/cpp/jni_util/log.cpp", "insertions": 191, "deletions": 0, "lines": 191}, {"filePath": "realm/realm-library/src/main/cpp/jni_util/log.hpp", "insertions": 194, "deletions": 0, "lines": 194}, {"filePath": "realm/realm-library/src/main/cpp/util.cpp", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "realm/realm-library/src/main/cpp/util.hpp", "insertions": 18, "deletions": 61, "lines": 79}, {"filePath": "realm/realm-library/src/main/java/io/realm/Realm.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/Util.java", "insertions": 0, "deletions": 6, "lines": 6}, {"filePath": "realm/realm-library/src/main/java/io/realm/log/AndroidLogger.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "realm/realm-library/src/main/java/io/realm/log/LogLevel.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/log/Logger.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/main/java/io/realm/log/RealmLog.java", "insertions": 148, "deletions": 68, "lines": 216}, {"filePath": "realm/realm-library/src/main/java/io/realm/log/RealmLogger.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/SyncManager.java", "insertions": 0, "deletions": 9, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MyApplication.java", "spoonMethods": [{"spoonMethodName": "io.realm.examples.objectserver.MyApplication.onCreate()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "NotificationsTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.NotificationsTest.looperThreadQuitsLooperEarly()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.NotificationsTest.warnIfMixingSyncWritesAndAsyncQueries().45.warn(java.lang.Throwable,java.lang.String,java.lang.Object[])", "TOT": 7, "UPD": 5, "INS": 0, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "RealmLogTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmLogTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestHelper.java", "spoonMethods": [{"spoonMethodName": "io.realm.TestHelper.getFailureLogger(int)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.TestHelper.TestLogger.debug(java.lang.Throwable,java.lang.String,java.lang.Object[])", "TOT": 11, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 5}, {"spoonMethodName": "io.realm.TestHelper.getFailureLogger(int).2.debug(java.lang.Throwable,java.lang.String,java.lang.Object[])", "TOT": 8, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.TestHelper.getFailureLogger(int).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.TestHelper.TestLogger.trace(java.lang.Throwable,java.lang.String,java.lang.Object[])", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.TestHelper.getFailureLogger(int).2.failIfEqualOrAbove(int,int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.TestHelper.getFailureLogger(int).2.trace(java.lang.Throwable,java.lang.String,java.lang.Object[])", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.TestHelper.getFailureLogger(int).2.info(java.lang.Throwable,java.lang.String,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.TestHelper.getFailureLogger(int).2.warn(java.lang.Throwable,java.lang.String,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.TestHelper.getFailureLogger(int).2.error(java.lang.Throwable,java.lang.String,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.TestHelper.getFailureLogger(int).2.fatal(java.lang.Throwable,java.lang.String,java.lang.Object[])", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.TestHelper.TestLogger.getMinimumNativeDebugLevel()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.TestHelper.TestLogger.info(java.lang.Throwable,java.lang.String,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.TestHelper.TestLogger.warn(java.lang.Throwable,java.lang.String,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.TestHelper.TestLogger.error(java.lang.Throwable,java.lang.String,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.TestHelper.TestLogger.fatal(java.lang.Throwable,java.lang.String,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.TestHelper.TestLogger.log(int,java.lang.String,java.lang.Throwable,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AuthenticateRequestTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.AuthenticateRequestTests.setUp()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Realm.java", "spoonMethods": [{"spoonMethodName": "io.realm.Realm.init(android.content.Context)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Util.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.Util.setDebugLevel(int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.Util.nativeSetDebugLevel(int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AndroidLogger.java", "spoonMethods": []}, {"spoonFilePath": "LogLevel.java", "spoonMethods": []}, {"spoonFilePath": "Logger.java", "spoonMethods": []}, {"spoonFilePath": "RealmLog.java", "spoonMethods": [{"spoonMethodName": "io.realm.log.RealmLog.setMinimumNativeDebugLevel(int)", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.log.RealmLog.fatal(java.lang.Throwable,java.lang.String,java.lang.Object[])", "TOT": 13, "UPD": 4, "INS": 1, "MOV": 8, "DEL": 0}, {"spoonMethodName": "io.realm.log.RealmLog", "TOT": 16, "UPD": 6, "INS": 1, "MOV": 4, "DEL": 5}, {"spoonMethodName": "io.realm.log.RealmLog.clear()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.log.RealmLog.remove(io.realm.log.Logger)", "TOT": 22, "UPD": 6, "INS": 2, "MOV": 12, "DEL": 2}, {"spoonMethodName": "io.realm.log.RealmLog.add(io.realm.log.Logger)", "TOT": 15, "UPD": 5, "INS": 1, "MOV": 8, "DEL": 1}, {"spoonMethodName": "io.realm.log.RealmLog.trace(java.lang.Throwable,java.lang.String,java.lang.Object[])", "TOT": 10, "UPD": 0, "INS": 1, "MOV": 7, "DEL": 2}, {"spoonMethodName": "io.realm.log.RealmLog.debug(java.lang.Throwable,java.lang.String,java.lang.Object[])", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 2}, {"spoonMethodName": "io.realm.log.RealmLog.info(java.lang.Throwable,java.lang.String,java.lang.Object[])", "TOT": 10, "UPD": 0, "INS": 1, "MOV": 7, "DEL": 2}, {"spoonMethodName": "io.realm.log.RealmLog.warn(java.lang.Throwable,java.lang.String,java.lang.Object[])", "TOT": 10, "UPD": 0, "INS": 1, "MOV": 7, "DEL": 2}, {"spoonMethodName": "io.realm.log.RealmLog.error(java.lang.Throwable,java.lang.String,java.lang.Object[])", "TOT": 10, "UPD": 0, "INS": 1, "MOV": 8, "DEL": 1}, {"spoonMethodName": "io.realm.log.RealmLog.LoggerAdapter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.log.RealmLog.add(io.realm.log.RealmLogger)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.log.RealmLog.getLevel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.log.RealmLog.remove(io.realm.log.RealmLogger)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.log.RealmLog.registerDefaultLogger()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.log.RealmLog.nativeAddLogger(io.realm.log.RealmLogger)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.log.RealmLog.nativeRemoveLogger(io.realm.log.RealmLogger)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.log.RealmLog.nativeClearLoggers()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.log.RealmLog.nativeRegisterDefaultLogger()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.log.RealmLog.nativeLog(int,java.lang.String,java.lang.Throwable,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.log.RealmLog.nativeSetLogLevel(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.log.RealmLog.nativeGetLogLevel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmLogger.java", "spoonMethods": [{"spoonMethodName": "io.realm.log", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SyncManager.java", "spoonMethods": [{"spoonMethodName": "io.realm.SyncManager.setLogLevel(int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.SyncManager.nativeSetSyncClientLogLevel(int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "can't receive CONNECTIVITY_CHANGE on Android 7 device", "body": "https://developer.android.com/topic/performance/background-optimization.html#connectivity-action\n\nWe need to use `registerReceiver()` instead.\n", "url": "https://github.com/realm/realm-java/issues/3511", "user": "zaki50", "labels": ["T-Bug"], "created": "2016-09-28 08:30:20", "closed": "2016-09-29 07:01:36", "commits": {"de9fa000bfffb19bd44c68903427429f879988b3": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "c4f68035eb6b44471f6271b9236e8b3676ce3c75": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "de9fa000bfffb19bd44c68903427429f879988b3", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c4f68035eb6b44471f6271b9236e8b3676ce3c75", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["8b1574b6588a0f99df411338164ff10f39f03adb"], "nameRev": "c4f68035eb6b44471f6271b9236e8b3676ce3c75 tags/v2.0.1~12", "commitMessage": "use Context.registerReceiver() instead of AndroidManifest.xml to register NetworkStateReceiver for android.net.conn.CONNECTIVITY_CHANGE broadcast. (#3529)\n\nOn Android 7 device, android.net.conn.CONNECTIVITY_CHANGE is not deliverd to receivers registerd by AndroidManifest.xml.\r\nSee https://developer.android.com/topic/performance/background-optimization.html#connectivity-action\r\n\r\nfixes #3511", "commitDateTime": "2016-09-29 14:07:31", "authoredDateTime": "2016-09-29 14:07:31", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/ObjectServerFacade.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "realm/realm-library/src/objectServer/AndroidManifest.xml", "insertions": 0, "deletions": 7, "lines": 7}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/ObjectServer.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/internal/objectserver/SessionStore.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/internal/objectserver/SyncObjectServerFacade.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/internal/objectserver/SyncUtil.java", "insertions": 16, "deletions": 0, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ObjectServerFacade.java", "spoonMethods": []}, {"spoonFilePath": "ObjectServer.java", "spoonMethods": []}, {"spoonFilePath": "SessionStore.java", "spoonMethods": []}, {"spoonFilePath": "SyncObjectServerFacade.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.objectserver.SyncObjectServerFacade.init(android.content.Context)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SyncUtil.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "findAllSorted and distinct", "body": "#### Goal\n\nI'm using `Kotlin` and I'm trying to retrieve objects with `findAllSorted` using a `Long` that's a timestamp to sort them, and then filtering with `distinct`.\n\nI've also asked on [Stackoverflow](http://stackoverflow.com/questions/39708623/realm-findallsorted-and-distinct)\n#### Expected Results\n\nI expected to get the \"newest objects  for each distinct value of the field used by `distinct`\n#### Actual Results\n\nI got the oldest ones.\n#### Steps & Code to Reproduce\n\n```\noverride fun getStuff(): MutableList<Stuff> = realm.where(Stuff::class.java)\n        .findAllSorted(\"timeStamp\", Sort.DESCENDING)\n        .distinct(\"otherId\")\n\nstorage.saveStuff(Stuff(\"a\", otherId=1, timeStamp=1))\nstorage.saveStuff(Stuff(\"b\", otherId=1, timeStamp=2))\nstorage.saveStuff(Stuff(\"c\", otherId=1, timeStamp=3))\n// Other stuff with different otherId\n\nstorage.getStuff()[0].name == \"c\" // false\n```\n#### Version of Realm and tooling\n\nRealm version(s): 1.2.0 / 1.1.1\n\nAndroid Studio version: 2.2\n\nKotlin Version: 1.0.4\n", "url": "https://github.com/realm/realm-java/issues/3503", "user": "ziggy42", "labels": ["T-Bug"], "created": "2016-09-27 17:15:59", "closed": "2017-09-18 13:01:41", "commits": {}, "ttf": 355.0002777777778, "commitsDetails": []}, {"title": "ConcurrentModificationException from Gradle 3.1 with Databinding and Realm 2.0", "body": "#### Goal\n\nUpgrade from Realm-Java 1.2.0 to 2.0.0\n#### Expected Results\n\nSimple build success/sync in Android Studio.\n#### Actual Results\n\n```\n$ ./gradlew clean build --stacktrace\nThe TaskInputs.source(Object) method has been deprecated and is scheduled to be removed in Gradle 4.0. Please use TaskInputs.file(Object).skipWhenEmpty() instead.\n\nFAILURE: Build failed with an exception.\n\n* What went wrong:\nA problem occurred configuring project ':app'.\n> java.util.ConcurrentModificationException (no error message)\n\n* Try:\nRun with --info or --debug option to get more log output.\n\n* Exception is:\norg.gradle.api.ProjectConfigurationException: A problem occurred configuring project ':app'.\n        at org.gradle.configuration.project.LifecycleProjectEvaluator.addConfigurationFailure(LifecycleProjectEvaluator.java:79)\n        at org.gradle.configuration.project.LifecycleProjectEvaluator.notifyAfterEvaluate(LifecycleProjectEvaluator.java:74)\n        at org.gradle.configuration.project.LifecycleProjectEvaluator.evaluate(LifecycleProjectEvaluator.java:61)\n        at org.gradle.api.internal.project.DefaultProject.evaluate(DefaultProject.java:573)\n        at org.gradle.api.internal.project.DefaultProject.evaluate(DefaultProject.java:125)\n        at org.gradle.execution.TaskPathProjectEvaluator.configureHierarchy(TaskPathProjectEvaluator.java:47)\n        at org.gradle.configuration.DefaultBuildConfigurer.configure(DefaultBuildConfigurer.java:38)\n        at org.gradle.initialization.DefaultGradleLauncher$2.run(DefaultGradleLauncher.java:151)\n        at org.gradle.internal.Factories$1.create(Factories.java:22)\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:91)\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:53)\n        at org.gradle.initialization.DefaultGradleLauncher.doBuildStages(DefaultGradleLauncher.java:148)\n        at org.gradle.initialization.DefaultGradleLauncher.access$200(DefaultGradleLauncher.java:33)\n        at org.gradle.initialization.DefaultGradleLauncher$1.create(DefaultGradleLauncher.java:112)\n        at org.gradle.initialization.DefaultGradleLauncher$1.create(DefaultGradleLauncher.java:106)\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:91)\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:63)\n        at org.gradle.initialization.DefaultGradleLauncher.doBuild(DefaultGradleLauncher.java:106)\n        at org.gradle.initialization.DefaultGradleLauncher.run(DefaultGradleLauncher.java:92)\n        at org.gradle.launcher.exec.GradleBuildController.run(GradleBuildController.java:66)\n        at org.gradle.tooling.internal.provider.ExecuteBuildActionRunner.run(ExecuteBuildActionRunner.java:28)\n        at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)\n        at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:41)\n        at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:26)\n        at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:79)\n        at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:51)\n        at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:59)\n        at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\n        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n        at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:47)\n        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n        at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:26)\n        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n        at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:34)\n        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n        at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:74)\n        at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:72)\n        at org.gradle.util.Swapper.swap(Swapper.java:38)\n        at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:72)\n        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n        at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:55)\n        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n        at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:60)\n        at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\n        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n        at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:72)\n        at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\n        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n        at org.gradle.launcher.daemon.server.exec.HintGCAfterBuild.execute(HintGCAfterBuild.java:44)\n        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n        at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:50)\n        at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:293)\n        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54)\n        at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40)\nCaused by: java.util.ConcurrentModificationException\n        at org.gradle.api.internal.DefaultDomainObjectCollection$IteratorImpl.next(DefaultDomainObjectCollection.java:291)\n        at org.gradle.api.internal.CompositeDomainObjectSet$SetIterator.fetchNext(CompositeDomainObjectSet.java:156)\n        at org.gradle.api.internal.CompositeDomainObjectSet$SetIterator.next(CompositeDomainObjectSet.java:175)\n        at org.apache.commons.collections.iterators.IteratorChain.next(IteratorChain.java:265)\n        at org.gradle.api.internal.CompositeDomainObjectSet$SetIterator.fetchNext(CompositeDomainObjectSet.java:156)\n        at org.gradle.api.internal.CompositeDomainObjectSet$SetIterator.next(CompositeDomainObjectSet.java:175)\n        at com.android.build.gradle.internal.DependencyManager.ensureConfigured(DependencyManager.java:485)\n        at com.android.build.gradle.internal.DependencyManager.resolveDependencyForConfig(DependencyManager.java:267)\n        at com.android.build.gradle.internal.DependencyManager.resolveDependencies(DependencyManager.java:159)\n        at com.android.build.gradle.internal.TaskManager.resolveDependencies(TaskManager.java:364)\n        at com.android.build.gradle.internal.VariantManager$9.call(VariantManager.java:636)\n        at com.android.build.gradle.internal.VariantManager$9.call(VariantManager.java:633)\n        at com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:156)\n        at com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:120)\n        at com.android.build.gradle.internal.profile.SpanRecorders.record(SpanRecorders.java:44)\n        at com.android.build.gradle.internal.VariantManager.createVariantData(VariantManager.java:629)\n        at com.android.build.gradle.internal.VariantManager.createVariantDataForProductFlavors(VariantManager.java:823)\n        at com.android.build.gradle.internal.VariantManager.populateVariantDataList(VariantManager.java:512)\n        at com.android.build.gradle.internal.VariantManager$1.call(VariantManager.java:269)\n        at com.android.build.gradle.internal.VariantManager$1.call(VariantManager.java:266)\n        at com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:156)\n        at com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:120)\n        at com.android.build.gradle.internal.VariantManager.createAndroidTasks(VariantManager.java:265)\n        at com.android.build.gradle.BasePlugin$11.call(BasePlugin.java:688)\n        at com.android.build.gradle.BasePlugin$11.call(BasePlugin.java:685)\n        at com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:156)\n        at com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:120)\n        at com.android.build.gradle.BasePlugin.createAndroidTasks(BasePlugin.java:683)\n        at com.android.build.gradle.BasePlugin$10.call(BasePlugin.java:608)\n        at com.android.build.gradle.BasePlugin$10.call(BasePlugin.java:605)\n        at com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:156)\n        at com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:120)\n        at com.android.build.gradle.BasePlugin.lambda$createTasks$1(BasePlugin.java:603)\n        at org.gradle.internal.event.BroadcastDispatch$ActionInvocationHandler.dispatch(BroadcastDispatch.java:93)\n        at org.gradle.internal.event.BroadcastDispatch$ActionInvocationHandler.dispatch(BroadcastDispatch.java:82)\n        at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:44)\n        at org.gradle.internal.event.BroadcastDispatch.dispatch(BroadcastDispatch.java:79)\n        at org.gradle.internal.event.BroadcastDispatch.dispatch(BroadcastDispatch.java:30)\n        at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)\n        at com.sun.proxy.$Proxy15.afterEvaluate(Unknown Source)\n        at org.gradle.configuration.project.LifecycleProjectEvaluator.notifyAfterEvaluate(LifecycleProjectEvaluator.java:67)\n        ... 52 more\n```\n#### Steps & Code to Reproduce\n\nIt's a complicated build, but here are my app plugins:\n\n```\napply plugin: 'com.android.application'\napply plugin: 'com.neenbedankt.android-apt'\napply plugin: 'me.tatarka.retrolambda'\napply plugin: 'io.fabric'\napply plugin: 'realm-android'\napply plugin: 'kotlin-android'\napply plugin: 'kotlin-android-extensions'\n```\n\nI wonder if maybe the ordering is important starting in 2.0?\n#### Code Sample\n#### Version of Realm and tooling\n\nRealm version(s): 2.0.0\n\nAndroid Studio version: 2.2.0\n\nGradle version: 3.1\n\nAndroid Gradle Plugin version: 2.2.0\n\nWhich Android version and device: N/A\n", "url": "https://github.com/realm/realm-java/issues/3501", "user": "tbsandee", "labels": ["T-Bug"], "created": "2016-09-27 14:23:01", "closed": "2016-10-04 14:08:21", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "com.getkeepsafe.relinker.MissingLibraryException: lib/armeabi-v7a/librealm-jni.so", "body": "This is my second topic about same issue, no one saw https://github.com/realm/realm-java/issues/3447\n\nIn my app, the only native library is realm's librealm-jni.so, and seems like this is not cure for me [couldnt-load-librealm-jniso](https://realm.io/docs/java/latest/#couldnt-load-librealm-jniso)\n\nI'm still getting crash logs related this issue. How can i deal with this issue ?\n#### Goal\n\nTo find a solution for ABI related problems\n#### Expected Results\n\nTo run all split versions of app successfully\n#### Actual Results\n\n>  Caused by: com.getkeepsafe.relinker.MissingLibraryException: lib/armeabi-v7a/librealm-jni.so\n>                                                                            at com.getkeepsafe.relinker.ApkLibraryInstaller.installLibrary(ApkLibraryInstaller.java:85)\n>                                                                            at com.getkeepsafe.relinker.ReLinkerInstance.loadLibraryInternal(ReLinkerInstance.java:182)\n>                                                                            at com.getkeepsafe.relinker.ReLinkerInstance.loadLibrary(ReLinkerInstance.java:140)\n>                                                                            at com.getkeepsafe.relinker.ReLinker.loadLibrary(ReLinker.java:70)\n>                                                                            at com.getkeepsafe.relinker.ReLinker.loadLibrary(ReLinker.java:51)\n>                                                                            at io.realm.internal.RealmCore.loadLibrary(RealmCore.java:87)\n>                                                                            at io.realm.RealmConfiguration$Builder.<init>(RealmConfiguration.java:390)\n#### Version of Realm and tooling\n\nRealm version(s): 1.2.0\n\nAndroid Studio version:  2.2\n", "url": "https://github.com/realm/realm-java/issues/3484", "user": "blackkara", "labels": ["T-Bug"], "created": "2016-09-22 13:54:49", "closed": "2017-01-24 08:43:48", "commits": {}, "ttf": 123.00027777777778, "commitsDetails": []}, {"title": "javassist.bytecode.DuplicateMemberException: duplicate method: realmGet$id in", "body": "#### Goal\n\nWe have 2 Android Library projects. \n\n'sdk-core' - which has the core functionality which has the core RealmObjects.\n'sdk' - extends the 'sdk-core'.\n\nWe are trying to create a fat aar for the 'sdk' using fat-aar.gradle from this github project (https://github.com/adwiv/android-fat-aar)\n\nThe :sdk-core:transformClassesWithRealmTransformerForRelease passes. It seems that after the classes are bundled together the call to :sdk:transformClassesWithRealmTransformerForRelease fails on a RealmObject that is in the 'sdk-core' -com.proxiwave.core.persistence.model.RealmTarget\n#### Expected Results\n\nBUILD Successful\n#### Actual Results\n\n``` java\nIncremental java compilation is an incubating feature.\n:clean UP-TO-DATE\n:sdk:clean\n:sdk-core:clean\n:sdk:preBuild UP-TO-DATE\n:sdk:preReleaseBuild UP-TO-DATE\n:sdk:compileReleaseNdk UP-TO-DATE\n:sdk:compileLint\n:sdk:copyReleaseLint UP-TO-DATE\n:sdk:mergeReleaseShaders\n:sdk:compileReleaseShaders\n:sdk:embedAssets\n:sdk:generateReleaseAssets\n:sdk:checkReleaseManifest\n:sdk:preDebugAndroidTestBuild UP-TO-DATE\n:sdk:preDebugBuild UP-TO-DATE\n:sdk:preDebugUnitTestBuild UP-TO-DATE\n:sdk:preReleaseUnitTestBuild UP-TO-DATE\n:sdk-core:preBuild UP-TO-DATE\n:sdk-core:preReleaseBuild UP-TO-DATE\n:sdk-core:compileReleaseNdk UP-TO-DATE\n:sdk-core:compileLint\n:sdk-core:copyReleaseLint UP-TO-DATE\n:sdk-core:checkReleaseManifest\n:sdk-core:preDebugAndroidTestBuild UP-TO-DATE\n:sdk-core:preDebugBuild UP-TO-DATE\n:sdk-core:preDebugUnitTestBuild UP-TO-DATE\n:sdk-core:preReleaseUnitTestBuild UP-TO-DATE\n:sdk-core:prepareComAndroidSupportAnimatedVectorDrawable2340Library\n:sdk-core:prepareComAndroidSupportAppcompatV72340Library\n:sdk-core:prepareComAndroidSupportSupportV42340Library\n:sdk-core:prepareComAndroidSupportSupportVectorDrawable2340Library\n:sdk-core:prepareComGetkeepsafeRelinkerRelinker121Library\n:sdk-core:prepareIoRealmRealmAndroidLibrary110Library\n:sdk-core:prepareOrgAltbeaconAndroidBeaconLibrary281Library\n:sdk-core:prepareReleaseDependencies\n:sdk-core:compileReleaseAidl\n:sdk-core:compileReleaseRenderscript\n:sdk-core:generateReleaseBuildConfig\n:sdk-core:mergeReleaseShaders\n:sdk-core:compileReleaseShaders\n:sdk-core:generateReleaseAssets\n:sdk-core:mergeReleaseAssets\n:sdk-core:generateReleaseResValues UP-TO-DATE\n:sdk-core:generateReleaseResources\n:sdk-core:mergeReleaseResources\n:sdk-core:processReleaseManifest\n:sdk-core:processReleaseResources\n:sdk-core:generateReleaseSources\n:sdk-core:incrementalReleaseJavaCompilationSafeguard\n:sdk-core:compileReleaseJavaWithJavac\nNote: Version 1.2.0 of Realm is now available: http://static.realm.io/downloads/java/latest\nNote: Processing class RealmAd\nNote: Processing class RealmBeacon\nNote: Processing class RealmCampaign\nNote: Processing class RealmCompany\nNote: Processing class RealmFloor\nNote: Processing class RealmStore\nNote: Processing class RealmTarget\nNote: Processing class RealmTrigger\nNote: Processing module RealmModule\nNote: Some input files use unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n:sdk-core:extractReleaseAnnotations\n:sdk-core:mergeReleaseProguardFiles UP-TO-DATE\n:sdk-core:packageReleaseRenderscript UP-TO-DATE\n:sdk-core:packageReleaseResources\n:sdk-core:transformClassesWithRealmTransformerForRelease\n:sdk-core:processReleaseJavaRes UP-TO-DATE\n:sdk-core:transformResourcesWithMergeJavaResForRelease\n:sdk-core:transformClassesAndResourcesWithSyncLibJarsForRelease\n:sdk-core:mergeReleaseJniLibFolders\n:sdk-core:transformNative_libsWithMergeJniLibsForRelease\n:sdk-core:transformNative_libsWithSyncJniLibsForRelease\n:sdk-core:bundleRelease\n:sdk:prepareComAndroidSupportAnimatedVectorDrawable2340Library\n:sdk:prepareComAndroidSupportAppcompatV72340Library\n:sdk:prepareComAndroidSupportSupportV42340Library\n:sdk:prepareComAndroidSupportSupportVectorDrawable2340Library\n:sdk:prepareComGetkeepsafeRelinkerRelinker121Library\n:sdk:prepareComGoogleAndroidGmsPlayServicesBasement920Library\n:sdk:prepareComGoogleAndroidGmsPlayServicesTasks920Library\n:sdk:prepareComGoogleFirebaseFirebaseCommon920Library\n:sdk:prepareComGoogleFirebaseFirebaseIid920Library\n:sdk:prepareComGoogleFirebaseFirebaseMessaging920Library\n:sdk:prepareIoRealmRealmAndroidLibrary110Library\n:sdk:prepareOrgAltbeaconAndroidBeaconLibrary281Library\n:sdk:prepareProxiwaveSdkAndroidSdkCoreUnspecifiedLibrary\n:sdk:prepareReleaseDependencies\n:sdk:mergeReleaseAssets\n:sdk:compileReleaseRenderscript\n:sdk:generateReleaseResValues UP-TO-DATE\n:sdk:generateReleaseResources\n:sdk:mergeReleaseResources\n:sdk:processReleaseManifest\n:sdk:processReleaseResources\n:sdk:embedRClassFiles\n:sdk:compileReleaseAidl\n:sdk:generateReleaseBuildConfig\n:sdk:generateReleaseSources\n:sdk:incrementalReleaseJavaCompilationSafeguard\n:sdk:compileReleaseJavaWithJavac\nNote: Version 1.2.0 of Realm is now available: http://static.realm.io/downloads/java/latest\nNote: Processing class RealmAddress\nNote: Processing class RealmDevice\nNote: Processing class RealmEvent\nNote: Processing class RealmIdentity\nNote: Processing class RealmPhoneNumber\nNote: Processing class RealmProfile\nNote: Processing class RealmSetting\nNote: Processing class RealmWeight\nNote: Processing module ProxiWaveModule\nNote: Some input files use unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n:sdk:embedJavaJars\n:sdk:mergeReleaseJniLibFolders\n:sdk:embedJniLibs\n====== Embedding jni libs in project ':sdk'\n======= Copying JNI from build/intermediates/exploded-aar/proxiwave-sdk-android/sdk-core/unspecified/jni\n:sdk:embedManifests\n========== INFO : Loading library manifest /Users/Edgar/Workspaces/xcode/proxiwave-white-label-android/proxiwave-sdk-android/sdk/build/intermediates/exploded-aar/proxiwave-sdk-android/sdk-core/unspecified/AndroidManifest.xml\n========== INFO : Merging main manifest /Users/Edgar/Workspaces/xcode/proxiwave-white-label-android/proxiwave-sdk-android/sdk/build/intermediates/bundles/release/AndroidManifest.orig.xml\n\n========== INFO : Merging library manifest /Users/Edgar/Workspaces/xcode/proxiwave-white-label-android/proxiwave-sdk-android/sdk/build/intermediates/exploded-aar/proxiwave-sdk-android/sdk-core/unspecified/AndroidManifest.xml\n========== INFO : Merging manifest with lower AndroidManifest.xml:2:1-26:12\n========== INFO : Merging uses-sdk with lower AndroidManifest.xml:7:5-9:41\n========== INFO : Merging application with lower AndroidManifest.xml:19:5-24:19\n========== INFO : Merging result:SUCCESS\n========== INFO : Merged manifest saved to /Users/Edgar/Workspaces/xcode/proxiwave-white-label-android/proxiwave-sdk-android/sdk/build/intermediates/bundles/release/AndroidManifest.xml\n:sdk:extractReleaseAnnotations\n:sdk:mergeReleaseProguardFiles UP-TO-DATE\n:sdk:packageReleaseRenderscript UP-TO-DATE\n:sdk:embedProguard\n====== Embedding proguard.txt files in project ':sdk'\n:sdk:embedLibraryResources\n:sdk:packageReleaseResources\n:sdk:transformClassesWithRealmTransformerForRelease FAILED\n\nFAILURE: Build failed with an exception.\n\n* What went wrong:\nExecution failed for task ':sdk:transformClassesWithRealmTransformerForRelease'.\n> javassist.bytecode.DuplicateMemberException: duplicate method: realmGet$id in com.proxiwave.core.persistence.model.RealmTarget\n\n* Try:\nRun with --info or --debug option to get more log output.\n\n* Exception is:\norg.gradle.api.tasks.TaskExecutionException: Execution failed for task ':sdk:transformClassesWithRealmTransformerForRelease'.\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:69)\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:46)\n        at org.gradle.api.internal.tasks.execution.PostExecutionAnalysisTaskExecuter.execute(PostExecutionAnalysisTaskExecuter.java:35)\n        at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:66)\n        at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:58)\n        at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:52)\n        at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:52)\n        at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:53)\n        at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)\n        at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:203)\n        at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:185)\n        at org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.processTask(AbstractTaskPlanExecutor.java:66)\n        at org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.run(AbstractTaskPlanExecutor.java:50)\n        at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor.process(DefaultTaskPlanExecutor.java:25)\n        at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter.execute(DefaultTaskGraphExecuter.java:110)\n        at org.gradle.execution.SelectedTaskExecutionAction.execute(SelectedTaskExecutionAction.java:37)\n        at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:37)\n        at org.gradle.execution.DefaultBuildExecuter.access$000(DefaultBuildExecuter.java:23)\n        at org.gradle.execution.DefaultBuildExecuter$1.proceed(DefaultBuildExecuter.java:43)\n        at org.gradle.execution.DryRunBuildExecutionAction.execute(DryRunBuildExecutionAction.java:32)\n        at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:37)\n        at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:30)\n        at org.gradle.initialization.DefaultGradleLauncher$4.run(DefaultGradleLauncher.java:153)\n        at org.gradle.internal.Factories$1.create(Factories.java:22)\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:91)\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:53)\n        at org.gradle.initialization.DefaultGradleLauncher.doBuildStages(DefaultGradleLauncher.java:150)\n        at org.gradle.initialization.DefaultGradleLauncher.access$200(DefaultGradleLauncher.java:32)\n        at org.gradle.initialization.DefaultGradleLauncher$1.create(DefaultGradleLauncher.java:98)\n        at org.gradle.initialization.DefaultGradleLauncher$1.create(DefaultGradleLauncher.java:92)\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:91)\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:63)\n        at org.gradle.initialization.DefaultGradleLauncher.doBuild(DefaultGradleLauncher.java:92)\n        at org.gradle.initialization.DefaultGradleLauncher.run(DefaultGradleLauncher.java:83)\n        at org.gradle.launcher.exec.InProcessBuildActionExecuter$DefaultBuildController.run(InProcessBuildActionExecuter.java:99)\n        at org.gradle.tooling.internal.provider.ExecuteBuildActionRunner.run(ExecuteBuildActionRunner.java:28)\n        at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)\n        at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:48)\n        at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:30)\n        at org.gradle.launcher.exec.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:81)\n        at org.gradle.launcher.exec.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:46)\n        at org.gradle.launcher.exec.DaemonUsageSuggestingBuildActionExecuter.execute(DaemonUsageSuggestingBuildActionExecuter.java:51)\n        at org.gradle.launcher.exec.DaemonUsageSuggestingBuildActionExecuter.execute(DaemonUsageSuggestingBuildActionExecuter.java:28)\n        at org.gradle.launcher.cli.RunBuildAction.run(RunBuildAction.java:43)\n        at org.gradle.internal.Actions$RunnableActionAdapter.execute(Actions.java:173)\n        at org.gradle.launcher.cli.CommandLineActionFactory$ParseAndBuildAction.execute(CommandLineActionFactory.java:239)\n        at org.gradle.launcher.cli.CommandLineActionFactory$ParseAndBuildAction.execute(CommandLineActionFactory.java:212)\n        at org.gradle.launcher.cli.JavaRuntimeValidationAction.execute(JavaRuntimeValidationAction.java:35)\n        at org.gradle.launcher.cli.JavaRuntimeValidationAction.execute(JavaRuntimeValidationAction.java:24)\n        at org.gradle.launcher.cli.ExceptionReportingAction.execute(ExceptionReportingAction.java:33)\n        at org.gradle.launcher.cli.ExceptionReportingAction.execute(ExceptionReportingAction.java:22)\n        at org.gradle.launcher.cli.CommandLineActionFactory$WithLogging.execute(CommandLineActionFactory.java:205)\n        at org.gradle.launcher.cli.CommandLineActionFactory$WithLogging.execute(CommandLineActionFactory.java:169)\n        at org.gradle.launcher.Main.doAction(Main.java:33)\n        at org.gradle.launcher.bootstrap.EntryPoint.run(EntryPoint.java:45)\n        at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:55)\n        at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:36)\n        at org.gradle.launcher.GradleMain.main(GradleMain.java:23)\n        at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:30)\n        at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:129)\n        at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61)\nCaused by: java.lang.RuntimeException: javassist.bytecode.DuplicateMemberException: duplicate method: realmGet$id in com.proxiwave.core.persistence.model.RealmTarget\n        at com.android.builder.profile.Recorder$Block.handleException(Recorder.java:54)\n        at com.android.builder.profile.ThreadRecorder$1.record(ThreadRecorder.java:57)\n        at com.android.builder.profile.ThreadRecorder$1.record(ThreadRecorder.java:47)\n        at com.android.build.gradle.internal.pipeline.TransformTask.transform(TransformTask.java:173)\n        at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:75)\n        at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$IncrementalTaskAction.doExecute(AnnotationProcessingTaskFactory.java:245)\n        at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.execute(AnnotationProcessingTaskFactory.java:221)\n        at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$IncrementalTaskAction.execute(AnnotationProcessingTaskFactory.java:232)\n        at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.execute(AnnotationProcessingTaskFactory.java:210)\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:80)\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:61)\n        ... 60 more\nCaused by: javassist.bytecode.DuplicateMemberException: duplicate method: realmGet$id in com.proxiwave.core.persistence.model.RealmTarget\n        at javassist.bytecode.ClassFile.testExistingMethod(ClassFile.java:705)\n        at javassist.bytecode.ClassFile.addMethod(ClassFile.java:680)\n        at javassist.CtClassType.addMethod(CtClassType.java:1383)\n        at io.realm.transformer.BytecodeModifier$_addRealmAccessors_closure1.doCall(BytecodeModifier.groovy:45)\n        at io.realm.transformer.BytecodeModifier.addRealmAccessors(BytecodeModifier.groovy:42)\n        at io.realm.transformer.BytecodeModifier$addRealmAccessors$0.call(Unknown Source)\n        at io.realm.transformer.RealmTransformer$_transform_closure10.doCall(RealmTransformer.groovy:132)\n        at io.realm.transformer.RealmTransformer.transform(RealmTransformer.groovy:131)\n        at com.android.build.api.transform.Transform.transform(Transform.java:308)\n        at com.android.build.gradle.internal.pipeline.TransformTask$3.call(TransformTask.java:178)\n        at com.android.build.gradle.internal.pipeline.TransformTask$3.call(TransformTask.java:174)\n        at com.android.builder.profile.ThreadRecorder$1.record(ThreadRecorder.java:55)\n        ... 69 more\n\n\nBUILD FAILED\n\nTotal time: 18.878 secs\n```\n#### Steps & Code to Reproduce\n\n./gradlew clean assembleRelease\n#### Version of Realm and tooling\n\nRealm version(s): 1.1.0\n\nAndroid Studio version: 2.2\n", "url": "https://github.com/realm/realm-java/issues/3469", "user": "stoleruedgar", "labels": ["T-Bug"], "created": "2016-09-20 09:11:01", "closed": "2016-10-03 08:07:40", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "Update schema version cache in SharedRealm in ObjectStore", "body": "`SharedRealm` in ObjectStore has a cache of schema version in it and we don\u2019t seem to update it when we change the schema version in the Realm file.\n\nIt\u2019s OK for now since current Java binding does not use any methods that use the schema version cache, but we will need to fix that when we move migration logic to ObjectStore.\n", "url": "https://github.com/realm/realm-java/issues/3426", "user": "zaki50", "labels": ["Design-Required", "T-Bug"], "created": "2016-09-12 13:14:42", "closed": "2017-08-24 07:33:17", "commits": {}, "ttf": 345.0002777777778, "commitsDetails": []}, {"title": "DynamicRealmObject from RealmResults is using UncheckedRow", "body": "https://github.com/realm/realm-java/blob/v1.2.0/realm/realm-library/src/main/java/io/realm/BaseRealm.java#L590 sets `UncheckedRow` even if the `result` is `DynamicRealmObject`.\n\nIt causes unexpected crash when an inappropriate getter or setter is used.\n\nCorrection: crash was fixed in #3312 but using unchecked row is still a mistake.\n### code to reproduce\n\n```\nDynamicRealm dynamicRealm = DynamicRealm.getInstance(conf);\ndynamicRealm.where(\"Person\").findFirst().getString(\"age\"); // getString for INTEGER field\n```\n#### Version of Realm and tooling\n\nRealm version(s): current master, 1.2.0\n\nAndroid Studio version: any\n\nWhich Android version and device: any\n", "url": "https://github.com/realm/realm-java/issues/3404", "user": "zaki50", "labels": ["T-Bug"], "created": "2016-09-05 17:41:19", "closed": "2016-10-04 07:07:50", "commits": {}, "ttf": 28.00027777777778, "commitsDetails": []}, {"title": "A module/schema must include all required classes", "body": "If class `A` links to class `B` but a module/schema does not include `B`, object store will crash during validation (calling `update_schema`). We must ensure that all required classes (direct and indirect) are included in the module/schema. If a class is missing, an exception must be thrown.\n", "url": "https://github.com/realm/realm-java/issues/3398", "user": "kneth", "labels": ["T-Bug"], "created": "2016-09-05 07:34:14", "closed": "2017-06-30 07:42:00", "commits": {"532d6262d67b7b5f76c33e286c363bf5bc42f71d": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 298.0002777777778, "commitsDetails": [{"commitHash": "532d6262d67b7b5f76c33e286c363bf5bc42f71d", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "Throwing wrong exception when trying to add new field ", "body": "```\nschema.get(\"Person\")\n  .addField(\"field_tmp\", Dog.class)\n```\n\nShould throw `Use addRealmObjectField() instead to add fields that link to other RealmObjects:`\nbut instead throws `Realm doesn't support this field type:`\n\nAlso this is not documented in the Javadoc either. \n", "url": "https://github.com/realm/realm-java/issues/3388", "user": "cmelchior", "labels": ["T-Bug"], "created": "2016-09-02 10:59:32", "closed": "2017-12-12 04:38:39", "commits": {"6f57d0c17d1942f43dc0b49ea324b8b1bc7a5a61": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "3ec45df9faf6f1727773de68bcad6fabb3a237d6": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 465.0002777777778, "commitsDetails": [{"commitHash": "6f57d0c17d1942f43dc0b49ea324b8b1bc7a5a61", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "3ec45df9faf6f1727773de68bcad6fabb3a237d6", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["45b8f40855544e4a4072d9f7bfefd0a5eb186e96"], "nameRev": "3ec45df9faf6f1727773de68bcad6fabb3a237d6 tags/v4.3.2~13", "commitMessage": "Better exception message for addField() (#5610)\n\n* Better exception message for addField()\r\n\r\nClose #3388\r\n", "commitDateTime": "2017-12-12 12:38:29", "authoredDateTime": "2017-12-12 12:38:29", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmObjectSchemaTests.java", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "realm/realm-library/src/main/java/io/realm/MutableRealmObjectSchema.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmObjectSchemaTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmObjectSchemaTests.addField_realmModelThrows()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MutableRealmObjectSchema.java", "spoonMethods": [{"spoonMethodName": "io.realm.MutableRealmObjectSchema.addField(java.lang.String,java.lang.Class,io.realm.FieldAttribute[])", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "RealmObjectSchema.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Regression issue after #3379 merged. Different default values when create with JSON Stream", "body": "This is a regression issue after #3379 merged.\n\nThe APIs to create `RealmObject` from JSON stream will have different behaviours from other APIs.\nUnderneath, it is using the non-managed object's default constructor to create an object, then set its fields from JSON. Those absent field in JSON will have the default value set by the default non-managed object's constructor.\n\nSee comments from https://github.com/realm/realm-java/pull/3379#discussion_r77316752\n\nIt looks like it only effect the `create` part, not the `update` part right?\nI see 3 choices:\n\n1) Accept the current solution and document the breaking change \n2) Rewrite `createFromJsonStream` to create JSONObject instead and return the result from `createObjectFromJson(jsonObj)`\n3) Add support for #777 \n\nFor expendiency, I would probably just go with 1) now and make an issue for looking into 2/3 in th next week or two, because we need a better solution before releasing anything publically.\n\nIf 3) is indeed fairly easy to do that would be awesome, if not I think we should do 2.\n", "url": "https://github.com/realm/realm-java/issues/3386", "user": "beeender", "labels": ["T-Bug"], "created": "2016-09-02 10:26:10", "closed": "2016-11-21 04:22:27", "commits": {}, "ttf": 79.00027777777778, "commitsDetails": []}, {"title": "[SO] Realm-Transformer doesn't work in constructor", "body": "Ported from [Stack Overflow](http://stackoverflow.com/q/39205297/2413303)\n#### Goal\n\n> What do you want to achieve?\n#### Expected Results\n\nWhen giving managed RealmObject to constructor, the value should be available through field access\n#### Actual Results\n\nThe managed RealmObject's field access returns `null`\n\nHowever, using managed RealmObject's getter/setter instead returns the proper value\n\n(In log, not in debugger)\n#### Steps & Code to Reproduce\n#### Code Sample\n\n``` java\n realm = Realm.getDefaultInstance();\n realm.executeTransaction(new Realm.Transaction() {\n      @Override\n      public void execute(Realm realm) {\n            Stock stock1 = new Stock();\n            stock1.id = \"stock1\";\n            managedStock = realm.copyToRealm(stock1);\n      }\n});\n//output here: managedStock.id = stock1\nLog.d(\"myLogs\", \"managedStock.id = \" + managedStock.id);\nGoods goods = new Goods(managedStock);\n```\n\nand\n\n``` java\npublic class Goods extends RealmObject {\n    @PrimaryKey\n    public String id;\n    public Stock stock;\n\n    public Goods() {}\n\n    public Goods(Stock s) {\n        //output here: s.id == null\n        Log.d(\"myLogs\", \"s.id == \" + s.id);\n    }\n}\n```\n\nand\n\n``` java\npublic class Stock extends RealmObject {\n    @PrimaryKey\n    public String id;\n    public String name;\n}\n```\n#### Version of Realm and tooling\n\nRealm version(s): 1.2.0\n\nAndroid Studio version: Android Studio 2.1.2\n\nWhich Android version and device: Android 5.0, Samsung Galaxy S4\n", "url": "https://github.com/realm/realm-java/issues/3361", "user": "Zhuinden", "labels": ["T-Bug"], "created": "2016-08-29 13:20:12", "closed": "2016-09-05 16:51:42", "commits": {"dab278debff9410c689720f7338321acf6ec1f21": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "66becc387bc27ca600541fb97ac0744a56887e30": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "ded798ca8d0f01e42cd8c39aafdfe38bc97eb321": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "114f11629004c1dbeadcf5d1e6e01d278be245d3": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "e4b6dc9a54b524d3e8e5a8c2a6c1d4dd325deaa4": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "65ee5a2014c7fe71b10542c9726495e83a899bfb": {"commitGHEventType": "closed", "commitUser": "zaki50"}, "84d5782b80c881709914b36b9686f0edc8bb70d2": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "dab278debff9410c689720f7338321acf6ec1f21", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "66becc387bc27ca600541fb97ac0744a56887e30", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ded798ca8d0f01e42cd8c39aafdfe38bc97eb321", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "114f11629004c1dbeadcf5d1e6e01d278be245d3", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "e4b6dc9a54b524d3e8e5a8c2a6c1d4dd325deaa4", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "65ee5a2014c7fe71b10542c9726495e83a899bfb", "commitGHEventType": "closed", "commitUser": "zaki50", "commitParents": ["43e2e6ad1348718cf6e8d2d55c5d79f80b39fc64"], "nameRev": "65ee5a2014c7fe71b10542c9726495e83a899bfb tags/v2.0.0~16^2~2^2~10", "commitMessage": "transform accesses to other model fields in model's constructors. (#3392)\n\ntransform access to other model fields in model's constructors.\r\n\r\nfixes #3361\r\n\r\n", "commitDateTime": "2016-09-05 14:30:00", "authoredDateTime": "2016-09-05 14:30:00", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm-transformer/src/main/groovy/io/realm/transformer/BytecodeModifier.groovy", "insertions": 26, "deletions": 6, "lines": 32}, {"filePath": "realm-transformer/src/test/groovy/io/realm/transformer/BytecodeModifierTest.groovy", "insertions": 69, "deletions": 23, "lines": 92}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "84d5782b80c881709914b36b9686f0edc8bb70d2", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 6, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Lint errors if minSdk < 11", "body": "Apparently Realm should work on Android all the way down to API 9 (https://realm.io/docs/java/latest/#prerequisites), but if your minSdk is below 11, you get a whole bunch of lint errors that break the build (even with a new Realm sample).\n", "url": "https://github.com/realm/realm-java/issues/3356", "user": "grandstaish", "labels": ["T-Bug"], "created": "2016-08-27 02:13:28", "closed": "2016-08-30 04:29:00", "commits": {"591bc6a9838de8f562cbc5d7b01f8e6bc9421e5f": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "8d2e3da163bbab092ca6c2980a7367c84dbad5f2": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "591bc6a9838de8f562cbc5d7b01f8e6bc9421e5f", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "8d2e3da163bbab092ca6c2980a7367c84dbad5f2", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["12b3afd343f293f8c008e8dca62f0e892b50a915"], "nameRev": "8d2e3da163bbab092ca6c2980a7367c84dbad5f2 tags/v2.0.0~16^2~2^2~14", "commitMessage": "Fix a lint error in proxy classes when the 'minSdkVersion' of user's project is smaller than 11. (#3364)\n\nfixes #3356", "commitDateTime": "2016-08-30 13:28:55", "authoredDateTime": "2016-08-30 13:28:55", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyClassGenerator.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/AllTypesRealmProxy.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/BooleansRealmProxy.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/NullTypesRealmProxy.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/SimpleRealmProxy.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmProxyClassGenerator.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.generate()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitCreateUsingJsonStream(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AllTypesRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.AllTypesRealmProxy.createUsingJsonStream(io.realm.Realm,android.util.JsonReader)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BooleansRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.BooleansRealmProxy.createUsingJsonStream(io.realm.Realm,android.util.JsonReader)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NullTypesRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.NullTypesRealmProxy.createUsingJsonStream(io.realm.Realm,android.util.JsonReader)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SimpleRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.SimpleRealmProxy.createUsingJsonStream(io.realm.Realm,android.util.JsonReader)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Improve control of [possibly flawed] RealmLog default/custom logger", "body": "#### Goal/Expected Results\n\nMore reasonable control of RealmLog.LOGGERS; mostly the ability to remove the default logger.\nRealmBase automatically adds during static initialization:\nhttps://github.com/realm/realm-java/blob/master/realm/realm-library/src/main/java/io/realm/BaseRealm.java#L80\nPossibly a RealmLog.set(Logger logger) or a RealmLog.clear() would be sufficient.\n#### Actual Results\n\nFirst of all, RealmBase's \"BuildConfig.DEBUG ? DebugAndroidLogger : ReleaseAndroidLogger\" logic is based off of \"com.getkeepsafe.relinker.BuildConfig\".\nThis logic seems like a bug...two actually.\n1) The logic should probably be based off of \"io.realm.BuildConfig\".\n2) Libraries by default build as Release, and I am assuming Realm is, so this will always evaluate to ReleaseAndroidLogger.\n\nSecond of all, RealmLog provides no way to remove this logger.\nThe result is that adding a custom logger ends up showing some duplicate messages.\n#### Steps & Code to Reproduce\n\n``` java\nif (REALM_LOG_LEVEL >= RealmLog.VERBOSE)\n{\n    if (false)\n    {\n        // Spews lots of not very useful [to me] info...\n        io.realm.internal.Util.setDebugLevel(1);\n    }\n\n    //\n    // NOTE: Realm already adds a DebugAndroidLogger or ReleaseAndroidLogger:\n    //  https://github.com/realm/realm-java/blob/master/realm/realm-library/src/main/java/io/realm/BaseRealm.java#L80\n    // But, that logic is flawed because it uses com.getkeepsafe.relinker.BuildConfig and will always compile as\n    // Release and will always add ReleaseAndroidLogger.\n    // Realm provides no way to remove this Logger.\n    //\n    AndroidLogger androidLogger = new AndroidLogger();\n    androidLogger.setMinimumLogLevel(REALM_LOG_LEVEL);\n    androidLogger.setTag(\"MYREALM\");\n    RealmLog.add(androidLogger);\n}\n```\n#### Version of Realm and tooling\n\nRealm version(s): 1.1.1\nAndroid Studio version: 2.1.3\nWhich Android version and device: N/A\n", "url": "https://github.com/realm/realm-java/issues/3326", "user": "paulpv", "labels": ["T-Bug"], "created": "2016-08-19 18:02:23", "closed": "2016-09-01 08:59:09", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "'com.intellij:annotations' lib included as generated code, causing DEX conflicts", "body": "#### Goal\n\nBuild an application that depends on Realm and an `aar` dependency that includes `com.intellij:annotations` as a dependency.\n#### Expected Results\n\nThe application builds successfully.\n#### Actual Results\n\nWhen assembling the application, I get this error.\n\n```\nFAILURE: Build failed with an exception.\n\n* What went wrong:\nExecution failed for task ':apps:questionnaire:app:transformClassesWithDexForDebug'.\n> com.android.build.api.transform.TransformException: com.android.ide.common.process.ProcessException: java.util.concurrent.ExecutionException: com.android.dex.DexException: Multiple dex files define Lorg/jetbrains/annotations/NotNull;\n```\n#### Steps & Code to Reproduce\n\nApp build file contains the following:\n\n```\nbuildscript {\n    repositories {\n        classpath 'io.realm:realm-gradle-plugin:1.1.0'\n    }\n}\n\ndependencies {\n    compile project(':path:to:library:project')\n}\n```\n\nLibrary build file contains:\n\n```\ndependencies {\n    compile 'com.intellij:annotations:12.0'\n}\n```\n#### Workaround\n\nSince Realm generates the annotations library into the `build/intermediates/transforms/RealmOptionalAPITransformer/debug/folders/1/10/realm-optional-api/org/jetbrains`, there is no way to exclude it from the classpath using Gradle's typical `exclude group: 'com.intellij', module: 'annotations'` method, so in order to fix it I've had to do:\n\n```\nconfigurations {\n    compile.exclude group: 'com.intellij', module: 'annotations'\n}\n```\n\nThis solution works, but is not ideal. If the annotations module gets an update that dependent libraries (or even my app) require, I won't be able to get it until I update to a version of realm that supplies the updated annotations library (if one even exists). I recommend adding `compile 'com.intellij:annotations:12.0` to the project through the `realm-gradle-plugin`, instead of generating a copy of the intellij library in `build/intermediates/`.\n#### Version of Realm and tooling\n\nRealm version(s):\n\nrealm-gradle-plugin 1.1.0\n", "url": "https://github.com/realm/realm-java/issues/3307", "user": "mikeholler", "labels": ["T-Bug"], "created": "2016-08-16 19:00:42", "closed": "2016-08-17 14:46:50", "commits": {"b495b77c40db4bd70e5b21343a1f4ff3edd805f2": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "78ccde519eb2982ea994bf60fc5ca83395a520d0": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "b495b77c40db4bd70e5b21343a1f4ff3edd805f2", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "78ccde519eb2982ea994bf60fc5ca83395a520d0", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["3f4f2c9ee4ddd6f90ef3341aa3fb7e0e82e21216"], "nameRev": "78ccde519eb2982ea994bf60fc5ca83395a520d0 tags/v1.2.0~2^2~1", "commitMessage": "Revert \"Remove optional APIs if dependencies don't meet (#2727)\" (#3308)\n\nThis reverts commit 6d7e9b0bf108efc3e95c8d23b2676c9aba1dc78b.\r\n\r\nOptionalAPI is not used, so just remove it to make a smaller code base.\r\nAlso to close #3307.", "commitDateTime": "2016-08-19 11:48:56", "authoredDateTime": "2016-08-19 11:48:56", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "build.gradle", "insertions": 0, "deletions": 9, "lines": 9}, {"filePath": "gradle-plugin/src/main/groovy/io/realm/gradle/Realm.groovy", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "gradle-plugin/src/test/groovy/io/realm/gradle/PluginTest.groovy", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "integration-tests/build.gradle", "insertions": 0, "deletions": 34, "lines": 34}, {"filePath": "integration-tests/gradle/wrapper/gradle-wrapper.jar", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "integration-tests/gradle/wrapper/gradle-wrapper.properties", "insertions": 0, "deletions": 6, "lines": 6}, {"filePath": "integration-tests/gradlew", "insertions": 0, "deletions": 160, "lines": 160}, {"filePath": "integration-tests/gradlew.bat", "insertions": 0, "deletions": 90, "lines": 90}, {"filePath": "integration-tests/optionalAPIExists/.gitignore", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "integration-tests/optionalAPIExists/build.gradle", "insertions": 0, "deletions": 27, "lines": 27}, {"filePath": "integration-tests/optionalAPIExists/proguard-rules.pro", "insertions": 0, "deletions": 17, "lines": 17}, {"filePath": "integration-tests/optionalAPIExists/src/androidTest/java/io/realm/tests/optionalapiexists/ApplicationTest.java", "insertions": 0, "deletions": 85, "lines": 85}, {"filePath": "integration-tests/optionalAPIExists/src/main/AndroidManifest.xml", "insertions": 0, "deletions": 18, "lines": 18}, {"filePath": "integration-tests/optionalAPIExists/src/main/java/io/realm/tests/optionalapiexists/Dog.java", "insertions": 0, "deletions": 23, "lines": 23}, {"filePath": "integration-tests/optionalAPIExists/src/main/java/io/realm/tests/optionalapiexists/MainActivity.java", "insertions": 0, "deletions": 27, "lines": 27}, {"filePath": "integration-tests/optionalAPIRemoved/.gitignore", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "integration-tests/optionalAPIRemoved/build.gradle", "insertions": 0, "deletions": 26, "lines": 26}, {"filePath": "integration-tests/optionalAPIRemoved/proguard-rules.pro", "insertions": 0, "deletions": 17, "lines": 17}, {"filePath": "integration-tests/optionalAPIRemoved/src/androidTest/java/io/realm/tests/removeoptionalapitest/ApplicationTest.java", "insertions": 0, "deletions": 114, "lines": 114}, {"filePath": "integration-tests/optionalAPIRemoved/src/main/AndroidManifest.xml", "insertions": 0, "deletions": 19, "lines": 19}, {"filePath": "integration-tests/optionalAPIRemoved/src/main/java/io/realm/tests/removeoptionalapitest/Dog.java", "insertions": 0, "deletions": 23, "lines": 23}, {"filePath": "integration-tests/optionalAPIRemoved/src/main/java/io/realm/tests/removeoptionalapitest/MainActivity.java", "insertions": 0, "deletions": 27, "lines": 27}, {"filePath": "integration-tests/settings.gradle", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "realm-annotations/src/main/java/io/realm/annotations/internal/OptionalAPI.java", "insertions": 0, "deletions": 16, "lines": 16}, {"filePath": "realm-transformer/build.gradle", "insertions": 0, "deletions": 7, "lines": 7}, {"filePath": "realm-transformer/src/main/kotlin/io/realm/transformer/RealmOptionalAPITransformer.kt", "insertions": 0, "deletions": 92, "lines": 92}, {"filePath": "realm-transformer/src/main/kotlin/io/realm/transformer/util/MutableCollectionExt.kt", "insertions": 0, "deletions": 61, "lines": 61}, {"filePath": "realm-transformer/src/main/kotlin/io/realm/transformer/util/Utils.kt", "insertions": 0, "deletions": 31, "lines": 31}, {"filePath": "realm/realm-library/src/main/java/io/realm/BaseRealm.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/DynamicRealm.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/Realm.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmObject.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmResults.java", "insertions": 0, "deletions": 3, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ApplicationTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.tests.removeoptionalapitest.ApplicationTest", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Dog.java", "spoonMethods": [{"spoonMethodName": "io.realm.tests.removeoptionalapitest.Dog", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MainActivity.java", "spoonMethods": [{"spoonMethodName": "io.realm.tests.removeoptionalapitest.MainActivity", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "OptionalAPI.java", "spoonMethods": [{"spoonMethodName": "io.realm.annotations.internal", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "BaseRealm.java", "spoonMethods": [{"spoonMethodName": "io.realm.BaseRealm.asObservable()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DynamicRealm.java", "spoonMethods": [{"spoonMethodName": "io.realm.DynamicRealm.asObservable()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Realm.java", "spoonMethods": [{"spoonMethodName": "io.realm.Realm.asObservable()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RealmObject.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmObject.asObservable()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RealmResults.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmResults.asObservable()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "A/libc: Fatal signal 11 (SIGSEGV), code 1, fault addr 0x69 in tid 3715", "body": "#### Goal\n\nClearer error message.\n\nI had accidentally auto-completed a `getString` as a `getShort` somewhere in my codebase.  Took a bit of time to track it down due to mystical error message.\n\nThis is using a `DynamicRealm`.\n#### Expected Results\n\nError that says something like `Type error: cannot convert string field to short`\n#### Actual Results\n\nGet this single line error:\n\n```\nA/libc: Fatal signal 11 (SIGSEGV), code 1, fault addr 0x69 in tid 3715\n```\n#### Steps & Code to Reproduce\n\nCall `getShort(\"field\")` on a field defined as `schema.addField(\"field\", String.class)`.\n#### Code Sample\n\n``` java\n\n> Your code here. Bigger samples should ideally be as separate Android Studio project, \n> in gists/repositories or privately at help@realm.io)\n\n```\n#### Version of Realm and tooling\n\nRealm version(s): **1.1.1**\n\nAndroid Studio version: **2.2 Beta**\n\nWhich Android version and device: **Android 5.1** on a Huawei Mate S\n", "url": "https://github.com/realm/realm-java/issues/3294", "user": "Queatz", "labels": ["T-Bug"], "created": "2016-08-16 04:23:59", "closed": "2016-08-17 10:41:44", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "FATAL columnIndex is less than 0", "body": "#### Goal\n\nQuery on brand new DynamicRealm\n#### Expected Results\n\nGet an error similar to `Table \"Thing\" does not exist in schema`\n#### Actual Results\n\nFatal crash `java.lang.ArrayIndexOutOfBoundsException: columnIndex is less than 0.`\n#### Steps & Code to Reproduce\n\nCreate a new DynamicRealm\nRun something like: `dynamicRealm.where(\"Thing\").equalTo(\"id\", id).findFirst();`\n#### Version of Realm and tooling\n\nRealm version(s): 1.1.1\n\nAndroid Studio version: 2.2 Beta\n\nWhich Android version and device: Android 5.1 on Huawei Mate S\n", "url": "https://github.com/realm/realm-java/issues/3292", "user": "Queatz", "labels": ["T-Bug"], "created": "2016-08-15 02:55:19", "closed": "2016-08-16 10:58:46", "commits": {"ecfc58a18e990977bd58f045c4a38524a92d3332": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "6f6105945ab3d25d9322cf05ac0cce27fb6336a5": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "ecfc58a18e990977bd58f045c4a38524a92d3332", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "6f6105945ab3d25d9322cf05ac0cce27fb6336a5", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["27cc281605655c7ba2bc8c8a3a2710c1f5a21526"], "nameRev": "6f6105945ab3d25d9322cf05ac0cce27fb6336a5 tags/v1.2.0~2^2~12", "commitMessage": "getFieldIndex returns null for non-existing field (#3295)\n\nClose #3292", "commitDateTime": "2016-08-16 18:58:09", "authoredDateTime": "2016-08-16 18:58:09", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/DynamicRealmTests.java", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmObjectSchemaTests.java", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmQuery.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DynamicRealmTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.DynamicRealmTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmTests.equalTo_noFieldObjectShouldThrow()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmObjectSchemaTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmObjectSchemaTests.getFieldIndex()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmObjectSchema.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmObjectSchema.getColumnIndices(java.lang.String,io.realm.RealmFieldType[])", "TOT": 7, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 2}, {"spoonMethodName": "io.realm.RealmObjectSchema.DynamicColumnMap.get(java.lang.Object)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RealmQuery.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmQuery.getColumnIndexForSort(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Updating Realm instance in NotificationListenerService", "body": "http://stackoverflow.com/questions/38833163/realmchangelistener-does-not-get-called-when-realm-gets-updated-in-notificationl\n\nI brought this over because `waitForChange()` froze, and `refresh()` was removed, so the guy doesn't know what to do. This could easily be a problem with how `waitForChange()` works.\n\nMy wild guess for a possible solution is switching to a HandlerThread with `setAutorefresh(true)`, or forcing an update in the Handler Controller.\n", "url": "https://github.com/realm/realm-java/issues/3272", "user": "Zhuinden", "labels": ["Reproduction-Required", "T-Bug"], "created": "2016-08-09 05:38:54", "closed": "2017-01-26 11:35:24", "commits": {}, "ttf": 170.00027777777777, "commitsDetails": []}, {"title": "RealmResults in a function did not have value.", "body": "#### Goal\n\nUse RealmResults in a function.\nBut RealmResults in a function did not have value.\n#### Expected Results\n\n> rspMember.boxId = 12560632\n#### Actual Results\n\n>  rspMember.boxId = 0\n#### Steps & Code to Reproduce\n\n> =============rspMember.boxId===============12560632\n> =============members.get(i).boxId===============0\n#### Code Sample\n\n``` java\n\npublic class TribeMember extends RealmObject {\n    @Ignore\n    public static final int TRIBE_NOTHING = -1;\n    @Ignore\n    public static final int TRIBE_MASTER = 0;\n    @Ignore\n    public static final int TRIBE_MEMBER = 1;\n    @Ignore\n    public static final int TRIBE_MANAGER = 2;\n    @Ignore\n    public static final int SET_MANAGER = 0;\n    @Ignore\n    public static final int DEL_MANAGER = 1;\n    @PrimaryKey\n    public long boxId;\n    public short identity;\n    public String nickName;\n    public int sex;\n    public String avatarUrl;\n    public int status;\n\npublic <E extends RealmObject> Observable<RealmResults<E>> getAllAsync(Class<E> clazz) {\n        return mRealm.where(clazz).findAllAsync().asObservable().filter(RealmResults::isLoaded);\n    }\n\ntribeManager.getAllAsync(TribeMember.class).observeOn(AndroidSchedulers.mainThread())\n                .subscribe(this::setMemberView, Throwable::printStackTrace);\n\nprivate void setMemberView(List<TribeMember> rspMembers) {\n        for (TribeMember rspMember : rspMembers) {\n            LogUtils.e(\"=============rspMember.boxId===============\"+rspMember.boxId);\n        }\n        getIdentity(rspMembers);\n}\n\npublic static void getIdentity(List<TribeMember> members){\n        for (int i=0;i<members.size();i++) {\nLogUtils.e(\"=============members.get(i).boxId===============\"+members.get(i).boxId);\n        }\n    }\n\n```\n#### Version of Realm and tooling\n\nRealm version(s): 1.1.0\n\nAndroid Studio version: 2.1.2\n\nWhich Android version and device: android 6.0,nexus 6", "url": "https://github.com/realm/realm-java/issues/3243", "user": "lengyue524", "labels": ["O-Community", "T-Bug"], "created": "2016-08-03 06:53:42", "closed": "2019-11-27 20:59:41", "commits": {}, "ttf": 1211.0002777777777, "commitsDetails": []}, {"title": "Add quotes around field names in RealmProxy exceptions", "body": "**Feature Request**\n#### Goal\n\nRead an exception regarding a field and determing which field is being referred to. The field's name is `code`.\n#### Expected Results\n\nImmediate recognition that the problematic field is `code`.\n#### Actual Results\n\nTemporary confusion about message.\n\nIt is arguable that `code` is a bad name for a field, but I'm sure there are others that are just as problematic.\n\nI ask that you simply change the exception string from:\n\n``` java\nthrow new IllegalArgumentException(\"Trying to set non-nullable field code to null.\");\n```\n\nto:\n\n``` java\nthrow new IllegalArgumentException(\"Trying to set non-nullable field 'code' to null.\");\n```\n\nThis is the error I came across, but you may want to go through other generated error messages to see if there is a similar issue.\n", "url": "https://github.com/realm/realm-java/issues/3217", "user": "spl", "labels": ["T-Bug", "T-Doc"], "created": "2016-07-27 08:08:47", "closed": "2016-07-29 01:36:43", "commits": {"583539873616cad5bb1b29a9c06fcc84b8c9163d": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "b5becc4861d335a1dde71081cd51e846e3e6f7d1": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "583539873616cad5bb1b29a9c06fcc84b8c9163d", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b5becc4861d335a1dde71081cd51e846e3e6f7d1", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["00d6a37e116665be53fc30bcab61eadaf390dae0"], "nameRev": "b5becc4861d335a1dde71081cd51e846e3e6f7d1 tags/v1.1.1~10", "commitMessage": "Add quotes around terms in exceptions message (#3221)\n\nClose #3217", "commitDateTime": "2016-07-29 09:36:33", "authoredDateTime": "2016-07-29 09:36:33", "commitGitStats": [{"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/Constants.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmJsonTypeHelper.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyClassGenerator.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/AllTypesRealmProxy.java", "insertions": 11, "deletions": 11, "lines": 22}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/BooleansRealmProxy.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/NullTypesRealmProxy.java", "insertions": 11, "deletions": 11, "lines": 22}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/SimpleRealmProxy.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Constants.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.Constants", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmJsonTypeHelper.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.RealmJsonTypeHelper.1.emitGetObjectWithPrimaryKeyValue(java.lang.String,java.lang.String,java.lang.String,com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmJsonTypeHelper.2.emitGetObjectWithPrimaryKeyValue(java.lang.String,java.lang.String,java.lang.String,com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmProxyClassGenerator.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitValidateTableMethod(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitAccessors(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AllTypesRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.AllTypesRealmProxy.realmSet$columnDate(java.util.Date)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.AllTypesRealmProxy.realmSet$columnBinary(byte[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.AllTypesRealmProxy.validateTable(io.realm.internal.ImplicitTransaction)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.AllTypesRealmProxy.createOrUpdateUsingJsonObject(io.realm.Realm,org.json.JSONObject,boolean)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.AllTypesRealmProxy.createUsingJsonStream(io.realm.Realm,android.util.JsonReader)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BooleansRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.BooleansRealmProxy.validateTable(io.realm.internal.ImplicitTransaction)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BooleansRealmProxy.createOrUpdateUsingJsonObject(io.realm.Realm,org.json.JSONObject,boolean)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BooleansRealmProxy.createUsingJsonStream(io.realm.Realm,android.util.JsonReader)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NullTypesRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.NullTypesRealmProxy.realmSet$fieldStringNotNull(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.NullTypesRealmProxy.realmSet$fieldBooleanNotNull(java.lang.Boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.NullTypesRealmProxy.realmSet$fieldBytesNotNull(byte[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.NullTypesRealmProxy.realmSet$fieldByteNotNull(java.lang.Byte)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.NullTypesRealmProxy.realmSet$fieldShortNotNull(java.lang.Short)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.NullTypesRealmProxy.realmSet$fieldIntegerNotNull(java.lang.Integer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.NullTypesRealmProxy.realmSet$fieldLongNotNull(java.lang.Long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.NullTypesRealmProxy.realmSet$fieldFloatNotNull(java.lang.Float)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.NullTypesRealmProxy.realmSet$fieldDoubleNotNull(java.lang.Double)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.NullTypesRealmProxy.realmSet$fieldDateNotNull(java.util.Date)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.NullTypesRealmProxy.validateTable(io.realm.internal.ImplicitTransaction)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SimpleRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.SimpleRealmProxy.validateTable(io.realm.internal.ImplicitTransaction)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.SimpleRealmProxy.createOrUpdateUsingJsonObject(io.realm.Realm,org.json.JSONObject,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.SimpleRealmProxy.createUsingJsonStream(io.realm.Realm,android.util.JsonReader)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "@PrimaryKey is not handled correctly when using insert()", "body": "#### Steps & Code to Reproduce\n\n``` java\n\npublic class PrimaryKeyActivity extends Activity {\n    private static final String TAG = PrimaryKeyActivity.class.getSimpleName();\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        final Car car = new Car();\n        car.wheels = new RealmList<>(new Wheel(), new Wheel());\n\n        final Realm realm = Realm.getDefaultInstance();\n        Log.d(TAG, \"Number of wheels with id 1 before inserting: \" + realm.where(Wheel.class).equalTo(\"id\", 1).count());\n        realm.beginTransaction();\n        realm.insert(car);\n        realm.commitTransaction();\n        Log.d(TAG, \"Number of wheels with id 1 after inserting: \" + realm.where(Wheel.class).equalTo(\"id\", 1).count());\n        realm.close();\n    }\n}\n\npublic class Car extends RealmObject {\n    @PrimaryKey\n    private long id = 42;\n    public RealmList<Wheel> wheels;\n}\n\npublic class Wheel extends RealmObject {\n    @PrimaryKey\n    private long id = 1;\n}\n\n```\n#### Expected log output:\n\n> D/PrimaryKeyActivity: Number of wheels with id 1 before inserting: 0\n> D/PrimaryKeyActivity: Number of wheels with id 1 after inserting: 1\n#### Actiual log output:\n\n> D/PrimaryKeyActivity: Number of wheels with id 1 before inserting: 0\n> D/PrimaryKeyActivity: Number of wheels with id 1 after inserting: **2**\n\nAs you can see, we have two objects with the same primary key.\nNote that `insertOrUpdate()` and `copyToRealm()` work correctly.\n#### Version of Realm and tooling\n\nRealm version(s): 1.1.0\n\nAndroid Studio version: 2.1.2\n\nWhich Android version and device: Android 4.2.2 on Samsung GT-I9105\n", "url": "https://github.com/realm/realm-java/issues/3212", "user": "optisamit", "labels": ["T-Bug"], "created": "2016-07-25 09:58:08", "closed": "2016-08-03 08:18:15", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "isLoaded() seems to be returning an incorrect value.", "body": "I have created a project to replicate the issue I am having. [https://github.com/chrisolsen/realm-issue](https://github.com/chrisolsen/realm-issue)\n\nIn the `onChange` listener the RealmObject's `isLoaded()` method is returning a true value, but when I then try to bind the data an IllegalStateException is thrown telling me that I should first check it is loaded.\n\nIf you run the linked android project the bug will only be seen on the first launch, after that a row will exist in the db thereby avoiding the issue.\n#### Expected Results\n\n`isLoaded` should initially return false, until the IntentService inserts the data.\n#### Actual Results\n\n`isLoaded()` returns `true` before any data exists in the db, causing a crash\n\n```\n07-20 10:14:46.833 5112-5112/com.example.chris.test D/User null?: no\n07-20 10:14:46.833 5112-5112/com.example.chris.test D/User loaded?: true\n07-20 10:14:46.836 5112-5262/com.example.chris.test D/onHandleIntent: in the service\n07-20 10:14:46.863 5112-5112/com.example.chris.test D/AndroidRuntime: Shutting down VM\n\n\n                                                                      --------- beginning of crash\n07-20 10:14:46.863 5112-5112/com.example.chris.test E/AndroidRuntime: FATAL EXCEPTION: main\n                                                                      Process: com.example.chris.test, PID: 5112\n                                                                      java.lang.IllegalStateException: Can't access a row that hasn't been loaded, make sure the instance is loaded by calling RealmObject.isLoaded().\n                                                                          at io.realm.internal.Row$1.getString(Row.java:176)\n                                                                          at io.realm.UserRealmProxy.realmGet$name(UserRealmProxy.java:60)\n                                                                          at com.example.chris.test.UserData.getName(UserData.java:11)\n                                                                          at com.example.chris.test.databinding.ActivityMainBinding.executeBindings(ActivityMainBinding.java:96)\n                                                                          at android.databinding.ViewDataBinding.executePendingBindings(ViewDataBinding.java:355)\n                                                                          at android.databinding.ViewDataBinding$6.run(ViewDataBinding.java:172)\n                                                                          at android.databinding.ViewDataBinding$7.doFrame(ViewDataBinding.java:238)\n                                                                          at android.view.Choreographer$CallbackRecord.run(Choreographer.java:856)\n                                                                          at android.view.Choreographer.doCallbacks(Choreographer.java:670)\n                                                                          at android.view.Choreographer.doFrame(Choreographer.java:603)\n                                                                          at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:844)\n                                                                          at android.os.Handler.handleCallback(Handler.java:739)\n                                                                          at android.os.Handler.dispatchMessage(Handler.java:95)\n                                                                          at android.os.Looper.loop(Looper.java:148)\n                                                                          at android.app.ActivityThread.main(ActivityThread.java:5417)\n                                                                          at java.lang.reflect.Method.invoke(Native Method)\n                                                                          at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)\n                                                                          at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)\n```\n#### Steps & Code to Reproduce\n\nRun the linked app. The first time the app is run the above crash will occur, after that the app will work as intended.\n#### Code Sample\n\nSee [https://github.com/chrisolsen/realm-issue](https://github.com/chrisolsen/realm-issue)\n#### Version of Realm and tooling\n\nRealm version(s): 1.1.0\n\nAndroid Studio version: 2.1.2\n\nWhich Android version and device: Nexus5 emulator (android 6.0), Nexus 7 device (android 6.0)\n", "url": "https://github.com/realm/realm-java/issues/3200", "user": "chrisolsen", "labels": ["T-Bug"], "created": "2016-07-20 16:43:14", "closed": "2016-08-03 08:57:53", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "RealmError: Unrecoverable error. mmap() failed: Bad file descriptor in io_realm_internal_SharedGroup.cpp line 113", "body": "#### Goal\n\nGet Realm Instance\n#### Expected Results\n\nRealm Instance is returned\n#### Actual Results\n\nCaused by io.realm.exceptions.RealmError: Unrecoverable error. mmap() failed: Bad file descriptor in io_realm_internal_SharedGroup.cpp line 113\n       at io.realm.internal.SharedGroup.createNativeWithImplicitTransactions(SharedGroup.java)\n       at io.realm.internal.SharedGroup.<init>(SharedGroup.java:64)\n       at io.realm.internal.SharedGroupManager.<init>(SharedGroupManager.java:49)\n       at io.realm.BaseRealm.<init>(BaseRealm.java:76)\n       at io.realm.Realm.<init>(Realm.java:138)\n       at io.realm.Realm.createAndValidate(Realm.java:268)\n       at io.realm.Realm.createInstance(Realm.java:248)\n       at io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:114)\n       at io.realm.Realm.getInstance(Realm.java:213)\n       at com.myapp,MyOperation.getRealm(MyOperation.java:79)\n#### Steps & Code to Reproduce\n\nHappened once for a user in production, was unable to reproduce\n#### Version of Realm and tooling\n\nRealm version(s): 0.88.3\n\nAndroid Studio version: 2.1.1\n\nWhich Android version and device: Nexus 5X, Android N", "url": "https://github.com/realm/realm-java/issues/3179", "user": "GaborPeto", "labels": ["O-Community", "Pipeline-On-Hold", "Reproduction-Required", "T-Bug"], "created": "2016-07-13 09:24:32", "closed": "2019-11-27 16:12:44", "commits": {}, "ttf": 1232.0002777777777, "commitsDetails": []}, {"title": "Blackberry Z10: Function not implemented in io_realm_internal_SharedGroup.cpp line 113", "body": "We got a lone wolf crash. Did not encounter any repeating or similar crashes before. \n\nMaybe related to https://github.com/realm/realm-java/issues/1380 and recent core/jni changes in master.\n\nBlackberry Z10 \nAndroid Version: 4.3\nRealm Version: 1.1.1-SNAPSHOT (end of July 8th)\n\nNon-fatal Exception: io.realm.exceptions.RealmError: Unrecoverable error. Function not implemented in io_realm_internal_SharedGroup.cpp line 113\n       at io.realm.internal.SharedGroup.createNativeWithImplicitTransactions(Unknown Source)\n       at io.realm.internal.SharedGroup.openSharedGroupOrFail(Unknown Source:95)\n       at io.realm.internal.SharedGroup.<init>(Unknown Source:74)\n       at io.realm.internal.SharedGroupManager.<init>(Unknown Source:3126)\n", "url": "https://github.com/realm/realm-java/issues/3178", "user": "diegomontoya", "labels": ["T-Bug"], "created": "2016-07-13 06:48:25", "closed": "2016-08-05 10:48:45", "commits": {}, "ttf": 23.00027777777778, "commitsDetails": []}, {"title": "Transaction state checking is missing for bulk insertion", "body": "And it is definitely necessary checking.\n", "url": "https://github.com/realm/realm-java/issues/3173", "user": "beeender", "labels": ["T-Bug"], "created": "2016-07-12 08:23:39", "closed": "2016-08-02 03:21:32", "commits": {"da4ec8dd9328d6bb223d8d06f24477a780ece8da": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "1e4407a8fa2a7dbeff3ab258d56f5eeb815492c4": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "78a1efe46ae6a8af23fdd90402369eb79a8cf1ff": {"commitGHEventType": "referenced", "commitUser": "cmelchior"}}, "ttf": 20.00027777777778, "commitsDetails": [{"commitHash": "da4ec8dd9328d6bb223d8d06f24477a780ece8da", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1e4407a8fa2a7dbeff3ab258d56f5eeb815492c4", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["60fdc890dcf31cc30b29fec1e80762f1798b9bce"], "nameRev": "1e4407a8fa2a7dbeff3ab258d56f5eeb815492c4 tags/v1.1.1~7", "commitMessage": "Check transaction state for buld insertion (#3228)\n\n* Throws if they are not called in a transaction.\r\n* Test cases for buld insertion thread checking.\r\n* Lint warnings fix.\r\n\r\nClose #3173\r\n", "commitDateTime": "2016-08-02 11:20:51", "authoredDateTime": "2016-08-02 11:20:51", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/BulkInsertTests.java", "insertions": 36, "deletions": 6, "lines": 42}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmTests.java", "insertions": 17, "deletions": 1, "lines": 18}, {"filePath": "realm/realm-library/src/main/java/io/realm/BaseRealm.java", "insertions": 19, "deletions": 4, "lines": 23}, {"filePath": "realm/realm-library/src/main/java/io/realm/Realm.java", "insertions": 12, "deletions": 5, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BulkInsertTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.BulkInsertTests.setUp()", "TOT": 9, "UPD": 1, "INS": 1, "MOV": 6, "DEL": 1}, {"spoonMethodName": "io.realm.BulkInsertTests", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.BulkInsertTests.insert_collection_notInTransaction()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insert_object_notInTransaction()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdate_collection_notInTransaction()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdate_object_notInTransaction()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm_RealmModel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdateToRealm_NullTypes()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm_NullPrimaryKey()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdateToRealm()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdateToRealm_list()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RealmTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmTests.Method", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.runMethodOnWrongThread(io.realm.RealmTests$Method).1.call()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseRealm.java", "spoonMethods": [{"spoonMethodName": "io.realm.BaseRealm", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BaseRealm.checkIfValidAndInTransaction()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Realm.java", "spoonMethods": [{"spoonMethodName": "io.realm.Realm.insert(java.util.Collection)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.insert(io.realm.RealmModel)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.insertOrUpdate(java.util.Collection)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.insertOrUpdate(io.realm.RealmModel)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "78a1efe46ae6a8af23fdd90402369eb79a8cf1ff", "commitGHEventType": "referenced", "commitUser": "cmelchior", "commitParents": ["e5c18eb2506388373b4bac13886b3d480c8d33a2", "da21c0e578a879624f1535f02484df2d1750576a"], "nameRev": "78a1efe46ae6a8af23fdd90402369eb79a8cf1ff tags/v1.2.0~26", "commitMessage": "Merge pull request #3250 from realm/merge-f3b025-to-master\n\n* Check transaction state for buld insertion (#3228)\r\n\r\n* Throws if they are not called in a transaction.\r\n* Test cases for buld insertion thread checking.\r\n* Lint warnings fix.\r\n\r\nClose #3173\r\n\r\n* Clarify how insertOrUpdate behave for objects with primary keys. (#3241)\r\n\r\n* Missing transaction in threading example (#3245)\r\n\r\nClose #3244\r\n\r\n* insert(): Correctly detect multiple objects with the same primary key  (#3239)\r\n\r\n* Fix isLoaded JavaDoc (#3240)\r\n", "commitDateTime": "2016-08-03 11:48:09", "authoredDateTime": "2016-08-03 11:48:09", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "examples/threadExample/src/main/java/io/realm/examples/threads/PassingObjectsFragment.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyClassGenerator.java", "insertions": 71, "deletions": 103, "lines": 174}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/AllTypesRealmProxy.java", "insertions": 35, "deletions": 25, "lines": 60}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/BulkInsertTests.java", "insertions": 49, "deletions": 21, "lines": 70}, {"filePath": "realm/realm-library/src/main/java/io/realm/Realm.java", "insertions": 21, "deletions": 4, "lines": 25}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmObject.java", "insertions": 66, "deletions": 6, "lines": 72}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/Row.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/Table.java", "insertions": 9, "deletions": 3, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PassingObjectsFragment.java", "spoonMethods": [{"spoonMethodName": "io.realm.examples.threads.PassingObjectsFragment.onDestroy()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.examples.threads.PassingObjectsFragment.onDestroy().5.execute(io.realm.Realm)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmProxyClassGenerator.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitInsertMethod(com.squareup.javawriter.JavaWriter)", "TOT": 8, "UPD": 2, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitInsertListMethod(com.squareup.javawriter.JavaWriter)", "TOT": 8, "UPD": 2, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitInsertOrUpdateListMethod(com.squareup.javawriter.JavaWriter)", "TOT": 45, "UPD": 5, "INS": 2, "MOV": 36, "DEL": 2}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitInsertOrUpdateMethod(com.squareup.javawriter.JavaWriter)", "TOT": 39, "UPD": 4, "INS": 2, "MOV": 29, "DEL": 4}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.addPrimaryKeyCheckIfNeeeded(io.realm.processor.ClassMetaData,boolean,com.squareup.javawriter.JavaWriter)", "TOT": 10, "UPD": 0, "INS": 10, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AllTypesRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.AllTypesRealmProxy.insert(io.realm.Realm,some.test.AllTypes,java.util.Map)", "TOT": 15, "UPD": 6, "INS": 4, "MOV": 3, "DEL": 2}, {"spoonMethodName": "io.realm.AllTypesRealmProxy.insertOrUpdate(io.realm.Realm,some.test.AllTypes,java.util.Map)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "io.realm.AllTypesRealmProxy.insertOrUpdate(io.realm.Realm,java.util.Iterator,java.util.Map)", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 3}, {"spoonMethodName": "io.realm.AllTypesRealmProxy.insert(io.realm.Realm,java.util.Iterator,java.util.Map)", "TOT": 16, "UPD": 2, "INS": 6, "MOV": 5, "DEL": 3}]}, {"spoonFilePath": "BulkInsertTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm_RealmModel()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm_InvalidRealmModel()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdateToRealm_NullTypes()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm_CyclicType()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdateToRealm_CyclicType()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm_NullPrimaryKey()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdateToRealm()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm_list()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm_emptyList()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm_emptyListWithCompositeMediator()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm_emptyListWithFilterableMediator()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdateToRealm_list()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdateToRealm_emptyList()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdateToRealm_emptyListWithCompositeMediator()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdateToRealm_emptyListWithFilterableMediator()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.testObjectNull()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.testListNull()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.testListNullElement()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.testManagedObject()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.linkingManagedToUnmanagedObject()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insert_duplicatedPrimaryKeyFails()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Realm.java", "spoonMethods": []}, {"spoonFilePath": "RealmObject.java", "spoonMethods": []}, {"spoonFilePath": "Row.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.1", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Table.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.Table.nativeFindFirstNull(long,long)", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.Table.throwDuplicatePrimaryKeyException(java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.Table.addEmptyRow()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "io.realm.internal.Table.addEmptyRowWithPrimaryKey(java.lang.Object)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "io.realm.internal.Table.checkStringValueIsLegal(long,long,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.Table.checkIntValueIsLegal(long,long,long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.Table.checkDuplicatedNullForPrimaryKeyValue(long,long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.Table.findFirstNull(long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Error: Operation not permitted in io_realm_internal_SharedGroup.cpp", "body": "#### Goal\n\n> What do you want to achieve?\n#### Actual Results\n\nio.realm.exceptions.RealmError: Unrecoverable error. Operation not permitted in io_realm_internal_SharedGroup.cpp line 113\n    at io.realm.internal.SharedGroup.createNativeWithImplicitTransactions(Native Method)\n    at io.realm.internal.SharedGroup.openSharedGroupOrFail(SharedGroup.java:95)\n    at io.realm.internal.SharedGroup.&lt;init&gt;(SharedGroup.java:74)\n    at io.realm.internal.SharedGroupManager.&lt;init&gt;(SharedGroupManager.java:49)\n    at io.realm.BaseRealm.&lt;init&gt;(BaseRealm.java:81)\n    at io.realm.Realm.&lt;init&gt;(Realm.java:140)\n    at io.realm.Realm.createAndValidate(Realm.java:240)\n    at io.realm.Realm.createInstance(Realm.java:220)\n    at io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:126)\n    at io.realm.Realm.getDefaultInstance(Realm.java:166)\n    at br.com.jbsoft.mobile.di.modules.ProviderModule.provideRealm(ProviderModule.java:28)\n    at br.com.jbsoft.mobile.di.modules.ProviderModule_ProvideRealmFactory.get(ProviderModule_ProvideRealmFactory.java:19)\n    at br.com.jbsoft.mobile.di.modules.ProviderModule_ProvideRealmFactory.get(ProviderModule_ProvideRealmFactory.java:8)\n    at br.com.jbsoft.mobile.models.ControleUsuario_MembersInjector.injectMembers(ControleUsuario_MembersInjector.java:33)\n    at br.com.jbsoft.mobile.models.ControleUsuario_MembersInjector.injectMembers(ControleUsuario_MembersInjector.java:9)\n    at br.com.jbsoft.mobile.di.components.DaggerProviderComponent.inject(DaggerProviderComponent.java:243)\n    at br.com.jbsoft.mobile.models.ControleUsuario.inject(ControleUsuario.java:31)\n    at br.com.jbsoft.mobile.models.ControleUsuario.getUsuario(ControleUsuario.java:35)\n    at br.com.jbsoft.mobile.views.Main.onCreate(Main.java:59)\n    at br.com.jbsoft.mobile.componentes.BaseActivity.onCreate(BaseActivity.java:86)\n    at android.app.Activity.performCreate(Activity.java:6500)\n    at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1120)\n    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3072)\n    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3218)\n    at android.app.ActivityThread.access$1000(ActivityThread.java:198)\n    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1676)\n    at android.os.Handler.dispatchMessage(Handler.java:102)\n    at android.os.Looper.loop(Looper.java:145)\n    at android.app.ActivityThread.main(ActivityThread.java:6837)\n    at java.lang.reflect.Method.invoke(Native Method)\n    at java.lang.reflect.Method.invoke(Method.java:372)\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1404)\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1199)\n#### Steps & Code to Reproduce\n\n> Just start the application and get the exception :[\n#### Code Sample\n\nMy config\n\n``` java\n        RealmConfiguration configuration = new RealmConfiguration\n                .Builder(this, new File(getCaminhoDB(Boolean.FALSE)))\n                .name(Constantes.arquivos.DB_REALM_FINAL)\n               .encryptionKey(Preferencias.getInstance().getDbk())\n                .schemaVersion(BuildConfig.DB_VERSION)\n                .modules(new InitialVersion())\n                .migration(new MigrationDB())\n                .build();\n\n        Realm.setDefaultConfiguration(configuration);\n        RealmLog.add(new DebugAndroidLogger());\n\n\n```\n\nand getCaminhoDB:\n\n``` java\n  private static String getCaminhoDB(@NonNull Context context) {\n        if (isExternalStorageWritable()) {\n            return context.getExternalFilesDir(\"database\").toString();\n        } else {\n            return context.getFilesDir().getAbsolutePath();\n        }\n    }\n\n```\n\ngetKeyDef():\n\n``` java\n\n    public static byte[] getKeyDef() {\n        byte[] key = new byte[64];\n        String s = \"***********************************************************************\";\n        try {\n            new SecureRandom(s.getBytes(\"us-ascii\")).nextBytes(key);\n        } catch (UnsupportedEncodingException e) {\n            e.printStackTrace();\n        }\n        return key;\n    }\n```\n#### Version of Realm and tooling\n\nRealm version(s): 1.1.0\n\nAndroid Studio version: 2.1.2\n\nWhich Android version and device: I test with Emulator (Android 6.0) and Xiaomi redmi 2 prime (Android 4.4)\n", "url": "https://github.com/realm/realm-java/issues/3140", "user": "snakeice", "labels": ["T-Bug"], "created": "2016-07-05 19:06:10", "closed": "2016-10-18 02:42:26", "commits": {"0dbb4312f432d74e779634cde256b5483448c697": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "88dd96332d19960c27ed3ba83864581041cb4a62": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 104.00027777777778, "commitsDetails": [{"commitHash": "0dbb4312f432d74e779634cde256b5483448c697", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "88dd96332d19960c27ed3ba83864581041cb4a62", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["1c8d6960f573c0bea5883415bbfcced7764c99c4"], "nameRev": "88dd96332d19960c27ed3ba83864581041cb4a62 tags/v2.1.0~8^2~3", "commitMessage": "allow to put Realm database file on external storage. (#3591)\n\n* set the path of the directory of named pipes to fix #3140\r\n\r\n* update CHANGELOG\r\n\r\n* add a test for issue3140\r\n\r\n* update test\r\n\r\n* follow the chenges in object-store\r\n\r\n* skip an external storage test on the device where SELinux is not enforced\r\n\r\n* rename test\r\n\r\n* rename variable\r\n\r\n* update object-store\r\n\r\n* make SharedRealm#temporaryDirectory volatile\r\n\r\n* address findbugs error\r\n", "commitDateTime": "2016-10-18 11:42:16", "authoredDateTime": "2016-10-18 11:42:16", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmTests.java", "insertions": 35, "deletions": 0, "lines": 35}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/TestHelper.java", "insertions": 48, "deletions": 0, "lines": 48}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "realm/realm-library/src/main/cpp/object-store", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/Realm.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/SharedRealm.java", "insertions": 28, "deletions": 0, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmTests.namedPipeDirForExternalStorage()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestHelper.java", "spoonMethods": [{"spoonMethodName": "io.realm.TestHelper.deleteRecursively(java.io.File)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.TestHelper.isSelinuxEnforcing()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Realm.java", "spoonMethods": [{"spoonMethodName": "io.realm.Realm.init(android.content.Context)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SharedRealm.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.SharedRealm.initialize(java.io.File)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.SharedRealm.getTemporaryDirectory()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.SharedRealm", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.SharedRealm.nativeInit(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "RealmObjectSchema.setClassName() should amend pkTable entry", "body": "#### Goal\n\nWe have covered cases where `@PrimaryKey` field is renamed or `RealmSchema.rename()` is involved.\nWhen [`RealmObjectSchema.setClassName()`](https://github.com/realm/realm-java/blob/master/realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java#L108) is called, however, it has potential to lose track of `@PrimaryKey` of a `Table`. This is addressed by @beeender and should be fixed.\n#### Expected Results\n\n`RealmObjectSchema.setClassName()` is called, `pkTable` should be adjusted accordingly.\n#### Actual Results\n\n`pkTable` is not adjusted as of now [3ff5741 (July 4th, 2016)](https://github.com/realm/realm-java/commit/3ff5741582e8bb550f66b1b4adcc925027c0dce6).\n#### Steps & Code to Reproduce\n\nN/A\n#### Code Sample\n#### Version of Realm and tooling\n\nRealm version(s): 1.1.0\nAndroid Studio version: N/A\nWhich Android version and device: N/A\n", "url": "https://github.com/realm/realm-java/issues/3118", "user": "stk1m1", "labels": ["T-Bug"], "created": "2016-07-04 11:23:04", "closed": "2016-08-03 10:04:23", "commits": {}, "ttf": 29.00027777777778, "commitsDetails": []}, {"title": "kotlin.incremental=true cause problems with annotation processor", "body": "Hello , I get this error when i build my project unreachable statament in DefaultRealmModuleMediator.java and it points to \nthrow getMissingProxyClassException(clazz);\n            if (iterator.hasNext()) {\n                throw getMissingProxyClassException(clazz);\n            }\n\nCan you help me please ? \n", "url": "https://github.com/realm/realm-java/issues/3115", "user": "DinuIoan", "labels": ["O-Community", "T-Bug"], "created": "2016-07-03 15:09:28", "closed": "2019-04-26 08:47:25", "commits": {}, "ttf": 1026.0002777777777, "commitsDetails": []}, {"title": "insertOrUpdate(T t) fails on RealmList<Persons> field", "body": "#### Goal\n\n> What do you want to achieve?\n\nSave a `RentalProgram` object that contains a `RealmList<Persons>` object\n#### Expected Results\n\nIt should work just like when I used `copyToRealmOrUpdate()`, which works\n#### Actual Results\n\nUsing `insertOrUpdate()`, the `rentalProgram.getCast()` is empty!\n#### Steps & Code to Reproduce\n\n> Describe your current debugging efforts.\n\nFrickin' ProGuard eats my debug efforts, but it's quite clear that the `cast` list is empty if I use `insertOrUpdate()`, while it works as intended with `copyToRealmOrUpdate()`.\n#### Code Sample\n\n``` java\n\npublic class RentalProgram extends RealmObject {\n    @PrimaryKey\n    private long id;\n    private RealmList<RentalProgramVersion> versions;\n    private String title;\n    private String href;\n    private String imageSrc;\n    private String baseInfoText;\n    private String originalTitle;\n    private String trailerUrl;\n    private String description;\n    private String ageRating;\n    private RealmList<Persons> cast;\n    private String categoryHref;\n    private String releaseYear;\n    // getters setters\n}\n\npublic class RentalProgramVersion extends RealmObject {\n    @PrimaryKey\n    private long id;\n    private String releaseYear;\n    private int ageRating;\n    private String title;\n    private long duration;\n    private long price;\n    private String vodType;\n    private String packageName;\n    private long packageExternalId;\n    //getters setters\n}\n\npublic class Persons\n        extends RealmObject {\n    @PrimaryKey\n    private long id;\n    private String role;\n    private RealmList<Person> persons;\n    //getters setters\n}\n\npublic class Person\n        extends RealmObject {\n    @PrimaryKey\n    private long id;\n    private String name;\n    //getters setters\n}\n```\n\nand the code where persistence happens is\n\n``` java\n        RealmList<Persons> castList = new RealmList<>();\n        if(rentalProgramAdditionalXML.getCast() != null && rentalProgramAdditionalXML.getCast()\n                .getPersons() != null) {\n            for(PersonsXML personsXML : rentalProgramAdditionalXML.getCast().getPersons()) {\n                castList.add(personsMapper.toRealmObject(realm, personsXML, null));\n            }\n        }\n        realm.beginTransaction();\n        castList = personsRepository.persistOrUpdate(realm, castList);\n        rentalProgram.setCast(castList);\n        rentalProgram.setOriginalTitle(RealmUtils.nullToEmpty(rentalProgramAdditionalXML.getOriginalTitle()));\n        rentalProgram.setTrailerUrl(RealmUtils.nullToEmpty(rentalProgramAdditionalXML.getTrailerUrl()));\n        rentalProgram.setDescription(RealmUtils.nullToEmpty(rentalProgramAdditionalXML.getDescription()));\n        rentalProgramRepository.saveOrUpdate(realm, rentalProgram);\n        realm.commitTransaction();\n```\n\nwhere\n\n``` java\n    @Override\n    public RealmList<T> persistOrUpdate(Realm realm, RealmList<T> list) {\n        RealmList<T> realmList = new RealmList<>();\n        for(T t : realm.copyToRealmOrUpdate(list)) {\n            realmList.add(t);\n        }\n        return realmList;\n    }\n\n    @Override\n    public void saveOrUpdate(Realm realm, T t) {\n        realm.insertOrUpdate(t);\n    }\n\n    @Override\n    public void saveOrUpdate(Realm realm, RealmList<T> list) {\n        if(!list.isEmpty()) {\n            realm.insertOrUpdate(list);\n        }\n    }\n```\n\nWhen I use `rentalProgramRepository.persistOrUpdate(realm, rentalProgram);` (copy to realm), the Cast list works properly, but when I use `rentalProgramRepository.saveOrUpdate(realm, rentalProgram);` (insert to realm), the Cast list is empty.\n\n```\nrentalProgram = rentalProgramRepository.query(realmHolder.getRealm())\n                               .equalTo(RentalProgram.Fields.ID.getField(), programId).findFirst();\nfor(int j = 0; j < rentalProgram.getCast().size(); j++) { //getCast() is empty with insert, and filled with copy\n    Persons personGroup = rentalProgram.getCast().get(j);\n```\n\nI'll probably have to send code over to reproduce it.\n\nNote: It might be relevant that my realm configuration is this:\n\n```\n .modules(new SchemaRecordings(), new SchemaRental(), new SchemaTApps(), new SchemaTVPrograms())\n```\n\nand Persons is only in one of them:\n\n``` java\n@RealmModule(classes = {RentalCategory.class,\n        RentalProgram.class,\n        RentalProgramCategory.class,\n        RentalProgramVersion.class,\n        RentalSearchProgram.class})\npublic class SchemaRental {\n}\n\n@RealmModule(classes = {\n        Person.class, Persons.class, Picture.class, PictureSizesAndUrl.class, ProgramInfo.class, ProgramInfoSchedule.class, ProgramNotification.class,\n        Channel.class, Schedule.class, TVGroup.class\n})\npublic class SchemaTVPrograms {\n}\n```\n#### Version of Realm and tooling\n\nRealm version(s): 1.1.0\n\nAndroid Studio version: 2.1.1 (irrelevant)\n\nWhich Android version and device: 6.0.2, Nexus 5X\n", "url": "https://github.com/realm/realm-java/issues/3105", "user": "Zhuinden", "labels": ["T-Bug"], "created": "2016-07-01 09:49:23", "closed": "2016-08-26 10:35:07", "commits": {"66e5a768379f8f05f9ab9c8fbd20faaf215d5948": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}, "ffab35ec7409b76875386404f4ad6b565af9bb6d": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}}, "ttf": 56.000277777777775, "commitsDetails": [{"commitHash": "66e5a768379f8f05f9ab9c8fbd20faaf215d5948", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": ["1c8bf128802cd1189442223848e11d2561eab024"], "nameRev": "66e5a768379f8f05f9ab9c8fbd20faaf215d5948 remotes/origin/nh/fixing_#3105~10", "commitMessage": "Fixing #3105\n", "commitDateTime": "2016-07-03 19:42:49", "authoredDateTime": "2016-07-03 19:42:49", "commitGitStats": [{"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyClassGenerator.java", "insertions": 29, "deletions": 5, "lines": 34}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/AllTypesRealmProxy.java", "insertions": 25, "deletions": 10, "lines": 35}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/BooleansRealmProxy.java", "insertions": 18, "deletions": 2, "lines": 20}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/NullTypesRealmProxy.java", "insertions": 18, "deletions": 2, "lines": 20}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/SimpleRealmProxy.java", "insertions": 18, "deletions": 2, "lines": 20}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/BulkInsertTests.java", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "realm/realm-library/src/main/java/io/realm/Realm.java", "insertions": 4, "deletions": 8, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmProxyClassGenerator.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitInsertListMethod(com.squareup.javawriter.JavaWriter)", "TOT": 7, "UPD": 1, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitInsertOrUpdateListMethod(com.squareup.javawriter.JavaWriter)", "TOT": 29, "UPD": 19, "INS": 3, "MOV": 5, "DEL": 2}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitInsertMethod(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitInsertOrUpdateMethod(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AllTypesRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.AllTypesRealmProxy.insert(io.realm.Realm,java.util.Iterator,java.util.Map)", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 1}, {"spoonMethodName": "io.realm.AllTypesRealmProxy.insert(io.realm.Realm,some.test.AllTypes,java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.AllTypesRealmProxy.insertOrUpdate(io.realm.Realm,some.test.AllTypes,java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.AllTypesRealmProxy.insertOrUpdate(io.realm.Realm,java.util.Iterator,java.util.Map)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "BooleansRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.BooleansRealmProxy.insert(io.realm.Realm,java.util.Iterator,java.util.Map)", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 1}, {"spoonMethodName": "io.realm.BooleansRealmProxy.insertOrUpdate(io.realm.Realm,java.util.Iterator,java.util.Map)", "TOT": 10, "UPD": 0, "INS": 2, "MOV": 7, "DEL": 1}, {"spoonMethodName": "io.realm.BooleansRealmProxy.insert(io.realm.Realm,some.test.Booleans,java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BooleansRealmProxy.insertOrUpdate(io.realm.Realm,some.test.Booleans,java.util.Map)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "NullTypesRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.NullTypesRealmProxy.insert(io.realm.Realm,java.util.Iterator,java.util.Map)", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 1}, {"spoonMethodName": "io.realm.NullTypesRealmProxy.insertOrUpdate(io.realm.Realm,java.util.Iterator,java.util.Map)", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 1}, {"spoonMethodName": "io.realm.NullTypesRealmProxy.insert(io.realm.Realm,some.test.NullTypes,java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.NullTypesRealmProxy.insertOrUpdate(io.realm.Realm,some.test.NullTypes,java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SimpleRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.SimpleRealmProxy.insert(io.realm.Realm,java.util.Iterator,java.util.Map)", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 1}, {"spoonMethodName": "io.realm.SimpleRealmProxy.insertOrUpdate(io.realm.Realm,java.util.Iterator,java.util.Map)", "TOT": 10, "UPD": 0, "INS": 2, "MOV": 7, "DEL": 1}, {"spoonMethodName": "io.realm.SimpleRealmProxy.insert(io.realm.Realm,some.test.Simple,java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.SimpleRealmProxy.insertOrUpdate(io.realm.Realm,some.test.Simple,java.util.Map)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "BulkInsertTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.BulkInsertTests.insertManagedObjectWillNotDuplicate()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Realm.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}, {"commitHash": "ffab35ec7409b76875386404f4ad6b565af9bb6d", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": ["d30c7483f9a298b69c021a1620c8e70c9926a53e"], "nameRev": "ffab35ec7409b76875386404f4ad6b565af9bb6d remotes/origin/nh/fixing_#3105~8", "commitMessage": "fixing #3105\n", "commitDateTime": "2016-07-03 21:15:30", "authoredDateTime": "2016-07-03 21:15:30", "commitGitStats": [{"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyClassGenerator.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyMediatorGenerator.java", "insertions": 19, "deletions": 143, "lines": 162}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/AllTypesRealmProxy.java", "insertions": 67, "deletions": 67, "lines": 134}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/BooleansRealmProxy.java", "insertions": 30, "deletions": 31, "lines": 61}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/NullTypesRealmProxy.java", "insertions": 32, "deletions": 33, "lines": 65}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/RealmDefaultModuleMediator.java", "insertions": 1, "deletions": 81, "lines": 82}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/SimpleRealmProxy.java", "insertions": 30, "deletions": 31, "lines": 61}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmProxyClassGenerator.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitInsertOrUpdateListMethod(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RealmProxyMediatorGenerator.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitInsertObjectToRealmMethod(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitInsertOrUpdateObjectToRealmMethod(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitInsertOrUpdateListToRealmMethod(com.squareup.javawriter.JavaWriter)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitInsertListToRealmMethod(com.squareup.javawriter.JavaWriter)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitCreteOrUpdateUsingJsonObject(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitCreateUsingJsonStream(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitCreateDetachedCopyMethod(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitInsertObjectToRealmMethod(com.squareup.javawriter.JavaWriter).13", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitInsertOrUpdateObjectToRealmMethod(com.squareup.javawriter.JavaWriter).14", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitInsertOrUpdateListToRealmMethod(com.squareup.javawriter.JavaWriter).15", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitInsertOrUpdateListToRealmMethod(com.squareup.javawriter.JavaWriter).16", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitInsertListToRealmMethod(com.squareup.javawriter.JavaWriter).17", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitInsertListToRealmMethod(com.squareup.javawriter.JavaWriter).18", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitCreteOrUpdateUsingJsonObject(com.squareup.javawriter.JavaWriter).19", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitCreateUsingJsonStream(com.squareup.javawriter.JavaWriter).20", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitCreateDetachedCopyMethod(com.squareup.javawriter.JavaWriter).21", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AllTypesRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.AllTypesRealmProxy.insertOrUpdate(io.realm.Realm,java.util.Iterator,java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BooleansRealmProxy.java", "spoonMethods": []}, {"spoonFilePath": "NullTypesRealmProxy.java", "spoonMethods": []}, {"spoonFilePath": "RealmDefaultModuleMediator.java", "spoonMethods": []}, {"spoonFilePath": "SimpleRealmProxy.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["66e5a768379f8f05f9ab9c8fbd20faaf215d5948", "ffab35ec7409b76875386404f4ad6b565af9bb6d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 52, "deletions": 157, "lines": 209, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 131, "UPD": 38, "INS": 31, "MOV": 51, "DEL": 11, "spoonFilesChanged": 6, "spoonMethodsChanged": 36}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-annotations-processor/src/main/java/io/realm/processor", "realm/realm-library/src/main/java/io/realm"], "changesInPackagesSPOON": ["io.realm.processor.RealmProxyClassGenerator.emitInsertOrUpdateListMethod(com.squareup.javawriter.JavaWriter)", "io.realm.AllTypesRealmProxy.insertOrUpdate(io.realm.Realm,java.util.Iterator,java.util.Map)", "io.realm.processor.RealmProxyMediatorGenerator.emitInsertObjectToRealmMethod(com.squareup.javawriter.JavaWriter).13", "io.realm.processor.RealmProxyMediatorGenerator.emitCreteOrUpdateUsingJsonObject(com.squareup.javawriter.JavaWriter)", "io.realm.NullTypesRealmProxy.insert(io.realm.Realm,java.util.Iterator,java.util.Map)", "io.realm.SimpleRealmProxy.insert(io.realm.Realm,java.util.Iterator,java.util.Map)", "io.realm.BooleansRealmProxy.insertOrUpdate(io.realm.Realm,java.util.Iterator,java.util.Map)", "io.realm.AllTypesRealmProxy.insert(io.realm.Realm,java.util.Iterator,java.util.Map)", "io.realm.processor.RealmProxyClassGenerator.emitInsertListMethod(com.squareup.javawriter.JavaWriter)", "io.realm.processor.RealmProxyMediatorGenerator.emitInsertOrUpdateListToRealmMethod(com.squareup.javawriter.JavaWriter).16", "io.realm.processor.RealmProxyMediatorGenerator.emitCreateUsingJsonStream(com.squareup.javawriter.JavaWriter).20", "io.realm.processor.RealmProxyMediatorGenerator.emitInsertListToRealmMethod(com.squareup.javawriter.JavaWriter)", "io.realm.processor.RealmProxyMediatorGenerator.emitCreteOrUpdateUsingJsonObject(com.squareup.javawriter.JavaWriter).19", "io.realm.processor.RealmProxyMediatorGenerator.emitCreateUsingJsonStream(com.squareup.javawriter.JavaWriter)", "io.realm.AllTypesRealmProxy.insert(io.realm.Realm,some.test.AllTypes,java.util.Map)", "io.realm.BooleansRealmProxy.insert(io.realm.Realm,java.util.Iterator,java.util.Map)", "io.realm.processor.RealmProxyMediatorGenerator.emitInsertListToRealmMethod(com.squareup.javawriter.JavaWriter).17", "io.realm.SimpleRealmProxy.insertOrUpdate(io.realm.Realm,java.util.Iterator,java.util.Map)", "io.realm.NullTypesRealmProxy.insert(io.realm.Realm,some.test.NullTypes,java.util.Map)", "io.realm.BooleansRealmProxy.insertOrUpdate(io.realm.Realm,some.test.Booleans,java.util.Map)", "io.realm.AllTypesRealmProxy.insertOrUpdate(io.realm.Realm,some.test.AllTypes,java.util.Map)", "io.realm.SimpleRealmProxy.insertOrUpdate(io.realm.Realm,some.test.Simple,java.util.Map)", "io.realm.processor.RealmProxyClassGenerator.emitInsertOrUpdateMethod(com.squareup.javawriter.JavaWriter)", "io.realm.processor.RealmProxyMediatorGenerator.emitInsertOrUpdateListToRealmMethod(com.squareup.javawriter.JavaWriter).15", "io.realm.processor.RealmProxyMediatorGenerator.emitInsertOrUpdateObjectToRealmMethod(com.squareup.javawriter.JavaWriter).14", "io.realm.SimpleRealmProxy.insert(io.realm.Realm,some.test.Simple,java.util.Map)", "io.realm.processor.RealmProxyMediatorGenerator.emitCreateDetachedCopyMethod(com.squareup.javawriter.JavaWriter)", "io.realm.BooleansRealmProxy.insert(io.realm.Realm,some.test.Booleans,java.util.Map)", "io.realm.processor.RealmProxyMediatorGenerator.emitInsertListToRealmMethod(com.squareup.javawriter.JavaWriter).18", "io.realm.processor.RealmProxyMediatorGenerator.emitCreateDetachedCopyMethod(com.squareup.javawriter.JavaWriter).21", "io.realm.processor.RealmProxyMediatorGenerator.emitInsertOrUpdateObjectToRealmMethod(com.squareup.javawriter.JavaWriter)", "io.realm.NullTypesRealmProxy.insertOrUpdate(io.realm.Realm,java.util.Iterator,java.util.Map)", "io.realm.processor.RealmProxyMediatorGenerator.emitInsertOrUpdateListToRealmMethod(com.squareup.javawriter.JavaWriter)", "io.realm.processor.RealmProxyClassGenerator.emitInsertMethod(com.squareup.javawriter.JavaWriter)", "io.realm.processor.RealmProxyMediatorGenerator.emitInsertObjectToRealmMethod(com.squareup.javawriter.JavaWriter)", "io.realm.NullTypesRealmProxy.insertOrUpdate(io.realm.Realm,some.test.NullTypes,java.util.Map)"]}, {"title": "Exception parsing classes : realm-optional-api", "body": "Hi,\n\nRight after the update to Realm 1.0.1 from 0.82, I started getting this Exception below. I tried building my project with Android Studio 2.1 and 2.2-Preview3 but the result is the same. Any idea why this is happening ?\n\nI'm using RetroLambda so the compiler options is as below:\n\n```\ncompileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8 \n}\n\n```\n\nThanks.\n\nAndroid Studio : 2.2 Preview3\nGradle Version : 2.13\nAndroid Gradle Plugin : 2.1.0 (tried with 2.2.0-alpha3 as well)\ncompileSdkVersion : 23\nbuildToolsVersion : 23.0.3\n\n```\n[DEBUG] [com.android.build.gradle.internal.ApplicationTaskManager] processing /Users/.../app/build/intermediates/transforms/RealmOptionalAPITransformer/airwatch/debug/folders/1/10/realm-optional-api/./retrofit/mime/TypedInput.class...\n[DEBUG] [com.android.build.gradle.internal.ApplicationTaskManager] processing /Users/.../app/build/intermediates/transforms/RealmOptionalAPITransformer/airwatch/debug/folders/1/10/realm-optional-api/./retrofit/mime/TypedOutput.class...\n[DEBUG] [com.android.build.gradle.internal.ApplicationTaskManager] processing /.../app/build/intermediates/transforms/RealmOptionalAPITransformer/airwatch/debug/folders/1/10/realm-optional-api/./retrofit/mime/TypedString.class...\n[ERROR] [org.gradle.api.Project] Dex: Error converting bytecode to dex:\nCause: Dex cannot parse version 52 byte code.\nThis is caused by library dependencies that have been compiled using Java 8 or above.\nIf you are using the 'java' gradle plugin in a library submodule add \ntargetCompatibility = '1.7'\nsourceCompatibility = '1.7'\nto that submodule's build.gradle file.\n    UNEXPECTED TOP-LEVEL EXCEPTION:\n    java.lang.RuntimeException: Exception parsing classes\n        at com.android.dx.command.dexer.Main.processClass(Main.java:752)\n        at com.android.dx.command.dexer.Main.processFileBytes(Main.java:718)\n        at com.android.dx.command.dexer.Main.access$1200(Main.java:85)\n        at com.android.dx.command.dexer.Main$FileBytesConsumer.processFileBytes(Main.java:1645)\n        at com.android.dx.cf.direct.ClassPathOpener.processOne(ClassPathOpener.java:170)\n        at com.android.dx.cf.direct.ClassPathOpener.processDirectory(ClassPathOpener.java:229)\n        at com.android.dx.cf.direct.ClassPathOpener.processOne(ClassPathOpener.java:158)\n        at com.android.dx.cf.direct.ClassPathOpener.processDirectory(ClassPathOpener.java:229)\n        at com.android.dx.cf.direct.ClassPathOpener.processOne(ClassPathOpener.java:158)\n        at com.android.dx.cf.direct.ClassPathOpener.processDirectory(ClassPathOpener.java:229)\n        at com.android.dx.cf.direct.ClassPathOpener.processOne(ClassPathOpener.java:158)\n        at com.android.dx.cf.direct.ClassPathOpener.process(ClassPathOpener.java:144)\n        at com.android.dx.command.dexer.Main.processOne(Main.java:672)\n        at com.android.dx.command.dexer.Main.processAllFiles(Main.java:574)\n        at com.android.dx.command.dexer.Main.runMultiDex(Main.java:366)\n        at com.android.dx.command.dexer.Main.run(Main.java:275)\n        at com.android.dx.command.dexer.Main.main(Main.java:245)\n        at com.android.dx.command.Main.main(Main.java:106)\n    Caused by: com.android.dx.cf.iface.ParseException: bad class file magic (cafebabe) or version (0034.0000)\n        at com.android.dx.cf.direct.DirectClassFile.parse0(DirectClassFile.java:472)\n        at com.android.dx.cf.direct.DirectClassFile.parse(DirectClassFile.java:406)\n        at com.android.dx.cf.direct.DirectClassFile.parseToInterfacesIfNecessary(DirectClassFile.java:388)\n        at com.android.dx.cf.direct.DirectClassFile.getMagic(DirectClassFile.java:251)\n        at com.android.dx.command.dexer.Main.parseClass(Main.java:764)\n        at com.android.dx.command.dexer.Main.access$1500(Main.java:85)\n        at com.android.dx.command.dexer.Main$ClassParserTask.call(Main.java:1684)\n        at com.android.dx.command.dexer.Main.processClass(Main.java:749)\n        ... 17 more\n```\n", "url": "https://github.com/realm/realm-java/issues/3033", "user": "osayilgan", "labels": ["T-Bug"], "created": "2016-06-21 00:20:56", "closed": "2017-03-27 13:49:22", "commits": {}, "ttf": 279.0002777777778, "commitsDetails": []}, {"title": "Realm Plugin/Transformation 1.0.1 Suspicious \"unexpectedly contains class\" Warnings", "body": "We are getting massive amount of gradle warning logs during build with 1.0.1. 1.0.0 has no such issue. \n\n``` java\nWarning: class [folders/1/10/realm-optional-api/it/unimi/dsi/fastutil/chars/Char2ByteRBTreeMap$KeySet.class] unexpectedly contains class [it.unimi.dsi.fastutil.chars.Char2ByteRBTreeMap$KeySet]\nWarning: class [folders/1/10/realm-optional-api/it/unimi/dsi/fastutil/chars/Char2ByteArrayMap$EntrySet$2.class] unexpectedly contains class [it.unimi.dsi.fastutil.chars.Char2ByteArrayMap$EntrySet$2]\napi/it/unimi/dsi/fastutil/chars/Char2ByteRBTreeMap$KeySet.class] unexpectedly contains class [it.unimi.dsi.fastutil.chars.Char2ByteRBTreeMap$KeySet]\nWarning: class [folders/1/10/realm-optional-api/it/unimi/dsi/fastutil/chars/Char2ByteArrayMap$EntrySet$2.class] unexpectedly contains class [it.unimi.dsi.fastutil.chars.Char2ByteArrayMap$EntrySet$2]\nWarning: class [folders/1/10/realm-optional-api/it/unimi/dsi/fastutil/chars/Char2LongLinkedOpenHashMap.class] unexpectedly contains class [it.unimi.dsi.fastutil.chars.Char2LongLinkedOpenHashMap]\nWarning: class [folders/1/10/realm-optional-api/it/unimi/dsi/fastutil/chars/CharBigArrays$1.class] unexpectedly contains class [it.unimi.dsi.fastutil.chars.CharBigArrays$1]\nWarning: class [folders/1/10/realm-optional-api/it/unimi/dsi/fastutil/chars/AbstractChar2ObjectMap.class] unexpectedly contains class [it.unimi.dsi.fastutil.chars.AbstractChar2ObjectMap]\nWarning: class [folders/1/10/realm-optional-api/it/unimi/dsi/fastutil/chars/Char2LongMaps$EmptyMap.class] unexpectedly contains class [it.unimi.dsi.fastutil.chars.Char2LongMaps$EmptyMap]\nWarning: class [folders/1/10/realm-optional-api/it/unimi/dsi/fastutil/chars/Char2LongSortedMaps.class] unexpectedly contains class [it.unimi.dsi.fastutil.chars.Char2LongSortedMaps]\nWarning: class [folders/1/10/realm-optional-api/it/unimi/dsi/fastutil/chars/Char2DoubleMap$Entry.class] unexpectedly contains class [it.unimi.dsi.fastutil.chars.Char2DoubleMap$Entry]\n```\n\nThe \"realm-optional-api\" warnings encompass every single external class we use that have nothing to do with realm, realm-module, or realm-object classes. The amount of warning logs are extensive so I just included a few above.\n", "url": "https://github.com/realm/realm-java/issues/3022", "user": "diegomontoya", "labels": ["T-Bug"], "created": "2016-06-17 01:08:43", "closed": "2016-06-21 02:53:01", "commits": {"af978db270042945a9c66cef9d6874789ba5bbf0": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "5d015e1eead280d1913c813c37d46985dc5d2951": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "af978db270042945a9c66cef9d6874789ba5bbf0", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5d015e1eead280d1913c813c37d46985dc5d2951", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["1f14e5e964f9c6bfc079cb6f276d1d9d13d4a1b5"], "nameRev": "5d015e1eead280d1913c813c37d46985dc5d2951 tags/v1.1.0~6^2~4", "commitMessage": "Disable optional api transformer\n\nBecause of #3022, this transformer doesn't play well with DexGuard.\nThe idea way is we can supply an option to disable it by users. But\nunfortunately it seems to be difficult:\n\n* The realm gradle options block is evaluated after calling\n  android.registerTransformer()\n* We can pass a closure to transformer later, but the problem\n  Transformer.getScope cannot return null or an empty set, otherwise an\n  exception will be thrown.\n\nJusts disable it until we find a proper way.\n", "commitDateTime": "2016-06-19 21:55:17", "authoredDateTime": "2016-06-19 21:49:40", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "gradle-plugin/src/main/groovy/io/realm/gradle/Realm.groovy", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "gradle-plugin/src/test/groovy/io/realm/gradle/PluginTest.groovy", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5d015e1eead280d1913c813c37d46985dc5d2951"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1.0, "deletions": 3.0, "lines": 4.0, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["gradle-plugin/src/main/groovy/io/realm/gradle/Realm.groovy"]}, {"title": "cancelTransaction() causes REALM_CHANGED/LOCAL_COMMIT missed.", "body": "In normal cases pair `Realm.beginTransaction()`/`Realm.commitTransaction()` will trigger realm updates for local thread from `Realm.commitTransaction()`.\n\nBut for `Realm.beginTransaction()`/`Realm.cancelTransaction()`, the update event won't be sent anymore. This is not correct and will cause some strange issues since `beginTransaction()` will do advance read and update the local realm instance.", "url": "https://github.com/realm/realm-java/issues/3002", "user": "beeender", "labels": ["T-Bug"], "created": "2016-06-15 06:07:04", "closed": "2017-02-20 13:38:03", "commits": {}, "ttf": 250.00027777777777, "commitsDetails": []}, {"title": "onComplete/onNext for observable (sometimes) not getting called after async write", "body": "#### Goal\n\nCreate/update realm objects and immediately find the saved results\n#### Expected Results\n\nFind all saved (updated or created) realm objects\n#### Actual Results\n\nonComplete of the observable is called only for 7-9/10 cases\n#### Steps & Code to Reproduce\n\nPlease, see the sample code below. In about every 1-3 calls out of 10 the onNext/onComplete is never get called. Here is a sample output:\n\n```\n06-10 12:34:00.764 7561-7561/realmtest.com.realmtest D/RXTestRealm: onNext\n06-10 12:34:00.765 7561-7561/realmtest.com.realmtest D/RXTestRealm: onComplete: call 0 total completes: 1\n06-10 12:34:01.690 7561-7561/realmtest.com.realmtest D/RXTestRealm: onNext\n06-10 12:34:01.690 7561-7561/realmtest.com.realmtest D/RXTestRealm: onComplete: call 1 total completes: 2\n06-10 12:34:02.846 7561-7561/realmtest.com.realmtest D/RXTestRealm: onNext\n06-10 12:34:02.847 7561-7561/realmtest.com.realmtest D/RXTestRealm: onComplete: call 3 total completes: 3\n06-10 12:34:04.053 7561-7561/realmtest.com.realmtest D/RXTestRealm: onNext\n06-10 12:34:04.053 7561-7561/realmtest.com.realmtest D/RXTestRealm: onComplete: call 4 total completes: 4\n06-10 12:34:05.082 7561-7561/realmtest.com.realmtest D/RXTestRealm: onNext\n06-10 12:34:05.082 7561-7561/realmtest.com.realmtest D/RXTestRealm: onComplete: call 6 total completes: 5\n06-10 12:34:06.685 7561-7561/realmtest.com.realmtest D/RXTestRealm: onNext\n06-10 12:34:06.685 7561-7561/realmtest.com.realmtest D/RXTestRealm: onComplete: call 8 total completes: 6\n06-10 12:34:07.871 7561-7561/realmtest.com.realmtest D/RXTestRealm: onNext\n06-10 12:34:07.871 7561-7561/realmtest.com.realmtest D/RXTestRealm: onComplete: call 7 total completes: 7\n06-10 12:34:08.939 7561-7561/realmtest.com.realmtest D/RXTestRealm: onNext\n06-10 12:34:08.939 7561-7561/realmtest.com.realmtest D/RXTestRealm: onComplete: call 9 total completes: 8\n06-10 12:34:10.148 7561-7561/realmtest.com.realmtest D/RXTestRealm: onNext\n06-10 12:34:10.149 7561-7561/realmtest.com.realmtest D/RXTestRealm: onComplete: call 5 total completes: 9\n```\n\nAs you can see from the output - the total calls are 9 (instead of 10) and call number 2 is missing.\nThe sample below is stripped version of a real project but still we're able to reproduce it with it.\n#### Code Sample\n\n``` java\n\npublic class MainActivity extends AppCompatActivity implements View.OnClickListener {\n\n    private int totalCompletes;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        findViewById(R.id.refresh_tasks).setOnClickListener(this);\n        RealmConfiguration config = new RealmConfiguration.Builder(this)\n                .schemaVersion(BuildConfig.VERSION_CODE)\n                .deleteRealmIfMigrationNeeded()\n                .build();\n        Realm.setDefaultConfiguration(config);\n        totalCompletes = 0;\n    }\n\n    private void refreshTasks(final int callNum) {\n        List<Task> tasks = new ArrayList<>();\n        for (int i = 0; i < 1000; i++) {\n            tasks.add(new Task(UUID.randomUUID().toString(), UUID.randomUUID().toString()));\n        }\n        saveTasks(tasks).flatMap(new Func1<List<Task>, Observable<List<Task>>>() {\n            @Override\n            public Observable<List<Task>> call(List<Task> tasks) {\n                for (Task t : tasks) {\n                    t.setName(UUID.randomUUID().toString());\n                }\n                return saveTasks(tasks);\n            }\n        }).flatMap(new Func1<List<Task>, Observable<?>>() {\n            @Override\n            public Observable<List<Task>> call(List<Task> tasks) {\n                return findTasks();\n            }\n        }).subscribe(new Action1<Object>() {\n            @Override\n            public void call(Object o) {\n                Log.d(\"RXTestRealm\", \"onNext\");\n            }\n        }, new Action1<Throwable>() {\n            @Override\n            public void call(Throwable throwable) {\n                Log.d(\"RXTestRealm\", \"onError \" + throwable.getMessage());\n            }\n        }, new Action0() {\n            @Override\n            public void call() {\n                totalCompletes++;\n                Log.d(\"RXTestRealm\", \"onComplete: call \" + callNum + \" total completes: \" + totalCompletes);\n            }\n        });\n    }\n\n    private Observable<List<Task>> findTasks() {\n        final Realm realm = Realm.getDefaultInstance();\n        return realm.where(Task.class).findAllAsync().asObservable().filter(new Func1<RealmResults<Task>, Boolean>() {\n            @Override\n            public Boolean call(RealmResults<Task> tasks) {\n                return tasks.isLoaded();\n            }\n        }).first().map(new Func1<RealmResults<Task>, List<Task>>() {\n            @Override\n            public List<Task> call(RealmResults<Task> tasks) {\n                List<Task> res = realm.copyFromRealm(tasks);\n                realm.close();\n                return res;\n            }\n        });\n    }\n\n    private Observable<List<Task>> saveTasks(final List<Task> tasks) {\n        return Observable.create(new Observable.OnSubscribe<List<Task>>() {\n            @Override\n            public void call(final Subscriber<? super List<Task>> subscriber) {\n                final Realm realm = Realm.getDefaultInstance();\n                realm.executeTransactionAsync(new Realm.Transaction() {\n                    @Override\n                    public void execute(Realm backgroundRealm) {\n                        backgroundRealm.copyToRealmOrUpdate(tasks);\n                    }\n                }, new Realm.Transaction.OnSuccess() {\n                    @Override\n                    public void onSuccess() {\n                        realm.close();\n                        subscriber.onNext(tasks);\n                        subscriber.onCompleted();\n                    }\n                }, new Realm.Transaction.OnError() {\n                    @Override\n                    public void onError(Throwable error) {\n                        realm.close();\n                        subscriber.onError(error);\n                    }\n                });\n            }\n        });\n    }\n\n    @Override\n    public void onClick(View v) {\n        for(int i = 0; i < 10; i++) {\n            refreshTasks(i);\n        }\n    }\n}\n\n```\n\nTask class\n\n``` java\n\npublic class Task extends RealmObject {\n\n\n    @PrimaryKey\n    @Required\n    private String id;\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    private String name;\n\n    public Task() {\n\n    }\n\n    public Task(String id, String name) {\n        this.id = id;\n        this.name = name;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n```\n\n**Important**: It seems that using sync writes solves the issue\n\nsaving objects code:\n\n``` java\n    final Realm realm = Realm.getDefaultInstance();\n    realm.executeTransaction(new Realm.Transaction() {\n                    @Override\n                    public void execute(Realm realm) {\n                        realm.copyToRealmOrUpdate(tasks);\n                    }\n                });\n    realm.close();\n    subscriber.onNext(tasks);\n    subscriber.onCompleted();\n```\n\nHere the output is correct:\n\n```\n06-10 12:52:38.713 20172-20172/realmtest.com.realmtest D/RXTestRealm: onNext\n06-10 12:52:38.713 20172-20172/realmtest.com.realmtest D/RXTestRealm: onComplete: call 0 total completes: 1\n06-10 12:52:39.718 20172-20172/realmtest.com.realmtest D/RXTestRealm: onNext\n06-10 12:52:39.718 20172-20172/realmtest.com.realmtest D/RXTestRealm: onComplete: call 1 total completes: 2\n06-10 12:52:41.347 20172-20172/realmtest.com.realmtest D/RXTestRealm: onNext\n06-10 12:52:41.347 20172-20172/realmtest.com.realmtest D/RXTestRealm: onComplete: call 2 total completes: 3\n06-10 12:52:42.553 20172-20172/realmtest.com.realmtest D/RXTestRealm: onNext\n06-10 12:52:42.553 20172-20172/realmtest.com.realmtest D/RXTestRealm: onComplete: call 7 total completes: 4\n06-10 12:52:43.575 20172-20172/realmtest.com.realmtest D/RXTestRealm: onNext\n06-10 12:52:43.575 20172-20172/realmtest.com.realmtest D/RXTestRealm: onComplete: call 4 total completes: 5\n06-10 12:52:44.716 20172-20172/realmtest.com.realmtest D/RXTestRealm: onNext\n06-10 12:52:44.717 20172-20172/realmtest.com.realmtest D/RXTestRealm: onComplete: call 3 total completes: 6\n06-10 12:52:45.787 20172-20172/realmtest.com.realmtest D/RXTestRealm: onNext\n06-10 12:52:45.787 20172-20172/realmtest.com.realmtest D/RXTestRealm: onComplete: call 8 total completes: 7\n06-10 12:52:47.530 20172-20172/realmtest.com.realmtest D/RXTestRealm: onNext\n06-10 12:52:47.531 20172-20172/realmtest.com.realmtest D/RXTestRealm: onComplete: call 9 total completes: 8\n06-10 12:52:48.784 20172-20172/realmtest.com.realmtest D/RXTestRealm: onNext\n06-10 12:52:48.784 20172-20172/realmtest.com.realmtest D/RXTestRealm: onComplete: call 5 total completes: 9\n06-10 12:52:49.804 20172-20172/realmtest.com.realmtest D/RXTestRealm: onNext\n06-10 12:52:49.810 20172-20172/realmtest.com.realmtest D/RXTestRealm: onComplete: call 6 total completes: 10\n```\n#### Version of Realm and tooling\n\nRealm version(s): 1.0.0\n\nAndroid Studio version: 2.1.2\n\nWhich Android version and device: 5.1.1 (Nexus 4)\n", "url": "https://github.com/realm/realm-java/issues/2978", "user": "curiousily", "labels": ["T-Bug"], "created": "2016-06-10 09:54:43", "closed": "2016-06-27 12:41:32", "commits": {}, "ttf": 17.00027777777778, "commitsDetails": []}, {"title": "distinct() issue", "body": "#### Goal\n\nGet a distinct list of a RealmResult\n#### Expected Results\n\nRealmResult.distinct() returning a distinct list\n#### Actual Results\n\nRealmResult.distinct() sorting in-place\n#### Steps & Code to Reproduce\n\nmList = mRealm.where(Item.class).findAll();\nmDistinctList = mList.distinct(Item.CATEGORY)\n\nThe 2nd line of code above will change mList also (is that intentional or a bug?)\n#### Version of Realm and tooling\n\nRealm version(s): 1.1.0\nAndroid Studio version: 2.1.1\n\n*\\* EDIT *\\* the above issue happens in RealmResults only and not RealmLists\n", "url": "https://github.com/realm/realm-java/issues/2947", "user": "RJFares", "labels": ["T-Bug"], "created": "2016-06-07 09:05:42", "closed": "2017-03-21 09:56:01", "commits": {}, "ttf": 287.0002777777778, "commitsDetails": []}, {"title": "Remove primary key, index is not removed.", "body": "This is reported on SO http://stackoverflow.com/questions/37667205/primary-key-migration-with-realm-1-0\n\n---\n\nI'm trying to perform a migration in Realm that migrates the primary key, and I'm getting the following error:\n\n```\nIndex not defined for field 'local_id' in existing Realm file. Either set @Index or migrate using io.realm.internal.Table.removeSearchIndex().\n```\n\nHere's my migration code:\n\n``` java\n    schema.get(\"Calendar\")\n                    .addField(\"local_id\", String.class)\n                    .transform(new RealmObjectSchema.Function() {\n                        @Override\n                        public void apply(DynamicRealmObject obj) {\n                            obj.set(\"local_id\", obj.getString(\"id\") + obj.getString(\"start\"));\n                        }\n                    })\n                    .removePrimaryKey()\n                    .addPrimaryKey(\"local_id\");\n```\n\nI don't see what else I need to do. I've added `@Index` on the `local_id` field, and it didn't make a difference. Anyone know what I need to do?\n", "url": "https://github.com/realm/realm-java/issues/2944", "user": "beeender", "labels": ["T-Bug"], "created": "2016-06-07 02:27:29", "closed": "2016-06-07 20:42:49", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ArrayList Size is 5500+,Unrecoverable error. mremap(): failed: Out of memory in io_realm_internal_SharedGroup.cpp line 188", "body": "## it throw an exception when insert 5000+ datas .\n## realm version   classpath \"io.realm:realm-gradle-plugin:1.0.0\"\n\n```\n  Realm realm = Realm.getInstance(getRealmConfiguration());\n    lineList = response.getDatasList();\n    for (int i = 0; i < lineList.size(); i++) {\n      realm.beginTransaction();\n      Stock stock = realm.createObject(Stock.class);\n      stock.setCode(lineList.get(i).getCode());\n      stock.setName(lineList.get(i).getName());\n      Timber.d(i + \" {}  code \" + lineList.get(i).getCode() + \"||  name \" + lineList.get(i)\n          .getName());\n      realm.commitTransaction();\n    }\n\n    realm.close();\n```\n\n![image](https://cloud.githubusercontent.com/assets/4157773/15605146/af11435a-2436-11e6-9f01-5d0f1b7d123b.png)\n", "url": "https://github.com/realm/realm-java/issues/2894", "user": "alvin87", "labels": ["Blocked", "T-Bug"], "created": "2016-05-27 10:06:18", "closed": "2016-07-01 06:18:32", "commits": {}, "ttf": 34.000277777777775, "commitsDetails": []}, {"title": "ANR after upgrading to 0.90.1 from v0.88.x ", "body": "Hi, @hohnamkung from VCNC reported ANR issue.\n\nAfter they upgrade to v0.90.1, ANR happens from Realm.\nIt happens from our chatting feature, and i reproduce it very easily.\n\nI attached traces.txt\n[traces.txt](https://github.com/realm/realm-java/files/272273/traces.txt)\n#### Steps & Code to Reproduce\n1. Go to Chatting menu\n2. have a chat.\n   90% reproducible.\n#### Version of Realm and tooling\n\n**Realm version** : reproducible with Realm-java 0.90.1\nIt was ok when using v0.88.x \n\n**Device** : The device that i'm using is Galaxy S6\n#### APK for reproduce\n\nIf trace log is not enough, I will try to get APK to reproduce\n", "url": "https://github.com/realm/realm-java/issues/2840", "user": "tebica", "labels": ["T-Bug"], "created": "2016-05-19 09:50:09", "closed": "2016-05-20 05:37:23", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Cannot delete realm", "body": "When starting up my app the first thing I am trying to delete the realm file.\n\nThe attached screenshot shows that if fails to delete the management directory.\n/data/user/0/com.agrimap.mobile.android/files/default.realm.management\n\nI checked the File.delete() method and it internally catches\nandroid.system.ErrnoException: remove failed: ENOTEMPTY (Directory not empty)\n\nThe directory appears to have three files in it.\nlog_acces, log_a, log_b\n\n![screen shot 2016-05-19 at 12 09 12 pm](https://cloud.githubusercontent.com/assets/19274339/15378846/348fa206-1dbb-11e6-9ec6-6b4ca0198e14.png)\n#### Version of Realm and tooling\n\nRealm version(s): 0.90.1\nAndroid Studio version: 2.1.1\nWhich Android version and device: Emulator - Nexus 4\n", "url": "https://github.com/realm/realm-java/issues/2834", "user": "JM-Agrimap", "labels": ["T-Bug"], "created": "2016-05-19 00:27:30", "closed": "2016-05-19 14:22:21", "commits": {"c9c8213b7936cc823ffaf31b5240710dfa75292c": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "165915e0b54880db1cf6e574653c017144f10f23": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c9c8213b7936cc823ffaf31b5240710dfa75292c", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "165915e0b54880db1cf6e574653c017144f10f23", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["1d569a008ac51dd5467136908a9983c9bb3bd34d"], "nameRev": "165915e0b54880db1cf6e574653c017144f10f23 tags/v0.91.0~4", "commitMessage": "Remove log files in Realm.deleteRealm (#2839)\n\nClose #2834", "commitDateTime": "2016-05-19 22:22:21", "authoredDateTime": "2016-05-19 22:22:21", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmTests.java", "insertions": 8, "deletions": 18, "lines": 26}, {"filePath": "realm/realm-library/src/main/java/io/realm/BaseRealm.java", "insertions": 13, "deletions": 2, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmTests.deleteRealm()", "TOT": 14, "UPD": 5, "INS": 2, "MOV": 4, "DEL": 3}]}, {"spoonFilePath": "BaseRealm.java", "spoonMethods": [{"spoonMethodName": "io.realm.BaseRealm.deleteRealm(io.realm.RealmConfiguration).2.onResult(int)", "TOT": 9, "UPD": 2, "INS": 3, "MOV": 3, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Primary key not defined for field 'id' in existing Realm file. Add @PrimaryKey.", "body": "Hello! I upgraded from 0.88.2 to 0.90.1 and refactored my RealmObject classes and renamed them. Everything works fine if I clear the app data and it's a new, clean Realm, but migrating from the old version doesn't work. \n\nStacktrace:\n\n> io.realm.exceptions.RealmMigrationNeededException: Primary key not defined for field 'id' in existing Realm file. Add @PrimaryKey.\n> at io.realm.ChannelRealmProxy.validateTable(ChannelRealmProxy.java:154)\n> at io.realm.DefaultRealmModuleMediator.validateTable(DefaultRealmModuleMediator.java:71)\n> at io.realm.Realm.initializeRealm(Realm.java:316)\n> at io.realm.Realm.createAndValidate(Realm.java:284)\n> at io.realm.Realm.createInstance(Realm.java:263)\n> at io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:118)\n> at io.realm.Realm.getDefaultInstance(Realm.java:195)\n> ...\n\nChannel.java:\n\n``` java\npublic class Channel extends RealmObject {\n    @PrimaryKey\n    private long id;\n    private String name;\n    //...\n```\n\nDbMigration.java:\n\n``` java\n//Don't want to create a Channel schema, if the previously named one exists\nif(schema.get(\"TvObject\") == null && schema.get(\"Channel\") == null) {\n    schema.create(\"Channel\")\n        .addField(\"id\", long.class, FieldAttribute.PRIMARY_KEY)\n        //redacted, just a bunch of String, int and boolean fields\n}\n//...\nif(oldVersion == 7) { \n    schema.rename(\"TvObject\", \"Channel\");\n    schema.get(\"Channel\")\n        //redacted the changes, it's a bunch of field renaming and removing\n    oldVersion++;\n}\n```\n\nIt also happens with two other classes that I renamed, and it's not always the same one that causes the crash. It changes when I redo the upgrade from the old app version to the new one.\n\nI've tried using Long with `@Required` instead of long, adding the primary key in the migration (which causes an exception), nothing helps. Am I doing something wrong? \n\nP.S. Is there a better way to structure migrations with regards to creating the objects? If I rename the objects again, I'll have three `== null` checks in the if()s.\n", "url": "https://github.com/realm/realm-java/issues/2829", "user": "edgars-supe", "labels": ["T-Bug"], "created": "2016-05-18 09:00:42", "closed": "2016-06-09 15:52:34", "commits": {}, "ttf": 22.00027777777778, "commitsDetails": []}, {"title": "\"Index not defined for existing Realm file\" error while performing migration.", "body": "Hello,\n\nI'm using Realm 0.90.1.\n\nI'm trying to perform a migration in which I want to create two more tables. One of them has a @PrimaryKey.\n\nI've tried the manual way like this:\n\nAnd the migration looks like this:\n\n```\n          public void migrate(DynamicRealm realm, long oldVersion, long newVersion) {\n        RealmSchema schema = realm.getSchema();\n\n        if (oldVersion == 0) {\n            schema.create(\"Table1\").addField(\"myid\", long.class)\n                    .addField(\"test\", boolean.class)\n                    .addPrimaryKey(\"myid\");\n\n            schema.create(\"Table2\").addField(\"wID\", int.class)\n                .addField(\"uID\", int.class)\n                .addField(\"ts\", long.class)\n                .addField(\"type\", String.class);\n\n            oldVersion++;\n        }\n```\n\nMy applications crashes with the following exception:\n\n`\nProcess: com.vectorwatch.android, PID: 22182 java.lang.RuntimeException: Unable to create application com.android.tools.fd.runtime.BootstrapApplication: io.realm.exceptions.RealmMigrationNeededException: RealmMigration must be provided\n                                                                             at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4664)`\n\nI've dived deeper in Realm code and I've saw that an exception is thrown with the following detailsMessage:\n\n`Index not defined for field myid in existing Realm file. Either set @Index or migrate using io.realm.internal.Table.removeSearchIndex().\n`\n\nSo I assumed that I should call also addIndex() in the migration. This did the trick, but this is was kind of annoying. From the Realm documentation, I see that \"(the annotation @PrimaryKey implicitly sets the annotation @Index)\". The javadoc of the addPrimaryKey method says:\n\n`\n     * Adds a primary key to a given field. This is the same as adding the {@link io.realm.annotations.PrimaryKey} annotation on the field.\n`\n\nSo I assumed that addPrimaryKey() also adds an Index. It is nowhere mentioned that when performing a migration, you should call addIndex() when you have an addPrimaryKey().\n\nCan I make a pull request to add this use case in your Migration example app? Also please tell if I can help anymore you with this issue.\n\nThank you very much for this great framework!\n", "url": "https://github.com/realm/realm-java/issues/2819", "user": "vladiulianbogdan", "labels": ["T-Bug"], "created": "2016-05-16 22:38:14", "closed": "2016-05-18 16:32:47", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Missing null check in BaseRealm.addChangeListener(RealmChangeListener)", "body": "From SO.\n\nhttp://stackoverflow.com/questions/37146656\n\n```\njava.lang.NullPointerException: Attempt to invoke interface method 'void io.realm.RealmChangeListener.onChange()' on a null object reference\n```\n", "url": "https://github.com/realm/realm-java/issues/2772", "user": "zaki50", "labels": ["T-Bug"], "created": "2016-05-10 22:09:24", "closed": "2016-05-16 23:25:25", "commits": {"564c21f6af124ed81e80abfd9b90aa85bfe64df0": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "6e735906fdfe2d2afab7b802a71055c5ed908dca": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "0b8e0e58a40d265518a6b62fc0e7668a16101d64": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "564c21f6af124ed81e80abfd9b90aa85bfe64df0", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "6e735906fdfe2d2afab7b802a71055c5ed908dca", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0b8e0e58a40d265518a6b62fc0e7668a16101d64", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["e390c84e1455d6517a8126564650be3d23b6b1fd"], "nameRev": "0b8e0e58a40d265518a6b62fc0e7668a16101d64 tags/v0.91.0~17", "commitMessage": "add a null check to addChangeListener and removeChangeListener (#2805)\n\n* add a null check to addChangeListener and removeChangeListener in Realm and DynamicRealm (fixes #2772)\r\n\r\n* reflect review comments\r\n", "commitDateTime": "2016-05-16 16:25:25", "authoredDateTime": "2016-05-16 16:25:25", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/DynamicRealmTests.java", "insertions": 70, "deletions": 0, "lines": 70}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmObjectTests.java", "insertions": 50, "deletions": 7, "lines": 57}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmTests.java", "insertions": 66, "deletions": 0, "lines": 66}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/TestHelper.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "realm/realm-library/src/main/java/io/realm/BaseRealm.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "realm/realm-library/src/main/java/io/realm/DynamicRealm.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/main/java/io/realm/Realm.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmObject.java", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmResults.java", "insertions": 6, "deletions": 2, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DynamicRealmTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.DynamicRealmTests.addChangeListener_throwOnAddingNullListenerFromLooperThread()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmTests.addChangeListener_throwOnAddingNullListenerFromNonLooperThread()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmTests.removeChangeListener_throwOnRemovingNullListenerFromLooperThread()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmTests.removeChangeListener_throwOnRemovingNullListenerFromNonLooperThread()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmObjectTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmObjectTests.addChangeListener_throwOnAddingNullListener()", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.removeChangeListener_throwOnRemovingNullListener()", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.addChangeListener_shouldNotAddDupEntriesToHandlerRealmObjects()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.addChangeListener_shouldAddTheObjectToHandlerRealmObjects()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.addChangeListener_throwOnUnmanagedObject()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.removeChangeListeners().12", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.removeChangeListener_throwOnUnmanagedObject().13", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.addChangeListener_returnedObjectOfCopyToRealmOrUpdate().14", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.addChangeListener_shouldAddTheObjectToHandlerRealmObjects().15", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.addChangeListener_checkHandlerRealmObjectsWhenCallingOnAsyncObject().18", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.addChangeListener_throwOnUnmanagedObject().11", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.removeChangeListeners().12.onChange(io.realm.entities.Dog)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.addChangeListener_returnedObjectOfCopyToRealmOrUpdate().14.onChange(io.realm.entities.AllTypesPrimaryKey)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.addChangeListener_checkHandlerRealmObjectsWhenCallingOnAsyncObject().18.onChange(io.realm.entities.AllTypesPrimaryKey)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.addChangeListener_throwOnAddingNullListenerFromNonLooperThread()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.removeChangeListener_throwOnRemovingNullListenerFromNonLooperThread()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.removeChangeListener_throwOnRemovingNullListenerFromLooperThread()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.addChangeListener_shouldNotAddDupEntriesToHandlerRealmObjects().16", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.addChangeListener_shouldNotAddDupEntriesToHandlerRealmObjects().16.onChange(io.realm.entities.AllTypesPrimaryKey)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RealmTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmTests.removeChangeListenerThrowExceptionOnNonLooperThread()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.removeAllChangeListenersThrowExceptionOnNonLooperThread()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.waitForChange_withDataChange()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.waitForChange_emptyDataChange()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.waitForChange_syncBackgroundRealmResults()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.stopWaitForChange()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.waitForChange_stopWaitForChangeDisablesWaiting()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.waitForChange_blockSpecificThreadOnly()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.waitForChange_interruptingThread()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.waitForChange_onLooperThread()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.waitForChange_stopWaitingOnClosedRealmThrows()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.removeChangeListenerThrowExceptionOnNonLooperThread().30", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.removeAllChangeListenersThrowExceptionOnNonLooperThread().31", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.waitForChange_withDataChange().33", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.waitForChange_emptyDataChange().32", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.waitForChange_syncBackgroundRealmResults().34", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.stopWaitForChange().35", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.waitForChange_stopWaitForChangeDisablesWaiting().36", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.waitForChange_blockSpecificThreadOnly().37", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.waitForChange_blockSpecificThreadOnly().38", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.waitForChange_interruptingThread().39", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.waitForChange_onLooperThread().40", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.waitForChange_stopWaitingOnClosedRealmThrows().41", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.waitForChange_runWithRealmThread().42", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.waitForChange_endRealmThread().43", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.removeChangeListenerThrowExceptionOnNonLooperThread().30.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.removeAllChangeListenersThrowExceptionOnNonLooperThread().31.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.waitForChange_onLooperThread().40.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.addChangeListener_throwOnAddingNullListenerFromLooperThread()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.addChangeListener_throwOnAddingNullListenerFromNonLooperThread()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.removeChangeListener_throwOnRemovingNullListenerFromLooperThread()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.removeChangeListener_throwOnRemovingNullListenerFromNonLooperThread()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestHelper.java", "spoonMethods": [{"spoonMethodName": "io.realm.TestHelper.Task", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.TestHelper.executeOnNonLooperThread(io.realm.TestHelper$Task)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseRealm.java", "spoonMethods": [{"spoonMethodName": "io.realm.BaseRealm.addListener(io.realm.RealmChangeListener)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BaseRealm.removeChangeListener(io.realm.RealmChangeListener)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DynamicRealm.java", "spoonMethods": []}, {"spoonFilePath": "Realm.java", "spoonMethods": []}, {"spoonFilePath": "RealmObject.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmObject.addChangeListener(io.realm.RealmModel,io.realm.RealmChangeListener)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObject.removeChangeListener(io.realm.RealmModel,io.realm.RealmChangeListener)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmResults.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Concurrency problem of `HandlerController.syncRealmResults`, `emptyAsyncRealmObject and etc..", "body": "Those fields will be accessed from executor thread, we need a proper lock/thread safe structure.\n\nAlso refer to https://github.com/realm/realm-java/pull/2723/files#r61868311 , need a better way to avoid traversing.\n", "url": "https://github.com/realm/realm-java/issues/2724", "user": "beeender", "labels": ["T-Bug"], "created": "2016-05-03 12:09:32", "closed": "2016-05-16 14:21:53", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "javassist.CannotCompileException", "body": "Hi,\n\nI'm using version 0.89.1  for Android and I keep getting the above mentioned error. My Stack trace is written below\n\n```\nError:17:35:13.605 [ERROR] [system.err] Note: Processing class Addon\n17:35:13.605 [ERROR] [system.err] Note: Processing class Appointment\n17:35:13.606 [ERROR] [system.err] Note: Processing class Area\n17:35:13.606 [ERROR] [system.err] Note: Processing class Categories\n17:35:13.606 [ERROR] [system.err] Note: Processing class Clinic\n17:35:13.606 [ERROR] [system.err] Note: Processing class CompletionCategories\n17:35:13.606 [ERROR] [system.err] Note: Processing class Country\n17:35:13.606 [ERROR] [system.err] Note: Processing class Day\n17:35:13.606 [ERROR] [system.err] Note: Processing class DayMealCategory\n17:35:13.606 [ERROR] [system.err] Note: Processing class Doctor\n17:35:13.606 [ERROR] [system.err] Note: Processing class Item\n17:35:13.606 [ERROR] [system.err] Note: Processing class ItemsSelections\n17:35:13.606 [ERROR] [system.err] Note: Processing class Meal\n17:35:13.606 [ERROR] [system.err] Note: Processing class Order\n17:35:13.606 [ERROR] [system.err] Note: Processing class Package\n17:35:13.607 [ERROR] [system.err] Note: Processing class Paths\n17:35:13.607 [ERROR] [system.err] Note: Processing class Province\n17:35:13.607 [ERROR] [system.err] Note: Processing class Salt\n17:35:13.607 [ERROR] [system.err] Note: Processing class SelectedDate\n17:35:13.607 [ERROR] [system.err] Note: Processing class Selections\n17:35:13.607 [ERROR] [system.err] Note: Processing class Settings\n17:35:13.607 [ERROR] [system.err] Note: Processing class Sex\n17:35:13.607 [ERROR] [system.err] Note: Processing class Time\n17:35:13.607 [ERROR] [system.err] Note: Processing class User\n17:35:13.607 [ERROR] [system.err] Note: Creating DefaultRealmModule\n17:35:14.259 [ERROR] [system.err] Note: Some input files use unchecked or unsafe operations.\n17:35:14.260 [ERROR] [system.err] Note: Recompile with -Xlint:unchecked for details.\n17:35:14.576 [ERROR] [org.gradle.BuildExceptionReporter] \n17:35:14.576 [ERROR] [org.gradle.BuildExceptionReporter] FAILURE: Build failed with an exception.\n17:35:14.576 [ERROR] [org.gradle.BuildExceptionReporter] \n17:35:14.576 [ERROR] [org.gradle.BuildExceptionReporter] * What went wrong:\n17:35:14.576 [ERROR] [org.gradle.BuildExceptionReporter] Execution failed for task ':app:transformClassesWithRealmTransformerForDebug'.\n17:35:14.576 [ERROR] [org.gradle.BuildExceptionReporter] > javassist.CannotCompileException: showMenu ()V in dietfix.com.mahmoudhaddad.dietfix.MenuActivity: failed to resolve types\n17:35:14.576 [ERROR] [org.gradle.BuildExceptionReporter] \n17:35:14.576 [ERROR] [org.gradle.BuildExceptionReporter] * Exception is:\n17:35:14.577 [ERROR] [org.gradle.BuildExceptionReporter] org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':app:transformClassesWithRealmTransformerForDebug'.\n17:35:14.577 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:69)\n17:35:14.577 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:46)\n17:35:14.577 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.api.internal.tasks.execution.PostExecutionAnalysisTaskExecuter.execute(PostExecutionAnalysisTaskExecuter.java:35)\n17:35:14.577 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:64)\n17:35:14.577 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:58)\n17:35:14.577 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:52)\n17:35:14.578 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:52)\n17:35:14.578 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:53)\n17:35:14.578 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)\n17:35:14.578 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:203)\n17:35:14.578 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:185)\n17:35:14.578 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.processTask(AbstractTaskPlanExecutor.java:66)\n17:35:14.578 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.run(AbstractTaskPlanExecutor.java:50)\n17:35:14.578 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor.process(DefaultTaskPlanExecutor.java:25)\n17:35:14.578 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter.execute(DefaultTaskGraphExecuter.java:110)\n17:35:14.578 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.execution.SelectedTaskExecutionAction.execute(SelectedTaskExecutionAction.java:37)\n17:35:14.578 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:37)\n17:35:14.578 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.execution.DefaultBuildExecuter.access$000(DefaultBuildExecuter.java:23)\n17:35:14.579 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.execution.DefaultBuildExecuter$1.proceed(DefaultBuildExecuter.java:43)\n17:35:14.579 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.execution.DryRunBuildExecutionAction.execute(DryRunBuildExecutionAction.java:32)\n17:35:14.579 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:37)\n17:35:14.579 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:30)\n17:35:14.579 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.initialization.DefaultGradleLauncher$4.run(DefaultGradleLauncher.java:154)\n17:35:14.579 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.internal.Factories$1.create(Factories.java:22)\n17:35:14.579 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:90)\n17:35:14.579 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:52)\n17:35:14.579 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.initialization.DefaultGradleLauncher.doBuildStages(DefaultGradleLauncher.java:151)\n17:35:14.579 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.initialization.DefaultGradleLauncher.access$200(DefaultGradleLauncher.java:32)\n17:35:14.579 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.initialization.DefaultGradleLauncher$1.create(DefaultGradleLauncher.java:99)\n17:35:14.579 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.initialization.DefaultGradleLauncher$1.create(DefaultGradleLauncher.java:93)\n17:35:14.580 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:90)\n17:35:14.580 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:62)\n17:35:14.580 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.initialization.DefaultGradleLauncher.doBuild(DefaultGradleLauncher.java:93)\n17:35:14.580 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.initialization.DefaultGradleLauncher.run(DefaultGradleLauncher.java:82)\n17:35:14.580 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.exec.InProcessBuildActionExecuter$DefaultBuildController.run(InProcessBuildActionExecuter.java:94)\n17:35:14.580 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.tooling.internal.provider.runner.BuildModelActionRunner.run(BuildModelActionRunner.java:46)\n17:35:14.580 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)\n17:35:14.580 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.tooling.internal.provider.runner.SubscribableBuildActionRunner.run(SubscribableBuildActionRunner.java:58)\n17:35:14.580 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)\n17:35:14.580 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:43)\n17:35:14.580 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:28)\n17:35:14.580 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.exec.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:78)\n17:35:14.580 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.exec.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:48)\n17:35:14.581 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:52)\n17:35:14.581 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\n17:35:14.581 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n17:35:14.581 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:37)\n17:35:14.581 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n17:35:14.581 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:26)\n17:35:14.581 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n17:35:14.581 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:34)\n17:35:14.581 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n17:35:14.581 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:74)\n17:35:14.581 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:72)\n17:35:14.581 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.util.Swapper.swap(Swapper.java:38)\n17:35:14.581 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:72)\n17:35:14.582 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n17:35:14.582 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.health.DaemonHealthTracker.execute(DaemonHealthTracker.java:47)\n17:35:14.582 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n17:35:14.582 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:66)\n17:35:14.582 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\n17:35:14.582 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n17:35:14.582 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:72)\n17:35:14.582 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\n17:35:14.582 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n17:35:14.582 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.health.HintGCAfterBuild.execute(HintGCAfterBuild.java:41)\n17:35:14.582 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n17:35:14.582 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:50)\n17:35:14.582 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:246)\n17:35:14.583 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54)\n17:35:14.583 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40)\n17:35:14.583 [ERROR] [org.gradle.BuildExceptionReporter] Caused by: java.lang.RuntimeException: javassist.CannotCompileException: showMenu ()V in dietfix.com.mahmoudhaddad.dietfix.MenuActivity: failed to resolve types\n17:35:14.583 [ERROR] [org.gradle.BuildExceptionReporter]    at com.android.builder.profile.Recorder$Block.handleException(Recorder.java:54)\n17:35:14.583 [ERROR] [org.gradle.BuildExceptionReporter]    at com.android.builder.profile.ThreadRecorder$1.record(ThreadRecorder.java:57)\n17:35:14.583 [ERROR] [org.gradle.BuildExceptionReporter]    at com.android.builder.profile.ThreadRecorder$1.record(ThreadRecorder.java:47)\n17:35:14.583 [ERROR] [org.gradle.BuildExceptionReporter]    at com.android.build.gradle.internal.pipeline.TransformTask.transform(TransformTask.java:173)\n17:35:14.583 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:75)\n17:35:14.583 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$IncrementalTaskAction.doExecute(AnnotationProcessingTaskFactory.java:244)\n17:35:14.583 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.execute(AnnotationProcessingTaskFactory.java:220)\n17:35:14.583 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$IncrementalTaskAction.execute(AnnotationProcessingTaskFactory.java:231)\n17:35:14.583 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.execute(AnnotationProcessingTaskFactory.java:209)\n17:35:14.583 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:80)\n17:35:14.583 [ERROR] [org.gradle.BuildExceptionReporter]    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:61)\n17:35:14.583 [ERROR] [org.gradle.BuildExceptionReporter]    ... 70 more\n17:35:14.583 [ERROR] [org.gradle.BuildExceptionReporter] Caused by: javassist.CannotCompileException: showMenu ()V in dietfix.com.mahmoudhaddad.dietfix.MenuActivity: failed to resolve types\n17:35:14.583 [ERROR] [org.gradle.BuildExceptionReporter]    at javassist.expr.ExprEditor.doit(ExprEditor.java:117)\n17:35:14.584 [ERROR] [org.gradle.BuildExceptionReporter]    at javassist.CtBehavior.instrument(CtBehavior.java:712)\n17:35:14.584 [ERROR] [org.gradle.BuildExceptionReporter]    at javassist.CtBehavior$instrument.call(Unknown Source)\n17:35:14.584 [ERROR] [org.gradle.BuildExceptionReporter]    at io.realm.transformer.BytecodeModifier$_useRealmAccessors_closure2.doCall(BytecodeModifier.groovy:73)\n17:35:14.584 [ERROR] [org.gradle.BuildExceptionReporter]    at io.realm.transformer.BytecodeModifier.useRealmAccessors(BytecodeModifier.groovy:61)\n17:35:14.584 [ERROR] [org.gradle.BuildExceptionReporter]    at io.realm.transformer.BytecodeModifier$useRealmAccessors$2.call(Unknown Source)\n17:35:14.584 [ERROR] [org.gradle.BuildExceptionReporter]    at io.realm.transformer.RealmTransformer$_transform_closure11.doCall(RealmTransformer.groovy:131)\n17:35:14.584 [ERROR] [org.gradle.BuildExceptionReporter]    at io.realm.transformer.RealmTransformer.transform(RealmTransformer.groovy:128)\n17:35:14.584 [ERROR] [org.gradle.BuildExceptionReporter]    at com.android.build.api.transform.Transform.transform(Transform.java:308)\n17:35:14.584 [ERROR] [org.gradle.BuildExceptionReporter]    at com.android.build.gradle.internal.pipeline.TransformTask$3.call(TransformTask.java:178)\n17:35:14.584 [ERROR] [org.gradle.BuildExceptionReporter]    at com.android.build.gradle.internal.pipeline.TransformTask$3.call(TransformTask.java:174)\n17:35:14.584 [ERROR] [org.gradle.BuildExceptionReporter]    at com.android.builder.profile.ThreadRecorder$1.record(ThreadRecorder.java:55)\n17:35:14.584 [ERROR] [org.gradle.BuildExceptionReporter]    ... 79 more\n17:35:14.584 [ERROR] [org.gradle.BuildExceptionReporter] Caused by: javassist.bytecode.BadBytecode: showMenu ()V in dietfix.com.mahmoudhaddad.dietfix.MenuActivity: failed to resolve types\n17:35:14.584 [ERROR] [org.gradle.BuildExceptionReporter]    at javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:111)\n17:35:14.584 [ERROR] [org.gradle.BuildExceptionReporter]    at javassist.bytecode.MethodInfo.rebuildStackMap(MethodInfo.java:440)\n17:35:14.584 [ERROR] [org.gradle.BuildExceptionReporter]    at javassist.bytecode.MethodInfo.rebuildStackMapIf6(MethodInfo.java:422)\n17:35:14.584 [ERROR] [org.gradle.BuildExceptionReporter]    at javassist.expr.ExprEditor.doit(ExprEditor.java:113)\n17:35:14.584 [ERROR] [org.gradle.BuildExceptionReporter]    ... 90 more\n17:35:14.584 [ERROR] [org.gradle.BuildExceptionReporter] Caused by: javassist.bytecode.BadBytecode: failed to resolve types\n17:35:14.584 [ERROR] [org.gradle.BuildExceptionReporter]    at javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:169)\n17:35:14.584 [ERROR] [org.gradle.BuildExceptionReporter]    at javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:108)\n17:35:14.585 [ERROR] [org.gradle.BuildExceptionReporter]    ... 93 more\n17:35:14.585 [ERROR] [org.gradle.BuildExceptionReporter] Caused by: javassist.NotFoundException: org.json.JSONException\n17:35:14.585 [ERROR] [org.gradle.BuildExceptionReporter]    at javassist.ClassPool.get(ClassPool.java:452)\n17:35:14.585 [ERROR] [org.gradle.BuildExceptionReporter]    at javassist.bytecode.stackmap.TypeData$TypeVar.fixTypes2(TypeData.java:347)\n17:35:14.585 [ERROR] [org.gradle.BuildExceptionReporter]    at javassist.bytecode.stackmap.TypeData$TypeVar.fixTypes(TypeData.java:330)\n17:35:14.585 [ERROR] [org.gradle.BuildExceptionReporter]    at javassist.bytecode.stackmap.TypeData$TypeVar.dfs(TypeData.java:274)\n17:35:14.585 [ERROR] [org.gradle.BuildExceptionReporter]    at javassist.bytecode.stackmap.MapMaker.fixTypes(MapMaker.java:390)\n17:35:14.585 [ERROR] [org.gradle.BuildExceptionReporter]    at javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:167)\n17:35:14.585 [ERROR] [org.gradle.BuildExceptionReporter]    ... 94 more\n17:35:14.585 [ERROR] [org.gradle.BuildExceptionReporter] \n```\n", "url": "https://github.com/realm/realm-java/issues/2703", "user": "mhadad", "labels": ["T-Bug"], "created": "2016-04-28 14:39:42", "closed": "2016-05-13 05:00:48", "commits": {"b517b35cfb995c78e37de00eb43cdc804f01b8b2": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "96c694f61c9ccf0c05678a9177744eaf81756675": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "a13d84ce3ae63b100a85b08359f6c6863c0ae728": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "b7f26e7ebabc9cca8b6ba33f9f51a6b9d7c4fdc0": {"commitGHEventType": "referenced", "commitUser": "cmelchior"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "b517b35cfb995c78e37de00eb43cdc804f01b8b2", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "96c694f61c9ccf0c05678a9177744eaf81756675", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a13d84ce3ae63b100a85b08359f6c6863c0ae728", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b7f26e7ebabc9cca8b6ba33f9f51a6b9d7c4fdc0", "commitGHEventType": "referenced", "commitUser": "cmelchior", "commitParents": ["fb0a12dc4bee53e00f1dfd51d6239247268b0afb"], "nameRev": "b7f26e7ebabc9cca8b6ba33f9f51a6b9d7c4fdc0 tags/v0.90.1~1", "commitMessage": "Workaround to add android.jar for transform (#2741)\n\nClose #2703\r\n\r\nWhile javassit manipulating the method, it requires all of the classed\r\nused in the method can be found in the class pool. But android.jar will\r\nnot be passed to the transform -- It is not in any of\r\nQualifiedContent.Scope definitions.\r\n\r\nWe use project.android.bootClasspath which is public right now to get\r\nthe path to android.jar. Project is passed from gradle.\r\nSee https://android.googlesource.com/platform/tools/base/+/studio-master-dev/build-system/gradle/src/main/groovy/com/android/build/gradle/BaseExtension.java#737", "commitDateTime": "2016-05-12 18:46:05", "authoredDateTime": "2016-05-13 00:46:05", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "gradle-plugin/src/main/groovy/io/realm/gradle/Realm.groovy", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm-transformer/src/main/groovy/io/realm/transformer/RealmTransformer.groovy", "insertions": 24, "deletions": 0, "lines": 24}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Detect ConcurrentModification when deleting from RealmList", "body": "The following code does not work correctly:\n\n```\nRealmList<Dog> dogs = person.getDogs();\n\nfor (Dog dog : dogs) {\n  dog.deleteFromRealm();\n}\n```\n\nThe reason being that changes to RealmList is reflected at once unlike RealmResult that are not updated until next looper event. The easy work-around is just using `dogs.deleteAllFromRealm()` but an ConcurrentModificationException should still be thrown in the above case.\n\nRealmList keeps track of `modCount` just like a normal ArrayList, so it can detect ConcurrentModificationExceptions if you operate directly on the RealmList through e.g. `list.add()/list.remove()`, but that is currently not happening for \"indirect\" deletes like `obj.deleteFromRealm()`.\n\nI don't have a good solution as there are a number of indirect deletes possible: `realm.delete(Dog.class) / dog.deleteFromRealm()`, but the standard ConcurrentModification doesn't catch all cases either.\n\nThe easiest is probably to keep track of a `size()` before each call to `next()` and throw if it changed, but there might be edge cases I didn't consider, and it adds a JNI overhead to all iterations.\n\nWe could also just document it, but I am not sure where the best place for that would be.\n", "url": "https://github.com/realm/realm-java/issues/2688", "user": "cmelchior", "labels": ["Design-Required", "T-Bug"], "created": "2016-04-27 13:46:20", "closed": "2017-08-25 06:17:35", "commits": {}, "ttf": 484.0002777777778, "commitsDetails": []}, {"title": "Memory Leak leads to Crash", "body": "Sorry, I am not very sure whether this Crash is caused by Realm, but Android Studio `Allocation Tracking` shows relevant information with Realm, so I past the main code.\nThanks!\n#### Goal\n\n> Fix a Memory Leak bug\n#### Expected Results\n\n> Fix\n#### Actual Results\n\nWhen the App is on the `MainActivity` (as bellow code) page, the memory is increased slowly, and then crashed.\n\n![screenshot from 2016-04-27 18-32-00](https://cloud.githubusercontent.com/assets/1092722/14850628/efd5858c-0cac-11e6-81ac-13973a60faf0.png)\n#### Steps & Code to Reproduce\n\n> Describe your current debugging efforts.\n#### Code Sample\n\nMainActivity.java\n\n``` java\n\npackage top.honhe.server.activity;\nimport android.content.SharedPreferences;\nimport android.os.Bundle;\nimport android.os.Handler;\nimport android.os.Message;\nimport android.support.v7.app.AppCompatActivity;\nimport android.util.Log;\nimport android.widget.ListView;\nimport org.greenrobot.eventbus.EventBus;\nimport org.greenrobot.eventbus.Subscribe;\nimport org.greenrobot.eventbus.ThreadMode;\nimport java.util.Map;\nimport java.util.Timer;\nimport java.util.TimerTask;\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\nimport io.realm.Realm;\nimport io.realm.RealmConfiguration;\nimport io.realm.RealmResults;\nimport top.honhe.server.R;\nimport top.honhe.server.adapter.BedAdapter;\nimport top.honhe.server.event.PingBedResultEvent;\nimport top.honhe.server.model.Bed;\nimport top.honhe.server.utils.Ping;\nimport top.honhe.server.utils.SharePreferenceUtil;\n\npublic class MainActivity extends AppCompatActivity{\n    private static final int PING_BEDTASK_PERIOD = 8000;\n    private static final int PING_BEDTASK_DELAY = 5000;\n    private ExecutorService fixedThreadPool;\n    private EventBus eventBus;\n    private Realm realm;\n    private SharedPreferences.OnSharedPreferenceChangeListener prefListener;\n    private TimerTask timerTask;\n    private  Timer timer;\n    private static final int MSG_MONITOR_BED = 1;\n    private final int nThreads = 10;\n    public RealmConfiguration realmConf;\n    private Handler handler = new Handler() {\n        @Override\n        public void handleMessage(Message msg) {\n            super.handleMessage(msg);\n            switch (msg.what) {\n                case MSG_MONITOR_BED:\n                    startPingBeds();\n                    break;\n                default:\n            }\n        }\n    };\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_monitor);\n        initBedData();\n        initEventBus();\n    }\n    @Override\n    protected void onResume() {\n        super.onResume();\n        initThreadPool();\n        eventBus.register(this);\n        startMainBed();\n    }\n    private void initThreadPool() {\n        fixedThreadPool = Executors.newFixedThreadPool(nThreads);\n    }\n    private void initEventBus() {\n        eventBus = EventBus.getDefault();\n    }\n    @Subscribe(threadMode = ThreadMode.MAIN)\n    public void onEvent(PingBedResultEvent event) {\n        Log.d(\"TAG\", event.getIp() + \" is on: \" + event.getisOn());\n        realm.beginTransaction();\n        realm.where(Bed.class).equalTo(\"id\", event.getId()).equalTo(\"ip\", event.getIp()).findFirst().setOn(event.getisOn());\n        realm.commitTransaction();\n    }\n    private void initBedData() {\n        realmConf = new RealmConfiguration.Builder(this)\n                .name(\"Main_bed.realm\")\n                .inMemory()\n                .build();\n        realm = Realm.getInstance(realmConf);\n        final RealmResults<Bed> bedRealmResults = realm.where(Bed.class).findAll();\n        final BedAdapter bedAdapter = new BedAdapter(this, bedRealmResults);\n        ListView listView = (ListView) findViewById(R.id.bedListView);\n        listView.setAdapter(bedAdapter);\n        realm.executeTransactionAsync(new Realm.Transaction() {\n            @Override\n            public void execute(Realm realm) {\n                realm.where(Bed.class).findAll().deleteAllFromRealm();\n                for (Map.Entry<String, Bed> entry : SharePreferenceUtil.getInstance().getBeds().entrySet()) {\n                    realm.copyToRealm(entry.getValue());\n                }\n            }\n        });\n        setupBedOnChangeListener();\n    }\n    private void setupBedOnChangeListener() {\n        prefListener = new SharedPreferences.OnSharedPreferenceChangeListener() {\n            public void onSharedPreferenceChanged(SharedPreferences prefs, String key) {\n                String ip = prefs.getString(key, \"\");\n                realm.beginTransaction();\n                realm.where(Bed.class).equalTo(\"id\", key).findFirst().setIp(ip);\n                realm.commitTransaction();\n            }\n        };\n        SharePreferenceUtil.getInstance().getSp().registerOnSharedPreferenceChangeListener(prefListener);\n    }\n    private void startPingBeds() {\n        Log.d(\"StartPingBeds\", \"StartPingBeds\");\n        final RealmResults<Bed> bedRealmResults = realm.where(Bed.class).findAll();\n        for (Bed bed : bedRealmResults) {\n            startPingThread(new Bed(bed.getId(), bed.getIp()));\n        }\n    }\n    private void startPingThread(final Bed bed) {\n        fixedThreadPool.submit(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    boolean isOn = Ping.ping(bed);\n                    PingBedResultEvent pingBedResultEvent = new PingBedResultEvent();\n                    pingBedResultEvent.setIp(bed.getIp());\n                    pingBedResultEvent.setId(bed.getId());\n                    pingBedResultEvent.setIsOn(isOn);\n                    EventBus eventBus = EventBus.getDefault();\n                    eventBus.post(pingBedResultEvent);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    throw new RuntimeException();\n                }\n            }\n        });\n    }\n    private void startMainBed() {\n        startMainBedTimerTask();\n    }\n    private void startMainBedTimerTask() {\n        timer = new Timer();\n        timerTask = new TimerTask() {\n            @Override\n            public void run() {\n                Message message = new Message();\n                message.what = MSG_Main_BED;\n                handler.sendMessage(message);\n            }\n        };\n        timer.schedule(timerTask, PING_BEDTASK_DELAY, PING_BEDTASK_PERIOD);\n    }\n    @Override\n    protected void onStop() {\n        super.onStop();\n        fixedThreadPool.shutdown();\n        eventBus.unregister(this);\n        timer.cancel();\n    }\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        realm.removeAllChangeListeners();\n        SharePreferenceUtil.getInstance().getSp().unregisterOnSharedPreferenceChangeListener(prefListener);\n    }\n}\n\n```\n\nPing.java\n\n``` java\n\npackage top.honhe.server.utils;\nimport java.io.IOException;\nimport top.honhe.server.model.Bed;\n\npublic class Ping {\n    public static boolean ping(Bed bed){\n        Runtime runtime = Runtime.getRuntime();\n        boolean isOn;\n        try\n        {\n            Process  mIpAddrProcess = runtime.exec(\"/system/bin/ping -c 1 -W 2 \" + bed.getIp());\n            int mExitValue = mIpAddrProcess.waitFor();\n//            Log.d(\"Ping\", \" mExitValue \"+mExitValue);\n            if(mExitValue==0){\n                isOn = true;\n            }else{\n                isOn = false;\n            }\n            return isOn;\n        }\n        catch (InterruptedException ignore)\n        {\n            ignore.printStackTrace();\n            System.out.println(\" Exception:\"+ignore);\n        }\n        catch (IOException e)\n        {\n            e.printStackTrace();\n            System.out.println(\" Exception:\"+e);\n        }\n        return false;\n    }\n}\n\n```\n#### Version of Realm and tooling\n\nRealm version(s): 0.89.1\n\nAndroid Studio version: 2.0\n\nWhich Android version and device: 4.x, 5.x\n", "url": "https://github.com/realm/realm-java/issues/2686", "user": "Honghe", "labels": ["T-Bug"], "created": "2016-04-27 11:27:20", "closed": "2016-05-05 03:09:33", "commits": {"935d76d4c30e38d32737a1b8877f6384b33064d7": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "06a7dd7bbbd40a6bd8adaddfae09599c941decf9": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "935d76d4c30e38d32737a1b8877f6384b33064d7", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "06a7dd7bbbd40a6bd8adaddfae09599c941decf9", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["cf1a3f2c8454809e019ca7f86460c77d2c462da0"], "nameRev": "06a7dd7bbbd40a6bd8adaddfae09599c941decf9 tags/v0.90.0~2", "commitMessage": "Add to realmObjects when addChangeListener called (#2723)\n\n* Only add the RealmObject to HandlerController.realmObjects when\r\n  addChangeListener called. This will avoid we have too many objects in\r\n  the map.\r\n* addToRealmObjects missed reference queue which would lead to the map\r\n  grows always without cleaning.\r\n\r\nClose #2569, potentially a fix to #2686 .\r\n", "commitDateTime": "2016-05-03 15:47:55", "authoredDateTime": "2016-05-03 15:47:55", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmObjectTests.java", "insertions": 118, "deletions": 1, "lines": 119}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/TypeBasedNotificationsTests.java", "insertions": 0, "deletions": 38, "lines": 38}, {"filePath": "realm/realm-library/src/main/java/io/realm/BaseRealm.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "realm/realm-library/src/main/java/io/realm/DynamicRealm.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "realm/realm-library/src/main/java/io/realm/HandlerController.java", "insertions": 11, "deletions": 3, "lines": 14}, {"filePath": "realm/realm-library/src/main/java/io/realm/Realm.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmObject.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmQuery.java", "insertions": 0, "deletions": 3, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmObjectTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmObjectTests.IsValid_deletedObject()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.addChangeListener_returnedObjectOfCopyToRealmOrUpdate()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.addChangeListener_shouldAddTheObjectToHandlerRealmObjects()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.addChangeListener_shouldNotAddDupEntriesToHandlerRealmObjects()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.addChangeListener_checkHandlerRealmObjectsWhenCallingOnAsyncObject()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeBasedNotificationsTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.TypeBasedNotificationsTests.changeListener_onResultsBuiltOnDeletedLinkView()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.TypeBasedNotificationsTests.change_realm_results_map_in_listener().53", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.TypeBasedNotificationsTests.changeListener_onResultsBuiltOnDeletedLinkView().54", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.TypeBasedNotificationsTests.changeListener_onResultsBuiltOnDeletedLinkView().55", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.TypeBasedNotificationsTests.changeListener_onResultsBuiltOnDeletedLinkView().55.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.TypeBasedNotificationsTests.changeListener_onResultsBuiltOnDeletedLinkView().54.onChange(io.realm.RealmResults)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.TypeBasedNotificationsTests.change_realm_objects_map_in_listener()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.TypeBasedNotificationsTests.change_realm_results_map_in_listener().53.onChange(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.TypeBasedNotificationsTests.change_realm_objects_map_in_listener().52.onChange(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "BaseRealm.java", "spoonMethods": [{"spoonMethodName": "io.realm.BaseRealm.get(java.lang.Class,long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.BaseRealm.get(java.lang.Class,java.lang.String,long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DynamicRealm.java", "spoonMethods": [{"spoonMethodName": "io.realm.DynamicRealm.createObject(java.lang.String,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HandlerController.java", "spoonMethods": [{"spoonMethodName": "io.realm.HandlerController.addToRealmObjects(io.realm.RealmModel)", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "io.realm.HandlerController.addToRealmObjects(io.realm.internal.RealmObjectProxy)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Realm.java", "spoonMethods": [{"spoonMethodName": "io.realm.Realm.createOrUpdateObjectFromJson(java.lang.Class,org.json.JSONObject)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RealmObject.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmObject.addChangeListener(io.realm.RealmModel,io.realm.RealmChangeListener)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmQuery.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmQuery.findFirst()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Generated RealmObjectProxy has wrong lookup for @Required String primary key with 0.89.0", "body": "#### Steps & Code to Reproduce\n\nCreate a `RealmObject` with a String field marked with `@PrimaryKey` and `@Required`.\n\n``` java\npublic class RealmUser extends RealmObject {\n    @PrimaryKey\n    @Required\n    public String _id;\n}\n```\n\nThe generated `RealmObjectProxy` class contains an invalid lookup for the primary key in the `copyOrUpdate` method. The compile-time exception is:\n\n```\nRealmUserRealmProxy.java:276: error: incompatible types: String cannot be converted to long\n            long rowIndex = table.findFirstLong(pkColumnIndex, ((RealmUserRealmProxyInterface) object).realmGet$_id());\n                                                                                                                   ^\n```\n\n I traced what I think is the wrong codepath here: https://github.com/realm/realm-java/blob/master/realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyClassGenerator.java#L642\nThe relevant generated code is:\n\n``` java\npublic static RealmUser copyOrUpdate(Realm realm, RealmUser object, boolean update, Map<RealmModel,RealmObjectProxy> cache) {\n    if (object instanceof RealmObjectProxy && ((RealmObjectProxy) object).realmGet$proxyState().getRealm$realm() != null && ((RealmObjectProxy) object).realmGet$proxyState().getRealm$realm().threadId != realm.threadId) {\n        throw new IllegalArgumentException(\"Objects which belong to Realm instances in other threads cannot be copied into this Realm instance.\");\n    }\n    if (object instanceof RealmObjectProxy && ((RealmObjectProxy)object).realmGet$proxyState().getRealm$realm() != null && ((RealmObjectProxy)object).realmGet$proxyState().getRealm$realm().getPath().equals(realm.getPath())) {\n        return object;\n    }\n    RealmUser realmObject = null;\n    boolean canUpdate = update;\n    if (canUpdate) {\n        Table table = realm.getTable(RealmUser.class);\n        long pkColumnIndex = table.getPrimaryKey();\n        long rowIndex = table.findFirstLong(pkColumnIndex, ((RealmUserRealmProxyInterface) object).realmGet$_id());\n        if (rowIndex != TableOrView.NO_MATCH) {\n            realmObject = new RealmUserRealmProxy(realm.schema.getColumnInfo(RealmUser.class));\n            ((RealmObjectProxy)realmObject).realmGet$proxyState().setRealm$realm(realm);\n            ((RealmObjectProxy)realmObject).realmGet$proxyState().setRow$realm(table.getUncheckedRow(rowIndex));\n            cache.put(object, (RealmObjectProxy) realmObject);\n        } else {\n            canUpdate = false;\n        }\n    }\n\n    if (canUpdate) {\n        return update(realm, realmObject, object, cache);\n    } else {\n        return copy(realm, object, update, cache);\n    }\n}\n```\n#### Version of Realm and tooling\n\nRealm version(s): 0.89.0\n\nAndroid Studio version: 2.1 Beta 3\n\nWhich Android version and device: N/A\n", "url": "https://github.com/realm/realm-java/issues/2637", "user": "dmarcato", "labels": ["T-Bug"], "created": "2016-04-21 21:27:23", "closed": "2016-04-25 13:23:54", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "toString", "body": "#### Goal\n\noverride toString\n#### Expected Results\n\ntoString to return my custom string\n#### Actual Results\n\nmy custom method is not being called and the default realm toString implementation is shown\n#### Steps & Code to Reproduce\n\ncreate custom object, override toString\n#### Version of Realm and tooling\n\nRealm version(s): 0.88.2\n\nAndroid Studio version: 1.5.1\n\nWhich Android version and device: Icecream,  Samsung S3\n", "url": "https://github.com/realm/realm-java/issues/2545", "user": "alfaro28", "labels": ["T-Bug"], "created": "2016-04-02 00:34:55", "closed": "2016-04-06 09:06:16", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Running `connectedCheck` on a project without instrumentation tests makes the Realm transformer fail", "body": "The failure is:\n\n```\njavassist.NotFoundException: io.realm.internal.RealmProxyMediator\n```\n\nand it's caused by the fact that, since the test app is empty, the Javassist pool doesn't contain any reference to Realm classes, hence failing at line 89:\n\n``` groovy\ndef baseProxyMediator = classPool.get('io.realm.internal.RealmProxyMediator')\n```\n", "url": "https://github.com/realm/realm-java/issues/2502", "user": "emanuelez", "labels": ["T-Bug"], "created": "2016-03-21 10:13:23", "closed": "2016-05-04 04:51:59", "commits": {}, "ttf": 43.000277777777775, "commitsDetails": []}, {"title": "RealmProxyMediator not found during travis build", "body": "Hi! After updating to 0.88 I've got following build problems. \n#### Goal\n\nCorrect build by travis \n`./gradlew build connectedCheck`\n#### Expected Results\n\nsuccessful build\n#### Actual Results\n\nGeneral assembleDebug or assembleRelease tasks are successful! But connectedCheck task used by travis fails:\n[![Build Status](https://travis-ci.org/redsolution/xabber-android.svg?branch=develop)](https://travis-ci.org/redsolution/xabber-android)\n\n> FAILURE: Build failed with an exception.\n> - What went wrong:\n>   Execution failed for task ':xabber:transformClassesWithRealmTransformerForBetaDebugAndroidTest'.\n>   > javassist.NotFoundException: io.realm.internal.RealmProxyMediator\n\nYou can see full travis log [here](https://travis-ci.org/redsolution/xabber-android/builds/117382757)\n#### Steps & Code to Reproduce\n\n[build.gradle](https://github.com/redsolution/xabber-android/blob/develop/xabber/build.gradle)\n[.travis.yml](https://github.com/redsolution/xabber-android/blob/develop/.travis.yml)\n[Project](https://github.com/redsolution/xabber-android/tree/develop)\n#### Version of Realm and tooling\n\nRealm version(s): 0.88.0 - 0.88.2 (was OK before)\ngradle: 1.5.0\nBuildTools: build-tools-23.0.2\nSDK version: android-23\n", "url": "https://github.com/realm/realm-java/issues/2501", "user": "grigoryfedorov", "labels": ["T-Bug"], "created": "2016-03-21 07:02:15", "closed": "2016-03-21 10:09:33", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "io.realm.internal.Table.finalize() timed out after 10 seconds", "body": "Copy from #1599 \nPeople are still seeing finalizer timeouts on 0.88.2: http://crashes.to/s/360245fd72a\nWe should look into how hard it would be to get rid of finalizers completely IMO.\n\n/cc @dalinaum\n", "url": "https://github.com/realm/realm-java/issues/2496", "user": "cmelchior", "labels": ["T-Bug"], "created": "2016-03-18 08:46:26", "closed": "2016-11-24 15:12:51", "commits": {}, "ttf": 251.00027777777777, "commitsDetails": []}, {"title": "UnsatisfiedLinkError exception on ReLinker", "body": "#### Expected Results\n\nNo exception\n#### Actual Results\n\nhttp://crashes.to/s/0a06f902ba4 (from VCNC's Crashlytics)\n\n```\nFatal Exception: java.lang.UnsatisfiedLinkError\ndlopen failed: library \"/data/data/kr.co.vcnc.android.couple/app_lib/librealm-jni.so\" not found\n```\n#### Steps & Code to Reproduce\n\nThis exception is only reported by Crashlytics.\n#### Version of Realm and tooling\n\nRealm version(s): 0.88.2\n\nWhich Android version and device: Kitkat and JellyBean: Android 4.4.2 (72%), 4.2.2 (16%), 4.4.4 (10%)\n", "url": "https://github.com/realm/realm-java/issues/2495", "user": "dalinaum", "labels": ["Reproduction-Required", "T-Bug"], "created": "2016-03-18 05:36:23", "closed": "2016-05-09 12:46:53", "commits": {}, "ttf": 52.000277777777775, "commitsDetails": []}, {"title": "Realm-Plugin breaks apt if Kotlin-plugin is used.", "body": "#### Goal\n\nSupport mixed Java/Kotlin projects\n#### Expected Results\n\nAllow for the project to specify if apt or kapt should be used. Don't break Dagger2 or ButterKnife.\n#### Actual Results\n- Classes that extend from RealmObject are generated.\n- Annotated Java class are not processed.\n\nI did manage to get the project to compile by replacing any instance of apt with kapt. But since all my Realm Objects are still in Java I would then get \"RealmTransformer doesn't seem to be applied.\" when trying to create a default RealmConfig.\n#### Steps & Code to Reproduce\n\nHave any Java Annotated class and the Kotlin Gradle plugin. I've also created a test project with a broken [ButterKnife example](https://github.com/marukami/Realm-Kotlin-Java-Mix-Break). The ButterKnife helper class does not get generated.\n#### Cause\n\nThe `isKotlinProject` assumes that if the project has the Kotlin plugin, then all annotation processing is done with kapt. I'm slowly moving a Java project over to Kotlin. So I need to maintain apt until I can switch to kapt.\n\n``` groovy\n\ndef isKotlinProject = project.plugins.find {\n    it.getClass().name == 'org.jetbrains.kotlin.gradle.plugin.KotlinAndroidPluginWrapper'\n}\n```\n#### Fix?\n\nWould it be possible to have an optional project variable that would override the current behaviour? \n#### Version of Realm and tooling\n\nRealm version(s): 0.88.x\n\nAndroid Studio version: 15\n\nWhich Android version and device: OS X\n", "url": "https://github.com/realm/realm-java/issues/2491", "user": "marukami", "labels": ["T-Bug"], "created": "2016-03-17 05:24:43", "closed": "2016-08-26 10:46:12", "commits": {}, "ttf": 162.00027777777777, "commitsDetails": []}, {"title": "Illegal Argument: Invalid format of Realm file", "body": "#### Actual Results\n\n```\nFatal Exception: java.lang.IllegalArgumentException: Illegal Argument: Invalid format of Realm file.\n   at io.realm.internal.SharedGroup.createNativeWithImplicitTransactions(SharedGroup.java)\n   at io.realm.internal.SharedGroup.(SharedGroup.java)\n   at io.realm.internal.SharedGroupManager.(SharedGroupManager.java)\n   at io.realm.BaseRealm.(BaseRealm.java)\n   at io.realm.Realm.(Realm.java)\n   at io.realm.Realm.createAndValidate(Realm.java:268)\n   at io.realm.Realm.createInstance(Realm.java:248)\n   at io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:114)\n   at io.realm.Realm.getInstance(Realm.java:213)\n   at kr.co.vcnc.android.couple.feature.MainTabIndicator.updateHomeBadge(MainTabIndicator.java:138)\n   at kr.co.vcnc.android.couple.feature.MainTabIndicator.onAttachedToWindow(MainTabIndicator.java:83)\n   at android.view.View.dispatchAttachedToWindow(View.java:11888)\n   at android.view.ViewGroup.dispatchAttachedToWindow(ViewGroup.java:2521)\n   at android.view.ViewGroup.dispatchAttachedToWindow(ViewGroup.java:2528)\n   at android.view.ViewGroup.dispatchAttachedToWindow(ViewGroup.java:2528)\n   at android.view.ViewGroup.dispatchAttachedToWindow(ViewGroup.java:2528)\n   at android.view.ViewGroup.dispatchAttachedToWindow(ViewGroup.java:2528)\n   at android.view.ViewGroup.dispatchAttachedToWindow(ViewGroup.java:2528)\n   at android.view.ViewGroup.dispatchAttachedToWindow(ViewGroup.java:2528)\n   at android.view.ViewGroup.dispatchAttachedToWindow(ViewGroup.java:2528)\n   at android.view.ViewGroup.dispatchAttachedToWindow(ViewGroup.java:2528)\n   at android.view.ViewGroup.dispatchAttachedToWindow(ViewGroup.java:2528)\n   at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1207)\n   at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1006)\n   at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:4225)\n   at android.view.Choreographer$CallbackRecord.run(Choreographer.java:725)\n   at android.view.Choreographer.doCallbacks(Choreographer.java:555)\n   at android.view.Choreographer.doFrame(Choreographer.java:525)\n   at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:711)\n   at android.os.Handler.handleCallback(Handler.java:615)\n   at android.os.Handler.dispatchMessage(Handler.java:92)\n   at android.os.Looper.loop(Looper.java:213)\n   at android.app.ActivityThread.main(ActivityThread.java:4786)\n   at java.lang.reflect.Method.invokeNative(Method.java)\n   at java.lang.reflect.Method.invoke(Method.java:511)\n   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:789)\n   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:556)\n   at dalvik.system.NativeStart.main(NativeStart.java)\n```\n#### Steps & Code to Reproduce\n\nI can't reproduce it. \nBut what i found out is that it happen where each realm configuration's instance is first created.\n\nThis exception is grouped with `Fatal Exception: io.realm.exceptions.RealmError\nUnrecoverable error. Incompatible lock file.`, i don't know exact ratio of version or device.\n#### Version of Realm and tooling\n\nRealm version(s): v0.88.2\n\nWhich Android version and device: I think most of crash came from 4.1.1 or 4.1.2 (based on each exception log what i saw)\n", "url": "https://github.com/realm/realm-java/issues/2488", "user": "hohnamkung", "labels": ["Reproduction-Required", "T-Bug"], "created": "2016-03-17 03:38:36", "closed": "2016-05-25 12:55:34", "commits": {}, "ttf": 69.00027777777778, "commitsDetails": []}, {"title": "RealmResults::asObservable not always returns a value when subscription is not kept in memory", "body": "#### Goal\n\n> What do you want to achieve?\n\nDo a lot of simple realm queries with `findAllAsync().asObservable()` and have them all return a value, even without explicitly holding a reference to its subscription.\n\n(or add a note in the docs about the importance of always holding a reference to the subscriptions? for the noobs like me...)\n#### Expected Results\n\nWhenever we create an observable with `findAllAsync().asObservable()`, it would be nice to always get a `RealmResults`, even when we don't hold a reference to the subscription.\n#### Actual Results\n\nSome observables created with `findAllAsync().asObservable()` will never call the `onNext(...)` of the subscription.\n#### Steps & Code to Reproduce\n\nI created a small Android app showing the problem I'm facing on a bigger application.\n\nThe important code is on this line:\nhttps://github.com/AranHase/TestFindAllAsync/blob/13ba8e68d9b9061825125ff3475c6d7091aa93bf/app/src/main/java/com/example/hasegawa/testfindallasync/MainActivity.kt#L84\n\nIn this test, one thousand \"Realm observables\" are created. Every time one observable is created, a counter gets incremented. For each of those observable, one subscription is created (and may or may not be explicitly stored in memory). When this subscription returns any value, another counter is incremented.\n\nWhen the subscription is stored in memory, then we get the expected behavior (one thousand observables created, and one thousand results). However, when we do not store the subscription in memory, the number of results may not be one thousand.\n\nThis line determines if the subscription should be kept in memory or not, and it will change the behavior of the program:\nhttps://github.com/AranHase/TestFindAllAsync/blob/13ba8e68d9b9061825125ff3475c6d7091aa93bf/app/src/main/java/com/example/hasegawa/testfindallasync/MainActivity.kt#L106\n\nI also tried a `flatMap` approach in here:\nhttps://github.com/AranHase/TestFindAllAsync/blob/13ba8e68d9b9061825125ff3475c6d7091aa93bf/app/src/main/java/com/example/hasegawa/testfindallasync/MainActivity.kt#L114\n\nHowever, `flatMap` fails with: \n\n```\n                                                                                   java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@b297227 rejected from io.realm.internal.async.RealmThreadPoolExecutor@873a166[Running, pool size = 5, active threads = 5, queued tasks = 100, completed tasks = 125]\n                                                                                             at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2014)\n                                                                                             at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:794)\n                                                                                             at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1340)\n                                                                                             at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:104)\n                                                                                             at io.realm.internal.async.RealmThreadPoolExecutor.submit(RealmThreadPoolExecutor.java:68)\n                                                                                             at io.realm.RealmQuery.findAllAsync(RealmQuery.java:1470)\n                                                                                             at com.example.hasegawa.testfindallasync.MainActivity$onClick$1.call(MainActivity.kt:90)\n                                                                                             at com.example.hasegawa.testfindallasync.MainActivity$onClick$1.call(MainActivity.kt:19)\n                                                                                             at rx.Observable$29.onNext(Observable.java:8031)\n                                                                                             at rx.observers.SafeSubscriber.onNext(SafeSubscriber.java:139)\n                                                                                             at rx.internal.operators.OnSubscribeRange$RangeProducer.fastpath(OnSubscribeRange.java:126)\n                                                                                             at rx.internal.operators.OnSubscribeRange$RangeProducer.request(OnSubscribeRange.java:63)\n                                                                                             at rx.Subscriber.setProducer(Subscriber.java:209)\n                                                                                             at rx.Subscriber.setProducer(Subscriber.java:205)\n                                                                                             at rx.internal.operators.OnSubscribeRange.call(OnSubscribeRange.java:38)\n                                                                                             at rx.internal.operators.OnSubscribeRange.call(OnSubscribeRange.java:26)\n                                                                                             at rx.Observable.subscribe(Observable.java:8191)\n                                                                                             at rx.Observable.subscribe(Observable.java:8158)\n                                                                                             at rx.Observable.subscribe(Observable.java:8017)\n                                                                                             at com.example.hasegawa.testfindallasync.MainActivity.onClick(MainActivity.kt:85)\n                                                                                             at android.view.View.performClick(View.java:5198)\n                                                                                             at android.view.View$PerformClick.run(View.java:21147)\n                                                                                             at android.os.Handler.handleCallback(Handler.java:739)\n                                                                                             at android.os.Handler.dispatchMessage(Handler.java:95)\n                                                                                             at android.os.Looper.loop(Looper.java:148)\n                                                                                             at android.app.ActivityThread.main(ActivityThread.java:5417)\n                                                                                             at java.lang.reflect.Method.invoke(Native Method)\n                                                                                             at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)\n                                                                                             at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)\n```\n#### Version of Realm and tooling\n\nRealm version(s): 0.88.1\n\nAndroid Studio version: 2.1 Preview 1\n\nWhich Android version and device: Nexus 5 API 23 (emulator)\n", "url": "https://github.com/realm/realm-java/issues/2485", "user": "AllanHasegawa", "labels": ["T-Bug"], "created": "2016-03-16 14:52:56", "closed": "2016-03-31 10:26:34", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "build execution fails on Windows after update to 88.2", "body": "#### Goal\n\nBuild the app successfully after update to 88.2\n#### Expected Results\n\nI am able to build\n#### Actual Results\n\nError:Execution failed for task ':app:transformClassesWithRealmTransformerForStagingDebug'.\ncannot find io/realm/MyClassRealmProxy: io.realm.MyClassRealmProxy found in io/realm/MyClassRealmProxy.class\n#### Steps & Code to Reproduce\n\nI am seeing this error after update to 88.2. When I downgrade back to 87.2 the project builds OK.\n#### Version of Realm and tooling\n\nRealm version(s): 87.2, 88.2\n\nAndroid Studio version: 1.5.1\nOS Version: Windows 10\n", "url": "https://github.com/realm/realm-java/issues/2484", "user": "bakua", "labels": ["Reproduction-Required", "T-Bug"], "created": "2016-03-16 13:42:14", "closed": "2016-04-06 04:10:24", "commits": {"05b02722b760d6f7c76617dc4b993581ecfd45eb": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "14c8497ba18bbeddc4a0253538c08f673940fa34": {"commitGHEventType": "closed", "commitUser": "beeender"}}, "ttf": 20.00027777777778, "commitsDetails": [{"commitHash": "05b02722b760d6f7c76617dc4b993581ecfd45eb", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "14c8497ba18bbeddc4a0253538c08f673940fa34", "commitGHEventType": "closed", "commitUser": "beeender", "commitParents": ["ee7e66ed8d0572e152d7fe1b651f732d052d5b8e"], "nameRev": "14c8497ba18bbeddc4a0253538c08f673940fa34 tags/v0.88.3~4^2", "commitMessage": "Fix transformer in lib project on Windows\n\nThe separator in jar file might not be File.separatorChar\nFix #2484\n", "commitDateTime": "2016-04-01 19:55:08", "authoredDateTime": "2016-04-01 19:44:24", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm-transformer/src/main/groovy/io/realm/transformer/RealmTransformer.groovy", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["14c8497ba18bbeddc4a0253538c08f673940fa34"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5.0, "deletions": 1.0, "lines": 6.0, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm-transformer/src/main/groovy/io/realm/transformer/RealmTransformer.groovy"]}, {"title": "@Ignore'd members of certain types in RealmObject produce errors", "body": "Error reported on SO http://stackoverflow.com/questions/36011077/ignored-members-of-certain-types-in-realmobject-produce-errors\n\nConsider the following code:\n\n``` java\n    // ...\n    import org.json.JSONObject;\n    import android.graphics.Bitmap;\n    // ...\n\n    public class someObject extends RealmObject\n    {\n        @PrimaryKey\n        private String token;\n        private byte[] data;\n        private long updated;\n\n        @Ignore\n        private jsonBuilder jbRoot;\n\n    //  @Ignore\n    //  private JSONObject JSON; // causes compiling error once uncommented\n    //  @Ignore\n    //  private Bitmap bmp; // also causes the error\n```\n\nPrior to 0.88.0 the code above compiled perfectly. It would not compile on both 0.88.0 & 0.88.1 if I uncommented the ignored JSONObject and/or Bitmap:\n\n```\n    Error:Execution failed for task     ':<package>:transformClassesWithRealmTransformerForDebug'.\n    > javassist.CannotCompileException: cannot find org.json.JSONObject\n```\n\nand\n\n```\n    Error:Execution failed for task     ':<package>:transformClassesWithRealmTransformerForDebug'.\n    > javassist.CannotCompileException: cannot find android.graphics.Bitmap\n```\n\nrespectively.\n\nBut it accepts the ignored private member of one of my own types as shown with the `jsonBuilder` object.\n\nBuild script in case anyone needs it:\n\n```\n        buildscript {\n            repositories {\n                jcenter()\n            }\n            dependencies {\n                classpath \"io.realm:realm-gradle-plugin:0.88.1\" // tried 0.88.0 as well\n            }\n        }\n        apply plugin: 'realm-android'\n```\n\nThank you. The error above is not actually a blocker but Im just curious why that happens. But I like the 0.88.x changes. :)\n", "url": "https://github.com/realm/realm-java/issues/2478", "user": "beeender", "labels": ["T-Bug"], "created": "2016-03-16 07:21:59", "closed": "2016-03-17 05:11:24", "commits": {"443d2d39775c913f8d39418673ca0a3636d4fa0c": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "51823e0e2875056ea43e3ba1b89708d6c4fe1dee": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "1f8fea328e853bcd48ed2b7bfebf649376b942f0": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "a5bef0890e0646421ad7a2bba6b08c002f9a5797": {"commitGHEventType": "closed", "commitUser": "cmelchior"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "443d2d39775c913f8d39418673ca0a3636d4fa0c", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "51823e0e2875056ea43e3ba1b89708d6c4fe1dee", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1f8fea328e853bcd48ed2b7bfebf649376b942f0", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a5bef0890e0646421ad7a2bba6b08c002f9a5797", "commitGHEventType": "closed", "commitUser": "cmelchior", "commitParents": ["dc3330a30a97076bab3981ce16b1fb6ea2937ab4"], "nameRev": "a5bef0890e0646421ad7a2bba6b08c002f9a5797 tags/v0.88.3~8^2", "commitMessage": "Ignored field should not have accessor\n\nFix #2478\n", "commitDateTime": "2016-03-17 11:25:01", "authoredDateTime": "2016-03-16 18:57:01", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "realm-transformer/src/main/groovy/io/realm/transformer/BytecodeModifier.groovy", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "realm-transformer/src/main/groovy/io/realm/transformer/RealmTransformer.groovy", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm-transformer/src/test/groovy/io/realm/transformer/BytecodeModifierTest.groovy", "insertions": 28, "deletions": 0, "lines": 28}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a5bef0890e0646421ad7a2bba6b08c002f9a5797"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4.0, "deletions": 2.0, "lines": 6.0, "gitFilesChange": 2}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm-transformer/src/main/groovy/io/realm/transformer/RealmTransformer.groovy", "realm-transformer/src/main/groovy/io/realm/transformer/BytecodeModifier.groovy"]}, {"title": "DynamicRealmObject.toString() does not honor null values", "body": "#### Goal\n- `DynamicRealmObject.toString()` shows null value as \"null\".\n- Remove \"class_\" prefix from type name in that String.\n- Align the format to the String from typed `RealmObject`.\n#### Expected Results\n\n```\nNullables = [{str:null},{bool:null},{num:null},{time:null},{bytes:null}]\n```\n#### Actual Results\n\n```\nclass_Nullables = [{str: null}, {bool: false}, {num: 0}, {time: Thu Jan 01 09:00:00 GMT+09:00 1970}, {bytes: null}]\n```\n#### Code Sample\n\n``` java\npublic class Nullables extends RealmObject {\n\n    private String str;\n    private Boolean bool;\n    private Integer num;\n    private Date time;\n    private byte[] bytes;\n\n    // getters and setters\n}\n```\n\n``` java\nRealm realm = Realm.getInstance(new RealmConfiguration.Builder(this).deleteRealmIfMigrationNeeded().build());\ntry {\n    final Nullables nullables = new Nullables();\n    realm.executeTransaction(new Realm.Transaction() {\n        @Override\n        public void execute(Realm realm) {\n            realm.deleteAll();\n            realm.copyToRealm(nullables);\n        }\n    });\n} finally {\n    realm.close();\n}\n\nfinal DynamicRealm dynamicRealmBefore = DynamicRealm.getInstance(new RealmConfiguration.Builder(this).build());\ntry {\n    System.out.println(dynamicRealmBefore.allObjects(\"Nullables\").first().toString());\n} finally {\n    dynamicRealmBefore.close();\n}\n```\n#### Version of Realm and tooling\n\nRealm version(s): 0.88.0\n\nAndroid Studio version: 2.1 Preview1\n\nWhich Android version and device: N preview1\n", "url": "https://github.com/realm/realm-java/issues/2439", "user": "zaki50", "labels": ["T-Bug"], "created": "2016-03-14 04:26:46", "closed": "2016-03-14 12:08:41", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Add DT_SONAME header to shared library", "body": "reported by takke in twitter https://twitter.com/takke/status/707922440068792322\n\nRealm's shared libraries do not have DT_SONAME header in it.\n\ncurrent:\n\n```\n$ ./realm/realm-jni/build/standalone-toolchains/arm/bin/arm-linux-androideabi-objdump --private-headers  realm/realm-library/src/main/jniLibs/armeabi/librealm-jni.so |grep SONAME\n```\n", "url": "https://github.com/realm/realm-java/issues/2432", "user": "zaki50", "labels": ["T-Bug"], "created": "2016-03-12 05:28:20", "closed": "2016-03-13 08:37:52", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Received an error in Jni: Failure when converting long string to UTF-16", "body": "``` java\nJNI DETECTED ERROR IN APPLICATION: input is not valid Modified UTF-8: illegal continuation byte 0x2e\n03-12 00:19:49.679 8033-10913/com.tattva.app A/art: art/runtime/java_vm_ext.cc:410]     string: 'Unrecoverable error. Failure when converting long string to UTF-16 error_code = 8; retcode = 0; StringData.size = 116289; StringData.data = ...\n```\n\nI've emailed the entire stacktrace to your email `(help@realm.io)`, from my email `saket@saket.me`. Could not post it here publicly since it contains data I do not wish to make public.\n#### Goal\n\nNothing. I was debugging my app and this happened out of nowhere.\n#### Steps & Code to Reproduce\n\nNo idea. Couldn't reproduce. \n#### Version of Realm and tooling\n\nRealm version(s): 0.87\n\nAndroid Studio version: 2.1\n\nWhich Android version and device: Android 5.1, Moto G3\n", "url": "https://github.com/realm/realm-java/issues/2429", "user": "saket", "labels": ["Blocked", "T-Bug"], "created": "2016-03-11 18:57:35", "closed": "2016-05-30 08:00:08", "commits": {"2aaf4232c09250aa445c11bbdb30b9f55c845e32": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "42b1a2697d202ad6d036a4d21eb642daba768842": {"commitGHEventType": "closed", "commitUser": "beeender"}}, "ttf": 79.00027777777778, "commitsDetails": [{"commitHash": "2aaf4232c09250aa445c11bbdb30b9f55c845e32", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "42b1a2697d202ad6d036a4d21eb642daba768842", "commitGHEventType": "closed", "commitUser": "beeender", "commitParents": ["a769c15765facccd426f68acbc70775e592cb62f"], "nameRev": "42b1a2697d202ad6d036a4d21eb642daba768842 tags/v1.0.1~17", "commitMessage": "Avoid Table.nativeToString/nativeRowToString (#2884)\n\nTable::row_to_string Table::to_string are for debugging purpose only, it\r\ncalls string::substr which might truncate an UTF-8 string at any char.\r\nThus a crash could happend in JNI when converting to UTF-16.\r\n\r\nThis will only happen when user attach a debugger and the debugger is\r\ntrying to call Table.toString.\r\n\r\nClose #2429", "commitDateTime": "2016-05-27 16:07:01", "authoredDateTime": "2016-05-27 16:07:01", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "realm/realm-jni/src/io_realm_internal_Table.h", "insertions": 0, "deletions": 16, "lines": 16}, {"filePath": "realm/realm-jni/src/io_realm_internal_TableView.h", "insertions": 0, "deletions": 16, "lines": 16}, {"filePath": "realm/realm-jni/src/io_realm_internal_table.cpp", "insertions": 0, "deletions": 30, "lines": 30}, {"filePath": "realm/realm-jni/src/io_realm_internal_tableview.cpp", "insertions": 0, "deletions": 31, "lines": 31}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/internal/JNITableTest.java", "insertions": 1, "deletions": 5, "lines": 6}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/internal/JNIViewTest.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/Table.java", "insertions": 22, "deletions": 11, "lines": 33}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/TableOrView.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/TableView.java", "insertions": 17, "deletions": 11, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JNITableTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.JNITableTest.testTableToString()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "JNIViewTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.JNIViewTest.testViewToString()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Table.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.Table.rowToString(long)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.Table.toString(long)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.Table.toString()", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 1}, {"spoonMethodName": "io.realm.internal.Table.nativeToString(long,long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.Table.nativeRowToString(long,long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TableOrView.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.toString(long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.rowToString(long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TableView.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.TableView.toString(long)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.TableView.rowToString(long)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.internal.TableView.toString()", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 1}, {"spoonMethodName": "io.realm.internal.TableView.nativeToString(long,long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.TableView.nativeRowToString(long,long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "RealmConfiguration.hashCode() should take into account rxObservableFactory", "body": "", "url": "https://github.com/realm/realm-java/issues/2420", "user": "zaki50", "labels": ["T-Bug"], "created": "2016-03-11 03:13:58", "closed": "2016-03-11 10:26:07", "commits": {"2ca853358ecc8a1d07ff7e8c14e1f8d79bb3985c": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "bd4a3cc97adbc4c38b0cd4c899ff2044dedd7937": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "2ca853358ecc8a1d07ff7e8c14e1f8d79bb3985c", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "bd4a3cc97adbc4c38b0cd4c899ff2044dedd7937", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["0744d01bc92d5e2b1d8d816da2acd5c3d5e65d60"], "nameRev": "bd4a3cc97adbc4c38b0cd4c899ff2044dedd7937 tags/v0.88.1~7^2", "commitMessage": "reflect hash code of rxObservableFactory in RealmConfiguration.hashCode(). This fixes #2420\n", "commitDateTime": "2016-03-11 15:07:15", "authoredDateTime": "2016-03-11 13:59:25", "commitGitStats": [{"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmConfigurationTests.java", "insertions": 19, "deletions": 0, "lines": 19}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmConfiguration.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmConfigurationTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmConfigurationTests.rxFactory().2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmConfigurationTests.hashCode_withDifferentRxObservableFactory()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmConfiguration.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmConfiguration.hashCode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bd4a3cc97adbc4c38b0cd4c899ff2044dedd7937"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1.0, "deletions": 0.0, "lines": 1.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1.0, "UPD": 0.0, "INS": 1.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-library/src/main/java/io/realm"], "changesInPackagesSPOON": ["io.realm.RealmConfiguration.hashCode()"]}, {"title": "0.88.0 fails to build model classes which use the third-party annotation (0.88.0 conflicts with Jackson annotation processing)", "body": "#### Goal\n\nI use bunch of different libraries, including Realm and Jackson.\n#### Expected Results\n\nProject builds with Jackson annotations.\n#### Actual Results\n\n```\nFAILURE: Build failed with an exception.\n\n* What went wrong:\nExecution failed for task ':app:transformClassesWithRealmTransformerForDevDebug'.\n> java.lang.ClassNotFoundException: com.fasterxml.jackson.annotation.JsonFormat\n\n* Try:\nRun with --info or --debug option to get more log output.\n\n* Exception is:\norg.gradle.api.tasks.TaskExecutionException: Execution failed for task ':app:transformClassesWithRealmTransformerForDevDebug'.\n    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:69)\n    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:46)\n    at org.gradle.api.internal.tasks.execution.PostExecutionAnalysisTaskExecuter.execute(PostExecutionAnalysisTaskExecuter.java:35)\n    at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:64)\n    at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:58)\n    at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:52)\n    at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:52)\n    at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:53)\n    at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)\n    at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:203)\n    at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:185)\n    at org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.processTask(AbstractTaskPlanExecutor.java:66)\n    at org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.run(AbstractTaskPlanExecutor.java:50)\n    at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54)\n    at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40)\nCaused by: java.lang.RuntimeException: java.lang.ClassNotFoundException: com.fasterxml.jackson.annotation.JsonFormat\n    at com.android.builder.profile.Recorder$Block.handleException(Recorder.java:54)\n    at com.android.builder.profile.ThreadRecorder$1.record(ThreadRecorder.java:57)\n    at com.android.builder.profile.ThreadRecorder$1.record(ThreadRecorder.java:47)\n    at com.android.build.gradle.internal.pipeline.TransformTask.transform(TransformTask.java:173)\n    at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:75)\n    at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$IncrementalTaskAction.doExecute(AnnotationProcessingTaskFactory.java:244)\n    at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.execute(AnnotationProcessingTaskFactory.java:220)\n    at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$IncrementalTaskAction.execute(AnnotationProcessingTaskFactory.java:231)\n    at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.execute(AnnotationProcessingTaskFactory.java:209)\n    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:80)\n    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:61)\n    ... 14 more\nCaused by: java.lang.ClassNotFoundException: com.fasterxml.jackson.annotation.JsonFormat\n    at javassist.CtClassType.toAnnoType(CtClassType.java:696)\n    at javassist.CtClassType.toAnnotationType(CtClassType.java:586)\n    at javassist.CtField.getAnnotations(CtField.java:317)\n    at javassist.CtField.getAnnotations(CtField.java:290)\n    at javassist.CtField$getAnnotations.call(Unknown Source)\n    at io.realm.transformer.RealmTransformer$_transform_closure9$_closure16.doCall(RealmTransformer.groovy:115)\n    at io.realm.transformer.RealmTransformer$_transform_closure9.doCall(RealmTransformer.groovy:114)\n    at io.realm.transformer.RealmTransformer.transform(RealmTransformer.groovy:113)\n    at com.android.build.api.transform.Transform.transform(Transform.java:308)\n    at com.android.build.gradle.internal.pipeline.TransformTask$3.call(TransformTask.java:178)\n    at com.android.build.gradle.internal.pipeline.TransformTask$3.call(TransformTask.java:174)\n    at com.android.builder.profile.ThreadRecorder$1.record(ThreadRecorder.java:55)\n    ... 23 more\n\n\nBUILD FAILED\n```\n#### Steps & Code to Reproduce\n1. Add \"com.fasterxml.jackson.core:jackson-annotations:2.7.2\" to dependencies.\n2. Use Jackson annotations in RealmObject subclass, e.g. JsonFormat.\n\n``` Java\n// omitted getters, setters, etc\npublic class Dialog extends RealmObject {\n    @PrimaryKey\n    private int id;\n    @JsonFormat(shape=JsonFormat.Shape.STRING, pattern=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", timezone=\"UTC\")\n    private Date date;\n}\n```\n#### Version of Realm and tooling\n\nRealm version(s): 0.88.0\nAndroid Studio version: 2.0.0-beta6, Gradle 2.11\n\nP.S. Works on 0.87.5\n", "url": "https://github.com/realm/realm-java/issues/2413", "user": "fuwaneko", "labels": ["T-Bug"], "created": "2016-03-10 15:30:22", "closed": "2016-03-13 07:46:45", "commits": {"330ac3756105ec4fd1a315a76e64c60eba3b1525": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "2f6364add13b31ab8e298b63eb0d273ab643dc5e": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "60a44425b423812f5adebd023bf3da7120f65a19": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "330ac3756105ec4fd1a315a76e64c60eba3b1525", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "2f6364add13b31ab8e298b63eb0d273ab643dc5e", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "60a44425b423812f5adebd023bf3da7120f65a19", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["63d936b653d49c3fc8e51c0c09790cfb96bb33b3"], "nameRev": "60a44425b423812f5adebd023bf3da7120f65a19 tags/v0.88.1~6^2", "commitMessage": "Useless line triggers bugs\n\ngetAnnotations will return all Annotation classes, if the class doesn't\nexist in the transformer project, exception will be thrown.\n\nFix #2413\n", "commitDateTime": "2016-03-11 17:02:11", "authoredDateTime": "2016-03-11 16:54:53", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm-transformer/src/main/groovy/io/realm/transformer/RealmTransformer.groovy", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["60a44425b423812f5adebd023bf3da7120f65a19"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0.0, "deletions": 1.0, "lines": 1.0, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm-transformer/src/main/groovy/io/realm/transformer/RealmTransformer.groovy"]}, {"title": "Missing checking when call `RealmList.add()`/`set` with `DynamicObject`", "body": "The below test should pass as well as other `RealmList`'s methods `add(int location, E object)`/`set(int location, E object)`\n\n``` java\n    @Test\n    public void getList_addWrongTypeTo() {\n        DynamicRealm dynamicRealm = DynamicRealm.getInstance(realm.configuration);\n        dynamicRealm.beginTransaction();\n\n        DynamicRealmObject allTypes = dynamicRealm.createObject(AllTypes.CLASS_NAME);\n        allTypes.setString(AllTypes.FIELD_STRING, \"bender\");\n\n        DynamicRealmObject cat = dynamicRealm.createObject(Cat.CLASS_NAME);\n        cat.setString(\"name\", \"nibbler\");\n\n        RealmList<DynamicRealmObject> list = allTypes.getList(AllTypes.FIELD_REALMLIST);\n        list.add(cat);\n        thrown.expect(IllegalArgumentException.class);\n\n        dynamicRealm.commitTransaction();\n    }\n```\n", "url": "https://github.com/realm/realm-java/issues/2381", "user": "beeender", "labels": ["T-Bug"], "created": "2016-03-03 04:31:15", "closed": "2016-03-09 10:32:39", "commits": {"fbb6b8f8b4c36277ea856d21864af27a1ae9e99f": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "a2264a94716940a8042eec98bf32891199ef1df2": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "e10bde79f5306f4b68d4413625cd9b2b4005ee83": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "1f22820b98f7905533a91eeda743f89a78e96f4f": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "22ae8e4d3af3d641dc8b7047abd29d4512f325f6": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "7823528399f219545b5f778b45365114d8766762": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "fbb6b8f8b4c36277ea856d21864af27a1ae9e99f", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a2264a94716940a8042eec98bf32891199ef1df2", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "e10bde79f5306f4b68d4413625cd9b2b4005ee83", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1f22820b98f7905533a91eeda743f89a78e96f4f", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "22ae8e4d3af3d641dc8b7047abd29d4512f325f6", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "7823528399f219545b5f778b45365114d8766762", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["2f401eba10be412bb2d3fada1ba32602012b1088"], "nameRev": "7823528399f219545b5f778b45365114d8766762 tags/v0.88.0~7^2", "commitMessage": "More checkings when modify RealmList\n\nFix #2381\n\n* New method LinkView.getTargetTable().\n* Proper checking to add DynamicRealmObject to RealmList.\n* Disallow modifying with RealmObject belongs to another Realm instance.\n", "commitDateTime": "2016-03-09 17:28:20", "authoredDateTime": "2016-03-04 17:49:21", "commitGitStats": [{"filePath": "realm/realm-jni/src/io_realm_internal_LinkView.cpp", "insertions": 15, "deletions": 2, "lines": 17}, {"filePath": "realm/realm-jni/src/io_realm_internal_LinkView.h", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmListTests.java", "insertions": 171, "deletions": 6, "lines": 177}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/entities/Owner.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmList.java", "insertions": 28, "deletions": 8, "lines": 36}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmSchema.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/CheckedRow.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/LinkView.java", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/UncheckedRow.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmListTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmListTests.testRemoveAllFromRealm()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTests.testRealmRemoveAllNotManagedList()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTests.testRealmRemoveAllOutsideTransaction()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTests.testRemoveAllFromListStandaloneObjectShouldThrow()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTests.testRemoveAllFromRealmEmptyList()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTests.testRemoveAllFromRealmInvalidListShouldThrow()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTests.add_set_objectFromOtherThread()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTests.add_set_dynamicObjectFromOtherThread()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTests.add_set_withWrongDynamicObjectType()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTests.add_set_dynamicObjectCreatedFromTypedRealm()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmTests.copyFromRealm_dynamicRealmListThrows()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Owner.java", "spoonMethods": [{"spoonMethodName": "io.realm.entities.Owner", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DynamicRealmObject.java", "spoonMethods": [{"spoonMethodName": "io.realm.DynamicRealmObject.getType()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.DynamicRealmObject.getList(java.lang.String)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.DynamicRealmObject.setList(java.lang.String,io.realm.RealmList)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RealmList.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmList.copyToRealmIfNeeded(io.realm.RealmObject)", "TOT": 8, "UPD": 1, "INS": 1, "MOV": 4, "DEL": 2}]}, {"spoonFilePath": "RealmSchema.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmSchema.getSchemaForTable(io.realm.internal.Table)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CheckedRow.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.CheckedRow.get(io.realm.internal.Context,io.realm.internal.LinkView,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LinkView.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.LinkView.getTargetTable()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.LinkView.nativeGetTargetTable(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UncheckedRow.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.UncheckedRow.getByRowIndex(io.realm.internal.Context,io.realm.internal.LinkView,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7823528399f219545b5f778b45365114d8766762"], "filteredCommitsReason": {"duplicated": 5, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 74.0, "deletions": 15.0, "lines": 89.0, "gitFilesChange": 8}, "spoonStatsSummary": {"TOT": 26.0, "UPD": 5.0, "INS": 9.0, "MOV": 7.0, "DEL": 5.0, "spoonFilesChanged": 7, "spoonMethodsChanged": 10}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-library/src/main/java/io/realm", "realm/realm-jni/src/io_realm_internal_LinkView.cpp", "realm/realm-library/src/main/java/io/realm/internal", "realm/realm-jni/src/io_realm_internal_LinkView.h"], "changesInPackagesSPOON": ["io.realm.DynamicRealmObject.getType()", "io.realm.RealmSchema.getSchemaForTable(io.realm.internal.Table)", "io.realm.internal.LinkView.getTargetTable()", "io.realm.internal.CheckedRow.get(io.realm.internal.Context,io.realm.internal.LinkView,long)", "io.realm.RealmList.copyToRealmIfNeeded(io.realm.RealmObject)", "io.realm.DynamicRealmObject.setList(java.lang.String,io.realm.RealmList)", "io.realm.DynamicRealmObject.getList(java.lang.String)", "io.realm.internal.UncheckedRow.getByRowIndex(io.realm.internal.Context,io.realm.internal.LinkView,long)", "io.realm.internal.LinkView.nativeGetTargetTable(long)", "io.realm.entities.Owner"]}, {"title": "DynamicRealmObject can't set the list field", "body": "I have DynamicRealmObject instance that has list field that is connected to some scheme,\nbut when I use DynamicRealmObject.setList - I have an exception that says that list items should be the same type as original object is\n\n`java.lang.IllegalArgumentException: Element at index 0 is not the proper type. Was class_testInnerWithList3_details expected class_testInnerWithList3.\nat io.realm.DynamicRealmObject.setList(DynamicRealmObject.java:595)\nat com.kinvey.android.cache.ClassHash.saveData(ClassHash.java:209)\nat com.kinvey.android.cache.RealmCache.insertOrUpdate(RealmCache.java:285)\nat com.kinvey.android.cache.RealmCache.save(RealmCache.java:155)\nat com.kinvey.androidTest.cache.CacheTest.testSaveWithInnerList(CacheTest.java:179)\nat java.lang.reflect.Method.invoke(Native Method)\nat java.lang.reflect.Method.invoke(Method.java:372)\nat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\nat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\nat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\nat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\nat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\nat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\nat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\nat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\nat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\nat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\nat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\nat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\nat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\nat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\nat org.junit.runners.Suite.runChild(Suite.java:128)\nat org.junit.runners.Suite.runChild(Suite.java:27)\nat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\nat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\nat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\nat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\nat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\nat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\nat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\nat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\nat android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:54)\nat android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:240)\nat android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:1873)\n`\n\nin my test I create object with scheme name testInnerWithList3 and list items are expected to be testInnerWithList3_details\n\nand when I'm trying to use DynamicRealmObject.setList(RealmList) I got following exception\n", "url": "https://github.com/realm/realm-java/issues/2368", "user": "misha-vakulich", "labels": ["T-Bug"], "created": "2016-03-01 01:10:53", "closed": "2016-03-04 10:40:03", "commits": {"8c3228a1c74dfe828843ab88cd42afc4ec1cdbdb": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "76735a3bb6da2230412e5419b31d3fc489ccfa33": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "e710d153fc6e9f3829a31f17757f31de1669d250": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "025ea9b79a4f7aa8335ab14f319c104f61ecd35d": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "37c5a2360f91ccd068eafbc885ea1ded176ed792": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "fe67679f61b71969f0582ed6093a532bdec3df71": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "782e166c56ca11dd7dc870df051d491594972760": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "8c3228a1c74dfe828843ab88cd42afc4ec1cdbdb", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "76735a3bb6da2230412e5419b31d3fc489ccfa33", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "e710d153fc6e9f3829a31f17757f31de1669d250", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "025ea9b79a4f7aa8335ab14f319c104f61ecd35d", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "37c5a2360f91ccd068eafbc885ea1ded176ed792", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "fe67679f61b71969f0582ed6093a532bdec3df71", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "782e166c56ca11dd7dc870df051d491594972760", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["1cc53cea311414146bead0f18f032adc3489b24d"], "nameRev": "782e166c56ca11dd7dc870df051d491594972760 tags/v0.88.0~14^2", "commitMessage": "Correct checking in DynamicRealmObject.setList\n\n* Fix #2368\n* Check equality of Realm in DynamicRealmObject setters to avoid risks\n  mentioned 2) in #2382\n", "commitDateTime": "2016-03-04 17:57:23", "authoredDateTime": "2016-03-03 12:07:29", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java", "insertions": 168, "deletions": 53, "lines": 221}, {"filePath": "realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java", "insertions": 15, "deletions": 13, "lines": 28}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java", "insertions": 9, "deletions": 9, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DynamicRealmObjectTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.DynamicRealmObjectTests", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.setUp()", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.constructor_dynamicObjectThrows()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.setList_wrongTypeThrows()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.untypedSetter_listWrongTypeThrows()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.untypedSetter_listMixedTypesThrows()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.isNull_nullNotSupportedField()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.isNull_false()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.getFieldNames()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.hasField_false()", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.hasField_true()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.getFieldType()", "TOT": 13, "UPD": 12, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.equals_standardAndDynamicObjectsNotEqual()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.toString_test()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.callGetter(io.realm.DynamicRealmObjectTests$SupportedType,java.util.List)", "TOT": 12, "UPD": 12, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.callSetter(io.realm.DynamicRealmObjectTests$SupportedType,java.util.List)", "TOT": 12, "UPD": 12, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.setObject_objectBelongToTypedRealmThrows()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.setObject_objectBelongToDiffThreadRealmThrows()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.setList_listWithDynamicRealmObject()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.setList_elementBelongToTypedRealmThrows()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.setList_elementBelongToDiffThreadRealmThrows()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DynamicRealmObjectTests.tearDown()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DynamicRealmObject.java", "spoonMethods": [{"spoonMethodName": "io.realm.DynamicRealmObject.setList(java.lang.String,io.realm.RealmList)", "TOT": 21, "UPD": 5, "INS": 3, "MOV": 11, "DEL": 2}, {"spoonMethodName": "io.realm.DynamicRealmObject.setObject(java.lang.String,io.realm.DynamicRealmObject)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RealmObjectSchema.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 6, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "RealmChangeListener not called when setting null value", "body": "When setting the value of a field to null, the RealmChangeListener is not being called. Setting a empty string (or any other value for that matter) does trigger the notification\n", "url": "https://github.com/realm/realm-java/issues/2366", "user": "huibvv", "labels": ["T-Bug"], "created": "2016-02-29 13:23:04", "closed": "2016-03-10 02:36:12", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "Kotlin: Package level functions cannot be imported from library project with new gradle plugin", "body": "This is a pretty elaborate case so hopefully I can explain it well enough.\n\nWe have a project consisting of a main application and a library project.  The library project contains Realm models that are shared.  Using the new plugin on both the main application and the library project causes the main project to not see the package level functions in the library.\n\nI've attached a small sample project to show what I mean.\n\nGiven this file in the library project \n\n``` kotlin\npackage io.vokal.realmtest.model\n\nimport io.realm.*\nimport io.realm.annotations.*\n\n@RealmClass\nopen class Dog(\n    @PrimaryKey\n    public open var name: String = \"spot\"\n): RealmObject() { }\n\n@RealmModule(library = true, allClasses = true)\npublic class LibraryModule {\n}\n\npublic fun Realm.findSpot(): Dog {\n    return where(Dog::class.java).equalTo(\"name\", \"spot\").findFirst()\n}\n```\n\nI should be able to import `findSpot` in the main activity.  \n\nInstead I receive `e: /home/wmbest2/realm-library-test/app/src/main/kotlin/io/vokal/realmtest/MainActivity.kt: (37, 23): Unresolved reference: findSpot`\n\n[realm-library-test.zip](https://github.com/realm/realm-java/files/149012/realm-library-test.zip)\n", "url": "https://github.com/realm/realm-java/issues/2356", "user": "wmbest2", "labels": ["T-Bug"], "created": "2016-02-26 22:04:20", "closed": "2016-03-09 14:44:55", "commits": {"0911a91dee86ada269ae03fa3299f4f95fa17c45": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "5ed26ccb4feab7fc39800ce1714ac9fd762e0c79": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "072813277fd9868433053cd28c79f866777c9f66": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "4d92fb664766e2011334517368c4a7b2be5f0a5f": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "faddf2acdbf48846f81381ab6721648c4bba0f49": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "0911a91dee86ada269ae03fa3299f4f95fa17c45", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5ed26ccb4feab7fc39800ce1714ac9fd762e0c79", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "072813277fd9868433053cd28c79f866777c9f66", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "4d92fb664766e2011334517368c4a7b2be5f0a5f", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "faddf2acdbf48846f81381ab6721648c4bba0f49", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["5736fb03f5af0769c9f69fe3278313edeb76294d"], "nameRev": "faddf2acdbf48846f81381ab6721648c4bba0f49 tags/v0.88.0~4^2", "commitMessage": "Copy resource files when transforming byte code. This fixes #2356\n", "commitDateTime": "2016-03-09 23:20:04", "authoredDateTime": "2016-02-28 01:41:06", "commitGitStats": [{"filePath": "realm-transformer/src/main/groovy/io/realm/transformer/RealmTransformer.groovy", "insertions": 27, "deletions": 2, "lines": 29}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["faddf2acdbf48846f81381ab6721648c4bba0f49"], "filteredCommitsReason": {"duplicated": 4, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 27.0, "deletions": 2.0, "lines": 29.0, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm-transformer/src/main/groovy/io/realm/transformer/RealmTransformer.groovy"]}, {"title": "RealmPrimaryKeyConstraintException when copyToOrUpdateRealm", "body": "Hey guys. I get the exception in the bottom when trying to copyToOrUpdate realm.\nWhen using RealmObjects which have a Realmlist. Is it necessary to commit RealmList-objects to the db individually, before adding them to the RealmList?  Or can you create the whole RealmObject including RealmLists and then commiting?  \n\n```\n java.lang.RuntimeException: \nAn error occured while executing doInBackground()\n     at android.os.AsyncTask$3.done(AsyncTask.java:304)\n     at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)\n     at java.util.concurrent.FutureTask.setException(FutureTask.java:222)\n     at java.util.concurrent.FutureTask.run(FutureTask.java:242)\n     at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)\n     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n     at java.lang.Thread.run(Thread.java:818) Caused by: io.realm.exceptions.RealmPrimaryKeyConstraintException: Value already exists: 221\n      at io.realm.internal.Table.throwDuplicatePrimaryKeyException(Table.java:636)\n      at io.realm.internal.Table.checkIntValueIsLegal(Table.java:630)\n      at io.realm.internal.UncheckedRow.setLong(UncheckedRow.java:208)\n      at io.realm.LikeEntityRealmProxy.setLikedById(LikeEntityRealmProxy.java:88)\n      at io.realm.LikeEntityRealmProxy.copy(LikeEntityRealmProxy.java:249)\n      at io.realm.LikeEntityRealmProxy.copyOrUpdate(LikeEntityRealmProxy.java:242)\n      at io.realm.NewsEntityRealmProxy.update(NewsEntityRealmProxy.java:1210)\n      at io.realm.NewsEntityRealmProxy.copyOrUpdate(NewsEntityRealmProxy.java:1042)\n     at io.realm.DefaultRealmModuleMediator.copyOrUpdate(DefaultRealmModuleMediator.java:166)\n       at io.realm.Realm.copyOrUpdate(Realm.java:1166)\n     at io.realm.Realm.copyToRealmOrUpdate(Realm.java:714)\n      at dk.miracle.grapevine.realm_db.NewsDAO.createNewsObject(NewsDAO.java:132)\n      at dk.miracle.grapevine.realm_db.NewsDAO.access$000(NewsDAO.java:29)\n      at dk.miracle.grapevine.realm_db.NewsDAO$1.doInBackground(NewsDAO.java:106)\n      at dk.miracle.grapevine.realm_db.NewsDAO$1.doInBackground(NewsDAO.java:98)\n      at android.os.AsyncTask$2.call(AsyncTask.java:292)\n      at java.util.concurrent.FutureTask.run(FutureTask.java:237)\n      at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)\u00a0\n     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\u00a0\n     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\u00a0\n     at java.lang.Thread.run(Thread.java:818)\n```\n", "url": "https://github.com/realm/realm-java/issues/2324", "user": "mhgk", "labels": ["Reproduction-Required", "T-Bug"], "created": "2016-02-23 17:26:24", "closed": "2016-03-18 13:12:28", "commits": {}, "ttf": 23.00027777777778, "commitsDetails": []}, {"title": "HashCode not working correctly", "body": "Right now we use the following for `hashCode`: \n\n```\n        String realmName = realm.getPath();\n        String tableName = row.getTable().getName();\n        long rowIndex = row.getIndex();\n\n        int result = 17;\n        result = 31 * result + ((realmName != null) ? realmName.hashCode() : 0);\n        result = 31 * result + ((tableName != null) ? tableName.hashCode() : 0);\n        result = 31 * result + (int) (rowIndex ^ (rowIndex >>> 32));\n        return result;\n```\n\nThe problem is `rowIndex` might suddenly change through the use of `moveLastOver`. This will change the hashCode unexpectedly and break things like Set: https://docs.oracle.com/javase/7/docs/api/java/util/Set.html\n\nCocoa currently uses the PrimaryKey value (which is not allowed to change) if possible, otherwise fallback to the default hashcode implementation. This has the downside that `result.get(0).equals(result.get(0)) == false`.\n\nWithout persistent identifiers we have to accept one of the short-comings :cry: \n\nI would be tempted to say that our current approach is OK and we should just document that `hashCode` is not stable and can change. With #2196 soon ready, people have more tools to work around it anyway.\n\nWhat do you think @realm/java ?\n", "url": "https://github.com/realm/realm-java/issues/2323", "user": "cmelchior", "labels": ["T-Bug", "T-Doc"], "created": "2016-02-23 16:32:30", "closed": "2016-05-10 14:06:47", "commits": {"9b24c3cc2fe678b23efa5bd53057f3dacfd0a811": {"commitGHEventType": "referenced", "commitUser": "stk1m1"}}, "ttf": 76.00027777777778, "commitsDetails": [{"commitHash": "9b24c3cc2fe678b23efa5bd53057f3dacfd0a811", "commitGHEventType": "referenced", "commitUser": "stk1m1", "commitParents": ["339e16523fe197d022edf6b21b4253a4153cc2f8"], "nameRev": "9b24c3cc2fe678b23efa5bd53057f3dacfd0a811 tags/v0.91.0~31", "commitMessage": "hashCode behavior javadoc (#2750)\n\nThe behavior of hashCode is documented as it is pointed in issue #2323. Until realm-java has an immutable identifier, the behavior of hashCode should remain documented.", "commitDateTime": "2016-05-10 23:03:32", "authoredDateTime": "2016-05-10 23:03:32", "commitGitStats": [{"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyClassGenerator.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java", "insertions": 13, "deletions": 0, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmProxyClassGenerator.java", "spoonMethods": []}, {"spoonFilePath": "DynamicRealmObject.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "InvalidUseOfMatchersException on ExampleActivityTest", "body": "If we execute`./gradlew test` on `examples` directory, we would encounter the following error:\n\n```\nio.realm.examples.unittesting.ExampleActivityTest > shouldBeAbleToAccessActivityAndVerifyRealmInteractions                                                     FAILED\n    java.lang.ExceptionInInitializerError at ExampleActivityTest.java:81\n        Caused by: org.mockito.exceptions.misusing.InvalidUseOfMatchersException at ExampleActivityTest.java:81\n```\n", "url": "https://github.com/realm/realm-java/issues/2321", "user": "dalinaum", "labels": ["T-Bug", "T-Test"], "created": "2016-02-23 13:38:41", "closed": "2016-02-23 13:40:45", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Add a check if database file exists when Realm.migrateRealm() is called.", "body": "if `Realm.migrateRealm()` is called when Realm file does not exist, it may create wrong Realm file(no schema contained) or may cause the exception in Migration code.\n\nThis issue is reported by @tiro105 on slack chat. Thanks!\n\nWe have 2 choices in the case of missing Realm file.\n- throw exception if Realm file does not exist\n- create Realm file and execute normal initialization of schema instead of executing migration\n\nWhat do you think? @realm/java \n", "url": "https://github.com/realm/realm-java/issues/2316", "user": "zaki50", "labels": ["T-Bug"], "created": "2016-02-23 07:47:41", "closed": "2016-02-25 07:11:17", "commits": {"c0b0bbca80d59b17e2ce80a80fc3d62c363367cb": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "7c791f99d3342a12307bc00828351478f56f1ada": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "aee28121ff81312e86ce8909be2e39e669b9e2ac": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "fd30800c44df1bb30484a59007cec024e2d8660b": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "c0b0bbca80d59b17e2ce80a80fc3d62c363367cb", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "7c791f99d3342a12307bc00828351478f56f1ada", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "aee28121ff81312e86ce8909be2e39e669b9e2ac", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "fd30800c44df1bb30484a59007cec024e2d8660b", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["31ab2ec4512b4dc26f9f89cf0908f79f9d1bf0ae"], "nameRev": "fd30800c44df1bb30484a59007cec024e2d8660b tags/v0.88.0~30^2", "commitMessage": "migrateRealm throws when db doesn't exsit\n\nClose #2316 .\n", "commitDateTime": "2016-02-25 15:02:19", "authoredDateTime": "2016-02-24 15:27:59", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "examples/migrationExample/src/main/java/io/realm/examples/realmmigrationexample/MigrationExampleActivity.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmMigrationTests.java", "insertions": 90, "deletions": 49, "lines": 139}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmObjectTests.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/TestHelper.java", "insertions": 50, "deletions": 48, "lines": 98}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/entities/NullTypes.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/BaseRealm.java", "insertions": 19, "deletions": 2, "lines": 21}, {"filePath": "realm/realm-library/src/main/java/io/realm/Realm.java", "insertions": 12, "deletions": 3, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MigrationExampleActivity.java", "spoonMethods": [{"spoonMethodName": "io.realm.examples.realmmigrationexample.MigrationExampleActivity.onCreate(android.os.Bundle)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RealmMigrationTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmMigrationTests.notSettingIndexThrows()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.migrationException_realmListChanged()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.notSettingRequiredForNotNullableThrows()", "TOT": 27, "UPD": 1, "INS": 13, "MOV": 2, "DEL": 11}, {"spoonMethodName": "io.realm.RealmMigrationTests.settingRequiredForNullableThrows()", "TOT": 33, "UPD": 1, "INS": 16, "MOV": 2, "DEL": 14}, {"spoonMethodName": "io.realm.RealmMigrationTests.notSettingRequiredForNotNullableThrows().8.migrate(io.realm.DynamicRealm,long,long)", "TOT": 40, "UPD": 17, "INS": 11, "MOV": 0, "DEL": 12}, {"spoonMethodName": "io.realm.RealmMigrationTests.settingRequiredForNullableThrows().9.migrate(io.realm.DynamicRealm,long,long)", "TOT": 40, "UPD": 17, "INS": 11, "MOV": 0, "DEL": 12}, {"spoonMethodName": "io.realm.RealmMigrationTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.migrateRealm_config_nonExistingRealmFile()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.migrateRealm_configMigration_nonExistingRealmFile()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.realmOpenBeforeMigrationThrows()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmObjectTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmObjectTests.prepareColumnSwappedRealm()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.realmProxy_columnIndex()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestHelper.java", "spoonMethods": [{"spoonMethodName": "io.realm.TestHelper.initNullTypesTableExcludes(io.realm.DynamicRealm,java.lang.String)", "TOT": 123, "UPD": 74, "INS": 25, "MOV": 0, "DEL": 24}]}, {"spoonFilePath": "NullTypes.java", "spoonMethods": [{"spoonMethodName": "io.realm.entities.NullTypes", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseRealm.java", "spoonMethods": [{"spoonMethodName": "io.realm.BaseRealm.migrateRealm(io.realm.RealmConfiguration,io.realm.RealmMigration,io.realm.BaseRealm$MigrationCallback)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BaseRealm.migrateRealm(io.realm.RealmConfiguration,io.realm.RealmMigration,io.realm.BaseRealm$MigrationCallback).2.onResult(int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Realm.java", "spoonMethods": [{"spoonMethodName": "io.realm.Realm.migrateRealm(io.realm.RealmConfiguration)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.migrateRealm(io.realm.RealmConfiguration,io.realm.RealmMigration)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.createInstance(io.realm.RealmConfiguration,io.realm.internal.ColumnIndices)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fd30800c44df1bb30484a59007cec024e2d8660b"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 37.0, "deletions": 6.0, "lines": 43.0, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 13.0, "UPD": 0.0, "INS": 11.0, "MOV": 2.0, "DEL": 0.0, "spoonFilesChanged": 4, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["examples/migrationExample/src/main/java/io/realm/examples/realmmigrationexample", "realm/realm-library/src/main/java/io/realm"], "changesInPackagesSPOON": ["io.realm.Realm.createInstance(io.realm.RealmConfiguration,io.realm.internal.ColumnIndices)", "io.realm.Realm.migrateRealm(io.realm.RealmConfiguration,io.realm.RealmMigration)", "io.realm.entities.NullTypes", "io.realm.BaseRealm.migrateRealm(io.realm.RealmConfiguration,io.realm.RealmMigration,io.realm.BaseRealm$MigrationCallback)", "io.realm.Realm.migrateRealm(io.realm.RealmConfiguration)", "io.realm.examples.realmmigrationexample.MigrationExampleActivity.onCreate(android.os.Bundle)", "io.realm.BaseRealm.migrateRealm(io.realm.RealmConfiguration,io.realm.RealmMigration,io.realm.BaseRealm$MigrationCallback).2.onResult(int)"]}, {"title": "`./gradlew test` is not running on CI, and mockito cannot mock final Realm class", "body": "Two issues:\n\n1) `./gradlew test` will fail `unitTestExample` because of\n\n```\nwhen(Realm.getInstance(any(RealmConfiguration.class))).thenReturn(mockRealm);\n```\n\n   will fail. Realm is an static class which cannot be mocked by Mockito. We might have to use PowerMock instead\n\n2) Enable `./gradlew test` on CI.\n", "url": "https://github.com/realm/realm-java/issues/2303", "user": "beeender", "labels": ["T-Bug"], "created": "2016-02-19 06:46:00", "closed": "2016-03-16 11:27:49", "commits": {}, "ttf": 26.00027777777778, "commitsDetails": []}, {"title": "Terminal distinct() invalidates all previous distinct(), resulting in unexpected values.", "body": "When more than one `distinct()` are called in query chain, e.g. `distinct().equalTo().distinct()`, the last `distinct()` will discard all the effects of previous `distinct()` as it is designed.\n\nThis behavior results in unexpected values in terms of the final objects set.\n", "url": "https://github.com/realm/realm-java/issues/2282", "user": "stk1m1", "labels": ["T-Bug"], "created": "2016-02-15 11:19:11", "closed": "2017-03-27 12:18:03", "commits": {}, "ttf": 406.0002777777778, "commitsDetails": []}, {"title": "Naming restriction of attributes in RealmObjects", "body": "Goal: create a RealmObject class with an attribute named \"realm\".\nExpected results: No compilation errors\nActual results: \"Error: realm has private accessor\" compiler error, due to internal realm.io variable also called \"realm\", thus the whole proxy class is getting confused as to which realm to use for the proxy functions.\nSteps to reproduce: Create a class extending RealmObject, add an attribute named realm, compile\n\nRealm Version: 0.87.0\n\nWell, the problem is pretty obvious. The proxy class is extending the actual class, tries to override the attribute named realm, because apparently you use a variable called \"realm\" for the proxy implementation. The proxy class then finds that this variable has a private accessor and throws an exception. Either disallow attributes with the name \"realm\" (bad idea) or rename the internal attribute to \"proxyRealm\" or something like that.\n", "url": "https://github.com/realm/realm-java/issues/2255", "user": "wickermoon", "labels": ["T-Bug"], "created": "2016-02-10 13:04:40", "closed": "2016-02-26 02:16:35", "commits": {"540f33f6a75ad2a3f0e545fd9f38876bf02969e0": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "0c8acefb96cd2c2c5057ee20f9a9bd4d08359edf": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "a63c9e161935fb6a07d59cfea08e8552c21a1851": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "b266870b16ffd61910ad36e8f25ae36c33828b4a": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "425b403eedafeb2ca56964474eff995520c98554": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "aac7316cad238312f62901b81c866c4d49a9abe1": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "ed1a078c9dff9287cdf575b647c4ffd56e61b0fa": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 15.000277777777777, "commitsDetails": [{"commitHash": "540f33f6a75ad2a3f0e545fd9f38876bf02969e0", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0c8acefb96cd2c2c5057ee20f9a9bd4d08359edf", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a63c9e161935fb6a07d59cfea08e8552c21a1851", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b266870b16ffd61910ad36e8f25ae36c33828b4a", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "425b403eedafeb2ca56964474eff995520c98554", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "aac7316cad238312f62901b81c866c4d49a9abe1", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["c5d772fae87f7ed20919968e99c875eafaef2b54"], "nameRev": "aac7316cad238312f62901b81c866c4d49a9abe1 tags/v0.88.0~26^2", "commitMessage": "allow 'realm' and 'row' as a field name of model class. This fixes #2255\n", "commitDateTime": "2016-02-25 19:56:46", "authoredDateTime": "2016-02-24 13:51:11", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyClassGenerator.java", "insertions": 31, "deletions": 31, "lines": 62}, {"filePath": "realm/realm-annotations-processor/src/test/java/io/realm/processor/RealmProcessorTest.java", "insertions": 10, "deletions": 1, "lines": 11}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/AllTypesRealmProxy.java", "insertions": 61, "deletions": 61, "lines": 122}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/BooleansRealmProxy.java", "insertions": 31, "deletions": 31, "lines": 62}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/NullTypesRealmProxy.java", "insertions": 135, "deletions": 135, "lines": 270}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/SimpleRealmProxy.java", "insertions": 22, "deletions": 22, "lines": 44}, {"filePath": "realm/realm-annotations-processor/src/test/resources/some/test/ConflictingFieldName.java", "insertions": 79, "deletions": 0, "lines": 79}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmObjectTests.java", "insertions": 48, "deletions": 0, "lines": 48}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/entities/ConflictingFieldName.java", "insertions": 79, "deletions": 0, "lines": 79}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmObject.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}, {"commitHash": "ed1a078c9dff9287cdf575b647c4ffd56e61b0fa", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["fbfb944a4212c1fcc1616aac2d4024b3934379da", "aac7316cad238312f62901b81c866c4d49a9abe1"], "nameRev": "ed1a078c9dff9287cdf575b647c4ffd56e61b0fa tags/v0.88.0~26", "commitMessage": "Merge pull request #2337 from realm/my/naming_restriction_2255\n\nallow 'realm' and 'row' as a field name of model class. This fixes #2255", "commitDateTime": "2016-02-26 11:16:35", "authoredDateTime": "2016-02-26 11:16:35", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyClassGenerator.java", "insertions": 31, "deletions": 31, "lines": 62}, {"filePath": "realm/realm-annotations-processor/src/test/java/io/realm/processor/RealmProcessorTest.java", "insertions": 10, "deletions": 1, "lines": 11}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/AllTypesRealmProxy.java", "insertions": 61, "deletions": 61, "lines": 122}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/BooleansRealmProxy.java", "insertions": 31, "deletions": 31, "lines": 62}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/NullTypesRealmProxy.java", "insertions": 135, "deletions": 135, "lines": 270}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/SimpleRealmProxy.java", "insertions": 22, "deletions": 22, "lines": 44}, {"filePath": "realm/realm-annotations-processor/src/test/resources/some/test/ConflictingFieldName.java", "insertions": 79, "deletions": 0, "lines": 79}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmObjectTests.java", "insertions": 48, "deletions": 0, "lines": 48}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/entities/ConflictingFieldName.java", "insertions": 79, "deletions": 0, "lines": 79}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmObject.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": ["aac7316cad238312f62901b81c866c4d49a9abe1"], "filteredCommitsReason": {"duplicated": 5, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 32.0, "deletions": 32.0, "lines": 64.0, "gitFilesChange": 2}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-annotations-processor/src/main/java/io/realm/processor", "realm/realm-library/src/main/java/io/realm"]}, {"title": "findFirstAsync() asObservable doesn't always return when items are not found", "body": "### Goals + Expected Results\n\nTo load a single object from the database as an observable by querying it's ID, while returning null (or error) when an item with a specified ID is not found, as specified in the JavaDocs.\n### Actual results\n\nLoading a single valid item by its ID is fine, the first item emitted is not loaded so the filter returns false. When the RealmObject is loaded then the filter returns true on the seconds pass and the object is passed along.\n\nWhen an empty ID is passed to the query, it executes and the same process begins where a non loaded item is filtered out but then nothing is ever returned. According to the docs, it should yield a null object.\n\nEven if this is expected behaviour, it means it becomes impossible to detect if an item wasn't found or if a query is just taking an extremely long time.\n### Steps + Sample\n\nCall `getFooById()` with an empty String.\n\n```\ngetFooById(\"\").observeOn(AndroidSchedulers.mainThread()).subscribe(new FooSubscriber());\n\npublic Observable<Foo> getFooById(String id) {\n\n    return realm.where(Foo.class)\n            .equalTo(\"id\", id)\n            .findFirstAsync()\n            .asObservable()\n            .filter(this::filterResults);\n}\n\nprivate boolean filterResults(Foo result) {\n    return result.isLoaded();\n}\n\nprivate class FooSubscriber extends Subscriber<Foo> {\n\n    @Override\n    public void onCompleted() {\n        doCompletedThing();\n    }\n\n    @Override\n    public void onError(Throwable error) {\n        //handle errors\n    }\n\n    @Override\n    public void onNext(Foo foo) {\n        //do something with foo\n        onCompleted();\n    }\n}\n```\n### Versions\n\nAndroid Studio 1.5.1\nRxJava 1.0.17\nRealm 0.87.2\n", "url": "https://github.com/realm/realm-java/issues/2200", "user": "grahamsmith", "labels": ["T-Bug"], "created": "2016-01-29 15:53:25", "closed": "2016-02-09 08:08:22", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "DynamicRealmObject / Reusing String incorrectly", "body": "```\n@Test\n    public void dynamicRealmObject() {\n        testRealm.beginTransaction();\n        RealmDemoData obj = testRealm.createObject(RealmDemoData.class);\n        for (int i = 0; i < 10; i++) {\n            RealmFloat object = testRealm.createObject(RealmFloat.class);\n            object.setFloatValue((float) i);\n            obj.getStackValues().add(object);\n        }\n        testRealm.commitTransaction();\n\n        DynamicRealmObject o = new DynamicRealmObject(obj);\n        RealmList<DynamicRealmObject> list = o.getList(\"stackValues\");\n\n        float[] values = new float[list.size()];\n        for (int i = 0; i < list.size(); i++) {\n            values[i] = o.getFloat(\"floatValue\"); // Note that \"o\" is not a RealmFloat object so this should throw.\n        }\n    }\n```\n\nIt throws with this:\n\n```\njava.lang.IllegalArgumentException: Illegal Argument: Field not found: floatValuealm_internal_LinkView_nativeSize__J\nat io.realm.internal.CheckedRow.nativeGetColumnIndex(Native Method)\nat io.realm.internal.UncheckedRow.getColumnIndex(UncheckedRow.java:122)\nat io.realm.DynamicRealmObject.getFloat(DynamicRealmObject.java:184)\nat io.realm.RealmListTests.dynamicRealmObject(RealmListTests.java:1041)\nat java.lang.reflect.Method.invoke(Native Method)\nat java.lang.reflect.Method.invoke(Method.java:372)\nat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\nat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\nat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\nat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\nat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\nat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\nat io.realm.rule.TestRealmConfigurationFactory$1.evaluate(TestRealmConfigurationFactory.java:49)\nat org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\nat org.junit.rules.RunRules.evaluate(RunRules.java:20)\nat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\nat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\nat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\nat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\nat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\nat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\nat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\nat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\nat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\nat org.junit.runners.Suite.runChild(Suite.java:128)\nat org.junit.runners.Suite.runChild(Suite.java:27)\nat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\nat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\nat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\nat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\nat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\nat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\nat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\nat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\nat android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:54)\nat android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:240)\nat android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:1853)\n```\n\n2nd crash, this time without exception:\n\n```\n   public void testGetList() {\n        realm.beginTransaction();\n        AllTypes obj = realm.createObject(AllTypes.class);\n        Dog dog = realm.createObject(Dog.class);\n        dog.setName(\"fido\");\n        obj.getColumnRealmList().add(dog);\n        realm.commitTransaction();\n\n        DynamicRealmObject dynamicAllTypes = new DynamicRealmObject(obj);\n        RealmList<DynamicRealmObject> list = dynamicAllTypes.getList(AllTypes.FIELD_REALMLIST);\n        DynamicRealmObject listObject = list.get(0);\n\n        assertEquals(1, list.size());\n        assertEquals(Dog.CLASS_NAME, listObject.getType());\n        assertEquals(\"fido\", listObject.getString(Dog.FIELD_NAME));\n    }\n```\n", "url": "https://github.com/realm/realm-java/issues/2141", "user": "cmelchior", "labels": ["T-Bug"], "created": "2016-01-24 13:50:42", "closed": "2016-01-25 06:55:50", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "java.lang.IllegalAccessError", "body": " java.lang.IllegalAccessError: Illegal class access ('io.realm.UserRealmProxy' attempting to access 'io.realm.BaseRealm') in attempt to invoke virtual method void io.realm.BaseRealm.checkIfValid() (declaration of 'io.realm.UserRealmProxy' appears in /data/data/com.qiuduanribao.joke/files/studio-fd/dex/slice_9_e1a298d6ec3d810f745aca6360a4b217f65d0196-classes.dex)\nat io.realm.UserRealmProxy.get_id(UserRealmProxy.java:107)\n", "url": "https://github.com/realm/realm-java/issues/2139", "user": "LiuDeng", "labels": ["Reproduction-Required", "T-Bug"], "created": "2016-01-23 07:14:16", "closed": "2016-02-11 08:55:31", "commits": {}, "ttf": 19.00027777777778, "commitsDetails": []}, {"title": "Exceptions during async transactions are failing silently", "body": "So I've ran into a very frustrating error. Exceptions during asynchronous transactions aren't getting reported. No signs of stacktrace. \n\nThis made me spend a couple of hours trying to figure out why my logic isn't working only to realize that Realm has stopped printing Error stacktraces.\n##### Steps to reproduce\n\nSimply throw an `Error` inside a transaction.\n##### Example code\n\n``` java\nprivate void testRealm() {\n\n    final Realm.Transaction.Callback callback = new Realm.Transaction.Callback() {\n\n        @Override\n        public void onSuccess() {\n            super.onSuccess();\n        }\n\n        @Override\n        public void onError(Exception e) {\n            super.onError(e);\n            e.printStackTrace();\n        }\n\n    };\n\n    getRealm().executeTransaction(realm -> {\n        throw new IllegalAccessError(\"Poop\");\n    }, callback);\n\n}\n```\n\nThe stacktrace never gets printed.\n\n**Realm version**: 0.87.2\n\nAny ideas how do i fix this?\n", "url": "https://github.com/realm/realm-java/issues/2130", "user": "saket", "labels": ["T-Bug"], "created": "2016-01-21 12:56:22", "closed": "2016-02-08 21:39:43", "commits": {"a995ebddb9a6e721002872684659dcd5e01592eb": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}, "630a6a1c930f09df8fd78932a4714bd33650cbe2": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}}, "ttf": 18.00027777777778, "commitsDetails": [{"commitHash": "a995ebddb9a6e721002872684659dcd5e01592eb", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": ["2e000b912b61041da4fe5e679c08a53f903b174d"], "nameRev": "a995ebddb9a6e721002872684659dcd5e01592eb tags/v0.88.0~59^2", "commitMessage": "Using separate interfaces for async transaction also fixes #2130\n", "commitDateTime": "2016-02-08 17:44:38", "authoredDateTime": "2016-02-08 17:44:38", "commitGitStats": [{"filePath": "examples/threadExample/src/main/java/io/realm/examples/threads/AsyncQueryFragment.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmAsyncQueryTests.java", "insertions": 84, "deletions": 22, "lines": 106}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmTests.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "realm/realm-library/src/main/java/io/realm/Realm.java", "insertions": 190, "deletions": 3, "lines": 193}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AsyncQueryFragment.java", "spoonMethods": [{"spoonMethodName": "io.realm.examples.threads.AsyncQueryFragment.onClick(android.view.View)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.examples.threads.AsyncQueryFragment.onClick(android.view.View).2", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.examples.threads.AsyncQueryFragment.onClick(android.view.View).2.onError(java.lang.Exception)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.examples.threads.AsyncQueryFragment.onClick(android.view.View).2.onSuccess()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RealmAsyncQueryTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_exceptionHandling()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnSuccess()", "TOT": 8, "UPD": 4, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnError()", "TOT": 8, "UPD": 3, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_throwsOnNonLooperThread()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_retry()", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate()", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerIsAdvanced()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerThreadBehind()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_retry()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_retry()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_batchUpdate()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_multipleFields_batchUpdate()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.stressTestBackgroundCommits()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.queryingLinkHandover()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_exceptionHandling().3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnSuccess().4", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnSuccess().5", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnSuccess().6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnError().7", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnError().8", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnError().9", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync().10", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_throwsOnNonLooperThread().11", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_withNotification().12", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_forceLoad().13", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_retry().14", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().15", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerIsAdvanced().16", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerThreadBehind().17", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync().18", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_initalEmptyRow().19", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_updatedIfsyncRealmObjectIsUpdated().20", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_withNotification().21", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_retry().22", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync().23", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_retry().24", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_batchUpdate().25", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_multipleFields_batchUpdate().26", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.combiningAsyncAndSync().27", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.stressTestBackgroundCommits().28", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.stressTestBackgroundCommits().29", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.stressTestBackgroundCommits().30", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().31", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().32", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().33", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().34", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().35", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().36", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().37", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.queryingLinkHandover().38", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async().2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnSuccess().5.onSuccess()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnError().8.onError(java.lang.Exception)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_exceptionHandling().3.run()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnSuccess().4.onResult(int)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnError().7.onResult(int)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_withNotification().12.onChange()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_forceLoad().13.onChange()", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_initalEmptyRow().19.onChange()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_updatedIfsyncRealmObjectIsUpdated().20.onChange()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_withNotification().21.onChange()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.combiningAsyncAndSync().27.onChange()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.stressTestBackgroundCommits().29.onChange()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync().10.run()", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_throwsOnNonLooperThread().11.run()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_retry().14.run()", "TOT": 10, "UPD": 4, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().15.run()", "TOT": 15, "UPD": 7, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerIsAdvanced().16.run()", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerThreadBehind().17.run()", "TOT": 11, "UPD": 7, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync().18.run()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_retry().22.run()", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync().23.run()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_retry().24.run()", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_batchUpdate().25.run()", "TOT": 11, "UPD": 6, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_multipleFields_batchUpdate().26.run()", "TOT": 9, "UPD": 5, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().31.run()", "TOT": 14, "UPD": 14, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().32.run()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().37.run()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.queryingLinkHandover().38.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_exceptionHandling().3.run().2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_exceptionHandling().3.run().2.onError(java.lang.Exception)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().31.run().1.onChange()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().31.run().2.onChange()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().31.run().3.onChange()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().31.run().4.onChange()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_exceptionHandling().3.run().2.onSuccess()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_retry().14.run().2.onChange()", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerIsAdvanced().16.run().3.onChange()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerThreadBehind().17.run().3.onChange()", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerThreadBehind().17.run().4.onChange()", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_retry().22.run().2.onChange()", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_retry().24.run().2.onChange()", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync().10.run().1.queueIdle()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerIsAdvanced().16.run().2.onInterceptMessage(int)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync().18.run().1.queueIdle()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync().23.run().1.queueIdle()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.queryingLinkHandover().38.run().1.onChange()", "TOT": 25, "UPD": 15, "INS": 0, "MOV": 10, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().15.run().2.onChange()", "TOT": 14, "UPD": 6, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().15.run().3.onChange()", "TOT": 13, "UPD": 6, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_batchUpdate().25.run().2.onChange()", "TOT": 12, "UPD": 6, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_batchUpdate().25.run().3.onChange()", "TOT": 12, "UPD": 6, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_multipleFields_batchUpdate().26.run().2.onChange()", "TOT": 34, "UPD": 28, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_multipleFields_batchUpdate().26.run().3.onChange()", "TOT": 40, "UPD": 30, "INS": 0, "MOV": 10, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_retry().14.run().1.onInterceptMessage(int)", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().15.run().1.onInterceptMessage(int)", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerThreadBehind().17.run().1.onInterceptMessage(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_retry().22.run().1.onInterceptMessage(int)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_retry().24.run().1.onInterceptMessage(int)", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_batchUpdate().25.run().1.onInterceptMessage(int)", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_multipleFields_batchUpdate().26.run().1.onInterceptMessage(int)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().15.run().1.onInterceptMessage(int).1.run()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerIsAdvanced().16.run().2.onInterceptMessage(int).2.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_batchUpdate().25.run().1.onInterceptMessage(int).1.run()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_multipleFields_batchUpdate().26.run().1.onInterceptMessage(int).1.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async().2.onError(java.lang.Exception)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransactionAsync_onSuccess()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransactionAsync_onError()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransactionAsync_NoCallbacks()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransactionAsync_realmClosedOnSuccess()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerIsAdvanced().23.run()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().22.run().3", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().22.run().1.onInterceptMessage(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().22.run().2.onChange()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_retry().14.run().2", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().15.run().1", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().15.run().2", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_retry().14.run().1", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().15.run().3", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_batchUpdate().25.run().1", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_batchUpdate().25.run().2", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_retry().24.run().1", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_batchUpdate().25.run().3", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_retry().24.run().2", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RealmTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmTests.closeRealmInChangeListenerWhenThereIsListenerOnEmptyObject()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.closeRealmInChangeListenerWhenThereIsListenerOnObject()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.closeRealmInChangeListenerWhenThereIsListenerOnResults()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.closeRealmInChangeListener().17.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Realm.java", "spoonMethods": [{"spoonMethodName": "io.realm.Realm.migrateRealm(io.realm.RealmConfiguration,io.realm.RealmMigration).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.executeTransactionAsync(io.realm.Realm$Transaction)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.executeTransactionAsync(io.realm.Realm$Transaction,io.realm.Realm$Transaction$OnSuccess)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.executeTransactionAsync(io.realm.Realm$Transaction,io.realm.Realm$Transaction$OnError)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.executeTransactionAsync(io.realm.Realm$Transaction,io.realm.Realm$Transaction$OnSuccess,io.realm.Realm$Transaction$OnError)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.executeTransaction(io.realm.Realm$Transaction,io.realm.Realm$Transaction$Callback)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "630a6a1c930f09df8fd78932a4714bd33650cbe2", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": ["2e000b912b61041da4fe5e679c08a53f903b174d", "a995ebddb9a6e721002872684659dcd5e01592eb"], "nameRev": "630a6a1c930f09df8fd78932a4714bd33650cbe2 tags/v0.88.0~59", "commitMessage": "Merge pull request #2152 from realm/nh/fixes_2130_exception_in_transac\n\nUsing separate interfaces for async transaction also fixes #2130", "commitDateTime": "2016-02-08 21:39:42", "authoredDateTime": "2016-02-08 21:39:42", "commitGitStats": [{"filePath": "examples/threadExample/src/main/java/io/realm/examples/threads/AsyncQueryFragment.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmAsyncQueryTests.java", "insertions": 84, "deletions": 22, "lines": 106}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmTests.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "realm/realm-library/src/main/java/io/realm/Realm.java", "insertions": 190, "deletions": 3, "lines": 193}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AsyncQueryFragment.java", "spoonMethods": [{"spoonMethodName": "io.realm.examples.threads.AsyncQueryFragment.onClick(android.view.View)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.examples.threads.AsyncQueryFragment.onClick(android.view.View).2", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.examples.threads.AsyncQueryFragment.onClick(android.view.View).2.onError(java.lang.Exception)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.examples.threads.AsyncQueryFragment.onClick(android.view.View).2.onSuccess()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RealmAsyncQueryTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_exceptionHandling()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnSuccess()", "TOT": 8, "UPD": 4, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnError()", "TOT": 8, "UPD": 3, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_throwsOnNonLooperThread()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_retry()", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate()", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerIsAdvanced()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerThreadBehind()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_retry()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_retry()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_batchUpdate()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_multipleFields_batchUpdate()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.stressTestBackgroundCommits()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.queryingLinkHandover()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_exceptionHandling().3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnSuccess().4", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnSuccess().5", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnSuccess().6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnError().7", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnError().8", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnError().9", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync().10", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_throwsOnNonLooperThread().11", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_withNotification().12", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_forceLoad().13", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_retry().14", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().15", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerIsAdvanced().16", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerThreadBehind().17", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync().18", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_initalEmptyRow().19", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_updatedIfsyncRealmObjectIsUpdated().20", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_withNotification().21", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_retry().22", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync().23", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_retry().24", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_batchUpdate().25", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_multipleFields_batchUpdate().26", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.combiningAsyncAndSync().27", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.stressTestBackgroundCommits().28", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.stressTestBackgroundCommits().29", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.stressTestBackgroundCommits().30", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().31", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().32", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().33", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().34", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().35", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().36", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().37", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.queryingLinkHandover().38", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async().2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnSuccess().5.onSuccess()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnError().8.onError(java.lang.Exception)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_exceptionHandling().3.run()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnSuccess().4.onResult(int)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_realmClosedOnError().7.onResult(int)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_withNotification().12.onChange()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_forceLoad().13.onChange()", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_initalEmptyRow().19.onChange()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_updatedIfsyncRealmObjectIsUpdated().20.onChange()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_withNotification().21.onChange()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.combiningAsyncAndSync().27.onChange()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.stressTestBackgroundCommits().29.onChange()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync().10.run()", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_throwsOnNonLooperThread().11.run()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_retry().14.run()", "TOT": 10, "UPD": 4, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().15.run()", "TOT": 15, "UPD": 7, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerIsAdvanced().16.run()", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerThreadBehind().17.run()", "TOT": 11, "UPD": 7, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync().18.run()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_retry().22.run()", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync().23.run()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_retry().24.run()", "TOT": 7, "UPD": 4, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_batchUpdate().25.run()", "TOT": 11, "UPD": 6, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_multipleFields_batchUpdate().26.run()", "TOT": 9, "UPD": 5, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().31.run()", "TOT": 14, "UPD": 14, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync_notIndexedFields().32.run()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.batchUpdateDifferentTypeOfQueries().37.run()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.queryingLinkHandover().38.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_exceptionHandling().3.run().2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_exceptionHandling().3.run().2.onError(java.lang.Exception)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().31.run().1.onChange()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().31.run().2.onChange()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().31.run().3.onChange()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.distinctAsync().31.run().4.onChange()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async_exceptionHandling().3.run().2.onSuccess()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_retry().14.run().2.onChange()", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerIsAdvanced().16.run().3.onChange()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerThreadBehind().17.run().3.onChange()", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerThreadBehind().17.run().4.onChange()", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_retry().22.run().2.onChange()", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_retry().24.run().2.onChange()", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync().10.run().1.queueIdle()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerIsAdvanced().16.run().2.onInterceptMessage(int)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync().18.run().1.queueIdle()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync().23.run().1.queueIdle()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.queryingLinkHandover().38.run().1.onChange()", "TOT": 25, "UPD": 15, "INS": 0, "MOV": 10, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().15.run().2.onChange()", "TOT": 14, "UPD": 6, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().15.run().3.onChange()", "TOT": 13, "UPD": 6, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_batchUpdate().25.run().2.onChange()", "TOT": 12, "UPD": 6, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_batchUpdate().25.run().3.onChange()", "TOT": 12, "UPD": 6, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_multipleFields_batchUpdate().26.run().2.onChange()", "TOT": 34, "UPD": 28, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_multipleFields_batchUpdate().26.run().3.onChange()", "TOT": 40, "UPD": 30, "INS": 0, "MOV": 10, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_retry().14.run().1.onInterceptMessage(int)", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().15.run().1.onInterceptMessage(int)", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerThreadBehind().17.run().1.onInterceptMessage(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findFirstAsync_retry().22.run().1.onInterceptMessage(int)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_retry().24.run().1.onInterceptMessage(int)", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_batchUpdate().25.run().1.onInterceptMessage(int)", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_multipleFields_batchUpdate().26.run().1.onInterceptMessage(int)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().15.run().1.onInterceptMessage(int).1.run()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerIsAdvanced().16.run().2.onInterceptMessage(int).2.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_batchUpdate().25.run().1.onInterceptMessage(int).1.run()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_multipleFields_batchUpdate().26.run().1.onInterceptMessage(int).1.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransaction_async().2.onError(java.lang.Exception)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransactionAsync_onSuccess()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransactionAsync_onError()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransactionAsync_NoCallbacks()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.executeTransactionAsync_realmClosedOnSuccess()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_callerIsAdvanced().23.run()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().22.run().3", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().22.run().1.onInterceptMessage(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().22.run().2.onChange()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_retry().14.run().2", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().15.run().1", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().15.run().2", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_retry().14.run().1", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllAsync_batchUpdate().15.run().3", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_batchUpdate().25.run().1", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_batchUpdate().25.run().2", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_retry().24.run().1", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_batchUpdate().25.run().3", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.findAllSortedAsync_retry().24.run().2", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RealmTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmTests.closeRealmInChangeListenerWhenThereIsListenerOnEmptyObject()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.closeRealmInChangeListenerWhenThereIsListenerOnObject()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.closeRealmInChangeListenerWhenThereIsListenerOnResults()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTests.closeRealmInChangeListener().17.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Realm.java", "spoonMethods": [{"spoonMethodName": "io.realm.Realm.migrateRealm(io.realm.RealmConfiguration,io.realm.RealmMigration).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.executeTransactionAsync(io.realm.Realm$Transaction)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.executeTransactionAsync(io.realm.Realm$Transaction,io.realm.Realm$Transaction$OnSuccess)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.executeTransactionAsync(io.realm.Realm$Transaction,io.realm.Realm$Transaction$OnError)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.executeTransactionAsync(io.realm.Realm$Transaction,io.realm.Realm$Transaction$OnSuccess,io.realm.Realm$Transaction$OnError)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.executeTransaction(io.realm.Realm$Transaction,io.realm.Realm$Transaction$Callback)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 1, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "RealmResults.size() returns invalid result for large sizes()", "body": "Current implementation is this:\n\n```\n    @Override\n    public int size() {\n        if (!isLoaded()) {\n            return 0;\n        } else {\n            return ((Long)getTable().size()).intValue();\n        }\n    }\n```\n\nIt should be the below as the current implementation will overflow for large sizes, which does not honor the contract in the Collection interface : https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html#size()\n\n```\n    @Override\n    public int size() {\n        if (!isLoaded()) {\n            return 0;\n        } else {\n            long size = getTable().size();\n            return (size > Integer.MAX_VALUE) ? Integer.MAX_VALUE : (int) size;\n        }\n    }\n```\n\nWill be fun writing a unit test for that :/\n", "url": "https://github.com/realm/realm-java/issues/2129", "user": "cmelchior", "labels": ["T-Bug"], "created": "2016-01-21 12:35:12", "closed": "2016-02-09 06:44:46", "commits": {}, "ttf": 18.00027777777778, "commitsDetails": []}, {"title": "ReLinker NoClassDefFoundError exception", "body": "Using 8.8.0-SNAPSHOT:\n\njava.lang.NoClassDefFoundError: Failed resolution of: Lcom/getkeepsafe/relinker/ReLinker;\n                                                          at io.realm.internal.RealmCore.loadLibrary(RealmCore.java:90)\n                                                          at io.realm.RealmConfiguration$Builder.<init>(RealmConfiguration.java:307)\n                                                          at com.borg.forza.activities.Forza.setupRealm(Forza.java:75)\n                                                          at com.borg.forza.activities.Forza.onCreate(Forza.java:63)\n                                                          at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1034)\n                                                          at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4605)\n                                                          at android.app.ActivityThread.access$1500(ActivityThread.java:148)\n                                                          at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1353)\n                                                          at android.os.Handler.dispatchMessage(Handler.java:102)\n                                                          at android.os.Looper.loop(Looper.java:135)\n                                                          at android.app.ActivityThread.main(ActivityThread.java:5312)\n                                                          at java.lang.reflect.Method.invoke(Native Method)\n                                                          at java.lang.reflect.Method.invoke(Method.java:372)\n                                                          at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:901)\n                                                          at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:696)\n                                                       Caused by: java.lang.ClassNotFoundException: Didn't find class \"com.getkeepsafe.relinker.ReLinker\" on path: DexPathList[[zip file \"/mnt/asec/com.borg.forza-1/base.apk\"],nativeLibraryDirectories=[/mnt/asec/com.borg.forza-1/lib/arm, /vendor/lib, /system/lib]]\n                                                          at dalvik.system.BaseDexClassLoader.findClass(BaseDexClassLoader.java:56)\n                                                          at java.lang.ClassLoader.loadClass(ClassLoader.java:511)\n                                                          at java.lang.ClassLoader.loadClass(ClassLoader.java:469)\n                                                          at io.realm.internal.RealmCore.loadLibrary(RealmCore.java:90)\u00a0\n                                                          at io.realm.RealmConfiguration$Builder.<init>(RealmConfiguration.java:307)\u00a0\n                                                          at com.borg.forza.activities.Forza.setupRealm(Forza.java:75)\u00a0\n                                                          at com.borg.forza.activities.Forza.onCreate(Forza.java:63)\u00a0\n                                                          at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1034)\u00a0`\n", "url": "https://github.com/realm/realm-java/issues/2116", "user": "lukcz", "labels": ["T-Bug"], "created": "2016-01-19 19:18:33", "closed": "2016-03-03 08:55:56", "commits": {}, "ttf": 43.000277777777775, "commitsDetails": []}, {"title": "RealmResults.removeLast JavaDoc is wrong", "body": "`Removes and returns the last object in the list. This also deletes the object from the underlying Realm.`\n\nIt does not return any value, nor can it since the element has been deleted.\n", "url": "https://github.com/realm/realm-java/issues/2112", "user": "cmelchior", "labels": ["T-Bug"], "created": "2016-01-19 09:57:54", "closed": "2016-02-05 12:02:50", "commits": {}, "ttf": 17.00027777777778, "commitsDetails": []}, {"title": "jsonExample uses the wrong key", "body": "See http://stackoverflow.com/questions/34802908/realm-loadjsonfromstring-fails-to-put-string\n", "url": "https://github.com/realm/realm-java/issues/2092", "user": "cmelchior", "labels": ["T-Bug"], "created": "2016-01-15 09:57:00", "closed": "2016-01-15 10:26:30", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Calling copyFromRealm with a list of DynamicRealmObject should throw", "body": "Throw a meaningful exception when calling `realm.copyFromRealm(List<DynamicRealmObject)`\n", "url": "https://github.com/realm/realm-java/issues/2058", "user": "beeender", "labels": ["T-Bug"], "created": "2016-01-11 10:17:51", "closed": "2016-01-14 13:36:19", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "DynamicRealmObject.setObject should thrown meaningfull exception when columnIndex = -1", "body": "Currently it will just crash in native code.\n", "url": "https://github.com/realm/realm-java/issues/2057", "user": "beeender", "labels": ["T-Bug"], "created": "2016-01-11 09:42:08", "closed": "2017-10-24 13:44:35", "commits": {"fa2021221fc6f31f9604724f3732eef9bd269514": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 652.0002777777778, "commitsDetails": [{"commitHash": "fa2021221fc6f31f9604724f3732eef9bd269514", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "RealmList.set(int location, E object) returns current object instead of previous.", "body": "Implementation of List interface requires from `set(int location, E object)` operation to return object that was previously set at given index. \nhttps://docs.oracle.com/javase/7/docs/api/java/util/List.html#set(int,%20E)\n\nThe implementation of `RealmList.set(int location, E object)` has a bug - it returns current object, instead of the previous one. \nIt can be easily observed by runing `Collections.swap(list, index1, index2);` (it uses set operation internally). Instead of objects being swapped, the same object is at index1 and index2 .\n", "url": "https://github.com/realm/realm-java/issues/2044", "user": "lukcz", "labels": ["T-Bug"], "created": "2016-01-07 18:44:02", "closed": "2016-01-08 11:57:20", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "BadVersionException", "body": "Hey, guys. I keep getting this exception. I am using 0.87.1 version of Realm(and I use Realm as a singleton).  \n\nMy situation looks like this: there is navigation button which starts a fragment, which makes an async query for objects in onStart() method. This exception rises when user spams this navigation button or just makes fast transactions between fragments.\n\n`java.lang.Error: io.realm.internal.async.BadVersionException: std::exception in io_realm_internal_TableQuery.cpp line 1262\nE/AndroidRuntime:     at io.realm.RealmQuery$3.call(RealmQuery.java:1491)\nE/AndroidRuntime:     at io.realm.RealmQuery$3.call(RealmQuery.java:1467)\nE/AndroidRuntime:     at io.realm.internal.async.BgPriorityCallable.call(BgPriorityCallable.java:36)\nE/AndroidRuntime:     at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:305)\nE/AndroidRuntime:     at java.util.concurrent.FutureTask.run(FutureTask.java:137)\nE/AndroidRuntime:     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)\nE/AndroidRuntime:     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)\nE/AndroidRuntime:     at java.lang.Thread.run(Thread.java:856)\nE/AndroidRuntime:  Caused by: io.realm.internal.async.BadVersionException: std::exception in io_realm_internal_TableQuery.cpp line 1262\nE/AndroidRuntime:     at io.realm.internal.TableQuery.nativeFindAllSortedWithHandover(Native Method)\nE/AndroidRuntime:     at io.realm.internal.TableQuery.findAllSortedWithHandover(TableQuery.java:490)\nE/AndroidRuntime:     at io.realm.RealmQuery$3.call(RealmQuery.java:1480)\nE/AndroidRuntime:     at io.realm.RealmQuery$3.call(RealmQuery.java:1467)\u00a0\nE/AndroidRuntime:     at io.realm.internal.async.BgPriorityCallable.call(BgPriorityCallable.java:36)\u00a0\nE/AndroidRuntime:     at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:305)\u00a0\nE/AndroidRuntime:     at java.util.concurrent.FutureTask.run(FutureTask.java:137)\u00a0\nE/AndroidRuntime:     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)\u00a0\nE/AndroidRuntime:     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)\u00a0\nE/AndroidRuntime:     at java.lang.Thread.run(Thread.java:856)`\n\nBy the way, sometimes my during fast transactions between fragments my app crashes with SIGSEV  or just completely freezes without throwing ANR, dunno if it's connected to the BadVersion, but just in case.\n", "url": "https://github.com/realm/realm-java/issues/2021", "user": "Kistamushken", "labels": ["T-Bug"], "created": "2016-01-03 15:46:25", "closed": "2016-05-19 20:45:01", "commits": {}, "ttf": 137.00027777777777, "commitsDetails": []}, {"title": "`addFiled` with `PRIMARY_KEY` doesn't apply `REQUIRED` modifier implicitly  (Original title - How to migrate a field's type the right way?)", "body": "Hey guys. I'm receiving an exception while trying to change a field's type.\n\nStacktrace: https://gist.github.com/Saketme/4b8f6274a0103165c79d\nRealmObject: https://gist.github.com/Saketme/37894ccc5a1051cd8111\nMigration: https://gist.github.com/Saketme/9ff0591dfdc45018e90b\n\nIn brief, I wanted to change a field's type from `long` to `String`. Retaining old values was not an option so the whole table had to be dropped. I however could not find a way to clear all items while migrating. Am I supposed to use `Realm.clear()` here?\n", "url": "https://github.com/realm/realm-java/issues/2001", "user": "saket", "labels": ["T-Bug"], "created": "2015-12-24 10:29:53", "closed": "2015-12-25 10:42:28", "commits": {"728fe772da1c9572ce87d70fd7c270d9f7659055": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "10599e0e5d502c47814fb231e1df68b78fef3336": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "7f6953ae5c6daf4423c3ae21927936285735cbe1": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "7f097cf6732a161ca44761dfe015d91b8e4b605a": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "728fe772da1c9572ce87d70fd7c270d9f7659055", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "10599e0e5d502c47814fb231e1df68b78fef3336", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "7f6953ae5c6daf4423c3ae21927936285735cbe1", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "7f097cf6732a161ca44761dfe015d91b8e4b605a", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["6b62a45a4d9b681aef939fb3739c7c59052305c4"], "nameRev": "7f097cf6732a161ca44761dfe015d91b8e4b605a tags/v0.87.2~9^2", "commitMessage": "addField PRIMARY_KEY should also apply REQUIRED\n\nFix #2001\n", "commitDateTime": "2015-12-25 21:15:43", "authoredDateTime": "2015-12-25 17:51:29", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "realm/realm-annotations/src/main/java/io/realm/annotations/PrimaryKey.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmObjectSchemaTests.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/main/java/io/realm/FieldAttribute.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PrimaryKey.java", "spoonMethods": []}, {"spoonFilePath": "RealmObjectSchemaTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmObjectSchemaTests.testPrimaryKeyFieldAttribute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FieldAttribute.java", "spoonMethods": []}, {"spoonFilePath": "RealmObjectSchema.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmObjectSchema.addField(java.lang.String,java.lang.Class,io.realm.FieldAttribute[])", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7f097cf6732a161ca44761dfe015d91b8e4b605a"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7.0, "deletions": 3.0, "lines": 10.0, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 4.0, "UPD": 0.0, "INS": 1.0, "MOV": 2.0, "DEL": 1.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-annotations/src/main/java/io/realm/annotations", "realm/realm-library/src/main/java/io/realm"], "changesInPackagesSPOON": ["io.realm.RealmObjectSchema.addField(java.lang.String,java.lang.Class,io.realm.FieldAttribute[])"]}, {"title": "Info message from art: Rejecting re-init", "body": "Just as an information, when I start the app with the most current version of Realm I get the following log messages:\n\n```\n        I/art: Rejecting re-init on previously-failed class java.lang.Class<io.realm.rx.RealmObservableFactory$4>\n        I/art: Rejecting re-init on previously-failed class java.lang.Class<io.realm.rx.RealmObservableFactory$4>\n        I/art: Rejecting re-init on previously-failed class java.lang.Class<io.realm.rx.RealmObservableFactory$3>\n        I/art: Rejecting re-init on previously-failed class java.lang.Class<io.realm.rx.RealmObservableFactory$3>\n        I/art: Rejecting re-init on previously-failed class java.lang.Class<io.realm.rx.RealmObservableFactory$2>\n        I/art: Rejecting re-init on previously-failed class java.lang.Class<io.realm.rx.RealmObservableFactory$2>\n        I/art: Rejecting re-init on previously-failed class java.lang.Class<io.realm.rx.RealmObservableFactory$1>\n        I/art: Rejecting re-init on previously-failed class java.lang.Class<io.realm.rx.RealmObservableFactory$1>\n```\n\nWe are currently not using the new `rx`feature, but just wanted to see if this is something to be concerned about.\n\nThe device was a Nexus 5 running Android 6.\n", "url": "https://github.com/realm/realm-java/issues/1990", "user": "ghost", "labels": ["T-Bug"], "created": "2015-12-22 10:40:04", "closed": "2016-03-07 12:07:02", "commits": {"a1965b8b868ceadb55b37f766fd7062b5a085022": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "79069dc991ba56aef83c9b90070005c936e652fb": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "91a43184556d5df2742cf1bd18acf833035446a0": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "58700941330467d824f9f89170b53e775be4c2e2": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 76.00027777777778, "commitsDetails": [{"commitHash": "a1965b8b868ceadb55b37f766fd7062b5a085022", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "79069dc991ba56aef83c9b90070005c936e652fb", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "91a43184556d5df2742cf1bd18acf833035446a0", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "58700941330467d824f9f89170b53e775be4c2e2", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["9ccb6b32bc656348606ccd06ed8a24827e944dba"], "nameRev": "58700941330467d824f9f89170b53e775be4c2e2 tags/v0.88.0~12^2", "commitMessage": "Only load RealmObservableFactory when RxJava exist\n\nClose #1990.\n\n* Check RxJava existence only once.\n* Don't load RealmObservableFactory if RxJava doesn't exist.\n\nNOTE: When reflection called on the RealmObject/RealmResults, crash will\nstill happen because of Observable doesn't exist in the class path. In\nsuch a case, a dummy rx.Observable is still needed as a workaround.\n", "commitDateTime": "2016-03-07 19:32:32", "authoredDateTime": "2016-02-29 17:08:06", "commitGitStats": [{"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmConfigurationTests.java", "insertions": 67, "deletions": 0, "lines": 67}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmConfiguration.java", "insertions": 29, "deletions": 1, "lines": 30}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmObject.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmResults.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "realm/realm-library/src/main/java/io/realm/rx/RealmObservableFactory.java", "insertions": 6, "deletions": 29, "lines": 35}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmConfigurationTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmConfigurationTests.rxFactory()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmConfiguration.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmConfiguration.Builder", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.RealmConfiguration", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmConfiguration.isRxJavaAvailable()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmConfiguration.getRxFactory()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmConfiguration.Builder.build()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmObject.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmObject.asObservable()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RealmResults.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmResults.asObservable()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmObservableFactory.java", "spoonMethods": [{"spoonMethodName": "io.realm.rx.RealmObservableFactory", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "io.realm.rx.RealmObservableFactory.from(io.realm.Realm)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.rx.RealmObservableFactory.from(io.realm.DynamicRealm)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.rx.RealmObservableFactory.from(io.realm.Realm,io.realm.RealmResults)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.rx.RealmObservableFactory.from(io.realm.DynamicRealm,io.realm.RealmResults)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.rx.RealmObservableFactory.from(io.realm.Realm,io.realm.RealmList)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.rx.RealmObservableFactory.from(io.realm.DynamicRealm,io.realm.RealmList)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.rx.RealmObservableFactory.from(io.realm.Realm,io.realm.RealmObject)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.rx.RealmObservableFactory.from(io.realm.DynamicRealm,io.realm.DynamicRealmObject)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.rx.RealmObservableFactory.checkRxJavaAvailable()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["58700941330467d824f9f89170b53e775be4c2e2"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 44.0, "deletions": 35.0, "lines": 79.0, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 28.0, "UPD": 2.0, "INS": 5.0, "MOV": 9.0, "DEL": 12.0, "spoonFilesChanged": 4, "spoonMethodsChanged": 17}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-library/src/main/java/io/realm/rx", "realm/realm-library/src/main/java/io/realm"], "changesInPackagesSPOON": ["io.realm.rx.RealmObservableFactory.from(io.realm.Realm,io.realm.RealmObject)", "io.realm.rx.RealmObservableFactory.from(io.realm.DynamicRealm,io.realm.RealmResults)", "io.realm.rx.RealmObservableFactory.from(io.realm.DynamicRealm,io.realm.DynamicRealmObject)", "io.realm.RealmObject.asObservable()", "io.realm.rx.RealmObservableFactory", "io.realm.RealmConfiguration.getRxFactory()", "io.realm.rx.RealmObservableFactory.from(io.realm.DynamicRealm)", "io.realm.RealmConfiguration.Builder", "io.realm.RealmConfiguration.isRxJavaAvailable()", "io.realm.rx.RealmObservableFactory.from(io.realm.Realm,io.realm.RealmResults)", "io.realm.rx.RealmObservableFactory.checkRxJavaAvailable()", "io.realm.rx.RealmObservableFactory.from(io.realm.Realm,io.realm.RealmList)", "io.realm.RealmConfiguration", "io.realm.RealmConfiguration.Builder.build()", "io.realm.rx.RealmObservableFactory.from(io.realm.Realm)", "io.realm.RealmResults.asObservable()", "io.realm.rx.RealmObservableFactory.from(io.realm.DynamicRealm,io.realm.RealmList)"]}, {"title": "native crash while deleting obj from realm.", "body": "Possible duplicate of #1982 \nWhile committing an transaction that deletes an Obj1 from realm i get a native crash.\nA/libc: Fatal signal 11 (SIGSEGV), code 1, fault addr 0x288 in tid 26921 (app)\n\nI'm using 'io.realm:realm-android:0.87.0' from \"http://dl.bintray.com/realm/maven\"\n\nwhile deleting the obj1 there is an active subscription to a subquery of obj1. Something like this:\nguithread;\nobj1.getObj2List().where().equalTo(\"someField\", \"asd\").findAll().asObservable().subscribe(/_code that only calls size on RealmResults_/)\n\nlater in other thread:\nr.beginTransaction();\nobj1.getObj2List().where().equalTo(\"someField\", \"asd\").findAll().clear();\nr.commitTransaction();\nif(obj1.getObj2List().size() == 0) {\nr.beginTransaction();\nobj1.removeFromRealm();\nr.commitTransaction(); // crash\n}\n\nnot subscribing in guithread prevents the problem from happening\n\nI'm using Android Studio 2.0 built on nov 21 and i think i'm on latest LTS release of ubuntu\n\nIf this is not enough to pinpoint the problem i'll probably be able to create isolated example.\n", "url": "https://github.com/realm/realm-java/issues/1983", "user": "RobertBorg", "labels": ["T-Bug"], "created": "2015-12-22 02:26:05", "closed": "2015-12-22 07:46:13", "commits": {"5d34ab88b3669c0d3d8b23911a80f620b73ec1a9": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "4f890478f9578b2e4c95806e20b36fb17422ccd1": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "1ce2171561cb7d10a6ff1fb09e85295ebba0d889": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "8dfe6b54b45faffaefe1f4a61c3473572fc364cd": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "7461eb3d0660a012b814f6dccc3550ec4a8316db": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "63db4f9f4fce1d9d8311a110c0d462184baeb010": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "01d080d1cef3232be6e930814b4352eb9b79dc11": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "2db85168f65b904f9bada6883b393d5f176377e1": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "b3253c0cfa384b5092884704c7323006f36a0456": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "bc5cc6c4327908d08ec8aab21d03412f7a7714eb": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "f80832061d4697bfe81883f9053e8f7da5641f9b": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "6698196f797d545fd4df90e684f821f09303638d": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "d5a63277c40ca767f289d26fe53f593bbd718138": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "d1d93273189d671a03bd44a36f99b7fce24cd4b6": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "b56036b70bf88c113aaddee1ae890e57e8ce9f5b": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "23e5de1e125da5cefddb515f7e9b80a1ccbb903d": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "71f5ef7b4d8c02fefa37e85ffb204c78146d8e13": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "e72e5ae43dd7eef97cbedd92d340856baafbd35b": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "c155edd91967d81dc5e81dc4ebdda84a7c976970": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "124a6a9824f5bb9a156f94efdf0d9efc934f3e57": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "734d713880dd1de8d90f2988b1624395f69953d9": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "22c12cd8c30a38dea24dfcaec38eca062a93167c": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "50e47980b3379940fbc3aecfcffb736acdf1688b": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "98d6521b678b67bc4b6b664bbaa24e23d7517051": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "fc68339530e5ffde578fde3e95927bcc23932315": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "0964b4dc509197e104ce92b414b7e80ec47a6ad3": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "55bedc7fe8721cb0e58772b3ae6f2dd892136eaa": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "5d34ab88b3669c0d3d8b23911a80f620b73ec1a9", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "4f890478f9578b2e4c95806e20b36fb17422ccd1", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1ce2171561cb7d10a6ff1fb09e85295ebba0d889", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "8dfe6b54b45faffaefe1f4a61c3473572fc364cd", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "7461eb3d0660a012b814f6dccc3550ec4a8316db", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "63db4f9f4fce1d9d8311a110c0d462184baeb010", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "01d080d1cef3232be6e930814b4352eb9b79dc11", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "2db85168f65b904f9bada6883b393d5f176377e1", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b3253c0cfa384b5092884704c7323006f36a0456", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "bc5cc6c4327908d08ec8aab21d03412f7a7714eb", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f80832061d4697bfe81883f9053e8f7da5641f9b", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "6698196f797d545fd4df90e684f821f09303638d", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d5a63277c40ca767f289d26fe53f593bbd718138", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d1d93273189d671a03bd44a36f99b7fce24cd4b6", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b56036b70bf88c113aaddee1ae890e57e8ce9f5b", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "23e5de1e125da5cefddb515f7e9b80a1ccbb903d", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "71f5ef7b4d8c02fefa37e85ffb204c78146d8e13", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "e72e5ae43dd7eef97cbedd92d340856baafbd35b", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c155edd91967d81dc5e81dc4ebdda84a7c976970", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "124a6a9824f5bb9a156f94efdf0d9efc934f3e57", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "734d713880dd1de8d90f2988b1624395f69953d9", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "22c12cd8c30a38dea24dfcaec38eca062a93167c", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "50e47980b3379940fbc3aecfcffb736acdf1688b", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "98d6521b678b67bc4b6b664bbaa24e23d7517051", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "fc68339530e5ffde578fde3e95927bcc23932315", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0964b4dc509197e104ce92b414b7e80ec47a6ad3", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "55bedc7fe8721cb0e58772b3ae6f2dd892136eaa", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 27, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "A/libc: Fatal signal 11 (SIGSEGV), code 1, fault addr 0x290... while deleting object from Realm.", "body": "I have A/libc: Fatal signal 11 (SIGSEGV), code 1, fault addr 0x290 in tid 18295 (app) while deleting object from RealmList in RecyclerView. It doesn't matter if I do this async or not.\n", "url": "https://github.com/realm/realm-java/issues/1982", "user": "MateuszGajowski", "labels": ["T-Bug"], "created": "2015-12-21 23:47:29", "closed": "2016-01-18 10:51:16", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "Snapshots: Source Packaging", "body": "Since Oct 29 v0.84.2 snapshot release, the source package is no longer part of the snapshot release process. It would be great if this condition can be reverted if not actually intended.  \n", "url": "https://github.com/realm/realm-java/issues/1971", "user": "diegomontoya", "labels": ["T-Bug"], "created": "2015-12-20 14:00:28", "closed": "2016-01-08 16:28:16", "commits": {}, "ttf": 19.00027777777778, "commitsDetails": []}, {"title": "ConcurrentModificationException while making notification", "body": "Hi,\ni'm geting exception when running below code:\n\n<pre><code>public static void makeMutableWorkoutCopy(Realm realm, final long workoutId) {\n        realm.beginTransaction();\n            Workout workout = realm.where(Workout.class).equalTo(\"id\", workoutId).findFirst();\n\n            Workout copyWorkout = realm.copyFromRealm(workout);\n            copyWorkout.setId(IdentifierGenerator.getInstance().generateUniqueId(realm, Workout.class));\n            copyWorkout.setName(copyWorkout.getName() + \"*\");\n            copyWorkout.setSections(new RealmList<Section>());\n            copyWorkout.setImmutableWorkout(workout);\n\n            workout.setMutableWorkout(realm.copyToRealmOrUpdate(copyWorkout));\n        realm.commitTransaction();\n    }</code></pre>\n\nException:\n\n<pre><code>java.util.ConcurrentModificationException\nat java.util.IdentityHashMap$IdentityHashMapIterator.checkConcurrentMod(IdentityHashMap.java:164)\nat java.util.IdentityHashMap$IdentityHashMapIterator.next(IdentityHashMap.java:169)\nat io.realm.HandlerController.notifyRealmObjectCallbacks(HandlerController.java:254)\nat io.realm.HandlerController.notifyTypeBasedListeners(HandlerController.java:207)\nat io.realm.BaseRealm.commitTransaction(BaseRealm.java:294)\nat io.realm.Realm.commitTransaction(Realm.java:108)\nat com.borg.forza.model.RealmUtils.makeMutableWorkoutCopy(RealmUtils.java:289)\n</code></pre>\n\n\nThe model of Workout.class looks like below:\n\n<pre><code>public class Workout extends RealmObject {\n\n    @Index      private long                    id;\n                private long                    backendId;\n                private int                     sync;\n\n    @PrimaryKey private String                  name;\n                private String                  description;\n    @Index      private String                  type;\n                private long                    duration;\n                private RealmList<Section>      sections;\n                private int                     access;\n                private Workout                 mutableWorkout;\n                private Workout                 immutableWorkout;\n    }</code></pre>\n\nI am using 0.87.0-SNAPSHOT.\nThanks!\n", "url": "https://github.com/realm/realm-java/issues/1970", "user": "lukcz", "labels": ["T-Bug"], "created": "2015-12-19 13:16:05", "closed": "2016-01-07 16:35:21", "commits": {"a6fdf1179ee7228a281b3e35925b7bdb7cfb38f0": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "64067c25be9198c578f6b22cc76c679e39256a77": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "d8a08a659e2b5a1bdf36e88fbc1cca2968461c65": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "23bc3f1435abfe6b20e3d1dba75b944ddb5c1f26": {"commitGHEventType": "closed", "commitUser": "beeender"}}, "ttf": 19.00027777777778, "commitsDetails": [{"commitHash": "a6fdf1179ee7228a281b3e35925b7bdb7cfb38f0", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "64067c25be9198c578f6b22cc76c679e39256a77", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d8a08a659e2b5a1bdf36e88fbc1cca2968461c65", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "23bc3f1435abfe6b20e3d1dba75b944ddb5c1f26", "commitGHEventType": "closed", "commitUser": "beeender", "commitParents": ["2f0fba4982495a4858054af48977a0080ac53127"], "nameRev": "23bc3f1435abfe6b20e3d1dba75b944ddb5c1f26 tags/v0.87.2~5^2", "commitMessage": "Fix ConcurrentModificationException in listeners\n\n * It should be legal to modify realmObjects map in listener.\n * It should be legal to modify syncRealmResults/asyncRealmResults map\n   in listener.\n\nClose #1970\n", "commitDateTime": "2016-01-07 16:42:53", "authoredDateTime": "2016-01-04 18:52:38", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/TypeBasedNotificationsTest.java", "insertions": 91, "deletions": 0, "lines": 91}, {"filePath": "realm/realm-library/src/main/java/io/realm/HandlerController.java", "insertions": 15, "deletions": 3, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TypeBasedNotificationsTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.TypeBasedNotificationsTest.test_change_realm_objects_map_in_listener()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.TypeBasedNotificationsTest.test_change_realm_results_map_in_listener()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HandlerController.java", "spoonMethods": [{"spoonMethodName": "io.realm.HandlerController.notifyRealmResultsCallbacks(java.util.Iterator)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.HandlerController.notifyRealmObjectCallbacks()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["23bc3f1435abfe6b20e3d1dba75b944ddb5c1f26"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 15.0, "deletions": 3.0, "lines": 18.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8.0, "UPD": 0.0, "INS": 6.0, "MOV": 2.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-library/src/main/java/io/realm"], "changesInPackagesSPOON": ["io.realm.HandlerController.notifyRealmResultsCallbacks(java.util.Iterator)", "io.realm.HandlerController.notifyRealmObjectCallbacks()"]}, {"title": "[0.87.0] Realm should detect latest version", "body": "It's not a major bug, but ...\n\nI'm using Realm 0.87.0 and every each compilation I got this message: (since 0.86.1)\nNote: Version 0.86.0 of Realm is now available: http://static.realm.io/downloads/java/latest\n", "url": "https://github.com/realm/realm-java/issues/1966", "user": "fernandodev", "labels": ["T-Bug"], "created": "2015-12-18 13:43:42", "closed": "2016-01-28 17:43:41", "commits": {}, "ttf": 41.000277777777775, "commitsDetails": []}, {"title": "Async subqueries returns the wrong results", "body": "It looks like an async subquery uses the original Table instead of the TableView to filter queries, which result in the async query returning the wrong result.\n\nUnit test exposing it: https://github.com/realm/realm-java/commit/20293bcfb4585208cf54cfe4d2dcc99f4c9f3f5c\n\n```\n// Subquery will search all Foo objects, not just those in `foos`\nRealmResults<Foo> foos = realm.where(Foo.class).findAll();\nRealmResults<Foo> subQueryFoos = foos.where().equalTo(\"field\", value).findAllAsync();\n```\n\n/cc @nhachicha \n", "url": "https://github.com/realm/realm-java/issues/1964", "user": "cmelchior", "labels": ["Blocked", "T-Bug"], "created": "2015-12-18 10:25:52", "closed": "2015-12-23 17:36:04", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Detect invalid RealmResults", "body": "The following code might lead to a native crash:\n\n```\nrealm.beginTransaction();\nRealmResults<Owner> owners = realm.allObjects(Owner.class);\nRealmResults<Dog> dogs = owners.first().where().equalTo(\"dogs.name\", \"Fido\").findAll();\nowners.clear();\nlong nDogs = dogs.size(); // crash here\nrealm.commitTransaction();\n```\n\nThe reason is that Realm's storage engine doesn't invalidate `dogs` after `owners.clear()`. Once it does, an exception should be thrown at `dogs.size()`.\n\nSee also https://github.com/realm/realm-core/issues/1413\n", "url": "https://github.com/realm/realm-java/issues/1945", "user": "kneth", "labels": ["T-Bug"], "created": "2015-12-16 14:11:53", "closed": "2016-01-25 10:21:57", "commits": {"9cce188a65fd70177c1b6ad954df1ac28ef2c39b": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "25d19efd1f1a9fed3080a5456f28a648158b06d9": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "a14e4c015d29948aeb5f08c8ed6267ec95021e0d": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "26cbce87c710bf2f0ebd0f73d2593ece98b3ad7e": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "dac387b8642a7719ae0894eef15a16e3112032b4": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 39.000277777777775, "commitsDetails": [{"commitHash": "9cce188a65fd70177c1b6ad954df1ac28ef2c39b", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "25d19efd1f1a9fed3080a5456f28a648158b06d9", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a14e4c015d29948aeb5f08c8ed6267ec95021e0d", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "26cbce87c710bf2f0ebd0f73d2593ece98b3ad7e", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "dac387b8642a7719ae0894eef15a16e3112032b4", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["83cf55c45f6bd36f5b98efd2579504daf327bcfc"], "nameRev": "dac387b8642a7719ae0894eef15a16e3112032b4 tags/v0.87.3~2^2", "commitMessage": "Access to RealmResults based on deleted RealmList\n\n* When the original RealmList is deleted, for most methods of\n  RealmResults should just work without crash by just treat it like an\n  empty RealmResults.\n* RealmResults.where() throws IllegalStateExecption in this case.\n* RealmResults.isValid() returns false in this case.\n\nThis is a temp fix, check https://github.com/realm/realm-core/pull/1434\nfor more details.\n\nClose #1945\n", "commitDateTime": "2016-01-25 15:12:30", "authoredDateTime": "2016-01-21 16:45:14", "commitGitStats": [{"filePath": "realm/realm-jni/src/io_realm_internal_Util.cpp", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "realm/realm-jni/src/io_realm_internal_tableview.cpp", "insertions": 43, "deletions": 19, "lines": 62}, {"filePath": "realm/realm-jni/src/util.cpp", "insertions": 12, "deletions": 3, "lines": 15}, {"filePath": "realm/realm-jni/src/util.hpp", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmResultsTest.java", "insertions": 99, "deletions": 3, "lines": 102}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/TypeBasedNotificationsTest.java", "insertions": 56, "deletions": 3, "lines": 59}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/entities/Dog.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmResults.java", "insertions": 51, "deletions": 3, "lines": 54}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/DeletedRealmListException.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/Util.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmResultsTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmResultsTest.testMinValueForAllNullRows()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmResultsTest.populateRealmResultsOnDeletedLinkView()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmResultsTest.testisValidResultsBuiltOnDeletedLinkView()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmResultsTest.testSizeResultsBuiltOnDeletedLinkView()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmResultsTest.testFirstResultsBuiltOnDeletedLinkView()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmResultsTest.testLastResultsBuiltOnDeletedLinkView()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmResultsTest.testSumResultsBuiltOnDeletedLinkView()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmResultsTest.testAverageResultsBuiltOnDeletedLinkView()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmResultsTest.testClearResultsBuiltOnDeletedLinkView()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmResultsTest.testMaxResultsBuiltOnDeletedLinkView()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmResultsTest.testMaxDateResultsBuiltOnDeletedLinkView()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmResultsTest.testMinResultsBuiltOnDeletedLinkView()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmResultsTest.testMinDateResultsBuiltOnDeletedLinkView()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmResultsTest.testWhereResultsBuiltOnDeletedLinkView()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeBasedNotificationsTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.TypeBasedNotificationsTest.test_changeListener_onResultsBuiltOnDeletedLinkView()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Dog.java", "spoonMethods": [{"spoonMethodName": "io.realm.entities.Dog", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmResults.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmResults.isValid()", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.RealmResults", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmResults.syncToCheckIfValid(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmResults.where()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmResults.notifyChangeListeners()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "DeletedRealmListException.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.DeletedRealmListException", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Util.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.Util.Testcase", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dac387b8642a7719ae0894eef15a16e3112032b4"], "filteredCommitsReason": {"duplicated": 4, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 143.0, "deletions": 28.0, "lines": 171.0, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 21.0, "UPD": 1.0, "INS": 15.0, "MOV": 4.0, "DEL": 1.0, "spoonFilesChanged": 4, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-library/src/main/java/io/realm/internal", "realm/realm-jni/src/io_realm_internal_Util.cpp", "realm/realm-jni/src/util.cpp", "realm/realm-jni/src/util.hpp", "realm/realm-library/src/main/java/io/realm", "realm/realm-jni/src/io_realm_internal_tableview.cpp"], "changesInPackagesSPOON": ["io.realm.RealmResults.where()", "io.realm.RealmResults.isValid()", "io.realm.RealmResults", "io.realm.RealmResults.syncToCheckIfValid(java.lang.String)", "io.realm.internal.Util.Testcase", "io.realm.internal.DeletedRealmListException", "io.realm.entities.Dog", "io.realm.RealmResults.notifyChangeListeners()"]}, {"title": "Realm is probably triggering off a lot of blocking GCs", "body": "I am seeing a lot of explicitly triggered blocking GCs in Logcat in my app when inserting new items to the database. \n\n```\n12-10 11:33:25.874 7555-7555/com.tattva.app I/art: Starting a blocking GC Explicit\n12-10 11:33:25.955 7555-7561/com.tattva.app W/art: Suspending all threads took: 47.502ms\n12-10 11:33:25.961 7555-7555/com.tattva.app I/art: Explicit concurrent mark sweep GC freed 54692(2MB) AllocSpace objects, 30(1512KB) LOS objects, 40% free, 18MB/30MB, paused 1.205ms total 79.991ms\n```\n\nIs this normal? I can clearly see my app stuttering whenever they're triggered.\n\nBlocking GCs are incredibly bad. What's the reason for triggering them?\n", "url": "https://github.com/realm/realm-java/issues/1925", "user": "saket", "labels": ["T-Bug"], "created": "2015-12-10 06:08:19", "closed": "2016-01-08 16:27:20", "commits": {"d432e4b29c12bcf451665150877b8372cde2f474": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "7bea264c12b05828ceae04259605a1b28c25f109": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 29.00027777777778, "commitsDetails": [{"commitHash": "d432e4b29c12bcf451665150877b8372cde2f474", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "7bea264c12b05828ceae04259605a1b28c25f109", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "setObject and getObject not working as expected in Migration", "body": "In my migration I create a new field (which has the same field as an old field, therefore with the \"_tmp\" field) and I want to put in set on the new object a field that was before on the old object.\n\nI think some example code is clearer:\n\n```\nschema.get(\"Test\")\n    .addRealmObjectField(\"field_tmp\", newSchema)\n    .transform(new RealmObjectSchema.Function() {\n        @Override\n        public void apply(DynamicRealmObject object) {\n            DynamicRealmObject newInstance = realm.createObject(\"NewObject\");\n            newInstance.setObject(\"user\", object.getObject(\"user\"));\n            object.setObject(\"field_tmp\", newInstance);\n        }\n    })\n    .removeField(\"user\")\n    .removeField(\"field\")\n    .renameField(\"field_tmp\", \"field\");\n```\n\nWhen I try to execute that in my migration I get the following error:\n\n```\njava.lang.IllegalArgumentException: Type of object is wrong. Was class_Test, expected class_NewObject\n```\n\nCan you help me with that?\n", "url": "https://github.com/realm/realm-java/issues/1912", "user": "ghost", "labels": ["T-Bug"], "created": "2015-12-08 18:42:45", "closed": "2015-12-09 10:29:10", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "findFirst() of RealmQuery which is created from RealmResults returns wrong result", "body": "`RealmQuery` created from `RealmResult` must targets only objects in the `RealmResults`.\n\nBut in current implementation, `findFirst()` of that `RealmQuery` targets all objects of target Class.\n\nreported by @ytRino\n", "url": "https://github.com/realm/realm-java/issues/1905", "user": "zaki50", "labels": ["T-Bug"], "created": "2015-12-08 10:31:15", "closed": "2015-12-08 12:09:27", "commits": {"1aac11659124ec71fb9f4274dc8c654aedcc8d82": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "310e5cbbee44b233f29a258b14552fdd12df7be7": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "60c9337cb74cb6cedf0a3a9de8f0cf96258814de": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "72b09ea912927b2f5fdef87b42940bb8c05ff27b": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "cb82960a4209a7c8cf4aa656b6f779fe6c5b29c9": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "1aac11659124ec71fb9f4274dc8c654aedcc8d82", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "310e5cbbee44b233f29a258b14552fdd12df7be7", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "60c9337cb74cb6cedf0a3a9de8f0cf96258814de", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "72b09ea912927b2f5fdef87b42940bb8c05ff27b", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["3fe830e6acc312d9fc79ebba4bc3351d9a01324e"], "nameRev": "72b09ea912927b2f5fdef87b42940bb8c05ff27b tags/v0.86.1~11^2", "commitMessage": "fixed a bug where RealmQuery.findFirst() returned a wrong result if the RealmQuery had been created from RealmResults.where() (#1905).\n", "commitDateTime": "2015-12-08 20:42:05", "authoredDateTime": "2015-12-08 20:17:32", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmQueryTest.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmQuery.java", "insertions": 21, "deletions": 7, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmQueryTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmQueryTest.testResultOfTableViewQuery()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmQuery.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmQuery", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.RealmQuery.findFirst()", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.RealmQuery.isValid()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmQuery.getSourceRowIndexForFirstObject()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "cb82960a4209a7c8cf4aa656b6f779fe6c5b29c9", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["13c4e05cd6bee09eeafc9669b51dc05ecfa392a4"], "nameRev": "cb82960a4209a7c8cf4aa656b6f779fe6c5b29c9 tags/v0.87.0~18^2", "commitMessage": "fixed a bug where RealmQuery.findFirst() returned a wrong result if the RealmQuery had been created from RealmResults.where() (#1905).\n", "commitDateTime": "2015-12-08 20:49:20", "authoredDateTime": "2015-12-08 20:17:32", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmQueryTest.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmQuery.java", "insertions": 21, "deletions": 7, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmQueryTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmQueryTest.testResultOfTableViewQuery()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmQuery.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmQuery", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.RealmQuery.findFirst()", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.RealmQuery.isValid()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmQuery.getSourceRowIndexForFirstObject()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["72b09ea912927b2f5fdef87b42940bb8c05ff27b"], "filteredCommitsReason": {"duplicated": 4, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 21.0, "deletions": 7.0, "lines": 28.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 13.0, "UPD": 3.0, "INS": 5.0, "MOV": 3.0, "DEL": 2.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-library/src/main/java/io/realm"], "changesInPackagesSPOON": ["io.realm.RealmQuery.isValid()", "io.realm.RealmQuery.getSourceRowIndexForFirstObject()", "io.realm.RealmQuery", "io.realm.RealmQuery.findFirst()"]}, {"title": "RealmChangeListener never called inside RealmResults", "body": "Hi, i use realm for a lot of time but today i want to try use new feature called \"Async query\".  I would be grateful for tell me what I'm doing wrong.\n\nrealm version:     compile 'io.realm:realm-android:0.86.0'\nempty main activity snippet:\n\n```\n @Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.main_activity);\n    RealmResults< MyRealmObject> realmResults = Realm.getInstance(this).where(MyRealmObject.class).findAllAsync();\n    realmResults.addChangeListener(new RealmChangeListener() {\n        @Override\n        public void onChange() {\n            System.out.println(\"Never called...\");\n        }\n    });\n```\n\n}\n\nIf i attached debbuger it stay on notifyChangeListeners and listener is not called because \"this.currentTableViewVersion != version\". RealmQuery is loaded because after few moment i have acces to data inside list.\n![realmresult](https://cloud.githubusercontent.com/assets/13273387/11601329/a0f1f7a8-9ad2-11e5-95f6-573076c58dfc.png)\n", "url": "https://github.com/realm/realm-java/issues/1894", "user": "mshusek", "labels": ["T-Bug"], "created": "2015-12-04 21:09:19", "closed": "2016-01-04 08:44:07", "commits": {}, "ttf": 30.00027777777778, "commitsDetails": []}, {"title": "onSuccess might not be called with the right Realm version for async transaction", "body": "Now the `onSuccess` relies on the `REALM_CHANGED` triggers the `advance_read` first. If it is running with a unfinished async query, the `REALM_CHANGED` might be swallowed by `updateAsyncQueries` and the Realm doesn't make a `andvance_read`.\n\nIn above case, the next message in the handler queue is to run `onSuccess`, but it the function will be called in a wrong earlier Realm version which the changes in the async transaction is not in.\n\n--------------------- Update Jan. 25th 2016 -------------------------\nhttp://stackoverflow.com/questions/34938152/callback-never-be-invoked-when-i-excute-a-asynchronous-transaction-with-realm\n\nSee above question on SO. We need to discuss of the user case of `onSuccess`. Currently if the Realm instance is closed, then the `onSuccess` won't be called depends on the timing. But it might not be what user expect.\n\nShall we just let `onSuccess` be delivered whenever the transaction is done, and document it clearly that in the `onSuccess`, the Realm might not be the latest version?\n", "url": "https://github.com/realm/realm-java/issues/1893", "user": "beeender", "labels": ["T-Bug"], "created": "2015-12-04 12:24:07", "closed": "2016-06-27 12:41:09", "commits": {"23056a907cb38596546deb3d408fbcee0c6a45fe": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "ed0a1efd1b5ade462079041e5f3a585930d30282": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "be989fe1142439d029f09f18eb1c6f9b7ae9aa1d": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "076ae293317dd3d2d0a1ee737f2ee7efc34b0d69": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "63f716f6963e3170cc66e1dcc28fa44ef74f475a": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}, "6c2e4d3bed7d99399bb97c0bfcb588c89fa5e498": {"commitGHEventType": "referenced", "commitUser": "dalinaum"}}, "ttf": 206.00027777777777, "commitsDetails": [{"commitHash": "23056a907cb38596546deb3d408fbcee0c6a45fe", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ed0a1efd1b5ade462079041e5f3a585930d30282", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "be989fe1142439d029f09f18eb1c6f9b7ae9aa1d", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "076ae293317dd3d2d0a1ee737f2ee7efc34b0d69", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "63f716f6963e3170cc66e1dcc28fa44ef74f475a", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "6c2e4d3bed7d99399bb97c0bfcb588c89fa5e498", "commitGHEventType": "referenced", "commitUser": "dalinaum", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 6, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "Realm 0.86.0 crashes when call clear()", "body": "I have updated Realm on my application from 0.85 to 0.86 and a crash occured at librealm_jni whenever I call clear. Below is my code which is working on 0.85.\n\n```\n        // remove the row if there is no downloaded document\n        RealmResults<IngListDesc> lessonsToBeRemoved = expired.where()\n                .equalTo(\"doc_downloaded\", false)\n                .findAll();\n\n        // remove children\n        mRealm.beginTransaction();\n        for (int i=0; i < lessonsToBeRemoved.size(); i++) {\n            RealmResults<IngDetailDesc> detailDescs =\n                    lessonsToBeRemoved.get(i).getLessons().where().findAll();\n            for (int j=0; j < detailDescs.size(); j++) {\n                detailDescs.get(j).getObjects().where().findAll().clear();\n            }\n            detailDescs.clear();\n        }\n        lessonsToBeRemoved.clear();\n        mRealm.commitTransaction();\n```\n", "url": "https://github.com/realm/realm-java/issues/1886", "user": "zard17", "labels": ["Blocked", "T-Bug"], "created": "2015-12-04 06:49:24", "closed": "2015-12-16 14:16:37", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "ChangeListener not triggered on newly created RealmObject", "body": "```\nrealm.beginTransaction();\nPerson p = realm.createObject(Person.class);\nrealm.commitTransaction();\n\np.addChangeListener(() -> { Log.i(\"Debug\", \"Hello\") });\n\nrealm.beginTransaction();\np.setAge(50);\nrealm.commitTransaction(); // Doesn't trigger change listener.\n```\n\nChangeListeners are correctly triggered on objects created using `RealmQuery.findFirst()` but not when using `Realm.createObject()`\n\nRealmQuery has the following code:\n\n```\nif (realm.handlerController != null) { // non Looper Thread doesn't have a handlerController\n    WeakReference<RealmObject> realmObjectWeakReference\n            = new WeakReference<RealmObject>(realmObject, realm.handlerController.referenceQueueRealmObject);\n    realm.handlerController.realmObjects.put(realmObjectWeakReference, this);\n}\n```\n\nWhich is not present in `addChangeListener` for `RealmObject`\n", "url": "https://github.com/realm/realm-java/issues/1884", "user": "cmelchior", "labels": ["T-Bug"], "created": "2015-12-04 06:35:21", "closed": "2015-12-17 11:28:00", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "signal 11 (SIGSEGV) on Realm 0.86.0", "body": "Getting SIGSEGV on emulators (VS Emulator) and devices repeatedly at the same place.\nWe clear out pretty much all our tables when logging out in one big cozy transaction, all other parts of the app and realm usage seems fine after updating to 0.86.0 and the api changes.\n\nVS Emulator:\n\n```\n12-04 01:38:36.042 9370-9370/our.package.name.here A/libc: Fatal signal 11 (SIGSEGV) at 0x0000024c (code=1), thread 9370 (ll.package.name)\n12-04 01:38:36.146 136-136/? I/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n12-04 01:38:36.146 136-136/? I/DEBUG: Build fingerprint: 'Android/full_donatello/donatello:4.4.4/KTU84P/eng.vsemu.20151113.122923:userdebug/test-keys'\n12-04 01:38:36.146 136-136/? I/DEBUG: Revision: '0'\n12-04 01:38:36.146 136-136/? I/DEBUG: pid: 9370, tid: 9370, name: ll.package.name  >>> our.package.name.here <<<\n12-04 01:38:36.146 136-136/? I/DEBUG: signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0000024c\n12-04 01:38:36.274 136-136/? I/DEBUG:     eax 00000000  ebx 9af28e34  ecx 00000006  edx 00000006\n12-04 01:38:36.274 136-136/? I/DEBUG:     esi b86d6e40  edi b86d6e40\n12-04 01:38:36.274 136-136/? I/DEBUG:     xcs 00000073  xds 0000007b  xes 0000007b  xfs 00000000  xss 0000007b\n12-04 01:38:36.274 136-136/? I/DEBUG:     eip 9ade1780  ebp bf84f6d8  esp bf84f6d0  flags 00210282\n12-04 01:38:36.274 136-136/? E/Corkscrew: unrecognized dwarf higher part encoding: 0x73\n12-04 01:38:36.274 136-136/? I/DEBUG:     #00  pc 00068780  /data/app-lib/our.package.name.here-2/librealm-jni.so\n12-04 01:38:36.274 136-136/? I/DEBUG:     #01  pc 000687a5  /data/app-lib/our.package.name.here-2/librealm-jni.so\n12-04 01:38:36.274 136-136/? I/DEBUG:          bf84f690  00000000  \n12-04 01:38:36.274 136-136/? I/DEBUG:          bf84f694  00000000  \n12-04 01:38:36.274 136-136/? I/DEBUG:          bf84f698  b848b3d0  [heap]\n12-04 01:38:36.274 136-136/? I/DEBUG:          bf84f69c  b86ed880  [heap]\n12-04 01:38:36.274 136-136/? I/DEBUG:          bf84f6a0  00000006  \n12-04 01:38:36.274 136-136/? I/DEBUG:          bf84f6a4  00000000  \n12-04 01:38:36.274 136-136/? I/DEBUG:          bf84f6a8  00000006  \n12-04 01:38:36.274 136-136/? I/DEBUG:          bf84f6ac  00000010  \n12-04 01:38:36.274 136-136/? I/DEBUG:          bf84f6b0  b86d6e40  [heap]\n12-04 01:38:36.274 136-136/? I/DEBUG:          bf84f6b4  b86d6e40  [heap]\n12-04 01:38:36.274 136-136/? I/DEBUG:          bf84f6b8  bf84f6d8  [stack]\n12-04 01:38:36.274 136-136/? I/DEBUG:          bf84f6bc  9ade176a  /data/app-lib/our.package.name.here-2/librealm-jni.so\n12-04 01:38:36.274 136-136/? I/DEBUG:          bf84f6c0  b86ed880  [heap]\n12-04 01:38:36.274 136-136/? I/DEBUG:          bf84f6c4  9af2740c  /data/app-lib/our.package.name.here-2/librealm-jni.so\n12-04 01:38:36.278 136-136/? I/DEBUG:          bf84f6c8  9af27400  /data/app-lib/our.package.name.here-2/librealm-jni.so\n12-04 01:38:36.278 136-136/? I/DEBUG:          bf84f6cc  00000000  \n12-04 01:38:36.278 136-136/? I/DEBUG:     #00  bf84f6d0  9af28e34  /data/app-lib/our.package.name.here-2/librealm-jni.so\n12-04 01:38:36.278 136-136/? I/DEBUG:          bf84f6d4  b86d6e40  [heap]\n12-04 01:38:36.278 136-136/? I/DEBUG:          bf84f6d8  bf84f6f8  [stack]\n12-04 01:38:36.278 136-136/? I/DEBUG:          bf84f6dc  9ade17a6  /data/app-lib/our.package.name.here-2/librealm-jni.so\n12-04 01:38:36.278 136-136/? I/DEBUG:          bf84f6e0  00000000  \n12-04 01:38:36.278 136-136/? I/DEBUG:          bf84f6e4  00000023  \n12-04 01:38:36.278 136-136/? I/DEBUG:          bf84f6e8  9ae73b65  /data/app-lib/our.package.name.here-2/librealm-jni.so\n12-04 01:38:36.278 136-136/? I/DEBUG:          bf84f6ec  9af28e34  /data/app-lib/our.package.name.here-2/librealm-jni.so\n12-04 01:38:36.278 136-136/? I/DEBUG:          bf84f6f0  a44d6b44  \n12-04 01:38:36.278 136-136/? I/DEBUG:          bf84f6f4  a44d6b44  \n12-04 01:38:36.278 136-136/? I/DEBUG:          bf84f6f8  bf84f758  [stack]\n12-04 01:38:36.278 136-136/? I/DEBUG:          bf84f6fc  9ae3e38e  /data/app-lib/our.package.name.here-2/librealm-jni.so\n12-04 01:38:36.278 136-136/? I/DEBUG:          bf84f700  b86d6e40  [heap]\n12-04 01:38:36.278 136-136/? I/DEBUG:          bf84f704  a44d6b44  \n12-04 01:38:36.278 136-136/? I/DEBUG:          bf84f708  bf84f758  [stack]\n12-04 01:38:36.278 136-136/? I/DEBUG:          bf84f70c  b4d46909  /system/lib/libdvm.so (mspace_malloc+25)\n```\n\nPhysical device (Samsung Note 3), first run after updating to Realm 0.86.0 in our login procedure, when creating a new Realm (or opening existing in this case) we open it directly in the background just to trigger migration.\n\n```\n12-04 01:44:05.134 21499-21499/our.package.name.here W/RealmFactory: Checking if realm session-3e7cc37f-a93a-46c6-8bc0-f23a9ae6b207.realm needs migration!\n12-04 01:44:05.322 21499-21499/our.package.name.here A/libc: Fatal signal 11 (SIGSEGV), code 1, fault addr 0x290 in tid 21499 (ll.package.name)\n12-04 01:44:05.323 299-299/? I/DEBUG: property debug.db.uid not set; NOT waiting for gdb.\n12-04 01:44:05.323 299-299/? I/DEBUG: HINT: adb shell setprop debug.db.uid 100000\n12-04 01:44:05.323 299-299/? I/DEBUG: HINT: adb forward tcp:5039 tcp:5039\n12-04 01:44:05.445 299-299/? I/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n12-04 01:44:05.445 299-299/? I/DEBUG: Build fingerprint: 'samsung/hltexx/hlte:4.4.2/KOT49H/N9005XXUENC2:user/release-keys'\n12-04 01:44:05.445 299-299/? I/DEBUG: Revision: '8'\n12-04 01:44:05.445 299-299/? I/DEBUG: ABI: 'arm'\n12-04 01:44:05.445 299-299/? I/DEBUG: pid: 21499, tid: 21499, name: ll.package.name  >>> our.package.name.here <<<\n12-04 01:44:05.445 299-299/? I/DEBUG: signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x290\n12-04 01:44:05.461 299-299/? I/DEBUG:     r0 67a5bbe0  r1 77f18c74  r2 00000006  r3 00000290\n12-04 01:44:05.461 299-299/? I/DEBUG:     r4 68e54580  r5 00000000  r6 68e54580  r7 12d4e700\n12-04 01:44:05.461 299-299/? I/DEBUG:     r8 74f40f28  r9 b5184400  sl 00000001  fp 133e7740\n12-04 01:44:05.461 299-299/? I/DEBUG:     ip bed5ecd4  sp bed5ed08  lr 77ed5ae1  pc 77e558f8  cpsr 60000030\n12-04 01:44:05.462 299-299/? I/DEBUG:     #00 pc 000498f8  /data/app/our.package.name.here-1/lib/arm/librealm-jni.so\n```\n\nSimilar / same crash when logging out (Samsung Note 3);\n\n```\n12-04 01:44:57.081 22335-22335/our.package.name.here A/libc: Fatal signal 11 (SIGSEGV), code 1, fault addr 0x290 in tid 22335 (ll.package.name)\n12-04 01:44:57.081 299-299/? I/DEBUG: property debug.db.uid not set; NOT waiting for gdb.\n12-04 01:44:57.081 299-299/? I/DEBUG: HINT: adb shell setprop debug.db.uid 100000\n12-04 01:44:57.081 299-299/? I/DEBUG: HINT: adb forward tcp:5039 tcp:5039\n12-04 01:44:57.163 299-299/? I/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n12-04 01:44:57.163 299-299/? I/DEBUG: Build fingerprint: 'samsung/hltexx/hlte:4.4.2/KOT49H/N9005XXUENC2:user/release-keys'\n12-04 01:44:57.163 299-299/? I/DEBUG: Revision: '8'\n12-04 01:44:57.163 299-299/? I/DEBUG: ABI: 'arm'\n12-04 01:44:57.163 299-299/? I/DEBUG: pid: 22335, tid: 22335, name: ll.package.name  >>> our.package.name.here <<<\n12-04 01:44:57.163 299-299/? I/DEBUG: signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x290\n12-04 01:44:57.175 299-299/? I/DEBUG:     r0 63f67800  r1 68e75c74  r2 00000006  r3 00000290\n12-04 01:44:57.176 299-299/? I/DEBUG:     r4 668481c0  r5 00000000  r6 668481c0  r7 133d5f80\n12-04 01:44:57.176 299-299/? I/DEBUG:     r8 74f16e98  r9 b5184400  sl 00000001  fp 12c71740\n12-04 01:44:57.176 299-299/? I/DEBUG:     ip bed5eb14  sp bed5eb48  lr 68e32ae1  pc 68db28f8  cpsr 600f0030\n12-04 01:44:57.176 299-299/? I/DEBUG:     #00 pc 000498f8  /data/app/our.package.name.here-1/lib/arm/librealm-jni.so\n```\n", "url": "https://github.com/realm/realm-java/issues/1882", "user": "Flydiverny", "labels": ["T-Bug"], "created": "2015-12-04 00:51:49", "closed": "2016-01-13 08:26:26", "commits": {}, "ttf": 40.000277777777775, "commitsDetails": []}, {"title": "Small issue in Readme: Wrong url for SNAPSHOT releases", "body": "Ahoy! The URL for SNAPSHOT releases in the readme file is stale. It points to:\n\n```\nclasspath \"io.realm:gradle-plugin:<version>-SNAPSHOT\"\n```\n\nBut the actual URL is:\n\n```\nclasspath \"io.realm:realm-android:<version>-SNAPSHOT\"\n```\n", "url": "https://github.com/realm/realm-java/issues/1881", "user": "saket", "labels": ["T-Bug", "T-Doc"], "created": "2015-12-03 19:56:27", "closed": "2015-12-04 08:08:30", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Fix flaky unit tests", "body": "```\nio.realm.RealmAsyncQueryTests > testFindFirstAsync[Nexus 9 - 5.0.1] \u001b[31mFAILED \u001b[0m\n    junit.framework.AssertionFailedError\n    at io.realm.TestHelper.awaitOrFail(TestHelper.java:646)\n\nio.realm.RealmTest > testInternalRealmChangedHandlersRemoved[Nexus 9 - 5.0.1] \u001b[31mFAILED \u001b[0m\n    junit.framework.AssertionFailedError: expected:<1> but was:<2>\n    at io.realm.RealmTest.testInternalRealmChangedHandlersRemoved(RealmTest.java:190)\n```\n", "url": "https://github.com/realm/realm-java/issues/1880", "user": "cmelchior", "labels": ["T-Bug"], "created": "2015-12-03 12:31:20", "closed": "2015-12-17 10:31:50", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "UnsupportedOperationException in RealmBaseAdapter", "body": "I get such exception after I guess last change regarding notifications (0.86.0-SNAPSHOT):\n\n`Caused by: java.lang.UnsupportedOperationException`\n`at java.util.concurrent.CopyOnWriteArrayList$CowIterator.remove(CopyOnWriteArrayList.java:744)`\n`at io.realm.HandlerController.addChangeListenerAsWeakReference(HandlerController.java:145)`\n`at io.realm.RealmBaseAdapter.<init>(RealmBaseAdapter.java:56)`\n`at com.borg.forza.adapters.RealmModelAdapter.<init>(RealmModelAdapter.java:0)`\n\nSeems like CopyOnWriteArrayList iterator does not support remove operation.\n", "url": "https://github.com/realm/realm-java/issues/1875", "user": "lukcz", "labels": ["T-Bug"], "created": "2015-12-03 00:16:05", "closed": "2015-12-03 12:11:29", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Null values are wrongly counted in RealmQuery.average() method", "body": "average of `3`, `4`, `null` should be `(3 + 4) / 2 = 3.5`, but `RealmQuery.average()` returns `(3 + 4) / 3 = 2.3333....`.\n", "url": "https://github.com/realm/realm-java/issues/1854", "user": "zaki50", "labels": ["T-Bug"], "created": "2015-11-29 16:55:21", "closed": "2015-12-02 11:40:59", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Native crash in TableQuery.cpp line 1543", "body": "im currently using latest snapshot version. i also used latest release version but same error.\n\n```\nD/REALM\ufe55 REALM_CHANGED realm:io.realm.HandlerController@41f9e5a0 no async queries, advance_read\nD/REALM\ufe55 REALM_CHANGED realm:io.realm.HandlerController@41bc2690 updating async queries, total: 3\nD/REALM\ufe55 REALM_UPDATE_ASYNC_QUERIES realm:io.realm.HandlerController@41bc2690 caller is behind  advance_read\nD/REALM\ufe55 REALM_UPDATE_ASYNC_QUERIES realm:io.realm.HandlerController@41bc2690 updating RealmResults java.lang.ref.WeakReference@41bc9e88\nD/REALM\ufe55 jni: ThrowingException 11, std::exception in io_realm_internal_TableQuery.cpp line 1543, .\nD/REALM\ufe55 Exception has been throw: Unrecoverable error. std::exception in io_realm_internal_TableQuery.cpp line 1543\nD/AndroidRuntime\ufe55 Shutting down VM\nW/dalvikvm\ufe55 threadid=1: thread exiting with uncaught exception (group=0x4168ace0)\nW/System.err\ufe55 io.realm.exceptions.RealmError: Unrecoverable error. std::exception in io_realm_internal_TableQuery.cpp line 1543\nW/System.err\ufe55 at io.realm.internal.TableQuery.nativeImportHandoverTableViewIntoSharedGroup(Native Method)\nW/System.err\ufe55 at io.realm.internal.TableQuery.importHandoverTableView(TableQuery.java:508)\nW/System.err\ufe55 at io.realm.RealmResults.swapTableViewPointer(RealmResults.java:708)\nW/System.err\ufe55 at io.realm.HandlerController.completedAsyncQueriesUpdate(HandlerController.java:222)\nW/System.err\ufe55 at io.realm.HandlerController.handleMessage(HandlerController.java:312)\nW/System.err\ufe55 at android.os.Handler.dispatchMessage(Handler.java:98)\nW/System.err\ufe55 at android.os.Looper.loop(Looper.java:136)\nW/System.err\ufe55 at android.app.ActivityThread.main(ActivityThread.java:5158)\nW/System.err\ufe55 at java.lang.reflect.Method.invokeNative(Native Method)\nW/System.err\ufe55 at java.lang.reflect.Method.invoke(Method.java:515)\nW/System.err\ufe55 at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:732)\nW/System.err\ufe55 at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:566)\nW/System.err\ufe55 at dalvik.system.NativeStart.main(Native Method)\n```\n\nall 3 asyncQueries are active and listening for changes and i also call `results.removeChangeListeners()` properly when closing fragments\n", "url": "https://github.com/realm/realm-java/issues/1851", "user": "ByteAge", "labels": ["T-Bug"], "created": "2015-11-28 11:40:06", "closed": "2015-12-10 19:42:08", "commits": {"e7eac76468842a469b0baf917c3d6e629afe99a1": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "acde85e44ed3bf4d0bf5216f01b94f62f63c3a7a": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "e7eac76468842a469b0baf917c3d6e629afe99a1", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "acde85e44ed3bf4d0bf5216f01b94f62f63c3a7a", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": ["cf90ce688742d406fdcd8a41931643778107e8e0"], "nameRev": "acde85e44ed3bf4d0bf5216f01b94f62f63c3a7a tags/v0.86.1~5^2", "commitMessage": "add batch update for async queries to fix #1851\n", "commitDateTime": "2015-12-10 14:52:31", "authoredDateTime": "2015-12-10 14:52:31", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-jni/src/io_realm_internal_TableQuery.cpp", "insertions": 267, "deletions": 127, "lines": 394}, {"filePath": "realm/realm-jni/src/io_realm_internal_TableQuery.h", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "realm/realm-jni/src/util.cpp", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmAsyncQueryTests.java", "insertions": 172, "deletions": 0, "lines": 172}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmQuery.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/TableQuery.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/async/QueryUpdateTask.java", "insertions": 73, "deletions": 66, "lines": 139}, {"filePath": "version.txt", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmAsyncQueryTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmAsyncQueryTests.testBatchUpdateDifferentTypeOfQueries()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmQuery.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmQuery.distinctAsync(long).1.call()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmQuery.findAllAsync().2.call()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmQuery.findAllSortedAsync(java.lang.String,io.realm.Sort).3.call()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmQuery.findFirstAsync().5.call()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmQuery.findAllSortedAsync(java.lang.String[],io.realm.Sort[]).4.call()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TableQuery.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.TableQuery.nativeBatchUpdateQueries(long,long,long[],long[][],long[][],boolean[][])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueryUpdateTask.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.async.QueryUpdateTask.updateRealmResultsQueries(io.realm.internal.SharedGroup,io.realm.internal.async.QueryUpdateTask$Result)", "TOT": 46, "UPD": 3, "INS": 0, "MOV": 28, "DEL": 15}, {"spoonMethodName": "io.realm.internal.async.QueryUpdateTask.run()", "TOT": 9, "UPD": 0, "INS": 5, "MOV": 2, "DEL": 2}, {"spoonMethodName": "io.realm.internal.async.QueryUpdateTask.prepareQueriesParameters()", "TOT": 21, "UPD": 0, "INS": 21, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.async.QueryUpdateTask.swapPointers(io.realm.internal.async.QueryUpdateTask$Result,long[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.async.QueryUpdateTask.AlignedQueriesParameters", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["acde85e44ed3bf4d0bf5216f01b94f62f63c3a7a"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 357.0, "deletions": 199.0, "lines": 556.0, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 84.0, "UPD": 3.0, "INS": 34.0, "MOV": 30.0, "DEL": 17.0, "spoonFilesChanged": 3, "spoonMethodsChanged": 11}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-library/src/main/java/io/realm", "realm/realm-jni/src/io_realm_internal_TableQuery.h", "realm/realm-library/src/main/java/io/realm/internal/async", "realm/realm-library/src/main/java/io/realm/internal", "realm/realm-jni/src/io_realm_internal_TableQuery.cpp", "realm/realm-jni/src/util.cpp"], "changesInPackagesSPOON": ["io.realm.RealmQuery.findAllSortedAsync(java.lang.String[],io.realm.Sort[]).4.call()", "io.realm.RealmQuery.findAllSortedAsync(java.lang.String,io.realm.Sort).3.call()", "io.realm.internal.TableQuery.nativeBatchUpdateQueries(long,long,long[],long[][],long[][],boolean[][])", "io.realm.internal.async.QueryUpdateTask.run()", "io.realm.internal.async.QueryUpdateTask.updateRealmResultsQueries(io.realm.internal.SharedGroup,io.realm.internal.async.QueryUpdateTask$Result)", "io.realm.RealmQuery.distinctAsync(long).1.call()", "io.realm.internal.async.QueryUpdateTask.prepareQueriesParameters()", "io.realm.internal.async.QueryUpdateTask.swapPointers(io.realm.internal.async.QueryUpdateTask$Result,long[])", "io.realm.RealmQuery.findAllAsync().2.call()", "io.realm.internal.async.QueryUpdateTask.AlignedQueriesParameters", "io.realm.RealmQuery.findFirstAsync().5.call()"]}, {"title": "Re-enable migration unit test", "body": "Re-enable this unit test once https://github.com/realm/realm-core/pull/1267 has been resolved.\nhttps://github.com/realm/realm-java/pull/1496/files#diff-a1183a67c2d3874da2a022a68ada7088R136\n", "url": "https://github.com/realm/realm-java/issues/1829", "user": "cmelchior", "labels": ["T-Bug"], "created": "2015-11-25 11:49:02", "closed": "2016-01-26 09:49:52", "commits": {}, "ttf": 61.000277777777775, "commitsDetails": []}, {"title": "realm-0.85.1.jar is missing", "body": "Jar file for eclipse installation is missing from 0.85.1 release.\n\nhttps://static.realm.io/downloads/java/realm-java-0.85.1.zip\n\n![image](https://cloud.githubusercontent.com/assets/71561/11389076/ae86e194-937f-11e5-9082-f49a78021a2b.png)\n", "url": "https://github.com/realm/realm-java/issues/1822", "user": "skyisle", "labels": ["T-Bug"], "created": "2015-11-25 05:20:40", "closed": "2015-11-25 08:25:17", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "average returns wrong value for nullable field", "body": "Reported by @dev75py on twitter. https://twitter.com/dev75py/status/667469537986527232\n\nOn 0.85.0, `RealmQuery.average()` returns wrong value for nullable field.\n\n```\n    public void testAverage() {\n        final NullTypes obj1 = new NullTypes();\n        obj1.setId(1);\n        obj1.setFieldIntegerNotNull(3);\n        obj1.setFieldIntegerNull(3);\n\n        final NullTypes obj2 = new NullTypes();\n        obj2.setId(2);\n        obj2.setFieldIntegerNotNull(4);\n        obj2.setFieldIntegerNull(4);\n\n        testRealm.beginTransaction();\n        testRealm.where(NullTypes.class).findAll().clear();\n        testRealm.copyToRealm(obj1);\n        testRealm.copyToRealm(obj2);\n        testRealm.commitTransaction();\n\n        assertEquals(3.5, testRealm.where(NullTypes.class).average(NullTypes.FIELD_INTEGER_NOT_NULL));\n        assertEquals(3.5, testRealm.where(NullTypes.class).average(NullTypes.FIELD_INTEGER_NULL));\n    }\n```\n\nThe last assertion fails with actual value `9.0`.\n", "url": "https://github.com/realm/realm-java/issues/1803", "user": "zaki50", "labels": ["T-Bug"], "created": "2015-11-20 00:40:06", "closed": "2015-12-17 11:00:53", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "RealmConfiguration.getSchemaMediator is public ", "body": "It seems we by mistake left `RealmConfiguration.getSchemaMediator` public.\nWe should revert that to package private.\n\nThat said, there might still be use-cases where people want to know the classes part of the RealmConfiguration, so we should expose something like\n\n```\n// Not sure what is best?\nRealmConfiguration.getClasses()\nRealmConfiguration.getSchemaClasses()\nRealmConfiguration.getRealmClasses()\n```\n\nOne example of use case here: \nhttps://github.com/realm/realm-java/issues/1796\n", "url": "https://github.com/realm/realm-java/issues/1797", "user": "cmelchior", "labels": ["T-Bug"], "created": "2015-11-18 16:14:08", "closed": "2015-11-27 06:42:51", "commits": {"70796a4667e223c3bae2c4fa37e8a3d81cc4144d": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "70796a4667e223c3bae2c4fa37e8a3d81cc4144d", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["45293d51962cb919272929a0801dcbb0796c6ce8", "721d91729c891bddc674ddade3754171a8604dc0"], "nameRev": "70796a4667e223c3bae2c4fa37e8a3d81cc4144d tags/v0.88.0~36", "commitMessage": "Merge pull request #2332 from realm/my/hide_getSchemaMediator\n\nremove RealmConfiguration.getSchemaMediator() from public API (#1797)", "commitDateTime": "2016-02-25 11:21:38", "authoredDateTime": "2016-02-25 11:21:38", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmConfiguration.java", "insertions": 1, "deletions": 4, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmConfiguration.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmConfiguration.getSchemaMediator()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "createOrUpdateObjectFromJson bugs with default value for primary key", "body": "example code:\n\n``` java\nJSONObject object = new JSONObject(\"{\\\"id\\\":1,\\\"bar1\\\":{\\\"id\\\":0,\\\"value\\\":3},\\\"bar2\\\":{\\\"id\\\":1,\\\"value\\\":2}}\");\n        realm.beginTransaction();\n        realm.createOrUpdateObjectFromJson(Foo.class, object);\n        realm.commitTransaction();\n```\n\n``` java\n//class Foo\npublic class Foo extends RealmObject {\n    @PrimaryKey\n    private long id;\n\n    private Bar bar1;\n    private Bar bar2;\n\n    public long getId() {\n        return id;\n    }\n\n    public void setId(long id) {\n        this.id = id;\n    }\n\n    public Bar getBar1() {\n        return bar1;\n    }\n\n    public void setBar1(Bar bar1) {\n        this.bar1 = bar1;\n    }\n\n    public Bar getBar2() {\n        return bar2;\n    }\n\n    public void setBar2(Bar bar2) {\n        this.bar2 = bar2;\n    }\n\n}\n```\n\n``` java\n//class Bar\npublic class Bar extends RealmObject {\n    @PrimaryKey\n    private int id;\n    private int value;\n\n    public int getValue() {\n        return value;\n    }\n\n    public void setValue(int value) {\n        this.value = value;\n    }\n\n    public int getId() {\n        return id;\n    }\n\n    public void setId(int id) {\n        this.id = id;\n    }\n}\n```\n\nThe problem is that when it begins to create bar2, it finds that no bar with id=2 exists, so it will create a default bar, but that will conflict with bar1, since bar1 has id 0 and default bar has id 0 too.\n", "url": "https://github.com/realm/realm-java/issues/1777", "user": "cgcgbcbc", "labels": ["T-Bug"], "created": "2015-11-15 11:08:18", "closed": "2015-11-26 14:48:25", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "Primary key not defined for field '_id' in existing Realm file. Add @PrimaryKey.", "body": "This is my RealmConfiguration\uff1a\nstableCongifuration = new RealmConfiguration.Builder(context).deleteRealmIfMigrationNeeded().name(\"stable.realm\").build();\n\nwhen id call Realm.getInstance(stableCongifuration); I got this exception:\n\n11-14 06:27:18.829 24386-24386/? E/AndroidRuntime:  Caused by: io.realm.exceptions.RealmMigrationNeededException: Primary key not defined for field '_id' in existing Realm file. Add @PrimaryKey.\n11-14 06:27:18.829 24386-24386/? E/AndroidRuntime:     at io.realm.JokeRealmProxy.validateTable(JokeRealmProxy.java:443)\n11-14 06:27:18.829 24386-24386/? E/AndroidRuntime:     at io.realm.DefaultRealmModuleMediator.validateTable(DefaultRealmModuleMediator.java:78)\n11-14 06:27:18.829 24386-24386/? E/AndroidRuntime:     at io.realm.Realm.initializeRealm(Realm.java:342)\n11-14 06:27:18.829 24386-24386/? E/AndroidRuntime:     at io.realm.Realm.createAndValidate(Realm.java:310)\n11-14 06:27:18.829 24386-24386/? E/AndroidRuntime:     at io.realm.Realm.create(Realm.java:253)\n11-14 06:27:18.829 24386-24386/? E/AndroidRuntime:     at io.realm.Realm.getInstance(Realm.java:217)\n11-14 06:27:18.829 24386-24386/? E/AndroidRuntime:     at com.qiuduanribao.joke.utils.RealmUtils.getStableRealm(RealmUtils.java:32)\n\nand the \"_id\" field have add @PrimaryKey\n\n```\npublic class User extends RealmObject {\n    @PrimaryKey\n    private Long _id;\n    private RealmList<Auth> auths;\n    private String token;\n    private String name;\n    private boolean isMan;\n    private String avatar;\n}\n```\n\nWhy ? How can i fix this ?\n", "url": "https://github.com/realm/realm-java/issues/1775", "user": "LiuDeng", "labels": ["T-Bug"], "created": "2015-11-14 06:42:33", "closed": "2015-11-24 03:34:10", "commits": {"2f6fc338c821ef3e289d398be1cd52378a6abff6": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "f39e38ac29ba4fbe8d309bbedc0bd7d34ce60656": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "02e74d6dae49628e1c77f9fc979b1cbb226f90e4": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "2eada9a790116e92300eda2687417fdfdf325674": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "7923bdb345c3178612a30de31c69f511ff998c1d": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "2f6fc338c821ef3e289d398be1cd52378a6abff6", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f39e38ac29ba4fbe8d309bbedc0bd7d34ce60656", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "02e74d6dae49628e1c77f9fc979b1cbb226f90e4", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "2eada9a790116e92300eda2687417fdfdf325674", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "7923bdb345c3178612a30de31c69f511ff998c1d", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["0b6fcffa24ff57165c96dcba6463e220769fe741"], "nameRev": "7923bdb345c3178612a30de31c69f511ff998c1d tags/v0.85.1~1^2", "commitMessage": "Buffer overwritten caused PK migration failure\n\nClose #1775\nA String or Binary pointer retrieved from Realm is invalidated when\nset_string called.\n", "commitDateTime": "2015-11-23 22:27:52", "authoredDateTime": "2015-11-23 18:20:29", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "realm/realm-jni/src/io_realm_internal_table.cpp", "insertions": 18, "deletions": 8, "lines": 26}, {"filePath": "realm/realm-library/src/androidTest/assets/0841_pk_migration.realm", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/internal/JNITransactions.java", "insertions": 30, "deletions": 0, "lines": 30}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JNITransactions.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.JNITransactions.testPrimaryKeyTableMigratedWithRightName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7923bdb345c3178612a30de31c69f511ff998c1d"], "filteredCommitsReason": {"duplicated": 4, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 18.0, "deletions": 8.0, "lines": 26.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1.0, "UPD": 0.0, "INS": 1.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-jni/src/io_realm_internal_table.cpp"], "changesInPackagesSPOON": ["io.realm.internal.JNITransactions.testPrimaryKeyTableMigratedWithRightName()"]}, {"title": "lessThan with negative id's not working as expected", "body": "I am working with RealmObjects where i use negative id's (as long as they are not synced to the server).\nSo, when i synchronize with the server, i can get all negative id's, synchronize those objects and when synchronized, update the id.\n\nBut, when i perform a lessThan query on a RealmResult, there are less objects returned than expected.\nWhen i use between (with f.e. values -10000, 0), it is working and i am getting all the objects returned that i expect.\n\nSo it looks like the behaviour of lessThan with negative number is not working the way i would expect it to be, Is this a bug or is there a good explanation for this?\n\nI created a small android studio project, with a TestApplication where this test is setup, which fails (only 2 of the 10 objects are retreived). Project is on github: https://github.com/Sein-IT/RealmLessThan.\n\nI am testing with a Samsung Galaxy S6, Android version 5.1.1\n", "url": "https://github.com/realm/realm-java/issues/1773", "user": "seinen", "labels": ["T-Bug"], "created": "2015-11-13 15:31:37", "closed": "2015-12-11 14:36:34", "commits": {"db047a43d160c1be823cf765838d413445766420": {"commitGHEventType": "referenced", "commitUser": "kneth"}}, "ttf": 27.00027777777778, "commitsDetails": [{"commitHash": "db047a43d160c1be823cf765838d413445766420", "commitGHEventType": "referenced", "commitUser": "kneth", "commitParents": ["70e05b57e3530c2186870814e609d7cb96dc47ae"], "nameRev": "db047a43d160c1be823cf765838d413445766420 tags/v0.87.0~6^2", "commitMessage": "Unit test to compare with negative numbers. Closes #1773\n", "commitDateTime": "2015-12-11 15:31:24", "authoredDateTime": "2015-12-11 15:31:24", "commitGitStats": [{"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmResultsTest.java", "insertions": 20, "deletions": 0, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmResultsTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmResultsTest.testComparisons()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["db047a43d160c1be823cf765838d413445766420"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Align @PrimaryKey nullability with Cocoa", "body": "Right now Realm Java disallow null as primary key values. Cocoa allow this.\nThey need to agree on this behaviour otherwise.\n\nAlso the Javadoc for @PrimaryKey should be updated to reflect any decision being made.\n", "url": "https://github.com/realm/realm-java/issues/1766", "user": "cmelchior", "labels": ["T-Bug"], "created": "2015-11-12 18:09:18", "closed": "2016-04-21 19:38:56", "commits": {}, "ttf": 161.00027777777777, "commitsDetails": []}, {"title": "Trying to catch a dead lock", "body": "Hi there,\n\nI'm trying to locate a dead-lock which is happening somewhere inside Realm.\nBy logging I found that I get an infinite ANR in `onCreate()` of the MainActivity on the line `Realm.getDefaultInstance()`. Another place where it hangs is a worker thread on the line `Realm.close()`.\n\nHere is how the worker thread body looks like (without the domain details):\n\n``` java\nRealm realm = null;\ntry {\n    realm = Realm.getDefaultInstance();\n    RealmResults<A> results = realm.where(A.class).findAll();\n    realm.beginTransaction();\n    for (int i = results.size() - 1; i >= 0; i--) {\n        final A item = results.get(i);\n        String value = item.getSomeStringValue();\n        callSomeMethod(value); // this method throws an exception not related to realm when i == 1\n    }\n    realm.commitTransaction();\n} finally {\n    if (realm != null) {\n        realm.close(); // hangs on this line based on the logs\n    }\n}\n```\n\nI was able to narrow down where exactly Realm.close() hangs. It is the line `synchronized (BaseRealm.class)`:\n\n``` java\nprotected void lastLocalInstanceClosed() {\n        // validatedRealmFiles must not modified while other thread is executing createAndValidate()\n        synchronized (BaseRealm.class) {\n            validatedRealmFiles.remove(configuration.getPath());\n        }\n        realmsCache.get().remove(configuration);\n    }\n}\n```\n\nHere is the sequence of actions accordingly to logs:\n1. Application.onCreate() called and starts the worker thread\n2. Worker thread is going through the items\n3. MainActivity.onCreate() called and it hangs on Realm.getDefaultInstance()\n4. Exception thrown in the worker thread, and it hangs on realm.close()\n5. Infinite ANR in MainActivity\n\nIt's very hard to locate the problem because it's not 100% reproducible and time-dependent. If I remove transaction, or there is no exception then the dead-lock doesn't happen (could be just due to timing). Also, I have another running worker thread in background which uses realm. But it successfully finishes and doesn't hang on `realm.close()`. \n\nI tried to reproduce it in a small project, but it didn't work out.\n\nI hope this description could lead you to some ideas what could go wrong, or what I can check to locate the exact problem.\n", "url": "https://github.com/realm/realm-java/issues/1728", "user": "RobertoArtiles", "labels": ["T-Bug"], "created": "2015-11-05 03:36:03", "closed": "2015-11-11 08:32:11", "commits": {"f11f9c5d65f11101dc18b6b8226e909007e99b82": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "141e6977fa7b206309c555ce522546850169b4c8": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "492771a7bd6d703c197fce1e03b071378a8c6d40": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "23282de28b37b8f30e5b687d308c8d978652e20b": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "6d6c2d3d64e1caf6a8cbb056b36709416c5adda9": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "312d4c9b423ca3abbe46b68dab2ef4fce5dc79c3": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "6761cc892765c8099162e4dfe09921fc18eca705": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "f11f9c5d65f11101dc18b6b8226e909007e99b82", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "141e6977fa7b206309c555ce522546850169b4c8", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "492771a7bd6d703c197fce1e03b071378a8c6d40", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "23282de28b37b8f30e5b687d308c8d978652e20b", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "6d6c2d3d64e1caf6a8cbb056b36709416c5adda9", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "312d4c9b423ca3abbe46b68dab2ef4fce5dc79c3", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["393079a9c462dfb3d188ec001e729411c27cd05a"], "nameRev": "312d4c9b423ca3abbe46b68dab2ef4fce5dc79c3 tags/v0.84.2~6^2", "commitMessage": "Add counter for Realm instance for all threads.\n\nTo close #1728\nThe only usage of the Realm instance counter for now is to clean up\nvalidatedRealmFiles.\nWe do need to refactor the whole counter/cache part.\n", "commitDateTime": "2015-11-11 16:00:50", "authoredDateTime": "2015-11-05 22:12:30", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmTest.java", "insertions": 58, "deletions": 0, "lines": 58}, {"filePath": "realm/realm-library/src/main/java/io/realm/Realm.java", "insertions": 49, "deletions": 1, "lines": 50}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmTest.testOpenRealmWhileTransactionInAnotherThread()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Realm.java", "spoonMethods": [{"spoonMethodName": "io.realm.Realm", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.acquireRealmFileReference(io.realm.RealmConfiguration)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.releaseRealmFileReference(io.realm.RealmConfiguration)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.createAndValidate(io.realm.RealmConfiguration,java.lang.Boolean,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.lastLocalInstanceClosed()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "6761cc892765c8099162e4dfe09921fc18eca705", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["312d4c9b423ca3abbe46b68dab2ef4fce5dc79c3"], "filteredCommitsReason": {"duplicated": 6, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 49.0, "deletions": 1.0, "lines": 50.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6.0, "UPD": 0.0, "INS": 5.0, "MOV": 1.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-library/src/main/java/io/realm"], "changesInPackagesSPOON": ["io.realm.Realm.acquireRealmFileReference(io.realm.RealmConfiguration)", "io.realm.Realm.releaseRealmFileReference(io.realm.RealmConfiguration)", "io.realm.Realm", "io.realm.Realm.lastLocalInstanceClosed()", "io.realm.Realm.createAndValidate(io.realm.RealmConfiguration,java.lang.Boolean,boolean)"]}, {"title": "Async queries don't update when using link", "body": "as mentioned [here](https://github.com/realm/realm-java/issues/1676#issuecomment-152974784)  updating an async query containing a link will not bring latest result.\nUT to reproduce\n\n``` java\npublic void testQueryingLink () throws Throwable {\n        final CountDownLatch signalCallbackFinished = new CountDownLatch(1);\n        final CountDownLatch signalClosedRealm = new CountDownLatch(1);\n        final AtomicInteger numberOfInvocations = new AtomicInteger(0);\n        final Realm[] realm = new Realm[1];\n        final Throwable[] threadAssertionError = new Throwable[1];\n        final Looper[] backgroundLooper = new Looper[1];\n        ExecutorService executorService = Executors.newSingleThreadExecutor();\n        executorService.submit(new Runnable() {\n            @Override\n            public void run() {\n                Looper.prepare();\n                backgroundLooper[0] = Looper.myLooper();\n\n                try {\n                    realm[0] = openRealmInstance(\"testQueryingLink\");\n\n\n                    final RealmResults<Dog> allAsync = realm[0].where(Dog.class).equalTo(\"owner.name\", \"kiba\").findAllAsync();\n                    allAsync.addChangeListener(new RealmChangeListener() {\n                        @Override\n                        public void onChange() {\n                            switch (numberOfInvocations.incrementAndGet()) {\n                                case 1: {\n                                    assertEquals(0, allAsync.size());\n                                    assertTrue(allAsync.isLoaded());\n                                    assertTrue(allAsync.isValid());\n                                    assertTrue(allAsync.isEmpty());\n                                    final CountDownLatch wait = new CountDownLatch(1);\n                                    final RealmConfiguration configuration = realm[0].getConfiguration();\n                                    new AsyncTask() {\n                                        @Override\n                                        protected Object doInBackground(Object[] objects) {\n                                            Realm instance = Realm.getInstance(configuration);\n                                            instance.beginTransaction();\n                                            Dog dog = instance.createObject(Dog.class);\n                                            dog.setAge(10);\n                                            dog.setName(\"Akamaru\");\n                                            Owner kiba = instance.createObject(Owner.class);\n                                            kiba.setName(\"kiba\");\n                                            dog.setOwner(kiba);\n                                            instance.commitTransaction();\n                                            wait.countDown();\n                                            return null;\n                                        }\n                                    }.execute();\n\n                                    try {\n                                        wait.await();\n                                    } catch (InterruptedException e) {\n                                        e.printStackTrace();\n                                    }\n                                    break;\n                                }\n                                case 2: {\n                                    assertEquals(1, realm[0].allObjects(Dog.class).size());\n                                    assertEquals(1, realm[0].allObjects(Owner.class).size());\n                                    assertEquals(1, allAsync.size());\n                                    assertTrue(allAsync.isLoaded());\n                                    assertTrue(allAsync.isValid());\n                                    assertTrue(allAsync.isEmpty());\n                                    signalCallbackFinished.countDown();\n                                    break;\n                                }\n                                default:\n                                    throw new IllegalStateException(\"invalid number of invocation\");\n                            }\n                        }\n                    });\n\n                    Looper.loop();\n\n                } catch (Throwable e) {\n                    e.printStackTrace();\n                    threadAssertionError[0] = e;\n\n                } finally {\n                    if (signalCallbackFinished.getCount() > 0) {\n                        signalCallbackFinished.countDown();\n                    }\n                    if (realm.length > 0 && realm[0] != null) {\n                        realm[0].close();\n                    }\n                    signalClosedRealm.countDown();\n                }\n            }\n        });\n\n        exitOrThrow(executorService, signalCallbackFinished, signalClosedRealm, backgroundLooper, threadAssertionError);\n    }\n```\n", "url": "https://github.com/realm/realm-java/issues/1717", "user": "nhachicha", "labels": ["Blocked", "T-Bug"], "created": "2015-11-02 15:19:51", "closed": "2015-12-23 17:30:02", "commits": {"c4ad0e119a91dade35a6c0ee63d16a0184396782": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}, "0c5995a4abba6d2a47653be49aa59571fe47393e": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}, "9970a1dca818ba7c695eaac2dd692ce1766d28d4": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}, "da8e895b901814c8cd1722b718ccf650f2a799a2": {"commitGHEventType": "closed", "commitUser": "nhachicha"}}, "ttf": 51.000277777777775, "commitsDetails": [{"commitHash": "c4ad0e119a91dade35a6c0ee63d16a0184396782", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0c5995a4abba6d2a47653be49aa59571fe47393e", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9970a1dca818ba7c695eaac2dd692ce1766d28d4", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": ["e5372568f0f58d53d96274d00f852cada36be35f"], "nameRev": "9970a1dca818ba7c695eaac2dd692ce1766d28d4 tags/v0.87.1~3^2~1", "commitMessage": "adding unit test to expose the fixed issue in Core #1717\n\nremove test\n", "commitDateTime": "2015-12-22 15:00:31", "authoredDateTime": "2015-12-22 14:54:29", "commitGitStats": [{"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmAsyncQueryTests.java", "insertions": 92, "deletions": 0, "lines": 92}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmAsyncQueryTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmAsyncQueryTests.testQueryingLinkHandover()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "da8e895b901814c8cd1722b718ccf650f2a799a2", "commitGHEventType": "closed", "commitUser": "nhachicha", "commitParents": ["e5372568f0f58d53d96274d00f852cada36be35f", "9970a1dca818ba7c695eaac2dd692ce1766d28d4"], "nameRev": "da8e895b901814c8cd1722b718ccf650f2a799a2 tags/v0.87.1~5", "commitMessage": "Merge pull request #1961 from realm/nh/test_1717_core_fix\n\nfixes #1717 ", "commitDateTime": "2015-12-22 15:33:31", "authoredDateTime": "2015-12-22 15:33:31", "commitGitStats": [{"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmAsyncQueryTests.java", "insertions": 92, "deletions": 0, "lines": 92}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmAsyncQueryTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmAsyncQueryTests.testQueryingLinkHandover()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9970a1dca818ba7c695eaac2dd692ce1766d28d4"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Task clean cannot be run if realm-java is already clean.", "body": "```\n\u279c  realm-java git:(master) \u2717 ./gradlew clean\n[buildinfo] Not using buildInfo properties file for this build.\n:cleanExamples\n:examples:adapterExample:clean\n:examples:encryptionExample:clean\n:examples:gridViewExample:clean\n:examples:introExample:clean\n:examples:jsonExample:clean\n:examples:kotlinExample:clean\n:examples:migrationExample:clean\n:examples:threadExample:clean\n:examples:moduleExample:app:clean\n:examples:moduleExample:library:clean\n:cleanGradlePlugin\n:gradle-plugin:clean\n:cleanLocalMavenRepos\n:cleanRealm\n:realm:realm-annotations:clean\n:realm:realm-annotations-processor:clean\n:realm:realm-jni:clean\nrm -f *.d *.o *.gcno *.gcda librealm-jni-arm.a librealm-jni-arm-dbg.a librealm-jni-arm-cov.a librealm-jni-arm.so librealm-jni-arm-dbg.so librealm-jni-arm-cov.so librealm-jni.libdeps\nrm -f *.d *.o *.gcno *.gcda librealm-jni-arm-v7a.a librealm-jni-arm-v7a-dbg.a librealm-jni-arm-v7a-cov.a librealm-jni-arm-v7a.so librealm-jni-arm-v7a-dbg.so librealm-jni-arm-v7a-cov.so librealm-jni.libdeps\nrm -f *.d *.o *.gcno *.gcda librealm-jni-arm64.a librealm-jni-arm64-dbg.a librealm-jni-arm64-cov.a librealm-jni-arm64.so librealm-jni-arm64-dbg.so librealm-jni-arm64-cov.so librealm-jni.libdeps\nrm -f *.d *.o *.gcno *.gcda librealm-jni-mips.a librealm-jni-mips-dbg.a librealm-jni-mips-cov.a librealm-jni-mips.so librealm-jni-mips-dbg.so librealm-jni-mips-cov.so librealm-jni.libdeps\nrm -f *.d *.o *.gcno *.gcda librealm-jni-x86.a librealm-jni-x86-dbg.a librealm-jni-x86-cov.a librealm-jni-x86.so librealm-jni-x86-dbg.so librealm-jni-x86-cov.so librealm-jni.libdeps\nrm -f *.d *.o *.gcno *.gcda librealm-jni-x86_64.a librealm-jni-x86_64-dbg.a librealm-jni-x86_64-cov.a librealm-jni-x86_64.so librealm-jni-x86_64-dbg.so librealm-jni-x86_64-cov.so librealm-jni.libdeps\n:realm:realm-library:clean\n:clean\n\nBUILD SUCCESSFUL\n\nTotal time: 12.667 secs\n\nThis build could be faster, please consider using the Gradle Daemon: https://docs.gradle.org/2.7/userguide/gradle_daemon.html\n\u279c  realm-java git:(master) \u2717 ./gradlew clean\n[buildinfo] Not using buildInfo properties file for this build.\n:cleanExamples FAILED\n\nFAILURE: Build failed with an exception.\n\n* What went wrong:\nA problem occurred configuring project ':adapterExample'.\n> Could not resolve all dependencies for configuration ':adapterExample:classpath'.\n   > Could not find io.realm:gradle-plugin:0.84.2-SNAPSHOT.\n     Searched in the following locations:\n         file:/Users/dalinaum/Library/Android/sdk/extras/android/m2repository/io/realm/gradle-plugin/0.84.2-SNAPSHOT/maven-metadata.xml\n         file:/Users/dalinaum/Library/Android/sdk/extras/android/m2repository/io/realm/gradle-plugin/0.84.2-SNAPSHOT/gradle-plugin-0.84.2-SNAPSHOT.pom\n         file:/Users/dalinaum/Library/Android/sdk/extras/android/m2repository/io/realm/gradle-plugin/0.84.2-SNAPSHOT/gradle-plugin-0.84.2-SNAPSHOT.jar\n         https://jcenter.bintray.com/io/realm/gradle-plugin/0.84.2-SNAPSHOT/maven-metadata.xml\n         https://jcenter.bintray.com/io/realm/gradle-plugin/0.84.2-SNAPSHOT/gradle-plugin-0.84.2-SNAPSHOT.pom\n         https://jcenter.bintray.com/io/realm/gradle-plugin/0.84.2-SNAPSHOT/gradle-plugin-0.84.2-SNAPSHOT.jar\n     Required by:\n         io.realm:adapterExample:0.84.2-SNAPSHOT\n\n* Try:\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\n\nBUILD FAILED\n\nTotal time: 9.917 secs\n```\n\nEven example projects require `io/realm/gradle-plugin/0.84.2-SNAPSHOT`. So if `realm-java` is already clean, task clean cannot be run anymore.\n", "url": "https://github.com/realm/realm-java/issues/1711", "user": "dalinaum", "labels": ["T-Bug"], "created": "2015-11-01 16:01:56", "closed": "2015-11-01 16:06:33", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "realm file incompatible if model has PrimaryKey", "body": "from slack.\n\nRealm Swift reports an error when opening the realm file generated on Android.\n\nmodel definition in Java:\n\n```\npublic class DataItem extends RealmObject {\n    @PrimaryKey\n    private int id;\n\n    // seter and getter here\n}\n```\n\nmodel definition in Swift:\n\n```\nclass DataItem: Object {\n    dynamic var id = 0\n\n    override static func primaryKey() -> String? {\n        return \"id\"\n    }\n}\n```\n\nreported error:\n\n```\nfatal error: 'try!' expression unexpectedly raised an error: Error Domain=io.realm Code=0 \"Migration is required for object type 'DataItem' due to the following errors:\n- Property 'id' has been made a primary key.\" UserInfo={NSLocalizedDescription=Migration is required for object type 'DataItem' due to the following errors:\n- Property 'id' has been made a primary key.}: file /Library/Caches/com.apple.xbs/Sources/swiftlang_PONDEROSA/swiftlang_PONDEROSA-700.1.101.6/src/swift/stdlib/public/core/ErrorType.swift, line 50\n```\n", "url": "https://github.com/realm/realm-java/issues/1703", "user": "zaki50", "labels": ["T-Bug"], "created": "2015-10-30 10:41:42", "closed": "2015-11-26 02:44:47", "commits": {}, "ttf": 26.00027777777778, "commitsDetails": []}, {"title": "Change listener not being triggered on realm updates", "body": "According to the documentation:\n\n_\"If you want to be notified when the query completes and the RealmResults is updated, you can register a RealmChangeListener. This listener will be called every time the RealmResults is updated to reflect the latest changes in the Realm (usually after a commit)\"_\n\nI add a change listener to either a RealmObject or RealmResult, but that only gets triggered once (after the data is loaded). The documentation states that this listener should also be triggered when the real result is updated. That does not seem to be the case. \n\nIs the documentation incorrect or do I need to do something special besides commiting a transaction so that the listener gets triggered?\n", "url": "https://github.com/realm/realm-java/issues/1676", "user": "Wattos", "labels": ["Blocked", "T-Bug"], "created": "2015-10-26 15:36:54", "closed": "2015-12-23 17:34:49", "commits": {}, "ttf": 58.000277777777775, "commitsDetails": []}, {"title": "NPE: ColumnIndices.getColumnInfo(java.lang.Class) after upgrading to 0.84.0", "body": "Hi team,\n\nAfter upgrading from 0.82.2 to 0.84.0 got this exception during the first app start:\n\n```\njava.lang.NullPointerException: Attempt to invoke virtual method 'io.realm.internal.ColumnInfo io.realm.internal.ColumnIndices.getColumnInfo(java.lang.Class)' on a null object reference\n```\n\nDidn't happen during the next starts.\nSame happened when I deployed the app on another device with the same 0.82.2 realm version.\n\nHere is the piece of code which triggered the crash on the first device (called on the worker thread):\n\n``` java\nrealm.where(PinRealm.class)\n                    .equalTo(\"token\", pinToken)\n                    .findFirst();\n```\n\nAnd here is the piece of code which triggered the crash on another device (called on the main thread):\n\n``` java\nrealm.where(PinRealm.class)\n                    .equalTo(\"deleted\", false)\n                    .equalTo(\"inboxState\", NEW.ordinal())\n                    .findAll();\n```\n", "url": "https://github.com/realm/realm-java/issues/1646", "user": "RobertoArtiles", "labels": ["T-Bug"], "created": "2015-10-22 23:07:55", "closed": "2015-10-23 06:54:01", "commits": {"6a67ada62366373a60745d7230c64c71ae927230": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "85cdfa85a804e153385e343c91595dfef83095ca": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "fe16a6235e82f96217a374ca0d10152170e5a6dd": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "f9d9ab210938522725470836d8111ec7a67b110c": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "06be705a5c1a711d2396162062a75d8a26ae8a38": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "1c75c9cc4c030ded2797d412e8e37c4d5f5944c4": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "6a67ada62366373a60745d7230c64c71ae927230", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["042c4a6dc1f5d279c5b28d5b66221a7d4db577ce"], "nameRev": "6a67ada62366373a60745d7230c64c71ae927230 tags/v0.84.1~15^2", "commitMessage": "fix #1646\n\nProblem:\n  `Realm#lastLocalInstanceClosed()` which is called by `Realm#close()' can remove entries from `validatedRealmFiles` while other thread is executing `Realm#createAndValidate()`.\n  This might lead to `null` assignment to `Realm.columnIndices`.\n\nSolution:\n  Modified to deal with `validatedRealmFiles` in synchronized block of `Realm.class`.\n", "commitDateTime": "2015-10-23 13:47:47", "authoredDateTime": "2015-10-23 13:13:20", "commitGitStats": [{"filePath": "realm/src/androidTest/java/io/realm/RealmTest.java", "insertions": 48, "deletions": 1, "lines": 49}, {"filePath": "realm/src/main/java/io/realm/Realm.java", "insertions": 10, "deletions": 4, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmTest.testClosingRealmWhileOtherThreadIsOpeningRealm()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Realm.java", "spoonMethods": [{"spoonMethodName": "io.realm.Realm.createAndValidate(io.realm.RealmConfiguration,boolean,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.create(io.realm.RealmConfiguration)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 2}, {"spoonMethodName": "io.realm.Realm.lastLocalInstanceClosed()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.createAndValidate(io.realm.RealmConfiguration,java.lang.Boolean,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "85cdfa85a804e153385e343c91595dfef83095ca", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "fe16a6235e82f96217a374ca0d10152170e5a6dd", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f9d9ab210938522725470836d8111ec7a67b110c", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "06be705a5c1a711d2396162062a75d8a26ae8a38", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["b73c28e3219588d525661952fbb46c0fe5e851b2"], "nameRev": "06be705a5c1a711d2396162062a75d8a26ae8a38 tags/v0.84.1~14^2", "commitMessage": "add changelog entry for #1646\n", "commitDateTime": "2015-10-23 16:43:41", "authoredDateTime": "2015-10-23 16:08:14", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1c75c9cc4c030ded2797d412e8e37c4d5f5944c4", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["b73c28e3219588d525661952fbb46c0fe5e851b2", "06be705a5c1a711d2396162062a75d8a26ae8a38"], "nameRev": "1c75c9cc4c030ded2797d412e8e37c4d5f5944c4 tags/v0.84.1~14", "commitMessage": "Merge pull request #1649 from realm/my/1646-changelog\n\nadd changelog entry for #1646", "commitDateTime": "2015-10-23 17:30:14", "authoredDateTime": "2015-10-23 17:30:14", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6a67ada62366373a60745d7230c64c71ae927230", "06be705a5c1a711d2396162062a75d8a26ae8a38"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10.0, "deletions": 4.0, "lines": 14.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8.0, "UPD": 1.0, "INS": 3.0, "MOV": 2.0, "DEL": 2.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/src/main/java/io/realm"], "changesInPackagesSPOON": ["io.realm.Realm.lastLocalInstanceClosed()", "io.realm.Realm.createAndValidate(io.realm.RealmConfiguration,boolean,boolean)", "io.realm.Realm.createAndValidate(io.realm.RealmConfiguration,java.lang.Boolean,boolean)", "io.realm.Realm.create(io.realm.RealmConfiguration)"]}, {"title": "Add @SuppressWarnings(\"cast\") to generated getters", "body": "I'm currently working on a project which used the following in the project wide build.gradle:\n\n```\nallprojects {\n    gradle.projectsEvaluated {\n        tasks.withType(JavaCompile) {\n            options.compilerArgs << '-Xlint:all'\n            options.compilerArgs << '-Werror'\n        }\n    }\n}\n```\n\nThis caused errors when compiling the generated generated proxy classes. After a little research I believe adding the `@SuppressWarnings('cast')` annotation for the getters and setters (https://github.com/realm/realm-java/blob/f7147ee6bcc451d612babd54832f891d56ea7f35/realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyClassGenerator.java#L217 and https://github.com/realm/realm-java/blob/f7147ee6bcc451d612babd54832f891d56ea7f35/realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyClassGenerator.java#L243) would eliminate almost all of the linting errors.\n", "url": "https://github.com/realm/realm-java/issues/1644", "user": "bryanjswift", "labels": ["T-Bug"], "created": "2015-10-22 17:46:43", "closed": "2015-10-24 18:59:14", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Cannot load `.so` file", "body": "We have seen a number of issues regarding failure to load the .so file. This issue collects those separate issues reported:\nConnects to #1527\nConnects to #1534\nConnects to #1421 (solved)\nConnects to #1640 (ARM64 bug in AOSP)\n\nTODO:\n- [x] Document workaround for ARM64 bug in AOSP (#1640)\n- [x] Document workaround for Google Analytics (#1421)\n- [x] Understand the root cause of #1527 (update to latest Gradle plugin)\n- [ ] Understand the root cause of #1534\n", "url": "https://github.com/realm/realm-java/issues/1634", "user": "kneth", "labels": ["T-Bug"], "created": "2015-10-21 09:56:50", "closed": "2016-01-22 14:18:20", "commits": {}, "ttf": 93.00027777777778, "commitsDetails": []}, {"title": "Fatal signal 11 (SIGSEGV) after upgrading to 0.83.1", "body": "Hi team,\n\nI upgraded from 0.82.2 to 0.83.1, and bumped the scheme version number in Application.onCreate() where I set the default Realm config:\n\n``` java\n        RealmConfiguration config = new RealmConfiguration.Builder(this)\n                .deleteRealmIfMigrationNeeded()\n                .schemaVersion(RealmConfig.REALM_SCHEME_VERSION)\n                .build();\n        Realm.setDefaultConfiguration(config);\n```\n\nNow I get this native exception each time I start the app on one of our testing devices (Nexus 5). I deployed the new version on top of the old one which had an old Realm file created by 0.82.0.\n\nI don't get the crash after I deploy a new apk on other devices, which also have an old Realm file.\n\nApparently, it has something to do with a certain DB state.\n\n```\n10-20 14:01:08.824 197-197/? I/SELinux: SELinux: Loaded file_contexts contexts from /file_contexts.\n10-20 14:01:08.826 197-197/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n10-20 14:01:08.826 197-197/? A/DEBUG: Build fingerprint: 'google/hammerhead/hammerhead:6.0/MPA44I/2172151:user/release-keys'\n10-20 14:01:08.826 197-197/? A/DEBUG: Revision: '0'\n10-20 14:01:08.826 197-197/? A/DEBUG: ABI: 'arm'\n10-20 14:01:08.826 197-197/? A/DEBUG: pid: 24013, tid: 24013, name: .witdot.twinkie  >>> com.witdot.twinkie <<<\n10-20 14:01:08.826 197-197/? A/DEBUG: signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x0\n10-20 14:01:08.840 197-197/? A/DEBUG:     r0 00000000  r1 00000028  r2 98852730  r3 9fdee6ed\n10-20 14:01:08.840 197-197/? A/DEBUG:     r4 988534b0  r5 00000028  r6 00000029  r7 00000001\n10-20 14:01:08.840 197-197/? A/DEBUG:     r8 00000002  r9 00000000  sl 0000002b  fp beebff48\n10-20 14:01:08.840 197-197/? A/DEBUG:     ip b4d02018  sp beebfed0  lr b6ca61eb  pc 9fe01520  cpsr 800f0030\n10-20 14:01:08.863 197-197/? A/DEBUG:     #00 pc 0004b520  /data/app/com.witdot.twinkie-2/lib/arm/librealm-jni.so\n10-20 14:01:08.863 197-197/? A/DEBUG:     #01 pc 0005086f  /data/app/com.witdot.twinkie-2/lib/arm/librealm-jni.so\n10-20 14:01:08.863 197-197/? A/DEBUG:     #02 pc 0007fb7b  /data/app/com.witdot.twinkie-2/lib/arm/librealm-jni.so\n10-20 14:01:08.864 197-197/? A/DEBUG:     #03 pc 0007fc8d  /data/app/com.witdot.twinkie-2/lib/arm/librealm-jni.so\n10-20 14:01:08.864 197-197/? A/DEBUG:     #04 pc 0009b947  /data/app/com.witdot.twinkie-2/lib/arm/librealm-jni.so (Java_io_realm_internal_TableQuery_nativeFindAll+142)\n10-20 14:01:08.864 197-197/? A/DEBUG:     #05 pc 00a0a63b  /data/app/com.witdot.twinkie-2/oat/arm/base.odex (long io.realm.internal.TableQuery.nativeFindAll(long, long, long, long)+142)\n10-20 14:01:08.864 197-197/? A/DEBUG:     #06 pc 00a06dc9  /data/app/com.witdot.twinkie-2/oat/arm/base.odex (io.realm.internal.TableView io.realm.internal.TableQuery.findAll()+236)\n10-20 14:01:08.864 197-197/? A/DEBUG:     #07 pc 009f6b9b  /data/app/com.witdot.twinkie-2/oat/arm/base.odex (io.realm.RealmResults io.realm.RealmQuery.findAllSorted(java.lang.String, boolean)+62)\n10-20 14:01:08.864 197-197/? A/DEBUG:     #08 pc 00cb4f53  /data/app/com.witdot.twinkie-2/oat/arm/base.odex (com.witdot.chocodile.realm.PinRealm com.witdot.chocodile.realm.Pins$RealmQueries.findNextUnreadPin(io.realm.Realm, com.witdot.chocodile.realm.Pins$Badge, boolean, boolean)+854)\n10-20 14:01:08.864 197-197/? A/DEBUG:     #09 pc 00cb4bc7  /data/app/com.witdot.twinkie-2/oat/arm/base.odex (com.witdot.chocodile.realm.PinRealm com.witdot.chocodile.realm.Pins$RealmQueries.findNextUnreadPin(io.realm.Realm, com.witdot.chocodile.realm.Pins$Badge)+82)\n10-20 14:01:08.864 197-197/? A/DEBUG:     #10 pc 00caffed  /data/app/com.witdot.twinkie-2/oat/arm/base.odex (boolean com.witdot.chocodile.realm.Pins$RealmQueries.checkNextPinHasVideo(io.realm.Realm, com.witdot.chocodile.realm.Pins$Badge)+56)\n10-20 14:01:08.864 197-197/? A/DEBUG:     #11 pc 00d3c6ab  /data/app/com.witdot.twinkie-2/oat/arm/base.odex (void com.witdot.chocodile.ui.view.CountersContainer$Counter.refreshViews()+126)\n10-20 14:01:08.864 197-197/? A/DEBUG:     #12 pc 00d3cc71  /data/app/com.witdot.twinkie-2/oat/arm/base.odex (void com.witdot.chocodile.ui.view.CountersContainer$Counter.onChange()+60)\n10-20 14:01:08.864 197-197/? A/DEBUG:     #13 pc 009d9fed  /data/app/com.witdot.twinkie-2/oat/arm/base.odex (void io.realm.BaseRealm.sendNotifications()+456)\n10-20 14:01:08.864 197-197/? A/DEBUG:     #14 pc 009d8899  /data/app/com.witdot.twinkie-2/oat/arm/base.odex (void io.realm.BaseRealm.access$100(io.realm.BaseRealm)+60)\n10-20 14:01:08.864 197-197/? A/DEBUG:     #15 pc 009cb785  /data/app/com.witdot.twinkie-2/oat/arm/base.odex (boolean io.realm.BaseRealm$RealmCallback.handleMessage(android.os.Message)+184)\n10-20 14:01:08.864 197-197/? A/DEBUG:     #16 pc 720e5d4d  /data/dalvik-cache/arm/system@framework@boot.oat\n```\n", "url": "https://github.com/realm/realm-java/issues/1628", "user": "RobertoArtiles", "labels": ["T-Bug"], "created": "2015-10-20 21:26:54", "closed": "2015-10-31 11:18:50", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "setter/getter of Proxy class uses wrong field index if field index differs in multiple Realms", "body": "", "url": "https://github.com/realm/realm-java/issues/1611", "user": "zaki50", "labels": ["T-Bug"], "created": "2015-10-18 13:25:23", "closed": "2015-10-22 11:25:15", "commits": {"28cfecc705209fad27de3d3617bdc712915bca62": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "67827fadee6800d7752c431c1258f93cad809fee": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "49182438ad0fedff888225f0877714196716f36a": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "3781b14d0c58f0cfedc6569b34812d89b6ee0ea2": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "008288af03b074e452f029f3055d5193a604ba6a": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "ebb0f1f450b3e3a19cb61695c479d7a563d0551c": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "28cfecc705209fad27de3d3617bdc712915bca62", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "67827fadee6800d7752c431c1258f93cad809fee", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "49182438ad0fedff888225f0877714196716f36a", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "3781b14d0c58f0cfedc6569b34812d89b6ee0ea2", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "008288af03b074e452f029f3055d5193a604ba6a", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["17228f76f026146536752e0a405714d2fde7e07b"], "nameRev": "008288af03b074e452f029f3055d5193a604ba6a tags/v0.84.0~1^2", "commitMessage": "fix for #1611\n\nProblem:\n  The Proxy class of each model holds column indices in static fields.\n  These indices are good only when all Realm databases have the same column index in every column of the model class.\n  If Realm databases have different column indices, the getter/setter of Proxy class reads/writes wrong column.\n\nSolution:\n  This commit introduces `ColumnInfo` object that holds column indices information per Realm instance which shares the same database file.\n", "commitDateTime": "2015-10-22 20:20:21", "authoredDateTime": "2015-10-21 09:29:11", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyClassGenerator.java", "insertions": 95, "deletions": 68, "lines": 163}, {"filePath": "realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyMediatorGenerator.java", "insertions": 7, "deletions": 25, "lines": 32}, {"filePath": "realm-annotations-processor/src/test/resources/io/realm/AllTypesRealmProxy.java", "insertions": 88, "deletions": 68, "lines": 156}, {"filePath": "realm-annotations-processor/src/test/resources/io/realm/BooleansRealmProxy.java", "insertions": 48, "deletions": 40, "lines": 88}, {"filePath": "realm-annotations-processor/src/test/resources/io/realm/NullTypesRealmProxy.java", "insertions": 190, "deletions": 147, "lines": 337}, {"filePath": "realm-annotations-processor/src/test/resources/io/realm/RealmDefaultModuleMediator.java", "insertions": 5, "deletions": 15, "lines": 20}, {"filePath": "realm-annotations-processor/src/test/resources/io/realm/SimpleRealmProxy.java", "insertions": 35, "deletions": 32, "lines": 67}, {"filePath": "realm/src/androidTest/java/io/realm/RealmObjectTest.java", "insertions": 69, "deletions": 0, "lines": 69}, {"filePath": "realm/src/androidTest/java/io/realm/entities/StringAndInt.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "realm/src/main/java/io/realm/BaseRealm.java", "insertions": 0, "deletions": 5, "lines": 5}, {"filePath": "realm/src/main/java/io/realm/Realm.java", "insertions": 22, "deletions": 15, "lines": 37}, {"filePath": "realm/src/main/java/io/realm/RealmObject.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/src/main/java/io/realm/RealmQuery.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "realm/src/main/java/io/realm/dynamic/DynamicRealmObject.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/src/main/java/io/realm/internal/ColumnIndices.java", "insertions": 9, "deletions": 14, "lines": 23}, {"filePath": "realm/src/main/java/io/realm/internal/ColumnInfo.java", "insertions": 44, "deletions": 0, "lines": 44}, {"filePath": "realm/src/main/java/io/realm/internal/RealmProxyMediator.java", "insertions": 5, "deletions": 10, "lines": 15}, {"filePath": "realm/src/main/java/io/realm/internal/modules/CompositeMediator.java", "insertions": 5, "deletions": 10, "lines": 15}, {"filePath": "realm/src/main/java/io/realm/internal/modules/FilterableMediator.java", "insertions": 5, "deletions": 10, "lines": 15}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}, {"commitHash": "ebb0f1f450b3e3a19cb61695c479d7a563d0551c", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["17228f76f026146536752e0a405714d2fde7e07b", "008288af03b074e452f029f3055d5193a604ba6a"], "nameRev": "ebb0f1f450b3e3a19cb61695c479d7a563d0551c tags/v0.84.0~1", "commitMessage": "Merge pull request #1632 from realm/my/field-indices-cache-for-each-Realm\n\nfix for #1611", "commitDateTime": "2015-10-22 20:25:15", "authoredDateTime": "2015-10-22 20:25:15", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyClassGenerator.java", "insertions": 95, "deletions": 68, "lines": 163}, {"filePath": "realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyMediatorGenerator.java", "insertions": 7, "deletions": 25, "lines": 32}, {"filePath": "realm-annotations-processor/src/test/resources/io/realm/AllTypesRealmProxy.java", "insertions": 88, "deletions": 68, "lines": 156}, {"filePath": "realm-annotations-processor/src/test/resources/io/realm/BooleansRealmProxy.java", "insertions": 48, "deletions": 40, "lines": 88}, {"filePath": "realm-annotations-processor/src/test/resources/io/realm/NullTypesRealmProxy.java", "insertions": 190, "deletions": 147, "lines": 337}, {"filePath": "realm-annotations-processor/src/test/resources/io/realm/RealmDefaultModuleMediator.java", "insertions": 5, "deletions": 15, "lines": 20}, {"filePath": "realm-annotations-processor/src/test/resources/io/realm/SimpleRealmProxy.java", "insertions": 35, "deletions": 32, "lines": 67}, {"filePath": "realm/src/androidTest/java/io/realm/RealmObjectTest.java", "insertions": 69, "deletions": 0, "lines": 69}, {"filePath": "realm/src/androidTest/java/io/realm/entities/StringAndInt.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "realm/src/main/java/io/realm/BaseRealm.java", "insertions": 0, "deletions": 5, "lines": 5}, {"filePath": "realm/src/main/java/io/realm/Realm.java", "insertions": 22, "deletions": 15, "lines": 37}, {"filePath": "realm/src/main/java/io/realm/RealmObject.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/src/main/java/io/realm/RealmQuery.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "realm/src/main/java/io/realm/dynamic/DynamicRealmObject.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/src/main/java/io/realm/internal/ColumnIndices.java", "insertions": 9, "deletions": 14, "lines": 23}, {"filePath": "realm/src/main/java/io/realm/internal/ColumnInfo.java", "insertions": 44, "deletions": 0, "lines": 44}, {"filePath": "realm/src/main/java/io/realm/internal/RealmProxyMediator.java", "insertions": 5, "deletions": 10, "lines": 15}, {"filePath": "realm/src/main/java/io/realm/internal/modules/CompositeMediator.java", "insertions": 5, "deletions": 10, "lines": 15}, {"filePath": "realm/src/main/java/io/realm/internal/modules/FilterableMediator.java", "insertions": 5, "deletions": 10, "lines": 15}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": ["008288af03b074e452f029f3055d5193a604ba6a"], "filteredCommitsReason": {"duplicated": 4, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 198.0, "deletions": 162.0, "lines": 360.0, "gitFilesChange": 12}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/src/main/java/io/realm", "realm/src/main/java/io/realm/internal", "realm/src/main/java/io/realm/internal/modules", "realm-annotations-processor/src/main/java/io/realm/processor", "realm/src/main/java/io/realm/dynamic"]}, {"title": "Field 'xxx': type mismatch. Was INTEGER, expected STRING", "body": "Related to https://github.com/realm/realm-java/issues/1319\n\nWe are still seeing this issue with 10-12 snapshot. \n\n```\njava.lang.IllegalArgumentException: Field 'status': type mismatch. Was INTEGER, expected STRING.\n       at io.realm.RealmQuery.getColumnIndices(RealmQuery.java:167)\n       at io.realm.RealmQuery.equalTo(RealmQuery.java:305)\n```\n\nCrashed point with query \n\n```\nrealm.where(MyRealm.class).equalTo(\"status\", new Integer(1)).findAll()\n```\n\nThe column in question, 'status' is an \"int\". \n\n```\n    @PrimaryKey\n    private long a;\n\n    @Index\n    private int b;\n\n    @Index\n    private int c;\n\n    @Required\n    private String d;\n\n    @Index\n    private int status;\n```\n\nCan a db corruption cause column def corruption? If so, it may be time to move db def to a separate file to ensure such things cannot happen. \n", "url": "https://github.com/realm/realm-java/issues/1610", "user": "diegomontoya", "labels": ["T-Bug"], "created": "2015-10-18 09:03:34", "closed": "2015-11-01 11:59:11", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "NPE at BaseRealm.java:591", "body": "Today I upgraded our app to Realm 0.83.1 from my previous patched build of 0.83.0\n\nUnfortunately I've seen the \"Cannot send message to Handler on a dead thread\" error @cmelchior  and I were battling a couple of weeks ago, although I don't have much data to help track that down yet.\n\nAlso, there's a new NPE bug in BaseRealm.java which should be reasonably easy to figure out - here's the stack trace:\n\n```\njava.lang.NullPointerException: Attempt to invoke virtual method 'void io.realm.internal.SharedGroupManager.advanceRead()' on a null object reference\nat io.realm.BaseRealm$RealmCallback.handleMessage(BaseRealm.java:591)\nat android.os.Handler.dispatchMessage(Handler.java:98)\nat android.os.Looper.loop(Looper.java:135)\nat android.app.ActivityThread.main(ActivityThread.java:5430)\nat java.lang.reflect.Method.invoke(Native Method)\nat java.lang.reflect.Method.invoke(Method.java:372)\nat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:913)\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:706)\n```\n\nI'm happy to help debug this with a custom build of realm-java with additional debug code next week, so let me know if there's anything in particular I should do to help. \nObviously trying to narrow it down to a simple test case would be ideal but I won't be able to spend significant time doing anything like that until later next week.\n\nCheers,\nAndrew\n", "url": "https://github.com/realm/realm-java/issues/1608", "user": "beveradb", "labels": ["T-Bug"], "created": "2015-10-16 15:32:53", "closed": "2015-10-19 06:14:10", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Crash: Unrecoverable error. basic_string::_S_create in io_realm_internal_table.cpp line 1433", "body": "Getting a few crash reports of the following. \n\nio.realm.exceptions.RealmError: Unrecoverable error. basic_string::_S_create in io_realm_internal_table.cpp line 1433\n       at io.realm.internal.Table.nativeGetName(Table.java)\n       at io.realm.internal.Table.getName(Table.java:1470)\n       at io.realm.internal.Table.getPrimaryKey(Table.java:627)\n       at io.realm.internal.Table.hasPrimaryKey(Table.java:653)\n       at io.realm.Realm.checkHasPrimaryKey(Realm.java:1009)\n       at io.realm.Realm.copyToRealmOrUpdate(Realm.java:760)\n\n0) Using snapshot realm-android-0.83.1-20151012.100616-17\n1) No encryption\n2) Using only Armv7a librealm-jni.so\n3) Realm Table/Object def\n\n``` java\n    @PrimaryKey\n    private long a;\n\n    @Index\n    private int b;\n\n    @Index\n    private int c;\n\n    @Required\n    private String d;\n\n    @Index\n    private int e;\n```\n\n4) Due to the very low crash rate of this bug, not possible to reproduce on our devices.\n", "url": "https://github.com/realm/realm-java/issues/1604", "user": "diegomontoya", "labels": ["T-Bug"], "created": "2015-10-16 02:03:47", "closed": "2015-11-02 10:46:46", "commits": {}, "ttf": 17.00027777777778, "commitsDetails": []}, {"title": "RealmQuery.isEmpty()", "body": "After introducing Null support, we redefined the semantics of `isNull`. This unfortunately meant removing the option of doing `isNull(\"list\")` to check for 0 items.\n\nThis means that people no longer can check for the empty list. A proposed fix for this is adding `isEmpty()` which also has uses for other datatypes.\n\n```\nrealm.where(Foo.class).isEmpty(\"list\").findAll(); // Find all lists with 0 items\nrealm.where(Foo.class).isEmpty(\"str\").findAll(); // Find all empty but non-null strings \"\"\nrealm.where(Foo.class).isEmpty(\"byteArray\").findAll(); // Find all non-null, 0-length blobs\nrealm.where(Foo.class).isEmpty(\"integer\").findAll(); // Throw IllegalArgumentException\n```\n", "url": "https://github.com/realm/realm-java/issues/1601", "user": "cmelchior", "labels": ["T-Bug"], "created": "2015-10-15 13:40:56", "closed": "2015-10-19 11:47:28", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "io.realm.internal.Table.finalize() timed out after 10 seconds", "body": "Issur for Kakao Hello\nio.realm.internal.Table.finalize() timed out after 10 seconds\n- Number 1 frequent issue on crash report\n- No route to reproduce\n- Galaxy S6, Galaxy S6 Edge, Galaxy S6 Edge+\n- OS version 5.1.1\n- reported by  @jungilhan\n\n```\njava.util.concurrent.TimeoutException: io.realm.internal.Table.finalize() timed out after 10 seconds\n    at io.realm.internal.Table.finalize(SourceFile:121)\n    at java.lang.Daemons$FinalizerDaemon.doFinalize(Daemons.java:206)\n    at java.lang.Daemons$FinalizerDaemon.run(Daemons.java:189)\n    at java.lang.Thread.run(Thread.java:818)\n```\n", "url": "https://github.com/realm/realm-java/issues/1599", "user": "tebica", "labels": ["T-Bug"], "created": "2015-10-15 04:56:29", "closed": "2016-03-18 08:48:02", "commits": {}, "ttf": 155.00027777777777, "commitsDetails": []}, {"title": "Illegal Argument Exception encountered when compressing a Realm file created by version 0.83.0", "body": "Hi peeps,\n\nI am currently running into an `IllegalArgumentException` indicating that the format of the Realm file is invalid when I am trying to call `Realm.compactRealm(realmConfiguration...)` before I use the realm file.\n\nI have a sample project to demonstrate the crash here: https://github.com/creativepsyco/sample-realm-crash/\n\nEssentially I am trying to compact the realm file before it is ever used in the app.\n\nSteps to reproduce:\n1. Clone the project from https://github.com/creativepsyco/sample-realm-crash/\n2. Compile and run. It will not crash because realm version is `0.82.2`\n3. Now in `build.gradle` edit the version to `0.83.0`\n4. Compile and run the app. \n5. It crashes with the stack trace:\n\n```\n FATAL EXCEPTION: main\n Process: mohitkanwal.com.examplerealm, PID: 28687\n java.lang.RuntimeException: Unable to start activity\nComponentInfo{mohitkanwal.com.examplerealm/mohitkanwal.com.examplerealm.MainActivity}:\\\njava.lang.IllegalArgumentException: Illegal Argument: Invalid format of Realm file.\n     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3119)\n     at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3218)\n     at android.app.ActivityThread.access$1000(ActivityThread.java:198)\n     at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1676)\n     at android.os.Handler.dispatchMessage(Handler.java:102)\n     at android.os.Looper.loop(Looper.java:145)\n     at android.app.ActivityThread.main(ActivityThread.java:6837)\n     at java.lang.reflect.Method.invoke(Native Method)\n     at java.lang.reflect.Method.invoke(Method.java:372)\n     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1404)\n     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1199)\n  Caused by: java.lang.IllegalArgumentException: Illegal Argument: Invalid format of Realm file.\n     at io.realm.internal.SharedGroup.createNativeWithImplicitTransactions(Native Method)\n     at io.realm.internal.SharedGroup.<init>(SharedGroup.java:68)\n     at io.realm.internal.SharedGroupManager.<init>(SharedGroupManager.java:49)\n     at io.realm.BaseRealm.<init>(BaseRealm.java:87)\n     at io.realm.Realm.<init>(Realm.java:151)\n     at io.realm.Realm.createAndValidate(Realm.java:279)\n     at io.realm.Realm.create(Realm.java:247)\n     at io.realm.Realm.getInstance(Realm.java:219)\n     at mohitkanwal.com.examplerealm.ContactHelper.getMeARealmFile(ContactHelper.java:53)\n     at mohitkanwal.com.examplerealm.ContactHelper.getAllContacts(ContactHelper.java:64)\n     at mohitkanwal.com.examplerealm.MainActivity.onCreate(MainActivity.java:25)\n     at android.app.Activity.performCreate(Activity.java:6500)\n     at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1120)\n     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3072)\n     at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3218)\u00a0\n```\n\nIs the `SharedGroupManager.compact()` implementation compatible with the new format of the Realm File? Right now it seems to be unusable with any Realm created by `v0.83` or `v0.82.2` \n\nRegards\nMohit\n", "url": "https://github.com/realm/realm-java/issues/1581", "user": "creativepsyco", "labels": ["T-Bug"], "created": "2015-10-12 09:14:55", "closed": "2015-10-15 18:55:10", "commits": {"0587c950977045ac27b3463c74565fd292ff3c98": {"commitGHEventType": "referenced", "commitUser": "kneth"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "0587c950977045ac27b3463c74565fd292ff3c98", "commitGHEventType": "referenced", "commitUser": "kneth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "Accessing RealmList after container deleting container object triggers native crash", "body": "`dogs.add(dog);` in code below triggers native crash.\n\n```\nOwner owner = testRealm.where(Owner.class).findFirst();\nRealmList<Dog> dogs = owner.getDogs();\ntestRealm.beginTransaction();\n{\n    owner.removeFromRealm();\n}\ntestRealm.commitTransaction();\n\ntestRealm.beginTransaction();\n{\n    Dog dog = testRealm.createObject(Dog.class);\n    dog.setName(\"Dog\");\n    dogs.add(dog);\n}\ntestRealm.commitTransaction();\n```\n", "url": "https://github.com/realm/realm-java/issues/1561", "user": "zaki50", "labels": ["T-Bug"], "created": "2015-10-09 06:17:19", "closed": "2015-10-09 10:54:39", "commits": {"a4a0bd80079f3ff15b162b72cb5bc0f9d6c8ce44": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "eb65248d8e563d9331337ef65111fbddc8ae0734": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "3ae944c000253a790f4355c82d315a2a041d4cb9": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a4a0bd80079f3ff15b162b72cb5bc0f9d6c8ce44", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "eb65248d8e563d9331337ef65111fbddc8ae0734", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["0c1d86e2d6d7a01e6e64d6fbd9f7f98c109928b9"], "nameRev": "eb65248d8e563d9331337ef65111fbddc8ae0734 tags/v0.84.0~39^2", "commitMessage": "Fix native crash or wrong exception in RealmList.\n\nThis commit fixes #1561\n\nMethods listed below in RealmList now throws IllegalStateException if parent object has been removed or the Realm instance has been closed.\n\n* add(int,RealmOject)\n* add(RealmObject)\n* set(int,RealmObject)\n* move(int,int)\n* clear()\n* remove(int)\n* remove(int)\n* remove(RealmObject)\n* removeAll(Collection)\n* get(int)\n* first()\n* last()\n* size()\n* where()\n\nRealmList#toString() now returns \"<ClassName>@[invalid]\" if container object has been removed or Realm instance has been closed.\n", "commitDateTime": "2015-10-09 19:22:20", "authoredDateTime": "2015-10-09 18:02:42", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "realm-jni/src/io_realm_internal_LinkView.cpp", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "realm-jni/src/io_realm_internal_LinkView.h", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "realm/src/androidTest/java/io/realm/RealmListTest.java", "insertions": 192, "deletions": 0, "lines": 192}, {"filePath": "realm/src/main/java/io/realm/RealmList.java", "insertions": 48, "deletions": 12, "lines": 60}, {"filePath": "realm/src/main/java/io/realm/internal/LinkView.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmListTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmListTest.createDeletedRealmList()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTest.testAddAtAfterContainerObjectRemoved()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTest.testAddAfterContainerObjectRemoved()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTest.testSetAfterContainerObjectRemoved()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTest.testMoveAfterContainerObjectRemoved()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTest.testClearAfterContainerObjectRemoved()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTest.testRemoveAtAfterContainerObjectRemoved()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTest.testRemoveObjectAfterContainerObjectRemoved()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTest.testRemoveAllAfterContainerObjectRemoved()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTest.testGetAfterContainerObjectRemoved()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTest.testFirstAfterContainerObjectRemoved()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTest.testLastAfterContainerObjectRemoved()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTest.testSizeAfterContainerObjectRemoved()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTest.testWhereAfterContainerObjectRemoved()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmListTest.testToStringAfterContainerObjectRemoved()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmList.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmList.first()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "io.realm.RealmList.last()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "io.realm.RealmList.isAttached()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmList.checkIfViewAttached()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmList.toString()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmList.add(int,io.realm.RealmObject)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmList.add(io.realm.RealmObject)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmList.set(int,io.realm.RealmObject)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmList.move(int,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmList.clear()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmList.remove(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmList.get(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmList.size()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmList.where()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LinkView.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.LinkView.isAttached()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.LinkView.nativeIsAttached(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "3ae944c000253a790f4355c82d315a2a041d4cb9", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["eb65248d8e563d9331337ef65111fbddc8ae0734"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 71.0, "deletions": 12.0, "lines": 83.0, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 27.0, "UPD": 0.0, "INS": 18.0, "MOV": 7.0, "DEL": 2.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 16}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm-jni/src/io_realm_internal_LinkView.h", "realm/src/main/java/io/realm/internal", "realm-jni/src/io_realm_internal_LinkView.cpp", "realm/src/main/java/io/realm"], "changesInPackagesSPOON": ["io.realm.RealmList.last()", "io.realm.RealmList.isAttached()", "io.realm.RealmList.where()", "io.realm.internal.LinkView.nativeIsAttached(long)", "io.realm.RealmList.add(int,io.realm.RealmObject)", "io.realm.RealmList.get(int)", "io.realm.RealmList.checkIfViewAttached()", "io.realm.internal.LinkView.isAttached()", "io.realm.RealmList.move(int,int)", "io.realm.RealmList.clear()", "io.realm.RealmList.remove(int)", "io.realm.RealmList.add(io.realm.RealmObject)", "io.realm.RealmList.size()", "io.realm.RealmList.toString()", "io.realm.RealmList.set(int,io.realm.RealmObject)", "io.realm.RealmList.first()"]}, {"title": "Realm is null (SIGSEGV) after updating to 0.83.0", "body": "After removing a RealmObject using `.removeFromRealm()`, on the next(?) query of the Realm I'm getting a crash:\n\n```\njava.lang.NullPointerException: Attempt to invoke virtual method 'io.realm.RealmQuery io.realm.Realm.where(java.lang.Class)' on a null object reference\n```\n\nThis is also sometimes accompanied with the following message: `Fatal signal 11 (SIGSEGV)`, so it looks like there is a crash in Realm's internals after performing the delete, that causes the Realm to be nulled.\n\nI'm not doing anything especially fancy - just deleting the object. I do have a fair number of Realm change listeners going while this is happening, but I'm checking if objects are valid in those before using them. I'm using a single realm per activity, so at the point of the crash I'll have at most 2 open.\n\nNot certain if this is related to 0.83.0 - with the upgrade I am now using `isValid()` in more places as it now [behaves as expected](https://github.com/realm/realm-java/issues/1393).\n", "url": "https://github.com/realm/realm-java/issues/1554", "user": "BendyWalker", "labels": ["T-Bug"], "created": "2015-10-08 15:16:45", "closed": "2015-11-09 12:08:28", "commits": {}, "ttf": 31.00027777777778, "commitsDetails": []}, {"title": "\"Application Not Responding\" (ANR) issue", "body": "This is from Korean app called [Kakao Hello](http://www.kakao.com/services/57)\n\nGalaxy S6, Galaxy S6 Edge, Galaxy S6 Edge+, Galaxy Note5 (OS  5.1.1)\n- Reproduceable sometimes when contact tab scrolled or touching the screen\n- call log last call stack stopped at `nativeGetString(), nativeIsNull()`\n- They this function is not returned but blocked?\n## ANR LOG 1 (Main thread)\n\n```\n\nDALVIK THREADS (59):\n\"main\" prio=5 tid=1 Native\n| group=\"main\" sCount=1 dsCount=0 obj=0x88024000 self=0x7f82ca6000\n| sysTid=27763 nice=-6 cgrp=default sched=0/0 handle=0x7f86a95e30\n| state=R schedstat=( 0 0 0 ) utm=7487 stm=24231 core=6 HZ=100\n| stack=0x7fe93a0000-0x7fe93a2000 stackSize=8MB\n| held mutexes=\nkernel: (couldn't read /proc/self/task/27763/stack)\nnative: #00 pc 000cf200 /data/app/com.kakao.hello-1/lib/arm64/librealm-jni.so (AES_decrypt+764)\nnative: #01 pc 000cfa90 /data/app/com.kakao.hello-1/lib/arm64/librealm-jni.so (CRYPTO_cbc128_decrypt+980)\nat io.realm.internal.UncheckedRow.nativeGetString(Native method)\nat io.realm.internal.UncheckedRow.getString(SourceFile:134)\nat io.realm.RealmBizPlaceRealmProxy.getExtra(SourceFile:131)\nat com.kakao.hello.data.api.model.BizPlace.valueOf(SourceFile:84)\nat com.kakao.hello.data.api.model.Contact$Ui.valueOf(SourceFile:473)\nat com.kakao.hello.ui.main.contact.ContactListAdapter.a(SourceFile:170)\nat com.kakao.hello.ui.main.contact.ContactListAdapter.onBindViewHolder(SourceFile:145)\nat android.support.v7.widget.RecyclerView$Adapter.onBindViewHolder(SourceFile:5277)\nat android.support.v7.widget.RecyclerView$Adapter.bindViewHolder(SourceFile:5310)\nat android.support.v7.widget.RecyclerView$Recycler.a(SourceFile:4568)\n\nat android.support.v7.widget.RecyclerView$Recycler.getViewForPosition(SourceFile:4461)\nat ahc.a(SourceFile:1962)\nat android.support.v7.widget.LinearLayoutManager.a(SourceFile:1371)\nat android.support.v7.widget.LinearLayoutManager.a(SourceFile:1334)\nat android.support.v7.widget.LinearLayoutManager.onLayoutChildren(SourceFile:538)\nat android.support.v7.widget.RecyclerView.i(SourceFile:2847)\nat android.support.v7.widget.RecyclerView.onLayout(SourceFile:3145)\n```\n## ANR LOG 2 (Main thread)\n\n```\nDALVIK THREADS (34):\n\"main\" prio=5 tid=1 Native\n| group=\"main\" sCount=1 dsCount=0 obj=0x891c6e00 self=0x7f928a6000\n| sysTid=28252 nice=0 cgrp=default sched=0/0 handle=0x7f967f9e30\n| state=R schedstat=( 0 0 0 ) utm=1435 stm=7021 core=7 HZ=100\n| stack=0x7ff24a0000-0x7ff24a2000 stackSize=8MB\n| held mutexes=\nkernel: (couldn't read /proc/self/task/28252/stack)\nnative: #00 pc 000cf200 /data/app/com.kakao.hello-1/lib/arm64/librealm-jni.so (AES_decrypt+764)\nnative: #01 pc 000cfa90 /data/app/com.kakao.hello-1/lib/arm64/librealm-jni.so (CRYPTO_cbc128_decrypt+980)\nat io.realm.internal.TableQuery.nativeIsNull(Native method)\nat io.realm.internal.TableQuery.isNull(SourceFile:682)\nat io.realm.RealmQuery.isNull(SourceFile:186)\nat io.realm.RealmQuery.isNotNull(SourceFile:198)\nat com.kakao.hello.presenter.main.at.AtPresenterImpl.getMyBizPlaceList(SourceFile:195)\nat com.kakao.hello.ui.main.at.AtFragment.onCreateView(SourceFile:125)\nat android.support.v4.app.Fragment.a(SourceFile:1962)\nat fb.a(SourceFile:1026)\nat fb.a(SourceFile:1207)\nat android.support.v4.app.BackStackRecord.run(SourceFile:738)\nat fb.execPendingActions(SourceFile:1572)\nat fb.executePendingTransactions(SourceFile:545)\nat android.support.v4.app.FragmentPagerAdapter.finishUpdate(SourceFile:141)\nat android.support.v4.view.ViewPager.a(SourceFile:1106)\nat android.support.v4.view.ViewPager.c(SourceFile:952)\nat android.support.v4.view.ViewPager.onMeasure(SourceFile:1474)\n```\n", "url": "https://github.com/realm/realm-java/issues/1547", "user": "tebica", "labels": ["T-Bug"], "created": "2015-10-07 17:57:52", "closed": "2015-11-19 13:47:27", "commits": {}, "ttf": 42.000277777777775, "commitsDetails": []}, {"title": "UnsatisfiedLinkError: Native method not found: nativeBeginImplicit", "body": "Hi!\n\nNext \"popular\" crash reported from our crash analytics tools for version 82.2(and previous) is:\n\nFatal Exception: java.lang.UnsatisfiedLinkError\nNative method not found: io.realm.internal.SharedGroup.nativeBeginImplicit:(J)J\n\njava.lang.UnsatisfiedLinkError: Native method not found: \nio.realm.internal.SharedGroup.nativeBeginImplicit:(J)J\n       at io.realm.internal.SharedGroup.nativeBeginImplicit(SharedGroup.java)\n       at io.realm.internal.SharedGroup.beginImplicitTransaction(SharedGroup.java:117)\n       at io.realm.Realm.(Realm.java:207)\n       at io.realm.Realm.createAndValidate(Realm.java:594)\n       at io.realm.Realm.create(Realm.java:564)\n       at io.realm.Realm.getInstance(Realm.java:537)\n\nSystem versions: 4.4.3, 4.4.4\nDevices: Motorola XT1033, XT1040, XT1069\n\nWe using Dagger2, but this should'nt imply any problems.\n", "url": "https://github.com/realm/realm-java/issues/1535", "user": "datrixo", "labels": ["T-Bug"], "created": "2015-10-06 06:02:03", "closed": "2016-01-08 07:09:17", "commits": {}, "ttf": 94.00027777777778, "commitsDetails": []}, {"title": "Couldn't load realm-jni (io.realm.internal.RealmCore.loadLibrary) 0.82.2", "body": "Hi!\n\nOur crash analytic tool reported problems with loading realm-jni for version 0.82.2 (and previous also). Unfortunetly most of our crashes comes from realm.io library. We don't have any more accurate data for this bug.\n\nRealmCore.java line 114\nio.realm.internal.RealmCore.loadLibrary\n\njava.lang.ExceptionInInitializerError\n       at io.realm.Realm.(Realm.java:205)\n       at io.realm.Realm.createAndValidate(Realm.java:594)\n       at io.realm.Realm.create(Realm.java:564)\n       at io.realm.Realm.getInstance(Realm.java:537)...\n\nCaused by: java.lang.UnsatisfiedLinkError: Couldn't load realm-jni: findLibrary returned null\n       at java.lang.Runtime.loadLibrary(Runtime.java:365)\n       at java.lang.System.loadLibrary(System.java:535)\n       at io.realm.internal.RealmCore.loadLibrary(RealmCore.java:114)\n       at io.realm.internal.SharedGroup.(SharedGroup.java:35)\n       at io.realm.Realm.(Realm.java:205)\n       at io.realm.Realm.createAndValidate(Realm.java:594)\n       at io.realm.Realm.create(Realm.java:564)\n       at io.realm.Realm.getInstance(Realm.java:537)\n", "url": "https://github.com/realm/realm-java/issues/1534", "user": "datrixo", "labels": ["T-Bug", "T-Help"], "created": "2015-10-06 05:40:02", "closed": "2016-01-22 14:17:43", "commits": {}, "ttf": 108.00027777777778, "commitsDetails": []}, {"title": "Two configurations with different schemas are trying to open the same Realm file.", "body": "Hi!\n\nI'm running into a random issue with captioned error when I use two Realms with different configurations (without overlapping modules for each configuration). Any idea for the cause of the error?\n\nThis error is not always reproducible and it has appeared under some random occasions on Android 4.3 and 5.1 with 0.82.2.\n\nThanks for your help!\n", "url": "https://github.com/realm/realm-java/issues/1490", "user": "InfinityApps", "labels": ["T-Bug"], "created": "2015-09-23 13:25:39", "closed": "2015-10-13 12:33:51", "commits": {"f9885883419615fcecf21ecccd6135c31e1a3de5": {"commitGHEventType": "closed", "commitUser": "zaki50"}}, "ttf": 19.00027777777778, "commitsDetails": [{"commitHash": "f9885883419615fcecf21ecccd6135c31e1a3de5", "commitGHEventType": "closed", "commitUser": "zaki50", "commitParents": ["43cbf876e32bc6f439b955d7952531eecee9b4e5", "95685d2be3d34b91e1e228f1397c0bcf025e5032"], "nameRev": "f9885883419615fcecf21ecccd6135c31e1a3de5 tags/v0.84.0~28", "commitMessage": "Merge pull request #1587 from realm/my-fix-1490\n\nFix #1490 . Changed the return type of RealmProxyMediator#getModelClasses() to Set in order to guarantee its contents unordered and unique.", "commitDateTime": "2015-10-13 21:33:50", "authoredDateTime": "2015-10-13 21:33:50", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyMediatorGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "realm-annotations-processor/src/test/resources/io/realm/RealmDefaultModuleMediator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "realm/src/androidTest/java/io/realm/MediatorTest.java", "insertions": 84, "deletions": 0, "lines": 84}, {"filePath": "realm/src/androidTest/java/io/realm/RealmConfigurationTest.java", "insertions": 25, "deletions": 0, "lines": 25}, {"filePath": "realm/src/androidTest/java/io/realm/entities/AnimalModule.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "realm/src/androidTest/java/io/realm/entities/HumanModule.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "realm/src/main/java/io/realm/Realm.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "realm/src/main/java/io/realm/internal/RealmProxyMediator.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "realm/src/main/java/io/realm/internal/modules/CompositeMediator.java", "insertions": 4, "deletions": 7, "lines": 11}, {"filePath": "realm/src/main/java/io/realm/internal/modules/FilterableMediator.java", "insertions": 3, "deletions": 4, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmProxyMediatorGenerator.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.generate()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitFields(com.squareup.javawriter.JavaWriter)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitGetClassModelList(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmDefaultModuleMediator.java", "spoonMethods": [{"spoonMethodName": "io.realm.DefaultRealmModuleMediator", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.DefaultRealmModuleMediator.getModelClasses()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MediatorTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.MediatorTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmConfigurationTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmConfigurationTest.testEqualsWithCustomModules()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmConfigurationTest.testHashCodeWithCustomModules()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AnimalModule.java", "spoonMethods": [{"spoonMethodName": "io.realm.entities.AnimalModule", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HumanModule.java", "spoonMethods": [{"spoonMethodName": "io.realm.entities.HumanModule", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Realm.java", "spoonMethods": [{"spoonMethodName": "io.realm.Realm.setupColumnIndices(io.realm.Realm)", "TOT": 7, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 2}]}, {"spoonFilePath": "RealmProxyMediator.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.RealmProxyMediator.getModelClasses()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CompositeMediator.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.modules.CompositeMediator.getModelClasses()", "TOT": 7, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 3}]}, {"spoonFilePath": "FilterableMediator.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.modules.FilterableMediator.getModelClasses()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.modules.FilterableMediator", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "object files in realm-jni remain when invoking clean task", "body": "There are two problems.\n\nOne is that clean task in realm-jni is not called from root project.\nOther is that clean task in realm-jni uses file globbing but it does not work.\n\nI sent two PRs that fixes these problems.\n#1479, #1480\n", "url": "https://github.com/realm/realm-java/issues/1481", "user": "zaki50", "labels": ["T-Bug"], "created": "2015-09-19 07:33:42", "closed": "2015-09-23 12:03:56", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Different instances with same configuration & different thread return same handler", "body": "Different instances of Realm sharing the same configuration living in different threads should have different handlers\n", "url": "https://github.com/realm/realm-java/issues/1467", "user": "nhachicha", "labels": ["T-Bug"], "created": "2015-09-11 00:56:17", "closed": "2015-09-23 12:10:18", "commits": {"13f41c5f99c6e8fe6d79b4fad997b49a63aaad2f": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}, "3ad29f3eb1d286af69423f343f2732cf09918d6e": {"commitGHEventType": "referenced", "commitUser": "cmelchior"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "13f41c5f99c6e8fe6d79b4fad997b49a63aaad2f", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": ["c137bc21de7cbff99e598eba7a5f199df6d0cd1f"], "nameRev": "13f41c5f99c6e8fe6d79b4fad997b49a63aaad2f tags/v0.83.0~15^2~8", "commitMessage": "fix for #1467\n", "commitDateTime": "2015-09-11 02:17:41", "authoredDateTime": "2015-09-11 02:17:41", "commitGitStats": [{"filePath": "realm/src/androidTest/java/io/realm/NotificationsTest.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "realm/src/main/java/io/realm/Realm.java", "insertions": 4, "deletions": 9, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "NotificationsTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.NotificationsTest.testSameConfigurationDifferentHandler()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Realm.java", "spoonMethods": [{"spoonMethodName": "io.realm.Realm.getHandler()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 3}, {"spoonMethodName": "io.realm.Realm.close()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "3ad29f3eb1d286af69423f343f2732cf09918d6e", "commitGHEventType": "referenced", "commitUser": "cmelchior", "commitParents": ["287a9472ea4bb2696f8a8fd2269fc52a33f9b79b", "f74567a9dceeafcdaa1e1756d9fee22571f4a362"], "nameRev": "3ad29f3eb1d286af69423f343f2732cf09918d6e tags/v0.83.0~15", "commitMessage": "Merge pull request #1469 from realm/nh-fix-1467\n\nfix for #1467", "commitDateTime": "2015-09-23 14:10:18", "authoredDateTime": "2015-09-23 14:10:18", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "realm/src/androidTest/java/io/realm/NotificationsTest.java", "insertions": 78, "deletions": 4, "lines": 82}, {"filePath": "realm/src/main/java/io/realm/Realm.java", "insertions": 4, "deletions": 14, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "NotificationsTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.NotificationsTest.DISABLEDtestCloseClearingHandlerMessages().8.call()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.NotificationsTest.testHandlerNotRemovedToSoon()", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 3}, {"spoonMethodName": "io.realm.NotificationsTest.testDoNotUseClosedHandler()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Realm.java", "spoonMethods": [{"spoonMethodName": "io.realm.Realm", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.Realm.getHandler()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.Realm.close()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["13f41c5f99c6e8fe6d79b4fad997b49a63aaad2f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 9, "lines": 13, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/src/main/java/io/realm"], "changesInPackagesSPOON": ["io.realm.Realm.close()", "io.realm.Realm.getHandler()"]}, {"title": "columnIndices are not populated causing NPE", "body": "https://github.com/realm/realm-java/pull/1434 introduced an optimisation to avoid validating a Realm more than once (if opened with the same configuration from another thread for example).\nthis cause  `createAndValidate` to be called once, still this is problematic as the second Realm will not populate `columnIndices` attribute which is used to lookup columns, causing a NPE \n", "url": "https://github.com/realm/realm-java/issues/1466", "user": "nhachicha", "labels": ["T-Bug"], "created": "2015-09-10 23:12:02", "closed": "2015-09-11 10:51:04", "commits": {"9f70aef635d9366fa2fb5ee68bb7ae6e98454e77": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}, "abdab922afcd77bfbaf180f4f231df6ba920e880": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}, "eedbb32f92e292806147f7515e4a84b4bf33a548": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "9f70aef635d9366fa2fb5ee68bb7ae6e98454e77", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": ["877aa8b8e1fe05a6c146379f93f92f5cd274ded1"], "nameRev": "9f70aef635d9366fa2fb5ee68bb7ae6e98454e77 tags/v0.84.0~14^2~45", "commitMessage": "add fix for #1466\n", "commitDateTime": "2015-09-11 01:15:56", "authoredDateTime": "2015-09-11 01:15:56", "commitGitStats": [{"filePath": "realm/src/androidTest/java/io/realm/RealmTest.java", "insertions": 60, "deletions": 0, "lines": 60}, {"filePath": "realm/src/main/java/io/realm/Realm.java", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmTest.testProcessLocalListenersAfterRefresh()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTest.testProcessLocalListenersAfterRefresh().12", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTest.testProcessLocalListenersAfterRefresh().12.run()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTest.testColumnIndicesIsPopulatedWhenSkippingInitialization()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTest.testProcessLocalListenersAfterRefresh().13.run()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Realm.java", "spoonMethods": [{"spoonMethodName": "io.realm.Realm.loadMediatorClasses(io.realm.Realm)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.createAndValidate(io.realm.RealmConfiguration,boolean,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "abdab922afcd77bfbaf180f4f231df6ba920e880", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": ["c137bc21de7cbff99e598eba7a5f199df6d0cd1f"], "nameRev": "abdab922afcd77bfbaf180f4f231df6ba920e880 tags/v0.83.0~20^2~1", "commitMessage": "add fix for #1466\n", "commitDateTime": "2015-09-11 01:18:30", "authoredDateTime": "2015-09-11 01:15:56", "commitGitStats": [{"filePath": "realm/src/androidTest/java/io/realm/RealmTest.java", "insertions": 60, "deletions": 0, "lines": 60}, {"filePath": "realm/src/main/java/io/realm/Realm.java", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmTest.testProcessLocalListenersAfterRefresh()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTest.testProcessLocalListenersAfterRefresh().12", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTest.testProcessLocalListenersAfterRefresh().12.run()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTest.testColumnIndicesIsPopulatedWhenSkippingInitialization()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTest.testProcessLocalListenersAfterRefresh().13.run()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Realm.java", "spoonMethods": [{"spoonMethodName": "io.realm.Realm.loadMediatorClasses(io.realm.Realm)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.createAndValidate(io.realm.RealmConfiguration,boolean,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "eedbb32f92e292806147f7515e4a84b4bf33a548", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": ["c137bc21de7cbff99e598eba7a5f199df6d0cd1f", "7707cc470f728bdae857fab49786b1577140e45b"], "nameRev": "eedbb32f92e292806147f7515e4a84b4bf33a548 tags/v0.83.0~20", "commitMessage": "Merge pull request #1468 from realm/nh-fix-1466\n\nadd fix for #1466", "commitDateTime": "2015-09-11 11:49:48", "authoredDateTime": "2015-09-11 11:49:48", "commitGitStats": [{"filePath": "realm/src/androidTest/java/io/realm/RealmTest.java", "insertions": 58, "deletions": 0, "lines": 58}, {"filePath": "realm/src/main/java/io/realm/Realm.java", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmTest.testProcessLocalListenersAfterRefresh()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTest.testProcessLocalListenersAfterRefresh().12", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTest.testProcessLocalListenersAfterRefresh().12.run()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTest.testColumnIndicesIsPopulatedWhenSkippingInitialization()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmTest.testProcessLocalListenersAfterRefresh().13.run()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Realm.java", "spoonMethods": [{"spoonMethodName": "io.realm.Realm.loadMediatorClasses(io.realm.Realm)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.createAndValidate(io.realm.RealmConfiguration,boolean,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9f70aef635d9366fa2fb5ee68bb7ae6e98454e77"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 0, "lines": 9, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/src/main/java/io/realm"], "changesInPackagesSPOON": ["io.realm.Realm.createAndValidate(io.realm.RealmConfiguration,boolean,boolean)", "io.realm.Realm.loadMediatorClasses(io.realm.Realm)"]}, {"title": "Long deleting records", "body": "Hi!\n\nThere is a basis Realm Java 0.82.2.\nTable Author - 1 record\nTable Books - 46 entries associated with one entry Author\n\nCode:\nRealmResults<Authors> author = realm.where(Authors.class).equalTo(\"url_base\", url_base).findAll();\nRealmResults<Books> books = realm.where(Books.class).equalTo(\"author.url_base\", url_base).findAll();\n\nrealm.beginTransaction();\nbooks.clear();\nauthor.clear();\nrealm.commitTransaction();\n\nDeleting records time is from 2 to 8 minutes.\nWith what it can be connected?\nThank you!\n", "url": "https://github.com/realm/realm-java/issues/1462", "user": "crysan", "labels": ["T-Bug"], "created": "2015-09-10 02:54:54", "closed": "2015-10-28 19:59:00", "commits": {}, "ttf": 48.000277777777775, "commitsDetails": []}, {"title": "DynamicRealmObject setObject() does not check types properly", "body": "In `DynamicRealmObject`'s `setObject(String fieldName, DynamicRealmObject value)`, the type of the parameter should be compared against the field's defined type. Instead, it is being compared against the type of the object itself.\n\nThe offending lines are in DynamicRealmObject.java lines 404-409.\n", "url": "https://github.com/realm/realm-java/issues/1451", "user": "rogerso", "labels": ["T-Bug"], "created": "2015-09-03 17:57:52", "closed": "2015-12-09 10:29:46", "commits": {}, "ttf": 96.00027777777778, "commitsDetails": []}, {"title": "Native crash \"Failure when converting short string to UTF-16 error_code = 1\" ", "body": "Realm version: 0.82.0\nEncryption: no\nAndroid version: 5.0.2\n\nWe got native crash:    \n\n```\nF/libc    (18165): Fatal signal 11 (SIGSEGV), code 1, fault addr 0x0 in tid 14454 (Retrofit-Idle)\nF/art     (18165): art/runtime/check_jni.cc:65] JNI DETECTED ERROR IN APPLICATION: input is not valid Modified  UTF-8: illegal continuation byte 0x3b\nF/art     (18165): art/runtime/check_jni.cc:65]     string: 'Unrecoverable error. Failure when converting short     string to UTF-16 error_code = 1; retcode = 0; StringData.size = 15; StringData.data = \ufffd; StringData as hex =      0xe1 0x00 0xee 0x00 0x12 0x02 0xb8 0x03 0x09 0x06 0xed 0x07 0xe1 0x00 0xee; in_begin = \ufffd; in_end = ; out_curr =   0x96cff2c0; out_end = 0x96cff320; in io_realm_internal_UncheckedRow.cpp line 137'\nF/art     (18165): art/runtime/check_jni.cc:65]     in call to ThrowNew\nF/art     (18165): art/runtime/check_jni.cc:65]     from java.lang.String io.realm.internal.UncheckedRow.   nativeGetString(long, long)\nF/art     (18165): art/runtime/check_jni.cc:65] \"realm_thread\" prio=5 tid=51 Runnable\nF/art     (18165): art/runtime/check_jni.cc:65]   | group=\"main\" sCount=0 dsCount=0 obj=0x12c0b400  self=0xa1675000\nF/art     (18165): art/runtime/check_jni.cc:65]   | sysTid=18276 nice=0 cgrp=apps sched=0/0 handle=0xb3bd1000\nF/art     (18165): art/runtime/check_jni.cc:65]   | state=R schedstat=( 7189801941 1409708139 5564 ) utm=700    stm=18 core=2 HZ=100\nF/art     (18165): art/runtime/check_jni.cc:65]   | stack=0x96bfe000-0x96c00000 stackSize=1036KB\nF/art     (18165): art/runtime/check_jni.cc:65]   | held mutexes= \"mutator lock\"(shared held)\nF/art     (18165): art/runtime/check_jni.cc:65]   native: #00 pc 00004640  /system/lib/libbacktrace_libc++.so ( UnwindCurrent::Unwind(unsigned int, ucontext*)+23)\nF/art     (18165): art/runtime/check_jni.cc:65]   native: #01 pc 00002e8d  /system/lib/libbacktrace_libc++.so ( Backtrace::Unwind(unsigned int, ucontext*)+8)\nF/art     (18165): art/runtime/check_jni.cc:65]   native: #02 pc 0023f09d  /system/lib/libart.so (  art::DumpNativeStack(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, int, char const*,    art::mirror::ArtMethod*)+68)\nF/art     (18165): art/runtime/check_jni.cc:65]   native: #03 pc 002245eb  /system/lib/libart.so (  art::Thread::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const+146)\nF/art     (18165): art/runtime/check_jni.cc:65]   native: #04 pc 000afafb  /system/lib/libart.so (art::JniAbort(    char const*, char const*)+582)\nF/art     (18165): art/runtime/check_jni.cc:65]   native: #05 pc 000b0235  /system/lib/libart.so (art::JniAbortF(   char const*, char const*, ...)+60)\nF/art     (18165): art/runtime/check_jni.cc:65]   native: #06 pc 000b268f  /system/lib/libart.so (  art::ScopedCheck::Check(bool, char const*, ...) (.constprop.128)+882)\nF/art     (18165): art/runtime/check_jni.cc:65]   native: #07 pc 000b435d  /system/lib/libart.so (  art::CheckJNI::ThrowNew(_JNIEnv*, _jclass*, char const*)+40)\nF/art     (18165): art/runtime/check_jni.cc:65]   native: #08 pc 0008a18f  /data/app/com.hive.chat.debug-2/lib/ arm/librealm-jni.so (???)\nF/art     (18165): art/runtime/check_jni.cc:65]   native: #09 pc 00021fa7  /data/app/com.hive.chat.debug-2/lib/ arm/librealm-jni.so (???)\nF/art     (18165): art/runtime/check_jni.cc:65]   native: #10 pc 0005c68f  /data/app/com.hive.chat.debug-2/lib/ arm/librealm-jni.so (Java_io_realm_internal_UncheckedRow_nativeGetString+90)\nF/art     (18165): art/runtime/check_jni.cc:65]   native: #11 pc 0068145f  /data/dalvik-cache/arm/data@app@com. hive.chat.debug-2@base.apk@classes.dex (Java_io_realm_internal_UncheckedRow_nativeGetString__JJ+110)\nF/art     (18165): art/runtime/check_jni.cc:65]   at io.realm.internal.UncheckedRow.nativeGetString(Native  method)\nF/art     (18165): art/runtime/check_jni.cc:65]   at io.realm.internal.UncheckedRow.getString(UncheckedRow. java:134)\nF/art     (18165): art/runtime/check_jni.cc:65]   at io.realm.ServerChatRealmProxy.getType(ServerChatRealmProxy.    java:74)\nF/art     (18165): art/runtime/check_jni.cc:65]   at com.playdayteam.data.mapper.ChatContainerDataMapper.   getAuthor(ChatContainerDataMapper.java:119)\nF/art     (18165): art/runtime/check_jni.cc:65]   at com.playdayteam.data.mapper.ChatContainerDataMapper.   transform(ChatContainerDataMapper.java:79)\nF/art     (18165): art/runtime/check_jni.cc:65]   at com.playdayteam.data.mapper.ChatContainerDataMapper.   transform(ChatContainerDataMapper.java:30)\nF/art     (18165): art/runtime/check_jni.cc:65]   at com.playdayteam.data.mapper.BaseDataMapper.lambda$null$2(  BaseDataMapper.java:42)\nF/art     (18165): art/runtime/check_jni.cc:65]   at com.playdayteam.data.mapper.BaseDataMapper.access$lambda$3(    BaseDataMapper.java:-1)\nF/art     (18165): art/runtime/check_jni.cc:65]   at com.playdayteam.data.mapper.BaseDataMapper$$Lambda$4.call( unavailable:-1)\nF/art     (18165): art/runtime/check_jni.cc:65]   at rx.internal.operators.OperatorMap$1.onNext(OperatorMap.    java:55)\nF/art     (18165): art/runtime/check_jni.cc:65]   at rx.internal.operators.OperatorDoOnEach$1.onNext(   OperatorDoOnEach.java:84)\nF/art     (18165): art/runtime/check_jni.cc:65]   at rx.internal.operators.OperatorMerge$MergeSubscriber.   emitScalar(OperatorMerge.java:363)\nF/art     (18165): art/runtime/check_jni.cc:65]   at rx.internal.operators.OperatorMerge$MergeSubscriber.tryEmit(   OperatorMerge.java:325)\nF/art     (18165): art/runtime/check_jni.cc:65]   at rx.internal.operators.OperatorMerge$InnerSubscriber.onNext(    OperatorMerge.java:800)\nF/art     (18165): art/runtime/check_jni.cc:65]   at rx.internal.operators. OnSubscribeFromIterable$IterableProducer.request(OnSubscribeFromIterable.java:106)\nF/art     (18165): art/runtime/check_jni.cc:65]   at rx.Subscriber.setProducer(Subscriber.java:211)\nF/art     (18165): art/runtime/check_jni.cc:65]   at rx.internal.operators.OnSubscribeFromIterable.call(    OnSubscribeFromIterable.java:50)\nF/art     (18165): art/runtime/check_jni.cc:65]   at rx.internal.operators.OnSubscribeFromIterable.call(    OnSubscribeFromIterable.java:33)\nF/art     (18165): art/runtime/check_jni.cc:65]   at rx.Observable.unsafeSubscribe(Observable.java:7713)\nF/art     (18165): art/runtime/check_jni.cc:65]   at rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(    OperatorMerge.java:231)\nF/art     (18165): art/runtime/check_jni.cc:65]   at rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(    OperatorMerge.java:140)\nF/art     (18165): art/runtime/check_jni.cc:65]   at rx.internal.operators.OperatorMap$1.onNext(OperatorMap.    java:55)\nF/art     (18165): art/runtime/check_jni.cc:65]   at rx.internal.operators.OperatorDoOnEach$1.onNext(   OperatorDoOnEach.java:84)\nF/art     (18165): art/runtime/check_jni.cc:65]   at rx.internal.operators.OperatorSubscribeOn$1$1$1.onNext(    OperatorSubscribeOn.java:76)\nF/art     (18165): art/runtime/check_jni.cc:65]   at rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber.   pollQueue(OperatorObserveOn.java:208)\nF/art     (18165): art/runtime/check_jni.cc:65]   at rx.internal.operators. OperatorObserveOn$ObserveOnSubscriber$2.call(OperatorObserveOn.java:170)\nF/art     (18165): art/runtime/check_jni.cc:65]   at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.    java:55)\nF/art     (18165): art/runtime/check_jni.cc:65]   at android.os.Handler.handleCallback(Handler.java:739)\nF/art     (18165): art/runtime/check_jni.cc:65]   at android.os.Handler.dispatchMessage(Handler.java:95)\nF/art     (18165): art/runtime/check_jni.cc:65]   at android.os.Looper.loop(Looper.java:211)\nF/art     (18165): art/runtime/check_jni.cc:65]   at android.os.HandlerThread.run(HandlerThread.java:61)\nF/art     (18165): art/runtime/check_jni.cc:65]\n```\n\nAfter that crash app didn't start and fails with:\n\n```\nI/DEBUG   (  343): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\nI/DEBUG   (  343): UUID: e14309d8-5ebe-48f7-85a5-9478375a6220\nI/DEBUG   (  343): Build fingerprint: 'Sony/D5503/D5503:5.0.2/14.5.A.0.270/3750474323:user/release-keys'\nI/DEBUG   (  343): Revision: '0'\nI/DEBUG   (  343): ABI: 'arm'\nI/DEBUG   (  343): pid: 14815, tid: 14943, name: RxNewThreadSche  >>> com.hive.chat.debug <<<\nI/DEBUG   (  343): signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0xc\nI/DEBUG   (  343):     r0 af658e00  r1 00000003  r2 af658900  r3 00000000\nI/DEBUG   (  343):     r4 af658e00  r5 9c4fc014  r6 0000000e  r7 00000003\nI/DEBUG   (  343):     r8 af658e00  r9 9ddb0db0  sl a0255e10  fp af66d480\nI/DEBUG   (  343):     ip a17d4e60  sp a0255d90  lr a17560e1  pc a17820be  cpsr 40070030\nI/DEBUG   (  343):\nI/DEBUG   (  343): backtrace:\nI/DEBUG   (  343):     #00 pc 0007a0be  /data/app/com.hive.chat.debug-2/lib/arm/librealm-jni.so\nI/DEBUG   (  343):     #01 pc 0004e0dd  /data/app/com.hive.chat.debug-2/lib/arm/librealm-jni.so\nI/DEBUG   (  343):     #02 pc 0007a017  /data/app/com.hive.chat.debug-2/lib/arm/librealm-jni.so\nI/DEBUG   (  343):     #03 pc 0004b723  /data/app/com.hive.chat.debug-2/lib/arm/librealm-jni.so\nI/DEBUG   (  343):     #04 pc 00079f49  /data/app/com.hive.chat.debug-2/lib/arm/librealm-jni.so\nI/DEBUG   (  343):     #05 pc 0004b723  /data/app/com.hive.chat.debug-2/lib/arm/librealm-jni.so\nI/DEBUG   (  343):     #06 pc 00079f0b  /data/app/com.hive.chat.debug-2/lib/arm/librealm-jni.so\nI/DEBUG   (  343):     #07 pc 0004b723  /data/app/com.hive.chat.debug-2/lib/arm/librealm-jni.so\nI/DEBUG   (  343):     #08 pc 00079f0b  /data/app/com.hive.chat.debug-2/lib/arm/librealm-jni.so\nI/DEBUG   (  343):     #09 pc 0004b723  /data/app/com.hive.chat.debug-2/lib/arm/librealm-jni.so\nI/DEBUG   (  343):     #10 pc 00079f0b  /data/app/com.hive.chat.debug-2/lib/arm/librealm-jni.so\nI/DEBUG   (  343):     #11 pc 0004b723  /data/app/com.hive.chat.debug-2/lib/arm/librealm-jni.so\nI/DEBUG   (  343):     #12 pc 00079f49  /data/app/com.hive.chat.debug-2/lib/arm/librealm-jni.so\nI/DEBUG   (  343):     #13 pc 0004b723  /data/app/com.hive.chat.debug-2/lib/arm/librealm-jni.so\nI/DEBUG   (  343):     #14 pc 000597b5  /data/app/com.hive.chat.debug-2/lib/arm/librealm-jni.so (   Java_io_realm_internal_Group_nativeGetTableNativePtr+252)\nI/DEBUG   (  343):     #15 pc 006815c9  /data/dalvik-cache/arm/data@app@com.hive.chat.debug-2@base.apk@classes.dex\n```\n", "url": "https://github.com/realm/realm-java/issues/1442", "user": "pavel-mukhanov", "labels": ["T-Bug"], "created": "2015-09-01 09:12:20", "closed": "2015-11-13 13:41:07", "commits": {}, "ttf": 73.00027777777778, "commitsDetails": []}, {"title": "RealmGridViewExample: Demo crash by java.lang.IllegalStateException.", "body": "When I click the item on GridView and exit the demo app, if you open app again, below crash error throw:\n**\n     Caused by: java.lang.IllegalStateException: It's not allowed to delete the file associated with an open Realm. Remember to close() all the instances of the Realm before deleting its file.\n            at io.realm.Realm.deleteRealm(Realm.java:1722)\n            at io.realm.examples.realmgridview.GridViewExampleActivity.onCreate(GridViewExampleActivity.java:60)\n            at android.app.Activity.performCreate(Activity.java:5283)\n            at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1088)\n            at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2307)\n**\n\nAnd when item click, below code execute:\n\n``` java\n// Update the realm object affected by the user\nRealm realm = Realm.getInstance(this);\n\n// Acquire the list of realm cities matching the name of the clicked City.\nCity city = realm.where(City.class).equalTo(\"name\", modifiedCity.getName()).findFirst();\n\n// Create a transaction to increment the vote count for the selected City in the realm\nrealm.beginTransaction();\ncity.setVotes(city.getVotes() + 1);\nrealm.commitTransaction();\n```\n\nDo we need to call close() when done using the Realm instance?\n\nRealm version: 0.82.1\n", "url": "https://github.com/realm/realm-java/issues/1437", "user": "codezjx", "labels": ["T-Bug"], "created": "2015-08-29 01:27:32", "closed": "2015-08-31 06:56:34", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "couldn't find \"librealm-jni.so\"", "body": "After the last android updates i found this error in every project i use realm\n\nthis is the stacktrace:\n\n08-25 16:03:40.457  16017-16017/it.fortech.fortechmobilepayment E/AndroidRuntime\ufe55 FATAL EXCEPTION: main\n    Process: it.fortech.fortechmobilepayment, PID: 16017\n    java.lang.UnsatisfiedLinkError: dalvik.system.PathClassLoader[DexPathList[[zip file \"/data/app/it.fortech.fortechmobilepayment-2/base.apk\"],nativeLibraryDirectories=[/vendor/lib, /system/lib]]] couldn't find \"librealm-jni.so\"\n            at java.lang.Runtime.loadLibrary(Runtime.java:366)\n            at java.lang.System.loadLibrary(System.java:988)\n            at io.realm.internal.RealmCore.loadLibrary(RealmCore.java:114)\n            at io.realm.internal.SharedGroup.<clinit>(SharedGroup.java:35)\n            at io.realm.Realm.<init>(Realm.java:205)\n            at io.realm.Realm.createAndValidate(Realm.java:594)\n            at io.realm.Realm.create(Realm.java:564)\n            at io.realm.Realm.getInstance(Realm.java:411)\n            at io.realm.Realm.getInstance(Realm.java:368)\n            at io.realm.Realm.getInstance(Realm.java:349)\n            at it.fortech.fortechmobilepayment.account.LoginActivity.onCreate(LoginActivity.java:55)\n            at android.app.Activity.performCreate(Activity.java:5990)\n            at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1106)\n            at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2278)\n            at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2387)\n            at android.app.ActivityThread.access$800(ActivityThread.java:151)\n            at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1303)\n            at android.os.Handler.dispatchMessage(Handler.java:102)\n            at android.os.Looper.loop(Looper.java:135)\n            at android.app.ActivityThread.main(ActivityThread.java:5254)\n            at java.lang.reflect.Method.invoke(Native Method)\n            at java.lang.reflect.Method.invoke(Method.java:372)\n            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:903)\n            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:698)\n\nTested on Nexus 5 device\nAndroid Studio 1.3 \nOS X 10.10.5\n", "url": "https://github.com/realm/realm-java/issues/1421", "user": "DenisBronx", "labels": ["Reproduction-Required", "T-Bug"], "created": "2015-08-25 14:11:22", "closed": "2016-03-09 13:32:42", "commits": {}, "ttf": 196.00027777777777, "commitsDetails": []}, {"title": "Calling commitTransaction twice should throw an exception", "body": "``` java\nrealm.beginTransaction()\nrealm.commitTransaction()\nrealm.commitTransaction()\n```\n\nAbove code should generate an exception.\n\nIn the latest core, a native exception will be triggered\n", "url": "https://github.com/realm/realm-java/issues/1417", "user": "beeender", "labels": ["Blocked", "T-Bug"], "created": "2015-08-24 08:25:10", "closed": "2015-10-26 11:49:36", "commits": {}, "ttf": 63.000277777777775, "commitsDetails": []}, {"title": "Main looper not getting all change events", "body": "It seems it is possible to cause a race condition in Realm which will cause the Main Looper to miss updates from background threads:\n\n```\npublic class MainActivity extends AppCompatActivity {\n\n    private RealmConfiguration config;\n    private Realm realm;\n    private RealmResults<OperationalOutputMessage> objects;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        config = new RealmConfiguration.Builder(this).build();\n        Realm.deleteRealm(config);\n        realm = Realm.getInstance(config);\n        realm.addChangeListener(new RealmChangeListener() {\n            @Override\n            public void onChange() {\n                printSize();\n\n            }\n        });\n        objects = realm.allObjects(OperationalOutputMessage.class);\n        printSize();\n\n        // Execute lots of small commits on a background thread\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n                for (int i = 0; i < 1000; i++) {\n                    OperationalOutputMessage msg = new OperationalOutputMessage();\n                    msg.setmTimeStamp(i + 1);\n                    try(Realm realm = Realm.getInstance(MainActivity.this)) {\n                        realm.beginTransaction();\n                        realm.copyToRealm(msg);\n                        realm.commitTransaction();\n                    }\n                }\n            }\n        }).start();\n    }\n\n    private void printSize() {\n        ((TextView)findViewById(R.id.text_size)).setText(\"Size: \" + objects.size());\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        realm.close();\n    }\n}\n```\n\nExpected output on the screen would be 1000 after the background thread is done. However that is not the case (usually around 600 on GenyMotion). This indicate that messages are not properly sent to the UI thread.\n", "url": "https://github.com/realm/realm-java/issues/1406", "user": "cmelchior", "labels": ["T-Bug"], "created": "2015-08-20 11:24:51", "closed": "2015-08-28 15:46:01", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Memory violation on Samsung Galaxy S6 with encrypted Realm 0.82.1", "body": "I have an issue which could be related to #1037 and #1357.\n\nEach time I write data in a `encrypted Realm` using `realm.commitTransaction();` on a `Samsung Galaxy S6 (Android 5.1.1)` I get the following error:\n\n```\n08-19 15:42:40.651    4018-4018/? E/audit\ufe55 type=1701 msg=audit(1439991760.651:232): auid=4294967295 uid=10208 gid=10208 ses=4294967295 subj=u:r:untrusted_app:s0 pid=8542 comm=\"roid.<app_name>\" reason=\"memory violation\" sig=11\n```\n\nI traced down the crash to `nativeCommitAndContinueAsRead(nativePtr);` in class `SharedGroup`. On execution of this method the error occurs and our app crashes.\n\nWe are using `0.82.1` and getting the same error on `0.83.0-SNAPSHOT` as well. \n\nThe problem is, I was trying to reproduce this error in a Hello World project, but I could not. Writing and reading data works fine. It just does not function in context with our app. I cannot even find a big difference to the Hello World project though. The error happens in the very beginning where things are not that complex. \n\nDo you have any suggestions on how this `memory violation` error might be reproduced? I have an S6 here to test anything that is needed to sort out this issue.\n\nYour help is much appreciated\nThanks\nBen\n\nHello World project that does some things randomly to try to crash the app:\n\n```\npublic class ExampleActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        Realm newRealm = Realm.getInstance(this, \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\".getBytes());\n\n        TestObject TestObject2 = newRealm.where(TestObject.class).findFirst();\n\n        TestObject testObject = new TestObject();\n        testObject.setId(23);\n        testObject.setName(\"Example\");\n\n        newRealm.beginTransaction();\n        newRealm.copyToRealm(testObject);\n        newRealm.commitTransaction();\n        newRealm.refresh();\n\n        TestObject testObject2 = newRealm.where(TestObject.class).findFirst();\n        newRealm.beginTransaction();\n        if (testObject2 != null) {\n            testObject2.setName(\"yo yo\");\n            testObject2.setId(42);\n        }\n        newRealm.commitTransaction();\n    }\n}    \n```\n", "url": "https://github.com/realm/realm-java/issues/1403", "user": "benjaminburzan", "labels": ["T-Bug"], "created": "2015-08-19 14:32:22", "closed": "2015-09-04 12:07:40", "commits": {}, "ttf": 15.000277777777777, "commitsDetails": []}, {"title": "Realm.addChangeListener doesn't work on background threads", "body": "If you do \n\n```\nnew Thread(new Runnable() {\n  public void run() {\n    Realm realm = Realm.getDefaultInstance();\n    realm.addChangeListener(listener)\n    // ...\n  }\n\n}).start();\n```\n\non a non-looper thread. That change listener will never be called unless you execute a transaction on that thread.\n\nThat behaviour seems a bit strange. The problem is that we are triggering onChange after updating the the Realm on looper-threads. That isn't possible on non-looper threads as there is no point in time updating the Realm behind users back would make sense.\n\nWe should consider doing one of the following:\n\n1) Prevent people from adding change listeners on a non-looper thread (throw exception). People would have to notify these threads in some other way.\n\n2) Document the behaviour better. \n\n3) Call onChange on non-looper threads, but without updating the Realm on that thread first.\n\n4) Something else.... ?\n", "url": "https://github.com/realm/realm-java/issues/1401", "user": "cmelchior", "labels": ["T-Bug"], "created": "2015-08-19 11:48:02", "closed": "2015-09-03 08:42:25", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "Realm Encryption armv7a.so has compat issues with libhoudini (arm to x86 translator)", "body": "I wouldn't consider this a bug in Realm encryption but it may reveal something inside realm encryption that is leading to bugs. \n\nWe are testing not packaging x86.so and instead relying on libhoudini which boundled with almost all x86 android devices to dynamically translate armv7a.so's arm code to x86 code at runtime. \n\nThis works great except with loading/using an encrypted db which causes an infinite loop situation causing test app's UI thread to stall and entire app is unresponsive. \n\nThis is easily reproduce-able on any x86 android. we are using an Asus Zenfone2 devices and Chuwi VI8.\n", "url": "https://github.com/realm/realm-java/issues/1398", "user": "diegomontoya", "labels": ["T-Bug"], "created": "2015-08-19 00:53:52", "closed": "2015-11-19 14:24:22", "commits": {}, "ttf": 92.00027777777778, "commitsDetails": []}, {"title": "isValid() doesn't behave as expected", "body": "I'm using `realm-android:0.83.0-SNAPSHOT`.\n\nWhen I run this simple code:\n\n``` java\nRealm realm = Realm.getInstance(this);\nrealm.beginTransaction();\nDog myDog = realm.createObject(Dog.class);\nmyDog.setDogName(\"myDog\");\nrealm.commitTransaction();\n\nrealm.beginTransaction();\nmyDog.removeFromRealm();\nrealm.commitTransaction();\n\nTimber.e(\"myDog still valid: \" + myDog.isValid());\n```\n\n`myDog.isValid()` throws an `IllegalStateException`\n\n``` java\n     Caused by: java.lang.IllegalStateException: Object is no longer managed by Realm. Has it been deleted?\n            at io.realm.internal.InvalidRow.getStubException(InvalidRow.java:180)\n            at io.realm.internal.InvalidRow.isAttached(InvalidRow.java:171)\n            at io.realm.RealmObject.isValid(RealmObject.java:107)\n```\n\nHow can I check if an object was removed from realm?\nOr does my little example not work because I'm calling this function from the same thread? However, I don't think that `isValid()` should ever throw such an exception.\n", "url": "https://github.com/realm/realm-java/issues/1393", "user": "markini", "labels": ["T-Bug"], "created": "2015-08-16 13:53:17", "closed": "2015-08-17 15:51:18", "commits": {"3e0fe252f498217be3ee2befeffef2be6bf8a6dc": {"commitGHEventType": "referenced", "commitUser": "kneth"}, "d054827e9e1f0e7039b53c800a0c0c2cee5ba96f": {"commitGHEventType": "referenced", "commitUser": "kneth"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "3e0fe252f498217be3ee2befeffef2be6bf8a6dc", "commitGHEventType": "referenced", "commitUser": "kneth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d054827e9e1f0e7039b53c800a0c0c2cee5ba96f", "commitGHEventType": "referenced", "commitUser": "kneth", "commitParents": ["3b8e9645228259e1321204c0ff6671b2825ba02e"], "nameRev": "d054827e9e1f0e7039b53c800a0c0c2cee5ba96f tags/v0.82.2~9^2~1", "commitMessage": "Fixes #1393\n\nUpdates due to PR feedback\n", "commitDateTime": "2015-08-17 17:30:57", "authoredDateTime": "2015-08-17 12:34:13", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/src/androidTest/java/io/realm/RealmObjectTest.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "realm/src/main/java/io/realm/internal/InvalidRow.java", "insertions": 4, "deletions": 3, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmObjectTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmObjectTest.testIsValid()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InvalidRow.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.InvalidRow.isAttached()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d054827e9e1f0e7039b53c800a0c0c2cee5ba96f"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4.0, "deletions": 3.0, "lines": 7.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2.0, "UPD": 0.0, "INS": 1.0, "MOV": 0.0, "DEL": 1.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/src/main/java/io/realm/internal"], "changesInPackagesSPOON": ["io.realm.internal.InvalidRow.isAttached()"]}, {"title": "Snapshot releases have stopped updating", "body": "http://oss.jfrog.org/oss-snapshot-local/io/realm/realm-android/0.83.0-SNAPSHOT/\n\nLast snapshot is on 8/11.\n", "url": "https://github.com/realm/realm-java/issues/1392", "user": "diegomontoya", "labels": ["T-Bug"], "created": "2015-08-16 00:24:41", "closed": "2015-08-17 06:18:39", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Crash Fatal signal 11 (SIGSEGV) at 0x00000004 (code=1) dlmalloc", "body": "Transferred from #1357 @yamingd 's comments\n\nI got this kind of crash yesterday on ('io.realm:realm-android:0.82.1' ), and catch the log as following, hope those log will be helpful, and looking forward to the solution.\n\n08-14 09:54:41.387  28759-28759/com.inno.funApp.debug A/libc\ufe55 Fatal signal 11 (SIGSEGV) at 0x00000004 (code=1), thread 28759 (.inno.funApp.debug)\n08-14 09:54:41.489      185-185/? I/DEBUG\ufe55 **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* ***\n08-14 09:54:41.489      185-185/? I/DEBUG\ufe55 Build fingerprint: 'Xiaomi/pisces/pisces:4.4.4/KTU84P/V6.6.3.0.KXCCNCF:user/release-keys'\n08-14 09:54:41.489      185-185/? I/DEBUG\ufe55 Revision: '0'\n08-14 09:54:41.489      185-185/? I/DEBUG\ufe55 pid: 28759, tid: 28759, name: .inno.funApp.debug  >>> com.inno.funApp.debug <<<\n08-14 09:54:41.489      185-185/? I/DEBUG\ufe55 signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 00000004\n08-14 09:54:41.663      185-185/? I/DEBUG\ufe55 r0 74ec7b00  r1 8446cf5a  r2 00000000  r3 00000000\n08-14 09:54:41.664      185-185/? I/DEBUG\ufe55 r4 00000000  r5 00002000  r6 00000000  r7 bea60be0\n08-14 09:54:41.664      185-185/? I/DEBUG\ufe55 r8 75e83aa8  r9 00000020  sl 75a7314c  fp 00000001\n08-14 09:54:41.665      185-185/? I/DEBUG\ufe55 ip 00000001  sp bea60b9c  lr 759deb05  pc 759d193a  cpsr 600d0030\n08-14 09:54:41.665      185-185/? I/DEBUG\ufe55 d0  75a7327075a73070  d1  7551657461646932\n08-14 09:54:41.666      185-185/? I/DEBUG\ufe55 d2  545f6c616e7265a7  d3  72657551656c6275\n08-14 09:54:41.666      185-185/? I/DEBUG\ufe55 d4  0000000800000000  d5  4024000000000000\n08-14 09:54:41.667      185-185/? I/DEBUG\ufe55 d6  40157ae147ae147b  d7  3fc0000000000000\n08-14 09:54:41.668      185-185/? I/DEBUG\ufe55 d8  408000003c800000  d9  0000000000000000\n08-14 09:54:41.668      185-185/? I/DEBUG\ufe55 d10 0000000000000000  d11 0000000000000000\n08-14 09:54:41.669      185-185/? I/DEBUG\ufe55 d12 0000000000000000  d13 0000000000000000\n08-14 09:54:41.669      185-185/? I/DEBUG\ufe55 d14 0000000000000000  d15 0000000000000000\n08-14 09:54:41.670      185-185/? I/DEBUG\ufe55 d16 99bc28b9d5dfc93c  d17 811b77e0931ea4c5\n08-14 09:54:41.670      185-185/? I/DEBUG\ufe55 d18 0000000000000010  d19 0000000008000008\n08-14 09:54:41.671      185-185/? I/DEBUG\ufe55 d20 0000000000ffffff  d21 0000000000000008\n08-14 09:54:41.671      185-185/? I/DEBUG\ufe55 d22 0000000009000000  d23 0000000000000001\n08-14 09:54:41.672      185-185/? I/DEBUG\ufe55 d24 0000000000000000  d25 0000000033000007\n08-14 09:54:41.672      185-185/? I/DEBUG\ufe55 d26 0000000000ffffff  d27 000000000000000c\n08-14 09:54:41.673      185-185/? I/DEBUG\ufe55 d28 000000000000000c  d29 000000000000000d\n08-14 09:54:41.674    4142-4142/? D/wpa_supplicant\ufe55 RX ctrl_iface - hexdump(len=11): 53 49 47 4e 41 4c 5f 50 4f 4c 4c\n08-14 09:54:41.674    4142-4142/? D/wpa_supplicant\ufe55 wlan0: Control interface command 'SIGNAL_POLL'\n08-14 09:54:41.676      185-185/? I/DEBUG\ufe55 d30 012b400001288000  d31 0000000000004000\n08-14 09:54:41.677      185-185/? I/DEBUG\ufe55 scr 20000010\n08-14 09:54:41.678      185-185/? I/DEBUG\ufe55 backtrace:\n08-14 09:54:41.678      185-185/? I/DEBUG\ufe55 #00  pc 0003393a  /data/app-lib/com.inno.funApp.debug-1/librealm-jni.so\n08-14 09:54:41.681    4142-4142/? D/wpa_supplicant\ufe55 nl80211: survey data missing!\n08-14 09:54:41.682    4142-4142/? D/wpa_supplicant\ufe55 RX ctrl_iface - hexdump(len=11): 50 4b 54 43 4e 54 5f 50 4f 4c 4c\n08-14 09:54:41.682    4142-4142/? D/wpa_supplicant\ufe55 wlan0: Control interface command 'PKTCNT_POLL'\n08-14 09:54:41.685      185-185/? I/DEBUG\ufe55 #01  pc 00040b03  /data/app-lib/com.inno.funApp.debug-1/librealm-jni.so\n08-14 09:54:41.686      185-185/? I/DEBUG\ufe55 stack:\n08-14 09:54:41.686      185-185/? I/DEBUG\ufe55 bea60b5c  00008000\n08-14 09:54:41.686      185-185/? I/DEBUG\ufe55 bea60b60  4004ee25  /system/lib/libc.so (dlmalloc)\n08-14 09:54:41.687      185-185/? I/DEBUG\ufe55 bea60b64  00000004\n08-14 09:54:41.687      185-185/? I/DEBUG\ufe55 bea60b68  75a730ec\n08-14 09:54:41.687      185-185/? I/DEBUG\ufe55 bea60b6c  75a6ae28  /data/app-lib/com.inno.funApp.debug-1/librealm-jni.so\n08-14 09:54:41.688      185-185/? I/DEBUG\ufe55 bea60b70  bea60b94  [stack]\n08-14 09:54:41.688      185-185/? I/DEBUG\ufe55 bea60b74  bea60b94  [stack]\n08-14 09:54:41.688      185-185/? I/DEBUG\ufe55 bea60b78  41576bd8  /system/lib/libdvm.so\n08-14 09:54:41.688      185-185/? I/DEBUG\ufe55 bea60b7c  41504b7b  /system/lib/libdvm.so\n08-14 09:54:41.689      185-185/? I/DEBUG\ufe55 bea60b80  425d46f0  /dev/ashmem/dalvik-heap (deleted)\n08-14 09:54:41.689      185-185/? I/DEBUG\ufe55 bea60b84  b081c1ff\n08-14 09:54:41.689      185-185/? I/DEBUG\ufe55 bea60b88  425d46f0  /dev/ashmem/dalvik-heap (deleted)\n08-14 09:54:41.690      185-185/? I/DEBUG\ufe55 bea60b8c  425d4700  /dev/ashmem/dalvik-heap (deleted)\n08-14 09:54:41.690      185-185/? I/DEBUG\ufe55 bea60b90  df0027ad\n08-14 09:54:41.690      185-185/? I/DEBUG\ufe55 bea60b94  00000000\n08-14 09:54:41.690      185-185/? I/DEBUG\ufe55 bea60b98  1140001d\n08-14 09:54:41.691      185-185/? I/DEBUG\ufe55 #00  bea60b9c  00000000\n08-14 09:54:41.691      185-185/? I/DEBUG\ufe55 ........  ........\n08-14 09:54:41.691      185-185/? I/DEBUG\ufe55 #01  bea60b9c  00000000\n08-14 09:54:41.691      185-185/? I/DEBUG\ufe55 bea60ba0  bea60be0  [stack]\n08-14 09:54:41.692      185-185/? I/DEBUG\ufe55 bea60ba4  00000001\n08-14 09:54:41.692      185-185/? I/DEBUG\ufe55 bea60ba8  bea60be0  [stack]\n08-14 09:54:41.692      185-185/? I/DEBUG\ufe55 bea60bac  759deb05  /data/app-lib/com.inno.funApp.debug-1/librealm-jni.so\n08-14 09:54:41.693      185-185/? I/DEBUG\ufe55 bea60bb0  ffffffff\n08-14 09:54:41.693      185-185/? I/DEBUG\ufe55 bea60bb4  759deeab  /data/app-lib/com.inno.funApp.debug-1/librealm-jni.so\n08-14 09:54:41.693      185-185/? I/DEBUG\ufe55 bea60bb8  ffffffff\n08-14 09:54:41.694      185-185/? I/DEBUG\ufe55 bea60bbc  00000001\n08-14 09:54:41.694      185-185/? I/DEBUG\ufe55 bea60bc0  bea60be0  [stack]\n08-14 09:54:41.694      185-185/? I/DEBUG\ufe55 bea60bc4  bea60c14  [stack]\n08-14 09:54:41.695      185-185/? I/DEBUG\ufe55 bea60bc8  75e90188\n08-14 09:54:41.695      185-185/? I/DEBUG\ufe55 bea60bcc  75e83aa8\n08-14 09:54:41.696      185-185/? I/DEBUG\ufe55 bea60bd0  00000020\n08-14 09:54:41.696      185-185/? I/DEBUG\ufe55 bea60bd4  759df049  /data/app-lib/com.inno.funApp.debug-1/librealm-jni.so\n08-14 09:54:41.697      185-185/? I/DEBUG\ufe55 bea60bd8  00000001\n08-14 09:54:41.697      185-185/? I/DEBUG\ufe55 memory near r0:\n08-14 09:54:41.698      185-185/? I/DEBUG\ufe55 74ec7ae0 a8e1b2de 289c4164 f523b30f 57478f39\n08-14 09:54:41.698      185-185/? I/DEBUG\ufe55 74ec7af0 00000000 00000413 75a68d90 00000000\n08-14 09:54:41.698      185-185/? I/DEBUG\ufe55 74ec7b00 75a694d8 00002000 719d9a40 00000000\n08-14 09:54:41.699      185-185/? I/DEBUG\ufe55 74ec7b10 00000001 00000000 0000003b 74ec7f78\n08-14 09:54:41.699      185-185/? I/DEBUG\ufe55 74ec7b20 75e83000 00000003 00000000 00000000\n08-14 09:54:41.700      185-185/? I/DEBUG\ufe55 74ec7b30 00000000 00000000 00000000 00000000\n08-14 09:54:41.700      185-185/? I/DEBUG\ufe55 74ec7b40 00000000 00000000 00000000 00000000\n08-14 09:54:41.700      185-185/? I/DEBUG\ufe55 74ec7b50 00000000 00000000 75a685b8 75e84418\n08-14 09:54:41.701      185-185/? I/DEBUG\ufe55 74ec7b60 00001410 00000007 00000007 00000010\n08-14 09:54:41.701      185-185/? I/DEBUG\ufe55 74ec7b70 00000100 00000000 00000000 74ec7b00\n08-14 09:54:41.702      185-185/? I/DEBUG\ufe55 74ec7b80 759db88f 00000000 759db82b 00000000\n08-14 09:54:41.702      185-185/? I/DEBUG\ufe55 74ec7b90 759db823 00000000 759f873d 00000000\n08-14 09:54:41.703      185-185/? I/DEBUG\ufe55 74ec7ba0 75a23df9 00000000 75a17375 00000000\n08-14 09:54:41.703      185-185/? I/DEBUG\ufe55 74ec7bb0 00000000 00000000 759f2f27 00000000\n08-14 09:54:41.703      185-185/? I/DEBUG\ufe55 74ec7bc0 00000000 00000000 00000000 00000000\n08-14 09:54:41.704      185-185/? I/DEBUG\ufe55 74ec7bd0 ffff8000 ffffffff 00007fff 00000000\n08-14 09:54:41.704      185-185/? I/DEBUG\ufe55 memory near r1:\n08-14 09:54:41.704      185-185/? I/DEBUG\ufe55 8446cf38 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.705      185-185/? I/DEBUG\ufe55 8446cf48 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.705      185-185/? I/DEBUG\ufe55 8446cf58 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.705      185-185/? I/DEBUG\ufe55 8446cf68 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.705      185-185/? I/DEBUG\ufe55 8446cf78 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.705      185-185/? I/DEBUG\ufe55 8446cf88 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.706      185-185/? I/DEBUG\ufe55 8446cf98 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.706      185-185/? I/DEBUG\ufe55 8446cfa8 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.707      185-185/? I/DEBUG\ufe55 8446cfb8 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.707      185-185/? I/DEBUG\ufe55 8446cfc8 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.707      185-185/? I/DEBUG\ufe55 8446cfd8 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.707      185-185/? I/DEBUG\ufe55 8446cfe8 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.707      185-185/? I/DEBUG\ufe55 8446cff8 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.708      185-185/? I/DEBUG\ufe55 8446d008 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.708      185-185/? I/DEBUG\ufe55 8446d018 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.708      185-185/? I/DEBUG\ufe55 8446d028 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.709      185-185/? I/DEBUG\ufe55 memory near r5:\n08-14 09:54:41.709      185-185/? I/DEBUG\ufe55 00001fe0 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.709      185-185/? I/DEBUG\ufe55 00001ff0 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.709      185-185/? I/DEBUG\ufe55 00002000 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.710      185-185/? I/DEBUG\ufe55 00002010 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.710      185-185/? I/DEBUG\ufe55 00002020 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.710      185-185/? I/DEBUG\ufe55 00002030 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.711      185-185/? I/DEBUG\ufe55 00002040 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.711      185-185/? I/DEBUG\ufe55 00002050 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.711      185-185/? I/DEBUG\ufe55 00002060 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.711      185-185/? I/DEBUG\ufe55 00002070 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.711      185-185/? I/DEBUG\ufe55 00002080 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.712      185-185/? I/DEBUG\ufe55 00002090 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.712      185-185/? I/DEBUG\ufe55 000020a0 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.712      185-185/? I/DEBUG\ufe55 000020b0 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.713      185-185/? I/DEBUG\ufe55 000020c0 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.713      185-185/? I/DEBUG\ufe55 000020d0 ffffffff ffffffff ffffffff ffffffff\n08-14 09:54:41.713      185-185/? I/DEBUG\ufe55 memory near r7:\n08-14 09:54:41.713      185-185/? I/DEBUG\ufe55 bea60bc0 bea60be0 bea60c14 75e90188 75e83aa8\n08-14 09:54:41.713      185-185/? I/DEBUG\ufe55 bea60bd0 00000020 759df049 00000001 74ec7b00\n08-14 09:54:41.714      185-185/? I/DEBUG\ufe55 bea60be0 40089000 414f67b5 00000001 bea60c14\n08-14 09:54:41.714      185-185/? I/DEBUG\ufe55 bea60bf0 bea60c50 75a73140 74ec7b00 75e90170\n08-14 09:54:41.714      185-185/? I/DEBUG\ufe55 bea60c00 00000001 759df217 00000001 00000000\n08-14 09:54:41.714      185-185/? I/DEBUG\ufe55 bea60c10 00000002 00000000 00000000 00000000\n08-14 09:54:41.714      185-185/? I/DEBUG\ufe55 bea60c20 00000001 bea60c50 75e90170 75a73140\n08-14 09:54:41.714      185-185/? I/DEBUG\ufe55 bea60c30 75a730e8 00000002 75a7314c 759e3de9\n08-14 09:54:41.715      185-185/? I/DEBUG\ufe55 bea60c40 00000000 00000000 00000000 00000000\n08-14 09:54:41.715      185-185/? I/DEBUG\ufe55 bea60c50 00000000 00000000 00000000 75a73270\n08-14 09:54:41.716      185-185/? I/DEBUG\ufe55 bea60c60 bea61360 00000001 00000001 00000001\n08-14 09:54:41.716      185-185/? I/DEBUG\ufe55 bea60c70 00000002 bea611e4 00000001 759d9613\n08-14 09:54:41.716      185-185/? I/DEBUG\ufe55 bea60c80 00000000 75a73270 00000000 75e84218\n08-14 09:54:41.716      185-185/? I/DEBUG\ufe55 bea60c90 bea611b4 bea611d8 0000003b 759e7651\n08-14 09:54:41.716      185-185/? I/DEBUG\ufe55 bea60ca0 00000000 75a732c0 00000000 75a1ec51\n08-14 09:54:41.717      185-185/? I/DEBUG\ufe55 bea60cb0 00000000 00000000 00000000 00000000\n08-14 09:54:41.717      185-185/? I/DEBUG\ufe55 memory near r8:\n08-14 09:54:41.717      185-185/? I/DEBUG\ufe55 75e83a88 0061005f 00650063 00690067 006d006b\n08-14 09:54:41.717      185-185/? I/DEBUG\ufe55 75e83a98 0071006f 00750073 6136e27a 9371b7f6\n08-14 09:54:41.717      185-185/? I/DEBUG\ufe55 75e83aa8 8446cf5a 175f4f8f 00657057 04000000\n08-14 09:54:41.717      185-185/? I/DEBUG\ufe55 75e83ab8 6f686364 745f6c6f 00657079 04000000\n08-14 09:54:41.718      185-185/? I/DEBUG\ufe55 75e83ac8 6f686373 745f6c6f 00657079 04000000\n08-14 09:54:41.718      185-185/? I/DEBUG\ufe55 75e83ad8 6f686373 745f6c6f 00657079 04000000\n08-14 09:54:41.718      185-185/? I/DEBUG\ufe55 75e83ae8 6f686373 745f6c6f 00657079 04000000\n08-14 09:54:41.718      185-185/? I/DEBUG\ufe55 75e83af8 6f686373 745f6c6f 00657079 04000000\n08-14 09:54:41.718      185-185/? I/DEBUG\ufe55 75e83b08 6f686373 745f6c6f 00657079 04000000\n08-14 09:54:41.718      185-185/? I/DEBUG\ufe55 75e83b18 6f686373 6c5f6c6f 6c657665 03000000\n08-14 09:54:41.718      185-185/? I/DEBUG\ufe55 75e83b28 6f686373 6c5f6c6f 6c657665 03000000\n08-14 09:54:41.719      185-185/? I/DEBUG\ufe55 75e83b38 6f686373 6c5f6c6f 6c657665 03000000\n08-14 09:54:41.719      185-185/? I/DEBUG\ufe55 75e83b48 6f686373 6c5f6c6f 6c657665 03000000\n08-14 09:54:41.719      185-185/? I/DEBUG\ufe55 75e83b58 6f686373 6c5f6c6f 6c657665 03000000\n08-14 09:54:41.719      185-185/? I/DEBUG\ufe55 75e83b68 6f686373 6c5f6c6f 6c657665 03000000\n08-14 09:54:41.720      185-185/? I/DEBUG\ufe55 75e83b78 6f686373 6c5f6c6f 6c657665 03000000\n08-14 09:54:41.720      185-185/? I/DEBUG\ufe55 memory near sl:\n08-14 09:54:41.720      185-185/? I/DEBUG\ufe55 75a7312c 75a717d0 75a73220 00000009 75e90170\n08-14 09:54:41.720      185-185/? I/DEBUG\ufe55 75a7313c 00000002 00000000 006e0072 00000000\n08-14 09:54:41.721      185-185/? I/DEBUG\ufe55 75a7314c 00000000 00000000 ffffffff 00750051\n08-14 09:54:41.721      185-185/? I/DEBUG\ufe55 75a7315c 00720065 75a69478 0061006e 00690074\n08-14 09:54:41.721      185-185/? I/DEBUG\ufe55 75a7316c 00650076 00710045 00610075 75a68ff8\n08-14 09:54:41.721      185-185/? I/DEBUG\ufe55 75a7317c 0000003a 6176614a 5f6f695f 6c616572\n08-14 09:54:41.721      185-185/? I/DEBUG\ufe55 75a7318c 6e695f6d 6e726574 545f6c61 656c6261\n08-14 09:54:41.721      185-185/? I/DEBUG\ufe55 75a7319c 00000000 616e5f79 65766974 61757145\n08-14 09:54:41.722      185-185/? I/DEBUG\ufe55 75a731ac 0000006c 000000d0 00000052 6176614a\n08-14 09:54:41.722      185-185/? I/DEBUG\ufe55 75a731bc 5f6f695f 6c616572 6e695f6d 6e726574\n08-14 09:54:41.722      185-185/? I/DEBUG\ufe55 75a731cc 545f6c61 656c6261 72657551 616e5f79\n08-14 09:54:41.722      185-185/? I/DEBUG\ufe55 75a731dc 65766974 61757145 4a5f5f6c 4c4a335f\n08-14 09:54:41.722      185-185/? I/DEBUG\ufe55 75a731ec 6176616a 6e616c5f 74535f67 676e6972\n08-14 09:54:41.722      185-185/? I/DEBUG\ufe55 75a731fc 005a325f 00000000 00000900 00000000\n08-14 09:54:41.722      185-185/? I/DEBUG\ufe55 75a7320c 00000000 00000000 00000000 00000000\n08-14 09:54:41.723      185-185/? I/DEBUG\ufe55 75a7321c 00000043 6b63696e 6d616e5f 00000065\n08-14 09:54:41.723      185-185/? I/DEBUG\ufe55 memory near sp:\n08-14 09:54:41.723      185-185/? I/DEBUG\ufe55 bea60b7c 41504b7b 425d46f0 b081c1ff 425d46f0\n08-14 09:54:41.723      185-185/? I/DEBUG\ufe55 bea60b8c 425d4700 df0027ad 00000000 1140001d\n08-14 09:54:41.724      185-185/? I/DEBUG\ufe55 bea60b9c 00000000 bea60be0 00000001 bea60be0\n08-14 09:54:41.724      185-185/? I/DEBUG\ufe55 bea60bac 759deb05 ffffffff 759deeab ffffffff\n08-14 09:54:41.724      185-185/? I/DEBUG\ufe55 bea60bbc 00000001 bea60be0 bea60c14 75e90188\n08-14 09:54:41.724      185-185/? I/DEBUG\ufe55 bea60bcc 75e83aa8 00000020 759df049 00000001\n08-14 09:54:41.726      185-185/? I/DEBUG\ufe55 bea60bdc 74ec7b00 40089000 414f67b5 00000001\n08-14 09:54:41.726      185-185/? I/DEBUG\ufe55 bea60bec bea60c14 bea60c50 75a73140 74ec7b00\n08-14 09:54:41.726      185-185/? I/DEBUG\ufe55 bea60bfc 75e90170 00000001 759df217 00000001\n08-14 09:54:41.727      185-185/? I/DEBUG\ufe55 bea60c0c 00000000 00000002 00000000 00000000\n08-14 09:54:41.727      185-185/? I/DEBUG\ufe55 bea60c1c 00000000 00000001 bea60c50 75e90170\n08-14 09:54:41.727      185-185/? I/DEBUG\ufe55 bea60c2c 75a73140 75a730e8 00000002 75a7314c\n08-14 09:54:41.727      185-185/? I/DEBUG\ufe55 bea60c3c 759e3de9 00000000 00000000 00000000\n08-14 09:54:41.728      185-185/? I/DEBUG\ufe55 bea60c4c 00000000 00000000 00000000 00000000\n08-14 09:54:41.728      185-185/? I/DEBUG\ufe55 bea60c5c 75a73270 bea61360 00000001 00000001\n08-14 09:54:41.728      185-185/? I/DEBUG\ufe55 bea60c6c 00000001 00000002 bea611e4 00000001\n08-14 09:54:41.728      185-185/? I/DEBUG\ufe55 code around pc:\n08-14 09:54:41.729      185-185/? I/DEBUG\ufe55 759d1918 1054dd0e 0034f853 07c4eb03 bf254281\n08-14 09:54:41.729      185-185/? I/DEBUG\ufe55 759d1928 0202ebc4 0308f107 f1024622 e7ee32ff\n08-14 09:54:41.730      185-185/? I/DEBUG\ufe55 759d1938 685842b3 f853bf18 1b495c08 bdf04408\n08-14 09:54:41.730      185-185/? I/DEBUG\ufe55 759d1948 698369c2 1ad3b570 6903089b bf0c4604\n08-14 09:54:41.731      185-185/? I/DEBUG\ufe55 759d1958 69426882 2448f8d2 5023f852 b93368c3\n08-14 09:54:41.731      185-185/? I/DEBUG\ufe55 759d1968 f05a20a0 4606fc03 fe2af00b 68e360e6\n08-14 09:54:41.731      185-185/? I/DEBUG\ufe55 759d1978 60dd2200 bd70609a 698369c2 1ad3b570\n08-14 09:54:41.732      185-185/? I/DEBUG\ufe55 759d1988 6903089b bf0c4604 69426882 2448f8d2\n08-14 09:54:41.732      185-185/? I/DEBUG\ufe55 759d1998 5023f852 b93368c3 f05a20a0 4606fbe7\n08-14 09:54:41.733      185-185/? I/DEBUG\ufe55 759d19a8 fe1ef00b 68e360e6 60dd2200 bd70609a\n08-14 09:54:41.733      185-185/? I/DEBUG\ufe55 759d19b8 698369c2 1ad3b570 6903089b bf0c4604\n08-14 09:54:41.734      185-185/? I/DEBUG\ufe55 759d19c8 69426882 2448f8d2 5023f852 b93368c3\n08-14 09:54:41.734      185-185/? I/DEBUG\ufe55 759d19d8 f05a20a0 4606fbcb ff90f00c 68e360e6\n08-14 09:54:41.734      185-185/? I/DEBUG\ufe55 759d19e8 60dd2200 bd70609a f1004b0a 447b011c\n08-14 09:54:41.735      185-185/? I/DEBUG\ufe55 759d19f8 0208f103 6002333c 60c32200 71022308\n08-14 09:54:41.736      185-185/? I/DEBUG\ufe55 759d1a08 f1006083 61030314 d002428b 2b01f803\n08-14 09:54:41.736      185-185/? I/DEBUG\ufe55 code around lr:\n08-14 09:54:41.736      185-185/? I/DEBUG\ufe55 759deae4 6883bfc6 b113685b f7ff3004 4618bff3\n08-14 09:54:41.736      185-185/? I/DEBUG\ufe55 759deaf4 30044770 bfeef7ff 6803b508 4798695b\n08-14 09:54:41.737      185-185/? I/DEBUG\ufe55 759deb04 b508bd08 691b6803 bd084798 44196843\n08-14 09:54:41.737      185-185/? I/DEBUG\ufe55 759deb14 29006803 bfb8460a 021ff101 eb031152\n08-14 09:54:41.737      185-185/? I/DEBUG\ufe55 759deb24 4b070282 2b00400b 3b01da03 031ff063\n08-14 09:54:41.738      185-185/? I/DEBUG\ufe55 759deb34 2b003301 3320bfbc e8803a04 4770000c\n08-14 09:54:41.739      185-185/? I/DEBUG\ufe55 759deb44 8000001f 4605b537 e88dc903 46680003\n08-14 09:54:41.739      185-185/? I/DEBUG\ufe55 759deb54 f7ff4611 e89dffdb e8850003 46280003\n08-14 09:54:41.739      185-185/? I/DEBUG\ufe55 759deb64 bd30b003 f101b573 4604051f 096d460e\n08-14 09:54:41.740      185-185/? I/DEBUG\ufe55 759deb74 462800ad fafcf04d 46212300 46326063\n08-14 09:54:41.740      185-185/? I/DEBUG\ufe55 759deb84 f8443408 44050c08 60a54668 ffdaf7ff\n08-14 09:54:41.741      185-185/? I/DEBUG\ufe55 759deb94 0003e89d 0003e884 bd70b002 b1136843\n08-14 09:54:41.741      185-185/? I/DEBUG\ufe55 759deba4 60433b01 231f4770 68036043 60033b04\n08-14 09:54:41.742      185-185/? I/DEBUG\ufe55 759debb4 68434770 d0022b1f 60433301 23004770\n08-14 09:54:41.742      185-185/? I/DEBUG\ufe55 759debc4 68036043 60033304 68034770 6843681a\n08-14 09:54:41.742      185-185/? I/DEBUG\ufe55 759debd4 bf0c421a 20012000 b5084770 6803b110\n08-14 09:54:41.844    4429-4578/? I/WhetstoneService\ufe55 Receive am_crash event for pid: 1504\n08-14 09:54:41.844    4429-4578/? W/KloServer\ufe55 Aborted broadcast does not supprt for: android\n08-14 09:54:41.844    4920-5324/? I/KLO_Stability\ufe55 [am_crash][1439517281]:[1504,0,com.inno.funApp.debug,8961606,Native crash,Segmentation fault,unknown,0]\n08-14 09:54:41.844   1504-28794/? W/ActivityManager\ufe55 Force finishing activity com.inno.funApp.debug/com.inno.funApp.ui.main.view.HomeActivity\n08-14 09:54:41.845    4920-5323/? I/libmc\ufe55 received event[index:0,mask:0x8,name:tombstone_02]\n08-14 09:54:41.847    1504-1568/? I/BootReceiver\ufe55 Copying /data/tombstones/tombstone_02 to DropBox (SYSTEM_TOMBSTONE)\n08-14 09:54:41.851    1504-1568/? I/dalvikvm-heap\ufe55 Grow heap (frag case) to 24.847MB for 131088-byte allocation\n08-14 09:54:41.881    4920-5324/? I/libmc\ufe55 received event[index:0,mask:0x80,name:data_app_native_crash@1439517281881.txt]\n08-14 09:54:41.893    4920-5324/? I/libmc\ufe55 received event[index:0,mask:0x80,name:SYSTEM_TOMBSTONE@1439517281893.txt.gz]\n08-14 09:54:41.893      187-187/? D/Zygote\ufe55 Process 28759 terminated by signal (11)\n08-14 09:54:41.896    1504-4483/? I/ActivityManager\ufe55 Process com.inno.funApp.debug (pid 28759) has died.\n08-14 09:54:41.899    4122-4122/? D/PhoneStatusBar\ufe55 disable: 0x00000080 -> 0x00000000 (diff: 0x00000080)\n08-14 09:54:41.899    4122-4122/? D/PhoneStatusBar\ufe55 disable: < expand icons alerts ticker system_info back home recent clock full hide >\n08-14 09:54:41.906    4429-4578/? I/libmc\ufe55 task pid 4468 have been add to group sys_app_fg.\n08-14 09:54:41.906    4429-4578/? I/libmc\ufe55 [sys_app_fg]cgroup_add_tasks max single write time: 0ms\n08-14 09:54:41.906    4429-4578/? I/libmc\ufe55 [sys_app_fg]cgroup_add_tasks total time consume: 0ms\n08-14 09:54:41.926    4468-4997/? I/RenderThread\ufe55 RenderThread resumed\n08-14 09:54:41.926    4468-4997/? I/RenderThread\ufe55 Sleep for long time:9223372036854775807 ms\n08-14 09:54:41.950    4468-4997/? I/RenderThread\ufe55 Sleep for long time:9223372036854775807 ms\n08-14 09:54:41.952    4468-4997/? I/RenderThread\ufe55 Sleep for long time:9223372036854775807 ms\n08-14 09:54:42.676    4142-4142/? D/wpa_supplicant\ufe55 RX ctrl_iface - hexdump(len=11): 53 49 47 4e 41 4c 5f 50 4f 4c 4c\n08-14 09:54:42.676    4142-4142/? D/wpa_supplicant\ufe55 wlan0: Control interface command 'SIGNAL_POLL'\n08-14 09:54:42.682    4142-4142/? D/wpa_supplicant\ufe55 nl80211: survey data missing!\n08-14 09:54:42.685    4142-4142/? D/wpa_supplicant\ufe55 RX ctrl_iface - hexdump(len=11): 50 4b 54 43 4e 54 5f 50 4f 4c 4c\n08-14 09:54:42.685    4142-4142/? D/wpa_supplicant\ufe55 wlan0: Control interface command 'PKTCNT_POLL'\n08-14 09:54:42.694    4142-4142/? D/wpa_supplicant\ufe55 RX ctrl_iface - hexdump(len=11): 53 49 47 4e 41 4c 5f 50 4f 4c 4c\n08-14 09:54:42.694    4142-4142/? D/wpa_supplicant\ufe55 wlan0: Control interface command 'SIGNAL_POLL'\n08-14 09:54:42.698    4142-4142/? D/wpa_supplicant\ufe55 nl80211: survey data missing!\n08-14 09:54:43.677    4142-4142/? D/wpa_supplicant\ufe55 RX ctrl_iface - hexdump(len=11): 53 49 47 4e 41 4c 5f 50 4f 4c 4c\n08-14 09:54:43.677    4142-4142/? D/wpa_supplicant\ufe55 wlan0: Control interface command 'SIGNAL_POLL'\n08-14 09:54:43.684    4142-4142/? D/wpa_supplicant\ufe55 nl80211: survey data missing!\n08-14 09:54:43.685    4142-4142/? D/wpa_supplicant\ufe55 RX ctrl_iface - hexdump(len=11): 50 4b 54 43 4e 54 5f 50 4f 4c 4c\n08-14 09:54:43.685    4142-4142/? D/wpa_supplicant\ufe55 wlan0: Control interface command 'PKTCNT_POLL'\n08-14 09:54:44.678    4142-4142/? D/wpa_supplicant\ufe55 RX ctrl_iface - hexdump(len=11): 53 49 47 4e 41 4c 5f 50 4f 4c 4c\n08-14 09:54:44.678    4142-4142/? D/wpa_supplicant\ufe55 wlan0: Control interface command 'SIGNAL_POLL'\n08-14 09:54:44.685    4142-4142/? D/wpa_supplicant\ufe55 nl80211: survey data missing!\n08-14 09:54:44.686    4142-4142/? D/wpa_supplicant\ufe55 RX ctrl_iface - hexdump(len=11): 50 4b 54 43 4e 54 5f 50 4f 4c 4c\n08-14 09:54:44.686    4142-4142/? D/wpa_supplicant\ufe55 wlan0: Control interface command 'PKTCNT_POLL'\n08-14 09:54:44.907    4429-4429/? D/WhetstoneService\ufe55 deal background too Frequently, ingore\n", "url": "https://github.com/realm/realm-java/issues/1388", "user": "beeender", "labels": ["Blocked", "T-Bug"], "created": "2015-08-14 05:36:16", "closed": "2015-09-04 12:10:37", "commits": {}, "ttf": 21.00027777777778, "commitsDetails": []}, {"title": "Handle adding search index twice properly", "body": "Guys please take a look on this one, we got it for some users on `2.3.3`\n\n```\njava.lang.RuntimeException: Unable to create application.android.YaloApp: java.lang.ArrayIndexOutOfBoundsException: columnIndex is less than 0.\n       at android.app.ActivityThread.handleBindApplication(ActivityThread.java:3279)\n       at android.app.ActivityThread.access$2200(ActivityThread.java:117)\n       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:973)\n       at android.os.Handler.dispatchMessage(Handler.java:99)\n       at android.os.Looper.loop(Looper.java:123)\n       at android.app.ActivityThread.main(ActivityThread.java:3687)\n       at java.lang.reflect.Method.invokeNative(Method.java)\n       at java.lang.reflect.Method.invoke(Method.java:507)\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:842)\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:600)\n       at dalvik.system.NativeStart.main(NativeStart.java)\nCaused by: java.lang.ArrayIndexOutOfBoundsException: columnIndex is less than 0.\n       at io.realm.internal.Table.nativeAddSearchIndex(Table.java)\n       at io.realm.internal.Table.addSearchIndex(Table.java:1156)\n       at .android.model.Migration.execute(Migration.java:69)\n       at io.realm.Realm.migrateRealm(Realm.java:1636)\n       at io.realm.Realm.create(Realm.java:569)\n       at io.realm.Realm.getDefaultInstance(Realm.java:521)\n       at .model.RealmManager.getInstance(RealmManager.java:42)\n       at .model.CountryDao.init(CountryDao.java:19)\n       at .model.CountryDao.init(CountryDao.java:15)\n       at .android.YaloApp.onCreate(YaloApp.java:66)\n       at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:969)\n       at android.app.ActivityThread.handleBindApplication(ActivityThread.java:3276)\n       at android.app.ActivityThread.access$2200(ActivityThread.java:117)\n       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:973)\n       at android.os.Handler.dispatchMessage(Handler.java:99)\n       at android.os.Looper.loop(Looper.java:123)\n       at android.app.ActivityThread.main(ActivityThread.java:3687)\n       at java.lang.reflect.Method.invokeNative(Method.java)\n       at java.lang.reflect.Method.invoke(Method.java:507)\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:842)\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:600)\n       at dalvik.system.NativeStart.main(NativeStart.java)\n```\n\nIt crashes on `userTable.addSearchIndex(userTable.getColumnIndex(\"appId\"));`\n\n```\npublic class Migration implements RealmMigration {\n    @Override\n    public long execute(Realm realm, long version) {\n        .....\n\n        // in 0.82 version @PrimaryKey fields become indexed. Older schemas require a migration.\n        if (version == 6) {\n            userTable.addSearchIndex(userTable.getColumnIndex(\"appId\"));\n            version++;\n        }\n\n        return version;\n    }\n```\n\nThanks,\nYakiv\n", "url": "https://github.com/realm/realm-java/issues/1385", "user": "yakivmospan", "labels": ["T-Bug"], "created": "2015-08-13 04:46:06", "closed": "2015-10-07 13:47:46", "commits": {"a58269eac631db0082eecb41dee74b1f70de495a": {"commitGHEventType": "referenced", "commitUser": "kneth"}, "acfb0e09be7c5c4d8a50d9add42d653702ecc5a2": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "49bac070b88017d48fbecc108f2179525b14d8a7": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "41c2234d5c96cc032b8395ce86292839c9af1c9a": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 55.000277777777775, "commitsDetails": [{"commitHash": "a58269eac631db0082eecb41dee74b1f70de495a", "commitGHEventType": "referenced", "commitUser": "kneth", "commitParents": ["a923ebf0546420229ee75df90317076e9181f1dc"], "nameRev": "a58269eac631db0082eecb41dee74b1f70de495a tags/v0.83.0~2^2~1", "commitMessage": "Testing Table.addSearchIndex() is idempotent. Closes #1385\n", "commitDateTime": "2015-10-07 15:25:44", "authoredDateTime": "2015-10-07 15:25:44", "commitGitStats": [{"filePath": "realm/src/androidTest/java/io/realm/RealmMigrationTests.java", "insertions": 31, "deletions": 0, "lines": 31}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmMigrationTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmMigrationTests.testSetAnnotations().4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.testNotSettingIndexForPrimaryKeyThrows().5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.testOpenPreNullRealmRequiredMissing().6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.testMigratePreNull().7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.testNotSettingRequiredForNotNullableThrows().8", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.testSettingRequiredForNullableThrows().9", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.testAddingSearchIndexTwice()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "acfb0e09be7c5c4d8a50d9add42d653702ecc5a2", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "49bac070b88017d48fbecc108f2179525b14d8a7", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "41c2234d5c96cc032b8395ce86292839c9af1c9a", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["eec600d4b4668017270416afb08897e278fd4579"], "nameRev": "41c2234d5c96cc032b8395ce86292839c9af1c9a tags/v3.5.0~4^2~32", "commitMessage": "Remove outdated addSearchIndexTwice\n\nRealmObjectSchema.addIndex() is not idempotent. The test was created\nin #1544 for issue #1385 which was using Table.addSearchIndex().\nRealmObjectSchema.addIndex() will just throw when called twice, it is\nguaranteed by test addIndexFieldModifier_alreadyIndexedThrows.\n\nThe test can accidentally pass is just because of\ndefault-before-migration.realm was created before 0.82 when the primary\nkey was not auto-indexed yet.\n", "commitDateTime": "2017-06-23 16:18:07", "authoredDateTime": "2017-06-23 15:38:04", "commitGitStats": [{"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmMigrationTests.java", "insertions": 0, "deletions": 35, "lines": 35}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmMigrationTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmMigrationTests.addingSearchIndexTwice()", "TOT": 19, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 15}, {"spoonMethodName": "io.realm.RealmMigrationTests.migrateRealm_config_nonExistingRealmFile()", "TOT": 6, "UPD": 2, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.notSettingNullableToPrimaryKeyThrows()", "TOT": 10, "UPD": 1, "INS": 1, "MOV": 7, "DEL": 1}, {"spoonMethodName": "io.realm.RealmMigrationTests.setAnnotations().21", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.openPreNullRealmRequiredMissing().22", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.migratePreNull().23", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.realmOpenBeforeMigrationThrows()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.renameAndAddField().31", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.renameAndAddIndexedField().32", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.notSettingRequiredForNotNullableThrows().24", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.settingRequiredForNullableThrows().25", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.settingNullableToPrimaryKey().26", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.migrateRealm_configMigration_nonExistingRealmFile().30", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmMigrationTests.migrateRealm_configMigration_nonExistingRealmFile()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a58269eac631db0082eecb41dee74b1f70de495a"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Remove a table from a previous Realm scheme", "body": "Hi,\nWith the introduction of Modules (Realm 0.82.0), I have splitted a part of my scheme into another Realm.\nHowever, the old database (which is now a core Module) still contains tables that are no longer needed (and data as well).\n\nExample:\nOld scheme contained **A, B, C** into `main.realm`.\nNew scheme is now splitted in two Modules\n**A, B** into `main.realm`\n**C** into `second.realm`\n\nFollowing the app update, `main.realm` still contains a table **C** and I'm unable to clean nor delete the table manually (error like 'this entity is not part of this module').\n\nIs there a way I did not find?\nThanks.\n", "url": "https://github.com/realm/realm-java/issues/1382", "user": "tmeunier", "labels": ["T-Bug"], "created": "2015-08-12 07:31:44", "closed": "2015-08-25 11:20:56", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "mremap(): failed: Function not implemented in io_realm_internal_SharedGroup.cpp line 115", "body": "We get this in the Crashlytics plugin. It happens on: Android 4.3, Z10 device. Any ideas for a fix?\n\nio.realm.exceptions.RealmError: Unrecoverable error. mremap(): failed: Function not implemented in io_realm_internal_SharedGroup.cpp line 115\n       at io.realm.internal.SharedGroup.createNativeWithImplicitTransactions(SharedGroup.java)\n       at io.realm.internal.SharedGroup.<init>(SharedGroup.java:60)\n       at io.realm.Realm.<init>(Realm.java:199)\n       at io.realm.Realm.createAndValidate(Realm.java:585)\n       at io.realm.Realm.create(Realm.java:554)\n       at io.realm.Realm.getInstance(Realm.java:401)\n       at io.realm.Realm.getInstance(Realm.java:358)\n       at io.realm.Realm.getInstance(Realm.java:339)\n", "url": "https://github.com/realm/realm-java/issues/1380", "user": "n0m0r3pa1n", "labels": ["Blocked", "T-Bug"], "created": "2015-08-11 18:11:23", "closed": "2015-10-22 14:21:16", "commits": {}, "ttf": 71.00027777777778, "commitsDetails": []}, {"title": "Validating Realm schema should only be done once", "body": "**Problem**:\n1) Background thread opens Realm and begins a long living write transaction.\n2) UI thread calls `Realm.getInstance()` for the first time.\n3) Result: UI thread is locked until background thread completes because `initializeRealm` requires a write transaction.\n\n**Reason**:\nOur Realm cache is thread local and doesn't take into account that a Realm on another thread might have validated the schema already.\n\n**Solution**:\nWe should cache the result of `mediator.validateTable(modelClass, realm.sharedGroup.getTransaction());`. Doing so will not only prevent unnecessary locking of the UI thread, but it will also speed up opening Realms considerable when doing so for the first time on new threads.\n", "url": "https://github.com/realm/realm-java/issues/1373", "user": "cmelchior", "labels": ["T-Bug"], "created": "2015-08-09 09:57:33", "closed": "2015-09-10 12:52:14", "commits": {}, "ttf": 32.000277777777775, "commitsDetails": []}, {"title": "Re-implement phantom reference test", "body": null, "url": "https://github.com/realm/realm-java/issues/1359", "user": "emanuelez", "labels": ["T-Bug"], "created": "2015-08-06 10:03:31", "closed": "2017-01-30 11:04:28", "commits": {}, "ttf": 543.0002777777778, "commitsDetails": []}, {"title": "Low Memory 1GB device and Realm Crashes", "body": "We are getting lots of invalid argument bad file format crashes on various low memory devices on Android 4.x. The only thing they have in common is all the devices have only 1gb of installed ram. Device range from 2013 models to early 2015 models and cpus include both mediatek and Qualcomm.\n\nRealm encryption is enabled and we suspect that may be the culprit, for now.\n\nWe are in the process of purchasing a crashing device to track the source but want to see if the realm team has seen these type of strange crashes.\n", "url": "https://github.com/realm/realm-java/issues/1353", "user": "diegomontoya", "labels": ["T-Bug"], "created": "2015-08-05 11:40:23", "closed": "2015-09-09 11:30:37", "commits": {}, "ttf": 34.000277777777775, "commitsDetails": []}, {"title": "Cannot connect to realmdb when passed wrong encryption key for the first time", "body": "Hallo.\nI have a problem. I use users password to encrypt databse. When opening application, I ask user for the password, generate encryption key (using SHA512) and try to use it to open database. Everything works perfect as long as user pass correct password. But it is impossible to open database, when user pass wrong password for the first time. \n\nI have ended in this test:\n\nI have default realm database encrypted by password \"a\". \"makeSHA1Hash\" is method to generate encryption key based on the password. Source code:\n\n```\n    try {\n        Realm.getInstance(context, makeSHA1Hash(\"x\"));\n        Log.d(this.getClass().getName(), \"MV - x is ok\");\n    } catch (Exception e) {\n        Log.d(this.getClass().getName(), \"MV - x is wrong\");\n    }\n\n    try {\n        Realm.getInstance(context, makeSHA1Hash(\"a\"));\n        Log.d(this.getClass().getName(), \"MV - a is ok\");\n    } catch (Exception e) {\n        Log.d(this.getClass().getName(), \"MV - a is wrong\");\n    }\n\n    try {\n        Realm.getInstance(context, makeSHA1Hash(\"b\"));\n        Log.d(this.getClass().getName(), \"MV - b is ok\");\n    } catch (Exception e) {\n        Log.d(this.getClass().getName(), \"MV - b is wrong\");\n    }\n\n    try {\n        Realm.getInstance(context, makeSHA1Hash(\"a\"));\n        Log.d(this.getClass().getName(), \"MV - a is ok\");\n    } catch (Exception e) {\n        Log.d(this.getClass().getName(), \"MV - a is wrong\");\n    }\n\n    try {\n        Realm.getInstance(context, makeSHA1Hash(\"d\"));\n        Log.d(this.getClass().getName(), \"MV - d is ok\");\n    } catch (Exception e) {\n        Log.d(this.getClass().getName(), \"MV - d is wrong\");\n    }\n```\n\nThis sample code ends in this (wrong?) result:\nMV - x is wrong\nMV - a is wrong\nMV - b is wrong\nMV - a is wrong\nMV - d is wrong\n\nWhen I delete the first try - catch code with \"X\" (so the fist db open is successful - using the password \"a\"), the (correct?) result is :\nMV - a is ok\nMV - b is wrong\nMV - a is ok\nMV - d is wrong\n\nCould you please help me how to solve situation when user pass wrong password and cannot be than connected even the second password is correct?\n\nThank you.\nM.\n", "url": "https://github.com/realm/realm-java/issues/1352", "user": "mvrbensky", "labels": ["T-Bug"], "created": "2015-08-05 11:07:40", "closed": "2015-08-06 07:41:03", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "update from JSON will skip null values", "body": "When `update` from JSON which contains property with null values, the property will be ignored.\n\nTo make the consistency with the `create` interface, corresponding field should be set to null.\n", "url": "https://github.com/realm/realm-java/issues/1344", "user": "beeender", "labels": ["T-Bug"], "created": "2015-08-03 12:10:42", "closed": "2015-08-04 11:18:59", "commits": {"cbc97c98f9802e053c5b417711bad1a3ce033d52": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "0998f421341761da16a016b59f99b72501739caf": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "cbc97c98f9802e053c5b417711bad1a3ce033d52", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0998f421341761da16a016b59f99b72501739caf", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["51819aeda744ab707f2602f9a50c091e59b8dacb"], "nameRev": "0998f421341761da16a016b59f99b72501739caf tags/v0.82.1~3^2", "commitMessage": "Handle null value for String in Json when updating\n\nFix #1344\nUpdate the object's String field to empty string when the corresponding\nfield in Json is null.\n", "commitDateTime": "2015-08-04 18:14:21", "authoredDateTime": "2015-08-04 00:18:31", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "realm-annotations-processor/src/main/java/io/realm/processor/RealmJsonTypeHelper.java", "insertions": 44, "deletions": 12, "lines": 56}, {"filePath": "realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyClassGenerator.java", "insertions": 13, "deletions": 3, "lines": 16}, {"filePath": "realm-annotations-processor/src/main/java/io/realm/processor/Utils.java", "insertions": 15, "deletions": 4, "lines": 19}, {"filePath": "realm-annotations-processor/src/test/resources/io/realm/AllTypesRealmProxy.java", "insertions": 14, "deletions": 5, "lines": 19}, {"filePath": "realm-annotations-processor/src/test/resources/io/realm/SimpleRealmProxy.java", "insertions": 13, "deletions": 4, "lines": 17}, {"filePath": "realm/src/androidTest/assets/all_types_primary_key_null.json", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "realm/src/androidTest/java/io/realm/RealmJsonTest.java", "insertions": 73, "deletions": 0, "lines": 73}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmJsonTypeHelper.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.RealmJsonTypeHelper.SimpleTypeConverter.emitTypeConversion(java.lang.String,java.lang.String,java.lang.String,com.squareup.javawriter.JavaWriter)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmJsonTypeHelper.SimpleTypeConverter.emitStreamTypeConversion(java.lang.String,java.lang.String,java.lang.String,com.squareup.javawriter.JavaWriter)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RealmProxyClassGenerator.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitCreateUsingJsonStream(com.squareup.javawriter.JavaWriter)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Utils.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.Utils.isString(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AllTypesRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.AllTypesRealmProxy.createUsingJsonStream(io.realm.Realm,android.util.JsonReader)", "TOT": 9, "UPD": 1, "INS": 3, "MOV": 4, "DEL": 1}, {"spoonMethodName": "io.realm.AllTypesRealmProxy.createOrUpdateUsingJsonObject(io.realm.Realm,org.json.JSONObject,boolean)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "SimpleRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.SimpleRealmProxy.createUsingJsonStream(io.realm.Realm,android.util.JsonReader)", "TOT": 9, "UPD": 1, "INS": 3, "MOV": 4, "DEL": 1}, {"spoonMethodName": "io.realm.SimpleRealmProxy.createOrUpdateUsingJsonObject(io.realm.Realm,org.json.JSONObject,boolean)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "RealmJsonTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmJsonTest.testUpdateObjectFromJsonStream_nullValues()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmJsonTest.testUpdateObjectFromJsonObject_nullValues()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0998f421341761da16a016b59f99b72501739caf"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 72.0, "deletions": 19.0, "lines": 91.0, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 37.0, "UPD": 2.0, "INS": 14.0, "MOV": 17.0, "DEL": 4.0, "spoonFilesChanged": 5, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm-annotations-processor/src/main/java/io/realm/processor"], "changesInPackagesSPOON": ["io.realm.processor.RealmJsonTypeHelper.SimpleTypeConverter.emitStreamTypeConversion(java.lang.String,java.lang.String,java.lang.String,com.squareup.javawriter.JavaWriter)", "io.realm.processor.Utils.isString(java.lang.String)", "io.realm.SimpleRealmProxy.createOrUpdateUsingJsonObject(io.realm.Realm,org.json.JSONObject,boolean)", "io.realm.processor.RealmJsonTypeHelper.SimpleTypeConverter.emitTypeConversion(java.lang.String,java.lang.String,java.lang.String,com.squareup.javawriter.JavaWriter)", "io.realm.processor.RealmProxyClassGenerator.emitCreateUsingJsonStream(com.squareup.javawriter.JavaWriter)", "io.realm.AllTypesRealmProxy.createOrUpdateUsingJsonObject(io.realm.Realm,org.json.JSONObject,boolean)", "io.realm.AllTypesRealmProxy.createUsingJsonStream(io.realm.Realm,android.util.JsonReader)", "io.realm.SimpleRealmProxy.createUsingJsonStream(io.realm.Realm,android.util.JsonReader)"]}, {"title": "Timeout on Context.finalize()", "body": "Hey,\n\nwe started seeing following error with the update to Realm 0.82.0:\n\n```\njava.util.concurrent.TimeoutException: io.realm.internal.Context.finalize() timed out after 10 seconds\n       at java.lang.Object.equals(Object.java:205)\n       at java.util.ArrayList.remove(ArrayList.java:418)\n       at io.realm.internal.Context.cleanRows(Context.java:69)\n       at io.realm.internal.Context.executeDelayedDisposal(Context.java:61)\n       at io.realm.internal.Context.finalize(Context.java:113)\n       at java.lang.Daemons$FinalizerDaemon.doFinalize(Daemons.java:209)\n       at java.lang.Daemons$FinalizerDaemon.run(Daemons.java:192)\n       at java.lang.Thread.run(Thread.java:818)\n```\n\nWe also see some longer access times to the Realm after we added some \"realm.clear(RealmObject.class)\" calls.\n\nIs this a known issue or is there a better way to clear a whole table? \n", "url": "https://github.com/realm/realm-java/issues/1342", "user": "rmeissner", "labels": ["T-Bug"], "created": "2015-08-03 08:56:24", "closed": "2015-08-24 13:52:28", "commits": {"6056da6ffbac0afac6796ede4b73bbadc6075c66": {"commitGHEventType": "closed", "commitUser": "nhachicha"}}, "ttf": 21.00027777777778, "commitsDetails": [{"commitHash": "6056da6ffbac0afac6796ede4b73bbadc6075c66", "commitGHEventType": "closed", "commitUser": "nhachicha", "commitParents": ["7006cb71b889193c2d6af2acb914cdea146163e2"], "nameRev": "6056da6ffbac0afac6796ede4b73bbadc6075c66 tags/v0.82.2~11^2~1^2~1", "commitMessage": "Fixes #1342\n", "commitDateTime": "2015-08-12 13:47:33", "authoredDateTime": "2015-08-12 13:47:33", "commitGitStats": [{"filePath": "realm/src/androidTest/java/io/realm/RealmQueryTest.java", "insertions": 5, "deletions": 16, "lines": 21}, {"filePath": "realm/src/main/java/io/realm/internal/CheckedRow.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "realm/src/main/java/io/realm/internal/Context.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "realm/src/main/java/io/realm/internal/UncheckedRow.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmQueryTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmQueryTest.testLargeRealmMultipleThreads()", "TOT": 11, "UPD": 3, "INS": 2, "MOV": 3, "DEL": 3}, {"spoonMethodName": "io.realm.RealmQueryTest.testLargeRealmMultipleThreads().1.run()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CheckedRow.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.CheckedRow.get(io.realm.internal.Context,io.realm.internal.Table,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.CheckedRow.get(io.realm.internal.Context,io.realm.internal.LinkView,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Context.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.Context", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UncheckedRow.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.UncheckedRow.get(io.realm.internal.Context,io.realm.internal.Table,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.UncheckedRow.get(io.realm.internal.Context,io.realm.internal.LinkView,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6056da6ffbac0afac6796ede4b73bbadc6075c66"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11, "deletions": 5, "lines": 16, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/src/main/java/io/realm/internal"], "changesInPackagesSPOON": ["io.realm.internal.Context", "io.realm.internal.UncheckedRow.get(io.realm.internal.Context,io.realm.internal.LinkView,long)", "io.realm.internal.UncheckedRow.get(io.realm.internal.Context,io.realm.internal.Table,long)", "io.realm.internal.CheckedRow.get(io.realm.internal.Context,io.realm.internal.LinkView,long)", "io.realm.internal.CheckedRow.get(io.realm.internal.Context,io.realm.internal.Table,long)"]}, {"title": "RealmAnalytics Null Pointer v0.82", "body": "1) Crash\n\nException in thread \"Thread-109\" java.lang.NullPointerException\n    at java.security.MessageDigest.update(MessageDigest.java:335)\n    at java.security.MessageDigest.digest(MessageDigest.java:410)\n    at io.realm.processor.Utils.sha256Hash(Utils.java:153)\n    at io.realm.processor.RealmAnalytics.getAnonymousUserId(RealmAnalytics.java:155)\n    at io.realm.processor.RealmAnalytics.generateJson(RealmAnalytics.java:129)\n    at io.realm.processor.RealmAnalytics.getUrl(RealmAnalytics.java:125)\n    at io.realm.processor.RealmAnalytics.send(RealmAnalytics.java:95)\n    at io.realm.processor.RealmAnalytics.access$000(RealmAnalytics.java:55)\n    at io.realm.processor.RealmAnalytics$1.run(RealmAnalytics.java:109)\n    at java.lang.Thread.run(Thread.java:745)\n\n2) Please give us an option to disable this auto-stats gathering. Having this enabled by default is fine, but please let us disable this as well.\n", "url": "https://github.com/realm/realm-java/issues/1336", "user": "diegomontoya", "labels": ["T-Bug"], "created": "2015-08-01 01:55:22", "closed": "2015-08-03 09:50:57", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "deadlock happens on specific device when using encryption example", "body": "one of Korean developer having deadlock issue when using Realm encryption example.\n\nThey tried our [encryption example](https://github.com/realm/realm-java/blob/master/examples/encryptionExample/src/main/java/io/realm/examples/encryptionexample/EncryptionExampleActivity.java) and  Realm.getInstance() function never returned.\n\nThis happens only on LG G3 phone with _LG G3(LG-F460S / OS: 4.4.2)_\n- They tried Realm v0.81.1 and v0.82 -> Not working\n- They tried other LG G3 phone (LG-F460S / OS: 4.4.2) -> Not working\n- if they comment **.encryptionKey(key)** line -> working fine\n- same phone with OS 5.0.1 -> working fine\n- other phones Galaxy Note2(SHV-E250S / OS 4.4.2) & Galaxy S5(SM-G906S / OS 4.4.2) -> working fine\n\nbelow is the only log that they can see when this issue happening\n\n```\n07-30 22:47:03.282 17838-18303/com.kakao.hello D/dalvikvm\ufe55 Trying to load lib /data/app-lib/com.kakao.hello-1/librealm-jni.so 0x43029850 \n07-30 22:47:03.282 17838-18303/com.kakao.hello D/dalvikvm\ufe55 Added shared lib /data/app-lib/com.kakao.hello-1/librealm-jni.so 0x43029850\n```\n", "url": "https://github.com/realm/realm-java/issues/1333", "user": "tebica", "labels": ["Blocked", "T-Bug"], "created": "2015-07-31 08:52:46", "closed": "2015-09-03 12:55:03", "commits": {}, "ttf": 34.000277777777775, "commitsDetails": []}, {"title": "Dead lock happens when calling  Runtime.getRuntime().exit(0);", "body": "Issue first reported on SO http://stackoverflow.com/questions/31583359/realm-and-runtime-getruntime-exit0 .\n\nWhen calling `Runtime.getRuntime().exit(0);` with Realm opened before, finalizer won't stop running. Lock is waiting forever, process cannot exist.\n\nBelow code to reproduce this error:\n\n```\nRealm realm = Realm.getInstance(this);\nrealm.close();\nRuntime.getRuntime().exit(0);\n```\n\nAnd in the logcat, infinity logs comes as below:\n\n```\nD/dalvikvm( 5070): GC_EXPLICIT freed 0K, 6% free 6379K/6716K, paused 2ms+3ms, total 19ms\nD/dalvikvm( 5070): GC_EXPLICIT freed 0K, 6% free 6379K/6716K, paused 2ms+2ms, total 19ms\nD/dalvikvm( 5070): GC_EXPLICIT freed 0K, 6% free 6379K/6716K, paused 2ms+2ms, total 18ms\n```\n", "url": "https://github.com/realm/realm-java/issues/1328", "user": "beeender", "labels": ["T-Bug"], "created": "2015-07-29 03:24:53", "closed": "2015-08-04 11:48:08", "commits": {"eb51da9dfb1f663099f10902dc7f3772c8547881": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "9e35ebbe618363fb4005464dde5695f432986b31": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "d8f3452518fc190757019c74cbe7c7ac9375acff": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "20f62322b978e4ff5145044b0a11644fbaeb7b2e": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "b97d3243556d796dc81622283ed0518ec1eb456a": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "346ac3dc5ecac6a72b73c165da522d058d3f3bb8": {"commitGHEventType": "closed", "commitUser": "beeender"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "eb51da9dfb1f663099f10902dc7f3772c8547881", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9e35ebbe618363fb4005464dde5695f432986b31", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d8f3452518fc190757019c74cbe7c7ac9375acff", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "20f62322b978e4ff5145044b0a11644fbaeb7b2e", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b97d3243556d796dc81622283ed0518ec1eb456a", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["1dce294563a16db694329162d33635acc462efcb"], "nameRev": "b97d3243556d796dc81622283ed0518ec1eb456a tags/v0.82.1~2^2~2", "commitMessage": "Init testing framework for multi processes\n\n1. Create a service in a standalone process.\n2. Make helpers to play with the service for testing.\n3. Watch dog support for the testing.\n4. Test case to reproduce #1328, Process is deadly locked when exit(0)\n    called.\n", "commitDateTime": "2015-08-04 13:20:27", "authoredDateTime": "2015-07-15 15:14:15", "commitGitStats": [{"filePath": "realm/src/androidTest/AndroidManifest.xml", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "realm/src/androidTest/java/io/realm/RealmInterprocessTest.java", "insertions": 290, "deletions": 0, "lines": 290}, {"filePath": "realm/src/androidTest/java/io/realm/services/RemoteProcessService.java", "insertions": 129, "deletions": 0, "lines": 129}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}, {"commitHash": "346ac3dc5ecac6a72b73c165da522d058d3f3bb8", "commitGHEventType": "closed", "commitUser": "beeender", "commitParents": ["b97d3243556d796dc81622283ed0518ec1eb456a"], "nameRev": "346ac3dc5ecac6a72b73c165da522d058d3f3bb8 tags/v0.82.1~2^2~1", "commitMessage": "Remove broken shutdown hook.\n\nTo fix #1328\n\nWhen System.exit(0) called, shutdown hook will be run. There is no\nguarantee in this case GC will collect everything. So a dead lock will\nhappen here.\n\nRemove this part of code since the core side can ensure the integrity of\ndb file when other resource is not released.\n", "commitDateTime": "2015-08-04 13:20:27", "authoredDateTime": "2015-07-29 18:24:28", "commitGitStats": [{"filePath": "realm/src/main/java/io/realm/internal/RealmCore.java", "insertions": 0, "deletions": 30, "lines": 30}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmCore.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.RealmCore.gcGuaranteed()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.RealmCore.gcOnExit()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.RealmCore.init()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.RealmCore.loadLibrary()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b97d3243556d796dc81622283ed0518ec1eb456a", "346ac3dc5ecac6a72b73c165da522d058d3f3bb8"], "filteredCommitsReason": {"duplicated": 4, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0.0, "deletions": 30.0, "lines": 30.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 4.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/src/main/java/io/realm/internal"], "changesInPackagesSPOON": ["io.realm.internal.RealmCore.loadLibrary()", "io.realm.internal.RealmCore.gcOnExit()", "io.realm.internal.RealmCore.init()", "io.realm.internal.RealmCore.gcGuaranteed()"]}, {"title": "The Java part of the handling of LinkView deallocation is missing", "body": "LinkView does not implement `finalize()` and does not have a queue in `Context`.\n", "url": "https://github.com/realm/realm-java/issues/1285", "user": "emanuelez", "labels": ["T-Bug"], "created": "2015-07-10 12:59:23", "closed": "2015-11-10 15:00:42", "commits": {"a9e5902e1e1b35d0faf8d1039263c21263450852": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "00508780743879b18205189a2d21d0d5e7ea30a1": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "c31733f26c02bc056891eaf59e28a6caf31b715e": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "b8b63960bc0c377dc694a4f328d7709179390b1d": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "b821b0987fe1127a8534425e0bc96b10161cb59e": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "fdc1c54dd51b8bb4cb849ce76cd3c444d4fb0d66": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "13d865f2c176a93a27af170b2e5ad3f1d6f84c1d": {"commitGHEventType": "closed", "commitUser": "beeender"}, "326b57cfd688e018b6a27c6e599752954ea1c515": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 123.00027777777778, "commitsDetails": [{"commitHash": "a9e5902e1e1b35d0faf8d1039263c21263450852", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "00508780743879b18205189a2d21d0d5e7ea30a1", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c31733f26c02bc056891eaf59e28a6caf31b715e", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b8b63960bc0c377dc694a4f328d7709179390b1d", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b821b0987fe1127a8534425e0bc96b10161cb59e", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "fdc1c54dd51b8bb4cb849ce76cd3c444d4fb0d66", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "13d865f2c176a93a27af170b2e5ad3f1d6f84c1d", "commitGHEventType": "closed", "commitUser": "beeender", "commitParents": ["e490afe44ba8881f6031a46a6f810db0eed4e10c"], "nameRev": "13d865f2c176a93a27af170b2e5ad3f1d6f84c1d tags/v0.84.2~7^2", "commitMessage": "Release LinkView native pointers\n\nFix #1285\n\n* Add abstract method to NativeObjectReference for native resource\n  releasing.\n* Implement NativeObjectReference.cleanup for UncheckRow and LinkView\n", "commitDateTime": "2015-11-10 22:40:12", "authoredDateTime": "2015-10-27 19:57:41", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmTest.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/CheckedRow.java", "insertions": 7, "deletions": 4, "lines": 11}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/Context.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/LinkView.java", "insertions": 33, "deletions": 15, "lines": 48}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/NativeObjectReference.java", "insertions": 14, "deletions": 2, "lines": 16}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/UncheckedRow.java", "insertions": 24, "deletions": 7, "lines": 31}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmTest.java", "spoonMethods": []}, {"spoonFilePath": "CheckedRow.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.CheckedRow.get(io.realm.internal.Context,io.realm.internal.LinkView,long)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.CheckedRow.get(io.realm.internal.Context,io.realm.internal.Table,long)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Context.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.Context", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.Context.cleanRows()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.Context.executeDelayedDisposal()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LinkView.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.LinkView", "TOT": 5, "UPD": 1, "INS": 3, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.LinkView.add(long)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.internal.LinkView.insert(long,long)", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "io.realm.internal.LinkView.set(long,long)", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "io.realm.internal.LinkView.move(long,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.LinkView.remove(long)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.internal.LinkView.clear()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.internal.LinkView.nativeClose(long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.LinkView.getTargetRowIndex(long)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.internal.LinkView.size()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.internal.LinkView.isEmpty()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.internal.LinkView.where()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.LinkView.isAttached()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.internal.LinkView.LinkViewReference", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NativeObjectReference.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.NativeObjectReference.cleanup()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.NativeObjectReference.clear()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.NativeObjectReference", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UncheckedRow.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.UncheckedRow", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.UncheckedRow.getByRowIndex(io.realm.internal.Context,io.realm.internal.Table,long)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.internal.UncheckedRow.getByRowPointer(io.realm.internal.Context,io.realm.internal.Table,long)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.internal.UncheckedRow.getByRowIndex(io.realm.internal.Context,io.realm.internal.LinkView,long)", "TOT": 6, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.internal.UncheckedRow.nativeClose(long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.UncheckedRow.UncheckedRowNativeObjectReference", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "326b57cfd688e018b6a27c6e599752954ea1c515", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["13d865f2c176a93a27af170b2e5ad3f1d6f84c1d"], "filteredCommitsReason": {"duplicated": 7, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 83.0, "deletions": 33.0, "lines": 116.0, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 65.0, "UPD": 26.0, "INS": 12.0, "MOV": 23.0, "DEL": 4.0, "spoonFilesChanged": 5, "spoonMethodsChanged": 28}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-library/src/main/java/io/realm/internal"], "changesInPackagesSPOON": ["io.realm.internal.UncheckedRow.UncheckedRowNativeObjectReference", "io.realm.internal.Context", "io.realm.internal.LinkView.move(long,long)", "io.realm.internal.LinkView", "io.realm.internal.NativeObjectReference.clear()", "io.realm.internal.NativeObjectReference", "io.realm.internal.LinkView.size()", "io.realm.internal.UncheckedRow.getByRowPointer(io.realm.internal.Context,io.realm.internal.Table,long)", "io.realm.internal.LinkView.remove(long)", "io.realm.internal.LinkView.clear()", "io.realm.internal.LinkView.insert(long,long)", "io.realm.internal.CheckedRow.get(io.realm.internal.Context,io.realm.internal.LinkView,long)", "io.realm.internal.LinkView.getTargetRowIndex(long)", "io.realm.internal.UncheckedRow.getByRowIndex(io.realm.internal.Context,io.realm.internal.LinkView,long)", "io.realm.internal.LinkView.isAttached()", "io.realm.internal.LinkView.set(long,long)", "io.realm.internal.LinkView.nativeClose(long)", "io.realm.internal.UncheckedRow", "io.realm.internal.Context.executeDelayedDisposal()", "io.realm.internal.LinkView.LinkViewReference", "io.realm.internal.UncheckedRow.getByRowIndex(io.realm.internal.Context,io.realm.internal.Table,long)", "io.realm.internal.LinkView.add(long)", "io.realm.internal.UncheckedRow.nativeClose(long)", "io.realm.internal.LinkView.where()", "io.realm.internal.Context.cleanRows()", "io.realm.internal.NativeObjectReference.cleanup()", "io.realm.internal.LinkView.isEmpty()", "io.realm.internal.CheckedRow.get(io.realm.internal.Context,io.realm.internal.Table,long)"]}, {"title": "ArrayOutOfBoundsException while opening Realm on 0.81.1", "body": "hi,\nwhile i haven't been able to repro this myself, i am getting many crashes in Crashlytics about this for many users on 4.x and 5.x.\n\nthis seems to happen from various `AsyncTask` and `AsyncLoader` classes when getting the `Realm` instance.\n\n```\njava.lang.RuntimeException: An error occured while executing doInBackground()\n       at android.support.v4.content.ModernAsyncTask$3.done(SourceFile:137)\n       at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)\n       at java.util.concurrent.FutureTask.setException(FutureTask.java:222)\n       at java.util.concurrent.FutureTask.run(FutureTask.java:242)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n       at java.lang.Thread.run(Thread.java:841)\nCaused by: java.lang.ArrayIndexOutOfBoundsException: length=0; index=0\n       at java.util.concurrent.CopyOnWriteArrayList.get(CopyOnWriteArrayList.java:117)\n       at io.realm.Realm.validateAgainstExistingConfigurations(SourceFile:639)\n       at io.realm.Realm.createAndValidate(SourceFile:585)\n       at io.realm.Realm.create(SourceFile:549)\n       at io.realm.Realm.getInstance(SourceFile:522)\n       at com.ayah.util.RealmUtils.getDatabase(SourceFile:37)\n       at com.ayah.task.db.GetPageInfoTask.loadInBackground(SourceFile:38)\n       at com.ayah.task.db.GetPageInfoTask.loadInBackground(SourceFile:26)\n       at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground$42af7916(SourceFile:40)\n       at android.support.v4.content.ModernAsyncTask$2.call(SourceFile:123)\n       at java.util.concurrent.FutureTask.run(FutureTask.java:237)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n       at java.lang.Thread.run(Thread.java:841)\n```\n\n`RealmUtils.getDatabase` looks like this:\n\n``` java\n  private static final String REALM_DB_NAME = \"ayah.realm\";\n\n  private static final Object sLock = new Object();\n  private static volatile boolean sIsInitialized;\n\n  public static Realm getDatabase(Context context) {\n    if (!sIsInitialized) {\n      synchronized (sLock) {\n        final File path = new File(context.getFilesDir(), REALM_DB_NAME);\n        if (path.exists()) {\n          sIsInitialized = true;\n        } else {\n          final InputStream inputStream =\n              context.getResources().openRawResource(R.raw.ayahrealm);\n          if (copyDatabase(inputStream, path)) {\n            sIsInitialized = true;\n          }\n        }\n      }\n    }\n\n    return Realm.getInstance(\n        new RealmConfiguration.Builder(context)\n            .name(REALM_DB_NAME)\n            .schemaVersion(1)\n            .build());\n  }\n```\n\nthanks!\n-ahmed\n", "url": "https://github.com/realm/realm-java/issues/1248", "user": "ahmedre", "labels": ["T-Bug"], "created": "2015-06-26 19:12:54", "closed": "2015-07-11 22:07:04", "commits": {}, "ttf": 15.000277777777777, "commitsDetails": []}, {"title": "NPE in close() in Realm.java:243 on 0.81.1", "body": "hi,\ni haven't been able to repro this myself, but i am getting many reports in Crashlytics about this on various 4.x and 5.x devices (Samsung and others).\n\nthe code at that line looks to be:\n\n``` java\n            AtomicInteger counter = globalOpenInstanceCounter.get(canonicalPath);\n            if (counter.decrementAndGet() == 0) {\n                globalOpenInstanceCounter.remove(canonicalPath);\n            }\n```\n\nhere's an example stack trace:\n\n```\njava.lang.RuntimeException: An error occured while executing doInBackground()\n       at android.os.AsyncTask$3.done(AsyncTask.java:300)\n       at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)\n       at java.util.concurrent.FutureTask.setException(FutureTask.java:222)\n       at java.util.concurrent.FutureTask.run(FutureTask.java:242)\n       at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n       at java.lang.Thread.run(Thread.java:818)\nCaused by: java.lang.NullPointerException: Attempt to invoke virtual method 'int java.util.concurrent.atomic.AtomicInteger.decrementAndGet()' on a null object reference\n       at io.realm.Realm.close(SourceFile:243)\n       at com.ayah.util.Utils.closeSilently(SourceFile:11)\n       at com.ayah.task.PageVersesTask.doInBackground$3a73acfa(SourceFile:37)\n       at com.ayah.task.PageVersesTask.doInBackground(SourceFile:14)\n       at android.os.AsyncTask$2.call(AsyncTask.java:288)\n       at java.util.concurrent.FutureTask.run(FutureTask.java:237)\n       at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n       at java.lang.Thread.run(Thread.java:818)\n```\n\nthe code using this is doing nothing fancy - `PageVersesTask` is an `AsyncTask` that does a simple `Realm` query and then closes the database:\n\n``` java\n  @Override\n  protected PageDAO doInBackground(Void... params) {\n    Realm realm = null;\n    PageDAO result;\n    try {\n      realm = RealmUtils.getDatabase(mContext);\n      final Page page = realm.where(Page.class)\n          .equalTo(\"index\", mPage - 1)\n          .findFirst();\n      result = PageDAO.from(page);\n    } finally {\n      Utils.closeSilently(realm);\n    }\n    return result;\n  }\n```\n\n`closeSilently` in this case just takes a `Closeable`, checks for null, and if not null, then closes while catching `IOException`.\n\nnote that this same stacktrace happens in some of the other places i use a similar pattern for accessing data from an `AsyncTask`.\n\nthanks!\n", "url": "https://github.com/realm/realm-java/issues/1247", "user": "ahmedre", "labels": ["T-Bug"], "created": "2015-06-26 18:59:03", "closed": "2015-06-29 13:06:25", "commits": {"6eabb25a27e28b7a19cc2bb64015dbe66271da7e": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "35603d3e237dcaaaf4cb8958634fd2944133b846": {"commitGHEventType": "closed", "commitUser": "beeender"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "6eabb25a27e28b7a19cc2bb64015dbe66271da7e", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "35603d3e237dcaaaf4cb8958634fd2944133b846", "commitGHEventType": "closed", "commitUser": "beeender", "commitParents": ["c4c6096a7d8b0431c014ad8707fd05e7ee60ac1f"], "nameRev": "35603d3e237dcaaaf4cb8958634fd2944133b846 tags/v0.82.0~18^2", "commitMessage": "Add synchronized block to Realm.close\n\nThis should fix #1247 and #1241.\nThe Realm creation is protected by static synchronized, but Realm close\nis not. This means there is a chance globalOpenInstanceCounter is\nremoved when it has a value 1.\n", "commitDateTime": "2015-06-29 16:41:59", "authoredDateTime": "2015-06-29 16:33:34", "commitGitStats": [{"filePath": "realm/src/main/java/io/realm/Realm.java", "insertions": 9, "deletions": 4, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Realm.java", "spoonMethods": [{"spoonMethodName": "io.realm.Realm.close()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Data Base crashe.", "body": "Hello! Please, help me. I have a specific problem. My app broke with this error: \n\n\"E/dalvikvm\ufe55 Failed adding to JNI pinned array ref table (1024 entries). \"\n\nI have many appeal to db, because i'm writing my plane's track in db and geting db objects at once. Can the problem be in this part?\nCode example: \n\nrealmDB = Realm.getInstance(getApplicationContext());\ntry{\n              realmDB.beginTransaction();\n              MapflyTrack mapflyTrack = realmDB.createObject(MapflyTrack.class);\n  }catch (Exception e){\n                Log.e(\"Realm Error \", +e);\n} finally {\n             realmDB.commitTransaction();\n}\n...\nrealmDB.where(MapflyTrack.class).equalTo(\"_flightNumber\", _flightNumber).findAll().get(realmDB.where(MapflyTrack.class).equalTo(\"_flightNumber\", _flightNumber).findAll().size() - 1).getMapflyLat()\nrealmDB.where(MapflyTrack.class).equalTo(\"_flightNumber\", _flightNumber).findAll().get(realmDB.where(MapflyTrack.class).equalTo(\"_flightNumber\", _flightNumber).findAll().size() - 1).getMapflyLong();\n\nThus, more than 60 iterations\n", "url": "https://github.com/realm/realm-java/issues/1244", "user": "AntonLunegovPerm", "labels": ["T-Bug"], "created": "2015-06-26 05:16:35", "closed": "2015-06-26 10:42:09", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "a NullPointerExpection came out when I call Realm.close", "body": "My Realm version is 0.81.1 and the log is \n\njava.lang.NullPointerExcepiton\nat io.realm.Realm.close(REalm.java:243)\nat com.cdv.myshare.uploadservice.PreUploadService.commonCommand(PreUploadService.java:413)\n\nThe I call Realm.getDefaultInstance() to get the Realm object and it worked fine.But when I closed it , a \nNullPointerExpection would come out occasionally.\n", "url": "https://github.com/realm/realm-java/issues/1241", "user": "eeoa", "labels": ["T-Bug"], "created": "2015-06-25 07:18:08", "closed": "2015-07-06 06:50:06", "commits": {"6eabb25a27e28b7a19cc2bb64015dbe66271da7e": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "35603d3e237dcaaaf4cb8958634fd2944133b846": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 10.000277777777777, "commitsDetails": [{"commitHash": "6eabb25a27e28b7a19cc2bb64015dbe66271da7e", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "35603d3e237dcaaaf4cb8958634fd2944133b846", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["c4c6096a7d8b0431c014ad8707fd05e7ee60ac1f"], "nameRev": "35603d3e237dcaaaf4cb8958634fd2944133b846 tags/v0.82.0~18^2", "commitMessage": "Add synchronized block to Realm.close\n\nThis should fix #1247 and #1241.\nThe Realm creation is protected by static synchronized, but Realm close\nis not. This means there is a chance globalOpenInstanceCounter is\nremoved when it has a value 1.\n", "commitDateTime": "2015-06-29 16:41:59", "authoredDateTime": "2015-06-29 16:33:34", "commitGitStats": [{"filePath": "realm/src/main/java/io/realm/Realm.java", "insertions": 9, "deletions": 4, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Realm.java", "spoonMethods": [{"spoonMethodName": "io.realm.Realm.close()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "UncheckedRow should still detect deleted objects.", "body": "Hey guys,\n\nGetting this native exception. It doesn't happen all the time. That's why I didn't narrow it down to the exact line. Will update the issue when find it.\n\n```\n06-24 13:52:41.668        86-86/? I/DEBUG\ufe55 *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n06-24 13:52:41.668        86-86/? I/DEBUG\ufe55 Build fingerprint: 'generic/vbox86p/vbox86p:5.0/LRX21M/buildbot02241201:userdebug/test-keys'\n06-24 13:52:41.668        86-86/? I/DEBUG\ufe55 Revision: '0'\n06-24 13:52:41.668        86-86/? I/DEBUG\ufe55 ABI: 'x86'\n06-24 13:52:41.668        86-86/? I/DEBUG\ufe55 pid: 17113, tid: 17113, name: .witdot.twinkie  >>> com.witdot.twinkie <<<\n06-24 13:52:41.668        86-86/? I/DEBUG\ufe55 signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x90\n06-24 13:52:41.671        86-86/? I/DEBUG\ufe55 eax 00000000  ebx a11cce30  ecx 00000001  edx 00000003\n06-24 13:52:41.671        86-86/? I/DEBUG\ufe55 esi 00000000  edi bf94f14c\n06-24 13:52:41.671        86-86/? I/DEBUG\ufe55 xcs 00000073  xds 0000007b  xes 0000007b  xfs 00000007  xss 0000007b\n06-24 13:52:41.671        86-86/? I/DEBUG\ufe55 eip a112b882  ebp bf94f128  esp bf94f100  flags 00210246\n06-24 13:52:41.671        86-86/? I/DEBUG\ufe55 backtrace:\n06-24 13:52:41.671        86-86/? I/DEBUG\ufe55 #00 pc 000b2882  /data/app/com.witdot.twinkie-1/lib/x86/librealm-jni.so\n06-24 13:52:41.671        86-86/? I/DEBUG\ufe55 #01 pc 000a9f1c  /data/app/com.witdot.twinkie-1/lib/x86/librealm-jni.so (Java_io_realm_internal_UncheckedRow_nativeGetLinkView+95)\n06-24 13:52:41.671        86-86/? I/DEBUG\ufe55 #02 pc 003ee6c3  /data/dalvik-cache/x86/data@app@com.witdot.twinkie-1@base.apk@classes.dex\n06-24 13:52:41.811        86-86/? I/DEBUG\ufe55 Tombstone written to: /data/tombstones/tombstone_00\n```\n\nP.S. Realm version is 0.81.1\n", "url": "https://github.com/realm/realm-java/issues/1240", "user": "RobertoArtiles", "labels": ["T-Bug"], "created": "2015-06-24 18:01:52", "closed": "2015-07-02 05:35:24", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "java.lang.ClassNotFoundException: Didn't find class \"io.realm.DefaultRealmModuleMediator\"", "body": "I'm getting this error in my current project, but I started a new one based on a Blank Activity Template and when I try to run the app I get all this info:\n\n06-06 12:42:17.335  23811-23811/com.jgonfer.b2b E/AndroidRuntime\ufe55 FATAL EXCEPTION: main\n    Process: com.jgonfer.b2b, PID: 23811\n    java.lang.ExceptionInInitializerError\n            at com.jgonfer.b2b.StationsActivity.onCreate(StationsActivity.java:18)\n            at android.app.Activity.performCreate(Activity.java:6289)\n            at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1119)\n            at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2646)\n            at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2760)\n            at android.app.ActivityThread.access$900(ActivityThread.java:177)\n            at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1448)\n            at android.os.Handler.dispatchMessage(Handler.java:102)\n            at android.os.Looper.loop(Looper.java:145)\n            at android.app.ActivityThread.main(ActivityThread.java:5944)\n            at java.lang.reflect.Method.invoke(Native Method)\n            at java.lang.reflect.Method.invoke(Method.java:372)\n            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1389)\n            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1184)\n     Caused by: io.realm.exceptions.RealmException: Could not find io.realm.DefaultRealmModuleMediator\n            at io.realm.Realm.getDefaultMediator(Realm.java:256)\n            at io.realm.Realm.<clinit>(Realm.java:165)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at com.jgonfer.b2b.StationsActivity.onCreate(StationsActivity.java:18)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.Activity.performCreate(Activity.java:6289)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1119)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2646)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2760)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.ActivityThread.access$900(ActivityThread.java:177)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1448)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.os.Handler.dispatchMessage(Handler.java:102)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.os.Looper.loop(Looper.java:145)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.ActivityThread.main(ActivityThread.java:5944)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.lang.reflect.Method.invoke(Native Method)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.lang.reflect.Method.invoke(Method.java:372)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1389)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1184)\n     Caused by: java.lang.ClassNotFoundException: io.realm.DefaultRealmModuleMediator\n            at java.lang.Class.classForName(Native Method)\n            at java.lang.Class.forName(Class.java:308)\n            at java.lang.Class.forName(Class.java:272)\n            at io.realm.Realm.getDefaultMediator(Realm.java:251)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at io.realm.Realm.<clinit>(Realm.java:165)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at com.jgonfer.b2b.StationsActivity.onCreate(StationsActivity.java:18)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.Activity.performCreate(Activity.java:6289)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1119)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2646)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2760)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.ActivityThread.access$900(ActivityThread.java:177)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1448)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.os.Handler.dispatchMessage(Handler.java:102)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.os.Looper.loop(Looper.java:145)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.ActivityThread.main(ActivityThread.java:5944)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.lang.reflect.Method.invoke(Native Method)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.lang.reflect.Method.invoke(Method.java:372)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1389)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1184)\n     Caused by: java.lang.ClassNotFoundException: Didn't find class \"io.realm.DefaultRealmModuleMediator\" on path: DexPathList[[zip file \"/data/app/com.jgonfer.b2b-1/base.apk\"],nativeLibraryDirectories=[/data/app/com.jgonfer.b2b-1/lib/arm, /vendor/lib, /system/lib]]\n            at dalvik.system.BaseDexClassLoader.findClass(BaseDexClassLoader.java:56)\n            at java.lang.ClassLoader.loadClass(ClassLoader.java:511)\n            at java.lang.ClassLoader.loadClass(ClassLoader.java:469)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.lang.Class.classForName(Native Method)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.lang.Class.forName(Class.java:308)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.lang.Class.forName(Class.java:272)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at io.realm.Realm.getDefaultMediator(Realm.java:251)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at io.realm.Realm.<clinit>(Realm.java:165)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at com.jgonfer.b2b.StationsActivity.onCreate(StationsActivity.java:18)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.Activity.performCreate(Activity.java:6289)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1119)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2646)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2760)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.ActivityThread.access$900(ActivityThread.java:177)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1448)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.os.Handler.dispatchMessage(Handler.java:102)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.os.Looper.loop(Looper.java:145)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.ActivityThread.main(ActivityThread.java:5944)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.lang.reflect.Method.invoke(Native Method)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.lang.reflect.Method.invoke(Method.java:372)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1389)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1184)\n    Suppressed: java.lang.ClassNotFoundException: io.realm.DefaultRealmModuleMediator\n            at java.lang.Class.classForName(Native Method)\n            at java.lang.BootClassLoader.findClass(ClassLoader.java:781)\n            at java.lang.BootClassLoader.loadClass(ClassLoader.java:841)\n            at java.lang.ClassLoader.loadClass(ClassLoader.java:504)\n            ... 20 more\n     Caused by: java.lang.NoClassDefFoundError: Class not found using the boot class loader; no stack available\n\nIn my code, I simply call an instance of Realm like that:\n\n``` java\n@Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_stations);\n\n        Realm realm = Realm.getInstance(this);\n    }\n```\n\nMy build.gradle file:\n\n``` java\napply plugin: 'com.android.application'\n\nandroid {\n    compileSdkVersion 22\n    buildToolsVersion \"21.1.2\"\n\n    defaultConfig {\n        applicationId \"com.jgonfer.b2b\"\n        minSdkVersion 15\n        targetSdkVersion 22\n        versionCode 1000\n        versionName \"1.0\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n}\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    compile 'com.android.support:appcompat-v7:22.2.0'\n    compile 'io.realm:realm-android:0.80.3'\n}\n```\n\nAnd the current version of JDK that I'm using:\n\n``` terminal\njava version \"1.8.0_31\"\nJava(TM) SE Runtime Environment (build 1.8.0_31-b13)\nJava HotSpot(TM) 64-Bit Server VM (build 25.31-b07, mixed mode)\n```\n\nI found an issue that seems like mine, but he is using Kotlin and I don't: https://github.com/realm/realm-java/issues/1179\n\nAs I said, it's an empty project and does nothing special. What could cause this problem? I'm a little lost. Thanks in advance!\n", "url": "https://github.com/realm/realm-java/issues/1189", "user": "jgonfer", "labels": ["T-Bug"], "created": "2015-06-06 11:15:26", "closed": "2015-06-06 12:56:09", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "The GC can't keep up with cleaning Rows during tight loops", "body": "The Android Garbage Collector is not able to keep up in cleaning up all the instances (especially of `Row`) if they are created in a tight loop.\n", "url": "https://github.com/realm/realm-java/issues/1174", "user": "emanuelez", "labels": ["T-Bug"], "created": "2015-06-02 12:03:50", "closed": "2015-06-09 08:45:55", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "Unchecked cast warnings", "body": "I am getting the unchecked cast warning for the proxy class that gets generated for all my realm objects.\n\nHere is an example of the warning generated when processing my simple User class:\n\nrequired: E\n  found:    UserRealmProxy\n  where E is a type-variable:\n    E extends RealmObject declared in method <E>newInstance(Class<E>)\n[[directory to my build]]/intermediates/classes/release/io/realm/DefaultRealmModuleMediator.java:186: warning: [unchecked] unchecked cast\n        Class<E> clazz = (Class<E>) ((obj instanceof RealmObjectProxy) ? obj.getClass().getSuperclass() : obj.getClass());\n\nI like to run a **no** warning environment, so this makes things really difficult ;)\n", "url": "https://github.com/realm/realm-java/issues/1169", "user": "joey-harward", "labels": ["T-Bug"], "created": "2015-05-29 18:54:27", "closed": "2015-06-08 12:15:23", "commits": {"d8b22d3a3f435c32f9cecdf9dc9cd175802ff392": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "d8b22d3a3f435c32f9cecdf9dc9cd175802ff392", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": ["0f290d116f4047bab19c576ea60958da11f10b4e", "f8c9060f73c853528ad6a6186bd0d972cc52820b"], "nameRev": "d8b22d3a3f435c32f9cecdf9dc9cd175802ff392 tags/v0.81.0~15", "commitMessage": "Merge pull request #1182 from realm/nh-1169-unchecked_cast\n\nFixes #1169 unchecked cast", "commitDateTime": "2015-06-08 14:15:22", "authoredDateTime": "2015-06-08 14:15:22", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm-annotations-processor/src/main/java/io/realm/processor/ModuleMetaData.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyMediatorGenerator.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "realm-annotations-processor/src/test/resources/io/realm/RealmDefaultModuleMediator.java", "insertions": 7, "deletions": 5, "lines": 12}, {"filePath": "realm/src/main/java/io/realm/internal/Util.java", "insertions": 7, "deletions": 2, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ModuleMetaData.java", "spoonMethods": []}, {"spoonFilePath": "RealmProxyMediatorGenerator.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitCopyToRealmMethod(com.squareup.javawriter.JavaWriter)", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitNewInstanceMethod(com.squareup.javawriter.JavaWriter).5.emitStatement(int,com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitCopyToRealmMethod(com.squareup.javawriter.JavaWriter).7.emitStatement(int,com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitCreteOrUpdateUsingJsonObject(com.squareup.javawriter.JavaWriter).8.emitStatement(int,com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitCreateUsingJsonStream(com.squareup.javawriter.JavaWriter).9.emitStatement(int,com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmDefaultModuleMediator.java", "spoonMethods": [{"spoonMethodName": "io.realm.DefaultRealmModuleMediator.newInstance(java.lang.Class)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.DefaultRealmModuleMediator.copyOrUpdate(io.realm.Realm,io.realm.RealmObject,boolean,java.util.Map)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.DefaultRealmModuleMediator.createOrUpdateUsingJsonObject(java.lang.Class,io.realm.Realm,org.json.JSONObject,boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.DefaultRealmModuleMediator.createUsingJsonStream(java.lang.Class,io.realm.Realm,android.util.JsonReader)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Util.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.Util.getOriginalModelClass(java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Native crash  signal 11 (SIGSEGV), code 2", "body": "Finally i can reproduce the native crash in my project\nHere is the original native crash backtrace:\n\n```\n05-28 15:30:42.375 28102 28102 F libc    : Fatal signal 11 (SIGSEGV), code 2, fault addr 0xbe1faff8 in tid 28102 (.kiwian.jiaxiao)\n05-28 15:30:42.492   237   237 I DEBUG   : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n05-28 15:30:42.492   237   237 I DEBUG   : Build fingerprint: 'oneplus/bacon/A0001:5.0.2/LRX22G/YNG1TAS17L:user/release-keys'\n05-28 15:30:42.493   237   237 I DEBUG   : Revision: '0'\n05-28 15:30:42.493   237   237 I DEBUG   : ABI: 'arm'\n05-28 15:30:42.493   237   237 I DEBUG   : pid: 28102, tid: 28102, name: .kiwian.jiaxiao  >>> com.kiwian.jiaxiao <<<\n05-28 15:30:42.494   237   237 I DEBUG   : signal 11 (SIGSEGV), code 2 (SEGV_ACCERR), fault addr 0xbe1faff8\n05-28 15:30:42.542   237   237 I DEBUG   :     r0 afdefd30  r1 afdefd30  r2 00000006  r3 afdefd38\n05-28 15:30:42.542   237   237 I DEBUG   :     r4 96a827c0  r5 96a827c0  r6 afdefd30  r7 00000006\n05-28 15:30:42.542   237   237 I DEBUG   :     r8 00000000  r9 96a827c0  sl 00000006  fp afdefcc4\n05-28 15:30:42.542   237   237 I DEBUG   :     ip 0000001d  sp be1fb000  lr afdb5827  pc afdcfd06  cpsr 600f0030\n05-28 15:30:42.542   237   237 I DEBUG   : \n05-28 15:30:42.542   237   237 I DEBUG   : backtrace:\n05-28 15:30:42.542   237   237 I DEBUG   :     #00 pc 000a7d06  /data/app/com.kiwian.jiaxiao-1/lib/arm/librealm-jni.so\n05-28 15:30:42.542   237   237 I DEBUG   :     #01 pc 00000d34  /data/app/com.kiwian.jiaxiao-1/lib/arm/librealm-jni.so\n05-28 15:30:42.808   775  1505 W ActivityManager: getTasks: caller 10124 does not hold GET_TASKS; limiting output\n05-28 15:30:43.765   237   237 I DEBUG   : \n```\n\nAnd here is the crash backtrace with my test case:\n\n```\n05-28 16:04:10.208   237   237 I DEBUG   : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n05-28 16:04:10.208   237   237 I DEBUG   : Build fingerprint: 'oneplus/bacon/A0001:5.0.2/LRX22G/YNG1TAS17L:user/release-keys'\n05-28 16:04:10.208   237   237 I DEBUG   : Revision: '0'\n05-28 16:04:10.208   237   237 I DEBUG   : ABI: 'arm'\n05-28 16:04:10.208   237   237 I DEBUG   : pid: 14514, tid: 14551, name: ationTestRunner  >>> io.realm.test <<<\n05-28 16:04:10.208   237   237 I DEBUG   : signal 11 (SIGSEGV), code 2 (SEGV_ACCERR), fault addr 0xaccd8ff8\n05-28 16:04:10.212   237   237 I DEBUG   :     r0 afdefd30  r1 afdefd30  r2 00000006  r3 afdefd38\n05-28 16:04:10.212   237   237 I DEBUG   :     r4 acbd3860  r5 acbd3860  r6 afdefd30  r7 00000006\n05-28 16:04:10.212   237   237 I DEBUG   :     r8 00000000  r9 acbd3860  sl 00000006  fp afdefcc4\n05-28 16:04:10.212   237   237 I DEBUG   :     ip 0000001d  sp accd9000  lr afdb5827  pc afdcfd06  cpsr 600f0030\n05-28 16:04:10.213   237   237 I DEBUG   : \n05-28 16:04:10.213   237   237 I DEBUG   : backtrace:\n05-28 16:04:10.213   237   237 I DEBUG   :     #00 pc 000a7d06  /data/app/io.realm.test-2/lib/arm/librealm-jni.so\n05-28 16:04:10.213   237   237 I DEBUG   :     #01 pc 00000d34  /data/app/io.realm.test-2/lib/arm/librealm-jni.so\n```\n\nAnd the testcase to reproduce it:\n\n``` java\n    private RealmResults<CatOwner> results = null;\n    public void testModifyRealmListD() {\n        //If it doesn't crash, increase this\n        final int count = 100;\n        // Enable the list for maintaining the reference will avoid crash!!!!!!!!!!!!!\n        //final ArrayList<RealmResults<CatOwner>> arrayList = new ArrayList<RealmResults<CatOwner>>();\n\n        results = testRealm.where(CatOwner.class).findAll();\n        RealmChangeListener listener = new RealmChangeListener() {\n            @Override\n            public void onChange() {\n                // Enable the list for maintaining the reference will avoid crash!!!!!!!!!!!!!\n                //arrayList.add(results);\n                results = results.where().notEqualTo(\"name\", \"asdfas\" + count).findAll();\n                assertEquals(count, results.size());\n                for (int i=0; i<count; i++) {\n                    CatOwner catOwner = results.get(i);\n                    assertEquals(catOwner.getName(), \"catOwner\"+i);\n                    Log.e(\"testModifyRealmListD\", \"loop count \" + i);\n                }\n                System.gc();\n            }\n        };\n        testRealm.addChangeListener(listener);\n        for (int i=1; i<=count; i++) {\n            doTestModifyRealmList(count);\n        }\n    }\n\n    private void doTestModifyRealmList(final int count) {\n        final RealmResults<CatOwner> results = testRealm.where(CatOwner.class).findAll();\n        testRealm.beginTransaction();\n        for (int i=0; i<count; i++) {\n            CatOwner catOwner = new CatOwner();\n            catOwner.setName(\"catOwner\" + i);\n            catOwner = testRealm.copyToRealmOrUpdate(catOwner);\n        }\n        testRealm.commitTransaction();\n    }\n```\n\nI am almost 99% sure it is caused by wild native pointer which is released by the GC since if the ReleamResults's references are maitained by a ArrayList, the crash won't happen.\nI guess something needs to be done if a query is created from a RealmResults\n", "url": "https://github.com/realm/realm-java/issues/1161", "user": "beeender", "labels": ["T-Bug"], "created": "2015-05-28 08:25:50", "closed": "2015-07-11 07:26:54", "commits": {}, "ttf": 43.000277777777775, "commitsDetails": []}, {"title": "Setting a new RealmList to an object appends to the old existing RealmList", "body": "Using Realm 0.80.1\n\nI'm a little confused with this test I made:\n\n``` java\npublic class Test extends RealmObject {\n\n    private int integerValue;\n    private RealmList<Test> tests;\n\n    public int getIntegerValue() {\n        return integerValue;\n    }\n\n    public void setIntegerValue(int integerValue) {\n        this.integerValue = integerValue;\n    }\n\n    public RealmList<Test> getTests() {\n        return tests;\n    }\n\n    public void setTests(RealmList<Test> tests) {\n        this.tests = tests;\n    }\n}\n\n    public void testLists() {\n        Test one = new Test();\n        one.setIntegerValue(1);\n        Test two = new Test();\n        two.setIntegerValue(2);\n\n        testRealm.beginTransaction();\n        try {\n            one = testRealm.copyToRealm(one);\n            two = testRealm.copyToRealm(two);\n\n            two.setTests(new RealmList<Test>(one));\n            two.setTests(new RealmList<Test>(one));\n\n            testRealm.commitTransaction();\n        } catch (Exception e) {\n            testRealm.cancelTransaction();\n            fail();\n        }\n\n        assertThat(two.getTests().size(), equalTo(1));\n    }\n```\n\nwhich fails with\n\n``` java\njava.lang.AssertionError:\nExpected: <1>\nbut: was <2>\n```\n\nI need to use `two.getTests().clear()` before setting it again to get the expected result.\n", "url": "https://github.com/realm/realm-java/issues/1143", "user": "tmeunier", "labels": ["T-Bug"], "created": "2015-05-21 09:16:59", "closed": "2015-05-21 10:48:40", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "RealmList.add() throws misleading exception for standalone objects", "body": "From this SO question: http://stackoverflow.com/questions/30340752/cant-add-new-object-to-realmlist-due-to-null-object-reference\n\nThe following will fail with a NullPointer exception:\n\n```\nRealmList<Bar> list = realm.where(Foo.class).findFirst().getBarList();\nlist.add(new Bar()); \n// throws NullPointerException: Attempt to invoke virtual method 'long io.realm.internal.Row.getIndex()' on a null object reference\n```\n\nAs a minimum we should check if the object added is a managed RealmObject, but even better might be to do a `copyToRealm()` or `copyToRealmOrUpdate` inside the RealmList if it is a standalone object.\n\nThe later is needed for the following corner case:\n\n```\nRealmResult<Foo> result;\nRealmList<BarWithPrimaryKey> list1 = result.get(0).getBarList();\nRealmList<BarWithPrimaryKey> list2 = result.get(1).getBarList();\n\nBarWithPrimaryKey newBar = new BarWithPrimaryKey();\nlist1.add(newBar);\nlist2.add(newBar);\n```\n\nwhich would fail if just using `copyToRealm`.\n\nWhat do you think @emanuelez @kneth \n", "url": "https://github.com/realm/realm-java/issues/1140", "user": "cmelchior", "labels": ["T-Bug"], "created": "2015-05-20 18:09:39", "closed": "2015-06-02 07:41:53", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "Add a check in the annotation processor for the existence of the generic type of RealmLists", "body": "The annotation processor will crash if a model is defined like this:\n\n```\nprivate RealmList someField\n```\n", "url": "https://github.com/realm/realm-java/issues/1131", "user": "emanuelez", "labels": ["T-Bug"], "created": "2015-05-18 08:49:28", "closed": "2015-06-10 09:41:27", "commits": {}, "ttf": 23.00027777777778, "commitsDetails": []}, {"title": "Multiple getters/setters for boolean fields should throw an error", "body": "Currently it is possible to define multiple getters and setters for boolean fields as we allow multiple naming schemes. Ideally only one getter/setter should be allowed for boolean fields to avoid errors like the one described here: http://stackoverflow.com/questions/30219968/adding-items-to-realm-database-changes-some-variables\n\nHaving the annotation processor throw an error is probably the cleanest solution as having two getters or setters for the same field is in all likelihood a developer error. \n", "url": "https://github.com/realm/realm-java/issues/1130", "user": "cmelchior", "labels": ["T-Bug"], "created": "2015-05-17 18:37:13", "closed": "2015-09-01 08:11:13", "commits": {}, "ttf": 106.00027777777778, "commitsDetails": []}, {"title": "Check if migration is needed is too loose for RealmList", "body": "If a model class has a `RealmList<A>` field is change to a `RealmList<B>`, the proxy class' `validateTable` will not throw a `MigrationIsNeeded` exception. This can lead to an inconsistent Realm file as discovered in #1094.\n", "url": "https://github.com/realm/realm-java/issues/1114", "user": "kneth", "labels": ["T-Bug"], "created": "2015-05-12 08:58:35", "closed": "2015-05-20 11:01:25", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Possible to call RealmList.clear() outside a write transaction", "body": "It looks like it is possible to call RealmList.clear() outside a write transaction which can cause core to crash in some cases. Unit test exposing the issue is here: https://github.com/realm/realm-java/tree/cm-bug-clear.\n\nThere should be unit tests for all functions that modify Realm\n", "url": "https://github.com/realm/realm-java/issues/1112", "user": "cmelchior", "labels": ["T-Bug"], "created": "2015-05-12 07:11:56", "closed": "2015-05-18 12:25:04", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "Possibility of a memory leak due to a combination of `RealmChangeListener` and `automaticUpdate`", "body": "Reported by @zaki50 \n\n`RealmChangeListener` is added to `Realm` when `automaticUpdate` is true. Then the listener instance was not released until the `Realm` instance is released because the `RealmChangeListener` is never deleted.\n\nSince a listener instance is an anonymous inner class of `RealmBaseAdapter`, it holds a reference to the `RealmBaseAdapter` as an enclosing instance. `RealmBaseAdapter` usually holds a reference to the `Activity` that uses it as `Context`. So these instances will not be released until the `Realm` instance is released.\n\nIf you use `Realm` in only one Activity, there is no problem because `Realm#close()` is called when the `Activity`  is destroyed. (Strictly speaking, adapters may be accumulated if re-create a `RealmBaseAdapter` while the Activity is alive.)\n\nOn the other hand, if you use two activities, there are main activity and another activity that has `ListView`, each activity uses `Realm`, the `Realm` instance is held in cache until `onDestroy` of main activity is called. For example if you transition between the two Activities as follows, Main -> List-> back -> List -> back -> List... I think the `RealmChangeListener` may be accumulated in the `Realm`.\n\nWhat do you think? @cmelchior @emanuelez \n", "url": "https://github.com/realm/realm-java/issues/1109", "user": "kishikawakatsumi", "labels": ["T-Bug"], "created": "2015-05-11 18:52:57", "closed": "2015-05-12 13:05:09", "commits": {"757b726b73ca63f6ffd505ab9751e7b86159855c": {"commitGHEventType": "referenced", "commitUser": "emanuelez"}, "96bf95a8b3bc8bfc357eac190368d4e87f3c806a": {"commitGHEventType": "referenced", "commitUser": "emanuelez"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "757b726b73ca63f6ffd505ab9751e7b86159855c", "commitGHEventType": "referenced", "commitUser": "emanuelez", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "96bf95a8b3bc8bfc357eac190368d4e87f3c806a", "commitGHEventType": "referenced", "commitUser": "emanuelez", "commitParents": ["2b7474f0484dcb2835285aec6615f7d444b1ffc3"], "nameRev": "96bf95a8b3bc8bfc357eac190368d4e87f3c806a tags/v0.80.3~22^2", "commitMessage": "Fix a memory leak in RealmBaseAdapter\n\nFixes #1109\nWe now use WeakReferences to store the change listeners.\nThis allows the Garbage Collector to clean up the adapters.", "commitDateTime": "2015-05-12 15:03:59", "authoredDateTime": "2015-05-12 13:25:51", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/src/main/java/io/realm/Realm.java", "insertions": 14, "deletions": 7, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Realm.java", "spoonMethods": [{"spoonMethodName": "io.realm.Realm.sendNotifications()", "TOT": 7, "UPD": 2, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "io.realm.Realm.addChangeListener(io.realm.RealmChangeListener)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.Realm.removeChangeListener(io.realm.RealmChangeListener)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["96bf95a8b3bc8bfc357eac190368d4e87f3c806a"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 14.0, "deletions": 7.0, "lines": 21.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 11.0, "UPD": 2.0, "INS": 3.0, "MOV": 3.0, "DEL": 3.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/src/main/java/io/realm"], "changesInPackagesSPOON": ["io.realm.Realm.sendNotifications()", "io.realm.Realm.addChangeListener(io.realm.RealmChangeListener)", "io.realm.Realm.removeChangeListener(io.realm.RealmChangeListener)"]}, {"title": "Date field gets reset to default value on createOrUpdateAllFromJson", "body": "Unlike suggested by the changelog (\"0.80.1 Realm.createOrUpdateWithJson() no longer resets fields to their default value if they are not found in the JSON input\") createOrUpdateAllFromJson resets Date fields to 0 (beginning of time) when the corresponding value is missing in the input JSON\n", "url": "https://github.com/realm/realm-java/issues/1095", "user": "hertill", "labels": ["T-Bug"], "created": "2015-05-07 02:41:15", "closed": "2015-05-11 07:56:35", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "RealmList clear() causes SIGSEGV in LinkView.nativeClear", "body": "I've been using Realm in my Android app for a couple of months now, and changed from 0.80.0 to 0.80.1 about a week ago. I've had no major issues so far, until I added the following code:\n\n``` Java\n        long   scanItemId   = 1;\n        String partialTitle = \"Man\";\n\n        ScanItem scanItem = realm.where(ScanItem.class).equalTo(\"id\", scanItemId).findFirst();\n\n        // Do the search of our local database\n        boolean caseSensitive = false;\n        RealmResults<Movie> movieList = realm.where(Movie.class).contains(\"title\", partialTitle, caseSensitive).findAllSorted(\"title\");\n\n        realm.beginTransaction();\n\n        scanItem.getMovieResultList().clear();        // <--- crashes here\n        scanItem.getMovieResultList().addAll(movieList); // <--- or, sometimes crashes here\n\n        realm.commitTransaction();\n```\n\nSometimes it crashes in the `clear()` (at `LinkView.nativeClear`), sometimes in the `addAll()` (at `LinkView.nativeAdd`) after 5 or 6 items are added. If I use different search criteria, it will crash after 5 or 6 or maybe 7 items are added.\n\nI have similar code all through the app, but haven't had any issues until this last week, with the code above.\n\nI tried copying the code to the main activity, and invoking it from a menu item, and it worked fine. Then I made some unrelated code changes in other places, went back and tried the code in the main activity again and it crashed, in the `clear()` method call.\n\nI have tried building a small app to reproduce this problem, and it will crash at the same place in the code above, but only when I use the same database.\n\nSo, I'm not sure if it's something I'm doing, or if maybe the database has become corrupted? Although, I am able to retrieve all Movie records without any issues - all my other code manipulates the database and works fine.\n\nHere are the database classes (with some static methods, getters, setters removed for brevity):\n\n```\npublic class Movie extends RealmObject implements Filterable {\n\n    @PrimaryKey\n    private long                id = -1;\n\n    private String              title;\n\n    private RealmList<Isbn>     isbns = new RealmList<>();\n\n    private int                 year;\n\n    private Series              series;\n    private int                 numberInSeries;\n\n    private RealmList<Person>   actors = new RealmList<>();\n    private RealmList<Person>   directors = new RealmList<>();\n\n    private String              imdbId; // eg \"tt0796365\"\n\n    private String              lentTo;\n    private boolean             got;\n    private boolean             seen;\n    private boolean             want;\n    private int                 rating;\n    private String              comments;\n\n    private String              description;\n\n    public Movie() {\n    }\n\n    public Movie(String title) {\n        this.title = title;\n    }\n// getters, setters, etc removed\n}\n\npublic class ScanItem extends RealmObject {\n    @PrimaryKey\n    private long                id = -1;\n\n    /** If we know the ISBN or movie title, fill them in here */\n    private String              isbn = \"\";\n    private String              title = \"\";\n\n    /** The movie stored in the local database */\n    private long                dbMovieId = -1;\n\n    /** The movie we retrieved from the web */\n    private DvdItem             webMovie;\n\n    /** A list of movies indicates that the user needs to choose one, as we don't know which one it is */\n    private RealmList<Movie>    movieResultList = new RealmList<>();\n\n    /** A list of movies indicates that the user needs to choose one, as we don't know which one it is */\n    private RealmList<DvdItem>  webResultList = new RealmList<>();\n\n    /** If we are in the process of doing a lookup, track the progress here */\n    private int                 lookupStatus = LookupStatus.NONE.ordinal();\n\n    /** If we need the user to guide us, set this to what we need to know, so the user can be asked */\n    private int                 askUserRequest = AskUserRequest.NONE.ordinal();\n\n    /** If we get an exception, store it here so we can inform the user what happened */\n    private String              exceptionMessage = \"\";\n\n    private boolean             locked = false;\n\n    public ScanItem() {\n    }\n// getters, setters, etc removed\n}\n```\n\nHere's a copy of the crash log from logcat:\n\n```\n05-06 18:45:43.319  21007-21007/? D/dalvikvm\ufe55 Trying to load lib /data/app-lib/com.stevem.collection.dvd-1/librealm-jni.so 0xa4f3caa0\n05-06 18:45:43.319  21007-21007/? D/dalvikvm\ufe55 Added shared lib /data/app-lib/com.stevem.collection.dvd-1/librealm-jni.so 0xa4f3caa0\n05-06 18:45:47.069  21007-21007/? A/libc\ufe55 Fatal signal 11 (SIGSEGV) at 0x49b67510 (code=1), thread 21007 (.collection.dvd)\n05-06 18:45:47.189      936-936/? I/DEBUG\ufe55 *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n05-06 18:45:47.189      936-936/? I/DEBUG\ufe55 Build fingerprint: 'generic_x86/sdk_x86/generic_x86:4.4.2/KK/999428:eng/test-keys'\n05-06 18:45:47.189      936-936/? I/DEBUG\ufe55 Revision: '0'\n05-06 18:45:47.189      936-936/? I/DEBUG\ufe55 pid: 21007, tid: 21007, name: .collection.dvd  >>> com.stevem.collection.dvd <<<\n05-06 18:45:47.189      936-936/? I/DEBUG\ufe55 signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 49b67510\n05-06 18:45:47.339      936-936/? I/DEBUG\ufe55 eax b8d74d40  ebx 96714e30  ecx 000c0300  edx bff220c8\n05-06 18:45:47.339      936-936/? I/DEBUG\ufe55 esi b8d74d40  edi 49b6750c\n05-06 18:45:47.339      936-936/? I/DEBUG\ufe55 xcs 00000073  xds 0000007b  xes 0000007b  xfs 00000000  xss 0000007b\n05-06 18:45:47.339      936-936/? I/DEBUG\ufe55 eip 96646630  ebp bff220b8  esp bff220a0  flags 00210217\n05-06 18:45:47.339      936-936/? E/Corkscrew\ufe55 unrecognized dwarf lower part encoding: 0x59\n05-06 18:45:47.339      936-936/? I/DEBUG\ufe55 backtrace:\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 #00  pc 00083630  /data/app-lib/com.stevem.collection.dvd-1/librealm-jni.so\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 #01  pc 000836da  /data/app-lib/com.stevem.collection.dvd-1/librealm-jni.so\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 #02  pc 0009e7d8  /data/app-lib/com.stevem.collection.dvd-1/librealm-jni.so\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 stack:\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff22060  00000088\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff22064  00000000\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff22068  bff22088  [stack]\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff2206c  9662c9de  /data/app-lib/com.stevem.collection.dvd-1/librealm-jni.so\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff22070  0000005b\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff22074  b7624196  /system/lib/libc.so (malloc+6)\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff22078  96714e30  /data/app-lib/com.stevem.collection.dvd-1/librealm-jni.so\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff2207c  966911f8  /data/app-lib/com.stevem.collection.dvd-1/librealm-jni.so (operator new(unsigned int)+40)\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff22080  00000088\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff22084  b8c355c8  [heap]\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff22088  b8d74c00  [heap]\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff2208c  000c0300\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff22090  b8d74d40  [heap]\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff22094  e06c0c9e\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff22098  bff220b8  [stack]\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff2209c  96617cd6  /data/app-lib/com.stevem.collection.dvd-1/librealm-jni.so\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 #00  bff220a0  b8d28614  [heap]\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff220a4  e06c0c9e\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff220a8  bff220c8  [stack]\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff220ac  9664675b  /data/app-lib/com.stevem.collection.dvd-1/librealm-jni.so\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff220b0  b8d74d40  [heap]\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff220b4  e06c0c9e\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff220b8  bff220d8  [stack]\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff220bc  966466db  /data/app-lib/com.stevem.collection.dvd-1/librealm-jni.so\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 #01  bff220c0  00000005\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff220c4  b8c353b0  [heap]\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff220c8  49b6750c\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff220cc  e06c0c9e\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff220d0  b8d73e30  [heap]\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff220d4  bff22100  [stack]\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff220d8  bff22128  [stack]\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff220dc  966617d9  /data/app-lib/com.stevem.collection.dvd-1/librealm-jni.so\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff220e0  bff22100  [stack]\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff220e4  b8d28614  [heap]\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff220e8  e06c0c9e\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff220ec  96612696  /data/app-lib/com.stevem.collection.dvd-1/librealm-jni.so\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff220f0  ffffffff\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff220f4  b8d743c0  [heap]\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff220f8  0000002e\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 bff220fc  b8d73e30  [heap]\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 memory map around fault addr 49b67510:\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 (no map below)\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 (no map for address)\n05-06 18:45:47.349      936-936/? I/DEBUG\ufe55 964ff000-96500000 rw- /data/data/com.stevem.collection.dvd/files/default.realm.lock\n05-06 18:45:47.409    1275-1297/system_process D/dalvikvm\ufe55 GC_FOR_ALLOC freed 685K, 22% free 6016K/7652K, paused 0ms, total 0ms\n05-06 18:45:47.409    1275-1297/system_process I/BootReceiver\ufe55 Copying /data/tombstones/tombstone_08 to DropBox (SYSTEM_TOMBSTONE)\n05-06 18:45:47.429      939-939/? D/Zygote\ufe55 Process 21007 terminated by signal (11)\n```\n\nAny ideas on what might be causing this, or any suggestions on how I might diagnose this further would be greatly appreciated !\n\nThanks,\n- Steve\n", "url": "https://github.com/realm/realm-java/issues/1094", "user": "SteveInNZ", "labels": ["T-Bug"], "created": "2015-05-06 23:44:12", "closed": "2015-05-20 15:39:05", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "Proper errorhandling missing when adding standalone objects to RealmList", "body": "Reproduced on versions: `0.80.0`, `0.80.1`\n\nI have following data objects:\n\n``` java\npublic class RealmString extends RealmObject {\n    private String value;\n\n    public RealmString() {\n    }\n    public RealmString(String value) {\n        this.value = value;\n    }\n    public String getValue() {\n        return value;\n    }\n    public void setValue(String value) {\n        this.value = value;\n    }\n}\n\npublic class Person extends RealmObject {\n    private RealmList<RealmString> emailList;\n\n    // getter and setter\n}\n```\n\nI want to get `Person` object from realm and update `emailList`\n\n``` java\nRealm realm = ...\nrealm.beginTransaction();\nPerson person = realm.where(Person.class).findFirst();\nperson.getEmailList().add(new RealmString(\"jondoe@gmail.com\")); // this line crash with NPE\nrealm.commitTransaction();\n```\n\nCrash log:\n\n```\nCaused by: java.lang.NullPointerException\n            at io.realm.RealmList.add(RealmList.java:120)\n```\n\nI think `person.getEmailList()` return null, so I tried `person.setEmailList(newList)` which cause the same crash.\n", "url": "https://github.com/realm/realm-java/issues/1076", "user": "dmytrodanylyk", "labels": ["T-Bug"], "created": "2015-04-30 08:13:32", "closed": "2017-03-24 10:41:00", "commits": {}, "ttf": 694.0002777777778, "commitsDetails": []}, {"title": "[DOC] RealmQuery.CASE_INSENSITIVE is not insensitive for special character", "body": "When using the query below on the following text:\nJ\u00d8SANG SJ\u00d8MAT\n\nit does not get hits on j\u00f8s or J\u00f8s , but hits on J\u00d8S and j\u00d8s\n\ncontains(\"name\", searchEditText.getText().toString(), RealmQuery.CASE_INSENSITIVE)\n\nSeems that it does not support non-english characters.\n", "url": "https://github.com/realm/realm-java/issues/1069", "user": "bbergshaven", "labels": ["T-Bug"], "created": "2015-04-24 13:54:50", "closed": "2015-05-20 12:39:03", "commits": {}, "ttf": 25.00027777777778, "commitsDetails": []}, {"title": "Search over RealmResults is unstable (realm 0.80.1)", "body": "I've got a Contact class which has fields for first name etc. I've been trying to search through contact list provided by _RealmQuery_:\n\n```\nRealmQuery<ContactData> query = ContactRealmAdapter.this.realmResultsContacts.where();\n\nswitch (name.length) {\n    case 1:\n        query\n              .beginsWith(\"firstName\", name[0]).or()\n              .beginsWith(\"patronym\", name[0]).or()\n              .beginsWith(\"lastName\", name[0]);\n        break;\n....\n}\n\nContactRealmAdapter.this.realmResultsContacts =\n                            query.findAllSorted(\"lastName\", true);\n```\n\nAs you can see,  _String[] name_ contains person's name split by whitespaces, all names are written in cyrillic symbols (UTF-8). The problem is that _RealmResults_ is empty when _name[0]_ begins with some of cyrillic symbols (for example, \u041a), for no particular reason. I am aware of the fact that case insensitive string matches in queries are only supported for certain character sets, so that's not the problem.\n\nWhen I tried to query contacts directly through Realm instance, search worked perfectly. It also works when I search by one criteria, for example:\n\n```\nquery.beginsWith(\"lastName\", name[0])\n```\n", "url": "https://github.com/realm/realm-java/issues/1063", "user": "funbringer", "labels": ["T-Bug"], "created": "2015-04-23 12:54:54", "closed": "2015-06-09 12:44:18", "commits": {}, "ttf": 46.000277777777775, "commitsDetails": []}, {"title": "Unable to use a realm database file created with realm 0.80.0 with 0.80.1", "body": "I have a realm database file created using realm 0.80.0 that works fine under that version.  After changing gradle to pull in 0.80.1 I get an exception thrown that a migration is needed.  Using the following I create a migration:\n\n```\n    try {\n        realm = Realm.getInstance(context);\n    } catch (RealmMigrationNeededException ex) {\n        Log.i(TAG, \"migration needed\");\n        Realm.migrateRealmAtPath(new File(context.getFilesDir(), \"default.realm\").getAbsolutePath(), new Migration());\n        Log.i(TAG, \"migration complete\");\n    }\n```\n\nthe next error occurred was that I need a primary key which was already defined in the models but I made the migration set the primary key using the following on all of the database tables\n\n```\n        Table personTable = realm.getTable(Person.class);\n        personTable.setPrimaryKey(\"id\");\n```\n\nwhere the id attribute for the Person class is a long;\n\nAfter the migration has completed and I attempt to open the realm I get  an error\n\n```\nExpected columnType 0, but got 2.\njni: ThrowingException 3, ColumnType invalid., .\nException has been throw: Illegal Argument: ColumnType invalid.\n```\n\nIt would be helpful if the column type error would actually state what table the error was in to help with debugging. However, the real problem is that I cannot use the realm file.  All of the tables \"id\" field are defined as longs so I am unable to determine why the ColumnType.STRING (2) factors in anywhere.\n", "url": "https://github.com/realm/realm-java/issues/1059", "user": "shanus", "labels": ["T-Bug"], "created": "2015-04-21 14:00:21", "closed": "2015-05-19 12:47:09", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "copyToRealmOrUpdate SIGSEGV", "body": "Hi,\n\nFollowing an update in my code, I randomly found a native crash (SIGSEGV 0x00000008) when using\n`copyToRealmOrUpdate` and an object with a declared `@PrimaryKey` which was not set before copy.\nUsing `Realm 0.80.1`\n\nTo reproduce with a testCase:\n\n``` java\npublic class PrimaryKeyTest extends RealmObject {\n\n    @PrimaryKey\n    private String key;\n\n    public String getKey() {\n        return key;\n    }\n\n    public void setKey(String key) {\n        this.key = key;\n    }\n}\n```\n\n``` java\npublic void testPrimKeyMissing() {\n        testRealm.beginTransaction();\n        try {\n            testRealm.copyToRealmOrUpdate(new PrimaryKeyTest());\n            testRealm.commitTransaction();\n        } catch (Exception e) {\n            // OK\n            testRealm.cancelTransaction();\n        }\n}\n```\n\n==> 'Instrumentation run failed due to 'Native crash''\n", "url": "https://github.com/realm/realm-java/issues/1051", "user": "tmeunier", "labels": ["T-Bug"], "created": "2015-04-20 14:23:38", "closed": "2015-04-29 12:33:31", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "expecting absolutePath.hashCode() not to collide each other", "body": "'absolutePath.hashCode()' is used as key of some HashMaps(realmsCache, referenceCount, etc.).\n\nhttps://github.com/realm/realm-java/blob/746083df06e9a7a581fb3e769960f30a96b4ff01/realm/src/main/java/io/realm/Realm.java#L495\n\nIf hash code of absolutePath collides with each other, wrong Realm instance is returned on Realm.getInstance().\n", "url": "https://github.com/realm/realm-java/issues/1040", "user": "zaki50", "labels": ["T-Bug"], "created": "2015-04-16 18:50:00", "closed": "2015-04-28 12:28:37", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "Encrypted Realm database causes memory violation on Samsung S6 (and other ARM64 devices)", "body": "With simple code like this running on Samsung S6 Edge, the application just closes, not crashes.\n\nEdit: Samsung S6 uses Android Lollipop 5.0.2 with TouchWiz\n\n<code>\n\n```\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n\n    super.onCreate(savedInstanceState);\n\n    setContentView(R.layout.activity_main);\n\n    final String dbName = \"realm_crash\";\n    final String key = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";\n\n    Realm.deleteRealmFile(this, dbName);\n    Realm r = Realm.getInstance(this, dbName, key.getBytes());\n    r.close();\n}\n```\n\n</code>\n\n4971-4971/? E/audit\ufe55 type=1701 msg=audit(1429171517.861:222): auid=4294967295 uid=10192 gid=10192 ses=4294967295 subj=u:r:untrusted_app:s0 pid=16358 comm=\"om.test.testing\" reason=\"memory violation\" sig=11\n\nForce removing ActivityRecord{334a375a u0 com.test.testing/.MainActivity t141}: app died, no saved state\n", "url": "https://github.com/realm/realm-java/issues/1037", "user": "NirpE", "labels": ["T-Bug"], "created": "2015-04-16 08:09:54", "closed": "2015-05-05 13:52:42", "commits": {}, "ttf": 19.00027777777778, "commitsDetails": []}, {"title": "Crash with most recent WebView", "body": "I found very unusual combination of crypted Realm and most recent WebView component from google.\nThe crash happening almost instantly even try to open simple about:blank url insife WebUrl and having Realm crypted database opened. If try to use non crypted backend or old WebVew components the crash does not happens.\n\nLog cat shows folluwing details:\n\n> E/chromium( 6573): ### WebView Version 40 (1832189-arm) (code 424501)\n> F/libc    ( 6573): Fatal signal 11 (SIGSEGV), code -6, fault addr 0x19ad in tid 6624 (Thread-16916)\n> I/DEBUG   (  186): **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* ***\n> I/DEBUG   (  186): Build fingerprint: 'google/hammerhead/hammerhead:5.1/LMY47D/1743759:user/release-keys'\n> I/DEBUG   (  186): Revision: '11'\n> I/DEBUG   (  186): ABI: 'arm'\n> I/DEBUG   (  186): pid: 6573, tid: 6624, name: Thread-16916  \n> I/DEBUG   (  186): signal 11 (SIGSEGV), code -6 (SI_TKILL), fault addr 0xa152e000\n> I/DEBUG   (  186):     r0 aef1e1c0  r1 aef1e1d9  r2 a152e000  r3 00000000\n> I/DEBUG   (  186):     r4 00000019  r5 00000000  r6 aec6511c  r7 00000000\n> I/DEBUG   (  186):     r8 aec650c0  r9 9fdbb040  sl aec65110  fp a2104904\n> I/DEBUG   (  186):     ip b6de47dc  sp a21048f8  lr a2f5dee9  pc a2f31fcc  cpsr 800f0030\n> I/DEBUG   (  186):\n> I/DEBUG   (  186): backtrace:\n> I/DEBUG   (  186):     #00 pc 0005dfcc  lib/arm/libtightdb-jni.so\n> I/DEBUG   (  186):     #01 pc 0005e043  lib/arm/libtightdb-jni.so\n> I/DEBUG   (  186):     #02 pc 0005fb03  lib/arm/libtightdb-jni.so\n> I/DEBUG   (  186):     #03 pc 00068e93  lib/arm/libtightdb-jni.so (Java_io_realm_internal_SharedGroup_nativeCommitAndContinueAsRead+42)\n> I/DEBUG   (  186):     #04 pc 0014bb8f  @base.apk@classes.dex\n> I/DEBUG   (  186):\n> I/DEBUG   (  186): Tombstone written to: /data/tombstones/tombstone_05\n\nThus i am running non rooted device it seems i can't get tombstone_05 file if it has some useful data.\n", "url": "https://github.com/realm/realm-java/issues/1023", "user": "softkot", "labels": ["T-Bug"], "created": "2015-04-10 19:32:28", "closed": "2015-04-11 12:35:27", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "arm64-v8a library not present in the eclipse folder from the zip distribution", "body": "Hi, looks like it is only present in the realm-0.xx.0.jar. \nps : I was trying the apk split using gradle and your doc mention to use the eclipse folder (http://realm.io/news/reducing-apk-size-native-libraries/).\nThanks\n", "url": "https://github.com/realm/realm-java/issues/1012", "user": "eboudrant", "labels": ["T-Bug"], "created": "2015-04-05 04:20:21", "closed": "2015-04-13 11:31:00", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Lollipop WebView crash encrypted Realms ", "body": "For some weird reason Realm is crashing with Lollipop (Android 5.x) using encrypted database and CookieManager. Can you check if you get any explanation for this.\n\nIf I remove Realm from the scope or only remove db encryption it doesn't crash.\n\nUsing Realm: compile 'io.realm:realm-android:0.80.1-SNAPSHOT' \n\nNeed to have like 15-20 Realm classes with 15 string members each.\n\nHere is minimum code sample to reproduce the crash.\n<code>\n\n```\nprivate void makeRealmCrash() {\n    final String dbName = \"realm_crash\";\n    final String key = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";\n\n    Realm.deleteRealmFile(MainActivity.this, dbName);\n\n    for (int i = 0; i < 10; i++) {\n        final int ii = i;\n        new AsyncTask<Void, Void, Void>() {\n\n            @Override\n            protected Void doInBackground(Void... params) {\n                Realm r = Realm.getInstance(getApplicationContext(), dbName, key.getBytes());\n\n                try {\n                    Thread.currentThread().sleep(ii * 25);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n\n                r.close();\n\n                return null;\n            }\n\n            @Override\n            protected void onPostExecute(Void aVoid) {\n                super.onPostExecute(aVoid);\n\n                CookieManager.getInstance();\n            }\n        }.execute();\n    }\n}\n```\n\n04-07 15:38:10.339    7639-7674/com.test.testing A/libc\ufe55 Fatal signal 11 (SIGSEGV), code -6, fault addr 0x1dd7 in tid 7674 (AsyncTask #2)\n04-07 15:38:10.441  29379-29379/? I/DEBUG\ufe55 **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* ***\n04-07 15:38:10.441  29379-29379/? I/DEBUG\ufe55 Build fingerprint: 'google/hammerhead/hammerhead:5.0.1/LRX22C/1602158:user/release-keys'\n04-07 15:38:10.441  29379-29379/? I/DEBUG\ufe55 Revision: '11'\n04-07 15:38:10.441  29379-29379/? I/DEBUG\ufe55 ABI: 'arm'\n04-07 15:38:10.441  29379-29379/? I/DEBUG\ufe55 pid: 7639, tid: 7674, name: AsyncTask #2  >>> com.test.testing <<<\n04-07 15:38:10.441  29379-29379/? I/DEBUG\ufe55 signal 11 (SIGSEGV), code -6 (SI_TKILL), fault addr 0xa220603c\n04-07 15:38:10.447  29379-29379/? I/DEBUG\ufe55 r0 a11ff2e0  r1 a11ff238  r2 afa38108  r3 00000000\n04-07 15:38:10.447  29379-29379/? I/DEBUG\ufe55 r4 a11ff2e0  r5 a2206038  r6 a11ff238  r7 affdde2c\n04-07 15:38:10.447  29379-29379/? I/DEBUG\ufe55 r8 b1217000  r9 b1217030  sl 00003038  fp b1217040\n04-07 15:38:10.447  29379-29379/? I/DEBUG\ufe55 ip 00000000  sp a11ff220  lr aff74213  pc aff73f2a  cpsr 800b0030\n04-07 15:38:10.448  29379-29379/? I/DEBUG\ufe55 backtrace:\n04-07 15:38:10.448  29379-29379/? I/DEBUG\ufe55 #00 pc 00060f2a  /data/app/com.test.testing-1/lib/arm/libtightdb-jni.so\n04-07 15:38:10.448  29379-29379/? I/DEBUG\ufe55 #01 pc 0006120f  /data/app/com.test.testing-1/lib/arm/libtightdb-jni.so\n</code>\n", "url": "https://github.com/realm/realm-java/issues/1008", "user": "NirpE", "labels": ["T-Bug"], "created": "2015-04-02 10:41:25", "closed": "2015-04-22 21:20:33", "commits": {}, "ttf": 20.00027777777778, "commitsDetails": []}, {"title": "copyToRealm() tries to copy nested objects even if they are already in the Realm", "body": "Hey guys,\n\nThis piece of code leads to the exception `Caused by: io.realm.exceptions.RealmException: Primary key constraint broken. Value already exists: brother`\n\n``` java\n        realm.beginTransaction();\n        UserRealm brother = realm.createObject(UserRealm.class);\n        brother.setToken(\"brother\");\n\n        UserRealm user = new UserRealm();\n        user.setToken(\"token\");\n        user.setBrother(brother);\n        realm.copyToRealm(user);\n        realm.commitTransaction();\n        }\n```\n\nChanging `copyToRealm` to `copyToRealmOrUpdate` solves it. Using `UserRealm user = realm.createObject(UserRealm.class)` also solves it. It looks like even though `brother` is an object from the DB, Realm anyway treats it as a new object during the `copyToRealm()`. It's either a bug, or a confusing design.\n", "url": "https://github.com/realm/realm-java/issues/1006", "user": "RobertoArtiles", "labels": ["T-Bug"], "created": "2015-04-01 21:08:12", "closed": "2015-04-14 10:31:24", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "Primary key/Index not checked in validateTable", "body": "Primary keys and indexes are are not checked by RealmProxy.validateTable(), this means the following error scenario is possible:\n\n1) Migrate a Realm: Add a new class with a primary key configured in the class, but forgetting to call table.setPrimaryKey(field) in the migration code.\n\n2) Migration succeed, because validateTable doesn't check for primary key.\n\n3) Using Realm.copyOrUpdate() will fail with a RealmException because it can't find the primary key column. \n\nSolution:\n- Use `long columnIndex =  Table.getPrimaryKey()` and `Table.hasIndex(columnIndex)` in RealmProxy.validateTable() to verify that model class and table structures in Realm match.\n", "url": "https://github.com/realm/realm-java/issues/1004", "user": "cmelchior", "labels": ["T-Bug"], "created": "2015-03-31 17:24:49", "closed": "2015-04-13 08:23:36", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "Realm.copyToRealm() should set PrimaryKey values directly", "body": "Hi guys,\n\nIt's known that null is not supported. But it seems like it could lead to the DB corruption if you try to write something with a null @PrimaryKey field. The best would be to just crash before putting something into the DB.\nSo what happened with me. I by mistake executed something like this:\n\n``` java\n        Realm realm = Realm.getInstance(this);\n        realm.beginTransaction();\n        UserRealm userRealm = realm.createObject(UserRealm.class);\n        realm.commitTransaction();\n        realm.close();\n```\n\nUserRealm class:\n\n``` java\npublic class UserRealm extends RealmObject {\n    @PrimaryKey private String token;\n\n    // getter and setter\n}\n```\n\nSo the first time I executed it nothing crashed. But starting from the second execution it was throwing `Caused by: io.realm.exceptions.RealmException: Primary key constraint broken. Value already exists:`. And even when I tried to write something with a set primary key it still failed with the same exception:\n\n``` java\n        Realm realm = Realm.getInstance(this);\n        realm.beginTransaction();\n        UserRealm userRealm = realm.createObject(UserRealm.class);\n        userRealm.setToken(\"some_token\");\n        realm.commitTransaction();\n        realm.close();\n```\n\nAnd if you do `realm.allObjects(UserRealm.class)` it returns one user with a null token. So basically DB is corrupted after that. And you can't write anything in this \"table\".\n\nLooks like a great way to shoot yourself in both legs in production.\n\nFull Stacktrace:\n\n```\nio.realm.exceptions.RealmException: Primary key constraint broken. Value already exists:\n            at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2184)\n            at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2233)\n            at android.app.ActivityThread.access$800(ActivityThread.java:135)\n            at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)\n            at android.os.Handler.dispatchMessage(Handler.java:102)\n            at android.os.Looper.loop(Looper.java:136)\n            at android.app.ActivityThread.main(ActivityThread.java:5001)\n            at java.lang.reflect.Method.invokeNative(Native Method)\n            at java.lang.reflect.Method.invoke(Method.java:515)\n            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)\n            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)\n            at dalvik.system.NativeStart.main(Native Method)\n     Caused by: io.realm.exceptions.RealmException: Primary key constraint broken. Value already exists:\n            at io.realm.internal.Table.throwDuplicatePrimaryKeyException(Table.java:687)\n            at io.realm.internal.Table.addEmptyRow(Table.java:376)\n            at io.realm.Realm.createObject(Realm.java:1086)\n            at chocodile.witdot.com.playground.MainActivity.onCreate(MainActivity.java:31)\n            at android.app.Activity.performCreate(Activity.java:5231)\n            at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1087)\n            at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2148)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2233)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.ActivityThread.access$800(ActivityThread.java:135)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.os.Handler.dispatchMessage(Handler.java:102)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.os.Looper.loop(Looper.java:136)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.ActivityThread.main(ActivityThread.java:5001)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.lang.reflect.Method.invokeNative(Native Method)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.lang.reflect.Method.invoke(Method.java:515)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at dalvik.system.NativeStart.main(Native Method)\n```\n", "url": "https://github.com/realm/realm-java/issues/993", "user": "RobertoArtiles", "labels": ["T-Bug"], "created": "2015-03-27 03:17:38", "closed": "2015-04-01 05:53:18", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Native crash after upgrading from 0.79.0 to 0.80.0", "body": "Hi, I am experiencing a native crash after a library upgrade from `0.79.0` to `0.80.0`. (the data from `0.79.0` is present in the phone)\n\nUnfortunately, I can't say at what line of my code it crashes but I can reproduce it. Everytime I start my app with the new library I get a crash. \n\nThis is what I get in the logcat.\n\n```\n03-21 12:15:31.545: A/libc(28764): Fatal signal 11 (SIGSEGV) at 0x5d4bc000 (code=1), thread 28764 (com.example)\n*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\nBuild fingerprint: 'samsung/m0xx/m0:4.1.2/JZO54K/I9300XXEMF6:user/release-keys'\npid: 28764, tid: 28764, name: com.example  >>> com.example <<<\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 5d4bc000\n03-21 12:15:31.710: W/PowerManagerService(2263): Timer 0x3->0x3|0x0\nr0 bedd7474  r1 00000030  r2 0000002c  r3 bedd74a0\nr4 bedd7474  r5 0008ed60  r6 bedd7620  r7 bedd7570\nr8 5d42d2a0  r9 5d42d2a0  sl 5d6e5d8a  fp 00000002\nip 00000078  sp bedd7470  lr 5d63f8df  pc 5d63f8ec  cpsr 00000030\nd0  43a000003f800000  d1  3ff000003f800000\nd2  3ff0000000000000  d3  0000000100170000\nd4  000005c041b80000  d5  000005c041b80000\nd6  3ff0000000000000  d7  3f8000003f800000\nd8  0000000000000000  d9  0000000000000000\nd10 0000000000000000  d11 0000000000000000\nd12 0000000000000000  d13 0000000000000000\nd14 0000000000000000  d15 0000000000000000\nd16 0000000000000000  d17 0000000000000000\nd18 0000000000000000  d19 3ff0000000000000\nd20 4008000000000000  d21 3fbc71c71c71c71c\nd22 3fcc7288e957b53b  d23 3fd24998d6307188\nd24 3fd99a27ad32ddf5  d25 3fe555b0aaeac752\nd26 0000000000000000  d27 0000000000000000\nd28 0000000000000018  d29 0000000000000000\nd30 0000000000000000  d31 0000000000000000\nscr 60000011\nbacktrace:\n#00  pc 000168ec  /data/data/com.example/lib/libtightdb-jni.so\n#01  pc 000168db  /data/data/com.example/lib/libtightdb-jni.so\nstack:\nbedd7430  bedd7401  [stack]\nbedd7434  bedd7474  [stack]\nbedd7438  bedd7478  [stack]\nbedd743c  5d6e5d8a  /data/data/com.example/lib/libtightdb-jni.so\nbedd7440  bedd7474  [stack]\nbedd7444  bedd7620  [stack]\nbedd7448  bedd7570  [stack]\nbedd744c  5d42d2a0  /data/data/com.example/files/default.realm\nbedd7450  5d42d2a0  /data/data/com.example/files/default.realm\nbedd7454  5d6e5d8a  /data/data/com.example/lib/libtightdb-jni.so\nbedd7458  5d6f316c  /data/data/com.example/lib/libtightdb-jni.so\nbedd745c  bedd7474  [stack]\nbedd7460  0008ed60  \nbedd7464  bedd7620  [stack]\nbedd7468  df0027ad  \nbedd746c  00000000  \n#00  bedd7470  bedd7584  [stack]\n........  ........\n#01  bedd7470  bedd7584  [stack]\nbedd7474  5d6f316c  /data/data/com.example/lib/libtightdb-jni.so\nbedd7478  5d6f3100  /data/data/com.example/lib/libtightdb-jni.so\nbedd747c  5de7dff8  \nbedd7480  5de7dff8  \nbedd7484  5de7dff8  \nbedd7488  5dc7e014  \nbedd748c  5df4837e  \nbedd7490  5e07dff7  \nbedd7494  5d6f9984  \nbedd7498  00000010  \nbedd749c  5dc7e014  \nbedd74a0  5d6f3180  /data/data/com.example/lib/libtightdb-jni.so\nbedd74a4  00000006  \nbedd74a8  00000002  \nbedd74ac  00001008  \nmemory near r0:\nbedd7454 5d6e5d8a 5d6f316c bedd7474 0008ed60  .]n]l1o]tt..`...\nbedd7464 bedd7620 df0027ad 00000000 bedd7584   v...'.......u..\nbedd7474 5d6f316c 5d6f3100 5de7dff8 5de7dff8  l1o].1o]...]...]\nbedd7484 5de7dff8 5dc7e014 5df4837e 5e07dff7  ...]...]~..]...^\nbedd7494 5d6f9984 00000010 5dc7e014 5d6f3180  ..o].......].1o]\nmemory near r3:\nbedd7480 5de7dff8 5de7dff8 5dc7e014 5df4837e  ...]...]...]~..]\nbedd7490 5e07dff7 5d6f9984 00000010 5dc7e014  ...^..o].......]\nbedd74a0 5d6f3180 00000006 00000002 00001008  .1o]............\nbedd74b0 00000000 00000000 00000000 00000000  ................\nbedd74c0 00000000 00000000 00000000 00000000  ................\nmemory near r4:\nbedd7454 5d6e5d8a 5d6f316c bedd7474 0008ed60  .]n]l1o]tt..`...\nbedd7464 bedd7620 df0027ad 00000000 bedd7584   v...'.......u..\nbedd7474 5d6f316c 5d6f3100 5de7dff8 5de7dff8  l1o].1o]...]...]\nbedd7484 5de7dff8 5dc7e014 5df4837e 5e07dff7  ...]...]~..]...^\nbedd7494 5d6f9984 00000010 5dc7e014 5d6f3180  ..o].......].1o]\nmemory near r5:\n0008ed40 ffffffff ffffffff ffffffff ffffffff  ................\n0008ed50 ffffffff ffffffff ffffffff ffffffff  ................\n0008ed60 ffffffff ffffffff ffffffff ffffffff  ................\n0008ed70 ffffffff ffffffff ffffffff ffffffff  ................\n0008ed80 ffffffff ffffffff ffffffff ffffffff  ................\nmemory near r6:\nbedd7600 bedd7620 bedd7648 41318444 413f78d8   v..Hv..D.1A.x?A\nbedd7610 bedd765c 5d692287 00000002 00000000  \\v...\"i]........\nbedd7620 5d42d2a0 ffffffff 5d4ce748 571051b0  ..B]....H.L].Q.W\nbedd7630 413f78c8 00000004 41318454 40866eb4  .x?A....T.1A.n.@\nbedd7640 00000005 00000000 41318440 00000001  ........@.1A....\nmemory near r7:\nbedd7550 5d42d29f bedd7590 bedd75f0 0000001c  ..B].u...u......\nbedd7560 00000003 582e61d0 c0000000 00000006  .....a.X........\nbedd7570 00000000 5d525e34 5d52b1a8 4008b4ab  ....4^R]..R]...@\nbedd7580 00000000 5d42d2a0 bedd7590 408d4fed  ......B].u...O.@\nbedd7590 00000000 000007ff 00000005 420f2578  ............x%.B\nmemory near r8:\n5d42d280 36393038 03000000 36393038 03000000  8096....8096....\n5d42d290 31323834 03000000 36393038 03000000  4821....8096....\n5d42d2a0 00000000 08000000 00000000 08000000  ................\n5d42d2b0 00500000 20000001 40000000 030000e5  ..P.... ...@....\n5d42d2c0 00480000 20000000 00800000 20000040  ..H.... ....@.. \nmemory near r9:\n5d42d280 36393038 03000000 36393038 03000000  8096....8096....\n5d42d290 31323834 03000000 36393038 03000000  4821....8096....\n5d42d2a0 00000000 08000000 00000000 08000000  ................\n5d42d2b0 00500000 20000001 40000000 030000e5  ..P.... ...@....\n5d42d2c0 00480000 20000000 00800000 20000040  ..H.... ....@.. \nmemory near sl:\n5d6e5d68 61746144 7461642e 203d2061 72745300  Data.data = .Str\n5d6e5d78 44676e69 20617461 68207361 3d207865  ingData as hex =\n5d6e5d88 30200020 6e690078 6765625f 3d206e69   . 0x.in_begin =\n5d6e5d98 6e690020 646e655f 00203d20 5f74756f   .in_end = .out_\n5d6e5da8 72727563 00203d20 5f74756f 20646e65  curr = .out_end \nmemory near sp:\nbedd7450 5d42d2a0 5d6e5d8a 5d6f316c bedd7474  ..B].]n]l1o]tt..\nbedd7460 0008ed60 bedd7620 df0027ad 00000000  `... v...'......\nbedd7470 bedd7584 5d6f316c 5d6f3100 5de7dff8  .u..l1o].1o]...]\nbedd7480 5de7dff8 5de7dff8 5dc7e014 5df4837e  ...]...]...]~..]\nbedd7490 5e07dff7 5d6f9984 00000010 5dc7e014  ...^..o].......]\ncode around pc:\n5d63f8cc 44794938 f08c6809 f04ff853 f08c0130  8IyD.h..S.O.0...\n5d63f8dc 6802f9f7 f8524603 44132c0c b008f8c3  ...h.FR..,.D....\n5d63f8ec 1005f819 fc32f08c e7e23501 4479492e  ......2..5...IyD\n5d63f8fc fb5ef08c 4620492d f08c4479 4641fb59  ..^.-I FyD..Y.AF\n5d63f90c fb56f08c 4479492a fb52f08c 46204929  ..V.*IyD..R.)I F\ncode around lr:\n5d63f8bc 687344fa 429d4620 4651d218 fb78f08c  .Dsh F.B..QF..x.\n5d63f8cc 44794938 f08c6809 f04ff853 f08c0130  8IyD.h..S.O.0...\n5d63f8dc 6802f9f7 f8524603 44132c0c b008f8c3  ...h.FR..,.D....\n5d63f8ec 1005f819 fc32f08c e7e23501 4479492e  ......2..5...IyD\n5d63f8fc fb5ef08c 4620492d f08c4479 4641fb59  ..^.-I FyD..Y.AF\nmemory map around fault addr 5d4bc000:\n5d4b9000-5d4bc000 \n(no map for address)\n5d4cb000-5d4dd000 \n!@dumpstate -k -t -z -d -o /data/log/dumpstate_app_native -m 28764\n```\n- Android 4.1.2\n- Samsung Galaxy S3\n- Eclipse\n- Target SDK 5.0.1\n", "url": "https://github.com/realm/realm-java/issues/982", "user": "zsavely", "labels": ["T-Bug"], "created": "2015-03-21 09:31:21", "closed": "2015-09-23 12:59:25", "commits": {}, "ttf": 186.00027777777777, "commitsDetails": []}, {"title": "Caused by: java.lang.IllegalArgumentException: Illegal Argument: Invalid Group file format.", "body": "I am a fan of Realm. When use it,there is a crash below:\n\n<pre>\nCaused by: java.lang.IllegalArgumentException: Illegal Argument: Invalid Group file format.\n       at io.realm.internal.SharedGroup.createNativeWithImplicitTransactions(SharedGroup.java)\n       at io.realm.internal.SharedGroup.(SharedGroup.java:58)\n       at io.realm.Realm.(Realm.java:199)\n       at io.realm.Realm.createAndValidate(Realm.java:516)\n       at io.realm.Realm.create(Realm.java:480)\n       at io.realm.Realm.getInstance(Realm.java:397)\n       at io.realm.Realm.getInstance(Realm.java:378)\n</pre>\n\nCan anybody tell me why ?\n", "url": "https://github.com/realm/realm-java/issues/961", "user": "jasonross", "labels": ["T-Bug"], "created": "2015-03-14 08:21:00", "closed": "2015-03-25 18:50:46", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "compactRealmFile() doesn't cleanup properly", "body": "If `Realm.compactRealmFile()` fails for some reason, the temporary files created might not get deleted. This can leave rather large copies of unused Realm files on the disc.\n", "url": "https://github.com/realm/realm-java/issues/953", "user": "cmelchior", "labels": ["T-Bug"], "created": "2015-03-12 05:47:27", "closed": "2015-04-16 07:26:45", "commits": {}, "ttf": 35.000277777777775, "commitsDetails": []}, {"title": "com.squareup:javawriter included but not declared", "body": "I see you included com.squareup:javawriter in the jar package. This leads to dupplicate symbols if another dependency properly declares com.squareup:javawriter as a dependency.\n\nFor instance espresso 2.0 relies on javawriter but it is properly declared in their pom.\n\nI\u00b4ve prepared a sample project but I cannot reproduce the exact problem. I\u00b4ve copied our list of depdendencies.\n\nHere is the sample project: https://github.com/falkorichter/realm-javawriter-dup-\nHere is the error I get:\n\n```\n:library:compileDebugTestJava                 \nNote: Some input files use unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n:library:packageAllDebugTestClassesForMultiDex FAILED          \n\nFAILURE: Build failed with an exception.\n\n* What went wrong:\nExecution failed for task ':library:packageAllDebugTestClassesForMultiDex'.\n> java.util.zip.ZipException: duplicate entry: com/squareup/javawriter/JavaWriter$Scope.class\n```\n\nEspresso has JavaWriter as a declared dependency (output of ./gradlew dependencies):\n\n```\nandroidTestCompile - Classpath for compiling the androidTest sources.\n+--- com.squareup:fest-android:1.0.8                                                        \n|    +--- com.android.support:support-v4:19.1.+ -> 19.1.0\n|    \\--- org.easytesting:fest-assert-core:2.0M10\n|         \\--- org.easytesting:fest-util:1.2.5\n+--- org.mockito:mockito-core:1.9.5  \n|    +--- org.hamcrest:hamcrest-core:1.1\n|    \\--- org.objenesis:objenesis:1.0\n+--- com.google.dexmaker:dexmaker:1.0\n+--- com.google.dexmaker:dexmaker-mockito:1.0\n|    +--- com.google.dexmaker:dexmaker:1.0\n|    \\--- org.mockito:mockito-core:1.9.5 (*)\n+--- com.android.support.test.espresso:espresso-core:2.0\n|    +--- com.squareup:javawriter:2.1.1\n|    +--- org.hamcrest:hamcrest-integration:1.1\n|    |    \\--- org.hamcrest:hamcrest-core:1.1\n|    +--- org.hamcrest:hamcrest-library:1.1\n|    |    \\--- org.hamcrest:hamcrest-core:1.1\n|    +--- javax.inject:javax.inject:1\n|    +--- com.android.support.test.espresso:espresso-idling-resource:2.0\n|    +--- com.android.support.test:testing-support-lib:0.1\n|    |    \\--- junit:junit-dep:4.10  \n|    |         \\--- org.hamcrest:hamcrest-core:1.1\n|    +--- com.google.code.findbugs:jsr305:2.0.1\n|    +--- javax.annotation:javax.annotation-api:1.2\n|    \\--- org.hamcrest:hamcrest-core:1.1\n+--- com.android.support.test:testing-support-lib:0.1 (*)\n+--- org.apache.commons:commons-io:1.3.2\n|    \\--- commons-io:commons-io:1.3.2\n\\--- com.squareup.okhttp:mockwebserver:2.1.0\n     \\--- org.bouncycastle:bcprov-jdk15on:1.50\n```\n\nWhen unpacking your jar I see you included the Jarwriter without changing the package. This will lead to colisions.  I found https://github.com/realm/realm-java/pull/348 as a releated issue.\n", "url": "https://github.com/realm/realm-java/issues/950", "user": "falkorichter", "labels": ["T-Bug"], "created": "2015-03-11 15:05:10", "closed": "2015-03-24 19:44:57", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "SIGSEGV and subsequent out of memory issues", "body": "Hello guys,\n\nI have been trying to track down some SIGSEGV errors which seem to be happening somewhere in this area of code- I am not sure how to pin point it:\n\n```\nr.beginTransaction();\n\n            if (isReload || categoryId == ApplicationConstants.CATEGORY_SEARCH_ID) {\n-------------------- \nPOINTER X\n---------------------\n                // call the function directly to avoid screen flicker when the commitTransaction\n                // triggers the update on the adapter\n                RealmResults<Article> articles = getCurrentCategoryArticles();\n                for (int i = 0; i < articles.size(); i++) {\n                    if (articles.get(i).getCategories().size() == 1) {\n                        articles.get(i).removeFromRealm();\n                        i--;\n                    } else {\n                        articles.get(i).getCategories().remove(cat);\n                    }\n                }\n            }\n\n            if (isReload) {\n                r.where(Category.class).equalTo(\"id\", categoryId)\n                        .findFirst()\n                        .setLastUpdated(Calendar.getInstance().getTimeInMillis()); //this can't be placed in its own function because realm doesn't support nested transactions\n                itemsToLoad = true;\n            }\n\n            // there is an assumption made in the way the articles are loaded.\n            // if more than PAGE_COUNT articles are posted before the cache is invalidated,\n            // some articles might be missing\n            try {\n                if (jsonPosts != null) {\n                    if (jsonPosts.length() != 0) {\n                        for (int i = 0; i < jsonPosts.length(); i++) {\n                            JSONObject item = new JSONObject(jsonPosts.get(i).toString());\n\n                            Article existingArticle = getItemById(item.getInt(\"id\"));\n                            if (existingArticle != null) {\n                                if (!existingArticle.getCategories().contains(cat)) {\n                                    existingArticle.getCategories().add(cat);\n                                }\n                            } else {\n                                Article article = r.createObject(Article.class);\n\n                                article.setId(item.getInt(\"id\"));\n                                article.setTitle(Html.fromHtml(item.getString(\"title\")).toString());\n                                article.setContent(item.getString(\"content\"));\n                                article.setAuthor(Html.fromHtml(((JSONObject) item.get(\"author\")).getString(\"name\")).toString());\n                                article.getCategories().add(cat);\n\n                                try {\n                                    article.setDescription(Html.fromHtml(item.getString(\"excerpt\")).toString());\n                                } catch (JSONException e) {\n                                }\n\n\n                                try {\n                                    article.setThumbnail(item.getString(\"thumbnail\"));\n                                } catch (JSONException e) {\n                                }\n\n                                try {\n                                    article.setImage(item.getJSONObject(\"thumbnail_images\").getJSONObject(\"medium\").getString(\"url\"));\n                                } catch (JSONException e) {\n                                }\n\n                                try {\n                                    article.setUrl(item.getString(\"url\"));\n                                } catch (JSONException e) {\n                                }\n\n                                try {\n                                    article.setDate(new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\", Locale.ENGLISH).parse(item.getString(\"date\")));\n                                } catch (ParseException e) {\n                                }\n                            }\n                        }\n                    } else {\n                        itemsToLoad = false;\n                    }\n                }\n\n                r.commitTransaction();\n            } catch (Exception e) {\n                r.cancelTransaction();\n                throw e;\n            }\n```\n\nThis crashes the app and subsequent app launches, with this exception: \n\n```\n03-09 04:00:17.610  12755-12755/uk.co.entrepreneurhandbook.EHReader E/AndroidRuntime\ufe55 FATAL EXCEPTION: main\n    Process: uk.co.entrepreneurhandbook.EHReader, PID: 12755\n    io.realm.internal.OutOfMemoryError: std::bad_alloc in io_realm_internal_table.cpp line 302\n            at io.realm.internal.Table.nativeMoveLastOver(Native Method)\n            at io.realm.internal.Table.moveLastOver(Table.java:373)\n            at io.realm.RealmObject.removeFromRealm(RealmObject.java:61)\n            at uk.co.entrepreneurhandbook.EHReader.ArticlesListDataSource.emptyCurrentCategory(ArticlesListDataSource.java:146)\n            at uk.co.entrepreneurhandbook.EHReader.ArticlesListDataSource.<init>(ArticlesListDataSource.java:53)\n            at uk.co.entrepreneurhandbook.EHReader.ArticlesListViewFragment.onActivityCreated(ArticlesListViewFragment.java:68)\n            at android.support.v4.app.Fragment.performActivityCreated(Fragment.java:1794)\n            at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:967)\n            at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1126)\n            at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:739)\n            at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1489)\n            at android.support.v4.app.FragmentActivity.onStart(FragmentActivity.java:548)\n            at android.app.Instrumentation.callActivityOnStart(Instrumentation.java:1220)\n            at android.app.Activity.performStart(Activity.java:5949)\n            at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2261)\n            at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2360)\n            at android.app.ActivityThread.access$800(ActivityThread.java:144)\n            at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1278)\n            at android.os.Handler.dispatchMessage(Handler.java:102)\n            at android.os.Looper.loop(Looper.java:135)\n            at android.app.ActivityThread.main(ActivityThread.java:5221)\n            at java.lang.reflect.Method.invoke(Native Method)\n            at java.lang.reflect.Method.invoke(Method.java:372)\n            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:899)\n            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:694)\n```\n\nAnd line 146 is down here: \n\n```\nprivate void emptyCurrentCategory() {\n        Realm r = Realm.getInstance(context);\n        Category currentCategory = r.where(Category.class).equalTo(\"id\", categoryId).findFirst();\n\n        r.beginTransaction();\n        RealmResults<Article> articles = getCurrentCategoryArticles();\n        for (int i = 0; i < articles.size(); i++) {\n            if (articles.get(i).getCategories().size() == 1) {\n                articles.get(i).removeFromRealm(); <-------- 146\n                i--;\n            } else {\n                articles.get(i).getCategories().remove(currentCategory);\n            }\n        }\n        r.commitTransaction();\n    }\n```\n\nI am unsure how to proceed in helping you guys with this issue. I believe the code at pointer X seems to be somehow corrupting the realm.\n\nPlease advise.\n", "url": "https://github.com/realm/realm-java/issues/937", "user": "matzipan", "labels": ["T-Bug"], "created": "2015-03-09 04:10:20", "closed": "2015-03-10 07:13:04", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "createOrUpdateFromJson also updates fields not set", "body": "If you update a existing RealmObject using `Realm.createOrUpdateFromJson()` it correctly creates default values for fields not set, however if a existing RealmObject is found the expected behavior would be to only override the fields actually set, eg\n\n```\npublic class Data extends RealmObject {\n  @PrimaryKey\n  private int id;\n  private boolean bool;\n  private String str;\n\n  ...\n}\n\n// From empty database\nrealm.beginTransaction();\nData obj = realm.createOrUpdateFromJson(Data.class, \"{ \"id\":1, \"str\": \"foo\" });\nobj.setBool(true);\nrealm.commitTransaction();\n\nrealm.beginTransaction();\nobj = realm.createOrUpdateFromJson(Data.class, \"{ \"id\":1, \"str\": \"foo\" })\nrealm.commitTransaction();\n\nobj.isBool() == false; // unexpected, it should maintain its value unless specifically set.\n```\n", "url": "https://github.com/realm/realm-java/issues/933", "user": "cmelchior", "labels": ["T-Bug"], "created": "2015-03-06 18:00:27", "closed": "2015-04-16 08:00:49", "commits": {}, "ttf": 40.000277777777775, "commitsDetails": []}, {"title": "Fix version checker", "body": null, "url": "https://github.com/realm/realm-java/issues/926", "user": "emanuelez", "labels": ["T-Bug"], "created": "2015-03-05 12:08:36", "closed": "2015-03-09 15:11:40", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Add support for building Realm on Windows", "body": "Hi developers !\n\nI had this error when I run the project of Realm from the officiel site :\nError:Execution failed for task ':downloadCore'.\n\n> A problem occurred starting process 'command 'make''\n", "url": "https://github.com/realm/realm-java/issues/911", "user": "NizarETH", "labels": ["First-Good-Issue", "T-Bug"], "created": "2015-02-25 16:48:23", "closed": "2018-03-05 09:28:41", "commits": {}, "ttf": 1103.0002777777777, "commitsDetails": []}, {"title": "Wrong Key Exception while multiple access to encrypted Realm file", "body": "Hi guys!\nI happened to stumble across bizarre situation while accessing encrypted database multiple times using different instances of Realm - the 'Wrong key used to decrypt Realm.' exception was thrown. It was weird because I was sure that i was passing matching byte array. (Of course there was no problem opening not encrypted database multiple times) . It occurs that exception is thrown when different instances of byte arrays are passed to Realm.getInstance(...), due to checking equality by checking references:\n\n```\nif (realm.key != key) {\n   throw new IllegalStateException(DIFFERENT_KEY_MESSAGE);\n}\n```\n\nMy question is: is this behaviour planned? It does not seem much issue, but for me, it seems quite misleading to pass matching byte array, while getting 'Wrong key' exception or modify key byte array on the same reference, but still be able to access Realm.\n\nThe code to reproduce the situation:\n\n```\n@Override\n    protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n        Realm.deleteRealmFile(this, \"test\");\n        byte[] key = new byte[64];\n        byte[] key2 = new byte[64];\n        Realm realm = Realm.getInstance(this, \"test\", key);\n        key[0] = 0xF; <-the most misleading fragment\n        realm = Realm.getInstance(this, \"test\", key); <-opens\n        realm = Realm.getInstance(this, \"test\", key2); <-Exception\n    }\n```\n", "url": "https://github.com/realm/realm-java/issues/901", "user": "peczwy", "labels": ["T-Bug"], "created": "2015-02-24 12:00:58", "closed": "2015-02-24 13:21:26", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Crash on 2database access with encryption enabled", "body": "Taking my comment from #810 and making it its own issue -\n\nOn one of my test devices, running realm with encryption enabled produces a SIGSERV in libc. The line causing the crash is `validateMethod = generatedClass.getMethod(\"validateTable\", new Class[]{ImplicitTransaction.class});`, in initializeRealm in Realm.java (line 606 in 0.79.1). Notably the crash is not happening on the first initializeRealm is called, only on any subsequent time. \n\nThe device with the issue is a Droid X running Android 4.4.4 - notable in that it is a [Low Ram](https://source.android.com/devices/tech/low-ram.html) device. The issue does not happen if encryption is disabled (so I've only tested its presence on 0.78 and 0.79.1). \n", "url": "https://github.com/realm/realm-java/issues/898", "user": "iflatness", "labels": ["T-Bug"], "created": "2015-02-23 18:04:26", "closed": "2015-09-10 07:33:43", "commits": {}, "ttf": 198.00027777777777, "commitsDetails": []}, {"title": "Update api-doc with references", "body": "http links are not linked correctly many places.\n", "url": "https://github.com/realm/realm-java/issues/892", "user": "bmunkholm", "labels": ["T-Bug"], "created": "2015-02-23 15:13:07", "closed": "2015-02-27 11:53:23", "commits": {"6e7ec0aae2ea8d6e4dd62c057ef39417fb957b5a": {"commitGHEventType": "referenced", "commitUser": "emanuelez"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "6e7ec0aae2ea8d6e4dd62c057ef39417fb957b5a", "commitGHEventType": "referenced", "commitUser": "emanuelez", "commitParents": ["9630659caca73d7f48a96700ebaba49dfd42b631"], "nameRev": "6e7ec0aae2ea8d6e4dd62c057ef39417fb957b5a tags/v0.80.0~8^2", "commitMessage": "Fix javadoc issues\n\nFixes #892", "commitDateTime": "2015-02-27 11:50:13", "authoredDateTime": "2015-02-27 11:46:56", "commitGitStats": [{"filePath": "realm/src/main/java/io/realm/Realm.java", "insertions": 23, "deletions": 23, "lines": 46}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Realm.java", "spoonMethods": [{"spoonMethodName": "io.realm.Realm.checkHasPrimaryKey(io.realm.RealmObject)", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.Realm", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.Realm.setSchema(java.lang.Class[])", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6e7ec0aae2ea8d6e4dd62c057ef39417fb957b5a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 23, "deletions": 23, "lines": 46, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 1, "INS": 4, "MOV": 2, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/src/main/java/io/realm"], "changesInPackagesSPOON": ["io.realm.Realm", "io.realm.Realm.checkHasPrimaryKey(io.realm.RealmObject)", "io.realm.Realm.setSchema(java.lang.Class[])"]}, {"title": "Compilation error in the code generated by the annotation processor", "body": "I have the following simple model class...\n\n```\n@RealmClass\npublic class Category extends RealmObject {\n   @PrimaryKey\n    private String id;\n    private I18Ntext name;\n    private float order;\n    private String imageUrl;\n    private String iconUrl;\n    private RealmList<Template> questionTemplates;\n}\n```\n\nAnd this is the portion of the RealmProxy class that is not compiling after the annotation processing...\n\n```\npublic static void populateUsingJsonStream(Category obj, JsonReader reader) throws IOException {\n        boolean standalone = obj.realm == null;\n        reader.beginObject();\n        while (reader.hasNext()) {\n            String name = reader.nextName();\n            if (name.equals(\"iconUrl\") && reader.peek() != JsonToken.NULL) {\n                obj.setIconUrl((String) reader.nextString());\n            } else if (name.equals(\"id\")  && reader.peek() != JsonToken.NULL) {\n                obj.setId((String) reader.nextString());\n            } else if (name.equals(\"imageUrl\")  && reader.peek() != JsonToken.NULL) {\n                obj.setImageUrl((String) reader.nextString());\n            } else if (name.equals(\"name\")  && reader.peek() != JsonToken.NULL) {\n                com.riotmill.justus.services.model.I18Ntext name = standalone ? new com.riotmill.justus.services.model.I18Ntext() : obj.realm.createObject(com.riotmill.justus.services.model.I18Ntext.class);\n                I18NtextRealmProxy.populateUsingJsonStream(name, reader);\n                obj.setName(name);\n            } else if (name.equals(\"order\")  && reader.peek() != JsonToken.NULL) {\n                obj.setOrder((float) reader.nextDouble());\n            } else if (name.equals(\"questionTemplates\")  && reader.peek() != JsonToken.NULL) {\n                reader.beginArray();\n                if (standalone) {\n                    obj.setQuestionTemplates(new RealmList<com.riotmill.justus.services.model.Template>());\n                }\n                while (reader.hasNext()) {\n                    com.riotmill.justus.services.model.Template item = standalone ? new com.riotmill.justus.services.model.Template() : obj.realm.createObject(com.riotmill.justus.services.model.Template.class);\n                    TemplateRealmProxy.populateUsingJsonStream(item, reader);\n                    obj.getQuestionTemplates().add(item);\n                }\n                reader.endArray();\n            } else {\n                reader.skipValue();\n            }\n        }\n        reader.endObject();\n    }\n```\n\nAs  you can see one of the fields of the Realm object is \"name\", and the code that is being generated is repeating that variable twice... once for the real \"name\" field and the other one by some code added by the processor, so the compiler is complaining with a \"Duplicate local variable name\" error.\n\nI change the name of the field of the model to something else just to test and is compiling without any problem. So I guess that changing this part \"String name = reader.nextName();\" with a variable name a little more cryptic should do the trick :).\n", "url": "https://github.com/realm/realm-java/issues/881", "user": "jcapra", "labels": ["T-Bug"], "created": "2015-02-21 07:02:07", "closed": "2015-02-24 14:06:12", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Deleting from RealmList throws exception", "body": "Hi @cmelchior \nI am probably experiencing the same issue. I am using ver. 0.79.0.\n\n``` Stacktrace\nFATAL EXCEPTION: main\njava.lang.ArrayIndexOutOfBoundsException: rowIndex > available rows.\nat io.realm.internal.LinkView.nativeRemove(Native Method)\nat io.realm.internal.LinkView.remove(LinkView.java:67)\nat io.realm.RealmList.remove(RealmList.java:189)\nat com.sampleapp.MergedCardsListClick$1.onClick(MergedCardsListClick.java:64)\n...\nat dalvik.system.NativeStart.main(Native Method)\n```\n\nThis issue happens when I try to delete the last element in `RealmList`. Here is my code:\n\n``` Java\nfor (int i = 0; i < parent.getChildren().size(); i++) {\n    if (parent.getChildren().get(i).get_id() == object.get_id()) {\n        mRealm.beginTransaction();\n        parent.getChildren().remove(i); // Line that throws ArrayIndexOutOfBoundsException\n        mRealm.commitTransaction();\n        break;\n    }\n}\n```\n\nThe strange thing is that when I try to delete any element but not last, it does not crash. But when I try to delete the last element (again, **any** element), it crashes.\nSo I changed the code a bit to make it work: (maybe somebody will find it helpful)\n\n``` Java\nfor (int i = 0; i < size; i++) {\n    if (parent.getChildren().get(i).get_id() == sms.get_id()) {\n        mRealm.beginTransaction();\n        if (size != 1) {\n            parent.getChildren().remove(i); // does not crash\n        } else {\n            parent.getChildren().clear(); // does not crash\n        }\n        mRealm.commitTransaction();\n        break;\n    }\n}\n```\n\nMy model:\n\n``` Java\npackage com.sampleapp;\n\nimport io.realm.RealmList;\nimport io.realm.RealmObject;\nimport io.realm.annotations.Index;\nimport io.realm.annotations.RealmClass;\n\n@RealmClass\npublic class Parent extends RealmObject {\n    private long _id;\n\n    @Index\n    private String originalText;\n    private Parent parent;\n    private RealmList<Parent> children;\n\n    public long get_id() {\n        return _id;\n    }\n\n    public void set_id(long _id) {\n        this._id = _id;\n    }\n\n    public String getOriginalText() {\n        return originalText;\n    }\n\n    public void setOriginalText(String originalText) {\n        this.originalText = originalText;\n    }\n\n    public Parent getParent() {\n        return parent;\n    }\n\n    public void setParent(Parent parent) {\n        this.parent = parent;\n    }\n\n    public RealmList<Parent> getChildren() {\n        return children;\n    }\n\n    public void setChildren(RealmList<Parent> children) {\n        this.children = children;\n    }\n}\n```\n\nSummary: \n- It crashes every time. (I've seen it multiple times)\n- It is reproducable.\n- Experienced crashes on Android 4.1.2 (Samsung Galaxy S3), 4.4.4. (Sony Z3 Compact)\n- Happens when a user taps on the button in order to delete the last child.\n", "url": "https://github.com/realm/realm-java/issues/875", "user": "cmelchior", "labels": ["T-Bug"], "created": "2015-02-19 18:16:20", "closed": "2015-08-10 11:25:51", "commits": {}, "ttf": 171.00027777777777, "commitsDetails": []}, {"title": "Android 2.3: Could not find validateTable method in generated proxy class", "body": "I've recently changed my app's minimum API level to 9 and when testing on Android 2.3 I always get this exception: \n\n```\njava.lang.RuntimeException: Unable to create application com.tbilisi.bus.App: io.realm.exceptions.RealmException: Could not find the validateTable method in the generated io.realm.HistoryItemRealmProxy class: Annotation processor may not have been executed.\n            at android.app.ActivityThread.handleBindApplication(ActivityThread.java:3413)\n            at android.app.ActivityThread.access$2200(ActivityThread.java:124)\n            at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1012)\n            at android.os.Handler.dispatchMessage(Handler.java:99)\n            at android.os.Looper.loop(Looper.java:130)\n            at android.app.ActivityThread.main(ActivityThread.java:3821)\n            at java.lang.reflect.Method.invokeNative(Native Method)\n            at java.lang.reflect.Method.invoke(Method.java:507)\n            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:839)\n            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:597)\n            at dalvik.system.NativeStart.main(Native Method)\n     Caused by: io.realm.exceptions.RealmException: Could not find the validateTable method in the generated io.realm.HistoryItemRealmProxy class: Annotation processor may not have been executed.\n            at io.realm.Realm.initializeRealm(Realm.java:608)\n            at io.realm.Realm.createAndValidate(Realm.java:523)\n            at io.realm.Realm.create(Realm.java:480)\n            at io.realm.Realm.getInstance(Realm.java:397)\n            at io.realm.Realm.getInstance(Realm.java:359)\n            at io.realm.Realm.getInstance(Realm.java:340)\n            at com.tbilisi.bus.App.loadRealm(App.java:22)\n            at com.tbilisi.bus.App.onCreate(App.java:18)\n            at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:969)\n            at android.app.ActivityThread.handleBindApplication(ActivityThread.java:3410)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.ActivityThread.access$2200(ActivityThread.java:124)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1012)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.os.Handler.dispatchMessage(Handler.java:99)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.os.Looper.loop(Looper.java:130)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.app.ActivityThread.main(ActivityThread.java:3821)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.lang.reflect.Method.invokeNative(Native Method)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.lang.reflect.Method.invoke(Method.java:507)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:839)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:597)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at dalvik.system.NativeStart.main(Native Method)\n```\n\nAll of my source is published at https://github.com/shvelo/tbilisi-bus  \nI've tried adding `@RealmClass` to my models but it doesn't help at all.\n", "url": "https://github.com/realm/realm-java/issues/870", "user": "shvelo", "labels": ["T-Bug"], "created": "2015-02-18 19:44:38", "closed": "2015-05-12 14:18:53", "commits": {}, "ttf": 82.00027777777778, "commitsDetails": []}, {"title": "copyToRealmOrUpdate() Throws PrimaryKey Constraint Exception When PrimaryKey Is Field In Non-PrimaryKey Class", "body": "copyToRealmOrUpdate() doesn't seem to pass the update flag through for objects that don't have a primaryKey and thus any fields within that object is only attempted to be copied. \n\nExample: https://github.com/thorbenprimke/realm-java/tree/nestedObjectCausesPrimaryKeyConflict\nExample code: https://github.com/thorbenprimke/realm-java/blob/9f2992ef20e9b3241bac9a6e45f7fe034167c70f/examples/introExample/src/main/java/io/realm/examples/intro/IntroExampleActivity.java#L106\n", "url": "https://github.com/realm/realm-java/issues/864", "user": "thorbenprimke", "labels": ["T-Bug"], "created": "2015-02-17 21:53:50", "closed": "2015-02-19 19:27:57", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "copyToRealmOrUpdate() results in stack overflow for models with cyclic relationships", "body": "Similar to #484 and #589. If a model has a cyclic relation with another model it'll continously try to `copy()` or `update()`, resulting in stack overflow.\n", "url": "https://github.com/realm/realm-java/issues/859", "user": "decnorton", "labels": ["T-Bug"], "created": "2015-02-16 17:18:57", "closed": "2015-02-19 19:28:19", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Type mismatch after migration", "body": "In our migration we delete a field and afterwards we get in some cases a \"type mismatch. Was BOOLEAN, expected INTEGER\" for the field isUploaded\n\nOur class looks like: \n\n```\npublic class PictureFile extends RealmObject {\n    private int id;\n    private String fileName;\n    // private String description;\n    private boolean isUploaded;\n\n    // Getter and Setter for all fields\n}\n```\n\nThis happened to us in with multiple tables. We could see that the row indices caches in the static field columnIndices of the Realm class don't correspond to the actual indices of the table (checked with getTable for debugging).\n\nFor the migration we use the following code:\n\n```\nTable pictureFileTable = realm.getTable(PictureFile.class);\nif (getIndexForProperty(pictureFileTable, \"description\") >= 0) {\n    pictureFileTable.removeColumn(getIndexForProperty(pictureFileTable, \"description\"));\n}\n```\n\nWe have multiple migrations on other tables before, but that is the first column removal on this table.\n\nHow can we fix the migration to avoid this problem, because restarting doesn't fix the problem and app data has to be cleared. \n\nWe also observed the inconsistency between the Realm.columnIndices field the actual file when we added a column in the migration. This is because the migration always adds it to the end, but we didn't but the new field after all the existing field. Therefore the indices were messed up. For example:\n\n```\npublic static class Test extends RealmObject {\n       private int oldField;\n       private int oldField2;\n       private int newField; // added by migration\n       private int oldField3;\n}\n```\n\nThe indices for newField and oldField3 are messed up when the migration was executed, otherwise everything was fine.\n\nAny help is appreciated\n\nGreeting\nWicket\n", "url": "https://github.com/realm/realm-java/issues/846", "user": "rmeissner", "labels": ["T-Bug"], "created": "2015-02-10 23:07:29", "closed": "2015-04-13 09:07:37", "commits": {}, "ttf": 61.000277777777775, "commitsDetails": []}, {"title": "Getting \"Native crash at /data/app-lib/<package_name>-2/libtightdb-jni.so\"", "body": "---\n\nBuild fingerprint: 'samsung/jfltexx/jflte:4.4.2/KOT49H/I9505XXUGNG8:user/release-keys'\nRevision: '11'\npid: 31444, tid: 31498, name: MESSAGING >>> <package_name> <<<\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 32af6378\nr0 7af756a8 r1 7af756a0 r2 00000000 r3 72631090\nr4 7af756a8 r5 32af6374 r6 7af756a0 r7 7af757f0\nr8 000001af r9 00000001 sl 00000002 fp 77d501d8\nip 7b7054ff sp 7af75680 lr 7b7023c5 pc 7b699fe6 cpsr 200d0030\nd0 0000000000000000 d1 0000000000000000\nd2 0000000000000000 d3 0000000000000000\nd4 b1c4636148206e65 d5 3263313420000309\nd6 3163343234323638 d7 6636343263633836\nd8 414d46c600000000 d9 414d46c600000000\nd10 414d46c600000000 d11 0000000000000000\nd12 0000000000000000 d13 0000000000000000\nd14 0000000000000000 d15 0000000000000000\nd16 0b970105010b9700 d17 0b9702051795cb8d\nd18 0b97030517b4d8d6 d19 97040505a68fddb4\nd20 97050501ea9b8c0b d21 97060501e9b1c20b\nd22 77170b970709400b d23 74276e6f64207968\nd24 4162e41380000000 d25 0000000000000000\nd26 0000000000000000 d27 0000000000000000\nd28 0100010001000100 d29 0100010001000100\nd30 416312d000000000 d31 4024000000000000\nscr 20000012\n\nbacktrace:\n#00 pc 00031fe6 /data/app-lib/[package_name]-2/libtightdb-jni.so (tightdb::Array::init_from_mem(tightdb::MemRef)+7)\n#01 pc 0009a3c1 /data/app-lib/[package_name]-2/libtightdb-jni.so (tightdb::ArrayBigBlobs::set(unsigned int, tightdb::BinaryData, bool)+60)\n#02 pc 0009efcf /data/app-lib/[package_name]-2/libtightdb-jni.so (tightdb::ArrayBigBlobs::set_string(unsigned int, tightdb::StringData)+12)\n#03 pc 0009d68b /data/app-lib/[package_name]-2/libtightdb-jni.so ((anonymous namespace)::SetLeafElem::update(tightdb::MemRef, tightdb::ArrayParent*, unsigned int, unsigned int)+396)\n\ncode around pc:\n7b699fc4 2904ba31 f004d101 2908ba63 f004d101 \n7b699fd4 2940ba95 f004d1ea b5f8bac9 680d4604 \n7b699fe4 792b460e 760309db f3c3792b 76431380 \n7b699ff4 f3c3792b 76831340 f0034628 6160ffac \n7b69a004 46284607 ffaff003 68736a62 685260e0 \n7b69a014 d3084293 f0034628 6823ffae 695b463a \n7b69a024 46204601 68734798 61203508 60654620 \n7b69a034 696160a3 40f8e8bd b538e7ae 69c04604 \n7b69a044 6a21460d 68db6803 68a24798 46014290 \n7b69a054 42a8d101 4620d304 fee6f7f8 bd382001 \n7b69a064 bd382000 4ff0e92d 6a46b087 f8dd4607 \n7b69a074 468a8040 4614461d f8dd4630 46419044 \n7b69a084 ff59f003 3004f990 2b004683 f8d9db09 \n7b69a094 a9043000 9004689b f8cd4648 47988014 \n7b69a0a4 f003e024 3802ff60 d9072801 46414638 \n7b69a0b4 febaf7f8 f0034638 e017ff77 21004658 \n\ncode around lr:\n7b7023a4 f77f940c 4605ff37 4629980d 695b6803 \n7b7023b4 95034798 a902ad04 46289002 fe0df797 \n7b7023c4 46214628 f8cd970b f7988030 6872f953 \n7b7023d4 99074628 e88d6833 460a0204 ff64f7ff \n7b7023e4 e8bdb027 bf0083f0 00063856 41f0e92d \n7b7023f4 4698b0a4 46164b11 6a422400 9403447b \n7b702404 94094605 940a3308 460fac24 f844920b \n7b702414 46203d88 f91af000 99056872 68334620 \n7b702424 0104e88d f7ff460a 4628ff3f 9a044639 \n7b702434 f7982300 b024fb07 81f0e8bd 000637ec \n7b702444 43f8e92d 9d08461c 46894606 1c6b684f \n7b702454 68c5bf08 f107b112 e0140801 e01246b8 \n7b702464 46214630 fed6f77f 6a704601 69526802 \n7b702474 79824790 02127941 4201eb02 440a79c1 \n7b702484 d0034542 42ac3401 e008d1ea f8d93008 \n7b702494 463a1000 e96cf77d d1f32800 f04fe003 \n\nOther details:\nAndroid Version 4.4\nDevice: Galaxy S4 (jflte)\n", "url": "https://github.com/realm/realm-java/issues/791", "user": "dotgc", "labels": ["T-Bug"], "created": "2015-01-24 22:18:15", "closed": "2015-04-15 17:29:43", "commits": {}, "ttf": 80.00027777777778, "commitsDetails": []}, {"title": "During a query findAll I got : java.lang.IllegalStateException: Objects cannot be changed outside a transaction", "body": "When my app starts I do a findAll on my model, the findAll itself crash, this make impossible to launch the app again. Clear all data will probably fix the issue, which is not the solution I am looking for.\n\nThe code looks like :\n\n```\n  @Override\n  public List<MyRealmObject> getAllObjects(String category) {\n    RealmResults<MyRealmObject> packageQuery = getRealm().where(MyRealmObject.class)\n        .equalTo(\"category\", category)\n        .findAll();\n    return packageQuery;\n  }\n```\n\nLet me know if you need more informations\n\n```\nE/AndroidRuntime( 5994): Caused by: java.lang.IllegalStateException: Objects cannot be changed outside a transaction; see beginTransaction() for details.\nE/AndroidRuntime( 5994):    at io.realm.internal.Group.throwImmutable(Group.java:327)\nE/AndroidRuntime( 5994):    at io.realm.internal.Group.getTable(Group.java:222)\nE/AndroidRuntime( 5994):    at io.realm.Realm.getTable(Realm.java:245)\nE/AndroidRuntime( 5994):    at io.realm.RealmQuery.getTable(RealmQuery.java:101)\nE/AndroidRuntime( 5994):    at io.realm.RealmQuery.<init>(RealmQuery.java:58)\nE/AndroidRuntime( 5994):    at io.realm.Realm.where(Realm.java:921)\nE/AndroidRuntime( 5994):    at n.e.a.realm.RealmDatasource.getAll(RealmDatasource.java:228)\n```\n\nAfter few retry it now crash in the native code :\n\n``````\nF/libc    ( 9084): Fatal signal 11 (SIGSEGV), code 1, fault addr 0xb873b54f in tid 9084 (n.e.a)\nE/WifiStateMachine(  925): VerifyingLinkState what=151572 NOT_HANDLED\nI/DEBUG   (  370): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\nI/DEBUG   (  370): Build fingerprint: 'motorola/victara_tmo/victara:5.0/LXE22.46-11/10:user/release-keys'\nI/DEBUG   (  370): Revision: 'p2bf'\nI/DEBUG   (  370): ABI: 'arm'\nI/DEBUG   (  370): pid: 9084, tid: 9084, name: n.e.a  >>> n.e.a <<<\nI/DEBUG   (  370): signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0xb873b54f\nI/DEBUG   (  370):     r0 b839fe18  r1 00000000  r2 00736e6f  r3 69746361\nI/DEBUG   (  370):     r4 0039b737  r5 b839fc28  r6 bede7cc8  r7 b839fea0\nI/DEBUG   (  370):     r8 b839ff28  r9 b839fe18  sl 5f736e6e  fp 00e3d1b0\nI/DEBUG   (  370):     ip bede7c50  sp bede7c20  lr b06b21ad  pc b062758e  cpsr 20070030\nI/DEBUG   (  370): \nI/DEBUG   (  370): backtrace:\nI/DEBUG   (  370):     #00 pc 0001f58e  /data/app/n.e.a-1/lib/arm/libtightdb-jni.so (tightdb::Array::get(unsigned int) const+13)\nI/DEBUG   (  370):     #01 pc 000aa1a9  /data/app/n.e.a-1/lib/arm/libtightdb-jni.so (tightdb::GroupWriter::merge_free_space()+48)\nI/DEBUG   (  370):     #02 pc 000aa5a1  /data/app/n.e.a-1/lib/arm/libtightdb-jni.so (tightdb::GroupWriter::write_group()+26)\nI/DEBUG   (  370):     #03 pc 000aaf61  /data/app/n.e.a-1/lib/arm/libtightdb-jni.so (tightdb::SharedGroup::low_level_commit(unsigned long long)+174)\nI/DEBUG   (  370):     #04 pc 000ab109  /data/app/n.e.a-1/lib/arm/libtightdb-jni.so (tightdb::SharedGroup::do_commit()+116)\nI/DEBUG   (  370):     #05 pc 000ab135  /data/app/n.e.a-1/lib/arm/libtightdb-jni.so (tightdb::SharedGroup::commit_and_continue_as_read()+4)\nI/DEBUG   (  370):     #06 pc 000235cd  /data/app/n.e.a-1/lib/arm/libtightdb-jni.so (Java_io_realm_internal_SharedGroup_nativeCommitAndContinueAsRead+8)\nI/DEBUG   (  370):     #07 pc 001fd09b  /data/dalvik-cache/arm/data@app@n.e.a-1@base.apk@classes.dex\nW/debuggerd(  370): type=1400 audit(0.0:40): avc: denied { search } for uid=0 name=\"n.e.a\" dev=\"mmcblk0p39\" ino=286224 scontext=u:r:debuggerd:s0 tcontext=u:object_r:app_data_file:s0 tclass=dir permissive=0\nW/debuggerd(  370): type=1400 audit(0.0:41): avc: denied { search } for uid=0 name=\"n.e.a\" dev=\"mmcblk0p39\" ino=286224 scontext=u:r:debuggerd:s0 tcontext=u:object_r:app_data_file:s0 tclass=dir permissive=0\nW/debuggerd(  370): type=1400 audit(0.0:42): avc: denied { search } for uid=0 name=\"n.e.a\" dev=\"mmcblk0p39\" ino=286224 scontext=u:r:debuggerd:s0 tcontext=u:object_r:app_data_file:s0 tclass=dir permissive=0\nI/DEBUG   (  370): \nI/DEBUG   (  370): Tombstone written to: /data/tombstones/tombstone_00```\n``````\n", "url": "https://github.com/realm/realm-java/issues/771", "user": "eboudrant", "labels": ["T-Bug"], "created": "2015-01-21 05:30:07", "closed": "2015-01-30 08:18:03", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "RealmMigrationNeededException doesn't clear all caches", "body": "It looks like following code, doesn't properly clear the Realm cache, resulting in Realms with old schemas to exist which can cause NPE like this:\n\nCode to reproduce:\n\n```\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n  super.onCreate(savedInstanceState);\n  try {\n            realm = Realm.getInstance(this);\n        } catch (RealmMigrationNeededException e) {\n            Realm.deleteRealmFile(this);\n            realm = Realm.getInstance(this);\n        }\n  realm.allObjects(Person.class).findAll();\n}\n```\n\nError:\n\n```\nCaused by: java.lang.NullPointerException\n                        E      at io.realm.PersonRealmProxy.setName(PersonRealmProxy.java:36)\n                        E      at io.realm.examples.intro.IntroExampleActivity.basicCRUD(IntroExampleActivity.java:101)\n                        E      at io.realm.examples.intro.IntroExampleActivity.onCreate(IntroExampleActivity.java:59)\n                        E      at android.app.Activity.performCreate(Activity.java:5231)\n                        E      at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1087)\n                        E      at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2148)\n```\n", "url": "https://github.com/realm/realm-java/issues/765", "user": "cmelchior", "labels": ["T-Bug"], "created": "2015-01-19 12:29:31", "closed": "2015-01-21 16:26:26", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Involuntary invocation of close()", "body": "I have three AsyncTaskLoaders in which I make calls to a REST Api.\n\nLoader A and B: Two of them are simple one-shot calls. I receive a json (JSONObject) and put that object into my Realm.\nLoader C: The third one has a while loop. In this loop I retrieve a json (JSONArray) from my server and add them to my Realm. So, in short, the loop approx loops for ~80 times and within each cycle I begin a transaction, put a jsonstring consisting of 500 objects into my realm and commit the transaction.\n\nMy app is really small. I have a Realm.getInstance(this) in onStart and realm.close() in onStop of my Activity.\nWithin each loader I have the mandatory loadInBackground. At the beginning of that method I have Realm.getInstance(context) and at the end of it I have realm.close(). So I can see no duplicate or redundant close() call in my app.\n\nWhen I start my app and start Loader C everything works fine. If I start my app and start loader A and B and after that C, I get \"Calling close() on a Realm that is already closed: /data/data/*/files/default.realm\" TWICE at the first two iterations of the loop, but everything is added correctly to my Realm.\n\nDebugging calls to Realm.close() shows that it is called with the following stack (but not called by me)\nclose():181, Realm (io.realm)\nfinalize():169, Realm (io.realm)\ndoFinalize():190, Daemons$FinalizerDaemon (java.lang)\nrun():173, Daemons$FinalizerDaemon (java.lang)\nrun():818, Thread (java.lang)\n\nThat call to close() gives me the above mentioned output.\n\nIf I can investigate more, let me now :)\n\nRealm Version: 0.77\n", "url": "https://github.com/realm/realm-java/issues/763", "user": "degill", "labels": ["T-Bug"], "created": "2015-01-19 08:59:15", "closed": "2015-01-21 15:15:26", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Commit not visible to other realms untill restart of the application", "body": "When performing a realm.commitTransaction(); inside a thread the realm is not updated until the application is restarted. So the changes are persisted but not visible in my application when i query them from the main ui thread. This bug was not present in the previous version 0.75.\n\nExample:\n\n```\n new Thread(new Runnable() {\n            public void run() {\n               Realm realm =  Realm.getInstance(context);\n               realm.beginTransaction();\n               AnyRealmObject obj = realm.createObject(AnyRealmObject.class);\n               realm.commitTransaction();\n\n              realm.close();\n            }\n        }).start();\n```\n\nThis code sent a onChange event in version (0.75) in my ui thread but doesn't do this any more. When deleting an object in a thread the onChange event is called.\n", "url": "https://github.com/realm/realm-java/issues/745", "user": "dobby", "labels": ["T-Bug"], "created": "2015-01-14 10:33:17", "closed": "2015-01-16 11:12:12", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Getting a weird behavior when saving a string", "body": "``` java\njava.lang.RuntimeException: Unspecified exception. Failure when converting short string to UTF-16 0x20 0xae 0x00 0x00 0x90 0xae 0x00 0x00 0x98 0x54 0x01 in io_realm_internal_Row.cpp line 126\n            at io.realm.internal.Row.nativeGetString(Native Method)\n            at io.realm.internal.Row.getString(Row.java:126)\n            at io.realm.MessageModelRealmProxy.getMessage(MessageModelRealmProxy.java:108)\n```\n", "url": "https://github.com/realm/realm-java/issues/729", "user": "dotgc", "labels": ["T-Bug"], "created": "2015-01-08 23:55:36", "closed": "2015-11-20 02:40:46", "commits": {}, "ttf": 315.0002777777778, "commitsDetails": []}, {"title": "java.lang.IllegalStateException: Cannot use ImplicitTransaction after it or its parent has been closed.", "body": "``` java\njava.lang.IllegalStateException: Cannot use ImplicitTransaction after it or its parent has been closed.\n            at io.realm.internal.ImplicitTransaction.assertNotClosed(ImplicitTransaction.java:66)\n            at io.realm.internal.ImplicitTransaction.advanceRead(ImplicitTransaction.java:29)\n            at io.realm.Realm$RealmCallback.handleMessage(Realm.java:194)\n            at android.os.Handler.dispatchMessage(Handler.java:95)\n            at android.os.Looper.loop(Looper.java:176)\n```\n\nI'm getting the above error while adding/updating realm objects in a background handler thread. What is the reason behind this?\n", "url": "https://github.com/realm/realm-java/issues/726", "user": "dotgc", "labels": ["T-Bug"], "created": "2015-01-08 10:22:09", "closed": "2015-09-23 12:12:01", "commits": {}, "ttf": 258.0002777777778, "commitsDetails": []}, {"title": "Incorrect samples in \"Sorting\" section", "body": "The \"Sorting\" section contains incorrect samples: result of .sort is void. \nhttp://realm.io/docs/java/0.76.0/#sorting\n", "url": "https://github.com/realm/realm-java/issues/710", "user": "tseglevskiy", "labels": ["T-Bug"], "created": "2015-01-04 10:23:57", "closed": "2015-01-05 10:17:01", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Sorting results breaks query chaining", "body": "I think I've come across a weird bug on v0.76 - if you generate a sorted `RealmResults`, then query chaining starts throwing exceptions.  (I'm not sure if this also happened on older versions of Realm.)\n\nHere's a somewhat contrived example:\n\n```\n// Without sorting, it works fine\n// RealmList<Contact> contacts = realm.where(Group.class).findFirst().\n\n// With sorting, it doesn't work\nRealmResults<Contact> contacts = realm.where(Group.class).findFirst().getContacts()\n                                            .where().findAll(\"key\", RealmResults.SORT_ORDER_ASCENDING);\n\n// ArrayIndexOutOfBoundsException\nRealmResults<Contact> statusContacts = contacts.where().equalTo(\"status\", 1).findAll();\n\n// IllegalArgumentException: Field 'key': type mismatch. \nRealmResults<Contact> keyContacts = contacts.where().equalTo(\"key\", \"A\").findAll();\n\n```\n\nAll other source files are available here: \nhttps://github.com/gautamjain/DebugRealm/tree/master/app/src/main/java/io/gautam/debugrealm\n", "url": "https://github.com/realm/realm-java/issues/707", "user": "gautamjain", "labels": ["T-Bug"], "created": "2014-12-31 21:01:38", "closed": "2015-01-09 18:01:51", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Trying to build 0.76.0 version with encryption fails", "body": "When trying to build the version 0.76.0 of the library i get an error trying to download the core library:\n\nhttp://static.realm.io/downloads/core/realm-core-android-0.86.0-encryption.tar.gz\n\nThe standard version is available, but the encrypted one isn't there.\n", "url": "https://github.com/realm/realm-java/issues/687", "user": "demonar", "labels": ["T-Bug"], "created": "2014-12-20 01:15:54", "closed": "2015-01-07 13:00:04", "commits": {}, "ttf": 18.00027777777778, "commitsDetails": []}, {"title": "Proxy class imports can cause ambiguous references ", "body": "While migrating to use the just-landed json features, I encountered an issue while deserializing a json object with string array property, something like:\n\n```\n{\n    arr: [ 'item1', 'item2', 'item3' ]\n}\n```\n\npreviously I fixed the issue by creating a wrapper class (e.g `RealmString`) and since I was parsing json manually via gson, it was working ok, but now I can't find a workaround to this issue, any ideas?\n\n// other small issues...\n- why can't we get a list of created objects via `realm.createAllFromJson()` similar to what we get from `realm.createObjectFromJson()`?\n- I get `reference is ambiguous` error in the generated proxy class, when I have a model named `Thread`.\n\nThanks for your great efforts, and keep up the good work!\n", "url": "https://github.com/realm/realm-java/issues/686", "user": "osama-lionheart", "labels": ["T-Bug"], "created": "2014-12-19 23:02:37", "closed": "2015-01-09 12:22:34", "commits": {}, "ttf": 20.00027777777778, "commitsDetails": []}, {"title": "Segmentation fault when performing updates", "body": "Hi there!\n\nSeems like I've found  _VERY_ odd bug leading to a segmentation fault in my app, which uses Realm.\nThe bug happens when I use \"-\" symbol in Realm instance name:\n\nRealm realmInstance = Realm.getInstance(this, \"somerealm-file-ok.realm\");\n\nIt works absolutely ok, as intended. However, consider this app flow:\n1. Start IntentService upon activity creation\n2. In IntentService do: `Realm.getInstance(context, \"some-file-name.realm\")`\n3. Fetch data from network\n4. Then clear all my existing data in one single transaction using aquired instance (see 2)\n5. Then start saving different sets of entities, one transaction per set (e.g. 1 tx for `List of Entity`, 1 tx for `List of Model`, etc) , using aquired instance (see 2)\n6. Succeed, close instance, stop IntentService internally\n7. In Activity, press back, returning to Launcher\n8. Launch activity again, in attempt to go through steps 1-7 again\n9. [time]2930-2930/? A/libc\ufe55 Fatal signal 11 (SIGSEGV) at 0x00000390 (code=1), thread 2930 (.myappname)\n\nThere's only one Realm instance in IntentService, I do not pass it to other thread, and it is acquired in IntentService thread.\n\nAfter the Application is surely killed by system, I can launch it again and go through steps 1-9 again, receiving the same experience.\n\n**Now the interesting part**\n\nEverything works fine (? at least without SIGSEGV) when I acquire either the default instance for Context ~~or instance **with name, which does not contain \"-\" (dash)**~~\n\n`Realm.getInstance(someContext)`\n~~`Realm.getInstance(someContext, \"nodashinname\")`~~\n\n**UPDATE**\nOnly the instance with the default name does not cause SIGSEGV in the scenario above. \n\nI would really want to use Realm in production as the only truly powerful NoSQL  available for the platform. But issues like may prevent anyone from being able to do so. Guys do something! :) Realm is too awesome not to be used in production in Android :)\n", "url": "https://github.com/realm/realm-java/issues/671", "user": "ousenko", "labels": ["T-Bug"], "created": "2014-12-12 17:20:43", "closed": "2014-12-22 10:45:03", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "Usage of equals in comparison", "body": "Hi,\nCommit a0376da removed some of the lines which were required for more thorough object comparisons. The [current implementation](https://github.com/realm/realm-java/blob/master/realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyClassGenerator.java#L472) considers 2 objects same even if they have different instance values. e.g. current block of code will pass the equals check.\n\n``` java\nUser a = Realm.getInstance(this).createObject(User.class);\na.setId(11);\nUser b = Realm.getInstance(this).createObject(User.class);\nb.setId(12);\na.equals(b); // ---- true --- // should be false \n```\n\nI think the rowIndex should be considered while comparing 2 objects belonging to same table.\n", "url": "https://github.com/realm/realm-java/issues/655", "user": "creativepsyco", "labels": ["T-Bug"], "created": "2014-12-09 19:32:54", "closed": "2014-12-12 09:11:40", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Sample app crashing on relaunch", "body": "**IntroExample** is crashing on Lollipop without printing any stack-trace but this line:\n\n_Fatal signal 11 (SIGSEGV), code 1, fault addr 0x398 in tid 18537_\n\nHow to reproduce:\n\nLaunch app, close app and then launch again. Same is reproducible on orientation change. \n\nWe didn't tried running any other sample project.\n\nTried on:\n\nDevice: Qmobile i9 \nOS: Android 4.2.2\n\nDevice: Nexus 4\nOS: Android Lollipop\n\nDevice: Nexus 5\nOS: Android Lollipop\n", "url": "https://github.com/realm/realm-java/issues/652", "user": "ImranAtBhimsoft", "labels": ["T-Bug"], "created": "2014-12-08 14:08:05", "closed": "2014-12-22 11:01:43", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "ConcurrentModificationException when using iterators methods", "body": "Hi, I have such exception even I using iterators methods:\nRealm version 0.75.1, Android studio 1.0rc2\n\n```\nCaused by: java.util.ConcurrentModificationException: No outside changes to a Realm is allowed while iterating a RealmResults. Use iterators methods instead.\n            at io.realm.RealmResults.assertRealmIsStable(RealmResults.java:405)\n            at io.realm.RealmResults.access$200(RealmResults.java:44)\n            at io.realm.RealmResults$RealmResultsIterator.hasNext(RealmResults.java:422)\n            at com.coachesdirectory.coach.db.RealmHelper$5.doInBackground(RealmHelper.java:360)\n            at com.coachesdirectory.coach.db.RealmHelper$5.doInBackground(RealmHelper.java:347)\n            at android.os.AsyncTask$2.call(AsyncTask.java:288)\n            at java.util.concurrent.FutureTask.run(FutureTask.java:237)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.lang.Thread.run(Thread.java:818)\n```\n\nHere is part of my code:\n\n```\n****AsyncTask*****\nList<SchoolResult> favoriteSchools = params[0];\nRealm realm = Realm.getInstance(context);\nrealm.beginTransaction();\n\n// Set all schools to remove\nRealmResults<RealmSchoolResult> markToRemove = realm.where(RealmSchoolResult.class)\n                        .equalTo(\"userAccountId\", userId)\n                        .findAll();\nIterator<RealmSchoolResult> schoolResultIterator = markToRemove.iterator();\nwhile (schoolResultIterator.hasNext()) { // Crash at this line\n  RealmSchoolResult realmSchoolResult = schoolResultIterator.next();\n  realmSchoolResult.setNeedRemove(true);\n}\n```\n", "url": "https://github.com/realm/realm-java/issues/640", "user": "sergeyfitis", "labels": ["T-Bug"], "created": "2014-12-04 09:55:27", "closed": "2016-04-21 16:53:41", "commits": {}, "ttf": 504.0002777777778, "commitsDetails": []}, {"title": "ConcurrentModificationException while sending out notifications", "body": "Hi guys,\n\nwe subscribed some of our ListAdapters to listen for Realm change notifications. Apparently we are receiving quite some crashes when those notifications are about to be sent out because the list holding the listeners we registered for these notification using addChangeListener is iterated in a thread-unsafe way. Please find the stack trace attached, the exception is thrown in Realm.java:681 : \n\n```\n\njava.util.ConcurrentModificationException\n       at java.util.ArrayList$ArrayListIterator.next(ArrayList.java:573)\n       at io.realm.Realm.sendNotifications(Realm.java:681)\n       at io.realm.Realm$RealmCallback.handleMessage(Realm.java:133)\n       at android.os.Handler.dispatchMessage(Handler.java:102)\n       at android.os.Looper.loop(Looper.java:136)\n       at android.app.ActivityThread.main(ActivityThread.java:5212)\n       at java.lang.reflect.Method.invokeNative(Method.java)\n       at java.lang.reflect.Method.invoke(Method.java:515)\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:786)\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:602)\n       at dalvik.system.NativeStart.main(NativeStart.java)\n\n```\n\nIs this a problem on our side? We are currently using 0.74.0 since the Gradle version is not yet updated.\n", "url": "https://github.com/realm/realm-java/issues/638", "user": "tspecht", "labels": ["T-Bug"], "created": "2014-12-03 20:11:01", "closed": "2015-01-28 14:00:52", "commits": {}, "ttf": 55.000277777777775, "commitsDetails": []}, {"title": "rowIndex > available rows", "body": "I'm getting this error when trying to delete an objet from realm:\n\n`12-02 18:06:42.144    1313-1313/com.globant.fernandoraviola.fidreader E/AndroidRuntime\ufe55 FATAL EXCEPTION: main\n    java.lang.ArrayIndexOutOfBoundsException: rowIndex > available rows.\n            at io.realm.internal.Table.nativeMoveLastOver(Native Method)\n            at io.realm.internal.Table.moveLastOver(Table.java:372)\n            at io.realm.RealmObject.removeFromRealm(RealmObject.java:54)`\n\n```\nrealm.beginTransaction();\nFavorite favorite = realm.where(Favorite.class)\n                                .equalTo(\"title\", entry.getTitle())\n                                .findFirst();\n                        if (favorite != null) {\n                            favorite.removeFromRealm();\n                            isFavorite = false;\n                        }\nrealm.commitTransaction();\n```\n\nApparently, This happens when I try to remove the LAST item I added. \n", "url": "https://github.com/realm/realm-java/issues/635", "user": "feresr", "labels": ["T-Bug"], "created": "2014-12-02 18:18:55", "closed": "2014-12-02 19:05:31", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Native Crash with sort(). Version 0.74.0", "body": "Hi,\nI have a native crash when I write the following code (I am using `Guava` `Predicate` to do the filtering):\n\n``` java\nList<Contact> members = new ArrayList<>();\n\n// uncommenting this line below does not cause the crash\n//        ArrayList<Contact> members = new ArrayList<>(ContactHelper.getAllContacts()); \nList<Contact> filtered = new ArrayList<>(Collections2.filter(members, new Predicate<Contact>() {\n  @Override\n  public boolean apply(Contact input) {\n    return ContactHelper.getDisplayName(input).contains(queryString.trim());\n  }\n}));\n\n```\n\nHowever, when I copy the `ArrayList` contents the crash does not happens. `Contact` inherits from `RealmObject`\n\nAm I doing something wrong?\n\n```\n11-28 14:55:09.587    6863-6863/? A/libc\ufe55 Fatal signal 11 (SIGSEGV) at 0xfffffff8 (code=1), thread 6863 (this.exampleandroid)\n11-28 14:55:09.687      122-122/? I/DEBUG\ufe55 *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n11-28 14:55:09.687      122-122/? I/DEBUG\ufe55 Build fingerprint: 'generic/vbox86p/vbox86p:4.4.4/KTU84P/eng.buildbot.20141001.101335:userdebug/test-keys'\n11-28 14:55:09.687      122-122/? I/DEBUG\ufe55 Revision: '0'\n11-28 14:55:09.687      122-122/? I/DEBUG\ufe55 pid: 6863, tid: 6863, name: this.exampleandroid  >>> com.examplethis.exampleandroid <<<\n11-28 14:55:09.687      122-122/? I/DEBUG\ufe55 signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr fffffff8\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 eax 00000000  ebx 94cf0ff4  ecx 00000000  edx 94ceb7b0\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 esi bf973a0c  edi b8fe5c80\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 xcs 00000073  xds 0000007b  xes 0000007b  xfs 00000000  xss 0000007b\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 eip 94c3c4e1  ebp bf973a48  esp bf9739e0  flags 00210282\n11-28 14:55:09.823      122-122/? E/Corkscrew\ufe55 unrecognized DW_CFA_* instruction: 0x2e\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 backtrace:\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 #00  pc 001514e1  /data/app-lib/com.examplethis.exampleandroid-2/libtightdb-jni.so (__dynamic_cast+17)\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 #01  pc 000bea3e  /data/app-lib/com.examplethis.exampleandroid-2/libtightdb-jni.so (tightdb::TableViewBase::outside_version() const+50)\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 stack:\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739a0  b4eddcb4  /system/lib/libdvm.so\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739a4  b4f51c80\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739a8  b4d4df59  /system/lib/libdvm.so (dvmInterpret(Thread*, Method const*, JValue*)+9)\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739ac  b4eddcb4  /system/lib/libdvm.so\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739b0  9edbf3bc\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739b4  b8e16eb0  [heap]\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739b8  bf973ab8  [stack]\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739bc  b4dd4028  /system/lib/libdvm.so (dvmCallMethodV(Thread*, Method const*, Object*, bool, JValue*, char*)+760)\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739c0  b8e16eb0  [heap]\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739c4  9e1c6418  /dev/ashmem/dalvik-LinearAlloc (deleted)\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739c8  bf973ab8  [stack]\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739cc  a4d17890  /dev/ashmem/dalvik-zygote (deleted)\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739d0  9ddbb080  /dev/ashmem/dalvik-LinearAlloc (deleted)\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739d4  a4d181e8  /dev/ashmem/dalvik-zygote (deleted)\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739d8  a5c97fa0  /dev/ashmem/dalvik-heap (deleted)\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739dc  b4eddcb4  /system/lib/libdvm.so\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 #00  bf9739e0  9edbf3bc\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739e4  b8e16eb0  [heap]\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739e8  bf973ad0  [stack]\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739ec  b76b8f79  /system/lib/libc.so (pthread_mutex_unlock+25)\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739f0  b8e16eb0  [heap]\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739f4  9ddbd5b8  /dev/ashmem/dalvik-LinearAlloc (deleted)\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739f8  00000000\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf9739fc  b8e16eb0  [heap]\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf973a00  a5c97fa0  /dev/ashmem/dalvik-heap (deleted)\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf973a04  00000038\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf973a08  00000148\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf973a0c  00000000\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf973a10  00000008\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf973a14  00000002\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf973a18  00000001\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf973a1c  b4eddcb4  /system/lib/libdvm.so\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 ........  ........\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 memory map around fault addr fffffff8:\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 bf955000-bf976000 rw- [stack]\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 (no map for address)\n11-28 14:55:09.823      122-122/? I/DEBUG\ufe55 (no map above)\n```\n", "url": "https://github.com/realm/realm-java/issues/626", "user": "creativepsyco", "labels": ["T-Bug"], "created": "2014-11-28 07:04:17", "closed": "2014-12-05 14:32:18", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "Unspecified exception. Bad UTF-8 encoding", "body": "Hi guys,\n\nfrom time to time I'm not able to start my app anymore since everytime I try to start it, the application immediately crashes and the following is logged:\n\n```\nUnspecified exception. Bad UTF-8 encoding\nFatal signal 11 (SIGSEGV) at 0xe7d2fd7d (code=1), thread 5312 (Thread-6373)\n```\n\nOnly deleting and reinstalling the app actually helps, I guess the realm got somehow corrupted. Any fixes available?\n", "url": "https://github.com/realm/realm-java/issues/613", "user": "tspecht", "labels": ["T-Bug"], "created": "2014-11-24 20:04:40", "closed": "2014-12-10 15:51:30", "commits": {}, "ttf": 15.000277777777777, "commitsDetails": []}, {"title": "Fatal signal 11 (SIGSEGV) at 0x00000000 (code=1), thread 30327 (s.realmadapters)", "body": "Hi everyone!\nThanks for the Realm! Unfortunately, I have been experiencing problems with RealmAdapter. At first it was only in my application but then I managed to crash the [sample application.](https://github.com/realm/realm-java/tree/master/examples/adapterExample)\nOf cource I did change it a little bit. Changes:\n- Added new item to menu (now there are two items which can be clicked)\n-  Added an action to this item ([see](https://github.com/zsavely/RealmAdapterSample/blob/master/src/io/realm/examples/realmadapters/MyActivity.java#L78) the code)\n- Added sorting before setting an adapter to listview\n- Added one more attribute to class TimeStamp\n\nHow to reproduce this crash:\n- Run the App\n- Click 'Add'\n- Click 'SORT'\n- Do it 5-10 times\n\nLogCat:\n\n```\n11-24 21:39:27.545: D/dalvikvm(30327): Trying to load lib /data/data/io.realm.examples.realmadapters/lib/libtightdb-jni.so 0x41c31c08\n11-24 21:39:27.545: D/dalvikvm(30327): Added shared lib /data/data/io.realm.examples.realmadapters/lib/libtightdb-jni.so 0x41c31c08\n11-24 21:39:42.560: D/dalvikvm(30327): GC_CONCURRENT freed 266K, 7% free 12295K/13127K, paused 17ms+2ms, total 40ms\n11-24 21:39:42.930: A/libc(30327): Fatal signal 11 (SIGSEGV) at 0x00000000 (code=1), thread 30327 (s.realmadapters)\n```\n\nPhone: Samsung Galaxy S3\nAndroid: 4.1.2\n\n[Sample application](https://github.com/zsavely/RealmAdapterSample) in which I can reproduce crash.\n", "url": "https://github.com/realm/realm-java/issues/611", "user": "zsavely", "labels": ["T-Bug"], "created": "2014-11-24 19:00:22", "closed": "2014-12-05 14:33:07", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "Bad UTF-8 encoding", "body": "java.lang.RuntimeException: Unspecified exception. Bad UTF-8 encoding\n            at io.realm.internal.Row.nativeGetString(Native Method)\n", "url": "https://github.com/realm/realm-java/issues/608", "user": "vovam", "labels": ["T-Bug"], "created": "2014-11-24 12:22:11", "closed": "2015-01-19 07:07:49", "commits": {}, "ttf": 55.000277777777775, "commitsDetails": []}, {"title": "Dates before 1902 are stored incorrectly", "body": "I've written a test project here: https://github.com/decnorton/RealmDateTest/blob/master/app/src/main/java/com/decnorton/realmdatetest/MainActivity.java\n\nExample Logcat output:\n\n```\n[testDate:1] Testing date: Thu Feb 01 17:43:07 GMT+00:00 1900\n[testDate:1] Before commit: Mon Mar 10 00:11:24 GMT+00:00 2036\n[testDate:1] After commit: Mon Mar 10 00:11:24 GMT+00:00 2036\n------------\n[testDate:2] Testing date: Fri Feb 01 17:43:07 GMT+00:00 1901\n[testDate:2] Before commit: Tue Mar 10 00:11:24 GMT+00:00 2037\n[testDate:2] After commit: Tue Mar 10 00:11:24 GMT+00:00 2037\n------------\n[testDate:3] Testing date: Sat Feb 01 17:43:07 GMT+00:00 1902\n[testDate:3] Before commit: Sat Feb 01 17:43:08 GMT+00:00 1902\n[testDate:3] After commit: Sat Feb 01 17:43:08 GMT+00:00 1902\n------------\n[testDate:4] Testing date: Sun Feb 01 17:43:07 GMT+00:00 1903\n[testDate:4] Before commit: Sun Feb 01 17:43:08 GMT+00:00 1903\n[testDate:4] After commit: Sun Feb 01 17:43:08 GMT+00:00 1903\n------------\n[testDate:5] Testing date: Mon Feb 01 17:43:07 GMT+00:00 1904\n[testDate:5] Before commit: Mon Feb 01 17:43:08 GMT+00:00 1904\n[testDate:5] After commit: Mon Feb 01 17:43:08 GMT+00:00 1904\n------------\n[testDate:6] Testing date: Wed Feb 01 17:43:07 GMT+00:00 1905\n[testDate:6] Before commit: Wed Feb 01 17:43:08 GMT+00:00 1905\n[testDate:6] After commit: Wed Feb 01 17:43:08 GMT+00:00 1905\n------------\n[testDate:7] Testing date: Tue Feb 01 17:43:07 GMT+00:00 1910\n[testDate:7] Before commit: Tue Feb 01 17:43:08 GMT+00:00 1910\n[testDate:7] After commit: Tue Feb 01 17:43:08 GMT+00:00 1910\n```\n\nNotice the year for 1901 is saved as 2036.\n", "url": "https://github.com/realm/realm-java/issues/601", "user": "decnorton", "labels": ["T-Bug"], "created": "2014-11-21 17:47:34", "closed": "2014-11-28 14:58:28", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "removeFromRealm ArrayIndexOutOfBoundsException", "body": "I updated the version of realm java to 0.74 and the method removeFromRealm begin to throw the exception ArrayIndexOutOfBoundsException.\n\nThe code is:\n\n```\n        User result = realm.where(User.class)\n                .equalTo(\"id\", user.getId()).findFirst();\n\n        if (result != null) {\n            try {\n                realm.beginTransaction();\n                result.removeFromRealm();\n                realm.commitTransaction();\n            } catch (Exception e) {\n                realm.cancelTransaction();\n            }\n        }\n```\n", "url": "https://github.com/realm/realm-java/issues/595", "user": "guichico", "labels": ["T-Bug"], "created": "2014-11-20 19:46:30", "closed": "2014-11-28 14:58:43", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "TableView cannot be cast to Table", "body": "Get this exception when trying to run a query on RealmResults. Happens after upgrading from 0.71.0 to 0.74.0.\n\nCode is as follows:\n\n``` java\nRealmResults<Language> languages = mLanguageRepository.all();\nmDefaultLanguage = languages.where().equalTo(\"code\", mDefaultLanguageCode).findFirst();\n```\n\nStacktrace here:\n\n```\nCaused by: java.lang.ClassCastException: io.realm.internal.TableView cannot be cast to io.realm.internal.Table\n       at io.realm.RealmQuery.getColumnIndices(RealmQuery.java:136)\n       at io.realm.RealmQuery.equalTo(RealmQuery.java:196)\n       at io.realm.RealmQuery.equalTo(RealmQuery.java:181)\n```\n", "url": "https://github.com/realm/realm-java/issues/594", "user": "decnorton", "labels": ["T-Bug"], "created": "2014-11-20 15:52:16", "closed": "2014-11-21 17:10:09", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Cyclic reference issue", "body": "It's similar to issue #484 , but the exception also occurs in equals() and hashCode() methods. Do you have a quick fix for this crash?\n", "url": "https://github.com/realm/realm-java/issues/589", "user": "TepesLucian", "labels": ["T-Bug"], "created": "2014-11-20 09:24:22", "closed": "2014-11-28 08:21:49", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "Sorting RealmResults before adding to a RealmBaseAdapter eventually causes crash", "body": "I have an Activity with several ActionBar tabs, each containing a Fragment with a ListView. Previously, I had been using ArrayAdapters to hold the RealmObjects for display in the lists, and everything was working great. I would fetch the RealmResults, sort them, take a sublist, and add it to the adapter in an ArrayList, like so:\n\n``` java\n        // get videos and add to adapter\n        Realm realm = Realm.getInstance(getActivity());\n        RealmResults<Video> results = mRealm.where(Video.class).findAll();\n        results = results.sort(\"position\");\n        ArrayList<Video> videos = new ArrayList<Video>();\n        videos.addAll(results.subList(0, results.size() < 10 ? results.size() : 10));\n        mAdapter = new VideoAdapter(getActivity(), videos);\n```\n\nWith the release of 0.73, I've tried to switch my ListViews to using RealmBaseAdapter instead of ArrayAdapter:\n\n``` java\n        // get stories for list adapter\n        Realm realm = Realm.getInstance(getActivity());\n        RealmResults<Video> results = realm.where(Video.class).findAll();\n        results = results.sort(\"position\");\n        mAdapter = new VideoAdapter(getActivity(), android.R.id.list, results, true);\n```\n\nThis approach works initially, but I find that once I switch to another tab, my app crashes with the following error: A/libc\ufe55 Fatal signal 11 (SIGSEGV) at 0x00000074 (code=1)\n\nUnfortunately I'm not sure exactly where it is in the switching to another tab that's triggering the crash, wether it's something to do with the suspension of the Video tab, or something in the initialization of the next tab (which is similarly a ListView backed by RealmObjects).\n\nHowever, if I comment out the sort line in this code, I don't get the crash:\n\n``` java\n        // get stories for list adapter\n        Realm realm = Realm.getInstance(getActivity());\n        RealmResults<Video> results = realm.where(Video.class).findAll();\n        // no sorting == no SIGSEGV crash\n        // results = results.sort(\"position\");\n        mAdapter = new VideoAdapter(getActivity(), android.R.id.list, results, true);\n```\n\nThis works fine all of the time, but my ListView isn't correctly sorted.\n", "url": "https://github.com/realm/realm-java/issues/543", "user": "gjcameron", "labels": ["T-Bug"], "created": "2014-11-09 05:03:13", "closed": "2014-12-05 14:33:48", "commits": {}, "ttf": 26.00027777777778, "commitsDetails": []}, {"title": "Sort() signal 11 on version 73", "body": "Exactly like 72 with enough queries (Fixed now). Could it be similar buffer size problem at sort() side?\n", "url": "https://github.com/realm/realm-java/issues/529", "user": "codezion", "labels": ["T-Bug"], "created": "2014-11-04 13:15:01", "closed": "2014-12-05 14:31:50", "commits": {}, "ttf": 31.00027777777778, "commitsDetails": []}, {"title": "bug:Failed adding to JNI pinned array ref table (1024 entries)", "body": "I have a hashset named \"localIds\" which contains over 2000 integers,\nand i want to make a query to get all records from a big realm table which's field \"localId\" match the value in the hashset,\nand my code below:\n        RealmQuery<RUser> query = realm.where(RUser.class);\n        query.equalTo(\"localId\",0);\n        for (int localId : localIds) {\n            query.or().equalTo(\"localId\", localId);\n        }\n        RealmResults<RUser> results = query.findAll();\n\nand when i run i got :\n10-30 22:24:37.375  10539-10539/com.gxl.hbcloud W/dalvikvm\ufe55 ReferenceTable overflow (max=1024)\n10-30 22:24:37.375  10539-10539/com.gxl.hbcloud W/dalvikvm\ufe55 JNI pinned array reference table (0x65646458) dump:\n10-30 22:24:37.375  10539-10539/com.gxl.hbcloud W/dalvikvm\ufe55 Last 10 entries (of 1024):\n10-30 22:24:37.375  10539-10539/com.gxl.hbcloud W/dalvikvm\ufe55 1023: 0x43641d90 long[](1 elements)\n10-30 22:24:37.375  10539-10539/com.gxl.hbcloud W/dalvikvm\ufe55 1022: 0x43641c20 long[](1 elements)\n10-30 22:24:37.375  10539-10539/com.gxl.hbcloud W/dalvikvm\ufe55 1021: 0x43641ab0 long[](1 elements)\n10-30 22:24:37.375  10539-10539/com.gxl.hbcloud W/dalvikvm\ufe55 1020: 0x43641940 long[](1 elements)\n10-30 22:24:37.375  10539-10539/com.gxl.hbcloud W/dalvikvm\ufe55 1019: 0x436417d0 long[](1 elements)\n10-30 22:24:37.375  10539-10539/com.gxl.hbcloud W/dalvikvm\ufe55 1018: 0x43641660 long[](1 elements)\n10-30 22:24:37.375  10539-10539/com.gxl.hbcloud W/dalvikvm\ufe55 1017: 0x436414f0 long[](1 elements)\n10-30 22:24:37.375  10539-10539/com.gxl.hbcloud W/dalvikvm\ufe55 1016: 0x43641380 long[](1 elements)\n10-30 22:24:37.375  10539-10539/com.gxl.hbcloud W/dalvikvm\ufe55 1015: 0x43641210 long[](1 elements)\n10-30 22:24:37.375  10539-10539/com.gxl.hbcloud W/dalvikvm\ufe55 1014: 0x436410a0 long[](1 elements)\n10-30 22:24:37.375  10539-10539/com.gxl.hbcloud W/dalvikvm\ufe55 Summary:\n10-30 22:24:37.375  10539-10539/com.gxl.hbcloud W/dalvikvm\ufe55 1 of byte[](8192 elements)\n10-30 22:24:37.375  10539-10539/com.gxl.hbcloud W/dalvikvm\ufe55 1023 of long[](1 elements) (1023 unique instances)\n10-30 22:24:37.375  10539-10539/com.gxl.hbcloud E/dalvikvm\ufe55 Failed adding to JNI pinned array ref table (1024 entries)\n10-30 22:24:37.375  10539-10539/com.gxl.hbcloud I/dalvikvm\ufe55 \"main\" prio=5 tid=1 RUNNABLE\n10-30 22:24:37.375  10539-10539/com.gxl.hbcloud I/dalvikvm\ufe55 | group=\"main\" sCount=0 dsCount=0 obj=0x4161b508 self=0x41600918\n10-30 22:24:37.375  10539-10539/com.gxl.hbcloud I/dalvikvm\ufe55 | sysTid=10539 nice=0 sched=0/0 cgrp=apps handle=1075388208\n10-30 22:24:37.375  10539-10539/com.gxl.hbcloud I/dalvikvm\ufe55 | schedstat=( 6428502962 2160360510 29862 ) utm=521 stm=121 core=3\n10-30 22:24:37.375  10539-10539/com.gxl.hbcloud I/dalvikvm\ufe55 at io.realm.internal.Group.nativeHasTable(Native Method)\n\ni also tried NSPredicate with \"in\" condition in realm's iOS version, it's really fast and got no error.\nmaybe in android version, JNI code have something not release.\n", "url": "https://github.com/realm/realm-java/issues/515", "user": "xingxp", "labels": ["T-Bug"], "created": "2014-10-30 14:40:58", "closed": "2014-11-03 10:16:15", "commits": {"e6d3790459a5d459801199c7754bb30a59b74436": {"commitGHEventType": "referenced", "commitUser": "kneth"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "e6d3790459a5d459801199c7754bb30a59b74436", "commitGHEventType": "referenced", "commitUser": "kneth", "commitParents": ["3b6b3e88a70ef42298358d1e2d0816388d8cde43"], "nameRev": "e6d3790459a5d459801199c7754bb30a59b74436 tags/v0.73.0~7^2~4", "commitMessage": "BUG FIX: https://github.com/realm/realm-java/issues/515\n", "commitDateTime": "2014-10-31 10:22:43", "authoredDateTime": "2014-10-31 10:22:43", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "realm-jni/src/io_realm_internal_TableQuery.cpp", "insertions": 3, "deletions": 6, "lines": 9}, {"filePath": "realm/src/androidTest/java/io/realm/RealmResultsTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmResultsTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmResultsTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e6d3790459a5d459801199c7754bb30a59b74436"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 6, "lines": 9, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm-jni/src/io_realm_internal_TableQuery.cpp"], "changesInPackagesSPOON": []}, {"title": "Crash onRealmChange", "body": "```\n    Realm realm = Realm.getInstance(getActivity());\n    realm.addChangeListener(new RealmChangeListener() {\n        @Override\n        public void onChange() {\n            Realm.getInstance(getActivity());\n            Log.d(TAG, \"data changes\");\n        }\n    });\n```\n\nThis will print infinity \"data changes\", and crash. I think it's only a problem with the latest release.\n", "url": "https://github.com/realm/realm-java/issues/508", "user": "dshen6", "labels": ["T-Bug"], "created": "2014-10-27 23:35:16", "closed": "2014-11-10 10:11:10", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "Deleted items still present in query results", "body": "I've encountered a data consistency issue when deleting on a background thread from a different context. I have a list of items, and clicking on an item will open a secondary activity. If the item is deleted                                                                                                                         on a background thread on this secondary activity, it will still show on the list back in the first activity. The list data is reloaded inside `onResume`, and the list activity registers with realm for change events. Even if the data is reloaded explicitly, the deleted item is still present in the result set.\n\nThe deleted item will only be removed from the result set if you either do a write operation (insert a new element into the list) or restart the app. Simply sending the app to the background and resuming it again doesn't solve the issue. The app needs to be force stopped and then restarted. \n\nDeleting the item from a background thread on the list activity will remove the item from the list. Deleting the item on the main thread from the secondary activity will also remove the item from the list. Deleting the item on a background thread on the secondary activity will _not_ remove the item from the list.\n\nI've modified my sample realm project to replicate the issue:\nhttps://github.com/edubarr/RealmSample\n\nOnce compiled, the app is named \"Realm.io.\" It's very simple to reproduce the issue. Just click on `Add Item` menu option to add an item. Click on the item to open the secondary activity and click on the `Delete!` button. Once the secondary activity finishes, the first activity will still show the deleted item on the list. If you click on `Add Item` once again, the deleted item will be removed and a new item will be inserted on the list. The deleted item can also be removed by pushing the app to the background, swiping it away from the recent apps list and starting it over.\n", "url": "https://github.com/realm/realm-java/issues/506", "user": "ebarrenechea", "labels": ["T-Bug"], "created": "2014-10-26 01:08:50", "closed": "2014-12-10 12:20:06", "commits": {}, "ttf": 45.000277777777775, "commitsDetails": []}, {"title": "toString implementation", "body": "Hi,\n\nThere is an error of toString implementation:\n\n``` java\nMethod threw 'java.lang.StackOverflowError' exception. Cannot evaluate io.realm.AdvertisementRealmProxy.toString()\n```\n", "url": "https://github.com/realm/realm-java/issues/484", "user": "felipehjcosta", "labels": ["T-Bug", "T-Enhancement"], "created": "2014-10-18 19:54:47", "closed": "2014-11-28 14:57:48", "commits": {}, "ttf": 40.000277777777775, "commitsDetails": []}, {"title": "\u3010Crash from v6.0.2 to v7.0.0\u3011backtrace not supported on this platform", "body": "#### Goal\ncan open realm\n\n#### Actual Results\nAfter upgrade to v7.0.0, first time i open the realm, it crashes.\n\n#### Steps & Code to Reproduce\n2020-06-15 10:34:33.747 16826-16826/pkgName W/System.err: Caused by: io.realm.exceptions.RealmFileException: Unable to open a realm at path '/data/data/pkgName/files/default.realm': Invalid top array (ref, [0], [1], [2]): 81888, 24, 81184, 294912\n2020-06-15 10:34:33.747 16826-16826/pkgName W/System.err: Exception backtrace:\n2020-06-15 10:34:33.747 16826-16826/pkgName W/System.err: <backtrace not supported on this platform> Path:Exception backtrace:\n2020-06-15 10:34:33.747 16826-16826/pkgName W/System.err: <backtrace not supported on this platform>. (Invalid top array (ref, [0], [1], [2]): 81888, 24, 81184, 294912\n2020-06-15 10:34:33.747 16826-16826/pkgName W/System.err: Exception backtrace:\n2020-06-15 10:34:33.747 16826-16826/pkgName W/System.err: <backtrace not supported on this platform> Path: /data/data/pkgName/files/9999_28522062.realm\n2020-06-15 10:34:33.747 16826-16826/pkgName W/System.err: Exception backtrace:\n2020-06-15 10:34:33.747 16826-16826/pkgName W/System.err: <backtrace not supported on this platform>) (/data/data/pkgName/files/default.realm) in /Users/cm/Realm/realm-java-release/realm/realm-library/src/main/cpp/io_realm_internal_OsSharedRealm.cpp line 107 Kind: ACCESS_ERROR.\n2020-06-15 10:34:33.747 16826-16826/pkgName W/System.err:     at io.realm.internal.OsSharedRealm.nativeGetSharedRealm(Native Method)\n2020-06-15 10:34:33.747 16826-16826/pkgName W/System.err:     at io.realm.internal.OsSharedRealm.<init>(OsSharedRealm.java:175)\n2020-06-15 10:34:33.747 16826-16826/pkgName W/System.err:     at io.realm.internal.OsSharedRealm.getInstance(OsSharedRealm.java:251)\n2020-06-15 10:34:33.747 16826-16826/pkgName W/System.err:     at io.realm.BaseRealm.<init>(BaseRealm.java:137)\n2020-06-15 10:34:33.747 16826-16826/pkgName W/System.err:     at io.realm.BaseRealm.<init>(BaseRealm.java:104)\n2020-06-15 10:34:33.747 16826-16826/pkgName W/System.err:     at io.realm.Realm.<init>(Realm.java:163)\n2020-06-15 10:34:33.747 16826-16826/pkgName W/System.err:     at io.realm.Realm.createInstance(Realm.java:499)\n2020-06-15 10:34:33.748 16826-16826/pkgName W/System.err:     at io.realm.RealmCache.createInstance(RealmCache.java:507)\n2020-06-15 10:34:33.748 16826-16826/pkgName W/System.err:     at io.realm.RealmCache.doCreateRealmOrGetFromCache(RealmCache.java:473)\n2020-06-15 10:34:33.748 16826-16826/pkgName W/System.err:     at io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:414)\n2020-06-15 10:34:33.748 16826-16826/pkgName W/System.err:     at io.realm.Realm.getInstance(Realm.java:428)\n\n#### Version of Realm and tooling\n\nRealm version(s): 7.0.0\n\nRealm Sync feature enabled: No\n\nAndroid Studio version: 3.6.3\n\nAndroid Build Tools version: 3.3.2\n\nGradle version: 4.10.1\n\nWhich Android version and device(s): ?", "url": "https://github.com/realm/realm-java/issues/6946", "user": "JoyHong", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2020-06-15 03:37:39", "closed": "2020-07-01 15:33:33", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "\u3010Crash from v6.0.1 to v7.0.0\u3011SIGABRT", "body": "#### Goal\nUser can open app\n\n#### Actual Results\nNow some users can't open app\n\n#### Steps & Code to Reproduce\n\n1 #00 pc 0001cece /system/lib/libc.so (abort+57) [armeabi-v8]\n2\u00a0#01 pc 001dde07 /data/app/pkgname-8LB5m9ZE9khN2qROKj8FVw==/split_config.armeabi_v7a.apk\n3\u00a0#02 pc 001dde5d /data/app/pkgname-8LB5m9ZE9khN2qROKj8FVw==/split_config.armeabi_v7a.apk\n4\u00a0#03 pc 001ddf57 /data/app/pkgname-8LB5m9ZE9khN2qROKj8FVw==/split_config.armeabi_v7a.apk\n5\u00a0#04 pc 00188e33 /data/app/pkgname-8LB5m9ZE9khN2qROKj8FVw==/split_config.armeabi_v7a.apk\n6\u00a0#05 pc 00188ce9 /data/app/pkgname-8LB5m9ZE9khN2qROKj8FVw==/split_config.armeabi_v7a.apk\n7\u00a0#06 pc 0019a1a1 /data/app/pkgname-8LB5m9ZE9khN2qROKj8FVw==/split_config.armeabi_v7a.apk\n8\u00a0#07 pc 0014629f /data/app/pkgname-8LB5m9ZE9khN2qROKj8FVw==/split_config.armeabi_v7a.apk\n9\u00a0#08 pc 0014620d /data/app/pkgname-8LB5m9ZE9khN2qROKj8FVw==/split_config.armeabi_v7a.apk\n10\u00a0#09 pc 001414dd /data/app/pkgname-8LB5m9ZE9khN2qROKj8FVw==/split_config.armeabi_v7a.apk\n11\u00a0#10 pc 001c3eb3 /data/app/pkgname-8LB5m9ZE9khN2qROKj8FVw==/split_config.armeabi_v7a.apk\n12\u00a0#11 pc 0019842d /data/app/pkgname-8LB5m9ZE9khN2qROKj8FVw==/split_config.armeabi_v7a.apk\n13\u00a0#12 pc 0019be65 /data/app/pkgname-8LB5m9ZE9khN2qROKj8FVw==/split_config.armeabi_v7a.apk\n14\u00a0#13 pc 0019aff7 /data/app/pkgname-8LB5m9ZE9khN2qROKj8FVw==/split_config.armeabi_v7a.apk\n15\u00a0#14 pc 0019bfed /data/app/pkgname-8LB5m9ZE9khN2qROKj8FVw==/split_config.armeabi_v7a.apk\n16\u00a0#15 pc 0019ddc7 /data/app/pkgname-8LB5m9ZE9khN2qROKj8FVw==/split_config.armeabi_v7a.apk\n17\u00a0#16 pc 000fbaed /data/app/pkgname-8LB5m9ZE9khN2qROKj8FVw==/split_config.armeabi_v7a.apk\n18\u00a0#17 pc 000fb72b /data/app/pkgname-8LB5m9ZE9khN2qROKj8FVw==/split_config.armeabi_v7a.apk\n19\u00a0#18 pc 000fb6df /data/app/pkgname-8LB5m9ZE9khN2qROKj8FVw==/split_config.armeabi_v7a.apk\n20\u00a0#19 pc 000ed01d /data/app/pkgname-8LB5m9ZE9khN2qROKj8FVw==/split_config.armeabi_v7a.apk\n21\u00a0#20 pc 000af15b /data/app/pkgname-8LB5m9ZE9khN2qROKj8FVw==/split_config.armeabi_v7a.apk (Java_io_realm_internal_OsSharedRealm_nativeGetSharedRealm+102)\n22\u00a0#21 pc 000822d3 /data/app/pkgname-8LB5m9ZE9khN2qROKj8FVw==/oat/arm/base.odex [armeabi]\n23\u00a0java:\n24\u00a0io.realm.internal.OsSharedRealm.<init>(OsSharedRealm.java:175)\n25\u00a0io.realm.internal.OsSharedRealm.getInstance(OsSharedRealm.java:251)\n26\u00a0io.realm.internal.OsSharedRealm.getInstance(OsSharedRealm.java:239)\n27\u00a0io.realm.a.b(BaseRealm.java:759)\n28\u00a0io.realm.w.e(Realm.java:1808)\n\n#### Version of Realm and tooling\n\nRealm version(s): 7.0.0\n\nRealm Sync feature enabled: No\n\nAndroid Studio version: 3.6.3\n\nAndroid Build Tools version: 3.3.2\n\nGradle version: 4.10.1\n\nWhich Android version and device(s): sm-j737p and so on", "url": "https://github.com/realm/realm-java/issues/6941", "user": "JoyHong", "labels": ["O-Community", "T-Bug-Crash"], "created": "2020-06-11 08:24:41", "closed": "2020-07-01 15:33:41", "commits": {}, "ttf": 20.00027777777778, "commitsDetails": []}, {"title": "Sync crashes when refreshing access token", "body": "Sync periodically needs to refresh the access token used to control the sync session. When this happens, it crashes the app with:\n\n2020-06-09 08:02:33.254 10985-11022/com.mongodb.tasktracker E/REALM: /Users/cm/Realm/realm-java-release/realm/realm-library/src/main/cpp/jni_util/java_class.cpp:50: [realm-core-10.0.0-beta.1] Assertion failed: cls with (class_name) =  [\"io/realm/internal/objectstore/OsJavaNetworkTransport$Response\"]\n    <backtrace not supported on this platform>!!! IMPORTANT: Please send this log and info about Realm SDK version and other relevant reproduction info to help@realm.io.\n2020-06-09 08:02:33.254 10985-11022/com.mongodb.tasktracker A/libc: Fatal signal 6 (SIGABRT), code ~~1 (SI_QUEUE) in tid 11022 (Thread~~3), pid 10985 (odb.tasktracker)\n\nThe hypothesis is that the callback to do this happen on the Sync Client C++ thread, which is started from C++ and thus does not have access to the Java class loader. So it crashes when trying to find the response class.\n\n", "url": "https://github.com/realm/realm-java/issues/6937", "user": "RealmBot", "labels": ["MongoDBRealm", "T-Bug-Crash"], "created": "2020-06-09 17:11:24", "closed": "2020-06-11 12:17:58", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Unrecoverable error. Key not found in io_realm_internal_OsSharedRealm.cpp line 107", "body": "#### Goal\nUser wants to open the app\n\n#### Actual Results\nApp crashes\n\n#### Steps & Code to Reproduce\n```kotlin\nabstract class BaseActivity : Activity {\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n\n        // Crash is happening here\n        val realm = Realm.getDefaultInstance()\n    }\n}\n```\n\n#### Version of Realm and tooling\n\nRealm version(s): 7.0.0\n\nRealm Sync feature enabled: No\n\nAndroid Studio version: 4.0\n\nAndroid Build Tools version: 29.0.3\n\nGradle version: 6.2.1\n\nWhich Android version and device(s): Galaxy A10e, Galaxy S10+, Galaxy S10, Galaxy J7 Crown, Galaxy S20+ 5G, Galaxy S9+, Galaxy A70, LG K40, LG Stylo 4, Pixel 3\n\n#### Full stacktrace\n```\nFatal Exception: io.realm.exceptions.RealmError: Unrecoverable error. Key not found in /Users/cm/Realm/realm-java-release/realm/realm-library/src/main/cpp/io_realm_internal_OsSharedRealm.cpp line 107\n       at io.realm.internal.OsSharedRealm.nativeGetSharedRealm(OsSharedRealm.java)\n       at io.realm.internal.OsSharedRealm.<init>(OsSharedRealm.java:175)\n       at io.realm.internal.OsSharedRealm.getInstance(OsSharedRealm.java:251)\n       at io.realm.BaseRealm.<init>(BaseRealm.java:137)\n       at io.realm.BaseRealm.<init>(BaseRealm.java:104)\n       at io.realm.Realm.<init>(Realm.java:163)\n       at io.realm.Realm.createInstance(Realm.java:499)\n       at io.realm.RealmCache.createInstance(RealmCache.java:507)\n       at io.realm.RealmCache.doCreateRealmOrGetFromCache(RealmCache.java:473)\n       at io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:414)\n       at io.realm.Realm.getDefaultInstance(Realm.java:407)\n       at com.albert.views.activities.base.BaseActivity.onCreate(AuthenticationProtectedActivity.kt:258)\n       at com.albert.views.activities.splash.SplashActivity.onCreate(SplashActivity.kt:56)\n       at android.app.Activity.performCreate(Activity.java:7159)\n       at android.app.Activity.performCreate(Activity.java:7150)\n       at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1272)\n       at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3001)\n       at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3156)\n       at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:78)\n       at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:108)\n       at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:68)\n       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1864)\n       at android.os.Handler.dispatchMessage(Handler.java:106)\n       at android.os.Looper.loop(Looper.java:205)\n       at android.app.ActivityThread.main(ActivityThread.java:6991)\n       at java.lang.reflect.Method.invoke(Method.java)\n       at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:884)\n```", "url": "https://github.com/realm/realm-java/issues/6927", "user": "ergindogan", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2020-06-06 23:38:51", "closed": "2020-07-01 15:33:47", "commits": {}, "ttf": 24.00027777777778, "commitsDetails": []}, {"title": "6.1.0 to 7.0.0 file format upgrade crashes is very slow or can corrupt the file if aborted", "body": "#### Goal\nI upgraded realm from 6.1.0 to 7.0.0 and released it via .aab to the Play Store. And got these crashes which only seams to appear on Huawei devices.\n\n#### Actual Results\n#00  pc 000000000006f06c  /apex/com.android.runtime/lib64/bionic/libc.so (abort+160)\n#01  pc 00000000002b21b4  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/split_config.arm64_v8a.apk!librealm-jni.so (offset 0xde000)\n#02  pc 00000000002b2234  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/split_config.arm64_v8a.apk!librealm-jni.so (offset 0xde000)\n#03  pc 00000000002b2358  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/split_config.arm64_v8a.apk!librealm-jni.so (offset 0xde000)\n#04  pc 000000000023bd74  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/split_config.arm64_v8a.apk!librealm-jni.so (offset 0xde000)\n#05  pc 000000000023bc38  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/split_config.arm64_v8a.apk!librealm-jni.so (offset 0xde000)\n#06  pc 0000000000253a98  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/split_config.arm64_v8a.apk!librealm-jni.so (offset 0xde000)\n#07  pc 00000000001e974c  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/split_config.arm64_v8a.apk!librealm-jni.so (offset 0xde000)\n#08  pc 00000000001e9690  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/split_config.arm64_v8a.apk!librealm-jni.so (offset 0xde000)\n#09  pc 00000000001e2d04  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/split_config.arm64_v8a.apk!librealm-jni.so (offset 0xde000)\n#10  pc 000000000028dfe4  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/split_config.arm64_v8a.apk!librealm-jni.so (offset 0xde000)\n#11  pc 00000000002514a8  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/split_config.arm64_v8a.apk!librealm-jni.so (offset 0xde000)\n#12  pc 0000000000255f88  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/split_config.arm64_v8a.apk!librealm-jni.so (offset 0xde000)\n#13  pc 0000000000255118  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/split_config.arm64_v8a.apk!librealm-jni.so (offset 0xde000)\n#14  pc 0000000000256140  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/split_config.arm64_v8a.apk!librealm-jni.so (offset 0xde000)\n#15  pc 0000000000258420  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/split_config.arm64_v8a.apk!librealm-jni.so (offset 0xde000)\n#16  pc 000000000018a2b0  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/split_config.arm64_v8a.apk!librealm-jni.so (offset 0xde000)\n#17  pc 0000000000189df0  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/split_config.arm64_v8a.apk!librealm-jni.so (offset 0xde000)\n#18  pc 0000000000189d74  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/split_config.arm64_v8a.apk!librealm-jni.so (offset 0xde000)\n#19  pc 0000000000176040  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/split_config.arm64_v8a.apk!librealm-jni.so (offset 0xde000)\n#20  pc 000000000011f07c  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/split_config.arm64_v8a.apk!librealm-jni.so (offset 0xde000) (Java_io_realm_internal_OsSharedRealm_nativeGetSharedRealm+132)\n#21  pc 0000000000047324  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/oat/arm64/base.odex (art_jni_trampoline+196)\n#22  pc 00000000001445b8  /apex/com.android.runtime/lib64/libart.so (art_quick_invoke_static_stub+568)\n#23  pc 00000000001531c4  /apex/com.android.runtime/lib64/libart.so (art::ArtMethod::Invoke(art::Thread*, unsigned int*, unsigned int, art::JValue*, char const*)+284)\n#24  pc 00000000002eed0c  /apex/com.android.runtime/lib64/libart.so (art::interpreter::ArtInterpreterToCompiledCodeBridge(art::Thread*, art::ArtMethod*, art::ShadowFrame*, unsigned short, art::JValue*)+384)\n#25  pc 00000000002eb070  /apex/com.android.runtime/lib64/libart.so (bool art::interpreter::DoCall<true, false>(art::ArtMethod*, art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short, art::JValue*)+656)\n#26  pc 00000000005c08c0  /apex/com.android.runtime/lib64/libart.so (MterpInvokeStaticRange+236)\n#27  pc 000000000013ec94  /apex/com.android.runtime/lib64/libart.so (mterp_op_invoke_static_range+20)\n#28  pc 00000000005bbb2c  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/oat/arm64/base.vdex (io.realm.internal.OsSharedRealm.<init>+108)\n#29  pc 00000000005bd55c  /apex/com.android.runtime/lib64/libart.so (MterpInvokeDirect+1168)\n#30  pc 000000000013e914  /apex/com.android.runtime/lib64/libart.so (mterp_op_invoke_direct+20)\n#31  pc 00000000005bb8f6  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/oat/arm64/base.vdex (io.realm.internal.OsSharedRealm.getInstance+26)\n#32  pc 00000000005bdd68  /apex/com.android.runtime/lib64/libart.so (MterpInvokeStatic+1136)\n#33  pc 000000000013e994  /apex/com.android.runtime/lib64/libart.so (mterp_op_invoke_static+20)\n#34  pc 000000000055d4b4  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/oat/arm64/base.vdex (iw2.<init>+176)\n#35  pc 00000000005bd55c  /apex/com.android.runtime/lib64/libart.so (MterpInvokeDirect+1168)\n#36  pc 000000000013e914  /apex/com.android.runtime/lib64/libart.so (mterp_op_invoke_direct+20)\n#37  pc 000000000055d3e8  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/oat/arm64/base.vdex (iw2.<init>+8)\n#38  pc 00000000005bd55c  /apex/com.android.runtime/lib64/libart.so (MterpInvokeDirect+1168)\n#39  pc 000000000013e914  /apex/com.android.runtime/lib64/libart.so (mterp_op_invoke_direct+20)\n#40  pc 000000000056bf6c  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/oat/arm64/base.vdex (hx2.<init>+24)\n#41  pc 00000000005bd55c  /apex/com.android.runtime/lib64/libart.so (MterpInvokeDirect+1168)\n#42  pc 000000000013e914  /apex/com.android.runtime/lib64/libart.so (mterp_op_invoke_direct+20)\n#43  pc 000000000056b9e8  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/oat/arm64/base.vdex (hx2.a+4)\n#44  pc 00000000005bdd68  /apex/com.android.runtime/lib64/libart.so (MterpInvokeStatic+1136)\n#45  pc 000000000013e994  /apex/com.android.runtime/lib64/libart.so (mterp_op_invoke_static+20)\n#46  pc 0000000000566c08  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/oat/arm64/base.vdex (ix2.a+8)\n#47  pc 00000000005c13d8  /apex/com.android.runtime/lib64/libart.so (MterpInvokeVirtualQuick+1368)\n#48  pc 0000000000142594  /apex/com.android.runtime/lib64/libart.so (mterp_op_invoke_virtual_quick+20)\n#49  pc 00000000005667ce  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/oat/arm64/base.vdex (ix2.a+234)\n#50  pc 00000000005c13d8  /apex/com.android.runtime/lib64/libart.so (MterpInvokeVirtualQuick+1368)\n#51  pc 0000000000142594  /apex/com.android.runtime/lib64/libart.so (mterp_op_invoke_virtual_quick+20)\n#52  pc 000000000056669e  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/oat/arm64/base.vdex (ix2.a+22)\n#53  pc 00000000002bf948  /apex/com.android.runtime/lib64/libart.so (art::interpreter::Execute(art::Thread*, art::CodeItemDataAccessor const&, art::ShadowFrame&, art::JValue, bool, bool) (.llvm.8053280095303785888)+240)\n#54  pc 00000000005a609c  /apex/com.android.runtime/lib64/libart.so (artQuickToInterpreterBridge+1012)\n#55  pc 000000000014d468  /apex/com.android.runtime/lib64/libart.so (art_quick_to_interpreter_bridge+88)\n#56  pc 00000000001445b8  /apex/com.android.runtime/lib64/libart.so (art_quick_invoke_static_stub+568)\n#57  pc 00000000001531c4  /apex/com.android.runtime/lib64/libart.so (art::ArtMethod::Invoke(art::Thread*, unsigned int*, unsigned int, art::JValue*, char const*)+284)\n#58  pc 00000000002eed0c  /apex/com.android.runtime/lib64/libart.so (art::interpreter::ArtInterpreterToCompiledCodeBridge(art::Thread*, art::ArtMethod*, art::ShadowFrame*, unsigned short, art::JValue*)+384)\n#59  pc 00000000002e9fdc  /apex/com.android.runtime/lib64/libart.so (bool art::interpreter::DoCall<false, false>(art::ArtMethod*, art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short, art::JValue*)+912)\n#60  pc 00000000005bda68  /apex/com.android.runtime/lib64/libart.so (MterpInvokeStatic+368)\n#61  pc 000000000013e994  /apex/com.android.runtime/lib64/libart.so (mterp_op_invoke_static+20)\n#62  pc 000000000056ba88  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/oat/arm64/base.vdex (hx2.A+56)\n#63  pc 00000000005bdd68  /apex/com.android.runtime/lib64/libart.so (MterpInvokeStatic+1136)\n#64  pc 000000000013e994  /apex/com.android.runtime/lib64/libart.so (mterp_op_invoke_static+20)\n#65  pc 0000000000489df2  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/oat/arm64/base.vdex (com.kptncook.app.kptncook.MyApp.initRealm+74)\n#66  pc 00000000005bd55c  /apex/com.android.runtime/lib64/libart.so (MterpInvokeDirect+1168)\n#67  pc 000000000013e914  /apex/com.android.runtime/lib64/libart.so (mterp_op_invoke_direct+20)\n#68  pc 000000000048a1da  /data/app/com.kptncook.app.kptncook-vBUTjChUoqQX0NEcL2Qkgw==/oat/arm64/base.vdex (com.kptncook.app.kptncook.MyApp.onCreate+18)\n#69  pc 00000000002bf948  /apex/com.android.runtime/lib64/libart.so (art::interpreter::Execute(art::Thread*, art::CodeItemDataAccessor const&, art::ShadowFrame&, art::JValue, bool, bool) (.llvm.8053280095303785888)+240)\n#70  pc 00000000005a609c  /apex/com.android.runtime/lib64/libart.so (artQuickToInterpreterBridge+1012)\n#71  pc 000000000014d468  /apex/com.android.runtime/lib64/libart.so (art_quick_to_interpreter_bridge+88)\n#72  pc 000000000042df7c  /system/framework/arm64/boot-framework.oat (android.app.Instrumentation.callApplicationOnCreate+124)\n#73  pc 000000000057c5fc  /system/framework/arm64/boot-framework.oat (android.app.ActivityThread.handleBindApplication+7644)\n#74  pc 0000000000571ea0  /system/framework/arm64/boot-framework.oat (android.app.ActivityThread$H.handleMessage+9056)\n#75  pc 00000000008a5ff4  /system/framework/arm64/boot-framework.oat (android.os.Handler.dispatchMessage+180)\n#76  pc 00000000008a95e0  /system/framework/arm64/boot-framework.oat (android.os.Looper.loop+1456)\n#77  pc 00000000005859f4  /system/framework/arm64/boot-framework.oat (android.app.ActivityThread.main+1668)\n#78  pc 00000000001445b8  /apex/com.android.runtime/lib64/libart.so (art_quick_invoke_static_stub+568)\n#79  pc 00000000001531c4  /apex/com.android.runtime/lib64/libart.so (art::ArtMethod::Invoke(art::Thread*, unsigned int*, unsigned int, art::JValue*, char const*)+284)\n#80  pc 00000000004c6b6c  /apex/com.android.runtime/lib64/libart.so (art::(anonymous namespace)::InvokeWithArgArray(art::ScopedObjectAccessAlreadyRunnable const&, art::ArtMethod*, art::(anonymous namespace)::ArgArray*, art::JValue*, char const*)+104)\n#81  pc 00000000004c8594  /apex/com.android.runtime/lib64/libart.so (art::InvokeMethod(art::ScopedObjectAccessAlreadyRunnable const&, _jobject*, _jobject*, _jobject*, unsigned long)+1476)\n#82  pc 00000000004557fc  /apex/com.android.runtime/lib64/libart.so (art::Method_invoke(_JNIEnv*, _jobject*, _jobject*, _jobjectArray*)+52)\n#83  pc 00000000000f7c34  /system/framework/arm64/boot.oat (art_jni_trampoline+180)\n#84  pc 0000000000b135f8  /system/framework/arm64/boot-framework.oat (com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run+136)\n#85  pc 0000000000b1b6c4  /system/framework/arm64/boot-framework.oat (com.android.internal.os.ZygoteInit.main+2596)\n#86  pc 00000000001445b8  /apex/com.android.runtime/lib64/libart.so (art_quick_invoke_static_stub+568)\n#87  pc 00000000001531c4  /apex/com.android.runtime/lib64/libart.so (art::ArtMethod::Invoke(art::Thread*, unsigned int*, unsigned int, art::JValue*, char const*)+284)\n#88  pc 00000000004c6b6c  /apex/com.android.runtime/lib64/libart.so (art::(anonymous namespace)::InvokeWithArgArray(art::ScopedObjectAccessAlreadyRunnable const&, art::ArtMethod*, art::(anonymous namespace)::ArgArray*, art::JValue*, char const*)+104)\n#89  pc 00000000004c67d8  /apex/com.android.runtime/lib64/libart.so (art::InvokeWithVarArgs(art::ScopedObjectAccessAlreadyRunnable const&, _jobject*, _jmethodID*, std::__va_list)+408)\n#90  pc 00000000003c60fc  /apex/com.android.runtime/lib64/libart.so (art::JNI::CallStaticVoidMethodV(_JNIEnv*, _jclass*, _jmethodID*, std::__va_list)+636)\n#91  pc 00000000000e25c4  /system/lib64/libandroid_runtime.so (_JNIEnv::CallStaticVoidMethod(_jclass*, _jmethodID*, ...)+116)\n#92  pc 00000000000e5aa4  /system/lib64/libandroid_runtime.so (android::AndroidRuntime::start(char const*, android::Vector<android::String8> const&, bool)+828)\n#93  pc 00000000000034e0  /system/bin/app_process64 (main+1168)\n#94  pc 000000000006a050  /apex/com.android.runtime/lib64/bionic/libc.so (__libc_init+108)\n\n#### Version of Realm and tooling\n\nRealm version(s): 7.0.0\n\nRealm Sync feature enabled: No\n\nAndroid Studio version: 3.6.3\n\nAndroid Build Tools version: 3.6.3\n\nGradle version: 6.4.1\n\nWhich Android version and device(s): HUAWEI P30, HUAWEI P30 lite, P30 Pro, Mate 20 lite, Mate 20 Pro, Mate 20, HUAWEI P smart 2019", "url": "https://github.com/realm/realm-java/issues/6875", "user": "SimonSchubert", "labels": ["O-Community", "T-Bug-Crash"], "created": "2020-05-25 08:58:28", "closed": "2020-07-01 15:19:34", "commits": {}, "ttf": 37.000277777777775, "commitsDetails": []}, {"title": "Migrations and 7.0.0 don't play nicely", "body": "#### Goal\nUpgrade from 6.1.0 to 7.0.0 - without a crash. I am seeing a crash after running migrations in 7.0.0, and it is maddening to chase down - the same migrations and schema work 100% OK in 6.1.0, but explode in 7.0.0 with a JNI exception.\n\n#### Actual Results\n\nI have an instrumentation test which we use to verify migrations from old schemas into our new schema. When I updated to realm-java 7.0.0 from 6.1.0, my test started failing:\n```\n05-19 23:01:01.722 D/RootInstrumentationTest(20518): >>>>>>>>>>>> Starting test: runAllMigrations(com.blueapron.service.cache.RealmGateTest)\n05-19 23:01:02.322 W/on.service.tes(20518): Accessing hidden method Ldalvik/system/BaseDexClassLoader;->addDexPath(Ljava/lang/String;Z)V (greylist, reflection, allowed)\n05-19 23:01:02.548 W/on.service.tes(20518): Accessing hidden method Lsun/misc/Unsafe;->allocateInstance(Ljava/lang/Class;)Ljava/lang/Object; (greylist, linking, allowed)\n05-19 23:01:02.548 W/on.service.tes(20518): Accessing hidden field Lsun/misc/Unsafe;->theUnsafe:Lsun/misc/Unsafe; (greylist, reflection, allowed)\n05-19 23:01:03.258 D/AnalyticsReporter(20518): Logging event: Diagnostic - Schema Migration - Started - M. Properties: {\"initial_version\":\"72\",\"api_level\":\"29\",\"diagnostic_event\":\"true\",\"output_version\":\"83\"}\n05-19 23:01:03.267 D/AnalyticsReporter(20518): Logging event: Diagnostic - Schema Migration - Finished - M. Properties: {\"initial_version\":\"72\",\"api_level\":\"29\",\"diagnostic_event\":\"true\",\"output_version\":\"83\"}\n05-19 23:01:03.269 E/REALM_JNI(20518): jni: ThrowingException 8, Index out of range, .\n05-19 23:01:03.269 E/REALM_JNI(20518): Exception has been thrown: Index out of range\n05-19 23:01:03.276 W/System.err(20518): FLAKE_FAILURE: runAllMigrations(com.blueapron.service.cache.RealmGateTest) failed on run 1\n05-19 23:01:03.277 W/System.err(20518): java.lang.IllegalStateException: Index out of range\n05-19 23:01:03.277 W/System.err(20518): \tat io.realm.internal.OsSharedRealm.nativeGetSharedRealm(Native Method)\n05-19 23:01:03.277 W/System.err(20518): \tat io.realm.internal.OsSharedRealm.<init>(OsSharedRealm.java:175)\n05-19 23:01:03.277 W/System.err(20518): \tat io.realm.internal.OsSharedRealm.getInstance(OsSharedRealm.java:251)\n05-19 23:01:03.277 W/System.err(20518): \tat io.realm.BaseRealm.<init>(BaseRealm.java:137)\n05-19 23:01:03.277 W/System.err(20518): \tat io.realm.BaseRealm.<init>(BaseRealm.java:104)\n05-19 23:01:03.277 W/System.err(20518): \tat io.realm.Realm.<init>(Realm.java:163)\n05-19 23:01:03.277 W/System.err(20518): \tat io.realm.Realm.createInstance(Realm.java:499)\n05-19 23:01:03.277 W/System.err(20518): \tat io.realm.RealmCache.createInstance(RealmCache.java:507)\n05-19 23:01:03.277 W/System.err(20518): \tat io.realm.RealmCache.doCreateRealmOrGetFromCache(RealmCache.java:473)\n05-19 23:01:03.277 W/System.err(20518): \tat io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:414)\n05-19 23:01:03.277 W/System.err(20518): \tat io.realm.Realm.getInstance(Realm.java:428)\n05-19 23:01:03.277 W/System.err(20518): \tat com.blueapron.service.cache.RealmGateTest.runAllMigrations(RealmGateTest.java:157)\n05-19 23:01:03.277 W/System.err(20518): \tat java.lang.reflect.Method.invoke(Native Method)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n05-19 23:01:03.277 W/System.err(20518): \tat androidx.test.internal.runner.junit4.statement.RunBefores.evaluate(RunBefores.java:80)\n05-19 23:01:03.277 W/System.err(20518): \tat androidx.test.internal.runner.junit4.statement.RunAfters.evaluate(RunAfters.java:61)\n05-19 23:01:03.277 W/System.err(20518): \tat com.blueapron.testcommon.FlakyTestRule$1.evaluate(FlakyTestRule.java:30)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:61)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n05-19 23:01:03.277 W/System.err(20518): \tat androidx.test.ext.junit.runners.AndroidJUnit4.run(AndroidJUnit4.java:104)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.Suite.runChild(Suite.java:128)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.Suite.runChild(Suite.java:27)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n05-19 23:01:03.277 W/System.err(20518): \tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\n05-19 23:01:03.277 W/System.err(20518): \tat androidx.test.internal.runner.TestExecutor.execute(TestExecutor.java:56)\n05-19 23:01:03.277 W/System.err(20518): \tat androidx.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:388)\n05-19 23:01:03.277 W/System.err(20518): \tat android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:2189)\n05-19 23:01:03.277 W/System.err(20518): runAllMigrations(com.blueapron.service.cache.RealmGateTest) failed after 1 attempts\n05-19 23:01:03.277 W/System.err(20518): HARD_ERROR: Test did not succeed after multiple attempts\n05-19 23:01:03.278 D/RootInstrumentationTest(20518): <<<<<<<<<<<< Finishing test: runAllMigrations(com.blueapron.service.cache.RealmGateTest)\n```\n\nSimilarly, if I install these relevant builds on a device, I get the same crash:\n```\n05-19 23:45:48.779 W/on.service.tes( 9200): Accessing hidden method Lsun/misc/Unsafe;->allocateInstance(Ljava/lang/Class;)Ljava/lang/Object; (greylist, linking, allowed)\n05-19 23:45:48.779 W/on.service.tes( 9200): Accessing hidden field Lsun/misc/Unsafe;->theUnsafe:Lsun/misc/Unsafe; (greylist, reflection, allowed)\n05-19 23:45:49.050 D/AnalyticsReporter( 9232): Logging event: Diagnostic - Schema Migration - Started - M. Properties: {\"initial_version\":\"72\",\"api_level\":\"29\",\"diagnostic_event\":\"true\",\"output_version\":\"83\"}\n05-19 23:45:49.144 D/AnalyticsReporter( 9232): Logging event: Diagnostic - Schema Migration - Finished - M. Properties: {\"initial_version\":\"72\",\"api_level\":\"29\",\"diagnostic_event\":\"true\",\"output_version\":\"83\"}\n05-19 23:45:49.149 E/REALM_JNI( 9232): jni: ThrowingException 8, Index out of range, .\n05-19 23:45:49.149 E/REALM_JNI( 9232): Exception has been thrown: Index out of range\n05-19 23:45:49.150 D/AndroidRuntime( 9232): Shutting down VM\n05-19 23:45:49.150 E/AndroidRuntime( 9232): FATAL EXCEPTION: main\n05-19 23:45:49.150 E/AndroidRuntime( 9232): Process: com.blueapron.blueapron.debug, PID: 9232\n05-19 23:45:49.150 E/AndroidRuntime( 9232): java.lang.RuntimeException: Unable to create application com.blueapron.mobile.ui.MobileApplication: java.lang.IllegalStateException: Index out of range\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat android.app.ActivityThread.handleBindApplication(ActivityThread.java:6465)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat android.app.ActivityThread.access$1300(ActivityThread.java:219)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1859)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat android.os.Handler.dispatchMessage(Handler.java:107)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat android.os.Looper.loop(Looper.java:214)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat android.app.ActivityThread.main(ActivityThread.java:7356)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat java.lang.reflect.Method.invoke(Native Method)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:492)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:930)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): Caused by: java.lang.IllegalStateException: Index out of range\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat io.realm.internal.OsSharedRealm.nativeGetSharedRealm(Native Method)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat io.realm.internal.OsSharedRealm.<init>(OsSharedRealm.java:175)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat io.realm.internal.OsSharedRealm.getInstance(OsSharedRealm.java:251)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat io.realm.BaseRealm.<init>(BaseRealm.java:137)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat io.realm.BaseRealm.<init>(BaseRealm.java:104)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat io.realm.Realm.<init>(Realm.java:163)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat io.realm.Realm.createInstance(Realm.java:499)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat io.realm.RealmCache.createInstance(RealmCache.java:507)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat io.realm.RealmCache.doCreateRealmOrGetFromCache(RealmCache.java:473)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:414)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat io.realm.Realm.getDefaultInstance(Realm.java:407)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat com.blueapron.service.cache.RealmGate.open(RealmGate.kt:58)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat com.blueapron.service.analytics.AnalyticsReporter.initialize(AnalyticsReporter.java:156)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat com.blueapron.service.ui.BlueApronApplication.onCreate(BlueApronApplication.java:95)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1182)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \tat android.app.ActivityThread.handleBindApplication(ActivityThread.java:6460)\n05-19 23:45:49.150 E/AndroidRuntime( 9232): \t... 8 more\n05-19 23:45:49.303 D/FA      ( 9232): Event not sent since app measurement is disabled\n```\n\nIf, instead, I keep Realm at 6.1.0, the same test passes flawlessly, and the app opens just fine. The only difference between builds that have the error and builds that do not is the version of Realm we're using.\n\n#### Steps & Code to Reproduce\n\nI don't quite know how to provide a sample or a cleaner test case here. It *seems* to only be happening for me when upgrading from certain versions of our past schema, but it's not 100% obvious why or which migrations produce problems - or even if it *is* migration related. It *seems* like it's a migration issue, because the crash seems to happen between when migrations complete and when the Realm itself opens - but all indications are that our migration code is completing and handling back control to the Realm native code cleanly.\n\nFrom several exhausting rounds of debugging, I am pretty confident that *somehow* this is related to a migration - and that it depends on the exact content of the Realm file, since depending on what state is in the Realm when I upgrade, I get different behavior during the upgrade. But at the very least, there's *something* behaving differently in the bowels of Realm's internals that is not getting reported well somehow. :-/\n\nIt's possible this is just another manifestation of the bug I reported earlier today (https://github.com/realm/realm-java/issues/6866) that just happens to show up differently based on *exactly* what migration is run with *exactly* what data.\n\n#### Version of Realm and tooling\n\nRealm version(s): 6.1.0 -> 7.0.0\n\nRealm Sync feature enabled: No\n\nAndroid Studio version: 3.6.3\n\nGradle version: 6.3\n\nWhich Android version and device(s): Emulator Pixel 3, SDK 29", "url": "https://github.com/realm/realm-java/issues/6867", "user": "tmtrademarked", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2020-05-20 03:52:55", "closed": "2020-07-01 15:27:58", "commits": {}, "ttf": 42.000277777777775, "commitsDetails": []}, {"title": "7.0.0 seems to introduce crashes with older Realm files", "body": "#### Goal\nIn my application, we have a test for migrations from some very old versions of our application - *ancient* history, with versions of the schema from 2017. Every previous Realm update has worked flawlessly - but the upgrade from 6.1.0 to 7.0.0 seems to cause native crashes. When we run the migrations with version 7.0.0, we get a gnarly native crash.\n\n#### Actual Results\n<!-- What happened? If an exception was thrown please copy/paste the stack trace from Logcat. -->\n\n#### Steps & Code to Reproduce\nIt seems like a schema from ~ 2017 causes this problem. I can provide a copy of the schema and migration code if that is helpful for debugging, but it's hard to tell exactly what is causing the problem. (It *appears* as if it's dying running the migration where we migrated away from the old \"`RealmList<RealmString>`\" paradigm to simply \"`RealmList<String>`\")\n\nI've provided the code for this particular migration in case anything about this jumps out as known unsupported in 7.0.0 - but that again seems kind of unlikely.\n\n```\nprivate class UpgradeFrom39 extends BaseMigration {\n\n        UpgradeFrom39() {\n            super(39);\n        }\n\n        @Override\n        public boolean migrate(DynamicRealm realm) {\n            RealmSchema schema = realm.getSchema();\n\n            // Migrate Configuration fields from RealmString to String.\n            RealmObjectSchema configSchema = schema.get(\"Configuration\");\n            migrateRealmStrings(configSchema, \"features\");\n            migrateRealmStrings(configSchema, \"force_enabled_flags\");\n            migrateRealmStrings(configSchema, \"force_disabled_flags\");\n\n            // Migrate SearchFilters fields from RealmString to String.\n            RealmObjectSchema filterSchema = schema.get(\"SearchFilters\");\n            migrateRealmStrings(filterSchema, \"cuisine_tags\");\n            migrateRealmStrings(filterSchema, \"feature_tags\");\n            migrateRealmStrings(filterSchema, \"ingredient_tags\");\n            migrateRealmStrings(filterSchema, \"keywords\");\n\n            // Migrate SurveyOption fields from RealmString to String.\n            RealmObjectSchema surveySchema = schema.get(\"SurveyOption\");\n            migrateRealmStrings(surveySchema, \"categories\");\n\n            // Migrate Wine fields from RealmString to String.\n            RealmObjectSchema wineSchema = schema.get(\"Wine\");\n            migrateRealmStrings(wineSchema, \"varietals\");\n\n            // Finally, remove the entire RealmString class.\n            schema.remove(\"RealmString\");\n            return true;\n        }\n\n        private void migrateRealmStrings(RealmObjectSchema schema, final String fieldName) {\n            final String tempFieldName = \"tmp_\" + fieldName;\n            schema.addRealmListField(tempFieldName, String.class)\n                    .transform(obj -> {\n                        RealmList<DynamicRealmObject> oldList = obj.getList(fieldName);\n                        RealmList<String> newList = obj.getList(tempFieldName, String.class);\n                        for (DynamicRealmObject oldItem : oldList) {\n                            newList.add(oldItem.getString(\"string\"));\n                        }\n                    })\n                    .removeField(fieldName)\n                    .renameField(tempFieldName, fieldName);\n        }\n    }\n```\n\n#### Version of Realm and tooling\n\nRealm version(s): 7.0.0", "url": "https://github.com/realm/realm-java/issues/6866", "user": "tmtrademarked", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2020-05-19 21:01:04", "closed": "2020-07-01 15:33:55", "commits": {}, "ttf": 42.000277777777775, "commitsDetails": []}, {"title": "Core 10 breaks encryption stress test", "body": "https://ci.realm.io/blue/organizations/jenkins/realm%2Frealm-java/detail/PR-6785/11/tests\n\nUnit test that triggers it is this one: https://github.com/realm/realm-java/blob/v10/realm/realm-library/src/androidTest/java/io/realm/RealmTests.java#L4568\n\nrealm-core-10.0.0-alpha.3 seems to a break an encryption stress test in a fairly consistent manner (but not always)", "url": "https://github.com/realm/realm-java/issues/6792", "user": "cmelchior", "labels": ["T-Bug-Crash"], "created": "2020-03-31 10:26:08", "closed": "2020-05-07 10:52:32", "commits": {}, "ttf": 37.000277777777775, "commitsDetails": []}, {"title": "Core 10 breaks In memory tests", "body": "Latest core (alpha.3) breaks in-memory tests: https://ci.realm.io/blue/organizations/jenkins/realm%2Frealm-java/detail/PR-6785/9/tests/\nhttps://ci.realm.io/job/realm/job/realm-java/job/PR-6785/8/console\n\nhttps://github.com/realm/realm-java/blob/v10/realm/realm-library/src/androidTest/java/io/realm/RealmInMemoryTest.java#L141\n\nFailed twice on Nexus 5X - 6.0 (arm64)\n\n\u2506Attachments: <a href=\"https://jira.mongodb.org/secure/attachment/254467/realm-withkey.zip\">realm-withkey.zip</a> | <a href=\"https://jira.mongodb.org/secure/attachment/254466/write-copy-test.zip\">write-copy-test.zip</a>\n", "url": "https://github.com/realm/realm-java/issues/6790", "user": "cmelchior", "labels": ["T-Bug-Crash"], "created": "2020-03-31 09:04:06", "closed": "2020-05-07 10:52:47", "commits": {}, "ttf": 37.000277777777775, "commitsDetails": []}, {"title": "Illegal Argument: Provided schema version 32 is less than last set version 33.", "body": "#### Goal\nNo such error\n\n#### Actual Results\nMy app is normal when first install, this error happens if I not using my app after few hours, I can't figure out any solution. If I use my app frequently, everything is just fine.\n\n#### Steps & Code to Reproduce\nGetting realm instance crashed.\n```\nif (configuration == null) {\n                    val dbMigration = DbMigration()\n                    configuration = RealmConfiguration.Builder()\n                            .schemaVersion(dbMigration.newestVersion.toLong())\n                            .migration(dbMigration)\n                            .rxFactory(RealmObservableFactory())\n                            .build()\n                }\n                return Realm.getInstance(configuration!!)\n```\nDBMigration:\n```\npublic class DbMigration implements RealmMigration {\n    @Override\n    public void migrate(@NonNull DynamicRealm realm, long oldVersion, long newVersion) {\n        RealmSchema schema = realm.getSchema();\n        long version = oldVersion;\n        if (version == 0) {\n            RealmObjectSchema petSchema = schema.get(\"User\");\n            if (petSchema != null) {\n                petSchema.addField(\"showTogether\", boolean.class);\n            }\n            version++;\n        }\n       ...\n       if (version == 32) {\n            ...\n            version++;\n        }\n    }\n\n    int getNewestVersion() {\n        return 33;\n    }\n}\n```\n\ncrash log:\n```\nCaused by: java.lang.IllegalArgumentException: Illegal Argument: Provided schema version 32 is less than last set version 33.\n        at io.realm.internal.OsSharedRealm.nativeGetSharedRealm(Native Method)\n        at io.realm.internal.OsSharedRealm.<init>(OsSharedRealm.java:171)\n        at io.realm.internal.OsSharedRealm.getInstance(OsSharedRealm.java:241)\n        at io.realm.BaseRealm.<init>(BaseRealm.java:135)\n        at io.realm.BaseRealm.<init>(BaseRealm.java:103)\n        at io.realm.Realm.<init>(Realm.java:163)\n        at io.realm.Realm.createInstance(Realm.java:499)\n        at io.realm.RealmCache.doCreateRealmOrGetFromCache(RealmCache.java:341)\n        at io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:284)\n        at io.realm.Realm.getInstance(Realm.java:428)\n        at cn.lianqinba.strings.data.db.AppDbHelper$Companion.getInstance(AppDbHelper.kt:37)\n```\n\n#### Version of Realm and tooling\n\nRealm version(s): io.realm:realm-gradle-plugin:5.9.0\n\nRealm Sync feature enabled: No\n\nAndroid Studio version: 3.5.2\n\nAndroid Build Tools version: 28.0.3\n\nGradle version: 5.4.1-all\n\nWhich Android version and device(s): Android 9, Vivo iQOO", "url": "https://github.com/realm/realm-java/issues/6714", "user": "KenChoi1992", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2020-01-08 01:24:01", "closed": "2020-01-15 01:09:17", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "[realm-core-5.23.6] Destruction of mutex in use", "body": "#### Goal\nNo crash\n\n#### Actual Results\nCrashed in rate\n12-15 23:07:29.851 E/REALM   (23208): /home/jenkins/workspace/realm_realm-core_release_5.23.6@3/src/realm/util/thread.cpp:185: [realm-core-5.23.6] Destruction of mutex in use\n12-15 23:07:29.851 E/REALM   (23208): <backtrace not supported on this platform>!!! IMPORTANT: Please send this log and info about Realm SDK version and other relevant reproduction info to help@realm.io.\n\n#### Version of Realm and tooling\n\nRealm version(s): v6.01\n\nRealm Sync feature enabled: No\n\nWhich Android version and device(s): vivo X7\n\n#### More thread info\n\narmARMv1 ARM part(0x4100d030) features: half,thumb,fastmult,vfpv2,edsp,neon,vfpv3,vfpv4,idiva,idivt8 CPUs\n\nThread 40 (crashed)\n 0  libc.so!tgkill + 0xc\n     r0 = 0x00000000    r1 = 0x00005b02    r2 = 0x00000006    r3 = 0x00000000\n     r4 = 0xdb6dddd8    r5 = 0x00000006    r6 = 0x0000000b    r7 = 0x0000010c\n     r8 = 0x000000b9    r9 = 0xdc19ab4c   r10 = 0xffffffff   r12 = 0x00005b02\n     fp = 0xdb6ddbd8    sp = 0xdb6dd918    lr = 0xf7541b61    pc = 0xf7567b88\n    Found by: given as instruction pointer in context\n 1  libc.so!pthread_kill + 0x36\n     r4 = 0xdb6dddd8    r5 = 0x00000006    r6 = 0x0000000b    r7 = 0x0000010c\n     r8 = 0x000000b9    r9 = 0xdc19ab4c   r10 = 0xffffffff    fp = 0xdb6ddbd8\n     sp = 0xdb6dd918    pc = 0xf7541b61\n    Found by: call frame info\n 2  librealm-jni.so + 0x2acb2e\n     sp = 0xdb6dd92c    pc = 0xdc19ab30\n    Found by: stack scanning\n 3  libc.so!raise + 0xc\n     sp = 0xdb6dd930    pc = 0xf754277f\n    Found by: stack scanning\n 4  libc.so!__libc_android_abort + 0x26\n     sp = 0xdb6dd938    pc = 0xf753eff9\n    Found by: stack scanning\n 5  librealm-jni.so + 0x2acb2e\n     sp = 0xdb6dd950    pc = 0xdc19ab30\n    Found by: stack scanning\n 6  libc.so!abort + 0x6\n     sp = 0xdb6dd960    pc = 0xf753d558\n    Found by: stack scanning\n 7  librealm-jni.so + 0x198055\n     r3 = 0x00000000    sp = 0xdb6dd968    pc = 0xdc086057\n    Found by: call frame info\n 8  librealm-jni.so + 0x198099\n     sp = 0xdb6dd970    pc = 0xdc08609b\n    Found by: stack scanning\n 9  librealm-jni.so + 0x1980f1\n     sp = 0xdb6dd988    pc = 0xdc0860f3\n    Found by: stack scanning", "url": "https://github.com/realm/realm-java/issues/6689", "user": "wuhenzhizao", "labels": ["O-Community", "T-Bug-Crash"], "created": "2019-12-16 06:57:25", "closed": "2019-12-16 13:11:53", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Native crash: [realm-core-5.23.1] Assertion failed: !(ref & 7)", "body": "#### Goal\r\nNo Crash\r\n\r\n#### Actual Results\r\n\r\nE/REALM   (16667): /home/jenkins/workspace/realm_realm-core_release_5.23.1@5/src/realm/alloc_slab.cpp:686: [realm-core-5.23.1] Assertion failed: !(ref & 7) with (ref, get_file_path_for_assertions()) =  [33554484, \"/data/data/*/files/T1RVeE56ST0=.realm\"]\r\nE/REALM   (16667): <backtrace not supported on this platform>!!! IMPORTANT: Please send this log and info about Realm SDK version and other relevant reproduction info to help@realm.io.\r\n\r\nThread 28 (crashed)\r\n 0  libc.so + 0x4a640\r\n     r0 = 0x00000000    r1 = 0x00006782    r2 = 0x00000006    r3 = 0x00000008\r\n     r4 = 0xca787978    r5 = 0x00000006    r6 = 0xca787920    r7 = 0x0000010c\r\n     r8 = 0x000002ae    r9 = 0xcc0b4778   r10 = 0xca7872b4   r12 = 0x00000011\r\n     fp = 0x000000ef    sp = 0xca787080    lr = 0xebdacd47    pc = 0xebdaf640\r\n    Found by: given as instruction pointer in context\r\n 1  librealm-jni.so + 0x29e851\r\n     sp = 0xca787094    pc = 0xcc0b4853\r\n    Found by: stack scanning\r\n 2  libc.so + 0x1db2f\r\n     sp = 0xca787098    pc = 0xebd82b31\r\n    Found by: stack scanning\r\n 3  libc.so + 0x19547\r\n     sp = 0xca7870a0    pc = 0xebd7e549\r\n    Found by: stack scanning\r\n 4  librealm-jni.so + 0x29e851\r\n     sp = 0xca7870b4    pc = 0xcc0b4853\r\n    Found by: stack scanning\r\n 5  librealm-jni.so + 0x29e851\r\n     sp = 0xca7870c4    pc = 0xcc0b4853\r\n    Found by: stack scanning\r\n 6  libc.so + 0x172ee\r\n     sp = 0xca7870c8    pc = 0xebd7c2f0\r\n    Found by: stack scanning\r\n 7  librealm-jni.so + 0x18af75\r\n     sp = 0xca7870d0    pc = 0xcbfa0f77\r\n    Found by: stack scanning\r\n 8  librealm-jni.so + 0x18afb9\r\n     sp = 0xca7870d8    pc = 0xcbfa0fbb\r\n    Found by: stack scanning\r\n 9  librealm-jni.so + 0x18b07f\r\n     sp = 0xca7870f0    pc = 0xcbfa1081\r\n    Found by: stack scanning\r\n\r\n#### Steps & Code to Reproduce\r\nOnly Crashed on some devices\uff0cNo more info to indicate how to reproduce it\r\n\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s):  5.14.0\r\n\r\nRealm Sync feature enabled: No\r\n\r\nAndroid Studio version: 3.4.2\r\n\r\nAndroid Build Tools version: \r\n\r\nGradle version: 3.3.2\r\n\r\nWhich Android version and device(s): \r\n", "url": "https://github.com/realm/realm-java/issues/6634", "user": "wuhenzhizao", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2019-10-09 09:48:30", "closed": "2019-11-05 10:38:43", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "signal 11 (SIGSEGV), code 1 (SEGV_MAPERR) when opening Realm", "body": "In Google Play console I can see a lot of crashes in native code when application creates Realm instance. Issue affects different Android versions and different devices. Once appears on a device, happens many times (persists). Wasn't able to reproduce it locally.\n\nWe use Realm Gradle plugin 5.15.1\n\nConfiguration:\n```\nRealmConfiguration.Builder()\n                .schemaVersion(3)\n                .encryptionKey(XXX)\n                .deleteRealmIfMigrationNeeded()\n                .build()\n```\n\nWe open Realm instance from configuration to perform transaction and immediately close it after, for observable queries we use RX and open Realm instance `onSubscribe` and closing it when subscription disposed.\n\nSome of the issue discussions were suggesting that there strangely might be several application processes running at the same time. Added check for that and haven't detected any.\n\nHuman readable stack trace:\n```\nJava_io_realm_internal_OsSharedRealm_nativeGetSharedRealm+480\nio.realm.internal.OsObjectSchemaInfo.nativeGetProperty [DEDUPED]+180\nio.realm.internal.OsSharedRealm.<init>+98\nio.realm.internal.OsSharedRealm.getInstance+18\nio.realm.internal.OsSharedRealm.getInstance+10\nio.realm.RealmCache.doCreateRealmOrGetFromCache+114\nio.realm.RealmCache.createRealmOrGetFromCache+18\nio.realm.Realm.getInstance+8\ncom.stab.extensions.realm.RealmConfigurationExtKt.executeTransaction+28\n```\n\nComplete stack trace as we see it at developer's console:\n```\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR)\nsplit_config.arm64_v8a.apk\nbacktrace:\n  #00  pc 00000000001eef1c  /data/app/com.stab.android-7oYmKSh70eQqasCDfT4CBw==/split_config.arm64_v8a.apk\n  #01  pc 00000000000d2a5c  /data/app/com.stab.android-7oYmKSh70eQqasCDfT4CBw==/split_config.arm64_v8a.apk\n  #02  pc 00000000000d0a84  /data/app/com.stab.android-7oYmKSh70eQqasCDfT4CBw==/split_config.arm64_v8a.apk\n  #03  pc 00000000000d643c  /data/app/com.stab.android-7oYmKSh70eQqasCDfT4CBw==/split_config.arm64_v8a.apk\n  #04  pc 00000000000e91e4  /data/app/com.stab.android-7oYmKSh70eQqasCDfT4CBw==/split_config.arm64_v8a.apk\n  #05  pc 00000000000e9184  /data/app/com.stab.android-7oYmKSh70eQqasCDfT4CBw==/split_config.arm64_v8a.apk\n  #06  pc 00000000000ebe44  /data/app/com.stab.android-7oYmKSh70eQqasCDfT4CBw==/split_config.arm64_v8a.apk\n  #07  pc 00000000001091f4  /data/app/com.stab.android-7oYmKSh70eQqasCDfT4CBw==/split_config.arm64_v8a.apk\n  #08  pc 00000000000e9fb0  /data/app/com.stab.android-7oYmKSh70eQqasCDfT4CBw==/split_config.arm64_v8a.apk\n  #09  pc 000000000006e88c  /data/app/com.stab.android-7oYmKSh70eQqasCDfT4CBw==/split_config.arm64_v8a.apk (Java_io_realm_internal_OsSharedRealm_nativeGetSharedRealm+480)\n  #10  pc 0000000000069d24  /data/app/com.stab.android-7oYmKSh70eQqasCDfT4CBw==/oat/arm64/base.odex (io.realm.internal.OsObjectSchemaInfo.nativeGetProperty [DEDUPED]+180)\n  #11  pc 000000000055544c  /system/lib64/libart.so (art_quick_invoke_static_stub+604)\n  #12  pc 00000000000cf6e8  /system/lib64/libart.so (art::ArtMethod::Invoke(art::Thread*, unsigned int*, unsigned int, art::JValue*, char const*)+232)\n  #13  pc 000000000027f2b8  /system/lib64/libart.so (art::interpreter::ArtInterpreterToCompiledCodeBridge(art::Thread*, art::ArtMethod*, art::ShadowFrame*, unsigned short, art::JValue*)+344)\n  #14  pc 00000000002792c0  /system/lib64/libart.so (bool art::interpreter::DoCall<false, false>(art::ArtMethod*, art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short, art::JValue*)+968)\n  #15  pc 0000000000526498  /system/lib64/libart.so (MterpInvokeStatic+204)\n  #16  pc 0000000000547a14  /system/lib64/libart.so (ExecuteMterpImpl+14612)\n  #17  pc 0000000000c41b3c  /data/app/com.stab.android-7oYmKSh70eQqasCDfT4CBw==/oat/arm64/base.vdex (io.realm.internal.OsSharedRealm.<init>+98)\n  #18  pc 0000000000252fc4  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadERKNS_20CodeItemDataAccessorERNS_11ShadowFrameENS_6JValueEb.llvm.99565114+488)\n  #19  pc 0000000000258ab8  /system/lib64/libart.so (art::interpreter::ArtInterpreterToInterpreterBridge(art::Thread*, art::CodeItemDataAccessor const&, art::ShadowFrame*, art::JValue*)+216)\n  #20  pc 00000000002792a4  /system/lib64/libart.so (bool art::interpreter::DoCall<false, false>(art::ArtMethod*, art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short, art::JValue*)+940)\n  #21  pc 00000000005262d4  /system/lib64/libart.so (MterpInvokeDirect+296)\n  #22  pc 0000000000547994  /system/lib64/libart.so (ExecuteMterpImpl+14484)\n  #23  pc 0000000000c41cbe  /data/app/com.stab.android-7oYmKSh70eQqasCDfT4CBw==/oat/arm64/base.vdex (io.realm.internal.OsSharedRealm.getInstance+18)\n  #24  pc 0000000000252fc4  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadERKNS_20CodeItemDataAccessorERNS_11ShadowFrameENS_6JValueEb.llvm.99565114+488)\n  #25  pc 0000000000258ab8  /system/lib64/libart.so (art::interpreter::ArtInterpreterToInterpreterBridge(art::Thread*, art::CodeItemDataAccessor const&, art::ShadowFrame*, art::JValue*)+216)\n  #26  pc 00000000002792a4  /system/lib64/libart.so (bool art::interpreter::DoCall<false, false>(art::ArtMethod*, art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short, art::JValue*)+940)\n  #27  pc 0000000000526498  /system/lib64/libart.so (MterpInvokeStatic+204)\n  #28  pc 0000000000547a14  /system/lib64/libart.so (ExecuteMterpImpl+14612)\n  #29  pc 0000000000c41cd4  /data/app/com.stab.android-7oYmKSh70eQqasCDfT4CBw==/oat/arm64/base.vdex (io.realm.internal.OsSharedRealm.getInstance+10)\n  #30  pc 0000000000252fc4  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadERKNS_20CodeItemDataAccessorERNS_11ShadowFrameENS_6JValueEb.llvm.99565114+488)\n  #31  pc 0000000000258ab8  /system/lib64/libart.so (art::interpreter::ArtInterpreterToInterpreterBridge(art::Thread*, art::CodeItemDataAccessor const&, art::ShadowFrame*, art::JValue*)+216)\n  #32  pc 00000000002792a4  /system/lib64/libart.so (bool art::interpreter::DoCall<false, false>(art::ArtMethod*, art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short, art::JValue*)+940)\n  #33  pc 0000000000526498  /system/lib64/libart.so (MterpInvokeStatic+204)\n  #34  pc 0000000000547a14  /system/lib64/libart.so (ExecuteMterpImpl+14612)\n  #35  pc 0000000000c4b59e  /data/app/com.stab.android-7oYmKSh70eQqasCDfT4CBw==/oat/arm64/base.vdex (io.realm.v.b+114)\n  #36  pc 0000000000252fc4  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadERKNS_20CodeItemDataAccessorERNS_11ShadowFrameENS_6JValueEb.llvm.99565114+488)\n  #37  pc 0000000000258ab8  /system/lib64/libart.so (art::interpreter::ArtInterpreterToInterpreterBridge(art::Thread*, art::CodeItemDataAccessor const&, art::ShadowFrame*, art::JValue*)+216)\n  #38  pc 00000000002792a4  /system/lib64/libart.so (bool art::interpreter::DoCall<false, false>(art::ArtMethod*, art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short, art::JValue*)+940)\n  #39  pc 00000000005262d4  /system/lib64/libart.so (MterpInvokeDirect+296)\n  #40  pc 0000000000547994  /system/lib64/libart.so (ExecuteMterpImpl+14484)\n  #41  pc 0000000000c4b4ac  /data/app/com.stab.android-7oYmKSh70eQqasCDfT4CBw==/oat/arm64/base.vdex (io.realm.v.a+18)\n  #42  pc 0000000000252fc4  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadERKNS_20CodeItemDataAccessorERNS_11ShadowFrameENS_6JValueEb.llvm.99565114+488)\n  #43  pc 0000000000515828  /system/lib64/libart.so (artQuickToInterpreterBridge+1020)\n  #44  pc 000000000055e2fc  /system/lib64/libart.so (art_quick_to_interpreter_bridge+92)\n  #45  pc 000000000055544c  /system/lib64/libart.so (art_quick_invoke_static_stub+604)\n  #46  pc 00000000000cf6e8  /system/lib64/libart.so (art::ArtMethod::Invoke(art::Thread*, unsigned int*, unsigned int, art::JValue*, char const*)+232)\n  #47  pc 000000000027f2b8  /system/lib64/libart.so (art::interpreter::ArtInterpreterToCompiledCodeBridge(art::Thread*, art::ArtMethod*, art::ShadowFrame*, unsigned short, art::JValue*)+344)\n  #48  pc 00000000002792c0  /system/lib64/libart.so (bool art::interpreter::DoCall<false, false>(art::ArtMethod*, art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short, art::JValue*)+968)\n  #49  pc 0000000000526498  /system/lib64/libart.so (MterpInvokeStatic+204)\n  #50  pc 0000000000547a14  /system/lib64/libart.so (ExecuteMterpImpl+14612)\n  #51  pc 0000000000c4ad3a  /data/app/com.stab.android-7oYmKSh70eQqasCDfT4CBw==/oat/arm64/base.vdex (io.realm.u.d+8)\n  #52  pc 0000000000252fc4  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadERKNS_20CodeItemDataAccessorERNS_11ShadowFrameENS_6JValueEb.llvm.99565114+488)\n  #53  pc 0000000000258ab8  /system/lib64/libart.so (art::interpreter::ArtInterpreterToInterpreterBridge(art::Thread*, art::CodeItemDataAccessor const&, art::ShadowFrame*, art::JValue*)+216)\n  #54  pc 00000000002792a4  /system/lib64/libart.so (bool art::interpreter::DoCall<false, false>(art::ArtMethod*, art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short, art::JValue*)+940)\n  #55  pc 0000000000526498  /system/lib64/libart.so (MterpInvokeStatic+204)\n  #56  pc 0000000000547a14  /system/lib64/libart.so (ExecuteMterpImpl+14612)\n  #57  pc 0000000000a3d0e4  /data/app/com.stab.android-7oYmKSh70eQqasCDfT4CBw==/oat/arm64/base.vdex (com.stab.d.c.c.a+28)\n  #58  pc 0000000000252fc4  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadERKNS_20CodeItemDataAccessorERNS_11ShadowFrameENS_6JValueEb.llvm.99565114+488)\n  #59  pc 0000000000515828  /system/lib64/libart.so (artQuickToInterpreterBridge+1020)\n  #60  pc 000000000055e2fc  /system/lib64/libart.so (art_quick_to_interpreter_bridge+92)\n  #61  pc 000000000055544c  /system/lib64/libart.so (art_quick_invoke_static_stub+604)\n  #62  pc 00000000000cf6e8  /system/lib64/libart.so (art::ArtMethod::Invoke(art::Thread*, unsigned int*, unsigned int, art::JValue*, char const*)+232)\n  #63  pc 000000000027f2b8  /system/lib64/libart.so (art::interpreter::ArtInterpreterToCompiledCodeBridge(art::Thread*, art::ArtMethod*, art::ShadowFrame*, unsigned short, art::JValue*)+344)\n  #64  pc 00000000002792c0  /system/lib64/libart.so (bool art::interpreter::DoCall<false, false>(art::ArtMethod*, art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short, art::JValue*)+968)\n  #65  pc 0000000000526498  /system/lib64/libart.so (MterpInvokeStatic+204)\n  #66  pc 0000000000547a14  /system/lib64/libart.so (ExecuteMterpImpl+14612)\n  #67  pc 0000000000b24bb8  /data/app/com.stab.android-7oYmKSh70eQqasCDfT4CBw==/oat/arm64/base.vdex (com.stab.support.entity.f.bbR+230)\n  #68  pc 0000000000252fc4  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadERKNS_20CodeItemDataAccessorERNS_11ShadowFrameENS_6JValueEb.llvm.99565114+488)\n  #69  pc 0000000000258ab8  /system/lib64/libart.so (art::interpreter::ArtInterpreterToInterpreterBridge(art::Thread*, art::CodeItemDataAccessor const&, art::ShadowFrame*, art::JValue*)+216)\n  #70  pc 00000000002792a4  /system/lib64/libart.so (bool art::interpreter::DoCall<false, false>(art::ArtMethod*, art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short, art::JValue*)+940)\n  #71  pc 0000000000527fd8  /system/lib64/libart.so (MterpInvokeVirtualQuick+584)\n  #72  pc 000000000054b614  /system/lib64/libart.so (ExecuteMterpImpl+29972)\n  #73  pc 0000000000b2304e  /data/app/com.stab.android-7oYmKSh70eQqasCDfT4CBw==/oat/arm64/base.vdex (com.stab.support.entity.FaqSyncWorker.nn+18)\n  #74  pc 0000000000252fc4  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadERKNS_20CodeItemDataAccessorERNS_11ShadowFrameENS_6JValueEb.llvm.99565114+488)\n  #75  pc 0000000000258ab8  /system/lib64/libart.so (art::interpreter::ArtInterpreterToInterpreterBridge(art::Thread*, art::CodeItemDataAccessor const&, art::ShadowFrame*, art::JValue*)+216)\n  #76  pc 00000000002792a4  /system/lib64/libart.so (bool art::interpreter::DoCall<false, false>(art::ArtMethod*, art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short, art::JValue*)+940)\n  #77  pc 0000000000527fd8  /system/lib64/libart.so (MterpInvokeVirtualQuick+584)\n  #78  pc 000000000054b614  /system/lib64/libart.so (ExecuteMterpImpl+29972)\n  #79  pc 000000000046cbda  /data/app/com.stab.android-7oYmKSh70eQqasCDfT4CBw==/oat/arm64/base.vdex (androidx.work.Worker$1.run+4)\n  #80  pc 0000000000252fc4  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadERKNS_20CodeItemDataAccessorERNS_11ShadowFrameENS_6JValueEb.llvm.99565114+488)\n  #81  pc 0000000000515828  /system/lib64/libart.so (artQuickToInterpreterBridge+1020)\n  #82  pc 000000000055e2fc  /system/lib64/libart.so (art_quick_to_interpreter_bridge+92)\n  #83  pc 00000000003db5f4  /system/framework/arm64/boot-core-oj.oat (java.util.concurrent.ThreadPoolExecutor.runWorker+996)\n  #84  pc 00000000003d8360  /system/framework/arm64/boot-core-oj.oat (java.util.concurrent.ThreadPoolExecutor$Worker.run+64)\n  #85  pc 000000000025efc8  /system/framework/arm64/boot-core-oj.oat (java.lang.Thread.run+72)\n  #86  pc 0000000000555188  /system/lib64/libart.so (art_quick_invoke_stub+584)\n  #87  pc 00000000000cf6c8  /system/lib64/libart.so (art::ArtMethod::Invoke(art::Thread*, unsigned int*, unsigned int, art::JValue*, char const*)+200)\n  #88  pc 000000000045cc50  /system/lib64/libart.so (art::(anonymous namespace)::InvokeWithArgArray(art::ScopedObjectAccessAlreadyRunnable const&, art::ArtMethod*, art::(anonymous namespace)::ArgArray*, art::JValue*, char const*)+104)\n  #89  pc 000000000045dd0c  /system/lib64/libart.so (art::InvokeVirtualOrInterfaceWithJValues(art::ScopedObjectAccessAlreadyRunnable const&, _jobject*, _jmethodID*, jvalue*)+424)\n  #90  pc 0000000000488e64  /system/lib64/libart.so (art::Thread::CreateCallback(void*)+1120)\n  #91  pc 0000000000081c98  /system/lib64/libc.so (__pthread_start(void*)+36)\n  #92  pc 0000000000023708  /system/lib64/libc.so (__start_thread+68)\n```", "url": "https://github.com/realm/realm-java/issues/6631", "user": "simonovvasiliy", "labels": ["O-Community", "T-Bug-Crash", "T-Duplicate"], "created": "2019-10-04 15:13:05", "closed": "2019-11-26 20:16:13", "commits": {}, "ttf": 53.000277777777775, "commitsDetails": []}, {"title": "Database corrupted after update on some devices.", "body": "#### Goal\nRealm must work well after app update.\n\n#### Actual Results\nOn some devices the database is corrupted and user can't use it after an update of the app. Must delete the folder where the database is stored to recreate the database and the app return to work well , but the users missing their data. \n\n#### Steps & Code to Reproduce\nUser update the app\n\n#### Version of Realm and tooling\n\nRealm version(s): 5.0.0\n\nRealm Sync feature enabled: No\n\nAndroid Studio version: 3.5\n\nAndroid Build Tools version: 28.0.3\n\nGradle version: 4.9\n\nWhich Android version and device(s): different os version and devices , high percentage huawei.\n\nHi , after a normal update where the db layer has not been modified, the app it's not work properly due to realm error in the database layer. Is it a bug in realm? For us it's a very bad problem , for now happens on a few number of users, but this users are very unhappy because they lost data of the app. \n\nDo you know if i will update the realm to last version this will be fixed?", "url": "https://github.com/realm/realm-java/issues/6620", "user": "Kyba1985", "labels": ["O-Community", "T-Bug-Crash"], "created": "2019-09-18 11:01:08", "closed": "2019-11-26 20:16:09", "commits": {}, "ttf": 69.00027777777778, "commitsDetails": []}, {"title": "Unable to sync gradle after updating to 5.15.0", "body": "#### Goal\r\n\r\nUpdate to realm-java 5.15.0.\r\n\r\n#### Actual Results\r\nsync failes\r\n```\r\nCaused by: groovy.lang.MissingPropertyException: Could not get unknown property 'url' for object of type org.gradle.api.internal.artifacts.repositories.DefaultFlatDirArtifactRepository.\r\n\tat org.gradle.internal.metaobject.AbstractDynamicObject.getMissingProperty(AbstractDynamicObject.java:87)\r\n\tat org.gradle.internal.metaobject.AbstractDynamicObject.getProperty(AbstractDynamicObject.java:61)\r\n\tat org.gradle.api.internal.artifacts.repositories.DefaultFlatDirArtifactRepository_Decorated.getProperty(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoGetPropertySite.getProperty(PogoGetPropertySite.java:49)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callGetProperty(AbstractCallSite.java:298)\r\n\tat io.realm.gradle.Realm$_apply_closure1$_closure2.doCall(Realm.groovy:79)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:104)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:326)\r\n\tat org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:264)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1041)\r\n\tat groovy.lang.Closure.call(Closure.java:411)\r\n\tat groovy.lang.Closure.call(Closure.java:427)\r\n\tat org.gradle.api.specs.internal.ClosureSpec.isSatisfiedBy(ClosureSpec.java:33)\r\n\tat org.gradle.api.internal.collections.CollectionFilter.filter(CollectionFilter.java:46)\r\n\tat org.gradle.api.internal.collections.FilteredCollection$FilteringIterator.findNext(FilteredCollection.java:122)\r\n\tat org.gradle.api.internal.collections.FilteredCollection$FilteringIterator.next(FilteredCollection.java:140)\r\n\tat org.gradle.api.internal.DefaultDomainObjectCollection.findAll(DefaultDomainObjectCollection.java:442)\r\n\tat org.gradle.api.internal.DefaultNamedDomainObjectList.findAll(DefaultNamedDomainObjectList.java:160)\r\n\tat org.gradle.api.NamedDomainObjectList$findAll.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:127)\r\n\tat io.realm.gradle.Realm$_apply_closure1.doCall(Realm.groovy:78)\r\n```\r\n\r\n#### Steps & Code to Reproduce\r\n1. Add `classpath 'io.realm:realm-gradle-plugin:5.15.0'` to dependencies\r\n2. Sync\r\n\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): 5.15.0\r\n\r\nRealm Sync feature enabled: No\r\n\r\nAndroid Studio version: 3.5\r\n\r\nAndroid Build Tools version: 3.5.0\r\n\r\nGradle version: 5.4.1\r\n\r\nWhich Android version and device(s): N/A", "url": "https://github.com/realm/realm-java/issues/6610", "user": "jvanderwee", "labels": ["O-Community", "T-Bug-Crash"], "created": "2019-09-06 13:09:30", "closed": "2019-09-09 10:50:20", "commits": {"00698d17d1348160e002af961f4f5722f7faaf26": {"commitGHEventType": "referenced", "commitUser": "ayltai"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "00698d17d1348160e002af961f4f5722f7faaf26", "commitGHEventType": "referenced", "commitUser": "ayltai", "commitParents": ["76a71e386aa8629739a5a62c023fca8930052add"], "nameRev": "00698d17d1348160e002af961f4f5722f7faaf26 tags/v5.15.0~2", "commitMessage": "Upgrade to Sync 4.7.4 (#6603)\n\n", "commitDateTime": "2019-09-04 15:12:37", "authoredDateTime": "2019-09-04 15:12:37", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "Jenkinsfile", "insertions": 10, "deletions": 8, "lines": 18}, {"filePath": "README.md", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "dependencies.list", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "gradle-plugin/build.gradle", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "gradle-plugin/src/main/groovy/io/realm/gradle/Realm.groovy", "insertions": 11, "deletions": 1, "lines": 12}, {"filePath": "gradle-plugin/src/test/groovy/io/realm/gradle/PluginTest.groovy", "insertions": 21, "deletions": 18, "lines": 39}, {"filePath": "realm/realm-library/src/main/cpp/object-store", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["00698d17d1348160e002af961f4f5722f7faaf26"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 28, "deletions": 12, "lines": 40, "gitFilesChange": 5}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["dependencies.list", "gradle-plugin", "Jenkinsfile", "realm/realm-library/src/main/cpp/object-store", "gradle-plugin/src/main/groovy/io/realm/gradle/Realm.groovy"]}, {"title": "io.realm.internal.UncheckedRow.nativeSetDouble (UncheckedRow.java)", "body": "#### Describe your problem or use case\r\n<!-- A clear and concise description of what the problem is and what you are trying to accomplish. -->\r\n**While i am performing multiple operation in realm at a time i am getting issue** \r\n\r\n**io.realm.internal.UncheckedRow.nativeSetDouble (UncheckedRow.java)**\r\nCaused by java.lang.IllegalStateException: Object is no longer valid to operate on. Was it deleted by another thread?\r\n       at io.realm.internal.UncheckedRow.nativeSetDouble(UncheckedRow.java)\r\n       at io.realm.internal.UncheckedRow.setDouble + 208(UncheckedRow.java:208)\r\n\r\n", "url": "https://github.com/realm/realm-java/issues/6608", "user": "teja8692", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2019-09-06 08:45:21", "closed": "2019-09-20 01:30:57", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "Overriding field name with @LinkingObjects results in Property could not be found", "body": "#### Goal\nCreate a schema with a many-to-many relationship. Every `Release` object has a list of `Users` that it belongs to. Every `User` has a list of `Releases` it belongs to.\n\n#### Actual Results\n```\n2019-08-09 13:07:34.552 4848-4848/com.example.realmsampleapp E/AndroidRuntime: FATAL EXCEPTION: main\n    Process: com.example.realmsampleapp, PID: 4848\n    java.lang.IllegalStateException: Property 'favoriteProcesses' cannot be found.\n    (/Users/Nabil/Dev/realm/master4/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_OsObjectSchemaInfo.cpp:119)\n        at io.realm.internal.OsObjectSchemaInfo.nativeGetProperty(Native Method)\n        at io.realm.internal.OsObjectSchemaInfo.getProperty(OsObjectSchemaInfo.java:174)\n        at io.realm.internal.ColumnInfo.addBacklinkDetails(ColumnInfo.java:270)\n        at io.realm.com_example_realmsampleapp_models_realmobjects_process_ReleaseRealmObjectRealmProxy$ReleaseRealmObjectColumnInfo.<init>(com_example_realmsampleapp_models_realmobjects_process_ReleaseRealmObjectRealmProxy.java:77)\n        at io.realm.com_example_realmsampleapp_models_realmobjects_process_ReleaseRealmObjectRealmProxy.createColumnInfo(com_example_realmsampleapp_models_realmobjects_process_ReleaseRealmObjectRealmProxy.java:690)\n        at io.realm.DefaultRealmModuleMediator.createColumnInfo(DefaultRealmModuleMediator.java:71)\n        at io.realm.internal.ColumnIndices.getColumnInfo(ColumnIndices.java:84)\n        at io.realm.RealmSchema.getColumnInfo(RealmSchema.java:236)\n        at io.realm.DefaultRealmModuleMediator.copyOrUpdate(DefaultRealmModuleMediator.java:164)\n        at io.realm.Realm.copyOrUpdate(Realm.java:1700)\n        at io.realm.Realm.copyToRealmOrUpdate(Realm.java:1091)\n        at io.realm.RealmModelListOperator.copyToRealmIfNeeded(RealmList.java:1528)\n        at io.realm.RealmModelListOperator.appendValue(RealmList.java:1456)\n        at io.realm.ManagedListOperator.append(RealmList.java:1337)\n        at io.realm.RealmList.add(RealmList.java:210)\n        at com.example.realmsampleapp.utils.FavProcessRealmOperations$addProcessToFavoriteList$1.execute(FavProcessRealmOperations.kt:58)\n        at io.realm.Realm.executeTransaction(Realm.java:1493)\n        at com.example.realmsampleapp.utils.FavProcessRealmOperations.addProcessToFavoriteList(FavProcessRealmOperations.kt:57)\n        at com.example.realmsampleapp.ui.viewmodel.FavoriteProcessFragmentViewModel.onFavoriteProcessClicked(FavoriteProcessFragmentViewModel.kt:34)\n        at com.example.realmsampleapp.ui.fragments.FavoriteProcessFragment.onProcessClicked(FavoriteProcessFragment.kt:94)\n        at com.example.realmsampleapp.ui.adapter.ProcessViewHolder$bind$1.onCheckedChanged(ProcessViewHolder.kt:24)\n        at android.widget.CompoundButton.setChecked(CompoundButton.java:182)\n        at android.widget.CompoundButton.toggle(CompoundButton.java:136)\n        at android.widget.CompoundButton.performClick(CompoundButton.java:141)\n        at android.view.View.performClickInternal(View.java:7299)\n        at android.view.View.access$3200(View.java:846)\n        at android.view.View$PerformClick.run(View.java:27773)\n        at android.os.Handler.handleCallback(Handler.java:873)\n        at android.os.Handler.dispatchMessage(Handler.java:99)\n        at android.os.Looper.loop(Looper.java:214)\n        at android.app.ActivityThread.main(ActivityThread.java:6986)\n        at java.lang.reflect.Method.invoke(Native Method)\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1445)\n```\n\n#### Steps & Code to Reproduce\nAdd `Release` to `User`'s list of releases:\n```\nval userPrimaryKey = \"key\" // Actual key different\n\n        val userRealmObject = realm.where(UserRealmObject::class.java).equalTo(\"id\", userPrimaryKey).findFirst()\n        val favoriteProcesses = userRealmObject?.favoriteProcesses\n        val isCurrentProcessInFavoriteList = favoriteProcesses?.any { releaseRealmObject ->\n            releaseRealmObject.id == processRealmObject.id\n        }\n\n        if (isCurrentProcessInFavoriteList == false) {\n            realm.executeTransaction {\n                favoriteProcesses.add(processRealmObject)\n            }\n        }\n```\n\n###### Models\n\n```\n@RealmClass(name = \"UserRealmObject\", fieldNamingPolicy = RealmNamingPolicy.LOWER_CASE_WITH_UNDERSCORES)\nopen class UserRealmObject : RealmObject() {\n  \n    @RealmField(\"favorite_processes\") // Linked object fields must match Kotlin names\n    var favoriteProcesses: RealmList<ReleaseRealmObject> = RealmList()\n\n    @PrimaryKey\n    @RealmField(\"id\")\n    var id: String? = null\n}\n\n@RealmClass(name = \"ReleaseRealmObject\", fieldNamingPolicy = RealmNamingPolicy.LOWER_CASE_WITH_UNDERSCORES)\nopen class ReleaseRealmObject : RealmObject() {\n\n    @PrimaryKey\n    @RealmField(\"id\")\n    var id: Int? = null\n\n    @RealmField(\"users\")\n    @LinkingObjects(\"favoriteProcesses\")\n    val users: RealmResults<UserRealmObject>? = null\n}\n```\n\nTo fix prevent the crash, we had to remove `fieldNamingPolicy = RealmNamingPolicy.LOWER_CASE_WITH_UNDERSCORES` and also \nfrom `@RealmField(\"favorite_processes\")` from `UserRealmObject`. Or we could keep `fieldNamingPolicy = RealmNamingPolicy.LOWER_CASE_WITH_UNDERSCORES` and change `@RealmField(\"favorite_processes\")` to `@RealmField(\"favoriteProcesses\")`. \n\nIt seems like when we override the field name and when Realm attempts to add a backlink, it expects the Kotlin field name in the schema rather than the overriden field name.\n\n#### Version of Realm and tooling\n\nRealm version(s): plugin 5.13.0\n\nRealm Sync feature enabled: No\n\nAndroid Studio version: 3.4.2\n\nAndroid Build Tools version: 29.0.0\n\nGradle version: 3.4.2\n\nWhich Android version and device(s): Samsung S9 9.0", "url": "https://github.com/realm/realm-java/issues/6581", "user": "dsuresh-ap", "labels": ["O-Community", "T-Bug-Crash"], "created": "2019-08-09 17:28:06", "closed": "2019-11-20 15:02:26", "commits": {}, "ttf": 102.00027777777778, "commitsDetails": []}, {"title": "Execution failed for task ':app:transformClassesWithRealmTransformerForDevelopmentDebug'.", "body": "#### Goal\r\nI want to move some of my 'Realm' classes to a 'base' library module. This module will be added to my 'app' module. The project was compiling fine when these classes were in the 'app' module.\r\n\r\n#### Actual Results\r\nAs soon as I compile, I get the following error. I have attached the complete stack trace.\r\n\r\n`* Exception is:\r\norg.gradle.api.tasks.TaskExecutionException: Execution failed for task ':app:transformClassesWithRealmTransformerForDevelopmentDebug'.\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:95)\r\n\tat org.gradle.api.internal.tasks.execution.ResolveTaskOutputCachingStateExecuter.execute(ResolveTaskOutputCachingStateExecuter.java:91)\r\n\tat org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:57)\r\n\tat org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:119)\r\n\tat org.gradle.api.internal.tasks.execution.ResolvePreviousStateExecuter.execute(ResolvePreviousStateExecuter.java:43)\r\n\tat org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:93)\r\n\tat org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:45)\r\n\tat org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:94)\r\n\tat org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:56)\r\n\tat org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:55)\r\n\tat org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)\r\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:67)\r\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)\r\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:49)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$CallableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:315)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$CallableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:305)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:175)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:101)\r\n\tat org.gradle.internal.operations.DelegatingBuildOperationExecutor.call(DelegatingBuildOperationExecutor.java:36)\r\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:49)\r\n\tat org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:43)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:355)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:343)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:336)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:322)\r\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker$1.execute(DefaultPlanExecutor.java:134)\r\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker$1.execute(DefaultPlanExecutor.java:129)\r\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:202)\r\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:193)\r\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:129)\r\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)\r\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)\r\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)\r\nCaused by: java.lang.RuntimeException: cannot find com.cubivue.base.R$layout: com.cubiVue.base.R$layout found in com/cubivue/base/R$layout.class\r\n\tat javassist.CtClassType.getClassFile3(CtClassType.java:208)\r\n\tat javassist.CtClassType.makeFieldCache(CtClassType.java:900)\r\n\tat javassist.CtClassType.getMembers(CtClassType.java:891)\r\n\tat javassist.CtClassType.getDeclaredBehaviors(CtClassType.java:1039)\r\n\tat io.realm.transformer.BytecodeModifier$Companion.useRealmAccessors(ByteCodeModifier.kt:67)\r\n\tat io.realm.transformer.build.FullBuild.transformDirectAccessToModelFields(FullBuild.kt:135)\r\n\tat io.realm.transformer.RealmTransformer.transform(RealmTransformer.kt:109)\r\n\tat com.android.build.api.transform.Transform.transform(Transform.java:302)\r\n\tat com.android.build.gradle.internal.pipeline.TransformTask$2.call(TransformTask.java:239)\r\n\tat com.android.build.gradle.internal.pipeline.TransformTask$2.call(TransformTask.java:235)\r\n\tat com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:102)\r\n\tat com.android.build.gradle.internal.pipeline.TransformTask.transform(TransformTask.java:230)\r\n\tat org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:73)\r\n\tat org.gradle.api.internal.project.taskfactory.IncrementalTaskAction.doExecute(IncrementalTaskAction.java:47)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:41)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:28)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$2.run(ExecuteActionsTaskExecuter.java:284)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:301)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:293)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:175)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:91)\r\n\tat org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:273)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:258)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.access$200(ExecuteActionsTaskExecuter.java:67)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$TaskExecution.execute(ExecuteActionsTaskExecuter.java:145)\r\n\tat org.gradle.internal.execution.impl.steps.ExecuteStep.execute(ExecuteStep.java:49)\r\n\tat org.gradle.internal.execution.impl.steps.CancelExecutionStep.execute(CancelExecutionStep.java:34)\r\n\tat org.gradle.internal.execution.impl.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:69)\r\n\tat org.gradle.internal.execution.impl.steps.TimeoutStep.execute(TimeoutStep.java:49)\r\n\tat org.gradle.internal.execution.impl.steps.CatchExceptionStep.execute(CatchExceptionStep.java:33)\r\n\tat org.gradle.internal.execution.impl.steps.CreateOutputsStep.execute(CreateOutputsStep.java:50)\r\n\tat org.gradle.internal.execution.impl.steps.SnapshotOutputStep.execute(SnapshotOutputStep.java:43)\r\n\tat org.gradle.internal.execution.impl.steps.SnapshotOutputStep.execute(SnapshotOutputStep.java:29)\r\n\tat org.gradle.internal.execution.impl.steps.CacheStep.executeWithoutCache(CacheStep.java:134)\r\n\tat org.gradle.internal.execution.impl.steps.CacheStep.lambda$execute$3(CacheStep.java:83)\r\n\tat org.gradle.internal.execution.impl.steps.CacheStep.execute(CacheStep.java:82)\r\n\tat org.gradle.internal.execution.impl.steps.CacheStep.execute(CacheStep.java:36)\r\n\tat org.gradle.internal.execution.impl.steps.PrepareCachingStep.execute(PrepareCachingStep.java:33)\r\n\tat org.gradle.internal.execution.impl.steps.StoreSnapshotsStep.execute(StoreSnapshotsStep.java:38)\r\n\tat org.gradle.internal.execution.impl.steps.StoreSnapshotsStep.execute(StoreSnapshotsStep.java:23)\r\n\tat org.gradle.internal.execution.impl.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:96)\r\n\tat org.gradle.internal.execution.impl.steps.SkipUpToDateStep.lambda$execute$0(SkipUpToDateStep.java:89)\r\n\tat org.gradle.internal.execution.impl.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:52)\r\n\tat org.gradle.internal.execution.impl.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:36)\r\n\tat org.gradle.internal.execution.impl.DefaultWorkExecutor.execute(DefaultWorkExecutor.java:34)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:91)\r\n\t... 32 more`\r\n\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): 5.12.0\r\n\r\nRealm Sync feature enabled: No\r\n\r\nAndroid Studio version: 3.4.2\r\n\r\nAndroid Build Tools version: 28.0.3\r\n\r\nGradle version: 5.1.1-all\r\n", "url": "https://github.com/realm/realm-java/issues/6568", "user": "umair13adil", "labels": ["O-Community", "T-Bug-Crash"], "created": "2019-07-27 10:48:26", "closed": "2019-08-02 10:49:11", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "io.realm.exceptions.RealmFileException: Unable to open a realm at path", "body": "#### Error\r\nio.realm.exceptions.RealmFileException: Unable to open a realm at path '/data/data/com.xx.qq/files/xx_realm_v4_11_0.realm.lock': open() failed: Too many open files Path: /data/data/com.xx.qq/files/xx_realm_v4_11_0.realm.lock. (open(\"/data/data/com.xx.qq/files/xx_realm_v4_11_0.realm.lock\") failed: Too many open files Path: /data/data/com.xx.qq/files/xx_realm_v4_11_0.realm.lock) (/data/data/com.xx.qq/files/xx_realm_v4_11_0.realm.lock) in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_OsSharedRealm.cpp line 101 Kind: ACCESS_ERROR.\r\n\tat io.realm.internal.OsSharedRealm.nativeGetSharedRealm(Native Method)\r\n\tat io.realm.internal.OsSharedRealm.<init>(OsSharedRealm.java:171)\r\n\tat io.realm.internal.OsSharedRealm.getInstance(OsSharedRealm.java:241)\r\n\tat io.realm.BaseRealm.<init>(BaseRealm.java:135)\r\n\tat io.realm.BaseRealm.<init>(BaseRealm.java:103)\r\n\tat io.realm.Realm.<init>(Realm.java:163)\r\n\tat io.realm.Realm.createInstance(Realm.java:499)\r\n\tat io.realm.RealmCache.doCreateRealmOrGetFromCache(RealmCache.java:341)\r\n\tat io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:284)\r\n\tat io.realm.Realm.getDefaultInstance(Realm.java:407)\r\n\tat com.xx.qq.util.RealmHelper.getInstance(RealmHelper.java:24)\r\n\tat com.xx.qq.AccountManager.getCurrentAccountCopyFromRealm(AccountManager.java:159)\r\n\tat com.xx.qq.util.Util.getBaseRequestParams(Util.java:1634)\r\n\tat com.xx.qq.network.HttpInterceptor.changeToStandardRequest(HttpInterceptor.java:192)\r\n\tat com.xx.qq.network.HttpInterceptor.intercept(HttpInterceptor.java:77)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n\tat okhttp3.RealCall.execute(RealCall.java:77)\r\n\tat retrofit2.OkHttpCall.execute(OkHttpCall.java:180)\r\n\tat retrofit2.adapter.rxjava2.CallExecuteObservable.subscribeActual(CallExecuteObservable.java:41)\r\n\tat io.reactivex.Observable.subscribe(Observable.java:10842)\r\n\tat retrofit2.adapter.rxjava2.BodyObservable.subscribeActual(BodyObservable.java:34)\r\n\tat io.reactivex.Observable.subscribe(Observable.java:10842)\r\n\tat io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask.run(ObservableSubscribeOn.java:96)\r\n\tat io.reactivex.Scheduler$DisposeTask.run(Scheduler.java:452)\r\n\tat io.reactivex.internal.schedulers.ScheduledRunnable.run(ScheduledRunnable.java:61)\r\n\tat io.reactivex.internal.schedulers.ScheduledRunnable.call(ScheduledRunnable.java:52)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:154)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:269)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n\tat java.lang.Thread.run(Thread.java:818)\r\n\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): ?\r\n5.9.1\r\n\r\nRealm Sync feature enabled: Yes/No\r\nNo\r\n\r\nAndroid Studio version: ?\r\n3.3.1\r\n\r\nAndroid Build Tools version: ?\r\n3.0.1\r\n\r\nGradle version: ?\r\n4.4\r\n\r\nWhich Android version and device(s): ?\r\nvivo xiaomi and more", "url": "https://github.com/realm/realm-java/issues/6555", "user": "CnyNer", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2019-07-05 06:36:56", "closed": "2019-08-12 14:58:06", "commits": {}, "ttf": 38.000277777777775, "commitsDetails": []}, {"title": "Android Gradle Plugin 3.6.0: Realm Gradle plugin should process R classes from jar", "body": "Starting with Android Gradle plugin 3.6.0-alpha01, R.java is not generated any more, and R clasess are compiled separately from the rest of the sources to R.jar e.g. `./app/build/intermediates/compile_and_runtime_not_namespaced_r_class_jar/debug/R.jar`.\r\n\r\nThis means that the `RealmTransformer` should be able to process project classes coming from both directories and jars. Looking at implementation of `BuildTemplate.categorizeClassNames` it seems that classes coming from jars are in not processed.\r\n\r\nRelated issue: https://issuetracker.google.com/130965921#comment14 ", "url": "https://github.com/realm/realm-java/issues/6531", "user": "gavra0", "labels": ["O-Community", "T-Bug-Crash"], "created": "2019-05-31 15:27:08", "closed": "2019-08-12 14:31:34", "commits": {}, "ttf": 72.00027777777778, "commitsDetails": []}, {"title": "Native Crash due to corrupted Realmfile", "body": "#### Goal\r\nOpen a Realm instance based on an existing encrypted Realmfile.\r\n\r\n#### Actual Results\r\nOur app crashes as soon as it tries to open the Realmfile. It does so every time the app is restarted after that until the Realmfile is deleted, suggesting that the file is corrupted in some way.\r\n\r\n```\r\n019-05-23 15:53:43.746 ch.beekeeper.beekeeper A/libc: Fatal signal 11 (SIGSEGV), code 1, fault addr 0xfffffffffffffff8 in tid 6090 (eeper.beekeeper)\r\n2019-05-23 15:53:43.830 ? I/crash_dump64: obtaining output fd from tombstoned\r\n2019-05-23 15:53:43.832 ? I//system/bin/tombstoned: received crash request for pid 6090\r\n2019-05-23 15:53:43.835 ? I/crash_dump64: performing dump of process 6090 (target tid = 6090)\r\n2019-05-23 15:53:43.835 ? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n2019-05-23 15:53:43.835 ? A/DEBUG: Build fingerprint: 'lge/lucye_global_com/lucye:8.0.0/OPR1.170623.032/190811238daf5:user/release-keys'\r\n2019-05-23 15:53:43.835 ? A/DEBUG: Revision: '12'\r\n2019-05-23 15:53:43.835 ? A/DEBUG: ABI: 'arm64'\r\n2019-05-23 15:53:43.835 ? A/DEBUG: pid: 6090, tid: 6090, name: eeper.beekeeper  >>> ch.beekeeper.beekeeper <<<\r\n2019-05-23 15:53:43.835 ? A/DEBUG: signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0xfffffffffffffff8\r\n2019-05-23 15:53:43.836 ? A/DEBUG:     x0   0000000000000000  x1   ffffffffffffffff  x2   0000007ef3d4ca80  x3   ffffffffffffffff\r\n2019-05-23 15:53:43.836 ? A/DEBUG:     x4   0000000000000000  x5   0000000000000000  x6   0000000043b56604  x7   00000000cb95b01e\r\n2019-05-23 15:53:43.836 ? A/DEBUG:     x8   0000000000000000  x9   0000000000000002  x10  0000000000000001  x11  0000000000000000\r\n2019-05-23 15:53:43.836 ? A/DEBUG:     x12  0000007f09c0dae8  x13  0000000022f4aeae  x14  00000000d0b4d1db  x15  00000000d126eb53\r\n2019-05-23 15:53:43.836 ? A/DEBUG:     x16  0000007ee6fd5e30  x17  0000007f0a776ef4  x18  000000000f49091e  x19  0000007ffe0833b8\r\n2019-05-23 15:53:43.836 ? A/DEBUG:     x20  0000007ef3a2b380  x21  0000007ef3a2b380  x22  0000007ef3d4ca80  x23  0000007ef3d4c8c0\r\n2019-05-23 15:53:43.836 ? A/DEBUG:     x24  000000000000001a  x25  000000000000000c  x26  0000007ef3778018  x27  0000007ef3d4c938\r\n2019-05-23 15:53:43.836 ? A/DEBUG:     x28  0000000000000000  x29  0000007ffe083be0  x30  0000007ee6df1310\r\n2019-05-23 15:53:43.836 ? A/DEBUG:     sp   0000007ffe083370  pc   0000007ee6df065c  pstate 0000000060000000\r\n2019-05-23 15:53:43.863 ? A/DEBUG: backtrace:\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #00 pc 000000000025b65c  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #01 pc 000000000025c30c  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #02 pc 000000000025b514  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #03 pc 00000000002048d0  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #04 pc 0000000000204974  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #05 pc 000000000025b398  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #06 pc 00000000002048d0  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #07 pc 0000000000204974  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #08 pc 000000000025b34c  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #09 pc 00000000002048d0  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #10 pc 0000000000204974  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #11 pc 000000000025b398  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #12 pc 00000000002048d0  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #13 pc 0000000000204974  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #14 pc 000000000025b398  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #15 pc 00000000002048d0  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #16 pc 0000000000204974  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #17 pc 000000000025b398  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #18 pc 00000000002048d0  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #19 pc 0000000000204974  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #20 pc 000000000025b34c  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #21 pc 00000000002048d0  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #22 pc 0000000000204974  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #23 pc 000000000025b398  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #24 pc 00000000002048d0  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.863 ? A/DEBUG:     #25 pc 0000000000204974  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.864 ? A/DEBUG:     #26 pc 000000000025b34c  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.864 ? A/DEBUG:     #27 pc 00000000002048d0  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.864 ? A/DEBUG:     #28 pc 0000000000204974  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.864 ? A/DEBUG:     #29 pc 000000000025b34c  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.864 ? A/DEBUG:     #30 pc 00000000002048d0  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.864 ? A/DEBUG:     #31 pc 0000000000204974  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.864 ? A/DEBUG:     #32 pc 0000000000133088  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.864 ? A/DEBUG:     #33 pc 0000000000139c34  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.864 ? A/DEBUG:     #34 pc 000000000014d9e4  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.864 ? A/DEBUG:     #35 pc 000000000014d984  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.864 ? A/DEBUG:     #36 pc 0000000000150d00  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.864 ? A/DEBUG:     #37 pc 000000000016fac0  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.864 ? A/DEBUG:     #38 pc 000000000014e720  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so\r\n2019-05-23 15:53:43.864 ? A/DEBUG:     #39 pc 00000000000cad9c  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/lib/arm64/librealm-jni.so (Java_io_realm_internal_OsSharedRealm_nativeGetSharedRealm+540)\r\n2019-05-23 15:53:43.864 ? A/DEBUG:     #40 pc 00000000000540f4  /data/app/ch.beekeeper.beekeeper-QOaNyiwxkzjsgWmfrmTG4w==/oat/arm64/base.odex (offset 0x48000)\r\n2019-05-23 15:53:45.132 ? E//system/bin/tombstoned: Tombstone written to: /data/tombstones//tombstone_07\r\n2019-05-23 15:53:45.134 ? W/ActivityManager:   Force finishing activity ch.beekeeper.beekeeper/ch.beekeeper.app.MainActivity\r\n```\r\n\r\n#### Steps & Code to Reproduce\r\n\r\nHere's roughly how we open the Realm file\r\n```kotlin\r\nval config = RealmConfiguration.Builder()\r\n            .name(\"DEBUG_DATABASE\")\r\n            .modules(CoreRealmModule())\r\n            .encryptionKey(encryptionKey)\r\n            .deleteRealmIfMigrationNeeded()\r\n            .build()\r\n\r\nval realm = Realm.getInstance(config)\r\n```\r\n\r\nWe've been seeing this crash happen in production a lot, though it is unclear when or why it started, or what's causing it. I've only been able to reproduce it once. I sent the Realmfile and encryption key to help@realm.io.\r\n\r\nThe crash starts happening at some point and then keeps happening on every retry. The Realmfile is mainly read from on the UI thread and exclusively written to from background threads.\r\n\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): 5.11.0\r\n\r\nRealm Sync feature enabled: No\r\n\r\nAndroid Studio version: 3.4.1\r\n\r\nAndroid Build Tools version: 28.0.3\r\n\r\nGradle version: 5.2.1\r\n\r\nWhich Android version and device(s): Occurring on various different versions and devices, was able to reproduce on an LG G6 running Android 8\r\n", "url": "https://github.com/realm/realm-java/issues/6525", "user": "Waboodoo", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2019-05-23 14:45:35", "closed": "2019-11-05 10:39:00", "commits": {}, "ttf": 165.00027777777777, "commitsDetails": []}, {"title": "random native crash", "body": "We experience randomly spread crashes when navigating through activities/fragments.\nWe have one MainActivity, containing several fragments that are displayed depending on user input and several Activities in Dialog style that are put on top of the MainActivity.\n\nReading from the Realm occurs mainly on the main thread, writing mostly on a background thread inside a Service. And that in a quite large transaction that is run about twice per second with data from a server.\n\nSometimes (not entierly reproducable) the app crashes:\n\n```\n2019-05-23 15:39:10.031 1849-1849/eu.wushel.drawertest A/libc: Fatal signal 11 (SIGSEGV), code 128, fault addr 0x0 in tid 1849 (shel.drawertest)\n2019-05-23 15:39:10.106 5573-5573/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n2019-05-23 15:39:10.106 5573-5573/? A/DEBUG: Build fingerprint: 'Android/sdk_google_phone_x86_64/generic_x86_64:7.1.1/NYC/5464897:userdebug/test-keys'\n2019-05-23 15:39:10.106 5573-5573/? A/DEBUG: Revision: '0'\n2019-05-23 15:39:10.106 5573-5573/? A/DEBUG: ABI: 'x86_64'\n2019-05-23 15:39:10.106 5573-5573/? A/DEBUG: pid: 1849, tid: 1849, name: shel.drawertest  >>> eu.wushel.drawertest <<<\n2019-05-23 15:39:10.106 5573-5573/? A/DEBUG: signal 11 (SIGSEGV), code 128 (SI_KERNEL), fault addr 0x0\n2019-05-23 15:39:10.106 5573-5573/? A/DEBUG:     rax 000077d40c1c1480  rbx 000077d40ac24210  rcx 5f6c67202020200a  rdx 0000000000000000\n2019-05-23 15:39:10.107 5573-5573/? A/DEBUG:     rsi 70202a206d726f66  rdi 6e6f697469736f50\n2019-05-23 15:39:10.107 5573-5573/? A/DEBUG:     r8  6e756f7220202020  r9  0a3b6e6f69746973  r10 766e497463655264  r11 5064656d726f6673\n2019-05-23 15:39:10.107 5573-5573/? A/DEBUG:     r12 000077d40ac24288  r13 7474610a30303120  r14 6e6f697372657623  r15 00007fff05419970\n2019-05-23 15:39:10.107 5573-5573/? A/DEBUG:     cs  0000000000000033  ss  000000000000002b\n2019-05-23 15:39:10.107 5573-5573/? A/DEBUG:     rip 000077d40d1973b6  rbp 00007fff05419970  rsp 00007fff05419970  eflags 0000000000000202\n2019-05-23 15:39:10.650 5573-5573/? A/DEBUG: backtrace:\n2019-05-23 15:39:10.650 5573-5573/? A/DEBUG:     #00 pc 000000000015e3b6  /data/app/eu.wushel.drawertest-1/lib/x86_64/librealm-jni.so\n2019-05-23 15:39:10.650 5573-5573/? A/DEBUG:     #01 pc 000000000015e63b  /data/app/eu.wushel.drawertest-1/lib/x86_64/librealm-jni.so\n2019-05-23 15:39:10.650 5573-5573/? A/DEBUG:     #02 pc 000000000018b6c0  /data/app/eu.wushel.drawertest-1/lib/x86_64/librealm-jni.so\n2019-05-23 15:39:10.650 5573-5573/? A/DEBUG:     #03 pc 000000000018ba51  /data/app/eu.wushel.drawertest-1/lib/x86_64/librealm-jni.so\n2019-05-23 15:39:10.650 5573-5573/? A/DEBUG:     #04 pc 000000000016fb0e  /data/app/eu.wushel.drawertest-1/lib/x86_64/librealm-jni.so\n2019-05-23 15:39:10.650 5573-5573/? A/DEBUG:     #05 pc 00000000001525f2  /data/app/eu.wushel.drawertest-1/lib/x86_64/librealm-jni.so\n2019-05-23 15:39:10.650 5573-5573/? A/DEBUG:     #06 pc 00000000000c64fa  /data/app/eu.wushel.drawertest-1/lib/x86_64/librealm-jni.so (Java_io_realm_internal_OsSharedRealm_nativeCommitTransaction+58)\n2019-05-23 15:39:10.650 5573-5573/? A/DEBUG:     #07 pc 0000000000142ae1  /system/lib64/libart.so (art_quick_generic_jni_trampoline+209)\n2019-05-23 15:39:10.651 5573-5573/? A/DEBUG:     #08 pc 0000000000138516  /system/lib64/libart.so (art_quick_invoke_static_stub+806)\n2019-05-23 15:39:10.651 5573-5573/? A/DEBUG:     #09 pc 00000000001463ec  /system/lib64/libart.so (_ZN3art9ArtMethod6InvokeEPNS_6ThreadEPjjPNS_6JValueEPKc+268)\n2019-05-23 15:39:10.651 5573-5573/? A/DEBUG:     #10 pc 000000000031494f  /system/lib64/libart.so (_ZN3art11interpreter34ArtInterpreterToCompiledCodeBridgeEPNS_6ThreadEPNS_9ArtMethodEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+255)\n2019-05-23 15:39:10.651 5573-5573/? A/DEBUG:     #11 pc 000000000030ce5d  /system/lib64/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+765)\n2019-05-23 15:39:10.651 5573-5573/? A/DEBUG:     #12 pc 000000000061d35a  /system/lib64/libart.so (MterpInvokeStatic+362)\n2019-05-23 15:39:10.651 5573-5573/? A/DEBUG:     #13 pc 0000000000129a19  /system/lib64/libart.so (artMterpAsmInstructionStart+14489)\n2019-05-23 15:39:10.651 5573-5573/? A/DEBUG:     #14 pc 00000000002e3e69  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+409)\n2019-05-23 15:39:10.651 5573-5573/? A/DEBUG:     #15 pc 00000000002ea15c  /system/lib64/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+172)\n2019-05-23 15:39:10.651 5573-5573/? A/DEBUG:     #16 pc 000000000030ce42  /system/lib64/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+738)\n2019-05-23 15:39:10.651 5573-5573/? A/DEBUG:     #17 pc 000000000061ba01  /system/lib64/libart.so (MterpInvokeVirtual+657)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #18 pc 0000000000129899  /system/lib64/libart.so (artMterpAsmInstructionStart+14105)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #19 pc 00000000002e3e69  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+409)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #20 pc 00000000002ea15c  /system/lib64/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+172)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #21 pc 000000000030ce42  /system/lib64/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+738)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #22 pc 000000000061c485  /system/lib64/libart.so (MterpInvokeSuper+1957)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #23 pc 0000000000129919  /system/lib64/libart.so (artMterpAsmInstructionStart+14233)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #24 pc 00000000002e3e69  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+409)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #25 pc 00000000002ea15c  /system/lib64/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+172)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #26 pc 000000000030ce42  /system/lib64/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+738)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #27 pc 000000000061ba01  /system/lib64/libart.so (MterpInvokeVirtual+657)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #28 pc 0000000000129899  /system/lib64/libart.so (artMterpAsmInstructionStart+14105)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #29 pc 00000000002e3e69  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+409)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #30 pc 00000000002ea15c  /system/lib64/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+172)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #31 pc 000000000030ce42  /system/lib64/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+738)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #32 pc 000000000061ba01  /system/lib64/libart.so (MterpInvokeVirtual+657)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #33 pc 0000000000129899  /system/lib64/libart.so (artMterpAsmInstructionStart+14105)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #34 pc 00000000002e3e69  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+409)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #35 pc 000000000060fa00  /system/lib64/libart.so (artQuickToInterpreterBridge+1056)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #36 pc 0000000000142c5c  /system/lib64/libart.so (art_quick_to_interpreter_bridge+140)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #37 pc 000000000176796a  /system/framework/x86_64/boot-framework.oat (offset 0x1609000) (android.app.LoadedApk$ServiceDispatcher.doConnected+822)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #38 pc 00000000017671c5  /system/framework/x86_64/boot-framework.oat (offset 0x1609000) (android.app.LoadedApk$ServiceDispatcher$RunConnection.run+81)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #39 pc 00000000016a7af6  /system/framework/x86_64/boot-framework.oat (offset 0x1609000) (android.os.Handler.handleCallback+66)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #40 pc 00000000016a7b75  /system/framework/x86_64/boot-framework.oat (offset 0x1609000) (android.os.Handler.dispatchMessage+65)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #41 pc 0000000001e8177c  /system/framework/x86_64/boot-framework.oat (offset 0x1609000) (android.os.Looper.loop+776)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #42 pc 00000000016be4df  /system/framework/x86_64/boot-framework.oat (offset 0x1609000) (android.app.ActivityThread.main+411)\n2019-05-23 15:39:10.652 5573-5573/? A/DEBUG:     #43 pc 0000000000138516  /system/lib64/libart.so (art_quick_invoke_static_stub+806)\n2019-05-23 15:39:10.653 5573-5573/? A/DEBUG:     #44 pc 00000000001463ec  /system/lib64/libart.so (_ZN3art9ArtMethod6InvokeEPNS_6ThreadEPjjPNS_6JValueEPKc+268)\n2019-05-23 15:39:10.653 5573-5573/? A/DEBUG:     #45 pc 00000000004daeb7  /system/lib64/libart.so (_ZN3artL18InvokeWithArgArrayERKNS_33ScopedObjectAccessAlreadyRunnableEPNS_9ArtMethodEPNS_8ArgArrayEPNS_6JValueEPKc+87)\n2019-05-23 15:39:10.653 5573-5573/? A/DEBUG:     #46 pc 00000000004dcfa4  /system/lib64/libart.so (_ZN3art12InvokeMethodERKNS_33ScopedObjectAccessAlreadyRunnableEP8_jobjectS4_S4_m+1444)\n2019-05-23 15:39:10.653 5573-5573/? A/DEBUG:     #47 pc 0000000000442638  /system/lib64/libart.so (_ZN3artL13Method_invokeEP7_JNIEnvP8_jobjectS3_S3_+56)\n2019-05-23 15:39:10.653 5573-5573/? A/DEBUG:     #48 pc 0000000000604557  /system/framework/x86_64/boot.oat (offset 0x533000) (java.lang.reflect.Method.invoke+227)\n2019-05-23 15:39:10.653 5573-5573/? A/DEBUG:     #49 pc 000000000254c239  /system/framework/x86_64/boot-framework.oat (offset 0x1609000) (com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run+133)\n2019-05-23 15:39:10.653 5573-5573/? A/DEBUG:     #50 pc 000000000254d37f  /system/framework/x86_64/boot-framework.oat (offset 0x1609000) (com.android.internal.os.ZygoteInit.main+1259)\n2019-05-23 15:39:10.653 5573-5573/? A/DEBUG:     #51 pc 0000000000138516  /system/lib64/libart.so (art_quick_invoke_static_stub+806)\n2019-05-23 15:39:10.653 5573-5573/? A/DEBUG:     #52 pc 00000000001463ec  /system/lib64/libart.so (_ZN3art9ArtMethod6InvokeEPNS_6ThreadEPjjPNS_6JValueEPKc+268)\n2019-05-23 15:39:10.653 5573-5573/? A/DEBUG:     #53 pc 00000000004daeb7  /system/lib64/libart.so (_ZN3artL18InvokeWithArgArrayERKNS_33ScopedObjectAccessAlreadyRunnableEPNS_9ArtMethodEPNS_8ArgArrayEPNS_6JValueEPKc+87)\n2019-05-23 15:39:10.653 5573-5573/? A/DEBUG:     #54 pc 00000000004daa64  /system/lib64/libart.so (_ZN3art17InvokeWithVarArgsERKNS_33ScopedObjectAccessAlreadyRunnableEP8_jobjectP10_jmethodIDP13__va_list_tag+388)\n2019-05-23 15:39:10.653 5573-5573/? A/DEBUG:     #55 pc 00000000003dc08d  /system/lib64/libart.so (_ZN3art3JNI21CallStaticVoidMethodVEP7_JNIEnvP7_jclassP10_jmethodIDP13__va_list_tag+781)\n2019-05-23 15:39:10.653 5573-5573/? A/DEBUG:     #56 pc 000000000016d08a  /system/lib64/libart.so (_ZN3art8CheckJNI11CallMethodVEPKcP7_JNIEnvP8_jobjectP7_jclassP10_jmethodIDP13__va_list_tagNS_9Primitive4TypeENS_10InvokeTypeE+3562)\n2019-05-23 15:39:10.653 5573-5573/? A/DEBUG:     #57 pc 000000000016100f  /system/lib64/libart.so (_ZN3art8CheckJNI21CallStaticVoidMethodVEP7_JNIEnvP7_jclassP10_jmethodIDP13__va_list_tag+47)\n2019-05-23 15:39:10.653 5573-5573/? A/DEBUG:     #58 pc 00000000000ab292  /system/lib64/libandroid_runtime.so (_ZN7_JNIEnv20CallStaticVoidMethodEP7_jclassP10_jmethodIDz+146)\n2019-05-23 15:39:10.653 5573-5573/? A/DEBUG:     #59 pc 00000000000ae0d9  /system/lib64/libandroid_runtime.so (_ZN7android14AndroidRuntime5startEPKcRKNS_6VectorINS_7String8EEEb+665)\n2019-05-23 15:39:10.653 5573-5573/? A/DEBUG:     #60 pc 0000000000002318  /system/bin/app_process64\n2019-05-23 15:39:10.653 5573-5573/? A/DEBUG:     #61 pc 000000000001c954  /system/lib64/libc.so (__libc_init+84)\n2019-05-23 15:39:10.653 5573-5573/? A/DEBUG:     #62 pc 0000000000001cf4  /system/bin/app_process64\n2019-05-23 15:39:10.653 5573-5573/? A/DEBUG:     #63 pc 0000000000000005  <unknown>\n```\nWe \n\n**Expected results**\n\nSeemless navigation through fragments/activities\n\n**Actual results**\n\ncrash\n\n\n**Version of Realm/Android Studio/OS**\n\nRealm: 5.11.0, AndroidStudio: 3.4.1, device OS: cannot be narrowed to a single version/range", "url": "https://github.com/realm/realm-java/issues/6524", "user": "kirax89", "labels": ["O-Community", "Pipeline-Waiting-for-User", "Reproduction-Required", "T-Bug-Crash"], "created": "2019-05-23 13:48:37", "closed": "2019-11-27 14:07:30", "commits": {}, "ttf": 188.00027777777777, "commitsDetails": []}, {"title": "Android | signal 7 (SIGBUS), code 1 (BUS_ADRALN)", "body": "#### Goal\r\nWhile using realm-java in android application, sometimes below fatal exception is occurred.\r\nI need to figure out why below fatal is happened.\r\n\r\n#### Actual Results\r\n```\r\nFatal signal 7 (SIGBUS), code 1 (BUS_ADRALN), fault addr 0x205d534f50546b in tid 11495 (AsyncTask #10), pid 8534\r\n\r\n...apk (offset 0x2c9000) (Java_io_realm_internal_OsSharedRealm_nativeCloseSharedRealm+52)\r\n/data/dalvik-cache/arm64/system@priv-app@...apk@classes.dex (offset 0x7e000) (io.realm.internal.OsList.nativeAddNull [DEDUPED]+152)\r\n/data/dalvik-cache/arm64/system@priv-app@...apk@classes.dex (offset 0x7e000) (io.realm.internal.OsSharedRealm.close+128)\r\n/data/dalvik-cache/arm64/system@priv-app@...apk@classes.dex (offset 0x7e000) (io.realm.a.h+76)\r\n/data/dalvik-cache/arm64/system@priv-app@...apk@classes.dex (offset 0x7e000) (io.realm.w.a+848)\r\n/data/dalvik-cache/arm64/system@priv-app@...apk@classes.dex (offset 0x7e000) (io.realm.a.close+176)\r\n/data/dalvik-cache/arm64/system@priv-app@...apk@classes.dex (offset 0x7e000) (io.realm.v.close+40)\r\n```\r\n\r\n#### Steps & Code to Reproduce\r\nI don't know exactly how to reproduce.\r\n\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): io.realm:realm-gradle-plugin:5.9.0\r\n\r\nRealm Sync feature enabled: No\r\n\r\nAndroid Studio version: 3.1.2\r\n\r\nAndroid Build Tools version: 28.0.2\r\n\r\nGradle version: 4.5.1\r\n\r\nWhich Android version and device(s): android P\r\n", "url": "https://github.com/realm/realm-java/issues/6511", "user": "dd-david", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2019-05-08 07:32:03", "closed": "2019-08-12 20:39:26", "commits": {}, "ttf": 96.00027777777778, "commitsDetails": []}, {"title": "signal 11 (SIGSEGV), code 1 (SEGV_MAPERR) in nativeMoveLastOver", "body": "#### Goal\r\nNo crash\r\n\r\n#### Actual Results\r\nWe're receiving two similar crash reports:\r\n```\r\n#00  pc 00000000000a812e  /data/app/com.myapp-2/lib/arm/librealm-jni.so\r\n  #01  pc 00000000000718ef  /data/app/com.myapp-2/lib/arm/librealm-jni.so\r\n  #02  pc 0000000000106e69  /data/app/com.myapp-2/lib/arm/librealm-jni.so\r\n  #03  pc 00000000000f98ad  /data/app/com.myapp-2/lib/arm/librealm-jni.so\r\n  #04  pc 00000000000f699f  /data/app/com.myapp-2/lib/arm/librealm-jni.so\r\n  #05  pc 000000000013accd  /data/app/com.myapp-2/lib/arm/librealm-jni.so\r\n  #06  pc 000000000013ad8b  /data/app/com.myapp-2/lib/arm/librealm-jni.so\r\n  #07  pc 000000000003dc6d  /data/app/com.myapp-2/lib/arm/librealm-jni.so (Java_io_realm_internal_Table_nativeMoveLastOver+56)\r\n  #08  pc 0000000001e62c0d  /data/app/com.myapp-2/oat/arm/base.odex\r\n```\r\nand\r\n```\r\n #00  pc 000000000012e538  /data/app/com.myapp-iAugXV1TdbqyhYXqU7ZOaw==/lib/arm64/librealm-jni.so\r\n  #01  pc 00000000000ccd64  /data/app/com.myapp-iAugXV1TdbqyhYXqU7ZOaw==/lib/arm64/librealm-jni.so\r\n  #02  pc 00000000001af9d4  /data/app/com.myapp-iAugXV1TdbqyhYXqU7ZOaw==/lib/arm64/librealm-jni.so\r\n  #03  pc 000000000019bbf4  /data/app/com.myapp-iAugXV1TdbqyhYXqU7ZOaw==/lib/arm64/librealm-jni.so\r\n  #04  pc 0000000000197244  /data/app/com.myapp-iAugXV1TdbqyhYXqU7ZOaw==/lib/arm64/librealm-jni.so\r\n  #05  pc 00000000001fbb04  /data/app/com.myapp-iAugXV1TdbqyhYXqU7ZOaw==/lib/arm64/librealm-jni.so\r\n  #06  pc 00000000001fbc6c  /data/app/com.myapp-iAugXV1TdbqyhYXqU7ZOaw==/lib/arm64/librealm-jni.so\r\n  #07  pc 000000000007addc  /data/app/com.myapp-iAugXV1TdbqyhYXqU7ZOaw==/lib/arm64/librealm-jni.so (Java_io_realm_internal_Table_nativeMoveLastOver+216)\r\n  #08  pc 00000000006e779c  /data/app/com.myapp-iAugXV1TdbqyhYXqU7ZOaw==/oat/arm64/base.odex\r\n```\r\n#### Steps & Code to Reproduce\r\nReports are coming from PlayStore, not able to reproduce it locally. So far total reports:\r\n2,279 and 60 impacted users\r\nWe are not using `moveLastOver` directly so the crashes have to come from `deleteFromRealm`. Any ideas what can cause this issue? We are using realm with encryption.\r\nThese reports started to show up after bumping realm from 3.3.1 to 5.7.1\r\n\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): 5.7.1\r\n\r\nRealm Sync feature enabled: No\r\n\r\nAndroid Studio version: 3.3.0\r\n\r\nAndroid Build Tools version: 3.3.0\r\n\r\nGradle version: 4.10\r\n\r\nWhich Android version and device(s): \r\n```\r\nAndroid 8.0 | 454 | 35.7%\r\nAndroid 7.0 | 422 | 33.2%\r\nAndroid 6.0 | 283 | 22.2%\r\nAndroid 8.1 | 83 | 6.5%\r\nAndroid 7.1\r\n```\r\n```\r\nLG K10 (2017) (mlv5n) | 349 | 27.4%\r\nGalaxy A5(2017) (a5y17lte) | 309 | 24.3%\r\nLG K8 LTE (mm1vn) | 283 | 22.2%\r\nXperia L1 (G3311) | 73 | 5.7%\r\nP20 lite (HWANE) | 55 | 4.3%\r\nGalaxy Tab A (2016) (gtaxllte) | 52 | 4.1%\r\nGalaxy S7 (herolte) | 46 | 3.6%\r\nGalaxy J3(2017) (j3y17lte) | 31 | 2.4%\r\nGalaxy XCover4 (xcover4lte) | 29 | 2.3%\r\nGalaxy J5(2016) (j5xnlte) | 29 | 2.3%\r\nGalaxy S7 edge (hero2lte) | 12 | 0.9%\r\nGalaxy J5 (j5y17lte) | 2 | 0.2%\r\nGalaxy A3(2017) (a3y17lte) | 1 | 0.1%\r\nLG K11 (mcv3)\r\n```\r\n\r\n\r\n", "url": "https://github.com/realm/realm-java/issues/6505", "user": "ggajews", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2019-05-02 09:44:35", "closed": "2019-11-05 10:38:21", "commits": {}, "ttf": 187.00027777777777, "commitsDetails": []}, {"title": "Top ref outside file. RealmFileException: Unable to open a realm at path", "body": "#### Goal\nFix reported crash from Crashlytics, user reported app can no longer be opened and had to uninstall and restore a backup. From previous open issues I can see this means the database is corrupted.\n\n- How can this error occur?\n- Is there anyway to recover without losing data?\n\nI don't have a copy of the corrupted database.\n\n#### Actual Results\n```\nFatal Exception: java.lang.RuntimeException: io.realm.exceptions.RealmFileException: Unable to open a realm at path '/data/data/com.wesleyellis.nextepisode/files/default.realm': Top ref outside file (size = 3145728). top_ref[0]: 303150000082C28, top_ref[1]: 46020200, mnemonic: 54 2D 44 42, fmt[0]: 9, fmt[1]: 9, flags: 0 Path:. (Top ref outside file (size = 3145728). top_ref[0]: 303150000082C28, top_ref[1]: 46020200, mnemonic: 54 2D 44 42, fmt[0]: 9, fmt[1]: 9, flags: 0 Path: /data/data/com.wesleyellis.nextepisode/files/default.realm) (/data/data/com.wesleyellis.nextepisode/files/default.realm) in /Users/cm/Realm/realm-java-release/realm/realm-library/src/main/cpp/io_realm_internal_OsSharedRealm.cpp line 101 Kind: ACCESS_ERROR.\n       at android.app.job.JobServiceEngine$JobHandler.handleMessage(JobServiceEngine.java:112)\n       at android.os.Handler.dispatchMessage(Handler.java:106)\n       at android.os.Looper.loop(Looper.java:214)\n       at android.app.ActivityThread.main(ActivityThread.java:6981)\n       at java.lang.reflect.Method.invoke(Method.java)\n       at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1445)\n```\n\n#### Steps & Code to Reproduce\nOpen the app, It occurs first time ```Realm.getDefaultInstance()``` is called.\n\n```\nclass EpisodeGuide : DaggerApplication() {\n\n    private val realmConfiguration by lazyAndroid {\n        RealmConfiguration.Builder()\n            .schemaVersion(9)\n            .migration(EpisodeGuideMigration())\n            .compactOnLaunch()\n            .build()\n    }\n\n    override fun onCreate() {\n        super.onCreate()\n.....\n        Realm.init(this)\n        Realm.setDefaultConfiguration(realmConfiguration)\n}\n```\n\n#### Version of Realm and tooling\n\nRealm version(s): 5.10.0\n\nRealm Sync feature enabled: No\n\nAndroid Studio version: 3.4\n\nGradle version: 5.4\n\nWhich Android version and device(s): \nBrand: samsung\nAndroid 9.0\nModel: Galaxy S9+\nRAM free: 2.48 GB\nDisk free: 34.31 GB", "url": "https://github.com/realm/realm-java/issues/6498", "user": "wezley98", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2019-04-23 12:24:01", "closed": "2019-11-19 16:42:15", "commits": {}, "ttf": 210.00027777777777, "commitsDetails": []}, {"title": "Crash on deleteRealm only on Huawei", "body": "#### Goal\r\nWe would like to be crash free on Huawei devices. But we have a crashes (exclusive to Huaweis)\r\non Realm.deleteRealm(config)\r\n\r\n#### Actual Results\r\n```\r\nCaused by java.lang.IllegalStateException: It's not allowed to delete the file associated with an open Realm. Remember to close() all the instances of the Realm before deleting its file: /data/data/eu.qonto.qonto/files/qontodb.realm\r\n       at io.realm.BaseRealm.deleteRealm(BaseRealm.java:691)\r\n       at io.realm.Realm.deleteRealm(Realm.java:1792)\r\n       at com.qonto.qonto.data.dao.AppDatabase.getRealmInstance(AppDatabase.java:44)\r\n       at com.qonto.qonto.data.dao.AppDatabase.initRealm(AppDatabase.java:35)\r\n       at com.qonto.qonto.data.dao.AppDatabase.(SourceFile:23)\r\n       at com.qonto.qonto.database.DatabaseModule.provideAppDatabase(DatabaseModule.java:14)\r\n       at com.qonto.qonto.database.DatabaseModule_ProvideAppDatabaseFactory.proxyProvideAppDatabase(DatabaseModule_ProvideAppDatabaseFactory.java:49)\r\n       at com.qonto.qonto.database.DatabaseModule_ProvideAppDatabaseFactory.provideInstance(DatabaseModule_ProvideAppDatabaseFactory.java:35)\r\n       at com.qonto.qonto.database.DatabaseModule_ProvideAppDatabaseFactory.get(DatabaseModule_ProvideAppDatabaseFactory.java:28)\r\n       at com.qonto.qonto.database.DatabaseModule_ProvideAppDatabaseFactory.get(DatabaseModule_ProvideAppDatabaseFactory.java:10)\r\n       at dagger.internal.DoubleCheck.get(DoubleCheck.java:47)\r\n       at com.qonto.qonto.data.repository.LoginRepository_Factory.provideInstance(LoginRepository_Factory.java:71)\r\n       at com.qonto.qonto.data.repository.LoginRepository_Factory.get(LoginRepository_Factory.java:48)\r\n       at com.qonto.qonto.data.repository.LoginRepository_Factory.get(LoginRepository_Factory.java:14)\r\n       at dagger.internal.DoubleCheck.get(DoubleCheck.java:47)\r\n       at com.qonto.qonto.api.di.ApiModule_ProvidePubSubControllerFactory.provideInstance(ApiModule_ProvidePubSubControllerFactory.java:81)\r\n       at com.qonto.qonto.api.di.ApiModule_ProvidePubSubControllerFactory.get(ApiModule_ProvidePubSubControllerFactory.java:55)\r\n       at com.qonto.qonto.api.di.ApiModule_ProvidePubSubControllerFactory.get(ApiModule_ProvidePubSubControllerFactory.java:17)\r\n       at dagger.internal.DoubleCheck.get(DoubleCheck.java:47)\r\n       at com.qonto.qonto.QontoApp.onCreate(QontoApp.java:88)\r\n       at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1162)\r\n       at android.app.ActivityThread.handleBindApplication(ActivityThread.java:6636)\r\n       at android.app.ActivityThread.access$2000(ActivityThread.java:268)\r\n       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1995)\r\n       at android.os.Handler.dispatchMessage(Handler.java:109)\r\n       at android.os.Looper.loop(Looper.java:207)\r\n       at android.app.ActivityThread.main(ActivityThread.java:7539)\r\n       at java.lang.reflect.Method.invoke(Method.java)\r\n       at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:524)\r\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:958)\r\n```\r\n#### Steps & Code to Reproduce\r\n<!-- What steps resulted in the crash? Please show any relevant code or steps that can be used to -->\r\n<!-- reproduce it, including any Realm model classes used. Even better is a full sample project -->\r\n<!-- that can reproduce the crash. Code can be shared privately at help@realm.io if needed. -->\r\n\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): 5.10.0\r\n\r\nRealm Sync feature enabled: No\r\n\r\nAndroid Studio version: 3.4 RC3\r\n\r\nAndroid Build Tools version: 28.0.3\r\n\r\nGradle version: 5.3.1\r\n\r\nWhich Android version and device(s): Only Huawei (Honor 8X, P20 pro, P20, Mate9, Honor 9, Mate 20 Pro, nova 3, P10 plus, Honor View 10, Mate 10 Pro, honor 10 lite, Mate 9 Pro, HONOR View 20, Marte 20) : 100% of them running on OS 9.\r\n\r\n\r\nHere is our AppDatabase Class : \r\n```\r\nclass AppDatabase(\r\n    val context: Context,\r\n    val qontoPrefs: SharedPreferencesQonto\r\n) {\r\n\r\n    private lateinit var realm: Realm\r\n\r\n    init {\r\n        if (Looper.myLooper() == Looper.getMainLooper()) {\r\n            initRealm()\r\n        } else {\r\n            runBlocking(Dispatchers.Main) {\r\n                initRealm()\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun initRealm() {\r\n        Realm.init(context)\r\n        val config = getRealmConfig()\r\n        Realm.setDefaultConfiguration(config)\r\n        realm = getRealmInstance(config)\r\n    }\r\n\r\n    private fun getRealmInstance(config: RealmConfiguration) =\r\n        try {\r\n            Realm.getDefaultInstance()\r\n        } catch (e: RealmFileException) {\r\n            Timber.e(e, \"Error initializing Realm database\")\r\n            try {\r\n                Realm.deleteRealm(config)\r\n                qontoPrefs.removeSessionMembership()\r\n            } catch (e: IllegalStateException) {\r\n                Timber.e(\r\n                    e,\r\n                    \"\"\"\r\n                    Error deleting the database:\r\n                    - Number of global instances ${Realm.getGlobalInstanceCount(config)}\r\n                    - Number of local instances ${Realm.getLocalInstanceCount(config)}\r\n                    - Current thread id: ${Thread.currentThread().id}\r\n                    \"\"\".trimIndent()\r\n                )\r\n                throw e\r\n            }\r\n            Realm.getDefaultInstance()\r\n        }\r\n\r\n    private fun getRealmConfig(): RealmConfiguration {\r\n        return RealmConfiguration.Builder()\r\n            .name(RealmUtils.REALM_FILENAME)\r\n            .schemaVersion(1)\r\n            .encryptionKey(RealmUtils().getEncryptionKey(qontoPrefs))\r\n            .deleteRealmIfMigrationNeeded()\r\n            .migration { _, _, _ ->\r\n                qontoPrefs.removeSessionMembership()\r\n            }\r\n            .build()\r\n    }\r\n\r\n    fun deleteAll() = realm.executeTransaction {\r\n        realm.deleteAll()\r\n    }\r\n}\r\n```", "url": "https://github.com/realm/realm-java/issues/6495", "user": "jphidenis", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2019-04-18 20:54:42", "closed": "2019-07-30 12:27:59", "commits": {}, "ttf": 102.00027777777778, "commitsDetails": []}, {"title": "Bulk update native crash", "body": "#### Goal\r\nSet delivered date on multiple objects\r\nhttps://github.com/realm/realm-java/issues/762\r\n\r\n#### Actual Results\r\n```\r\njava.lang.ArrayIndexOutOfBoundsException: Out of range  in /Users/cm/Realm/realm-java-release/realm/realm-library/src/main/cpp/io_realm_internal_OsResults.cpp line 334(requested: 1 valid: 1)\r\n        at io.realm.internal.OsResults.nativeSetTimestamp(Native Method)\r\n        at io.realm.internal.OsResults.setDate(OsResults.java:435)\r\n        at io.realm.RealmResults.setDate(RealmResults.java:405)\r\n```\r\n\r\n#### Steps & Code to Reproduce\r\n```\r\nfun setReadAll() {\r\n        val readAtDate = Date()\r\n        realm.executeTransaction {\r\n            it.where(Message::class.java).isNull(Message::readAt.name).findAll()\r\n                    .setDate(Message::readAt.name, readAtDate)\r\n        }\r\n    }\r\n```\r\n`setReadAll()` method is called:\r\n- after change (RealmChangeListener, ignoring objects with set **readAt** field)\r\n- after scroll to bottom\r\ndepends on current state.\r\n\r\nThis crash happens when I scroll to bottom, there're 2 unread messages.\r\n\r\nI've added print into foreach. I've got 4 objects to update, but crash like this happend:\r\n```REALM_JNI: jni: ThrowingException 2, Out of range  in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_OsResults.cpp line 334(requested: 2 valid: 2), .```\r\n\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): 5.10.0\r\n\r\nRealm Sync feature enabled: Yes\r\n\r\nAndroid Studio version: 3.3.2\r\n\r\nAndroid Build Tools version: 28.0.3\r\n\r\nGradle version: 4.10.1\r\n\r\nWhich Android version and device(s): Samsung Galaxy Tab Active2, Android 8.1.0\r\n", "url": "https://github.com/realm/realm-java/issues/6478", "user": "Chesteer89", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2019-04-01 12:53:56", "closed": "2019-04-30 11:50:01", "commits": {}, "ttf": 28.00027777777778, "commitsDetails": []}, {"title": "nativeGetSharedRealm crash", "body": "Hello getting some native crash reports by the Play dev console. Can't reproduce it, and seems like most of the users are fine.\n\nLooks like it's happening here:\n```\n RealmConfiguration config = new RealmConfiguration.Builder()\n                .name(DB_FILE_NAME)\n                .encryptionKey(key)\n                .deleteRealmIfMigrationNeeded()\n                .build();\n        return Realm.getInstance(config);\n```\nAny ideas why this is happening would be greatly appreciated. \n\n```\n#15  pc 000000000006f6c8  /data/app/[package-name-removed]-BIbCKYltmht3tcp9PvWvpg==/lib/arm64/librealm-jni.so (Java_io_realm_internal_OsSharedRealm_nativeGetSharedRealm+480)\n  #16  pc 000000000003c824  /data/app/[package-name-removed]-BIbCKYltmht3tcp9PvWvpg==/oat/arm64/base.odex (io.realm.internal.OsObjectSchemaInfo.nativeGetProperty [DEDUPED]+180)\n```\n#### Version of Realm and tooling\n\nRealm version(s): 5.7.1\n\nRealm Sync feature enabled: No\n\nAndroid Studio version: 3.3.2\n\nAndroid Build Tools version: 28.0.3\n\nGradle version: 5.1", "url": "https://github.com/realm/realm-java/issues/6468", "user": "ch-vadim-maximov", "labels": ["O-Community", "Pipeline-Waiting-for-User", "Reproduction-Required", "T-Bug-Crash"], "created": "2019-03-18 18:19:18", "closed": "2019-11-27 13:52:26", "commits": {}, "ttf": 253.00027777777777, "commitsDetails": []}, {"title": "Fatal signal SI_TKILL 'NativeCreateNewObjectWithLongPrimaryKey' error", "body": "Hi, \r\nwe have a big problem in our app when want to create a new object or update an old object.\r\n\r\n#### Actual Results\r\nwhen user work with our app for example after one month, an error occurs to them. and never can't open app. recently i found this error log. we have a messenger and after than user open app we try to get chat room list. each chat room has a long primary key. and when we want to update chat room info with primary key or create a new one the app gives an error. now we have following logcat error,\r\n\r\n```java\r\n2019-03-13 15:44:00.419 29716-29786/? A/libc: Fatal signal 6 (SIGABRT), code -6 (SI_TKILL) in tid 29786 (pool-1-thread-1), pid 29716 (net.iGap)\r\n2019-03-13 15:44:00.520 29790-29790/? A/DEBUG: pid: 29716, tid: 29786, name: pool-1-thread-1  >>> net.iGap <<<\r\n2019-03-13 15:44:00.611 29790-29790/? A/DEBUG:     #01 pc 0015c323  /data/app/net.iGap-0_q28BamJmKbuG-mpUGk8w==/lib/arm/librealm-jni.so\r\n2019-03-13 15:44:00.611 29790-29790/? A/DEBUG:     #02 pc 0015c367  /data/app/net.iGap-0_q28BamJmKbuG-mpUGk8w==/lib/arm/librealm-jni.so\r\n2019-03-13 15:44:00.611 29790-29790/? A/DEBUG:     #03 pc 0015c3bf  /data/app/net.iGap-0_q28BamJmKbuG-mpUGk8w==/lib/arm/librealm-jni.so\r\n2019-03-13 15:44:00.611 29790-29790/? A/DEBUG:     #04 pc 000b5bfd  /data/app/net.iGap-0_q28BamJmKbuG-mpUGk8w==/lib/arm/librealm-jni.so\r\n2019-03-13 15:44:00.611 29790-29790/? A/DEBUG:     #05 pc 000b8417  /data/app/net.iGap-0_q28BamJmKbuG-mpUGk8w==/lib/arm/librealm-jni.so\r\n2019-03-13 15:44:00.611 29790-29790/? A/DEBUG:     #06 pc 000b84c5  /data/app/net.iGap-0_q28BamJmKbuG-mpUGk8w==/lib/arm/librealm-jni.so\r\n2019-03-13 15:44:00.611 29790-29790/? A/DEBUG:     #07 pc 000b897d  /data/app/net.iGap-0_q28BamJmKbuG-mpUGk8w==/lib/arm/librealm-jni.so\r\n2019-03-13 15:44:00.611 29790-29790/? A/DEBUG:     #08 pc 00115ae5  /data/app/net.iGap-0_q28BamJmKbuG-mpUGk8w==/lib/arm/librealm-jni.so\r\n2019-03-13 15:44:00.611 29790-29790/? A/DEBUG:     #09 pc 00115fb7  /data/app/net.iGap-0_q28BamJmKbuG-mpUGk8w==/lib/arm/librealm-jni.so\r\n2019-03-13 15:44:00.611 29790-29790/? A/DEBUG:     #10 pc 001160dd  /data/app/net.iGap-0_q28BamJmKbuG-mpUGk8w==/lib/arm/librealm-jni.soa\r\n2019-03-13 15:44:00.611 29790-29790/? A/DEBUG:     #11 pc 001161cf  /data/app/net.iGap-0_q28BamJmKbuG-mpUGk8w==/lib/arm/librealm-jni.so\r\n2019-03-13 15:44:00.611 29790-29790/? A/DEBUG:     #12 pc 00039239  /data/app/net.iGap-0_q28BamJmKbuG-mpUGk8w==/lib/arm/librealm-jni.so\r\n2019-03-13 15:44:00.612 29790-29790/? A/DEBUG:     #13 pc 00039fa1  /data/app/net.iGap-0_q28BamJmKbuG-mpUGk8w==/lib/arm/librealm-jni.so\r\n2019-03-13 15:44:00.612 29790-29790/? A/DEBUG:     #14 pc 0014b205  /data/app/net.iGap-0_q28BamJmKbuG-mpUGk8w==/lib/arm/librealm-jni.so\r\n2019-03-13 15:44:00.612 29790-29790/? A/DEBUG:     #15 pc 00034edb  /data/app/net.iGap-0_q28BamJmKbuG-mpUGk8w==/lib/arm/librealm-jni.so (Java_io_realm_internal_OsObject_nativeCreateNewObjectWithLongPrimaryKey+58)\r\n2019-03-13 15:44:00.612 29790-29790/? A/DEBUG:     #16 pc 001831b1  /data/app/net.iGap-0_q28BamJmKbuG-mpUGk8w==/oat/arm/base.odex (offset 0x181000) (io.realm.internal.OsObject.nativeCreateNewObjectWithLongPrimaryKey [DEDUPED]+160)\r\n2019-03-13 15:44:00.612 29790-29790/? A/DEBUG:     #17 pc 002032f5  /data/app/net.iGap-0_q28BamJmKbuG-mpUGk8w==/oat/arm/base.odex (offset 0x181000) (io.realm.internal.OsObject.createWithPrimaryKey+1124)\r\n2019-03-13 15:44:00.612 29790-29790/? A/DEBUG:     #18 pc 001e6fcb  /data/app/net.iGap-0_q28BamJmKbuG-mpUGk8w==/oat/arm/base.odex (offset 0x181000) (net.iGap.realm.RealmRoomMessage.putOrUpdate+658)\r\n2019-03-13 15:44:00.612 29790-29790/? A/DEBUG:     #19 pc 00212be9  /data/app/net.iGap-0_q28BamJmKbuG-mpUGk8w==/oat/arm/base.odex (offset 0x181000) (net.iGap.realm.RealmRoom.putOrUpdate+6336)\r\n2019-03-13 15:44:00.612 29790-29790/? A/DEBUG:     #27 pc 00924eaa  /data/app/net.iGap-0_q28BamJmKbuG-mpUGk8w==/oat/arm/base.vdex (net.iGap.realm.RealmRoom$12$1.execute+120)\r\n2019-03-13 15:44:00.612 29790-29790/? A/DEBUG:     #32 pc 003ebd0b  /data/app/net.iGap-0_q28BamJmKbuG-mpUGk8w==/oat/arm/base.odex (offset 0x181000) (io.realm.Realm$1.run+138)\r\n2019-03-13 15:44:00.612 29790-29790/? A/DEBUG:     #33 pc 003f96e1  /data/app/net.iGap-0_q28BamJmKbuG-mpUGk8w==/oat/arm/base.odex (offset 0x181000) (io.realm.internal.async.BgPriorityRunnable.run+72)\r\n```\r\n\r\n#### Steps & Code to Reproduce\r\nour project is open source. [iGap Messenger](https://github.com/KianIranian-STDG/iGap-Android). \r\nbut for better guide. at **RealmRoom** object we have a **putOrUpdate** method that check if current primary key is not exist create a new one otherwise get row from db and update info. crash will be occurred in this step.\r\nalso unfortunately we can reproduce this error. so when you run this code usually never get this error.\r\nbut recently a lot of our users faced to this error, and now we have a crisis.\r\n\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): v 5.9.0\r\n\r\nRealm Sync feature enabled: No\r\n\r\nAndroid Studio version: 3.2\r\n\r\nAndroid Build Tools version: 27.0.3\r\n\r\nGradle version: 3.1.4\r\n\r\nWhich Android version and device(s): often version 8 & 9 and sometimes other versions\r\n", "url": "https://github.com/realm/realm-java/issues/6464", "user": "saeedmozaffari", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2019-03-15 10:37:18", "closed": "2019-07-30 12:28:42", "commits": {}, "ttf": 137.00027777777777, "commitsDetails": []}, {"title": "IllegalStateException: Access to invalidated List object", "body": "java.lang.IllegalStateException: Access to invalidated List object\r\n\tat io.realm.internal.OsList.nativeSize(Native Method)\r\n\tat io.realm.internal.OsList.size(SourceFile:189)\r\n\tat io.realm.i.d(SourceFile:1296)\r\n\tat io.realm.RealmList.size(SourceFile:555)\r\n\tat io.realm.RealmList$a.hasNext(SourceFile:1069)\r\n\tat com.easilydo.mail.ui.emaildetail.EmailDetailPageDataProvider.onNotification(SourceFile:1014)\r\n\tat com.easilydo.mail.ui.base.DataProvider$1.onReceive(SourceFile:85)\r\n\r\nthe related codes cause crash:\r\n`for (EdoAttachment attachment : message.attachments) {\r\n                        ...\r\n                    }`\r\nwhere message.attachments is instance of RealmList.\r\nThis crash is reported from HockeyApp, I can't reproduce it.\r\nThe Exception is thrown from native method, I don't know the real causation.\r\nWhat I want to know is: if I use `message.attachments.isValid()` before this line, Will it AVOID THIS CRASH?\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): 5.1.0\r\n\r\nRealm Sync feature enabled: Yes/No\r\n\r\nAndroid Studio version: 3.3\r\n\r\nAndroid Build Tools version: 3.1.3\r\n\r\nGradle version: 4.4\r\n\r\nWhich Android version and device(s): 5.0-8.1", "url": "https://github.com/realm/realm-java/issues/6442", "user": "wlxyhy", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2019-02-27 03:12:41", "closed": "2019-07-30 12:20:42", "commits": {}, "ttf": 153.00027777777777, "commitsDetails": []}, {"title": "Support Realms on external storage that are using FAT32", "body": "Originally discovered on React Native (Android): https://github.com/realm/realm-js/issues/2062\r\nRealm Java is affected by the same problem\r\n\r\nWith https://github.com/realm/realm-object-store/pull/765 merged we should automatically set the `Realm::Config::fifoFallbackPath` to `Context.getCacheDir()`. There is probably no reason to expose the setting in the public API as there are a very limited set of places a user could put these files and I'm hard pressed to find any use cases for not just using the internal cache dir.", "url": "https://github.com/realm/realm-java/issues/6416", "user": "cmelchior", "labels": ["T-Bug-Crash"], "created": "2019-01-30 12:09:45", "closed": "2019-02-18 15:56:06", "commits": {}, "ttf": 19.00027777777778, "commitsDetails": []}, {"title": "Realm Error on \"Realm.getDefaultInstance();\"", "body": "On my Google Play Crashes Report always get this error since the previous Realm version:\r\n\r\n \r\n**io.realm.exceptions.RealmError:** \r\n\r\nat io.realm.internal.OsSharedRealm.nativeGetSharedRealm (OsSharedRealm.java)\r\n  at io.realm.internal.OsSharedRealm.<init> (OsSharedRealm.java:171)\r\n  at io.realm.internal.OsSharedRealm.<init> (OsSharedRealm.java:171)\r\n  at io.realm.internal.OsSharedRealm.getInstance (OsSharedRealm.java:241)\r\n  at io.realm.internal.OsSharedRealm.getInstance (OsSharedRealm.java:231)\r\n  at io.realm.RealmCache.doCreateRealmOrGetFromCache (RealmCache.java:318)\r\n  at io.realm.RealmCache.createRealmOrGetFromCache (RealmCache.java:284)\r\n  at io.realm.Realm.getDefaultInstance (Realm.java:407)\r\n\r\n\r\n-----\r\n\r\nIt caused from this line of code:\r\nRealm realm = Realm.getDefaultInstance();\r\n\r\nMy setup as below:\r\nAndroid Studio Version : 3.3\r\nRealm-gradle-plugin: 5.9.0\r\nTargetSdkVersion 28\r\nCompileSdkVersion 28\r\nBuildToolsVersion \"28.0.3\"", "url": "https://github.com/realm/realm-java/issues/6411", "user": "amalive", "labels": ["O-Community", "T-Bug-Crash"], "created": "2019-01-25 00:42:44", "closed": "2019-07-30 12:20:03", "commits": {}, "ttf": 186.00027777777777, "commitsDetails": []}, {"title": "RealmFileException: No such file or directory", "body": "#### Goal\r\nNo crash\r\n\r\n#### Actual Results\r\nWhen run Realm.getDefaultInstance()  app crashed.\r\n\r\n#### Steps & Code to Reproduce\r\nI just  init realm in application\r\n  Realm.init(this)\r\n    val config = RealmConfiguration.Builder()\r\n      .name(\"tj.realm\")\r\n      .schemaVersion(2)\r\n      .deleteRealmIfMigrationNeeded()\r\n      .build()\r\n    Realm.setDefaultConfiguration(config)\r\n\r\nThen in an Activity use copyToRealmOrUpdate success. But to Another activity crashed on  Realm.getDefaultInstance()\r\n\r\nHere\u2018s the logs:\r\n\r\njava.lang.RuntimeException: Unable to start activity ComponentInfo{tj.tunnel/tj.tunnel.ui.patrol.PatrollingActivity}: io.realm.exceptions.RealmFileException: No such file or directory () (/data/data/tj.tunnel/files/tj.realm) in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_OsSharedRealm.cpp line 101 Kind: ACCESS_ERROR.\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2534)\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2608)\r\n        at android.app.ActivityThread.access$800(ActivityThread.java:178)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1470)\r\n        at android.os.Handler.dispatchMessage(Handler.java:111)\r\n        at android.os.Looper.loop(Looper.java:194)\r\n        at android.app.ActivityThread.main(ActivityThread.java:5637)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at java.lang.reflect.Method.invoke(Method.java:372)\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:959)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:754)\r\n     Caused by: io.realm.exceptions.RealmFileException: No such file or directory () (/data/data/tj.tunnel/files/tj.realm) in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_OsSharedRealm.cpp line 101 Kind: ACCESS_ERROR.\r\n        at io.realm.internal.OsSharedRealm.nativeGetSharedRealm(Native Method)\r\n        at io.realm.internal.OsSharedRealm.<init>(OsSharedRealm.java:171)\r\n        at io.realm.internal.OsSharedRealm.getInstance(OsSharedRealm.java:241)\r\n        at io.realm.BaseRealm.<init>(BaseRealm.java:135)\r\n        at io.realm.BaseRealm.<init>(BaseRealm.java:103)\r\n        at io.realm.Realm.<init>(Realm.java:163)\r\n        at io.realm.Realm.createInstance(Realm.java:499)\r\n        at io.realm.RealmCache.doCreateRealmOrGetFromCache(RealmCache.java:341)\r\n        at io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:284)\r\n        at io.realm.Realm.getDefaultInstance(Realm.java:407)\r\n\r\n\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): v5.8.0\r\n\r\nRealm Sync feature enabled: No\r\n\r\nAndroid Studio version: 3.2.0\r\n\r\nAndroid Build Tools version: 28.0.0\r\n\r\nGradle version: 3.2.1\r\n\r\nWhich Android version and device(s): Mi8 android 8.1\r\n", "url": "https://github.com/realm/realm-java/issues/6370", "user": "stevenduan17", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2018-12-13 08:53:47", "closed": "2019-03-19 15:46:33", "commits": {}, "ttf": 96.00027777777778, "commitsDetails": []}, {"title": "Fatal signal 11 (SIGSEGV), code 1, fault addr 0x8 in tid 26062 (AsyncTask #2)", "body": "#### Goal\r\nRealm should not crash\r\n\r\n#### Actual Results\r\n<!-- What happened? If an exception was thrown please copy/paste the stack trace from Logcat. -->\r\n\r\nWe are seeing the following exception while bulk updating objects using insertOrUpdate. The code that we are executing is running inside an AsyncTask. The crash happens while the transaction is being committed.\r\n\r\n```\r\n12-04 11:38:51.996 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_UncheckedRow_nativeGetString 547604479168\r\n12-04 11:38:51.997 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_OsSharedRealm_nativeIsClosed 547944844864\r\n12-04 11:38:51.997 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_UncheckedRow_nativeGetString 547604479168\r\n12-04 11:38:51.997 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_OsSharedRealm_nativeIsClosed 547944844864\r\n12-04 11:38:51.997 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_UncheckedRow_nativeGetLong 547604479168\r\n12-04 11:38:51.998 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_OsSharedRealm_nativeIsClosed 547944844864\r\n12-04 11:38:51.998 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_UncheckedRow_nativeGetDouble 547604479168\r\n12-04 11:38:51.999 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_OsSharedRealm_nativeIsClosed 547944844864\r\n12-04 11:38:51.999 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_UncheckedRow_nativeGetDouble 547604479168\r\n12-04 11:38:52.000 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_OsSharedRealm_nativeIsClosed 547944844864\r\n12-04 11:38:52.000 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_UncheckedRow_nativeGetString 547604479168\r\n12-04 11:38:52.000 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_OsSharedRealm_nativeIsClosed 547944844864\r\n12-04 11:38:52.000 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_UncheckedRow_nativeGetString 547604479168\r\n12-04 11:38:52.006 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_OsSharedRealm_nativeIsClosed 547944844864\r\n12-04 11:38:52.006 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_UncheckedRow_nativeGetString 547604479168\r\n12-04 11:38:52.006 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_OsSharedRealm_nativeIsClosed 547944844864\r\n12-04 11:38:52.006 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_OsList_nativeCreate 547604479168\r\n12-04 11:38:52.011 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_OsSharedRealm_nativeIsClosed 547944844864\r\n12-04 11:38:52.011 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_OsList_nativeSize 547604800032\r\n12-04 11:38:52.011 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_OsSharedRealm_nativeIsClosed 547944844864\r\n12-04 11:38:52.011 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_OsList_nativeCreate 547604479168\r\n12-04 11:38:52.014 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_OsSharedRealm_nativeIsClosed 547944844864\r\n12-04 11:38:52.014 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_OsList_nativeSize 547604800352\r\n12-04 11:38:52.014 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_OsSharedRealm_nativeIsClosed 547944844864\r\n12-04 11:38:52.014 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_UncheckedRow_nativeGetLong 547604479168\r\n12-04 11:38:52.017 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_OsSharedRealm_nativeIsClosed 547944844864\r\n12-04 11:38:52.017 25452 26062 V REALM_JNI:  --> Java_io_realm_internal_UncheckedRow_nativeGetLong 547604479168\r\n12-04 11:38:52.164  1830  1830 D HeadsetPhoneState: sendDeviceStateChanged. mService=1 mSignal=4 mRoam=0 mBatteryCharge=0\r\n12-04 11:38:52.164  1830  2323 D HeadsetStateMachine: Disconnected process message: 11, size: 0\r\n12-04 11:38:52.863   682   749 D ThermalEngine: sensor_wait: case_therm Wait done.\r\n12-04 11:38:52.864   682   749 D ThermalEngine: sensor_monitor: case_therm Reading 45000 .\r\n12-04 11:38:52.865   682   749 I ThermalEngine: Sensor:case_therm:45000 mC\r\n12-04 11:38:52.865   682   749 D ThermalEngine: update_active_thresh: case_therm Active(1), Hi(1) 46000, Lo(1) 44000, Interval(1) 1000\r\n12-04 11:38:52.865   682   749 D ThermalEngine: sensor_monitor: case_therm Sensor wait.\r\n12-04 11:38:52.865   682   749 D ThermalEngine: sensor_wait: case_therm Wait start. 1000ms\r\n12-04 11:38:53.865   682   749 D ThermalEngine: sensor_wait: case_therm Wait done.\r\n12-04 11:38:53.866   682   749 D ThermalEngine: sensor_monitor: case_therm Reading 45000 .\r\n12-04 11:38:53.866   682   749 I ThermalEngine: Sensor:case_therm:45000 mC\r\n12-04 11:38:53.866   682   749 D ThermalEngine: update_active_thresh: case_therm Active(1), Hi(1) 46000, Lo(1) 44000, Interval(1) 1000\r\n12-04 11:38:53.866   682   749 D ThermalEngine: sensor_monitor: case_therm Sensor wait.\r\n12-04 11:38:53.866   682   749 D ThermalEngine: sensor_wait: case_therm Wait start. 1000ms\r\n12-04 11:38:54.023 25452 26062 F libc    : Fatal signal 11 (SIGSEGV), code 1, fault addr 0x8 in tid 26062 (AsyncTask #2)\r\n12-04 11:38:54.027 13403 13403 W         : debuggerd: handling request: pid=25452 uid=10242 gid=10242 tid=26062\r\n12-04 11:38:54.245 26267 26267 F DEBUG   : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n12-04 11:38:54.245 26267 26267 F DEBUG   : Build fingerprint: 'Xiaomi/santoni/santoni:7.1.2/N2G47H/V9.6.5.0.NAMMIFD:user/release-keys'\r\n12-04 11:38:54.245 26267 26267 F DEBUG   : Revision: '0'\r\n12-04 11:38:54.245 26267 26267 F DEBUG   : ABI: 'arm64'\r\n12-04 11:38:54.246 26267 26267 F DEBUG   : pid: 25452, tid: 26062, name: AsyncTask #2  >>> com.package <<<\r\n12-04 11:38:54.246 26267 26267 F DEBUG   : signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x8\r\n12-04 11:38:54.246 26267 26267 F DEBUG   :     x0   0000007f7fc91018  x1   ffffffffffffffcc  x2   0000000000000000  x3   0000007f7fc915d0\r\n12-04 11:38:54.246 26267 26267 F DEBUG   :     x4   0000000000006b58  x5   0000000000000002  x6   0000007f90f20000  x7   0800000000000000\r\n12-04 11:38:54.246 26267 26267 F DEBUG   :     x8   0000000000000000  x9   0000000000000002  x10  0000000000000001  x11  0000000000000000\r\n12-04 11:38:54.246 26267 26267 F DEBUG   :     x12  0800000000000000  x13  0800000000000000  x14  0800000000000000  x15  00000000000000d8\r\n12-04 11:38:54.246 26267 26267 F DEBUG   :     x16  0000007f965d6dd8  x17  0000007fb30c7edc  x18  00000000000000cf  x19  0000000012000000\r\n12-04 11:38:54.246 26267 26267 F DEBUG   :     x20  0000007f7fc91018  x21  0000000000000033  x22  ffffffffffffffcc  x23  0000000000000000\r\n12-04 11:38:54.246 26267 26267 F DEBUG   :     x24  0000000000000000  x25  0000000000000000  x26  ffffffffffffffcc  x27  45ac07fe2af149a1\r\n12-04 11:38:54.246 26267 26267 F DEBUG   :     x28  0000000000000005  x29  0000007f96aae4a0  x30  0000007f96335004\r\n12-04 11:38:54.246 26267 26267 F DEBUG   :     sp   0000007f96aae400  pc   0000007f963360a4  pstate 0000000060000000\r\n12-04 11:38:54.259 26267 26267 F DEBUG   :\r\n12-04 11:38:54.259 26267 26267 F DEBUG   : backtrace:\r\n12-04 11:38:54.260 26267 26267 F DEBUG   :     #00 pc 00000000003140a4  /data/app/com.package-1/lib/arm64/librealm-jni.so\r\n12-04 11:38:54.260 26267 26267 F DEBUG   :     #01 pc 0000000000313000  /data/app/com.package-1/lib/arm64/librealm-jni.so\r\n12-04 11:38:54.260 26267 26267 F DEBUG   :     #02 pc 000000000037ea68  /data/app/com.package-1/lib/arm64/librealm-jni.so\r\n12-04 11:38:54.260 26267 26267 F DEBUG   :     #03 pc 00000000000c2390  /data/app/com.package-1/lib/arm64/librealm-jni.so\r\n12-04 11:38:54.260 26267 26267 F DEBUG   :     #04 pc 0000000000141234  /data/app/com.package-1/lib/arm64/librealm-jni.so (Java_io_realm_internal_UncheckedRow_nativeGetLong+100)\r\n12-04 11:38:54.260 26267 26267 F DEBUG   :     #05 pc 0000000001744440  /data/app/com.package-1/oat/arm64/base.odex (offset 0x1538000)\r\n```\r\n\r\n#### Steps & Code to Reproduce\r\n\r\nThis crash is very difficult to reproduce, however it happens frequently where the dataset is large (current file is 292 MB) and while we are trying to update multiple objects. Once this crash happens, it consistently fails at the same location. I currently have a device on which it is crashing at the exact same location.\r\n\r\n```\r\n        final Realm realm = <get-relevant-realm>\r\n        realm.executeTransaction(new Realm.Transaction() {\r\n            @Override\r\n            public void execute(Realm realm) {\r\n                 realm.insertOrUpdate(objects);\r\n            }\r\n        });\r\n        realm.close();\r\n```\r\n\r\n<!-- What steps resulted in the crash? Please show any relevant code or steps that can be used to -->\r\n<!-- reproduce it, including any Realm model classes used. Even better is a full sample project -->\r\n<!-- that can reproduce the crash. Code can be shared privately at help@realm.io if needed. -->\r\n\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): 5.8.0\r\n\r\nRealm Sync feature enabled: No\r\n\r\nAndroid Studio version: 3.2.1\r\n\r\nAndroid Build Tools version: 28.0.3\r\n\r\nGradle version: 4.6\r\n\r\nWhich Android version and device(s): Android 7.1.2, Xiaomi Redmi 4\r\n\r\n\r\n", "url": "https://github.com/realm/realm-java/issues/6362", "user": "mehulsutariya", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2018-12-04 06:33:26", "closed": "2019-11-05 10:38:31", "commits": {}, "ttf": 336.0002777777778, "commitsDetails": []}, {"title": "Error: Invoke-customs are only supported starting with Android O", "body": "#### Goal\r\n<!-- What do you want to achieve? -->\r\nCannot build realm with 5.8.0\r\n\r\n#### Actual Results\r\nError: Invoke-customs are only supported starting with Android O (--min-api 26)\r\n\r\n#### Steps & Code to Reproduce\r\n\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): ?\r\n5.8.0\r\n\r\nRealm Sync feature enabled: Yes/No\r\n\r\nAndroid Studio version: ?\r\n3.2.1\r\n\r\nAndroid Build Tools version: ?\r\n28\r\n\r\nGradle version: ?\r\n3.2.1\r\n\r\nWhich Android version and device(s): ?\r\n21\r\n", "url": "https://github.com/realm/realm-java/issues/6300", "user": "QiLiKing", "labels": ["O-Community", "T-Bug-Crash"], "created": "2018-11-15 07:43:04", "closed": "2019-01-10 12:26:19", "commits": {}, "ttf": 56.000277777777775, "commitsDetails": []}, {"title": "Fatal signal 6 (SIGABRT), code -6 in tid 2110", "body": "**Goal**\r\nload list of items(grid) with pagination \r\n\r\n**Actual Results**\r\nApp is  close when i scroll down quickly(paginate and get old list).\r\n\r\n **Steps & Code to Reproduce**\r\nStep 1. ) When i Scroll Down the list quickly my app is close and base on the logcat \r\n\"Fatal signal 6 (SIGABRT), code -6 in tid 21105 (pool-5-thread-1)\". my realm has encryption and this bug only occurs when i include encryption. when i tried to exclude the encryption i never encountered this issue. here's the logcat result,\r\n\r\n> \r\n`2018-11-14 17:20:04.663 20252-21105/com.microslt.eyesup E/REALM: /home/jenkins/workspace/m_realm-core_release_5.12.0-HBDBM7BPZZYOPM3OCILXX56LZZVX4LYWOZTG7SWZOFHRN62GFPOA@2/src/realm/group_writer.cpp:589: [realm-core-5.12.0] Assertion failed: prev_ref + prev_size <= ref with (prev_ref, prev_size, ref, i, limit) =  [0, 8, 0, 1, 399]\r\n    <backtrace not supported on this platform>!!! IMPORTANT: Please send this log and info about Realm SDK version and other relevant reproduction info to help@realm.io.\r\n    \r\n    --------- beginning of crash\r\n2018-11-14 17:20:04.664 20252-21105/com.microslt.eyesup A/libc: Fatal signal 6 (SIGABRT), code -6 in tid 21105 (pool-5-thread-1)\r\n2018-11-14 17:20:04.670 3007-3148/? D/InputReader: Input event(3): value=0 when=50467919643000\r\n2018-11-14 17:20:04.670 3007-3148/? D/InputReader: Input event(3): value=0 when=50467919643000\r\n2018-11-14 17:20:04.670 3007-3148/? I/InputReader: Touch event's action is 0x1 (deviceType=0) [pCnt=1, s=] when=50467919643000\r\n2018-11-14 17:20:04.670 3007-3147/? I/InputDispatcher: Delivering touch to (20252): action: 0x1, toolType: 1\r\n2018-11-14 17:20:04.692 20252-20252/com.microslt.eyesup D/ViewRootImpl@28612f8[MainActivity]: ViewPostIme pointer 1\r\n2018-11-14 17:20:04.727 20252-20252/com.microslt.eyesup D/loadMOre: visibleItemCount: 4.0 lastVisibleItem: 22 prefetchFactor: 6 totalItemCount: 28 findlast: 22\r\n2018-11-14 17:20:04.727 20252-20252/com.microslt.eyesup D/hashtagPosts: base loadMore: true\r\n2018-11-14 17:20:04.730 4133-4133/? D/io_stats: !@ 179,0 r 817946 23061680 w 565120 11194840 d 42132 4389628 f 205959 205873 iot 853600 841492 th 51200 0 0 pt 0 inp 0 0 50467.978\r\n2018-11-14 17:20:04.771 3007-3148/? D/InputReader: Input event(3): value=1 when=50468020536000\r\n2018-11-14 17:20:04.771 3007-3148/? D/InputReader: Input event(3): value=1 when=50468020536000\r\n2018-11-14 17:20:04.771 3007-3148/? I/InputReader: Touch event's action is 0x0 (deviceType=0) [pCnt=1, s=0.10147 ] when=50468020536000\r\n2018-11-14 17:20:04.771 3007-3147/? I/InputDispatcher: Delivering touch to (3433): action: 0x4, toolType: 1\r\n2018-11-14 17:20:04.771 3007-3147/? I/InputDispatcher: Delivering touch to (20252): action: 0x0, toolType: 1\r\n2018-11-14 17:20:04.781 21108-21108/? I/crash_dump64: obtaining output fd from tombstoned\r\n2018-11-14 17:20:04.782 2584-2584/? I//system/bin/tombstoned: received crash request for pid 20252\r\n2018-11-14 17:20:04.785 21108-21108/? I/crash_dump64: performing dump of process 20252 (target tid = 21105)\r\n2018-11-14 17:20:04.785 21108-21108/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n2018-11-14 17:20:04.785 21108-21108/? A/DEBUG: Build fingerprint: 'samsung/a7y17ltexx/a7y17lte:8.0.0/R16NW/A720FXXU6CRJ7:user/release-keys'\r\n2018-11-14 17:20:04.785 21108-21108/? A/DEBUG: Revision: '6'\r\n2018-11-14 17:20:04.785 21108-21108/? A/DEBUG: ABI: 'arm64'\r\n2018-11-14 17:20:04.785 21108-21108/? A/DEBUG: pid: 20252, tid: 21105, name: pool-5-thread-1  >>> com.microslt.eyesup <<<\r\n2018-11-14 17:20:04.785 21108-21108/? A/DEBUG: signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------\r\n2018-11-14 17:20:04.785 21108-21108/? A/DEBUG:     x0   0000000000000000  x1   0000000000005271  x2   0000000000000006  x3   0000000000000008\r\n2018-11-14 17:20:04.785 21108-21108/? A/DEBUG:     x4   fefeff7ba087ceff  x5   fefeff7ba087ceff  x6   fefeff7ba087ceff  x7   7f7f7f7fffffff7f\r\n2018-11-14 17:20:04.785 21108-21108/? A/DEBUG:     x8   0000000000000083  x9   b3e8dad7162fe7ff  x10  0000000000000000  x11  0000000000000001\r\n2018-11-14 17:20:04.785 21108-21108/? A/DEBUG:     x12  ffffffffffffffff  x13  ffffffffffffffff  x14  ffffffffff000000  x15  ffffffffffffffff\r\n2018-11-14 17:20:04.785 21108-21108/? A/DEBUG:     x16  0000007cc47262f8  x17  0000007cc46c7354  x18  00000000000000d8  x19  0000000000004f1c\r\n2018-11-14 17:20:04.785 21108-21108/? A/DEBUG:     x20  0000000000005271  x21  0000007c9156b680  x22  0000007ca17a7268  x23  0000007c9156bbd0\r\n2018-11-14 17:20:04.786 21108-21108/? A/DEBUG:     x24  0000000000000001  x25  0000007c9156ba68  x26  0000000000000018  x27  0000007c93486000\r\n2018-11-14 17:20:04.786 21108-21108/? A/DEBUG:     x28  ffffffffffffffff  x29  0000007c9156b5c0  x30  0000007cc4679bd4\r\n2018-11-14 17:20:04.786 21108-21108/? A/DEBUG:     sp   0000007c9156b580  pc   0000007cc46c735c  pstate 0000000060000000\r\n2018-11-14 17:20:04.810 21108-21108/? A/DEBUG: backtrace:\r\n2018-11-14 17:20:04.810 21108-21108/? A/DEBUG:     #00 pc 000000000006b35c  /system/lib64/libc.so (tgkill+8)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #01 pc 000000000001dbd0  /system/lib64/libc.so (abort+88)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #02 pc 00000000003f7494  /data/app/com.microslt.eyesup-bVqVjiOiwO3mIgOrhycPvA==/lib/arm64/librealm-jni.so\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #03 pc 00000000003f74f8  /data/app/com.microslt.eyesup-bVqVjiOiwO3mIgOrhycPvA==/lib/arm64/librealm-jni.so\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #04 pc 00000000003f7640  /data/app/com.microslt.eyesup-bVqVjiOiwO3mIgOrhycPvA==/lib/arm64/librealm-jni.so\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #05 pc 0000000000394374  /data/app/com.microslt.eyesup-bVqVjiOiwO3mIgOrhycPvA==/lib/arm64/librealm-jni.so\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #06 pc 0000000000394614  /data/app/com.microslt.eyesup-bVqVjiOiwO3mIgOrhycPvA==/lib/arm64/librealm-jni.so\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #07 pc 000000000038ff7c  /data/app/com.microslt.eyesup-bVqVjiOiwO3mIgOrhycPvA==/lib/arm64/librealm-jni.so\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #08 pc 0000000000390224  /data/app/com.microslt.eyesup-bVqVjiOiwO3mIgOrhycPvA==/lib/arm64/librealm-jni.so\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #09 pc 0000000000391e94  /data/app/com.microslt.eyesup-bVqVjiOiwO3mIgOrhycPvA==/lib/arm64/librealm-jni.so\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #10 pc 000000000019a808  /data/app/com.microslt.eyesup-bVqVjiOiwO3mIgOrhycPvA==/lib/arm64/librealm-jni.so\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #11 pc 000000000017e7c0  /data/app/com.microslt.eyesup-bVqVjiOiwO3mIgOrhycPvA==/lib/arm64/librealm-jni.so\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #12 pc 00000000000f5d6c  /data/app/com.microslt.eyesup-bVqVjiOiwO3mIgOrhycPvA==/lib/arm64/librealm-jni.so (Java_io_realm_internal_OsSharedRealm_nativeCommitTransaction+48)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #13 pc 0000000000511300  /system/lib64/libart.so (art_quick_generic_jni_trampoline+144)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #14 pc 0000000000508238  /system/lib64/libart.so (art_quick_invoke_static_stub+600)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #15 pc 00000000000d8530  /system/lib64/libart.so (_ZN3art9ArtMethod6InvokeEPNS_6ThreadEPjjPNS_6JValueEPKc+260)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #16 pc 0000000000282054  /system/lib64/libart.so (_ZN3art11interpreter34ArtInterpreterToCompiledCodeBridgeEPNS_6ThreadEPNS_9ArtMethodEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+352)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #17 pc 000000000027c71c  /system/lib64/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+672)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #18 pc 00000000004f0ca4  /system/lib64/libart.so (MterpInvokeStatic+468)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #19 pc 00000000004f9a14  /system/lib64/libart.so (ExecuteMterpImpl+14612)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #20 pc 000000000025d498  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+444)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #21 pc 0000000000263b98  /system/lib64/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+212)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #22 pc 000000000027c6fc  /system/lib64/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+640)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #23 pc 00000000004ef680  /system/lib64/libart.so (MterpInvokeVirtual+612)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #24 pc 00000000004f9894  /system/lib64/libart.so (ExecuteMterpImpl+14228)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #25 pc 000000000025d498  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+444)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #26 pc 0000000000263b98  /system/lib64/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+212)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #27 pc 000000000027c6fc  /system/lib64/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+640)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #28 pc 00000000004efd04  /system/lib64/libart.so (MterpInvokeSuper+1440)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #29 pc 00000000004f9914  /system/lib64/libart.so (ExecuteMterpImpl+14356)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #30 pc 000000000025d498  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+444)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #31 pc 0000000000263b98  /system/lib64/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+212)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #32 pc 000000000027c6fc  /system/lib64/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+640)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #33 pc 00000000004ef680  /system/lib64/libart.so (MterpInvokeVirtual+612)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #34 pc 00000000004f9894  /system/lib64/libart.so (ExecuteMterpImpl+14228)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #35 pc 000000000025d498  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+444)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #36 pc 0000000000263b98  /system/lib64/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+212)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #37 pc 000000000027c6fc  /system/lib64/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+640)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #38 pc 00000000004f06cc  /system/lib64/libart.so (MterpInvokeInterface+1732)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #39 pc 00000000004f9a94  /system/lib64/libart.so (ExecuteMterpImpl+14740)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #40 pc 000000000025d498  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+444)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #41 pc 0000000000263b98  /system/lib64/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+212)\r\n2018-11-14 17:20:04.811 21108-21108/? A/DEBUG:     #42 pc 000000000027c6fc  /system/lib64/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+640)\r\n2018-11-14 17:20:04.812 21108-21108/? A/DEBUG:     #43 pc 00000000004f06cc  /system/lib64/libart.so (MterpInvokeInterface+1732)\r\n2018-11-14 17:20:04.812 21108-21108/? A/DEBUG:     #44 pc 00000000004f9a94  /system/lib64/libart.so (ExecuteMterpImpl+14740)\r\n2018-11-14 17:20:04.812 21108-21108/? A/DEBUG:     #45 pc 000000000025d498  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+444)\r\n2018-11-14 17:20:04.812 21108-21108/? A/DEBUG:     #46 pc 0000000000263b98  /system/lib64/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+212)\r\n2018-11-14 17:20:04.812 21108-21108/? A/DEBUG:     #47 pc 000000000027c6fc  /system/lib64/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+640)\r\n2018-11-14 17:20:04.812 21108-21108/? A/DEBUG:     #48 pc 00000000004f06cc  /system/lib64/libart.so (MterpInvokeInterface+1732)\r\n2018-11-14 17:20:04.812 21108-21108/? A/DEBUG:     #49 pc 00000000004f9a94  /system/lib64/libart.so (ExecuteMterpImpl+14740)\r\n2018-11-14 17:20:04.812 21108-21108/? A/DEBUG:     #50 pc 000000000025d498  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+444)\r\n2018-11-14 17:20:04.812 21108-21108/? A/DEBUG:     #51 pc 0000000000263b98  /system/lib64/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+212)\r\n2018-11-14 17:20:04.812 21108-21108/? A/DEBUG:     #52 pc 000000000027c6fc  /system/lib64/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+640)\r\n2018-11-14 17:20:04.812 21108-21108/? A/DEBUG:     #53 pc 00000000004f06cc  /system/lib64/libart.so (MterpInvokeInterface+1732)\r\n2018-11-14 17:20:04.812 21108-21108/? A/DEBUG:     #54 pc 00000000004f9a94  /system/lib64/libart.so (ExecuteMterpImpl+14740)\r\n2018-11-14 17:20:04.812 21108-21108/? A/DEBUG:     #55 pc 000000000025d498  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+444)\r\n2018-11-14 17:20:04.812 21108-21108/? A/DEBUG:     #56 pc 0000000000263b98  /system/lib64/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+212)\r\n2018-11-14 17:20:04.812 21108-21108/? A/DEBUG:     #57 pc 000000000027c6fc  /system/lib64/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+640)\r\n2018-11-14 17:20:04.812 21108-21108/? A/DEBUG:     #58 pc 00000000004ef680  /system/lib64/libart.so (MterpInvokeVirtual+612)\r\n2018-11-14 17:20:04.812 21108-21108/? A/DEBUG:     #59 pc 00000000004f9894  /system/lib64/libart.so (ExecuteMterpImpl+14228)\r\n2018-11-14 17:20:04.812 21108-21108/? A/DEBUG:     #60 pc 000000000025d498  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+444)\r\n2018-11-14 17:20:04.812 21108-21108/? A/DEBUG:     #61 pc 0000000000263b98  /system/lib64/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+212)\r\n2018-11-14 17:20:04.812 21108-21108/? A/DEBUG:     #62 pc 000000000027c6fc  /system/lib64/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+640)\r\n2018-11-14 17:20:04.812 21108-21108/? A/DEBUG:     #63 pc 00000000004f06cc  /system/lib64/libart.so (MterpInvokeInterface+1732)`\r\n> \r\n\r\nRealm version(s): 5.8.0\r\n\r\nRealm Sync feature enabled: No\r\n\r\nAndroid Studio version: 3.2.1\r\n\r\nAndroid Build Tools version: 28.0.2\r\n\r\nGradle version: 3.2.0\r\n\r\nWhich Android version and device(s): android 8.0 samsung a7\r\n", "url": "https://github.com/realm/realm-java/issues/6298", "user": "dn0myaraymond", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2018-11-14 09:42:34", "closed": "2019-07-30 09:43:01", "commits": {}, "ttf": 258.0002777777778, "commitsDetails": []}, {"title": "kapt does not work in Kotlin 1.3.0. Results in \"cannot find symbol\"", "body": "#### Goal\r\nI want to add an interface to a given class and lazy-load its values.\r\n\r\n#### Actual Results\r\nCompile-time error \"error: cannot find symbol\"\r\n\r\n#### Steps & Code to Reproduce\r\nI'm using the gradle-plugins `kotlin-kapt` and `realm-android` and these two **combined** cause this. \r\n\r\nMy demo-project (github.com/hardysim/bylazy-demo) does not compile in the current state and starts working when you remove either `kotlin-kapt` or `realm-android`.\r\nThere is *no usage of realm* but adding the plugin.\r\n\r\nThis uses to work with Kotlin 1.2.71 but is now broken with Kotlin 1.3.0.\r\nMaybe it's related to kotlin / kapt and not to realm but because the combination of both breaks things I wanted to look here for help as well.\r\n\r\nThis originates from https://github.com/lisawray/groupie/issues/218 and https://stackoverflow.com/questions/53168385/\r\n\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): 5.8.0\r\n\r\nRealm Sync feature enabled: No\r\n\r\nAndroid Studio version: 3.2.1\r\n\r\nAndroid Build Tools version: 28\r\n\r\nGradle version: 4.10.2\r\n", "url": "https://github.com/realm/realm-java/issues/6289", "user": "hardysim", "labels": ["O-Community", "T-Bug-Crash"], "created": "2018-11-07 10:17:23", "closed": "2018-11-07 13:11:48", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Unable to open a realm at path. ACCESS_ERROR: Invalid mnemonic", "body": "#### Goal\r\nWe have been receiving reports in Crashlytics of crashes due to issues with Realm. These seem to have gotten more frequent in switching from Realm 5.5.0 to 5.7.0. I was able to find the crash myself while looking into a different issue. I have a copy of the corrupted Realm database, which will not open in Realm browser - it says it needs a password, which is not needed for uncorrupted versions of the database. I can send the corrupted database via email. I'm told by another developer that we only access Realm from a single thread. \r\n\r\n#### Actual Results\r\n\r\n`10-29 15:29:02.574 31851-31851/com.mycompany.dev E/AndroidRuntime: FATAL EXCEPTION: main\r\n    Process: com.mycompany.dev, PID: 31851\r\n    java.lang.RuntimeException: Unable to start activity ComponentInfo{com.mycompany.dev/com.mycompany.myfeature.myfeatureActivity}: io.realm.exceptions.RealmFileException: Unable to open a realm at path '/data/data/com.mycompany.dev/files/myfeaturedb.realm': Invalid mnemonic. top_ref[0]: 109600030316, top_ref[1]: F3267A703049192, mnemonic: 1F EE EE 35, fmt[0]: 146, fmt[1]: 94, flags: 11. (Invalid mnemonic. top_ref[0]: 109600030316, top_ref[1]: F3267A703049192, mnemonic: 1F EE EE 35, fmt[0]: 146, fmt[1]: 94, flags: 11) (/data/data/com.mycompany.dev/files/myfeaturedb.realm) in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_OsSharedRealm.cpp line 101 Kind: ACCESS_ERROR.`\r\n\r\n#### Steps & Code to Reproduce\r\nThe crash occurred first when trying to replicate another issue. The process was starting the app and rapidly backgrounding it many times in a row. The device was connected to Charles Proxy at the time and Charles seemed to be playing up: it looked like it was returning 200 but with no body or headers. I'm not sure if I'm interpreting what Charles was returning correctly.  \r\n\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): 5.7.0\r\n\r\nRealm Sync feature enabled: No\r\n\r\nAndroid Studio version: 3.2.1\r\n\r\nAndroid Build Tools version: 3.2.1 ? target/compileSdk 28\r\n\r\nGradle version: 4.10.2\r\n\r\nWhich Android version and device(s): 5.0, Asus Z00AD (Though other Android versions and devices in Fabric Crashlytics)\r\n", "url": "https://github.com/realm/realm-java/issues/6257", "user": "TTransmit", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2018-10-29 18:12:23", "closed": "2019-11-05 10:38:08", "commits": {}, "ttf": 371.0002777777778, "commitsDetails": []}, {"title": "group_writer.cpp: Assertion failed: prev_ref + prev_size <= ref", "body": "Hello When i want to update or add new data to realm i got this error : \r\n\r\n**E/REALM: /home/jenkins/workspace/m_realm-core_release_5.10.2-JLYB4463STYEHDZYG5MCNCHSR6P7KGQAINRPSTQDTS37Q72ZT66Q@2/src/realm/group_writer.cpp:597: [realm-core-5.10.2] Assertion failed: prev_ref + prev_size <= ref with (prev_ref, prev_size, ref, i, limit) =  [4251816, 8, 4251816, 1461, 28907]\r\n         <backtrace not supported on this platform>!!! IMPORTANT: Please send this log and info about Realm SDK version and other relevant reproduction info to help@realm.io.\r\nA/libc: Fatal signal 6 (SIGABRT), code -6 in tid 19258 \r\n\r\n        [ 10-26 12:04:41.551  1253: 1253 W/         ]\r\n        debuggerd: handling request: pid=19258 uid=10080 gid=10080 tid=19258**\r\n------------------\r\nAndroid studio 3.0.1\r\nRealm Version : 5.7.0\r\n\r\nHow TO Solve ?", "url": "https://github.com/realm/realm-java/issues/6253", "user": "morteza-moradi", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2018-10-26 08:38:27", "closed": "2019-07-30 09:41:12", "commits": {}, "ttf": 277.0002777777778, "commitsDetails": []}, {"title": "tgkill", "body": "#### ERROR got in play console android vitals\nbacktrace:\n  #00  pc 000000000006b558  /system/lib64/libc.so (tgkill+8)\n  #01  pc 00000000000689dc  /system/lib64/libc.so (pthread_kill+64)\n  #02  pc 0000000000023f28  /system/lib64/libc.so (raise+24)\n  #03  pc 000000000001c9ac  /system/lib64/libc.so (abort+52)\n  #04  pc 0000000000431fac  /system/lib64/libart.so (_ZN3art7Runtime5AbortEPKc+456)\n  #05  pc 00000000000e5e8c  /system/lib64/libart.so (_ZN3art10LogMessageD2Ev+1576)\n  #06  pc 00000000002efb44  /system/lib64/libart.so (_ZN3art9JavaVMExt8JniAbortEPKcS2_+2172)\n  #07  pc 00000000002efe18  /system/lib64/libart.so (_ZN3art9JavaVMExt9JniAbortVEPKcS2_St9__va_list+120)\n  #08  pc 0000000000102b58  /system/lib64/libart.so (_ZN3art11ScopedCheck6AbortFEPKcz+156)\n  #09  pc 0000000000102568  /system/lib64/libart.so (_ZN3art11ScopedCheck11CheckThreadEP7_JNIEnv+544)\n  #10  pc 00000000001000a0  /system/lib64/libart.so (_ZN3art11ScopedCheck5CheckERNS_18ScopedObjectAccessEbPKcPNS_12JniValueTypeE+1120)\n  #11  pc 0000000000103dc4  /system/lib64/libart.so (_ZN3art8CheckJNI6NewRefEPKcP7_JNIEnvP8_jobjectNS_15IndirectRefKindE+632)\n  #12  pc 00000000000c2c2c  /data/app/<package name>-2/lib/arm64/librealm-jni.so\n  #13  pc 00000000000bccfc  /data/app/<package name>-2/lib/arm64/librealm-jni.so\n  #14  pc 0000000000123594  /data/app/<package name>-2/lib/arm64/librealm-jni.so\n  #15  pc 0000000000123af4  /data/app/<package name>-2/lib/arm64/librealm-jni.so\n  #16  pc 000000000010c374  /data/app/<package name>-2/lib/arm64/librealm-jni.so\n  #17  pc 00000000000f08cc  /data/app/<package name>-2/lib/arm64/librealm-jni.so\n  #18  pc 000000000006c6d0  /data/app/<package name>-2/lib/arm64/librealm-jni.so (Java_io_realm_internal_OsSharedRealm_nativeCommitTransaction+64)\n  #19  pc 0000000001d6e584  /data/app/<package name>-2/oat/arm64/base.odex\n\n#### Version of Realm and tooling\n\nRealm version(s):  \"io.realm:realm-gradle-plugin:5.7.0\"\n\nRealm Sync feature enabled: Yes\n\nAndroid Studio version: 3.0.1\n\nAndroid Build Tools version: '28.0.3'\n\nGradle version: 3.2.0-rc03\n\nWhich Android version and device(s):  Xiaomi Redmi 4X (santoni), Android 7.1", "url": "https://github.com/realm/realm-java/issues/6244", "user": "NikunjKhunt", "labels": ["O-Community", "Pipeline-Waiting-for-User", "Reproduction-Required", "T-Bug-Crash"], "created": "2018-10-23 07:00:42", "closed": "2019-11-27 13:47:36", "commits": {}, "ttf": 400.0002777777778, "commitsDetails": []}, {"title": "RealmFileException: Top ref outside file", "body": "#### Actual Results\r\nCaused by io.realm.exceptions.RealmFileException: Unable to open a realm at path '/data/data/packageName/files/file': Top ref outside file (size = 268484608). top_ref[0]: FF50828, top_ref[1]: 100473C0, mnemonic: 54 2D 44 42, fmt[0]: 9, fmt[1]: 9, flags: 1. (Top ref outside file (size = 268484608). top_ref[0]: FF50828, top_ref[1]: 100473C0, mnemonic: 54 2D 44 42, fmt[0]: 9, fmt[1]: 9, flags: 1) (/data/data/packageName/files/file) in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_OsSharedRealm.cpp line 101\r\n       at io.realm.internal.OsSharedRealm.nativeGetSharedRealm(OsSharedRealm.java)\r\n       at io.realm.internal.OsSharedRealm.<init>(OsSharedRealm.java:171)\r\n       at io.realm.internal.OsSharedRealm.getInstance(OsSharedRealm.java:241)\r\n       at io.realm.internal.OsSharedRealm.getInstance(OsSharedRealm.java:231)\r\n       at io.realm.RealmCache.doCreateRealmOrGetFromCache(RealmCache.java:319)\r\n       at io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:282)\r\n       at io.realm.Realm.getInstance(Realm.java:378)\r\n       at in.bizanalyst.utils.RealmUtils.getRealm(RealmUtils.java:65)\r\n       at in.bizanalyst.utils.RealmUtils.getCurrentRealm(RealmUtils.java:76)\r\n       at in.bizanalyst.activity.MainActivity.onCreate(MainActivity.java:201)\r\n       at android.app.Activity.performCreate(Activity.java:6955)\r\n       at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1126)\r\n       at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2927)\r\n       at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3045)\r\n       at android.app.ActivityThread.-wrap14(ActivityThread.java)\r\n       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1642)\r\n       at android.os.Handler.dispatchMessage(Handler.java:102)\r\n       at android.os.Looper.loop(Looper.java:154)\r\n       at android.app.ActivityThread.main(ActivityThread.java:6776)\r\n       at java.lang.reflect.Method.invoke(Method.java)\r\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1496)\r\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1386)\r\n\r\n#### Steps & Code to Reproduce\r\nNot reproducable\r\n\r\nVersion of Realm and tooling\r\nRealm version(s): 5.4.1\r\n\r\nRealm Sync feature enabled: Yes\r\n\r\nAndroid Studio version: Yes\r\n\r\nAndroid Build Tools version: 27.0.3\r\n\r\nGradle version: 3.4.1\r\n\r\nWhich Android version and device(s): All", "url": "https://github.com/realm/realm-java/issues/6239", "user": "ankursharma234", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2018-10-20 10:48:20", "closed": "2019-11-05 10:37:50", "commits": {}, "ttf": 380.0002777777778, "commitsDetails": []}, {"title": "RealmFileException - INCOMPATIBLE_LOCK_FILE", "body": "#### Goal\r\n\r\nTo not crash when starting the application\r\n\r\n#### Expected Results\r\n\r\nThe app to run smoothly\r\n\r\n#### Actual Results\r\n\r\nException: io.realm.exceptions.RealmFileException\r\nRealm file is currently open in another process which cannot share access with this process. All processes sharing a single file must be the same architecture. (Incompatible lock file. Shared info version doesn't match, 771 10.) (/data/data/my.package.name/files/data.realm) in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_OsSharedRealm.cpp line 101 Kind: INCOMPATIBLE_LOCK_FILE.\r\n\r\nio.realm.internal.OsSharedRealm.nativeGetSharedRealm (Native Method)\r\nio.realm.internal.OsSharedRealm. (SourceFile:171)\r\nio.realm.internal.OsSharedRealm.getInstance (SourceFile:241)\r\nio.realm.BaseRealm. (SourceFile:134)\r\nio.realm.BaseRealm. (SourceFile:103)\r\nio.realm.Realm. (SourceFile:161)\r\nio.realm.Realm.createInstance (SourceFile:446)\r\nio.realm.RealmCache.doCreateRealmOrGetFromCache (SourceFile:342)\r\nio.realm.RealmCache.createRealmOrGetFromCache (SourceFile:282)\r\nio.realm.Realm.getInstance (SourceFile:375)\r\nmy.package.name.realm.DB.getInstance (SourceFile:1104)\r\nmy.package.name.realm.DB.getDataRealm (SourceFile:1055)\r\nmy.package.name.realm.DB.getIdsThatMatchPropertyIds (SourceFile:559)\r\nmy.package.name.util.user_prefs.PreferenceManager.getItemsOfAllPreferences (SourceFile:761)\r\nmy.package.name.util.user_prefs.PreferenceManager.getBasePreferenceProportions (SourceFile:784)\r\nmy.package.name.util.user_prefs.PreferenceManager.getTargetPreferenceProportions (SourceFile:806)\r\nmy.package.name.util.user_prefs.PreferenceManager.lambda$getItemsForYou$1$PreferenceManager (SourceFile:178)\r\nmy.package.name.util.user_prefs.PreferenceManager$$Lambda.run (Unknown Source:4)\r\nandroid.os.Handler.handleCallback (Handler.java:789)\r\nandroid.os.Handler.dispatchMessage (Handler.java:98)\r\nandroid.os.Looper.loop (Looper.java:164)\r\nandroid.os.HandlerThread.run (HandlerThread.java:65)\r\n\r\n#### Steps & Code to Reproduce\r\n\r\nSadly i can't reproduce it manually.\r\nThe error has been reported from production by a crash-reporting tool.\r\n\r\n#### Code Sample\r\n\r\nIt's a quite big project, and the code mentioned above is simply the first time that Realm is called upon the app being opened, so i don't think the issues is specifically located in that code, but more of a general issue?\r\nIf there are any specific parts that you think would be interesting, let me know and i can post those elements.\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 5.5.0\r\n\r\nRealm sync feature enabled: No\r\n\r\nAndroid Studio version: 3.1.4\r\n\r\nWhich Android version and device: \r\nReported on 2 devices so far:\r\n- Samsung Galaxy S7 - Android 8.0.X\r\n- Huawei P20 Lite Dual Sim LTE-A (ANE-L21) - Android 8.0.X\r\n", "url": "https://github.com/realm/realm-java/issues/6179", "user": "Moonbloom", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2018-09-21 22:58:46", "closed": "2019-03-19 13:59:43", "commits": {}, "ttf": 178.00027777777777, "commitsDetails": []}, {"title": "Assertion Failed - OsSharedRealm$SchemaChangedCallback", "body": "@finnschiermer commented on [Thu May 03 2018](https://github.com/realm/realm-object-store/issues/651)\n\n@ianpward commented on [Thu May 03 2018](https://github.com/realm/realm-core-private/issues/143)\n\nFreshdesk Ticket ID: <a href='https://support.realm.io/helpdesk/tickets/572' target='_blank'>572</a> <br/> Freshdesk Ticket Agent: Unassigned<br/>Freshdesk Ticket Agent Email: Unavailable<br/>Ticket Priority: Low<br/>Freshdesk Ticket Description:<div>\n<span></span>My app crashed when starting , here is the log.\u00a0</div>\n<div><br></div>\n<div>Thanks~</div>\n<div><br></div>\n<div>========================================================================================</div>\n<div>05-03\u00a014:51:50.056\u00a030727-30727/?\u00a0E/REALM:\u00a0/Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/jni_util/java_class.cpp:50:\u00a0[realm-core-5.4.0]\u00a0Assertion\u00a0failed:\u00a0cls\u00a0with\u00a0(class_name)\u00a0=\u00a0\u00a0[\"io/realm/internal/OsSharedRealm$SchemaChangedCallback\"]<br>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0IMPORTANT:\u00a0if\u00a0you\u00a0see\u00a0this\u00a0error,\u00a0please\u00a0send\u00a0this\u00a0log\u00a0to\u00a0help@realm.io.<br>05-03\u00a014:51:50.056\u00a030727-30727/?\u00a0A/libc:\u00a0Fatal\u00a0signal\u00a06\u00a0(SIGABRT),\u00a0code\u00a0-6\u00a0in\u00a0tid\u00a030727\u00a0(com.huicent.ns)<br>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[\u00a005-03\u00a014:51:50.056\u00a0\u00a0\u00a0415:\u00a0\u00a0415\u00a0W/\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0]<br>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0debuggerd:\u00a0handling\u00a0request:\u00a0pid=30727\u00a0uid=10542\u00a0gid=10542\u00a0tid=30727<br>05-03\u00a014:51:50.126\u00a030746-30746/?\u00a0A/DEBUG:\u00a0***\u00a0***\u00a0***\u00a0***\u00a0***\u00a0***\u00a0***\u00a0***\u00a0***\u00a0***\u00a0***\u00a0***\u00a0***\u00a0***\u00a0***\u00a0***<br>05-03\u00a014:51:50.126\u00a030746-30746/?\u00a0A/DEBUG:\u00a0Build\u00a0fingerprint:\u00a0'HUAWEI/SLA-AL00/HWSLA-Q:7.0/HUAWEISLA-AL00/C00B191:user/release-keys'<br>05-03\u00a014:51:50.126\u00a030746-30746/?\u00a0A/DEBUG:\u00a0Revision:\u00a0'0'<br>05-03\u00a014:51:50.126\u00a030746-30746/?\u00a0A/DEBUG:\u00a0ABI:\u00a0'arm'<br>05-03\u00a014:51:50.126\u00a030746-30746/?\u00a0A/DEBUG:\u00a0pid:\u00a030727,\u00a0tid:\u00a030727,\u00a0name:\u00a0com.huicent.ns\u00a0\u00a0&gt;&gt;&gt;\u00a0com.huicent.ns\u00a0&lt;&lt;&lt;<br>05-03\u00a014:51:50.126\u00a030746-30746/?\u00a0A/DEBUG:\u00a0signal\u00a06\u00a0(SIGABRT),\u00a0code\u00a0-6\u00a0(SI_TKILL),\u00a0fault\u00a0addr\u00a0--------<br>05-03\u00a014:51:50.126\u00a030746-30746/?\u00a0A/DEBUG:\u00a0\u00a0\u00a0\u00a0\u00a0r0\u00a000000000\u00a0\u00a0r1\u00a000007807\u00a0\u00a0r2\u00a000000006\u00a0\u00a0r3\u00a000000008<br>05-03\u00a014:51:50.126\u00a030746-30746/?\u00a0A/DEBUG:\u00a0\u00a0\u00a0\u00a0\u00a0r4\u00a0b651e58c\u00a0\u00a0r5\u00a000000006\u00a0\u00a0r6\u00a0b651e534\u00a0\u00a0r7\u00a00000010c<br>05-03\u00a014:51:50.126\u00a030746-30746/?\u00a0A/DEBUG:\u00a0\u00a0\u00a0\u00a0\u00a0r8\u00a000000032\u00a0\u00a0r9\u00a09900c7e0\u00a0\u00a0sl\u00a0aa5766e8\u00a0\u00a0fp\u00a0aa5766f0<br>05-03\u00a014:51:50.126\u00a030746-30746/?\u00a0A/DEBUG:\u00a0\u00a0\u00a0\u00a0\u00a0ip\u00a000000054\u00a0\u00a0sp\u00a0bec8da20\u00a0\u00a0lr\u00a0b5124887\u00a0\u00a0pc\u00a0b51270e4\u00a0\u00a0cpsr\u00a0200f0010<br>05-03\u00a014:51:50.134\u00a030746-30746/?\u00a0A/DEBUG:\u00a0backtrace:<br>05-03\u00a014:51:50.134\u00a030746-30746/?\u00a0A/DEBUG:\u00a0\u00a0\u00a0\u00a0\u00a0#00\u00a0pc\u00a00004a0e4\u00a0\u00a0/system/lib/libc.so\u00a0(tgkill+12)<br>05-03\u00a014:51:50.134\u00a030746-30746/?\u00a0A/DEBUG:\u00a0\u00a0\u00a0\u00a0\u00a0#01\u00a0pc\u00a000047883\u00a0\u00a0/system/lib/libc.so\u00a0(pthread_kill+34)<br>05-03\u00a014:51:50.134\u00a030746-30746/?\u00a0A/DEBUG:\u00a0\u00a0\u00a0\u00a0\u00a0#02\u00a0pc\u00a00001d525\u00a0\u00a0/system/lib/libc.so\u00a0(raise+10)<br>05-03\u00a014:51:50.134\u00a030746-30746/?\u00a0A/DEBUG:\u00a0\u00a0\u00a0\u00a0\u00a0#03\u00a0pc\u00a000019071\u00a0\u00a0/system/lib/libc.so\u00a0(__libc_android_abort+34)<br>05-03\u00a014:51:50.134\u00a030746-30746/?\u00a0A/DEBUG:\u00a0\u00a0\u00a0\u00a0\u00a0#04\u00a0pc\u00a0000170d8\u00a0\u00a0/system/lib/libc.so\u00a0(abort+4)<br>05-03\u00a014:51:50.134\u00a030746-30746/?\u00a0A/DEBUG:\u00a0\u00a0\u00a0\u00a0\u00a0#05\u00a0pc\u00a000140fbb\u00a0\u00a0/data/app/com.huicent.ns-1/lib/arm/librealm-jni.so<br>05-03\u00a014:51:50.134\u00a030746-30746/?\u00a0A/DEBUG:\u00a0\u00a0\u00a0\u00a0\u00a0#06\u00a0pc\u00a000140fe7\u00a0\u00a0/data/app/com.huicent.ns-1/lib/arm/librealm-jni.so<br>05-03\u00a014:51:50.134\u00a030746-30746/?\u00a0A/DEBUG:\u00a0\u00a0\u00a0\u00a0\u00a0#07\u00a0pc\u00a0001410ad\u00a0\u00a0/data/app/com.huicent.ns-1/lib/arm/librealm-jni.so<br>05-03\u00a014:51:50.134\u00a030746-30746/?\u00a0A/DEBUG:\u00a0\u00a0\u00a0\u00a0\u00a0#08\u00a0pc\u00a0000690a5\u00a0\u00a0/data/app/com.huicent.ns-1/lib/arm/librealm-jni.so<br>05-03\u00a014:51:50.134\u00a030746-30746/?\u00a0A/DEBUG:\u00a0\u00a0\u00a0\u00a0\u00a0#09\u00a0pc\u00a0000690bb\u00a0\u00a0/data/app/com.huicent.ns-1/lib/arm/librealm-jni.so<br>05-03\u00a014:51:50.134\u00a030746-30746/?\u00a0A/DEBUG:\u00a0\u00a0\u00a0\u00a0\u00a0#10\u00a0pc\u00a000064ccf\u00a0\u00a0/data/app/com.huicent.ns-1/lib/arm/librealm-jni.so<br>05-03\u00a014:51:50.134\u00a030746-30746/?\u00a0A/DEBUG:\u00a0\u00a0\u00a0\u00a0\u00a0#11\u00a0pc\u00a000064d5d\u00a0\u00a0/data/app/com.huicent.ns-1/lib/arm/librealm-jni.so<br>05-03\u00a014:51:50.134\u00a030746-30746/?\u00a0A/DEBUG:\u00a0\u00a0\u00a0\u00a0\u00a0#12\u00a0pc\u00a000064e1f\u00a0\u00a0/data/app/com.huicent.ns-1/lib/arm/librealm-jni.so\u00a0(JNI_OnLoad+42)<br>05-03\u00a014:51:50.134\u00a030746-30746/?\u00a0A/DEBUG:\u00a0\u00a0\u00a0\u00a0\u00a0#13\u00a0pc\u00a000239b51\u00a0\u00a0/system/lib/libart.so\u00a0(_ZN3art9JavaVMExt17LoadNativeLibraryEP7_JNIEnvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEP8_jobjectP8_jstringPS9_+1844)<br>05-03\u00a014:51:50.134\u00a030746-30746/?\u00a0A/DEBUG:\u00a0\u00a0\u00a0\u00a0\u00a0#14\u00a0pc\u00a000003173\u00a0\u00a0/system/lib/libopenjdkjvm.so\u00a0(JVM_NativeLoad+178)<br>05-03\u00a014:51:50.134\u00a030746-30746/?\u00a0A/DEBUG:\u00a0\u00a0\u00a0\u00a0\u00a0#15\u00a0pc\u00a071002045\u00a0\u00a0/data/dalvik-cache/arm/system@framework@boot.oat\u00a0(offset\u00a00x5fa000)<br>\n</div>\n<div><br></div>\n<div><br></div>\n<div><br></div>\n<hr style=\"WIDTH: 210px; HEIGHT: 1px\" align=\"left\">\n<div><span><div style=\"MARGIN: 10px; FONT-FAMILY: verdana; FONT-SIZE: 10pt\"><div>wugj@redapplenet.com</div></div></span></div>\n\n<br>\n\n <br/>\n\n\n\n---\n\n@tgoyne commented on [Thu May 03 2018](https://github.com/realm/realm-object-store/issues/651#issuecomment-386350188)\n\nThis is a realm-java thing.\n\n", "url": "https://github.com/realm/realm-java/issues/6155", "user": "bmunkholm", "labels": ["T-Bug-Crash"], "created": "2018-09-11 13:30:03", "closed": "2019-03-19 13:52:13", "commits": {}, "ttf": 189.00027777777777, "commitsDetails": []}, {"title": "Fatal signal 11 (SIGSEGV) from Java_io_realm_internal_UncheckedRow_nativeGetString", "body": "#### Goal\r\n\r\n> No crashes\r\n\r\n#### Expected Results\r\n\r\n> No crashes\r\n\r\n#### Actual Results\r\n\r\n>  Crashing consistently for one affected user w/a seemingly corrupted DB state\r\n```\r\nA/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n    Build fingerprint: 'samsung/dreamqltesq/dreamqltesq:8.0.0/R16NW/G950USQU5CRG3:user/release-keys'\r\n    Revision: '12'\r\n    ABI: 'arm64'\r\nA/DEBUG: pid: 27327, tid: 27372, name: RxComputationTh  >>> com.preveil.preveil <<<\r\n    signal 11 (SIGSEGV), code 2 (SEGV_ACCERR), fault addr 0x78713fe000\r\n        x0   00000078704e4380  x1   00000078704e437f  x2   0000007871254317  x3   00000078704e43d8\r\n        x4   00000078704e4380  x5   000000786f5a9d7d  x6   0000000000000000  x7   0000000000000000\r\n        x8   0000000000000000  x9   0000000000000000  x10  0000000000000001  x11  0000000000000000\r\n        x12  000000786fc05210  x13  0000000001000000  x14  0000000000000000  x15  0000000000000000\r\n        x16  000000787380e570  x17  000000788e181970  x18  0000000000000020  x19  00000078704e4380\r\n        x20  000000787376a000  x21  00000078704e4540  x22  00000078713fe000  x23  00000078704e4380\r\n        x24  00000078704e437f  x25  0000000000000001  x26  00000078704e4568  x27  00000078704e45d0\r\n        x28  00000078704e4570  x29  00000078704e42f0  x30  00000078735424e0\r\n        sp   00000078704e42f0  pc   00000078735424cc  pstate 0000000020000000\r\n09-04 11:23:56.963 27385-27385/? A/DEBUG: backtrace:\r\n        #00 pc 000000000003b4cc  /data/app/com.preveil.preveil-FG01oMB2aWtfSFb4Aipq1w==/lib/arm64/librealm-jni.so\r\n        #01 pc 00000000000be5d8  /data/app/com.preveil.preveil-FG01oMB2aWtfSFb4Aipq1w==/lib/arm64/librealm-jni.so\r\n        #02 pc 00000000000b6f28  /data/app/com.preveil.preveil-FG01oMB2aWtfSFb4Aipq1w==/lib/arm64/librealm-jni.so (Java_io_realm_internal_UncheckedRow_nativeGetString+92)\r\n        #03 pc 0000000000510d00  /system/lib64/libart.so (art_quick_generic_jni_trampoline+144)\r\n        #04 pc 000000000000f8bc  /dev/ashmem/dalvik-jit-code-cache_27327_27327 (deleted)\r\n```\r\n#### Steps & Code to Reproduce\r\n\r\nSo far, only one known user has encountered this issue. This user will encounter the crash every time they launch the app. Fortunately, I have access to the user's device and have hooked it up to the debugger. There seems to be 3 `RealmObject`s (all of the same `ChildObject` type described below) out of hundreds which have somehow corrupted, and trying to access any of these 3 objects will seg fault. I've tried accessing these objects w/in a `DynamicRealm`, but that seg faults as well. \r\n\r\nAlthough the stacktrace above happens on a `RxComputation` thread, when I run everything on the main thread, the crash persists.\r\n\r\n#### Code Sample\r\nUnfortunately I can't share specific code or realm files, but I'll describe the relevant schema structure and access which is causing the crash.\r\n\r\n```kotlin\r\nopen class ParentObject : RealmObject() {\r\n    @PrimaryKey\r\n    var identifier = UUID.randomUUID().toString()\r\n    var children = RealmList<ChildObject>()\r\n    // other properties\r\n}\r\n\r\nopen class ChildObject : RealmObject() {\r\n    @PrimaryKey\r\n    var identifier = UUID.randomUUID().toString()\r\n    // other properties\r\n}\r\n\r\n// Elsewhere, on app launch\r\nval parents = Realm.getDefaultInstance().where(ParentObject::class.java).findAll()\r\nparents.forEach { parentObject ->\r\n    parentObject.children.forEach { childObject ->\r\n        // For hundreds of ChildObjects, this is totally fine\r\n        // But for 3 seemingly corrupted objects, this seg faults\r\n        val property = childObject.property\r\n    }\r\n}\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 5.3.1 w/encryption enabled\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 3.1.3\r\n\r\nWhich Android version and device: Samsung Galaxy S8 running Android 8 \r\n", "url": "https://github.com/realm/realm-java/issues/6152", "user": "bfichter", "labels": ["O-Customer", "P-1-Required", "T-Bug-Crash"], "created": "2018-09-05 17:16:37", "closed": "2019-11-05 10:37:23", "commits": {}, "ttf": 425.0002777777778, "commitsDetails": []}, {"title": "Unrecoverable error. Decryption failed", "body": "<!---\r\n\r\n**Questions**: If you have questions about how to use Realm, ask on\r\n[StackOverflow](http://stackoverflow.com/questions/ask?tags=realm).\r\nWe monitor the `realm` tag.\r\n\r\n**Feature Request**: Just fill in the first two sections below.\r\n\r\n**Bugs**: To help you as fast as possible with an issue please describe your issue\r\nand the steps you have taken to reproduce it in as many details as possible.\r\n\r\n-->\r\n\r\n#### Goal\r\n\r\nI want to execute commitTraction normally.\r\n\r\n#### Expected Results\r\n\r\nexecute transaction normally\r\n\r\n#### Actual Results\r\n\r\nFatal Exception: io.realm.exceptions.RealmError: Unrecoverable error. Decryption failed () in /home/cc/repo/realm/release/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 144\r\n       at io.realm.internal.SharedRealm.nativeCommitTransaction(SharedRealm.java)\r\n       at io.realm.internal.SharedRealm.commitTransaction(SharedRealm.java:251)\r\n       at io.realm.BaseRealm.commitTransaction(BaseRealm.java:400)\r\n       at io.realm.Realm.commitTransaction(Realm.java:15134)\r\n\r\n#### Steps & Code to Reproduce\r\n\r\nI saw this error keep occurring on crashlytics when executing \"commitTraction\" then I saw this error, but I couldn't reproduce this issue on my own.\r\n\r\n#### Code Sample\r\n\r\n```java\r\n\r\n            for (int i = 0; i < length; i++) {\r\n                tmpObject = jsonArray.getJSONObject(i);\r\n\r\n                name = tmpObject.getString(JSON_KEY_CALLER);\r\n                number = tmpObject.getString(JSON_KEY_PHONE_NUMBER);\r\n\r\n                realmJsonObject = new JSONObject();\r\n                realmJsonObject.put(RealTimeSpamNumber.COL.NAME, name);\r\n                realmJsonObject.put(RealTimeSpamNumber.COL.NUMBER, number);\r\n                realmJsonObject.put(RealTimeSpamNumber.COL.E164, UtilsTelephony.parseE164Number(number));\r\n                realmJsonObject.put(RealTimeSpamNumber.COL.ID, idx++);\r\n\r\n                realmJsonArray.put(realmJsonObject);\r\n                if (Log.DEBUG) {\r\n                    Log.d(LOGTAG, \"[parseDatabase] caller = \" + name + \", number = \" + number + \", e164 = \" + realmJsonObject.getString(RealTimeSpamNumber.COL.E164));\r\n                }\r\n\r\n                if (realmJsonArray.length() >= 500) {\r\n                    realm.beginTransaction();\r\n                    realm.createOrUpdateAllFromJson(RealTimeSpamNumber.class, realmJsonArray);\r\n                    realm.commitTransaction();\r\n\r\n                    realmJsonArray = new JSONArray();\r\n                }\r\n            }\r\n\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): ? \r\nio.realm:realm-gradle-plugin:4.1.0\r\n\r\nRealm sync feature enabled: \r\nno\r\n\r\nAndroid Studio version: ? \r\n3.1.4\r\n\r\nWhich Android version and device: ? \r\nMost device : Galaxy Note2\r\nMost Os version : 4.4.2\r\n", "url": "https://github.com/realm/realm-java/issues/6151", "user": "jason-gogolook", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2018-09-05 08:17:11", "closed": "2019-03-19 13:45:30", "commits": {}, "ttf": 195.00027777777777, "commitsDetails": []}, {"title": "Fatal signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x0", "body": "#### Goal\r\n\r\n> No crashes\r\n\r\n#### Expected Results\r\n\r\n> No crashes\r\n\r\n#### Actual Results\r\n\r\n> Crashing, I can reproduce somewhat consistently, even after reinstall...\r\n\r\n```\r\n    --------- beginning of crash\r\nA: Fatal signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x0 in tid 24564 (android.develop), pid 24564 (android.develop)\r\nV:  --> finalize_unchecked_row -888697776\r\nV:  --> finalize_unchecked_row -888774512\r\nV:  --> finalize_unchecked_row -870264496\r\n     --> finalize_unchecked_row -918557168\r\nV:  --> finalize_unchecked_row -918557184\r\n     --> finalize_unchecked_row -918557360\r\n     --> finalize_unchecked_row -918557424\r\n     --> finalize_unchecked_row -918559024\r\n     --> finalize_unchecked_row -918559040\r\nV:  --> finalize_unchecked_row -918559056\r\n     --> finalize_unchecked_row -918559200\r\n     --> finalize_unchecked_row -918559520\r\n     --> finalize_unchecked_row -918559648\r\n     --> finalize_unchecked_row -918559872\r\n     --> finalize_unchecked_row -918559952\r\n     --> finalize_unchecked_row -918560016\r\n     --> finalize_unchecked_row -918560192\r\n     --> finalize_unchecked_row -918560464\r\n     --> finalize_unchecked_row -918560624\r\n     --> finalize_unchecked_row -918798384\r\n     --> finalize_unchecked_row -888698416\r\n     --> finalize_unchecked_row -888699568\r\n     --> finalize_unchecked_row -888771280\r\nV:  --> finalize_unchecked_row -888771296\r\n     --> finalize_unchecked_row -888771968\r\n     --> finalize_unchecked_row -786964560\r\nA: Build fingerprint: 'google/sdk_gphone_x86/generic_x86:9/PSR1.180720.012/4923214:userdebug/dev-keys'\r\n    Revision: '0'\r\n    ABI: 'x86'\r\n    pid: 24564, tid: 24564, name: android.develop  >>> com.plickers.client.android.develop <<<\r\n    signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x0\r\n    Cause: null pointer dereference\r\n        eax 00000000  ebx cf718ddc  ecx ffda9c98  edx 00000001\r\n        edi 00000000  esi 00000000\r\n        ebp e7b9f30c  esp ffda9c50  eip cf4c21f9\r\nA: backtrace:\r\n        #00 pc 000e71f9  /data/app/com.plickers.client.android.develop-ctRlwwXfVo57zJQlvW0s6Q==/lib/x86/librealm-jni.so\r\n        #01 pc 000e7497  /data/app/com.plickers.client.android.develop-ctRlwwXfVo57zJQlvW0s6Q==/lib/x86/librealm-jni.so\r\n        #02 pc 0011410a  /data/app/com.plickers.client.android.develop-ctRlwwXfVo57zJQlvW0s6Q==/lib/x86/librealm-jni.so\r\n        #03 pc 001143a7  /data/app/com.plickers.client.android.develop-ctRlwwXfVo57zJQlvW0s6Q==/lib/x86/librealm-jni.so\r\n        #04 pc 000f8fb8  /data/app/com.plickers.client.android.develop-ctRlwwXfVo57zJQlvW0s6Q==/lib/x86/librealm-jni.so\r\n        #05 pc 000db078  /data/app/com.plickers.client.android.develop-ctRlwwXfVo57zJQlvW0s6Q==/lib/x86/librealm-jni.so\r\n        #06 pc 001157c9  /data/app/com.plickers.client.android.develop-ctRlwwXfVo57zJQlvW0s6Q==/lib/x86/librealm-jni.so\r\n        #07 pc 00115a56  /data/app/com.plickers.client.android.develop-ctRlwwXfVo57zJQlvW0s6Q==/lib/x86/librealm-jni.so\r\n        #08 pc 00012a77  /system/lib/libutils.so (android::SimpleLooperCallback::handleEvent(int, int, void*)+39)\r\n        #09 pc 00013896  /system/lib/libutils.so (android::Looper::pollInner(int)+998)\r\n        #10 pc 0001340b  /system/lib/libutils.so (android::Looper::pollOnce(int, int*, int*, void**)+43)\r\n        #11 pc 000e413b  /system/lib/libandroid_runtime.so (android::android_os_MessageQueue_nativePollOnce(_JNIEnv*, _jobject*, long long, int)+59)\r\n        #12 pc 003ddb28  /system/framework/x86/boot-framework.oat (offset 0x3ca000) (android.media.MediaExtractor.seekTo [DEDUPED]+136)\r\n        #13 pc 00038e46  /dev/ashmem/dalvik-jit-code-cache (deleted) (android.os.MessageQueue.next+230)\r\n        #14 pc 005f0b82  /system/lib/libart.so (art_quick_invoke_stub+338)\r\n        #15 pc 000a30ce  /system/lib/libart.so (art::ArtMethod::Invoke(art::Thread*, unsigned int*, unsigned int, art::JValue*, char const*)+222)\r\n        #16 pc 0029bca2  /system/lib/libart.so (art::interpreter::ArtInterpreterToCompiledCodeBridge(art::Thread*, art::ArtMethod*, art::ShadowFrame*, unsigned short, art::JValue*)+338)\r\n        #17 pc 00293e48  /system/lib/libart.so (bool art::interpreter::DoCall<false, false>(art::ArtMethod*, art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short, art::JValue*)+1048)\r\n        #18 pc 005bc493  /system/lib/libart.so (MterpInvokeVirtual+691)\r\n```\r\n\r\n#### Steps & Code to Reproduce\r\n\r\n> Turned on Realm logging, grabbed a bunch of tombstones from Logcat, saved the Realm file.\r\n\r\nFull log: https://gist.github.com/nolanamy/3019c5f85a8037787a10b44b7b9e6e30\r\n\r\n#### Code Sample\r\n\r\n-\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 5.4.1\r\n\r\nRealm sync feature enabled: no\r\n\r\nEncryption enabled: no\r\n\r\nAndroid Studio version: 3.1.4\r\n\r\nWhich Android version and device:\r\n\r\n- Android 9 / Emulated Pixel C\r\n- Android 9 / Pixel XL\r\n", "url": "https://github.com/realm/realm-java/issues/6130", "user": "nolanamy", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2018-08-28 09:18:24", "closed": "2019-03-19 13:24:49", "commits": {}, "ttf": 203.00027777777777, "commitsDetails": []}, {"title": "Fatal signal 6 (SIGABRT), code -6 in tid 21451", "body": "<!---\r\n\r\n**Bugs**: Fatal native crash of RealmDB on Android device. \r\nE/REALM   (21451): /home/jenkins/workspace/realm_realm-core_PR-2976-3RARHZ2SQIQNEZVWMWI66X6AMCHCV3HJJFRQ7LTSM4AQYK4NVZXQ/src/realm/group_writer.cpp:393: [realm-core-5.1.2] Assertion failed: ref + size <= after_ref with (ref, size, after_ref, ndx, m_free_positions.size()) =  [4194304, 138264, 4194416, 7230, 11513]\r\nE/REALM   (21451): IMPORTANT: if you see this error, please send this log to help@realm.io.\r\nF/libc    (21451): Fatal signal 6 (SIGABRT), code -6 in tid 21451 (.app)\r\n\r\n-->\r\n\r\n#### Goal\r\nCorrect work of Android RealmDB (insert data)\r\n\r\n#### Expected Results\r\nCorrect insert of data\r\n\r\n#### Actual Results\r\nFatal exception, that can not be handled in Java Android Code\r\n\r\n```\r\nE/REALM   (21451): /home/jenkins/workspace/realm_realm-core_PR-2976-3RARHZ2SQIQNEZVWMWI66X6AMCHCV3HJJFRQ7LTSM4AQYK4NVZXQ/src/realm/group_writer.cpp:393: [realm-core-5.1.2] Assertion failed: ref + size <= after_ref with (ref, size, after_ref, ndx, m_free_positions.size()) =  [4194304, 138264, 4194416, 7230, 11513]\r\nE/REALM   (21451): IMPORTANT: if you see this error, please send this log to help@realm.io.\r\nF/libc    (21451): Fatal signal 6 (SIGABRT), code -6 in tid 21451 (.app)\r\nD/WCND    (  174): is_cp2_alive_ok: loop: /proc/mdbg/loopcheck is OK\r\nI/DEBUG   (  184): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\nI/DEBUG   (  184): Build fingerprint: 'samsung/j3xltejt/j3xlte:5.1.1/LMY47V/J320FXXU0AQE2:user/release-keys'\r\nI/DEBUG   (  184): Revision: '5'\r\nI/DEBUG   (  184): ABI: 'arm'\r\nI/DEBUG   (  184): pid: 21451, tid: 21451, name: .app  >>> com.our.app <<<\r\nI/DEBUG   (  184): signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------\r\nI/DEBUG   (  184):     r0 00000000  r1 000053cb  r2 00000006  r3 00000000\r\nI/DEBUG   (  184):     r4 b6f32e38  r5 00000006  r6 00000011  r7 0000010c\r\nI/DEBUG   (  184):     r8 00000189  r9 a0dbf5e5  sl b462c008  fp 00000001\r\nI/DEBUG   (  184):     ip 000053cb  sp becd48f0  lr b6d8b735  pc b6daf328  cpsr 600f0010\r\nI/DEBUG   (  184):\r\nI/DEBUG   (  184): backtrace:\r\nI/DEBUG   (  184):     #00 pc 0003b328  /system/lib/libc.so (tgkill+12)\r\nI/DEBUG   (  184):     #01 pc 00017731  /system/lib/libc.so (pthread_kill+52)\r\nI/DEBUG   (  184):     #02 pc 00018347  /system/lib/libc.so (raise+10)\r\nI/DEBUG   (  184):     #03 pc 00014be1  /system/lib/libc.so (__libc_android_abort+36)\r\nI/DEBUG   (  184):     #04 pc 00012f70  /system/lib/libc.so (abort+4)\r\nI/DEBUG   (  184):     #05 pc 0013ec5f  /data/app/com.our.app-1/lib/arm/librealm-jni.so\r\nI/DEBUG   (  184):     #06 pc 0013ec8b  /data/app/com.our.app-1/lib/arm/librealm-jni.so\r\nI/DEBUG   (  184):     #07 pc 0013ed51  /data/app/com.our.app-1/lib/arm/librealm-jni.so\r\nI/DEBUG   (  184):     #08 pc 000fd40d  /data/app/com.our.app-1/lib/arm/librealm-jni.so\r\nI/DEBUG   (  184):     #09 pc 000facc9  /data/app/com.our.app-1/lib/arm/librealm-jni.so\r\nI/DEBUG   (  184):     #10 pc 000faeb7  /data/app/com.our.app-1/lib/arm/librealm-jni.so\r\nI/DEBUG   (  184):     #11 pc 000fc389  /data/app/com.our.app-1/lib/arm/librealm-jni.so\r\nI/DEBUG   (  184):     #12 pc 0008dd57  /data/app/com.our.app-1/lib/arm/librealm-jni.so\r\nI/DEBUG   (  184):     #13 pc 0008034d  /data/app/com.our.app-1/lib/arm/librealm-jni.so\r\nI/DEBUG   (  184):     #14 pc 00035907  /data/app/com.our.app-1/lib/arm/librealm-jni.so (Java_io_realm_internal_OsSharedRealm_nativeCommitTransaction+22)\r\n```\r\n\r\n#### Steps & Code to Reproduce\r\nWe have about 3000 devices Samsung J3 (2016) SM-J320F with Android 5.1.1 (Firmware version J320FXXU0AQE2). Two days ago I got message from admins that application is crashed (4 users from 3000, other devices works fine). If app data is cleared, app works fine. Admins gather database from problem devices. The database is opened in realm studio correctly, but when I put this database on fine device, the realm start to crashes when data inserted.\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 4.3.3\r\nRealm sync feature enabled: no\r\nAndroid Studio version: 3.1.3\r\nWhich Android version and device: Samsung J3 (2016) SM-J320F with Android 5.1.1 (Firmware version J320FXXU0AQE2)\r\nEncryption is used", "url": "https://github.com/realm/realm-java/issues/6093", "user": "Zeddushka", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2018-08-02 10:57:37", "closed": "2019-11-05 10:37:07", "commits": {}, "ttf": 459.0002777777778, "commitsDetails": []}, {"title": "Xiaomi MIX(Android 7.0, API24) librealm-jni.so crash", "body": "```\r\n07-27 12:16:05.481 6578-6578/? A/DEBUG: Build fingerprint: 'Xiaomi/lithium/lithium:7.0/NRD90M/V9.5.5.0.NAHMIFA:user/release-keys'\r\n    Revision: '0'\r\n    ABI: 'arm64'\r\n    pid: 6498, tid: 6576, name: pool-4-thread-1  \r\n    signal 11 (SIGSEGV), code 2 (SEGV_ACCERR), fault addr 0x7f9bef400a\r\n        x0   000000000000003f  x1   0000007f8058e440  x2   0000000000000008  x3   0000007f9bef400a\r\n        x4   0000000000005000  x5   0000000000000040  x6   0000000000000000  x7   0000000000000000\r\n        x8   000000000000006d  x9   0000000000000000  x10  0000007f7c97d9d0  x11  0000000000000006\r\n        x12  0000007f7c97da08  x13  00000000000000c0  x14  000000000000000c  x15  2e8ba2e8ba2e8ba3\r\n        x16  0000007f9f5755a0  x17  0000007f9f51c9d0  x18  0000007f818fec86  x19  0000000000000140\r\n        x20  0000007f7c9849e0  x21  0000000000ff0000  x22  0000007f76d24d18  x23  0000000000000000\r\n        x24  0000007f7e1feac0  x25  0000007f806e0000  x26  0000007f76d24e80  x27  0000007f806e0000\r\n        x28  0000007f76d24f70  x29  0000007f76d24b00  x30  0000007f804bf168\r\n        sp   0000007f76d24ac0  pc   0000007f804af388  pstate 0000000080000000\r\n07-27 12:16:05.486 6578-6578/? A/DEBUG: backtrace:\r\n        #00 pc 0000000000367388  /data/app/com.zbs.messenger-1/lib/arm64/librealm-jni.so\r\n        #01 pc 0000000000377164  /data/app/com.zbs.messenger-1/lib/arm64/librealm-jni.so\r\n        #02 pc 0000000000155d9c  /data/app/com.zbs.messenger-1/lib/arm64/librealm-jni.so\r\n        #03 pc 000000000016d868  /data/app/com.zbs.messenger-1/lib/arm64/librealm-jni.so\r\n        #04 pc 000000000016d818  /data/app/com.zbs.messenger-1/lib/arm64/librealm-jni.so\r\n        #05 pc 000000000017131c  /data/app/com.zbs.messenger-1/lib/arm64/librealm-jni.so\r\n        #06 pc 0000000000191048  /data/app/com.zbs.messenger-1/lib/arm64/librealm-jni.so\r\n        #07 pc 000000000016e490  /data/app/com.zbs.messenger-1/lib/arm64/librealm-jni.so\r\n        #08 pc 00000000000effdc  /data/app/com.zbs.messenger-1/lib/arm64/librealm-jni.so (Java_io_realm_internal_OsSharedRealm_nativeGetSharedRealm+480)\r\n        #09 pc 00000000010a2770  /data/app/<app>/oat/arm64/base.odex (offset 0xf35000)\r\n```", "url": "https://github.com/realm/realm-java/issues/6086", "user": "DFGDEN", "labels": ["O-Community", "T-Bug-Crash"], "created": "2018-07-27 15:16:18", "closed": "2019-03-19 13:43:38", "commits": {}, "ttf": 234.00027777777777, "commitsDetails": []}, {"title": "Samsung S8 librealm-jni.so crash", "body": "Hello. \r\n\r\nOur app crashes on Samsung S8 devices.  It depends on the debuggable flag \r\n\r\n```\r\nandroid {\r\n  buildTypes {\r\n    release {\r\n       debuggable false\r\n    }\r\n  }\r\n}\r\n```\r\nIf we set flag in TRUE mode everything ok, but if we set FALSE we catch the error:\r\n\r\n![crash](https://user-images.githubusercontent.com/14300153/43327039-05b66dd8-91c3-11e8-86a4-96f8b59d2134.jpg)\r\n\r\nUsing:\r\nio.realm:realm-gradle-plugin:5.3.1\r\n", "url": "https://github.com/realm/realm-java/issues/6085", "user": "Delphian2015", "labels": ["O-Community", "T-Bug-Crash"], "created": "2018-07-27 14:44:13", "closed": "2019-03-19 13:43:00", "commits": {}, "ttf": 234.00027777777777, "commitsDetails": []}, {"title": "[realm-core-5.6.2] Assertion failed: r == 0", "body": "Realm version(s):\r\n5.3.1\r\nAndroid version:\r\n8.0.0\r\nDevice:\r\nHUAWEIATU-L31\r\n\r\nE/REALM: /home/jenkins/workspace/realm_realm-core_master-ZBP7YYGK7EEKLBWAJKZQMIXPK7BHX4IZSAMXTSGLQ5SXVPPKKJMQ/src/realm/util/file.cpp:1015: [realm-core-5.6.2] Assertion failed: r == 0\r\n!!! IMPORTANT: Please send this log and info about Realm SDK version and other relevant reproduction info to help@realm.io.\r\nFatal signal 6 (SIGABRT), code -6 in tid 18325 (pool-3-thread-2)", "url": "https://github.com/realm/realm-java/issues/6054", "user": "DFGDEN", "labels": ["O-Community", "T-Bug-Crash"], "created": "2018-07-06 15:23:14", "closed": "2018-11-28 12:02:26", "commits": {}, "ttf": 144.00027777777777, "commitsDetails": []}, {"title": "Crash in nativeSetString", "body": "#### Goal\r\nNot crash\r\n\r\n#### Expected Results\r\nNot crash\r\n\r\n#### Actual Results\r\nCrash\r\n\r\n\r\nMotorola Moto G(4) Plus (athene_f), 2048MB RAM, Android 7.0\r\nReport 21\r\n\r\n*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\npid: 0, tid: 0 >>> com.xxx <<<\r\n\r\nbacktrace:\r\n  #00  pc 00000000000a3ffe  /data/app/com.xxx-1/lib/arm/librealm-jni.so\r\n  #01  pc 0000000000146271  /data/app/com.xxx-1/lib/arm/librealm-jni.so\r\n  #02  pc 00000000001464c9  /data/app/com.xxx-1/lib/arm/librealm-jni.so\r\n  #03  pc 00000000001486a1  /data/app/com.xxx-1/lib/arm/librealm-jni.so\r\n  #04  pc 00000000000f17c9  /data/app/com.xxx-1/lib/arm/librealm-jni.so\r\n  #05  pc 0000000000149f79  /data/app/com.xxx-1/lib/arm/librealm-jni.so\r\n  #06  pc 0000000000137bed  /data/app/com.xxx-1/lib/arm/librealm-jni.so\r\n  #07  pc 000000000003de19  /data/app/com.xxx-1/lib/arm/librealm-jni.so (Java_io_realm_internal_Table_nativeSetString+176)\r\n  #08  pc 0000000000b67899  /data/app/com.xxx-1/oat/arm/base.odex\r\n\r\n#### Steps & Code to Reproduce\r\nMotorola Moto G(4) Plus (athene_f), 2048MB RAM, Android 7.0\r\nThis single moto user crashed about 100 times. \r\n\r\n\r\n#### Code Sample\r\nCan't reproduce\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 5.1\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 3.1.2\r\n\r\nWhich Android version and device: Motorola Moto G(4) Plus (athene_f), 2048MB RAM, Android 7.0\r\n\r\n#### Notes \r\nWe do not store any strings in our db longer than 255 chars. \r\n\r\nWe suspect it is result of java string containing valid utf8 codepoints but not recognized on the native side? Such as some new emojis? We are unable to reproduce this since we have almost no other info expect the simple crash trace. \r\n\r\n\r\n\r\n", "url": "https://github.com/realm/realm-java/issues/5974", "user": "diegomontoya", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2018-05-25 16:18:26", "closed": "2018-06-29 11:14:12", "commits": {}, "ttf": 34.000277777777775, "commitsDetails": []}, {"title": "Test root certificates have expired", "body": "The test certificates used in https://github.com/realm/realm-java/blob/master/realm/realm-library/src/androidTestObjectServer/java/io/realm/TrustManagerCertificateValidationTests.java\r\nhave expired causing the tests to fail. They need to be replaced\r\n\r\nhttps://github.com/realm/realm-java/commit/1ae66530162b965e3b00588d02560c1cf530068f", "url": "https://github.com/realm/realm-java/issues/5970", "user": "cmelchior", "labels": ["T-Bug-Crash"], "created": "2018-05-24 11:14:14", "closed": "2018-06-27 11:11:04", "commits": {"780a8527c6739318d5640fc2e28c18abf3f22395": {"commitGHEventType": "closed", "commitUser": "nhachicha"}}, "ttf": 33.000277777777775, "commitsDetails": [{"commitHash": "780a8527c6739318d5640fc2e28c18abf3f22395", "commitGHEventType": "closed", "commitUser": "nhachicha", "commitParents": ["1134cca91f9558fbf61ba0a688f20deec161a331"], "nameRev": "780a8527c6739318d5640fc2e28c18abf3f22395 tags/v5.4.0~4^2~2", "commitMessage": "Fixes #5970 (#6043)\n\n* Using Android Network Security Configuration to setup the test certificate for SSL tests\r\n", "commitDateTime": "2018-06-26 15:37:18", "authoredDateTime": "2018-06-26 15:37:18", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "realm/realm-library/src/androidTest/AndroidManifest.xml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "realm/realm-library/src/androidTest/res/raw/android_test_certificate", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "realm/realm-library/src/androidTest/res/xml/network_security_config.xml", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "realm/realm-library/src/androidTestObjectServer/java/io/realm/TrustManagerCertificateValidationTests.java", "insertions": 134, "deletions": 9, "lines": 143}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/SyncManager.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TrustManagerCertificateValidationTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.TrustManagerCertificateValidationTests.sslVerifyCallback_shouldVerifyHostname()", "TOT": 7, "UPD": 1, "INS": 1, "MOV": 5, "DEL": 0}, {"spoonMethodName": "io.realm.TrustManagerCertificateValidationTests.sslVerifyCallback_certificateChainWithRootCAInstalledShouldValidate()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SyncManager.java", "spoonMethods": [{"spoonMethodName": "io.realm.SyncManager.systemDefaultTrustManager()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.SyncManager.sslVerifyCallback(java.lang.String,java.lang.String,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "UnsatisfiedLinkError: No implementation found for long io.realm.internal.OsSharedRealm.nativeGetFinalizerPtr()", "body": "We are seing a crash in Crashlytics on Pixel 2 and Pixel 2 XL devices with Android P, that happens when `Realm.init(Context)` is called. I've tried to reproduce on my Pixel 2 with the beta installed, but no luck.\r\n\r\nThe stack trace from crashlytics is as follows:\r\n```\r\nFatal Exception: java.lang.UnsatisfiedLinkError: No implementation found for long io.realm.internal.OsSharedRealm.nativeGetFinalizerPtr() (tried Java_io_realm_internal_OsSharedRealm_nativeGetFinalizerPtr and Java_io_realm_internal_OsSharedRealm_nativeGetFinalizerPtr__)\r\n       at io.realm.internal.OsSharedRealm.nativeGetFinalizerPtr(Unknown Source)\r\n       at io.realm.internal.OsSharedRealm.(Unknown Source:154)\r\n       at io.realm.internal.OsSharedRealm.initialize(Unknown Source:258)\r\n       at io.realm.Realm.init(Unknown Source:255)\r\n       ...\r\n       at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1154)\r\n       at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5865)\r\n       at android.app.ActivityThread.access$1000(ActivityThread.java:198)\r\n       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1637)\r\n       at android.os.Handler.dispatchMessage(Handler.java:106)\r\n       at android.os.Looper.loop(Looper.java:164)\r\n       at android.app.ActivityThread.main(ActivityThread.java:6649)\r\n       at java.lang.reflect.Method.invoke(Method.java)\r\n       at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)\r\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:826)\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): **4.3.3**\r\n\r\nRealm sync feature enabled: **no**\r\n\r\nWhich Android version and device: **P**\r\n\r\nDevices are **not** rooted.", "url": "https://github.com/realm/realm-java/issues/5960", "user": "serj-lotutovici", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2018-05-17 12:38:15", "closed": "2018-08-27 11:36:05", "commits": {}, "ttf": 101.00027777777778, "commitsDetails": []}, {"title": "Native Realm Crashes on 4.2.0", "body": "**Questions**: Can someone decrypt and let me know if updating library will resolve these native crashes? I see the phrase `OsSharedRealm_native` in some of these logs, could it just be linked to a shared instance that has encryption? We have tried to reduce the amount of times realm could be open when not running in main instance.\r\n\r\n**Bugs**: Native crashes reported in google play console. No steps to repro\r\n\r\n### Expected Results\r\n\r\nReduce/Remove crashes\r\n\r\n### Actual Results\r\n\r\n#### 1st trace Motorola Moto Z (griffin), 3072MB RAM, Android 7.1\r\n```\r\n*** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\npid: 0, tid: 0 >>> com.package.myapp <<<\r\n\r\nbacktrace:\r\n\r\n00 pc 000000000001b120 /system/lib64/libc.so (memcpy+352)\r\n01 pc 000000000012de10 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n02 pc 000000000012deb0 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n03 pc 000000000012e188 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n04 pc 000000000012e358 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n05 pc 00000000001a5d48 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n06 pc 00000000001a5fb8 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n07 pc 00000000001a6004 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n08 pc 00000000001a6f8c /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n09 pc 000000000012b660 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n10 pc 000000000012e728 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n11 pc 00000000001a6ef4 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n12 pc 00000000001a3638 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n13 pc 00000000001a38d0 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n14 pc 00000000001a53e8 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n15 pc 0000000000105884 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n16 pc 00000000000eaedc /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n17 pc 000000000006b8a0 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so (Java_io_realm_internal_OsSharedRealm_nativeCommitTransaction+48)\r\n18 pc 0000000000f71a34 /data/app/com.package.myapp-1/oat/arm64/base.odex\r\n```\r\n#### 2nd trace Samsung Galaxy S7 (heroqltevzw), 4096MB RAM, Android 7.0\r\n```\r\n*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\npid: 0, tid: 0 >>> com.package.myapp <<<\r\n\r\nbacktrace:\r\n#00 pc 0000000000127ea8 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#01 pc 0000000000126cd8 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#02 pc 0000000000126d3c /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#03 pc 00000000001ee8f8 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#04 pc 00000000001eea4c /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#05 pc 00000000001f9b74 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#06 pc 000000000019f300 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#07 pc 000000000019f44c /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#08 pc 00000000001f7668 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#09 pc 000000000019f3a0 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#10 pc 000000000019f44c /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#11 pc 00000000001f7668 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#12 pc 000000000019f3a0 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#13 pc 000000000019f44c /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#14 pc 00000000001f7668 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#15 pc 000000000019f3a0 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#16 pc 000000000019f44c /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#17 pc 00000000000d1e68 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#18 pc 00000000000d750c /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#19 pc 00000000000e9e68 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#20 pc 00000000000e9e08 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#21 pc 00000000000ed4fc /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#22 pc 0000000000109d58 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#23 pc 00000000000eaba8 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#24 pc 000000000006e938 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so (Java_io_realm_internal_OsSharedRealm_nativeGetSharedRealm+480)\r\n#25 pc 000000000135be40 /data/app/com.package.myapp-1/oat/arm64/base.odex\r\n```\r\n#### 3rd trace Samsung Galaxy S7 Edge (hero2qltevzw), 4096MB RAM, Android 7.0\r\n```\r\n*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\npid: 0, tid: 0 >>> com.package.myapp <<<\r\n\r\nbacktrace:\r\n#00 pc 000000000001b4a0 /system/lib64/libc.so (memcpy+352)\r\n#01 pc 000000000012de10 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#02 pc 000000000012deb0 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#03 pc 000000000012e968 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#04 pc 0000000000126d88 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#05 pc 000000000012defc /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#06 pc 000000000012e968 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#07 pc 0000000000126d88 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#08 pc 000000000012defc /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#09 pc 000000000012e188 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#10 pc 000000000012e358 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#11 pc 000000000018e25c /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#12 pc 000000000018e744 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#13 pc 00000000001969c8 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#14 pc 0000000000196f6c /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#15 pc 00000000001978f4 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#16 pc 00000000001a77ec /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#17 pc 00000000001edb60 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#18 pc 00000000001a38c0 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#19 pc 00000000001a53e8 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#20 pc 0000000000105884 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#21 pc 00000000000eaedc /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so\r\n#22 pc 000000000006b8a0 /data/app/com.package.myapp-1/lib/arm64/librealm-jni.so (Java_io_realm_internal_OsSharedRealm_nativeCommitTransaction+48)\r\n#23 pc 0000000000f72a34 /data/app/com.package.myapp-1/oat/arm64/base.odex\r\n```\r\n#### 4th trace Samsung Galaxy S7 (heroqltevzw), 4096MB RAM, Android 7.0\r\n```\r\n*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\npid: 0, tid: 0 >>> com.package.myapp <<<\r\n\r\nbacktrace:\r\n#00 pc 000000000003bad0 /data/app/com.package.myapp-2/lib/arm64/librealm-jni.so\r\n#01 pc 00000000000bd66c /data/app/com.package.myapp-2/lib/arm64/librealm-jni.so\r\n#02 pc 00000000000512fc /data/app/com.package.myapp-2/lib/arm64/librealm-jni.so (Java_io_realm_internal_OsList_nativeGetValue+396)\r\n#03 pc 0000000002504dfc /data/app/com.package.myapp-2/oat/arm64/base.odex\r\n```\r\n\r\n### Version of Realm and tooling\r\nRealm version(s): 4.2.0\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 3.1\r\n\r\nWhich Android version and device: Several marked in trace\r\n\r\nEncryption is definitely used.\r\n", "url": "https://github.com/realm/realm-java/issues/5954", "user": "sirivanleo", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2018-05-16 06:25:07", "closed": "2019-04-08 20:20:03", "commits": {}, "ttf": 327.0002777777778, "commitsDetails": []}, {"title": "App crash after abi apk split", "body": "Recently we added abi apk split to our app. \nApp got installed with arm64-v8a architecture apk. \n`splits {\n    abi {\n      enable true\n      reset()\n      include 'x86', 'armeabi-v7a', 'arm64-v8a', 'mips', 'x86_64'\n      universalApk true\n    }\n  }`\n\nBut, still crashing with following exception. why is it looking for lib/armeabi/librealm-jni.so ? as app got installed with arm64-v8a architecture apk.\n\n`Fatal Exception: java.lang.RuntimeException: Unable to create application com.****.utils.App: com.getkeepsafe.relinker.MissingLibraryException: lib/armeabi/librealm-jni.so\n       at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4565)\n       at android.app.ActivityThread.access$1500(ActivityThread.java:151)\n       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1364)\n       at android.os.Handler.dispatchMessage(Handler.java:102)\n       at android.os.Looper.loop(Looper.java:135)\n       at android.app.ActivityThread.main(ActivityThread.java:5263)\n       at java.lang.reflect.Method.invoke(Method.java)\n       at java.lang.reflect.Method.invoke(Method.java:372)\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:903)\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:698)`\n\nfor more logs:\nhttp://crashes.to/s/03e68a830e1", "url": "https://github.com/realm/realm-java/issues/5953", "user": "srinivas3120", "labels": ["O-Community", "Pipeline-On-Hold", "Reproduction-Required", "T-Bug-Crash", "T-Duplicate"], "created": "2018-05-15 10:22:13", "closed": "2019-11-27 15:01:33", "commits": {}, "ttf": 561.0002777777778, "commitsDetails": []}, {"title": "Realm Migration Crashing on some devices", "body": "<!---\r\n\r\n**Questions**: If you have questions about how to use Realm, ask on\r\n[StackOverflow](http://stackoverflow.com/questions/ask?tags=realm).\r\nWe monitor the `realm` tag.\r\n\r\n**Feature Request**: Just fill in the first two sections below.\r\n\r\n**Bugs**: To help you as fast as possible with an issue please describe your issue\r\nand the steps you have taken to reproduce it in as many details as possible.\r\n\r\n-->\r\n\r\n#### Goal\r\n\r\n> Add a column to a Realm Object and update the Realm with a Migration accordingly.\r\n\r\n#### Expected Results\r\n\r\n> The app does not crash.\r\n\r\n#### Actual Results\r\n\r\n> The app crashes only sometimes. Of 2k users, 200 of them have experienced a crash with migrating the Realm. The versions it occurs on spans all supported versions, 4.4 - 8.1 and across a variety of devices. The crash does not happen on any locally tested devices. Between the releases some plugins, Android Studio, and gradle has been updated but Realm has not been. It is v 4.3.0 on both versions of the app.\r\n\r\n> Caused by io.realm.exceptions.RealmMigrationNeededException\r\nMigration is required due to the following errors: - Property 'Container.date' has been added.\r\n\r\n#### Steps & Code to Reproduce\r\n\r\n> Describe your current debugging efforts.\r\n\r\nI have been trying to update that app in a variety of states.\r\nOpen up a copy of the old version, and update it to the new version.\r\nBefore updating try not having saved data, having data saved in a variety of combinations, updating at different points in the app, etc. \r\nI cannot make it crash on my devices, the migration seems to be working, but the crash reports I am receiving say otherwise.\r\n\r\n#### Code Sample\r\n\r\nI have one realm that is a login realm where user credentials are stored, and then each user has his own realm for their respective data. The field added is only relevant to the user realm, not the login realm. \r\n\r\nThere was no explicitly defined schema or migration before this. I added one once the migration was needed. I did not update the login realm, as it does not access or use the property.\r\n\r\n```java\r\n\r\n// Login Realm Setup\r\n RealmConfiguration realmLoginConfig = new RealmConfiguration.Builder()\r\n                .encryptionKey(key)\r\n                .name(USERS + \".realm\")\r\n                .deleteRealmIfMigrationNeeded()\r\n                .build();\r\n        realm = Realm.getInstance(realmLoginConfig);\r\n```\r\n```java\r\n// User Realm Setup\r\nRealmConfiguration realmConfiguration = new RealmConfiguration.Builder()\r\n                .encryptionKey(realmKey)\r\n                .name(login.getUsername() + \".realm\")\r\n                .schemaVersion(1)\r\n                .migration(new Migration())\r\n                .build();\r\n        Realm.setDefaultConfiguration(realmConfiguration);\r\n```\r\n```java\r\n// Migration Code\r\npublic class Migration implements RealmMigration {\r\n    @Override\r\n    public void migrate(DynamicRealm realm, long oldVersion, long newVersion) {\r\n        RealmSchema schema = realm.getSchema();\r\n\r\n        if (oldVersion == 0) {\r\n            schema.get(\"Container\").addField(\"date\", String.class);\r\n            oldVersion++;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public int hashCode() {\r\n        return Migration.class.hashCode();\r\n    }\r\n\r\n    @Override\r\n    public boolean equals(Object obj) {\r\n        if (obj == null) {\r\n            return false;\r\n        }\r\n\r\n        return obj instanceof Migration;\r\n    }\r\n}\r\n\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s):  4.3.0\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 3.1.2\r\n\r\nWhich Android version and device: 4.4 - 8.1\r\n", "url": "https://github.com/realm/realm-java/issues/5935", "user": "rethinkautismdev", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2018-05-08 17:29:58", "closed": "2019-03-19 13:31:05", "commits": {}, "ttf": 314.0002777777778, "commitsDetails": []}, {"title": "[Sync] Schema validation failed", "body": "This was triggered while testing the permission [chat demo](https://github.com/realm/my-first-realm-app/pull/30) not always reproducible ...\r\n\r\n```\r\nE/REALM_JNI( 5823): jni: ThrowingException 8, Schema validation failed due to the following errors:\r\nE/REALM_JNI( 5823): - Property 'PrivateChatRoom.permissions' of type 'array' has unknown object type '__Permission', .\r\nE/REALM_JNI( 5823): Exception has been thrown: Schema validation failed due to the following errors:\r\nE/REALM_JNI( 5823): - Property 'PrivateChatRoom.permissions' of type 'array' has unknown object type '__Permission'\r\nD/AndroidRuntime( 5823): Shutting down VM\r\nE/AndroidRuntime( 5823): FATAL EXCEPTION: main\r\nE/AndroidRuntime( 5823): Process: io.realm.todo, PID: 5823\r\nE/AndroidRuntime( 5823): java.lang.RuntimeException: Unable to start activity ComponentInfo{io.realm.todo/io.realm.todo.ChatRoomsActivity}: java.lang.IllegalStateException: Schema validation failed due to the following errors:\r\nE/AndroidRuntime( 5823): - Property 'PrivateChatRoom.permissions' of type 'array' has unknown object type '__Permission'\r\nE/AndroidRuntime( 5823): \tat android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2325)\r\nE/AndroidRuntime( 5823): \tat android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2387)\r\nE/AndroidRuntime( 5823): \tat android.app.ActivityThread.access$800(ActivityThread.java:151)\r\nE/AndroidRuntime( 5823): \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1303)\r\nE/AndroidRuntime( 5823): \tat android.os.Handler.dispatchMessage(Handler.java:102)\r\nE/AndroidRuntime( 5823): \tat android.os.Looper.loop(Looper.java:135)\r\nE/AndroidRuntime( 5823): \tat android.app.ActivityThread.main(ActivityThread.java:5254)\r\nE/AndroidRuntime( 5823): \tat java.lang.reflect.Method.invoke(Native Method)\r\nE/AndroidRuntime( 5823): \tat java.lang.reflect.Method.invoke(Method.java:372)\r\nE/AndroidRuntime( 5823): \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:903)\r\nE/AndroidRuntime( 5823): \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:698)\r\nE/AndroidRuntime( 5823): Caused by: java.lang.IllegalStateException: Schema validation failed due to the following errors:\r\nE/AndroidRuntime( 5823): - Property 'PrivateChatRoom.permissions' of type 'array' has unknown object type '__Permission'\r\nE/AndroidRuntime( 5823): \tat io.realm.internal.OsSharedRealm.nativeGetSharedRealm(Native Method)\r\nE/AndroidRuntime( 5823): \tat io.realm.internal.OsSharedRealm.<init>(OsSharedRealm.java:171)\r\nE/AndroidRuntime( 5823): \tat io.realm.internal.OsSharedRealm.getInstance(OsSharedRealm.java:241)\r\nE/AndroidRuntime( 5823): \tat io.realm.BaseRealm.<init>(BaseRealm.java:136)\r\nE/AndroidRuntime( 5823): \tat io.realm.BaseRealm.<init>(BaseRealm.java:105)\r\nE/AndroidRuntime( 5823): \tat io.realm.Realm.<init>(Realm.java:164)\r\nE/AndroidRuntime( 5823): \tat io.realm.Realm.createInstance(Realm.java:435)\r\nE/AndroidRuntime( 5823): \tat io.realm.RealmCache.doCreateRealmOrGetFromCache(RealmCache.java:342)\r\nE/AndroidRuntime( 5823): \tat io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:282)\r\nE/AndroidRuntime( 5823): \tat io.realm.Realm.getDefaultInstance(Realm.java:343)\r\nE/AndroidRuntime( 5823): \tat io.realm.todo.ChatRoomsActivity.onCreate(ChatRoomsActivity.java:88)\r\nE/AndroidRuntime( 5823): \tat android.app.Activity.performCreate(Activity.java:5990)\r\nE/AndroidRuntime( 5823): \tat android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1106)\r\nE/AndroidRuntime( 5823): \tat android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2278)\r\nE/AndroidRuntime( 5823): \t... 10 more\r\nW/ActivityManager(  755):   Force finishing activity 1 io.realm.todo/.ChatRoomsActivity\r\n\r\n```\r\n\r\n@cmelchior this looks similar to some issue we were seeing while adding the permission schema into the next-major ...", "url": "https://github.com/realm/realm-java/issues/5883", "user": "nhachicha", "labels": ["T-Bug-Crash"], "created": "2018-04-08 20:07:12", "closed": "2018-06-29 08:32:55", "commits": {}, "ttf": 81.00027777777778, "commitsDetails": []}, {"title": "[Sync] JNI ERROR reference table overflow ", "body": "This happened while testing sync with a demo app (Chat - Permissions)\r\n\r\n```\r\nE/REALM_SYNC( 5204): Connection[1]: Reading failed: End of input\r\nE/REALM_JAVA( 5204): Session Error[realms://jarjar4.us1.cloud.realm.io/default]: JSON_EXCEPTION(1)\r\nE/REALM_JAVA( 5204): End of input\r\n...\r\nI/ActivityManager(  755): Displayed io.realm.todo/.ChatRoomActivity: +421ms\r\nW/AudioTrack(  755): AUDIO_OUTPUT_FLAG_FAST denied by client\r\nF/art     ( 5204): art/runtime/indirect_reference_table.cc:98] JNI ERROR (app bug): local reference table overflow (max=512)\r\nF/art     ( 5204): art/runtime/indirect_reference_table.cc:98] local reference table dump:\r\nF/art     ( 5204): art/runtime/indirect_reference_table.cc:98]   Last 10 entries (of 512):\r\nF/art     ( 5204): art/runtime/indirect_reference_table.cc:98]       511: 0x12fdb3e0 java.lang.String \"eyJhcHBfaWQiOiJp... (701 chars)\r\nF/art     ( 5204): art/runtime/indirect_reference_table.cc:98]       510: 0x12f50f40 java.lang.String \"/data/data/io.re... (99 chars)\r\nF/art     ( 5204): art/runtime/indirect_reference_table.cc:98]       509: 0x12f50f20 java.lang.String \"{\"authUrl\":\"http... (790 chars)\r\nF/art     ( 5204): art/runtime/indirect_reference_table.cc:98]       508: 0x12fdb3e0 java.lang.String \"eyJhcHBfaWQiOiJp... (701 chars)\r\nF/art     ( 5204): art/runtime/indirect_reference_table.cc:98]       507: 0x12f50e20 java.lang.String \"/data/data/io.re... (99 chars)\r\nF/art     ( 5204): art/runtime/indirect_reference_table.cc:98]       506: 0x12f50e00 java.lang.String \"{\"authUrl\":\"http... (790 chars)\r\nF/art     ( 5204): art/runtime/indirect_reference_table.cc:98]       505: 0x12fdb3e0 java.lang.String \"eyJhcHBfaWQiOiJp... (701 chars)\r\nF/art     ( 5204): art/runtime/indirect_reference_table.cc:98]       504: 0x12f50d20 java.lang.String \"/data/data/io.re... (99 chars)\r\nF/art     ( 5204): art/runtime/indirect_reference_table.cc:98]       503: 0x12f50d00 java.lang.String \"{\"authUrl\":\"http... (790 chars)\r\nF/art     ( 5204): art/runtime/indirect_reference_table.cc:98]       502: 0x12fdb3e0 java.lang.String \"eyJhcHBfaWQiOiJp... (701 chars)\r\nF/art     ( 5204): art/runtime/indirect_reference_table.cc:98]   Summary:\r\nF/art     ( 5204): art/runtime/indirect_reference_table.cc:98]       512 of java.lang.String (355 unique instances)\r\nF/art     ( 5204): art/runtime/indirect_reference_table.cc:98]\r\nF/art     ( 5204): art/runtime/runtime.cc:289] Runtime aborting...\r\nF/art     ( 5204): art/runtime/runtime.cc:289] Aborting thread:\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"Thread-315\" prio=5 tid=27 Runnable\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | group=\"\" sCount=0 dsCount=0 obj=0x12e560a0 self=0xf3fb5c00\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5240 nice=0 cgrp=default sched=0/0 handle=0xe1854b00\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | state=R schedstat=( 218939476 10154752 592 ) utm=6 stm=15 core=1 HZ=100\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | stack=0xe08e8000-0xe08ea000 stackSize=1012KB\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | held mutexes= \"abort lock\" \"mutator lock\"(shared held)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #00 pc 00005d03  /system/lib/libbacktrace_libc++.so (UnwindCurrent::Unwind(unsigned int, ucontext*)+83)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #01 pc 00003051  /system/lib/libbacktrace_libc++.so (Backtrace::Unwind(unsigned int, ucontext*)+33)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #02 pc 003c9b97  /system/lib/libart.so (art::DumpNativeStack(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, int, char const*, art::mirror::ArtMethod*)+135)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #03 pc 00392f52  /system/lib/libart.so (art::Thread::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const+306)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #04 pc 00377674  /system/lib/libart.so (art::AbortState::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)+644)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #05 pc 00377bdd  /system/lib/libart.so (art::Runtime::Abort()+125)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #06 pc 000ec704  /system/lib/libart.so (art::LogMessage::~LogMessage()+1876)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #07 pc 00224429  /system/lib/libart.so (art::IndirectReferenceTable::Add(unsigned int, art::mirror::Object*)+1065)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #08 pc 002cb4e8  /system/lib/libart.so (art::JNI::NewString(_JNIEnv*, unsigned short const*, int)+392)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #09 pc 0010ec4d  /system/lib/libart.so (art::CheckJNI::NewString(_JNIEnv*, unsigned short const*, int)+125)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #10 pc 000fa97d  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #11 pc 00092dd0  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #12 pc 0017e9e9  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #13 pc 0017edc1  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #14 pc 00183256  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #15 pc 001834a0  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #16 pc 0017c32b  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #17 pc 001ab6d0  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #18 pc 001a450f  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #19 pc 001e0be0  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #20 pc 001e0d70  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #21 pc 001ec42e  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #22 pc 001e164d  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #23 pc 001e1673  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #24 pc 001c44de  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #25 pc 001ecb68  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (std::function<void (std::error_code, unsigned int)>::operator()(std::error_code, unsigned int) const+60)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #26 pc 001ecf5b  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #27 pc 001bc960  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #28 pc 001a2cce  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #29 pc 00177a98  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (_ZNSt6thread5_ImplISt12_Bind_simpleIFZN5realm5_impl10SyncClientC4ESt10unique_ptrINS2_4util6LoggerESt14default_deleteIS7_EENS2_4sync6Client13ReconnectModeEbEUlvE_vEEE6_M_runEv+56)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #30 pc 0043bf9e  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #31 pc 000211d8  /system/lib/libc.so (__pthread_start(void*)+56)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #32 pc 0001c559  /system/lib/libc.so (__start_thread+25)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #33 pc 00013126  /system/lib/libc.so (__bionic_clone+70)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   (no managed stack frames)\r\nF/art     ( 5204): art/runtime/runtime.cc:289] Dumping all threads without appropriate locks held: thread list lock\r\nF/art     ( 5204): art/runtime/runtime.cc:289] All threads:\r\nF/art     ( 5204): art/runtime/runtime.cc:289] DALVIK THREADS (43):\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"main\" prio=5 tid=1 Native\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | group=\"\" sCount=0 dsCount=0 obj=0x74cb2000 self=0xf3c25800\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5204 nice=0 cgrp=default sched=0/0 handle=0xf7749ea0\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | state=S schedstat=( 6239599297 1235865582 24697 ) utm=86 stm=537 core=2 HZ=100\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | stack=0xff512000-0xff514000 stackSize=8MB\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | held mutexes=\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: ep_poll+0x307/0x400\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: SyS_epoll_pwait+0x1c0/0x1f0\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_syscall_32_irqs_off+0x5f/0x180\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: entry_INT80_compat+0x36/0x50\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #00 pc 00075795  /system/lib/libc.so (__epoll_pwait+37)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #01 pc 0001cca2  /system/lib/libc.so (epoll_pwait+98)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #02 pc 0001ccea  /system/lib/libc.so (epoll_wait+58)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #03 pc 0001b6a7  /system/lib/libutils.so (android::Looper::pollInner(int)+199)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #04 pc 0001baa7  /system/lib/libutils.so (android::Looper::pollOnce(int, int*, int*, void**)+55)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #05 pc 000c8787  /system/lib/libandroid_runtime.so (android::NativeMessageQueue::pollOnce(_JNIEnv*, int)+71)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #06 pc 000c87ea  /system/lib/libandroid_runtime.so (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #07 pc 000db8ae  /data/dalvik-cache/x86/system@framework@boot.oat (Java_android_os_MessageQueue_nativePollOnce__JI+146)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at android.os.MessageQueue.nativePollOnce(Native method)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at android.os.MessageQueue.next(MessageQueue.java:143)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at android.os.Looper.loop(Looper.java:122)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at android.app.ActivityThread.main(ActivityThread.java:5254)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.reflect.Method.invoke!(Native method)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.reflect.Method.invoke(Method.java:372)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:903)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:698)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"Heap thread pool worker thread 2\" prio=5 tid=2 Native (still starting up)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | group=\"\" sCount=0 dsCount=0 obj=0x0 self=0xeec85400\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5208 nice=0 cgrp=default sched=0/0 handle=0xf3c51a80\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | state=S schedstat=( 15446999 14075292 25 ) utm=0 stm=1 core=1 HZ=100\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | stack=0xf2ff9000-0xf2ffb000 stackSize=1020KB\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | held mutexes=\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait_queue_me+0xc0/0x110\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait+0x112/0x250\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_futex+0xdc/0xb30\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: compat_SyS_futex+0x75/0x150\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_syscall_32_irqs_off+0x5f/0x180\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: entry_INT80_compat+0x36/0x50\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #00 pc 00013300  /system/lib/libc.so (syscall+32)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #01 pc 000fdc97  /dev/ashmem/dalvik-Heap thread pool worker thread 2 (deleted) (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   (no managed stack frames)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"Heap thread pool worker thread 0\" prio=5 tid=3 Native (still starting up)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | group=\"\" sCount=0 dsCount=0 obj=0x0 self=0xf3c25c00\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5206 nice=0 cgrp=default sched=0/0 handle=0xf3c51580\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | state=S schedstat=( 1364300 13480496 22 ) utm=0 stm=0 core=3 HZ=100\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | stack=0xf31f9000-0xf31fb000 stackSize=1020KB\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | held mutexes=\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait_queue_me+0xc0/0x110\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait+0x112/0x250\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_futex+0xdc/0xb30\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: compat_SyS_futex+0x75/0x150\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_syscall_32_irqs_off+0x5f/0x180\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: entry_INT80_compat+0x36/0x50\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #00 pc 00013300  /system/lib/libc.so (syscall+32)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #01 pc 000fdc97  /dev/ashmem/dalvik-Heap thread pool worker thread 0 (deleted) (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   (no managed stack frames)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"Heap thread pool worker thread 1\" prio=5 tid=4 Native (still starting up)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | group=\"\" sCount=0 dsCount=0 obj=0x0 self=0xeec86400\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5207 nice=0 cgrp=default sched=0/0 handle=0xf3c51800\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | state=S schedstat=( 20774388 8075523 22 ) utm=0 stm=1 core=1 HZ=100\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | stack=0xf30f9000-0xf30fb000 stackSize=1020KB\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | held mutexes=\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait_queue_me+0xc0/0x110\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait+0x112/0x250\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_futex+0xdc/0xb30\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: compat_SyS_futex+0x75/0x150\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_syscall_32_irqs_off+0x5f/0x180\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: entry_INT80_compat+0x36/0x50\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #00 pc 00013300  /system/lib/libc.so (syscall+32)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #01 pc 000fdc97  /dev/ashmem/dalvik-Heap thread pool worker thread 1 (deleted) (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   (no managed stack frames)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"Signal Catcher\" prio=5 tid=5 WaitingInMainSignalCatcherLoop\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | group=\"\" sCount=0 dsCount=0 obj=0x12c000a0 self=0xf3c30800\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5210 nice=0 cgrp=default sched=0/0 handle=0xf3c51d00\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | state=S schedstat=( 4080434 297527 2 ) utm=0 stm=0 core=3 HZ=100\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | stack=0xf2efb000-0xf2efd000 stackSize=1012KB\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | held mutexes=\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_sigtimedwait+0x152/0x1e0\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: C_SYSC_rt_sigtimedwait+0x8d/0xe0\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: compat_SyS_rt_sigtimedwait+0xe/0x10\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_syscall_32_irqs_off+0x5f/0x180\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: entry_INT80_compat+0x36/0x50\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #00 pc 0007555b  /system/lib/libc.so (__rt_sigtimedwait+27)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #01 pc 00024397  /system/lib/libc.so (sigwait+71)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #02 pc 0037fd45  /system/lib/libart.so (art::SignalCatcher::WaitForSignal(art::Thread*, art::SignalSet&)+133)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #03 pc 00380962  /system/lib/libart.so (art::SignalCatcher::Run(void*)+306)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #04 pc 000211d8  /system/lib/libc.so (__pthread_start(void*)+56)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #05 pc 0001c559  /system/lib/libc.so (__start_thread+25)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #06 pc 00013126  /system/lib/libc.so (__bionic_clone+70)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   (no managed stack frames)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"JDWP\" prio=5 tid=6 WaitingInMainDebuggerLoop\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | group=\"\" sCount=0 dsCount=0 obj=0x12c050a0 self=0xeec87400\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5212 nice=0 cgrp=default sched=0/0 handle=0xf3c51f80\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | state=S schedstat=( 1869950 2008463 18 ) utm=0 stm=0 core=3 HZ=100\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | stack=0xf2dfd000-0xf2dff000 stackSize=1012KB\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | held mutexes=\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: poll_schedule_timeout+0x49/0x70\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_select+0x57d/0x7c0\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: compat_core_sys_select+0x1cf/0x290\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: compat_SyS_pselect6+0x21a/0x240\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_syscall_32_irqs_off+0x5f/0x180\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: entry_INT80_compat+0x36/0x50\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #00 pc 000760f5  /system/lib/libc.so (__pselect6+37)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #01 pc 0001fcf3  /system/lib/libc.so (select+179)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #02 pc 0043892f  /system/lib/libart.so (art::JDWP::JdwpAdbState::ProcessIncoming()+335)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #03 pc 0028f4df  /system/lib/libart.so (art::JDWP::JdwpState::Run()+415)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #04 pc 002915d0  /system/lib/libart.so (art::JDWP::StartJdwpThread(void*)+32)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #05 pc 000211d8  /system/lib/libc.so (__pthread_start(void*)+56)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #06 pc 0001c559  /system/lib/libc.so (__start_thread+25)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #07 pc 00013126  /system/lib/libc.so (__bionic_clone+70)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   (no managed stack frames)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"ReferenceQueueDaemon\" prio=5 tid=7 Waiting\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | group=\"\" sCount=0 dsCount=0 obj=0x12c0d0a0 self=0xf3c26400\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5214 nice=0 cgrp=default sched=0/0 handle=0xf3c53d80\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | state=S schedstat=( 12203374 12210258 724 ) utm=0 stm=0 core=3 HZ=100\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | stack=0xf2cf9000-0xf2cfb000 stackSize=1036KB\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | held mutexes=\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait_queue_me+0xc0/0x110\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait+0x112/0x250\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_futex+0xdc/0xb30\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: compat_SyS_futex+0x75/0x150\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_syscall_32_irqs_off+0x5f/0x180\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: entry_INT80_compat+0x36/0x50\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #00 pc 00013300  /system/lib/libc.so (syscall+32)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #01 pc 001018e7  [stack:5214] (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Object.wait!(Native method)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   - waiting on <0x03c44fe0> (a java.lang.Class<java.lang.ref.ReferenceQueue>)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Daemons$ReferenceQueueDaemon.run(Daemons.java:134)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   - locked <0x03c44fe0> (a java.lang.Class<java.lang.ref.ReferenceQueue>)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Thread.run(Thread.java:818)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"FinalizerWatchdogDaemon\" prio=5 tid=8 Waiting\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | group=\"\" sCount=0 dsCount=0 obj=0x12c0d160 self=0xf3c31800\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5217 nice=0 cgrp=default sched=0/0 handle=0xf3c54280\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | state=S schedstat=( 1370319 46052 14 ) utm=0 stm=0 core=0 HZ=100\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | stack=0xe3acb000-0xe3acd000 stackSize=1036KB\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | held mutexes=\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait_queue_me+0xc0/0x110\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait+0x112/0x250\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_futex+0xdc/0xb30\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: compat_SyS_futex+0x75/0x150\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_syscall_32_irqs_off+0x5f/0x180\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: entry_INT80_compat+0x36/0x50\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #00 pc 00013300  /system/lib/libc.so (syscall+32)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #01 pc 001018b7  [stack:5217] (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Object.wait!(Native method)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   - waiting on <0x122c7299> (a java.lang.Daemons$FinalizerWatchdogDaemon)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Daemons$FinalizerWatchdogDaemon.waitForObject(Daemons.java:240)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   - locked <0x122c7299> (a java.lang.Daemons$FinalizerWatchdogDaemon)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Daemons$FinalizerWatchdogDaemon.run(Daemons.java:212)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Thread.run(Thread.java:818)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"FinalizerDaemon\" prio=5 tid=9 Waiting\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | group=\"\" sCount=0 dsCount=0 obj=0x12c0d100 self=0xf3c26800\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5215 nice=0 cgrp=default sched=0/0 handle=0xf3c54000\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | state=S schedstat=( 37401926 23722041 737 ) utm=0 stm=3 core=3 HZ=100\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | stack=0xeeafe000-0xeeb00000 stackSize=1036KB\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | held mutexes=\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait_queue_me+0xc0/0x110\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait+0x112/0x250\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_futex+0xdc/0xb30\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: compat_SyS_futex+0x75/0x150\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_syscall_32_irqs_off+0x5f/0x180\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: entry_INT80_compat+0x36/0x50\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #00 pc 00013300  /system/lib/libc.so (syscall+32)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #01 pc 00101807  [stack:5215] (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Object.wait!(Native method)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   - waiting on <0x032d995e> (a java.lang.ref.ReferenceQueue)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Object.wait(Object.java:422)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:101)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   - locked <0x032d995e> (a java.lang.ref.ReferenceQueue)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:72)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Daemons$FinalizerDaemon.run(Daemons.java:174)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Thread.run(Thread.java:818)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"HeapTrimmerDaemon\" prio=5 tid=10 Waiting\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | group=\"\" sCount=0 dsCount=0 obj=0x12c0d1c0 self=0xf3c31c00\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5218 nice=0 cgrp=default sched=0/0 handle=0xf3c54500\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | state=S schedstat=( 3142784 1624546 21 ) utm=0 stm=0 core=3 HZ=100\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | stack=0xe39c7000-0xe39c9000 stackSize=1036KB\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | held mutexes=\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait_queue_me+0xc0/0x110\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait+0x112/0x250\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_futex+0xdc/0xb30\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: compat_SyS_futex+0x75/0x150\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_syscall_32_irqs_off+0x5f/0x180\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: entry_INT80_compat+0x36/0x50\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #00 pc 00013300  /system/lib/libc.so (syscall+32)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #01 pc 001018f7  [stack:5218] (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Object.wait!(Native method)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   - waiting on <0x3bd9213f> (a java.lang.Daemons$HeapTrimmerDaemon)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Daemons$HeapTrimmerDaemon.run(Daemons.java:311)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   - locked <0x3bd9213f> (a java.lang.Daemons$HeapTrimmerDaemon)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Thread.run(Thread.java:818)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"GCDaemon\" prio=5 tid=11 Waiting\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | group=\"\" sCount=0 dsCount=0 obj=0x12c0d220 self=0xf3c32000\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5219 nice=0 cgrp=default sched=0/0 handle=0xf3c54780\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | state=S schedstat=( 248862318 36557498 120 ) utm=5 stm=19 core=0 HZ=100\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | stack=0xe38c3000-0xe38c5000 stackSize=1036KB\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | held mutexes=\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait_queue_me+0xc0/0x110\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait+0x112/0x250\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_futex+0xdc/0xb30\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: compat_SyS_futex+0x75/0x150\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_syscall_32_irqs_off+0x5f/0x180\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: entry_INT80_compat+0x36/0x50\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #00 pc 00013300  /system/lib/libc.so (syscall+32)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #01 pc 001018f7  [stack:5219] (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Object.wait!(Native method)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   - waiting on <0x194e8a0c> (a java.lang.Daemons$GCDaemon)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Daemons$GCDaemon.run(Daemons.java:344)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   - locked <0x194e8a0c> (a java.lang.Daemons$GCDaemon)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Thread.run(Thread.java:818)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"Binder_1\" prio=5 tid=12 Native\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | group=\"\" sCount=0 dsCount=0 obj=0x12c5f0a0 self=0xeec88400\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5220 nice=0 cgrp=default sched=0/0 handle=0xf3c54a00\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | state=S schedstat=( 103741465 49871621 2267 ) utm=0 stm=10 core=1 HZ=100\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | stack=0xe36c7000-0xe36c9000 stackSize=1012KB\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | held mutexes=\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: binder_thread_read+0x837/0xf00\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: binder_ioctl_write_read.isra.39+0xf2/0x260\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: binder_ioctl+0x219/0x5ea\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: compat_SyS_ioctl+0xc0/0x1130\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_syscall_32_irqs_off+0x5f/0x180\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: entry_INT80_compat+0x36/0x50\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #00 pc 00075156  /system/lib/libc.so (__ioctl+22)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #01 pc 000adc5a  /system/lib/libc.so (ioctl+42)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #02 pc 0002e26b  /system/lib/libbinder.so (android::IPCThreadState::talkWithDriver(bool)+251)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #03 pc 0002ec65  /system/lib/libbinder.so (android::IPCThreadState::getAndExecuteCommand()+37)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #04 pc 0002ed29  /system/lib/libbinder.so (android::IPCThreadState::joinThreadPool(bool)+105)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #05 pc 000377a8  /system/lib/libbinder.so (android::PoolThread::threadLoop()+40)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #06 pc 000169de  /system/lib/libutils.so (android::Thread::_threadLoop(void*)+398)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #07 pc 00071d92  /system/lib/libandroid_runtime.so (android::AndroidRuntime::javaThreadShell(void*)+98)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #08 pc 000160fa  /system/lib/libutils.so (thread_data_t::trampoline(thread_data_t const*)+122)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #09 pc 000211d8  /system/lib/libc.so (__pthread_start(void*)+56)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #10 pc 0001c559  /system/lib/libc.so (__start_thread+25)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #11 pc 00013126  /system/lib/libc.so (__bionic_clone+70)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   (no managed stack frames)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"Binder_2\" prio=5 tid=13 Native\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | group=\"\" sCount=0 dsCount=0 obj=0x12c640a0 self=0xf3c32800\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5221 nice=0 cgrp=default sched=0/0 handle=0xeecb2080\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | state=S schedstat=( 108818821 21599660 2287 ) utm=5 stm=5 core=2 HZ=100\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | stack=0xe35c9000-0xe35cb000 stackSize=1012KB\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | held mutexes=\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: binder_thread_read+0x837/0xf00\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: binder_ioctl_write_read.isra.39+0xf2/0x260\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: binder_ioctl+0x219/0x5ea\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: compat_SyS_ioctl+0xc0/0x1130\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_syscall_32_irqs_off+0x5f/0x180\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: entry_INT80_compat+0x36/0x50\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #00 pc 00075156  /system/lib/libc.so (__ioctl+22)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #01 pc 000adc5a  /system/lib/libc.so (ioctl+42)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #02 pc 0002e26b  /system/lib/libbinder.so (android::IPCThreadState::talkWithDriver(bool)+251)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #03 pc 0002ec65  /system/lib/libbinder.so (android::IPCThreadState::getAndExecuteCommand()+37)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #04 pc 0002ed29  /system/lib/libbinder.so (android::IPCThreadState::joinThreadPool(bool)+105)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #05 pc 000377a8  /system/lib/libbinder.so (android::PoolThread::threadLoop()+40)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #06 pc 000169de  /system/lib/libutils.so (android::Thread::_threadLoop(void*)+398)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #07 pc 00071d92  /system/lib/libandroid_runtime.so (android::AndroidRuntime::javaThreadShell(void*)+98)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #08 pc 000160fa  /system/lib/libutils.so (thread_data_t::trampoline(thread_data_t const*)+122)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #09 pc 000211d8  /system/lib/libc.so (__pthread_start(void*)+56)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #10 pc 0001c559  /system/lib/libc.so (__start_thread+25)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #11 pc 00013126  /system/lib/libc.so (__bionic_clone+70)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   (no managed stack frames)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"RenderThread\" prio=5 tid=14 Native\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | group=\"\" sCount=0 dsCount=0 obj=0x12c00b80 self=0xeec89400\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5223 nice=-4 cgrp=default sched=0/0 handle=0xf3c55400\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | state=S schedstat=( 3658062198 1206979813 57864 ) utm=82 stm=283 core=3 HZ=100\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | stack=0xe2389000-0xe238b000 stackSize=1012KB\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: ep_poll+0x307/0x400\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #09 pc 000211d8  /system/lib/libc.so (__pthread_start(void*)+56)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #11 pc 00013126  /system/lib/libc.so (__bionic_clone+70)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5225 nice=0 cgrp=default sched=0/0 handle=0xf3c56580\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | stack=0xe2211000-0xe2213000 stackSize=1036KB\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait_queue_me+0xc0/0x110\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_futex+0xdc/0xb30\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_syscall_32_irqs_off+0x5f/0x180\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #00 pc 00013300  /system/lib/libc.so (syscall+32)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   - waiting on <0x05c89f55> (a java.lang.Object)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   - locked <0x05c89f55> (a java.lang.Object)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Thread.run(Thread.java:818)\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"AsyncTask #2\" prio=5 tid=16 Waiting\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5226 nice=0 cgrp=default sched=0/0 handle=0xf3c56d00\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | stack=0xe2109000-0xe210b000 stackSize=1036KB\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait_queue_me+0xc0/0x110\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_futex+0xdc/0xb30\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: entry_INT80_compat+0x36/0x50\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #01 pc 001016e7  [stack:5226] (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   - waiting on <0x27b5ed6a> (a java.lang.Object)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   - locked <0x27b5ed6a> (a java.lang.Object)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | group=\"\" sCount=0 dsCount=0 obj=0x12c0d340 self=0xf3fb3c00\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_futex+0xdc/0xb30\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"pool-2-thread-1\" prio=5 tid=22 Waiting\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5234 nice=0 cgrp=default sched=0/0 handle=0xe1852080\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | stack=0xe0df6000-0xe0df8000 stackSize=1036KB\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait_queue_me+0xc0/0x110\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_futex+0xdc/0xb30\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_syscall_32_irqs_off+0x5f/0x180\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #00 pc 00013300  /system/lib/libc.so (syscall+32)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | group=\"\" sCount=0 dsCount=0 obj=0x12e3e340 self=0xf3fb5000\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | stack=0xe0aea000-0xe0aec000 stackSize=1036KB\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait_queue_me+0xc0/0x110\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_futex+0xdc/0xb30\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #03 pc 00392f52  /system/lib/libart.so (art::Thread::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const+306)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #16 pc 001834a0  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #00 pc 00013300  /system/lib/libc.so (syscall+32)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   - waiting on <0x2c04f1d3> (a java.lang.Object)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   - locked <0x2c04f1d3> (a java.lang.Object)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5255 nice=10 cgrp=default sched=3/0 handle=0xe1857f80\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait_queue_me+0xc0/0x110\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: compat_SyS_futex+0x75/0x150\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: entry_INT80_compat+0x36/0x50\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Object.wait!(Native method)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Thread.parkFor(Thread.java:1220)\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"pool-1-thread-7\" prio=5 tid=24 Waiting\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5274 nice=10 cgrp=default sched=3/0 handle=0xf3c58380\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | held mutexes=\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait+0x112/0x250\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: compat_SyS_futex+0x75/0x150\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: entry_INT80_compat+0x36/0x50\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Object.wait!(Native method)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Thread.parkFor(Thread.java:1220)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at sun.misc.Unsafe.park(Unsafe.java:299)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Thread.run(Thread.java:818)\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"pool-1-thread-8\" prio=5 tid=34 Waiting\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | state=S schedstat=( 2695348 384739 7 ) utm=0 stm=0 core=1 HZ=100\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | held mutexes=\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait+0x112/0x250\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: compat_SyS_futex+0x75/0x150\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #00 pc 00013300  /system/lib/libc.so (syscall+32)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Object.wait!(Native method)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Thread.parkFor(Thread.java:1220)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at sun.misc.Unsafe.park(Unsafe.java:299)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:373)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Thread.run(Thread.java:818)\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"pool-1-thread-9\" prio=5 tid=35 Waiting\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | state=S schedstat=( 2132501 733784 10 ) utm=0 stm=0 core=2 HZ=100\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | held mutexes=\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait+0x112/0x250\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: compat_SyS_futex+0x75/0x150\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: entry_INT80_compat+0x36/0x50\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #01 pc 001016e7  [stack:5296] (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Thread.parkFor(Thread.java:1220)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at sun.misc.Unsafe.park(Unsafe.java:299)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Thread.run(Thread.java:818)\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"Binder_3\" prio=5 tid=36 Native\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5311 nice=0 cgrp=default sched=0/0 handle=0xf3c55b80\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | stack=0xe0304000-0xe0306000 stackSize=1012KB\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: binder_thread_read+0x837/0xf00\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: compat_SyS_ioctl+0xc0/0x1130\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: entry_INT80_compat+0x36/0x50\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #01 pc 000adc5a  /system/lib/libc.so (ioctl+42)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #03 pc 0002ec65  /system/lib/libbinder.so (android::IPCThreadState::getAndExecuteCommand()+37)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #05 pc 000377a8  /system/lib/libbinder.so (android::PoolThread::threadLoop()+40)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #08 pc 000160fa  /system/lib/libutils.so (thread_data_t::trampoline(thread_data_t const*)+122)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #10 pc 0001c559  /system/lib/libc.so (__start_thread+25)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | group=\"\" sCount=0 dsCount=0 obj=0x12e31be0 self=0xeec8b000\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | stack=0xdf3e2000-0xdf3e4000 stackSize=1036KB\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait_queue_me+0xc0/0x110\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_futex+0xdc/0xb30\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_syscall_32_irqs_off+0x5f/0x180\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #01 pc 001016e7  [stack:5443] (???)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   - waiting on <0x288ec84b> (a java.lang.Object)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   - locked <0x288ec84b> (a java.lang.Object)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:373)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | group=\"\" sCount=0 dsCount=0 obj=0x12e31e20 self=0xeec8b400\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | state=S schedstat=( 9430184 278903 17 ) utm=0 stm=0 core=2 HZ=100\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait_queue_me+0xc0/0x110\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_futex+0xdc/0xb30\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_syscall_32_irqs_off+0x5f/0x180\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #00 pc 00013300  /system/lib/libc.so (syscall+32)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   - waiting on <0x3ad45228> (a java.lang.Object)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   - locked <0x3ad45228> (a java.lang.Object)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:373)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | group=\"\" sCount=0 dsCount=0 obj=0x12e31ee0 self=0xeec8d400\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | state=S schedstat=( 7878773 266605 17 ) utm=0 stm=0 core=2 HZ=100\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | held mutexes=\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_futex+0xdc/0xb30\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_syscall_32_irqs_off+0x5f/0x180\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #00 pc 00013300  /system/lib/libc.so (syscall+32)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   - waiting on <0x305f5b41> (a java.lang.Object)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   - locked <0x305f5b41> (a java.lang.Object)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:373)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | group=\"\" sCount=0 dsCount=0 obj=0x12e31fa0 self=0xeec91800\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | state=S schedstat=( 7201870 312620 19 ) utm=0 stm=0 core=2 HZ=100\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | held mutexes=\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_futex+0xdc/0xb30\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: do_syscall_32_irqs_off+0x5f/0x180\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #00 pc 00013300  /system/lib/libc.so (syscall+32)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Object.wait!(Native method)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Thread.parkFor(Thread.java:1220)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:373)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Thread.run(Thread.java:818)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | group=\"\" sCount=0 dsCount=0 obj=0x12eaf0a0 self=0xeec91c00\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | state=S schedstat=( 8140951 271954 17 ) utm=0 stm=0 core=2 HZ=100\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | held mutexes=\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait+0x112/0x250\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: compat_SyS_futex+0x75/0x150\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   native: #00 pc 00013300  /system/lib/libc.so (syscall+32)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Object.wait!(Native method)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Thread.parkFor(Thread.java:1220)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at sun.misc.Unsafe.park(Unsafe.java:299)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Thread.run(Thread.java:818)\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"pool-2-thread-8\" prio=5 tid=42 Waiting\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5598 nice=0 cgrp=default sched=0/0 handle=0xe0504580\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | held mutexes=\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait+0x112/0x250\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: compat_SyS_futex+0x75/0x150\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: entry_INT80_compat+0x36/0x50\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Object.wait!(Native method)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Thread.parkFor(Thread.java:1220)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at sun.misc.Unsafe.park(Unsafe.java:299)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:373)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1097)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Thread.run(Thread.java:818)\r\nF/art     ( 5204): art/runtime/runtime.cc:289] \"pool-2-thread-9\" prio=5 tid=43 Waiting\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | sysTid=5690 nice=0 cgrp=default sched=0/0 handle=0xe0504f80\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   | held mutexes=\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: futex_wait+0x112/0x250\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: compat_SyS_futex+0x75/0x150\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   kernel: entry_INT80_compat+0x36/0x50\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Object.wait!(Native method)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Thread.parkFor(Thread.java:1220)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at sun.misc.Unsafe.park(Unsafe.java:299)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1035)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]   at java.lang.Thread.run(Thread.java:818)\r\nF/art     ( 5204): art/runtime/runtime.cc:289]\r\nF/libc    ( 5204): Fatal signal 6 (SIGABRT), code -6 in tid 5240 (Thread-315)\r\nI/DEBUG   (  119): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\nI/DEBUG   (  119): Build fingerprint: 'generic/vbox86p/vbox86p:5.1/LMY47D/22:userdebug/test-keys'\r\nI/DEBUG   (  119): Revision: '0'\r\nI/DEBUG   (  119): ABI: 'x86'\r\nI/DEBUG   (  119): pid: 5204, tid: 5240, name: Thread-315  >>> io.realm.todo <<<\r\nI/DEBUG   (  119): signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------\r\nI/DEBUG   (  119): Abort message: 'art/runtime/indirect_reference_table.cc:98] JNI ERROR (app bug): local reference table overflow (max=512)'\r\nI/DEBUG   (  119):     eax 00000000  ebx 00001454  ecx 00001478  edx 00000006\r\nI/DEBUG   (  119):     esi e09e3db8  edi 0000000b\r\nI/DEBUG   (  119):     xcs 00000023  xds 0000002b  xes 0000002b  xfs 000000d7  xss 0000002b\r\nI/DEBUG   (  119):     eip f74d10b6  ebp 00001478  esp e09e3010  flags 00200286\r\nI/DEBUG   (  119):\r\nI/DEBUG   (  119): backtrace:\r\nI/DEBUG   (  119):     #00 pc 000740b6  /system/lib/libc.so (tgkill+22)\r\nI/DEBUG   (  119):     #01 pc 000221ab  /system/lib/libc.so (pthread_kill+155)\r\nI/DEBUG   (  119):     #02 pc 00023a24  /system/lib/libc.so (raise+36)\r\nI/DEBUG   (  119):     #03 pc 0001be24  /system/lib/libc.so (abort+84)\r\nI/DEBUG   (  119):     #04 pc 00377c86  /system/lib/libart.so (art::Runtime::Abort()+294)\r\nI/DEBUG   (  119):     #05 pc 000ec704  /system/lib/libart.so (art::LogMessage::~LogMessage()+1876)\r\nI/DEBUG   (  119):     #06 pc 00224429  /system/lib/libart.so (art::IndirectReferenceTable::Add(unsigned int, art::mirror::Object*)+1065)\r\nI/DEBUG   (  119):     #07 pc 002cb4e8  /system/lib/libart.so (art::JNI::NewString(_JNIEnv*, unsigned short const*, int)+392)\r\nI/DEBUG   (  119):     #08 pc 0010ec4d  /system/lib/libart.so (art::CheckJNI::NewString(_JNIEnv*, unsigned short const*, int)+125)\r\nI/DEBUG   (  119):     #09 pc 000fa97d  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so\r\nI/DEBUG   (  119):     #10 pc 00092dd0  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so\r\nI/DEBUG   (  119):     #11 pc 0017e9e9  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so\r\nI/DEBUG   (  119):     #12 pc 0017edc1  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so\r\nI/DEBUG   (  119):     #13 pc 00183256  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so\r\nI/DEBUG   (  119):     #14 pc 001834a0  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so\r\nI/DEBUG   (  119):     #15 pc 0017c32b  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so\r\nI/DEBUG   (  119):     #16 pc 001ab6d0  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so\r\nI/DEBUG   (  119):     #17 pc 001a450f  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so\r\nI/DEBUG   (  119):     #18 pc 001e0be0  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so\r\nI/DEBUG   (  119):     #19 pc 001e0d70  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so\r\nI/DEBUG   (  119):     #20 pc 001ec42e  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so\r\nI/DEBUG   (  119):     #21 pc 001e164d  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so\r\nI/DEBUG   (  119):     #22 pc 001e1673  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so\r\nI/DEBUG   (  119):     #23 pc 001c44de  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so\r\nI/DEBUG   (  119):     #24 pc 001ecb68  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (std::function<void (std::error_code, unsigned int)>::operator()(std::error_code, unsigned int) const+60)\r\nI/DEBUG   (  119):     #25 pc 001ecf5b  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so\r\nI/DEBUG   (  119):     #26 pc 001bc960  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so\r\nI/DEBUG   (  119):     #27 pc 001a2cce  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so\r\nI/DEBUG   (  119):     #28 pc 00177a98  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so (_ZNSt6thread5_ImplISt12_Bind_simpleIFZN5realm5_impl10SyncClientC4ESt10unique_ptrINS2_4util6LoggerESt14default_deleteIS7_EENS2_4sync6Client13ReconnectModeEbEUlvE_vEEE6_M_runEv+56)\r\nI/DEBUG   (  119):     #29 pc 0043bf9e  /data/app/io.realm.todo-1/lib/x86/librealm-jni.so\r\nI/DEBUG   (  119):     #30 pc 000211d8  /system/lib/libc.so (__pthread_start(void*)+56)\r\nI/DEBUG   (  119):     #31 pc 0001c559  /system/lib/libc.so (__start_thread+25)\r\nI/DEBUG   (  119):     #32 pc 00013126  /system/lib/libc.so (__bionic_clone+70)\r\nI/DEBUG   (  119):\r\nI/DEBUG   (  119): Tombstone written to: /data/tombstones/tombstone_06\r\nI/BootReceiver(  755): Copying /data/tombstones/tombstone_06 to DropBox (SYSTEM_TOMBSTONE)\r\n```", "url": "https://github.com/realm/realm-java/issues/5880", "user": "nhachicha", "labels": ["T-Bug-Crash"], "created": "2018-04-07 18:02:29", "closed": "2018-06-22 15:07:25", "commits": {}, "ttf": 75.00027777777778, "commitsDetails": []}, {"title": "Realm No such file or directory crash ", "body": "#### Expected Results\r\nApp shouldn't crash\r\n\r\n#### Actual Results\r\n```\r\nio.realm.exceptions.RealmFileException: No such file or directory () (/data/data/com.truly.truly/files/default.realm) in /Users/Nabil/Dev/realm/master/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_OsSharedRealm.cpp line 101 Kind: ACCESS_ERROR.\r\n\tat io.realm.internal.OsSharedRealm.nativeGetSharedRealm(OsSharedRealm.java)\r\n\tat io.realm.internal.OsSharedRealm.<init>(OsSharedRealm.java:184)\r\n\tat io.realm.internal.OsSharedRealm.<init>(OsSharedRealm.java:184)\r\n\tat io.realm.internal.OsSharedRealm.getInstance(OsSharedRealm.java:254)\r\n\tat io.realm.BaseRealm.<init>(BaseRealm.java:124)\r\n\tat io.realm.BaseRealm.<init>(BaseRealm.java:124)\r\n\tat io.realm.BaseRealm.<init>(BaseRealm.java:93)\r\n\tat io.realm.BaseRealm.<init>(BaseRealm.java:93)\r\n\tat io.realm.BaseRealm.<init>(BaseRealm.java:93)\r\n\tat io.realm.Realm.<init>(Realm.java:153)\r\n\tat io.realm.Realm.createInstance(Realm.java:424)\r\n\tat io.realm.RealmCache.doCreateRealmOrGetFromCache(RealmCache.java:342)\r\n\tat io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:282)\r\n\tat io.realm.Realm.getDefaultInstance(Realm.java:332)\r\n\tat com.truly.sdk.models.TWVoicemail.onDownloaded(TWVoicemail.java:126)\r\n\tat com.truly.truly.util.VoicemailDownloadQueue$VoiceMailTask.onPostExecute(VoicemailDownloadQueue.java:132)\r\n\tat com.truly.truly.util.VoicemailDownloadQueue$VoiceMailTask.onPostExecute(VoicemailDownloadQueue.java:74)\r\n\tat android.os.AsyncTask.finish(AsyncTask.java:660)\r\n\tat android.os.AsyncTask.-wrap1(AsyncTask.java)\r\n\tat android.os.AsyncTask$InternalHandler.handleMessage(AsyncTask.java:677)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:102)\r\n\tat android.os.Looper.loop(Looper.java:154)\r\n\tat android.app.ActivityThread.main(ActivityThread.java:6776)\r\n\tat java.lang.reflect.Method.invoke(Method.java)\r\n\tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1520)\r\n\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1410)\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 4.3.4\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 3.0.1\r\n\r\nWhich Android version and device: SM-G955U / SM-G950U / Pixel 2 versions 7.x and 8.x\r\n", "url": "https://github.com/realm/realm-java/issues/5828", "user": "johnryan", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2018-03-12 18:23:23", "closed": "2018-03-16 14:38:38", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Fatal signal 11 from copyToRealmOrUpdate", "body": "\r\n#### Goal\r\n\r\nA crash free experience\r\n\r\n#### Expected Results\r\n\r\nMy realm objects stay updated without crashing.\r\n\r\n#### Actual Results\r\n\r\nIntermittently and randomly, the app crashes and I get a realm trace that ends with a Java_io_realm_internal_UncheckedRow_nativeGetLong call.  No tombstone is written.  Let me know how I can provide more details for you.  \r\n\r\nJava_io_realm_internal_UncheckedRow_nativeGetLong 547954833728\r\nA/libc: Fatal signal 11 (SIGSEGV), code 1, fault addr 0x100000098 in tid 23300 (com.####)\r\n\r\n#### Steps & Code to Reproduce\r\n\r\nIt happens randomly in the app.  I'm able to avoid the crash by commenting out the code that writes to realm.  These writes are happening from a background thread that is the response from an API call.\r\n\r\n#### Code Sample\r\n\r\n```java\r\nrealm.executeTransactionAsync(\r\n         realm -> realm.copyToRealmOrUpdate(store)\r\n);\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 4.3.3\r\n\r\nRealm sync feature enabled: no\r\nAndroid Studio version: 3.0.1\r\n\r\nWhich Android version and device: Android 6.0, Nexus 5X\r\n", "url": "https://github.com/realm/realm-java/issues/5815", "user": "smithjake", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2018-03-08 01:49:32", "closed": "2018-03-09 18:57:01", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Realm crash samsung s8+", "body": "```\r\nStudio Profilers encountered an unexpected error. Consider reporting a bug, including logcat output below.\r\n                                                   See also: https://developer.android.com/studio/report-bugs.html#studio-bugs\r\n                                                   \r\n                                                   Failed to capture application\r\n03-06 15:10:19.092 21218-21218/? E/REALM: /home/jenkins/workspace/realm_realm-core_PR-2932-3UKZX3DIAA6C7HYY2BXKB2YPDOKXKDHJILDG3TPJMCH6YENXIJWQ@2/src/realm/group_writer.cpp:392: [realm-core-4.0.4] Assertion failed: ref + size <= after_ref with (ref, size, after_ref, ndx, m_free_positions.size()) =  [0, 8, 0, 0, 13]\r\n                                          IMPORTANT: if you see this error, please send this log to help@realm.io.\r\n03-06 15:10:19.093 21218-21218/? A/libc: Fatal signal 6 (SIGABRT), code -6 in tid 21218 (me.superup.demo)\r\n                                         \r\n                                         [ 03-06 15:10:19.093  3143: 3143 W/         ]\r\n                                         debuggerd: handling request: pid=21218 uid=10647 gid=10647 tid=21218\r\n03-06 15:10:19.178 21252-21252/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n03-06 15:10:19.178 21252-21252/? A/DEBUG: Build fingerprint: 'samsung/dream2ltexx/dream2lte:7.0/NRD90M/G955FXXU1AQJ5:user/release-keys'\r\n03-06 15:10:19.178 21252-21252/? A/DEBUG: Revision: '10'\r\n03-06 15:10:19.178 21252-21252/? A/DEBUG: ABI: 'arm64'\r\n03-06 15:10:19.179 21252-21252/? A/DEBUG: pid: 21218, tid: 21218, name: me.superup.demo  >>> me.superup.demo <<<\r\n03-06 15:10:19.179 21252-21252/? A/DEBUG: signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------\r\n03-06 15:10:19.179 21252-21252/? A/DEBUG:     x0   0000000000000000  x1   00000000000052e2  x2   0000000000000006  x3   0000000000000008\r\n03-06 15:10:19.179 21252-21252/? A/DEBUG:     x4   00000000000000b2  x5   8080800000000000  x6   0000007bf528e000  x7   0000000000000000\r\n03-06 15:10:19.179 21252-21252/? A/DEBUG:     x8   0000000000000083  x9   ffffffffffffffdf  x10  0000000000000000  x11  ffffffffffffffff\r\n03-06 15:10:19.179 21252-21252/? A/DEBUG:     x12  0000000000000018  x13  0000000000000000  x14  0000000000000000  x15  0005852804afb1d8\r\n03-06 15:10:19.179 21252-21252/? A/DEBUG:     x16  0000007bf3e2fed0  x17  0000007bf3dd79f4  x18  0000000000000085  x19  0000007bf5347b40\r\n03-06 15:10:19.179 21252-21252/? A/DEBUG:     x20  0000000000000006  x21  0000007bf5347a98  x22  0000000000000011  x23  0000000000000001\r\n03-06 15:10:19.179 21252-21252/? A/DEBUG:     x24  000000000000000c  x25  0000007bdd2bc010  x26  0000007fd3792668  x27  0000007be33fca40\r\n03-06 15:10:19.179 21252-21252/? A/DEBUG:     x28  0000000000000008  x29  0000007fd37921b0  x30  0000007bf3dd4d14\r\n03-06 15:10:19.179 21252-21252/? A/DEBUG:     sp   0000007fd3792190  pc   0000007bf3dd79fc  pstate 0000000000000000\r\n03-06 15:10:19.187 21252-21252/? A/DEBUG: backtrace:\r\n03-06 15:10:19.187 21252-21252/? A/DEBUG:     #00 pc 000000000006f9fc  /system/lib64/libc.so (tgkill+8)\r\n03-06 15:10:19.188 21252-21252/? A/DEBUG:     #01 pc 000000000006cd10  /system/lib64/libc.so (pthread_kill+64)\r\n03-06 15:10:19.188 21252-21252/? A/DEBUG:     #02 pc 0000000000025078  /system/lib64/libc.so (raise+24)\r\n03-06 15:10:19.188 21252-21252/? A/DEBUG:     #03 pc 000000000001cc04  /system/lib64/libc.so (abort+52)\r\n03-06 15:10:19.188 21252-21252/? A/DEBUG:     #04 pc 0000000000205a14  /data/app/me.superup.demo-2/lib/arm64/librealm-jni.so\r\n03-06 15:10:19.188 21252-21252/? A/DEBUG:     #05 pc 0000000000205a58  /data/app/me.superup.demo-2/lib/arm64/librealm-jni.so\r\n03-06 15:10:19.188 21252-21252/? A/DEBUG:     #06 pc 0000000000205ba0  /data/app/me.superup.demo-2/lib/arm64/librealm-jni.so\r\n03-06 15:10:19.188 21252-21252/? A/DEBUG:     #07 pc 00000000001a58e4  /data/app/me.superup.demo-2/lib/arm64/librealm-jni.so\r\n03-06 15:10:19.188 21252-21252/? A/DEBUG:     #08 pc 00000000001a2248  /data/app/me.superup.demo-2/lib/arm64/librealm-jni.so\r\n03-06 15:10:19.188 21252-21252/? A/DEBUG:     #09 pc 00000000001a24e0  /data/app/me.superup.demo-2/lib/arm64/librealm-jni.so\r\n03-06 15:10:19.188 21252-21252/? A/DEBUG:     #10 pc 00000000001a3ff8  /data/app/me.superup.demo-2/lib/arm64/librealm-jni.so\r\n03-06 15:10:19.188 21252-21252/? A/DEBUG:     #11 pc 0000000000104494  /data/app/me.superup.demo-2/lib/arm64/librealm-jni.so\r\n03-06 15:10:19.188 21252-21252/? A/DEBUG:     #12 pc 00000000000e9aec  /data/app/me.superup.demo-2/lib/arm64/librealm-jni.so\r\n03-06 15:10:19.188 21252-21252/? A/DEBUG:     #13 pc 00000000000ecf64  /data/app/me.superup.demo-2/lib/arm64/librealm-jni.so\r\n03-06 15:10:19.188 21252-21252/? A/DEBUG:     #14 pc 00000000001082e8  /data/app/me.superup.demo-2/lib/arm64/librealm-jni.so\r\n03-06 15:10:19.188 21252-21252/? A/DEBUG:     #15 pc 00000000000e97b8  /data/app/me.superup.demo-2/lib/arm64/librealm-jni.so\r\n03-06 15:10:19.188 21252-21252/? A/DEBUG:     #16 pc 000000000006d468  /data/app/me.superup.demo-2/lib/arm64/librealm-jni.so (Java_io_realm_internal_OsSharedRealm_nativeGetSharedRealm+480)\r\n03-06 15:10:19.188 21252-21252/? A/DEBUG:     #17 pc 0000000002b22110  /data/app/me.superup.demo-2/oat/arm64/base.odex (offset 0x287f000)\r\n```", "url": "https://github.com/realm/realm-java/issues/5805", "user": "idok595", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2018-03-06 13:18:04", "closed": "2018-05-30 13:06:00", "commits": {}, "ttf": 84.00027777777778, "commitsDetails": []}, {"title": "`deleteAll` crashes under Partial Sync", "body": "```\r\nio.realm.exceptions.RealmException: '__ResultSets' doesn't exist in current schema.\r\nat io.realm.internal.ColumnIndices.getColumnInfo(ColumnIndices.java:112)\r\nat io.realm.RealmSchema.getColumnInfo(RealmSchema.java:250)\r\nat io.realm.ImmutableRealmSchema.get(ImmutableRealmSchema.java:43)\r\nat io.realm.RealmSchema.getAll(RealmSchema.java:88)\r\nat io.realm.BaseRealm.deleteAll(BaseRealm.java:615)\r\nat io.realm.Realm.deleteAll(Realm.java:138)\r\nat io.realm.objectserver.PartialSyncTests.lambda$clearTable$8$PartialSyncTests(PartialSyncTests.java:289)\r\nat io.realm.objectserver.PartialSyncTests$$Lambda$8.execute(Unknown Source)\r\nat io.realm.Realm.executeTransaction(Realm.java:1397)\r\nat io.realm.objectserver.PartialSyncTests.clearTable(PartialSyncTests.java:288)\r\nat java.lang.reflect.Method.invoke(Native Method)\r\nat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\nat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\nat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\nat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\nat android.support.test.internal.runner.junit4.statement.RunBefores.evaluate(RunBefores.java:80)\r\nat android.support.test.internal.runner.junit4.statement.RunAfters.evaluate(RunAfters.java:61)\r\nat io.realm.rule.RunInLooperThread$TestThread.run(RunInLooperThread.java:495)\r\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:428)\r\nat java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\nat java.lang.Thread.run(Thread.java:761)\r\n```", "url": "https://github.com/realm/realm-java/issues/5780", "user": "cmelchior", "labels": ["T-Bug-Crash"], "created": "2018-02-28 10:45:32", "closed": "2018-03-02 09:49:05", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Permission denied in /src/main/cpp/io_realm_internal_SharedRealm.cpp line 101 on Huawei P8 and P8 Lite", "body": "Edit by @cmelchior \r\nSee https://github.com/realm/realm-java/issues/3972#issuecomment-313675948 for the most plausible reason for this.\r\n\r\n--- \r\n\r\n\r\n#### Goal\r\n\r\n> What do you want to achieve?\r\n\r\nOpen Realm file on Huawei P8 and Huawei P8 Lite\r\n\r\n#### Expected Results\r\n\r\nRealm should work on all devices\r\n\r\n#### Actual Results\r\n\r\nApparently there are 2 very specific Huawei devices (Android 6.0) where Realm files cannot be opened.\r\n\r\nThere is also possibility that this only occurs in multi-process access, but it *is* happening in production.\r\n\r\n```\r\nio.realm.exceptions.RealmError: Unrecoverable error. Permission denied in /Users/Nabil/Dev/realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 101\r\n\tat io.realm.internal.SharedRealm.nativeGetSharedRealm(SharedRealm.java)\r\n\tat io.realm.internal.SharedRealm.<init>(SharedRealm.java:172)\r\n\tat io.realm.internal.SharedRealm.<init>(SharedRealm.java:172)\r\n\tat io.realm.internal.SharedRealm.getInstance(SharedRealm.java:219)\r\n\tat io.realm.internal.SharedRealm.getInstance(SharedRealm.java:209)\r\n\tat io.realm.RealmCache.doCreateRealmOrGetFromCache(RealmCache.java:319)\r\n\tat io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:282)\r\n\tat io.realm.Realm.getInstance(Realm.java:353)\r\n\tat x.data.repository.LongRealmRepositoryImpl.<init>(LongRealmRepositoryImpl.java:25)\r\n\tat x.data.repository.impl.tv_programs.program_info.ProgramNotificationRepositoryImpl.<init>(ProgramNotificationRepositoryImpl.java:15)\r\n\tat x.application.RestoreAfterReboot.onReceive(RestoreAfterReboot.java:38)\r\n\tat android.app.ActivityThread.handleReceiver(ActivityThread.java:2760)\r\n\tat android.app.ActivityThread.access$1800(ActivityThread.java:165)\r\n\tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1453)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:102)\r\n\tat android.os.Looper.loop(Looper.java:150)\r\n\tat android.app.ActivityThread.main(ActivityThread.java:5621)\r\n\tat java.lang.reflect.Method.invoke(Method.java)\r\n\tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:794)\r\n\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:684)\r\n```\r\n\r\nand\r\n\r\n```\r\nio.realm.exceptions.RealmError: Unrecoverable error. Permission denied in /Users/Nabil/Dev/realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 101\r\n\tat io.realm.internal.SharedRealm.nativeGetSharedRealm(SharedRealm.java)\r\n\tat io.realm.internal.SharedRealm.<init>(SharedRealm.java:172)\r\n\tat io.realm.internal.SharedRealm.<init>(SharedRealm.java:172)\r\n\tat io.realm.internal.SharedRealm.getInstance(SharedRealm.java:219)\r\n\tat io.realm.internal.SharedRealm.getInstance(SharedRealm.java:209)\r\n\tat io.realm.RealmCache.doCreateRealmOrGetFromCache(RealmCache.java:319)\r\n\tat io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:282)\r\n\tat io.realm.Realm.getInstance(Realm.java:353)\r\n\tat x.application.CustomApplication.initializeRealm(CustomApplication.java:397)\r\n\tat x.application.CustomApplication.initialize(CustomApplication.java:229)\r\n\tat x.application.Initializer.initialize(Initializer.java:12)\r\n\tat x.presentation.view.activity.base.BaseActivity.onCreate(BaseActivity.java:261)\r\n\tat x.presentation.view.activity.DashboardActivity.onCreate(DashboardActivity.java:156)\r\n\tat android.app.Activity.performCreate(Activity.java:6367)\r\n\tat android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1110)\r\n\tat android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2404)\r\n\tat android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2511)\r\n\tat android.app.ActivityThread.access$900(ActivityThread.java:165)\r\n\tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1375)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:102)\r\n\tat android.os.Looper.loop(Looper.java:150)\r\n\tat android.app.ActivityThread.main(ActivityThread.java:5621)\r\n\tat java.lang.reflect.Method.invoke(Method.java)\r\n\tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:794)\r\n\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:684)\r\n```\r\n\r\n#### Steps & Code to Reproduce\r\n\r\nI do not have these devices. They are in the wild. But technically it just opens a Realm in `Application.onCreate()`, **or** in `BroadcastReceiver.onReceive()`.\r\n\r\n#### Code Sample\r\n\r\nIt really is just opening a Realm configuration. Properties:\r\n\r\n- No encryption\r\n- `deleteIfMigrationNeeded()`\r\n\r\nThe tricky thing here is that \r\n\r\n1.) these devices already had permission troubles with 1.2.0 (?!)\r\n2.) it only happens on two specific Huawei devices, but it seems to be a popular device, because it affects quite a few users... :|\r\n3.) the access of Realm file is **multi-process** (broadcast receiver + app itself)\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 1.2.0 **and** 4.1.1\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: irrelevant\r\n\r\nWhich Android version and device: \r\n\r\n```\r\nAndroid: 6.0\r\nAndroid Build: GRA-L09C150B390\r\nManufacturer: HUAWEI\r\nModel: HUAWEI GRA-L09\r\n```\r\n\r\nand\r\n\r\n```\r\nAndroid: 6.0\r\nAndroid Build: ALE-L21C150B588\r\nManufacturer: HUAWEI\r\nModel: ALE-L21\r\n```\r\n\r\n(i think this is the same as https://github.com/realm/realm-java/issues/3972 )", "url": "https://github.com/realm/realm-java/issues/5715", "user": "Zhuinden", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2018-01-26 11:08:30", "closed": "2019-09-04 13:12:38", "commits": {}, "ttf": 586.0002777777778, "commitsDetails": []}, {"title": "Failure when converting short string to UTF-16 error_code = 1", "body": "Running:\r\n\r\nRealm 4.2.0\r\n[Fabric](http://crashes.to/s/16d63145dab)\r\n\r\n```\r\nFatal Exception: io.realm.exceptions.RealmError: Unrecoverable error. Failure when converting short string to UTF-16 error_code = 1; retcode = 0; StringData.size = 16; StringData.data = Ma??sonnalit\u00e9; StringData as hex =  0x4d 0x61 0xffffffb6 0x40 0x65 0x72 0x73 0x6f 0x6e 0x6e 0x61 0x6c 0x69 0x74 0xffffffc3 0xffffffa9; in_begin = ??sonnalit\u00e9; in_end = ; out_curr = 0xbe95e374; out_end = 0xbe95e3d0; in /home/cc/repo/realm/release/realm/realm-library/src/main/cpp/io_realm_internal_UncheckedRow.cpp line 161\r\n       at io.realm.internal.UncheckedRow.nativeGetString(UncheckedRow.java)\r\n       at io.realm.internal.UncheckedRow.getString(UncheckedRow.java:157)\r\n       at io.realm.ProfileRealmProxy.realmGet$secret_weapon(ProfileRealmProxy.java:1100)\r\n       at io.realm.ProfileRealmProxy.createDetachedCopy(ProfileRealmProxy.java:3552)\r\n       at io.realm.AccountRealmProxy.createDetachedCopy(AccountRealmProxy.java:2286)\r\n       at io.realm.CollectionAccountRealmProxy.createDetachedCopy(CollectionAccountRealmProxy.java:968)\r\n       at io.realm.DefaultRealmModuleMediator.createDetachedCopy(DefaultRealmModuleMediator.java:1064)\r\n       at io.realm.Realm.createDetachedCopy(Realm.java:1598)\r\n       at io.realm.Realm.copyFromRealm(Realm.java:1320)\r\n       at io.realm.Realm.copyFromRealm(Realm.java:1293)\r\n       at com.app.Fragments.Match.MatchFragment.lambda$afterViews$0$MatchFragment(MatchFragment.java:237)\r\n       at com.app.Fragments.Match.MatchFragment$$Lambda$0.onChange(Unknown Source)\r\n       at io.realm.internal.ObservableCollection$RealmChangeListenerWrapper.onChange(ObservableCollection.java:40)\r\n       at io.realm.internal.ObservableCollection$CollectionObserverPair.onChange(ObservableCollection.java:21)\r\n       at io.realm.internal.ObservableCollection$Callback.onCalled(ObservableCollection.java:65)\r\n       at io.realm.internal.ObservableCollection$Callback.onCalled(ObservableCollection.java:55)\r\n       at io.realm.internal.ObserverPairList.foreach(ObserverPairList.java:109)\r\n       at io.realm.internal.OsResults.notifyChangeListeners(OsResults.java:472)\r\n       at android.os.MessageQueue.nativePollOnce(MessageQueue.java)\r\n       at android.os.MessageQueue.next(MessageQueue.java:323)\r\n       at android.os.Looper.loop(Looper.java:135)\r\n       at android.app.ActivityThread.main(ActivityThread.java:5438)\r\n       at java.lang.reflect.Method.invoke(Method.java)\r\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:762)\r\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:652)\r\n```\r\n\r\nLine 237 is\r\n\r\n```\r\nrealm.copyFromRealm(results.first());\r\n```\r\n  ", "url": "https://github.com/realm/realm-java/issues/5668", "user": "trr-amsiq", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2018-01-09 06:47:02", "closed": "2019-11-05 10:36:45", "commits": {}, "ttf": 665.0002777777778, "commitsDetails": []}, {"title": "RealmFileException: Not a Realm file & Permission denied", "body": "<!---\r\n\r\n**Questions**: If you have questions about how to use Realm, ask on\r\n[StackOverflow](http://stackoverflow.com/questions/ask?tags=realm).\r\nWe monitor the `realm` tag.\r\n\r\n**Feature Request**: Just fill in the first two sections below.\r\n\r\n**Bugs**: To help you as fast as possible with an issue please describe your issue\r\nand the steps you have taken to reproduce it in as many details as possible.\r\n\r\n-->\r\n\r\n#### Expected Results\r\n\r\nNo crash.\r\n\r\n#### Actual Results\r\n\r\nWe updated Realm version from 1.0.0 to 4.3.1, then We've got some crash reported by crashlytics.\r\n\r\n```\r\n# OS Version: 6.0.1\r\n# Device: Nexus 7 (2013)\r\n# RAM Free: 31.3%\r\n# Disk Free: 22%\r\n\r\nFatal Exception: io.realm.exceptions.RealmFileException: Unable to open a realm at path '/data/data/our.package/files/default.realm': Not a Realm file. (Not a Realm file) (/data/data/our.package/files/default.realm) in /Users/cm/Realm/realm-java-release/realm/realm-library/src/main/cpp/io_realm_internal_OsSharedRealm.cpp line 101\r\n       at io.realm.internal.OsSharedRealm.nativeGetSharedRealm(OsSharedRealm.java)\r\n       at io.realm.internal.OsSharedRealm.(OsSharedRealm.java)\r\n       at io.realm.internal.OsSharedRealm.getInstance(OsSharedRealm.java:254)\r\n       at io.realm.internal.OsSharedRealm.getInstance(OsSharedRealm.java:244)\r\n       at io.realm.RealmCache.doCreateRealmOrGetFromCache(RealmCache.java:319)\r\n       at io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:282)\r\n       at io.realm.Realm.getDefaultInstance(Realm.java:332)\r\n\r\n```\r\n\r\n```\r\n# OS Version: 6.0.1\r\n# Device: Xperia Z3 Compact\r\n# RAM Free: 50.2%\r\n# Disk Free: 6.5%\r\n\r\nFatal Exception: io.realm.exceptions.RealmFileException: Unable to open a realm at path '/data/data/our.package/files/default.realm.lock'. Please use a path where your app has read-write permissions. (open(\"/data/data/our.package/files/default.realm.lock\") failed: Permission denied) (/data/data/our.package/files/default.realm.lock) in /Users/cm/Realm/realm-java-release/realm/realm-library/src/main/cpp/io_realm_internal_OsSharedRealm.cpp line 101\r\n       at io.realm.internal.OsSharedRealm.nativeGetSharedRealm(OsSharedRealm.java)\r\n       at io.realm.internal.OsSharedRealm.(OsSharedRealm.java)\r\n       at io.realm.internal.OsSharedRealm.getInstance(OsSharedRealm.java:254)\r\n       at io.realm.BaseRealm.(BaseRealm.java)\r\n       at io.realm.BaseRealm.(BaseRealm.java)\r\n       at io.realm.Realm.(Realm.java)\r\n       at io.realm.Realm.createInstance(Realm.java:424)\r\n       at io.realm.RealmCache.doCreateRealmOrGetFromCache(RealmCache.java:342)\r\n       at io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:282)\r\n       at io.realm.Realm.getDefaultInstance(Realm.java:332)\r\n```\r\n\r\n<img width=\"785\" alt=\"screen shot 2017-12-26 at 10 50 45\" src=\"https://user-images.githubusercontent.com/29234060/34344980-a880a89a-ea2e-11e7-8b9d-3edb5dc72f00.png\">\r\n\r\n\r\n#### Steps & Code to Reproduce\r\n\r\nSorry, we couldn't reproduce this crash.\r\n\r\n#### Code Sample\r\n\r\n```\r\n// onCreate() in Application \r\nRealm.init(this);\r\nRealmConfiguration config = new RealmConfiguration.Builder()\r\n        .schemaVersion(7)\r\n        .migration(new Migration())\r\n        .build();\r\nRealm.setDefaultConfiguration(config);\r\n```\r\n\r\n```\r\n// onResume() in Activity\r\nfinal Realm realm = Realm.getDefaultInstance(); // Crash\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 4.3.1\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 3.0.1\r\n\r\nWhich Android version and device: \r\n- Nexus 7 6.0.1\r\n- Xperia Z3 Compact 6.0.1\r\n- Nexus5 6.0.1\r\n- AQUOS EVER SH-04G 5.0.2\r\n- Xperia Z Ultra 4.4.2\r\n- and so on.\r\n\r\nHow can we solve this problem? Thanks.\r\n\r\nI'm sorry for my poor english.\r\n", "url": "https://github.com/realm/realm-java/issues/5643", "user": "watabee", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2017-12-26 02:39:35", "closed": "2017-12-28 14:53:42", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "IllegalStateException: basic_string::_S_create", "body": "#### Goal\n\n> Doesn't crash.\n\n#### Expected Results\n\n> Doesn't crash when Realm is initialized.\n\n#### Actual Results\n\n> Crashes.\n\n```\nFatal Exception: java.lang.RuntimeException: Unable to start activity ComponentInfo{com.app/com.app.view.activity.MainActivity}: java.lang.IllegalStateException: basic_string::_S_create\n       at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2357)\n       at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2447)\n       at android.app.ActivityThread.access$800(ActivityThread.java:163)\n       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1327)\n       at android.os.Handler.dispatchMessage(Handler.java:102)\n       at android.os.Looper.loop(Looper.java:135)\n       at android.app.ActivityThread.main(ActivityThread.java:5438)\n       at java.lang.reflect.Method.invoke(Method.java)\n       at java.lang.reflect.Method.invoke(Method.java:372)\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:902)\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:697)\nCaused by java.lang.IllegalStateException: basic_string::_S_create\n       at io.realm.internal.OsSharedRealm.nativeGetSharedRealm(OsSharedRealm.java)\n       at io.realm.internal.OsSharedRealm.(OsSharedRealm.java)\n       at io.realm.internal.OsSharedRealm.getInstance(OsSharedRealm.java:254)\n       at io.realm.internal.OsSharedRealm.getInstance(OsSharedRealm.java:244)\n       at io.realm.RealmCache.doCreateRealmOrGetFromCache(RealmCache.java:319)\n       at io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:282)\n       at io.realm.Realm.getInstance(Realm.java:353)\n       at com.app.di.NetModule.provideDataRealm(NetModule.java:99)\n       at com.app.di.NetModule_ProvideDataRealmFactory.get(NetModule_ProvideDataRealmFactory.java:28)\n       at com.app.di.NetModule_ProvideDataRealmFactory.get(NetModule_ProvideDataRealmFactory.java:10)\n       at dagger.internal.DoubleCheck.get(DoubleCheck.java:47)\n       at com.app.di.NetModule_ProvideRealmControllerFactory.get(NetModule_ProvideRealmControllerFactory.java:31)\n       at com.app.di.NetModule_ProvideRealmControllerFactory.get(NetModule_ProvideRealmControllerFactory.java:10)\n       at dagger.internal.DoubleCheck.get(DoubleCheck.java:47)\n       at com.app.di.DaggerNetComponent.injectMainActivity(DaggerNetComponent.java:195)\n       at com.app.di.DaggerNetComponent.inject(DaggerNetComponent.java:95)\n       at com.app.view.activity.MainActivity.dataInitialization(MainActivity.java:707)\n       at com.app.view.activity.MainActivity.onCreate(MainActivity.java:169)\n       at android.app.Activity.performCreate(Activity.java:6033)\n       at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1106)\n       at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2310)\n       at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2447)\n       at android.app.ActivityThread.access$800(ActivityThread.java:163)\n       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1327)\n       at android.os.Handler.dispatchMessage(Handler.java:102)\n       at android.os.Looper.loop(Looper.java:135)\n       at android.app.ActivityThread.main(ActivityThread.java:5438)\n       at java.lang.reflect.Method.invoke(Method.java)\n       at java.lang.reflect.Method.invoke(Method.java:372)\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:902)\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:697)\n```\n#### Steps & Code to Reproduce\n\n> Can't reproduce. The stacktrace isn't helpful but it does occur when Realm is initialized.\n\n#### Version of Realm and tooling\nRealm version(s): 4.3.1\n\nRealm sync feature enabled: No\n\nAndroid Studio version: 3.0.1\n\nWhich Android version and device: \nNot widespread but happened 8 times to 3 users:\n5.1.1, 6.0.1, 7.0 - Kyocera, LG, Samsung", "url": "https://github.com/realm/realm-java/issues/5639", "user": "ozv101", "labels": ["O-Community", "Pipeline-On-Hold", "Reproduction-Required", "T-Bug-Crash"], "created": "2017-12-21 22:19:38", "closed": "2019-11-27 22:00:12", "commits": {}, "ttf": 705.0002777777778, "commitsDetails": []}, {"title": "Realm Async API + RxJava produces weird results", "body": "I just migrated my project to Realm 4.3.0 from 3.7.1 and am encountering a weird issue.\r\n\r\nThis code works as expected, but is using my own hacky way of returning a query as a Single so I'd like to move away from it:\r\n\r\n````\r\nreturn Single.create { emitter ->\r\n            val realm = RealmDatabase.getRealm()\r\n            var result : KOptional<User> = KOptional.EMPTY\r\n            realm.executeTransactionAsync({\r\n                val entity = it.where(UserEntity::class.java)\r\n                        .equalTo(UserFields.USER_NAME, username, Case.INSENSITIVE)\r\n                        .findFirst()\r\n                entity?.let {\r\n                    result = KOptional(UserMapper.toModel(it))\r\n                }\r\n            }, {\r\n                realm.close()\r\n                emitter.onSuccess(result)\r\n            }, {\r\n                realm.close()\r\n                emitter.onError(it)\r\n            })\r\n        }\r\n````\r\n\r\nHowever, using the new API + RxJava is giving me an exception which is enumerated in full detail below this code snipppet:\r\n\r\n````\r\nval realm = RealmDatabase.getRealm()\r\n        return realm.where(UserEntity::class.java)\r\n                .equalTo(UserFields.USER_NAME, username, Case.INSENSITIVE)\r\n                .findFirstAsync()\r\n                .asFlowable<UserEntity>()\r\n                .filter { it.isLoaded }\r\n                .firstOrError()\r\n                .map {\r\n                    if (it.isValid) {\r\n                        val model = UserMapper.toModel(it)\r\n                        KOptional(model)\r\n                    } else {\r\n                        KOptional.EMPTY\r\n                    }.also {\r\n                        realm.close()\r\n                    }\r\n                }\r\n````\r\n\r\nStackTrace:\r\n\r\n````\r\njava.lang.IllegalStateException: Accessing object of type  which has been invalidated or deleted\r\n\tat io.realm.internal.OsObject.nativeStartListening(Native Method)\r\n\tat io.realm.internal.OsObject.addListener(OsObject.java:118)\r\n\tat io.realm.ProxyState.addChangeListener(ProxyState.java:141)\r\n\tat io.realm.RealmObject.addChangeListener(RealmObject.java:497)\r\n\tat io.realm.RealmObject.addChangeListener(RealmObject.java:540)\r\n\tat io.realm.rx.RealmObservableFactory$14.subscribe(RealmObservableFactory.java:457)\r\n\tat io.reactivex.internal.operators.flowable.FlowableCreate.subscribeActual(FlowableCreate.java:72)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:12986)\r\n\tat io.reactivex.internal.operators.flowable.FlowableFilter.subscribeActual(FlowableFilter.java:37)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:12986)\r\n\tat io.reactivex.internal.operators.flowable.FlowableElementAtSingle.subscribeActual(FlowableElementAtSingle.java:41)\r\n\tat io.reactivex.Single.subscribe(Single.java:2703)\r\n\tat io.reactivex.internal.operators.single.SingleMap.subscribeActual(SingleMap.java:33)\r\n\tat io.reactivex.Single.subscribe(Single.java:2703)\r\n\tat io.reactivex.internal.operators.single.SingleZipArray.subscribeActual(SingleZipArray.java:64)\r\n\tat io.reactivex.Single.subscribe(Single.java:2703)\r\n\tat io.reactivex.internal.operators.single.SingleObserveOn.subscribeActual(SingleObserveOn.java:35)\r\n\tat io.reactivex.Single.subscribe(Single.java:2703)\r\n\tat io.reactivex.internal.operators.single.SingleFlatMapCompletable.subscribeActual(SingleFlatMapCompletable.java:44)\r\n\tat io.reactivex.Completable.subscribe(Completable.java:1635)\r\n\tat io.reactivex.internal.operators.completable.CompletablePeek.subscribeActual(CompletablePeek.java:51)\r\n\tat io.reactivex.Completable.subscribe(Completable.java:1635)\r\n\tat io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.next(CompletableConcatArray.java:89)\r\n\tat io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.onComplete(CompletableConcatArray.java:65)\r\n\tat io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver.run(CompletableObserveOn.java:90)\r\n\tat io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable.run(HandlerScheduler.java:109)\r\n\tat android.os.Handler.handleCallback(Handler.java:751)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:95)\r\n\tat android.os.Looper.loop(Looper.java:154)\r\n\tat android.app.ActivityThread.main(ActivityThread.java:6119)\r\n\tat java.lang.reflect.Method.invoke(Native Method)\r\n\tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:886)\r\n\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:776)\r\n````\r\nRealm version(s): 4.3.0\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 3.0.1\r\n\r\nWhich Android version and device: 10.1 WXGA Emulator, API 25, 7.1.1\r\n", "url": "https://github.com/realm/realm-java/issues/5588", "user": "ghost", "labels": ["T-Bug-Crash"], "created": "2017-12-05 16:28:40", "closed": "2017-12-14 13:21:54", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Help: Destruction of mutex in use", "body": "Where to find log and how to upload log?\n\n```  \n12-01 15:17:16.390 12244-12352/com.app E/REALM: /home/jenkins/workspace/realm_realm-core_PR-2921-KRZQVOGV6QNV4VTLKF7FZYBJS45TOKJXEZA7N2KFU6F5R5HNA7CA@6/src/realm/util/thread.cpp:183: [realm-core-4.0.3] Destruction of mutex in use\n                                                   IMPORTANT: if you see this error, please send this log to help@realm.io.\n12-01 15:17:16.390 12244-12352/com.app A/libc: Fatal signal 6 (SIGABRT) at 0x00002fd4 (code=-6), thread 12352 (RealmFinalizing)\n```\n\n#### Version of Realm and tooling\nRealm version(s): \n4.2.0\nAndroid Studio version: \n4.4.4\nWhich Android version and device: \nSamsung Galaxy S3", "url": "https://github.com/realm/realm-java/issues/5578", "user": "lam-amsiq", "labels": ["O-Community", "Pipeline-On-Hold", "Reproduction-Required", "T-Bug-Crash"], "created": "2017-12-01 14:30:01", "closed": "2019-11-27 21:55:20", "commits": {}, "ttf": 726.0002777777778, "commitsDetails": []}, {"title": "File handles are not released in RealmTransformer", "body": "realm-gradle-plugin:4.1.1\r\nOriginal issue: https://issuetracker.google.com/69114369\r\nAndroid plugin for Gradle: 3.0.0\r\n\r\nJarFile opened in RealmTransform is not closed, which causes issues on Windows. The issue seems to be this line: https://github.com/realm/realm-java/blob/c1302392424a3b8bed323d3164ed5f875551e174/realm-transformer/src/main/groovy/io/realm/transformer/RealmTransformer.groovy#L245\r\n\r\nStacktrace showing where the file got opened (and not closed) ->\r\n[stacktrace.txt](https://github.com/realm/realm-java/files/1460873/stacktrace.txt)\r\n\r\nThere is another file handle to the same file, captured in this stacktrace ->\r\n[stacktrace_classpool.txt](https://github.com/realm/realm-java/files/1460891/stacktrace_classpool.txt)\r\n\r\nThis one seems to be caused by not closing the javassist.JarClassPath opened on this line https://github.com/realm/realm-java/blob/c1302392424a3b8bed323d3164ed5f875551e174/realm-transformer/src/main/groovy/io/realm/transformer/RealmTransformer.groovy#L219\r\n\r\nThanks!", "url": "https://github.com/realm/realm-java/issues/5521", "user": "gavra0", "labels": ["T-Bug-Crash"], "created": "2017-11-10 10:06:16", "closed": "2017-11-15 11:09:03", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "bad version crash in 4.1.0", "body": "Looks like a regression. I have seen it on CI as well.\n\nReported by https://github.com/realm/realm-java/issues/4369#issuecomment-338926952\n\nI get this crash in 4.1.0\nWhen I configure Realm in following way:\n```\n Realm.setDefaultConfiguration(new RealmConfiguration.Builder()\n                .directory(realmDirectory)\n                .name(Constants.Db.NAME)\n                .schemaVersion(Constants.Db.VERSION)\n                .build()\n        );\n\n```\n\nAnd directory is placed on external storage - getExternalFilesDir(null)\nThe crash is happened when I query my objects and write it to file as json.\nIf I commented configuration and realm is working with internal storage than I don't have this crash.\n\n**UPDATE**: I found a fix when writing this message =)\nI used this method to extract objects, where I transformed RealmResults to array of objects\n```\nRealmList<***> objects = new RealmList<>();\n        objects.addAll(Realm.getDefaultInstance()\n                .where(***.class)\n                .findAllSorted(***.FIELD_POSITION));\n        return objects;\n\n```\nNow I switched to RealmResults and use them to get non-manager objects to write it to json file.\n**And it works!**\n\nReproduced on 7.1.1 and 6.0. And I get different logs on these devices:\nLogs from 6.0 (emulator):\n\n```\n10-24 11:42:40.525 3589-3671/com.***.android E/REALM_JNI: jni: ThrowingException 7, std::exception in /home/cc/repo/realm/release/realm/realm-library/src/main/cpp/io_realm_internal_Collection.cpp line 130, .\n10-24 11:42:40.525 3589-3671/com.***.android E/REALM_JNI: Exception has been thrown: std::exception in /home/cc/repo/realm/release/realm/realm-library/src/main/cpp/io_realm_internal_Collection.cpp line 130\n10-24 11:42:40.549 3589-3671/com.***.android E/AndroidRuntime: FATAL EXCEPTION: IntentService[BackupService]\n                                                                   Process: com.***.android, PID: 3589\n                                                                   io.realm.internal.async.BadVersionException: std::exception in /home/cc/repo/realm/release/realm/realm-library/src/main/cpp/io_realm_internal_Collection.cpp line 130\n                                                                       at io.realm.internal.Collection.nativeGetRow(Native Method)\n                                                                       at io.realm.internal.Collection.getUncheckedRow(Collection.java:356)\n                                                                       at io.realm.internal.Collection$Iterator.get(Collection.java:118)\n                                                                       at io.realm.internal.Collection$Iterator.next(Collection.java:83)\n                                                                       at java.util.AbstractCollection.addAll(AbstractCollection.java:76)\n                                                                       at com.***.android.db.Db.getObjects()\n```\n\nTrace from 7.1.1\n```\n10-24 10:45:31.327 32549-32658/com.***.android E/REALM: uncaught exception in notifier thread: N5realm11SharedGroup10BadVersionE: std::exception\n10-24 10:45:31.331 32549-32658/com.***.android A/libc: Fatal signal 6 (SIGABRT), code -6 in tid 32658 (***.android)\n10-24 10:45:31.423 792-792/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n10-24 10:45:31.424 792-792/? A/DEBUG: UUID: ce00e632-55b7-445a-8e76-e6bf9bcde863\n10-24 10:45:31.424 792-792/? A/DEBUG: Build fingerprint: 'Sony/E5823/E5823:7.1.1/32.4.A.1.54/3761073091:user/release-keys'\n10-24 10:45:31.424 792-792/? A/DEBUG: Revision: '0'\n10-24 10:45:31.424 792-792/? A/DEBUG: ABI: 'arm64'\n10-24 10:45:31.424 792-792/? A/DEBUG: pid: 32549, tid: 32658, name: ***.android  >>> com.***.android <<<\n10-24 10:45:31.425 792-792/? A/DEBUG: signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------\n10-24 10:45:31.425 792-792/? A/DEBUG:     x0   0000000000000000  x1   0000000000007f92  x2   0000000000000006  x3   0000000000000008\n10-24 10:45:31.425 792-792/? A/DEBUG:     x4   0000000000000002  x5   0000000000000000  x6   0000000000008080  x7   6277643939637372\n10-24 10:45:31.425 792-792/? A/DEBUG:     x8   0000000000000083  x9   ffffffffffffffdf  x10  0000000000000000  x11  0000000000000001\n10-24 10:45:31.425 792-792/? A/DEBUG:     x12  ffffffffffffffff  x13  ffffffffffffffff  x14  0000000000000000  x15  2e8ba2e8ba2e8ba3\n10-24 10:45:31.425 792-792/? A/DEBUG:     x16  0000007fb3748ed8  x17  0000007fb36f6968  x18  000000007267e138  x19  0000007f89d204f8\n10-24 10:45:31.425 792-792/? A/DEBUG:     x20  0000000000000006  x21  0000007f89d20450  x22  0000000000000011  x23  0000007fb0064050\n10-24 10:45:31.425 792-792/? A/DEBUG:     x24  0000007f89d204d0  x25  00000000000fd000  x26  760b8f71d0a49811  x27  000000000000000d\n10-24 10:45:31.426 792-792/? A/DEBUG:     x28  0000007fcc6aba10  x29  0000007f89d202e0  x30  0000007fb36f3df8\n10-24 10:45:31.426 792-792/? A/DEBUG:     sp   0000007f89d202c0  pc   0000007fb36f6970  pstate 0000000060000000\n10-24 10:45:31.445 792-792/? A/DEBUG: backtrace:\n10-24 10:45:31.445 792-792/? A/DEBUG:     #00 pc 000000000006b970  /system/lib64/libc.so (tgkill+8)\n10-24 10:45:31.446 792-792/? A/DEBUG:     #01 pc 0000000000068df4  /system/lib64/libc.so (pthread_kill+64)\n10-24 10:45:31.446 792-792/? A/DEBUG:     #02 pc 0000000000024290  /system/lib64/libc.so (raise+24)\n10-24 10:45:31.446 792-792/? A/DEBUG:     #03 pc 000000000001ccac  /system/lib64/libc.so (abort+52)\n10-24 10:45:31.446 792-792/? A/DEBUG:     #04 pc 0000000000243554  /data/app/com.***.android-1/lib/arm64/librealm-jni.so (_ZN9__gnu_cxx27__verbose_terminate_handlerEv+348)\n10-24 10:45:31.446 792-792/? A/DEBUG:     #05 pc 0000000000216d70  /data/app/com.***.android-1/lib/arm64/librealm-jni.so (_ZN10__cxxabiv111__terminateEPFvvE+8)\n10-24 10:45:31.446 792-792/? A/DEBUG:     #06 pc 0000000000216ddc  /data/app/com.***.android-1/lib/arm64/librealm-jni.so (_ZSt9terminatev+12)\n10-24 10:45:31.446 792-792/? A/DEBUG:     #07 pc 00000000002422c8  /data/app/com.***.android-1/lib/arm64/librealm-jni.so\n10-24 10:45:31.446 792-792/? A/DEBUG:     #08 pc 00000000000685fc  /system/lib64/libc.so (_ZL15__pthread_startPv+196)\n10-24 10:45:31.446 792-792/? A/DEBUG:     #09 pc 000000000001def0  /system/lib64/libc.so (__start_thread+16)\n10-24 10:45:32.881 825-825/? E/nativedumper:FW:  parser.c(74): Failed to find expected node from: //mem_desc[@path]\n10-24 10:45:32.937 825-825/? E/nativedumper:FW:  utils.c(256): mkdir (/data/crashdata) failed. File exists\n10-24 10:45:32.945 825-825/? E/nativedumper:FW:  ramdump_framework.c(317): fp is NULL\n10-24 10:45:32.945 825-825/? E/nativedumper:FW:  ramdump_framework.c(498): Read-only file system\n```", "url": "https://github.com/realm/realm-java/issues/5459", "user": "beeender", "labels": ["T-Bug-Crash"], "created": "2017-10-24 10:26:07", "closed": "2019-11-27 21:50:11", "commits": {}, "ttf": 764.0002777777778, "commitsDetails": []}, {"title": "Crashes when linking with debug version of Sync", "body": "Moving #5346 to a separate issue, so we can track it.\r\n\r\nObservations so far:\r\n- Only crash on armeabi-v7a with `objectServerDebug` builds. x86 and 64 bit variants do not crash.\r\n- Debug builds with `baseDebug` do not crash.\r\n- Release builds for both base and ObjectServer do not crash. This only effect debug builds.\r\n- Using `-O0/01/02` instead of `-Og` does not make a difference.\r\n\r\nThe problematic method is:\r\n\r\n```\r\nvoid ObjectStore::set_schema_columns(Group const& group, Schema& schema)\r\n{\r\n    for (auto& object_schema : schema) {\r\n        auto table = table_for_object_schema(group, object_schema);\r\n        if (!table) {\r\n            continue;\r\n        }\r\n        for (auto& property : object_schema.persisted_properties) {\r\n            property.table_column = table->get_column_index(property.name);\r\n        }\r\n    }\r\n}\r\n```\r\nFrom https://github.com/realm/realm-object-store/blob/master/src/object_store.cpp#L777\r\n\r\nFor some reason Core returns `realm::not_found` (4294967295) for all non-latin names in `get_column_index`, while ascii names are correctly found. The columns have been verified to be there with the correct name (by going around the ObjectStore `Property` and directly querying Cores `Table`\r\n\r\n![image](https://user-images.githubusercontent.com/406066/31045953-9a0a9e16-a5ef-11e7-8cb2-fd88281ffcc9.png)\r\n\r\nExample of crash:\r\n\r\n```\r\n09-30 14:46:42.389 6362-6378/? E/REALM: /home/jenkins/workspace/lm_realm-core_release_4.0.0-LXTALRDDGEXO6MUGNEPKX627PBBN5UZMAYUDJFS3OHOQUQGYVBKA@5/src/realm/table.cpp:3270: [realm-core-4.0.0] Assertion failed: col_ndx < get_column_count() [4294967295, 5]\r\n                                        IMPORTANT: if you see this error, please send this log to help@realm.io.\r\n09-30 14:46:42.390 6362-6378/? A/libc: Fatal signal 6 (SIGABRT), code -6 in tid 6378 (roidJUnitRunner)\r\n09-30 14:46:42.583 6386-6386/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n09-30 14:46:42.583 6386-6386/? A/DEBUG: Build fingerprint: 'google/angler/angler:8.0.0/OPR6.170623.019/4299446:user/release-keys'\r\n09-30 14:46:42.583 6386-6386/? A/DEBUG: Revision: '0'\r\n09-30 14:46:42.583 6386-6386/? A/DEBUG: ABI: 'arm'\r\n09-30 14:46:42.583 6386-6386/? A/DEBUG: pid: 6362, tid: 6378, name: roidJUnitRunner  >>> io.realm.test <<<\r\n09-30 14:46:42.583 6386-6386/? A/DEBUG: signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------\r\n09-30 14:46:42.584 6386-6386/? A/DEBUG:     r0 00000000  r1 000018ea  r2 00000006  r3 00000008\r\n09-30 14:46:42.584 6386-6386/? A/DEBUG:     r4 000018da  r5 000018ea  r6 d4dc4ae8  r7 0000010c\r\n09-30 14:46:42.584 6386-6386/? A/DEBUG:     r8 00000056  r9 f045be00  sl d4dc4e00  fp d4dc4b04\r\n09-30 14:46:42.584 6386-6386/? A/DEBUG:     ip 00000000  sp d4dc4ad8  lr f24ac3b7  pc f24dc91c  cpsr 200f0010\r\n09-30 14:46:42.669 6386-6386/? A/DEBUG: backtrace:\r\n09-30 14:46:42.669 6386-6386/? A/DEBUG:     #00 pc 0004a91c  /system/lib/libc.so (tgkill+12)\r\n09-30 14:46:42.669 6386-6386/? A/DEBUG:     #01 pc 0001a3b3  /system/lib/libc.so (abort+54)\r\n09-30 14:46:42.669 6386-6386/? A/DEBUG:     #02 pc 0081255c  /data/app/io.realm.test-XOMfyZ3eUFI23v8N6vwQtw==/lib/arm/librealm-jni.so (please_report_this_error_to_help_at_realm_dot_io+8)\r\n09-30 14:46:42.669 6386-6386/? A/DEBUG:     #03 pc 008126b8  /data/app/io.realm.test-XOMfyZ3eUFI23v8N6vwQtw==/lib/arm/librealm-jni.so (_ZN5realm4utilL18terminate_internalERSt18basic_stringstreamIcSt11char_traitsIcESaIcEE+292)\r\n09-30 14:46:42.669 6386-6386/? A/DEBUG:     #04 pc 00812864  /data/app/io.realm.test-XOMfyZ3eUFI23v8N6vwQtw==/lib/arm/librealm-jni.so (_ZN5realm4util9terminateEPKcS2_lOSt16initializer_listINS0_9PrintableEE+204)\r\n09-30 14:46:42.669 6386-6386/? A/DEBUG:     #05 pc 0022e4a4  /data/app/io.realm.test-XOMfyZ3eUFI23v8N6vwQtw==/lib/arm/librealm-jni.so (_ZN5realm4util9terminateIJjjEEEvPKcS3_lDpT_+64)\r\n09-30 14:46:42.669 6386-6386/? A/DEBUG:     #06 pc 007c419c  /data/app/io.realm.test-XOMfyZ3eUFI23v8N6vwQtw==/lib/arm/librealm-jni.so (_ZN5realm5Table3setIxEEvjjT_b+116)\r\n09-30 14:46:42.669 6386-6386/? A/DEBUG:     #07 pc 002aba38  /data/app/io.realm.test-XOMfyZ3eUFI23v8N6vwQtw==/lib/arm/librealm-jni.so (Java_io_realm_internal_UncheckedRow_nativeSetLong+380)\r\n09-30 14:46:42.669 6386-6386/? A/DEBUG:     #08 pc 0002ea8d  /data/app/io.realm.test-XOMfyZ3eUFI23v8N6vwQtw==/oat/arm/base.odex (offset 0x21000)\r\n```\r\n\r\n\r\n\r\n\r\n\r\n", "url": "https://github.com/realm/realm-java/issues/5354", "user": "cmelchior", "labels": ["T-Bug-Crash"], "created": "2017-09-30 12:59:06", "closed": "2017-10-24 11:36:55", "commits": {}, "ttf": 23.00027777777778, "commitsDetails": []}, {"title": "Crash when connecting two clients", "body": "ObjectServerExample crashed when connecting the 2nd client with:\r\nROS 2.0.0-alpha.35\r\n```\r\n09-22 08:02:06.785 219-219/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n09-22 08:02:06.785 219-219/? A/DEBUG: Build fingerprint: 'Android/vbox86p/vbox86p:6.0/MRA58K/genymotion03201937:userdebug/test-keys'\r\n09-22 08:02:06.786 219-219/? A/DEBUG: Revision: '0'\r\n09-22 08:02:06.786 219-219/? A/DEBUG: ABI: 'x86'\r\n09-22 08:02:06.786 219-219/? A/DEBUG: pid: 16213, tid: 16508, name: Thread-198  >>> io.realm.examples.objectserver <<<\r\n09-22 08:02:06.786 219-219/? A/DEBUG: signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x82ca7c38\r\n09-22 08:02:06.790 219-219/? A/DEBUG:     eax e8704102  ebx e11e9ccc  ecx df379f03  edx e87041c0\r\n09-22 08:02:06.790 219-219/? A/DEBUG:     esi 00000002  edi 00000000\r\n09-22 08:02:06.790 219-219/? A/DEBUG:     xcs 00000023  xds 0000002b  xes 0000002b  xfs 000000a7  xss 0000002b\r\n09-22 08:02:06.790 219-219/? A/DEBUG:     eip e0e44f4e  ebp df379e08  esp df379df0  flags 00010287\r\n09-22 08:02:06.792 219-219/? A/DEBUG: backtrace:\r\n09-22 08:02:06.792 219-219/? A/DEBUG:     #00 pc 00206f4e  /data/app/io.realm.examples.objectserver-2/lib/x86/librealm-jni.so\r\n09-22 08:02:06.792 219-219/? A/DEBUG:     #01 pc 0020764f  /data/app/io.realm.examples.objectserver-2/lib/x86/librealm-jni.so\r\n09-22 08:02:06.792 219-219/? A/DEBUG:     #02 pc 0020c688  /data/app/io.realm.examples.objectserver-2/lib/x86/librealm-jni.so\r\n09-22 08:02:06.792 219-219/? A/DEBUG:     #03 pc 0020d96b  /data/app/io.realm.examples.objectserver-2/lib/x86/librealm-jni.so\r\n09-22 08:02:06.792 219-219/? A/DEBUG:     #04 pc 001d6b47  /data/app/io.realm.examples.objectserver-2/lib/x86/librealm-jni.so\r\n09-22 08:02:06.792 219-219/? A/DEBUG:     #05 pc 001e8477  /data/app/io.realm.examples.objectserver-2/lib/x86/librealm-jni.so\r\n09-22 08:02:06.792 219-219/? A/DEBUG:     #06 pc 001e93e1  /data/app/io.realm.examples.objectserver-2/lib/x86/librealm-jni.so\r\n09-22 08:02:06.792 219-219/? A/DEBUG:     #07 pc 001f5a3d  /data/app/io.realm.examples.objectserver-2/lib/x86/librealm-jni.so\r\n09-22 08:02:06.792 219-219/? A/DEBUG:     #08 pc 001ef96f  /data/app/io.realm.examples.objectserver-2/lib/x86/librealm-jni.so\r\n09-22 08:02:06.792 219-219/? A/DEBUG:     #09 pc 001efa0d  /data/app/io.realm.examples.objectserver-2/lib/x86/librealm-jni.so\r\n09-22 08:02:06.792 219-219/? A/DEBUG:     #10 pc 001f2ff8  /data/app/io.realm.examples.objectserver-2/lib/x86/librealm-jni.so\r\n09-22 08:02:06.792 219-219/? A/DEBUG:     #11 pc 001eac31  /data/app/io.realm.examples.objectserver-2/lib/x86/librealm-jni.so\r\n09-22 08:02:06.792 219-219/? A/DEBUG:     #12 pc 001bcf58  /data/app/io.realm.examples.objectserver-2/lib/x86/librealm-jni.so (_ZNSt6thread5_ImplISt12_Bind_simpleIFZN5realm5_impl10SyncClientC4ESt10unique_ptrINS2_4util6LoggerESt14default_deleteIS7_EENS2_4sync6Client13ReconnectModeEEUlvE_vEEE6_M_runEv+56)\r\n09-22 08:02:06.792 219-219/? A/DEBUG:     #13 pc 00421e1e  /data/app/io.realm.examples.objectserver-2/lib/x86/librealm-jni.so\r\n09-22 08:02:06.792 219-219/? A/DEBUG:     #14 pc 00080bc3  /system/lib/libc.so (__pthread_start(void*)+56)\r\n09-22 08:02:06.792 219-219/? A/DEBUG:     #15 pc 000219a2  /system/lib/libc.so (__start_thread+25)\r\n09-22 08:02:06.792 219-219/? A/DEBUG:     #16 pc 00017106  /system/lib/libc.so (__bionic_clone+70)\r\n```", "url": "https://github.com/realm/realm-java/issues/5312", "user": "cmelchior", "labels": ["T-Bug-Crash"], "created": "2017-09-22 12:04:43", "closed": "2017-10-03 11:26:39", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "Native crash on realm-android 3.5.0", "body": "<!---\n\n**Questions**: If you have questions about how to use Realm, ask on\n[StackOverflow](http://stackoverflow.com/questions/ask?tags=realm).\nWe monitor the `realm` tag.\n\n**Feature Request**: Just fill in the first two sections below.\n\n**Bugs**: To help you as fast as possible with an issue please describe your issue\nand the steps you have taken to reproduce it in as many details as possible.\n\n-->\n\n#### Steps & Code to Reproduce\n\n> Logging is disabled on the device, I cannot know what operation caused this crash.\nIf I remove db and create new one ( clear user data on my app), the crash doesn't happen on new db.\n\n\n\n```\n\n#### Version of Realm and tooling\nRealm version(s): ?\n3.5.0\n\nRealm sync feature enabled: yes/no\nno\nAndroid Studio version: ?\n2.3.3\nbuild.gradle on project level\n       dependencies {\n\t\tclasspath 'com.android.tools.build:gradle:2.3.3'\n\t\tclasspath \"io.realm:realm-gradle-plugin:3.5.0\"\n\t}\nWhich Android version and device: ?\nSony G3125\nAndroid SDK 24\n\n#### Crash log\n\n09-21 10:58:21.035  3095  3095 I AEE_AED : pid: 2976, tid: 3056, name: DTWRealmMgrThre  >>> (my app) <<<\n09-21 10:58:21.035  3095  3095 I AEE_AED : signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------\n09-21 10:58:21.035  3095  3095 I AEE_AED :     x0   0000000000000000  x1   0000000000000bf0  x2   0000000000000006  x3   0000000000000008\n09-21 10:58:21.036  3095  3095 I AEE_AED :     x4   000000000000001d  x5   8080800000000000  x6   0000007094861000  x7   0000000000000000\n09-21 10:58:21.036  3095  3095 I AEE_AED :     x8   0000000000000083  x9   ffffffffffffffdf  x10  0000000000000000  x11  0000000000000001\n09-21 10:58:21.036  3095  3095 I AEE_AED :     x12  0000000000000018  x13  0000000000000000  x14  0000000000000000  x15  0036ece2d72d06ad\n09-21 10:58:21.036  3095  3095 I AEE_AED :     x16  0000007091b76ed0  x17  0000007091b1f6d8  x18  0000000c00000000  x19  0000007074b434f8\n09-21 10:58:21.036  3095  3095 I AEE_AED :     x20  0000000000000006  x21  0000007074b43450  x22  000000000000000b  x23  0000000000000001\n09-21 10:58:21.036  3095  3095 I AEE_AED :     x24  0000007089d4b010  x25  0000000000000001  x26  0000000000000868  x27  0000007089c43980\n09-21 10:58:21.036  3095  3095 I AEE_AED :     x28  0000000000000000  x29  0000007074b3f840  x30  0000007091b1cb04\n09-21 10:58:21.036  3095  3095 I AEE_AED :     sp   0000007074b3f820  pc   0000007091b1f6e0  pstate 0000000060000000\n09-21 10:58:21.044  3095  3095 I AEE_AED : \n09-21 10:58:21.044  3095  3095 I AEE_AED : backtrace:\n09-21 10:58:21.044  3095  3095 I AEE_AED :     #00 pc 000000000006d6e0  /system/lib64/libc.so (tgkill+8)\n09-21 10:58:21.044  3095  3095 I AEE_AED :     #01 pc 000000000006ab00  /system/lib64/libc.so (pthread_kill+64)\n09-21 10:58:21.044  3095  3095 I AEE_AED :     #02 pc 0000000000024118  /system/lib64/libc.so (raise+24)\n09-21 10:58:21.044  3095  3095 I AEE_AED :     #03 pc 000000000001c9bc  /system/lib64/libc.so (abort+52)\n09-21 10:58:21.044  3095  3095 I AEE_AED :     #04 pc 00000000001e0e3c  /data/app/(my app)/lib/arm64/librealm-jni.so\n09-21 10:58:21.044  3095  3095 I AEE_AED :     #05 pc 00000000001e0e80  /data/app/(my app)/lib/arm64/librealm-jni.so\n09-21 10:58:21.045  3095  3095 I AEE_AED :     #06 pc 00000000001e0f10  /data/app/(my app)/lib/arm64/librealm-jni.so\n09-21 10:58:21.045  3095  3095 I AEE_AED :     #07 pc 000000000018ec00  /data/app/(my app)/lib/arm64/librealm-jni.so\n09-21 10:58:21.045  3095  3095 I AEE_AED :     #08 pc 000000000018bbd4  /data/app/(my app)/lib/arm64/librealm-jni.so\n09-21 10:58:21.045  3095  3095 I AEE_AED :     #09 pc 000000000018be6c  /data/app/(my app)/lib/arm64/librealm-jni.so\n09-21 10:58:21.045  3095  3095 I AEE_AED :     #10 pc 000000000018d614  /data/app/(my app)/lib/arm64/librealm-jni.so\n09-21 10:58:21.045  3095  3095 I AEE_AED :     #11 pc 00000000000e8d68  /data/app/(my app)/lib/arm64/librealm-jni.so\n09-21 10:58:21.045  3095  3095 I AEE_AED :     #12 pc 00000000000d2560  /data/app/(my app)/lib/arm64/librealm-jni.so\n09-21 10:58:21.045  3095  3095 I AEE_AED :     #13 pc 000000000005ba20  /data/app/(my app)/lib/arm64/librealm-jni.so (Java_io_realm_internal_SharedRealm_nativeCommitTransaction+48)\n09-21 10:58:21.045  3095  3095 I AEE_AED :     #14 pc 0000000000ca5f14  /data/app/(my app)/oat/arm64/base.odex (offset 0xb21000)\n09-21 11:11:17.435  7315  7315 F libc    : Fatal signal 6 (SIGABRT), code -6 in tid 7315 ((my app process))09-21 10:58:21.035  3095  3095 I AEE_AED : pid: 2976, tid: 3056, name: DTWRealmMgrThre  >>> (my app) <<<\n09-21 10:58:21.035  3095  3095 I AEE_AED : signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------\n09-21 10:58:21.035  3095  3095 I AEE_AED :     x0   0000000000000000  x1   0000000000000bf0  x2   0000000000000006  x3   0000000000000008\n09-21 10:58:21.036  3095  3095 I AEE_AED :     x4   000000000000001d  x5   8080800000000000  x6   0000007094861000  x7   0000000000000000\n09-21 10:58:21.036  3095  3095 I AEE_AED :     x8   0000000000000083  x9   ffffffffffffffdf  x10  0000000000000000  x11  0000000000000001\n09-21 10:58:21.036  3095  3095 I AEE_AED :     x12  0000000000000018  x13  0000000000000000  x14  0000000000000000  x15  0036ece2d72d06ad\n09-21 10:58:21.036  3095  3095 I AEE_AED :     x16  0000007091b76ed0  x17  0000007091b1f6d8  x18  0000000c00000000  x19  0000007074b434f8\n09-21 10:58:21.036  3095  3095 I AEE_AED :     x20  0000000000000006  x21  0000007074b43450  x22  000000000000000b  x23  0000000000000001\n09-21 10:58:21.036  3095  3095 I AEE_AED :     x24  0000007089d4b010  x25  0000000000000001  x26  0000000000000868  x27  0000007089c43980\n09-21 10:58:21.036  3095  3095 I AEE_AED :     x28  0000000000000000  x29  0000007074b3f840  x30  0000007091b1cb04\n09-21 10:58:21.036  3095  3095 I AEE_AED :     sp   0000007074b3f820  pc   0000007091b1f6e0  pstate 0000000060000000\n09-21 10:58:21.044  3095  3095 I AEE_AED : \n09-21 10:58:21.044  3095  3095 I AEE_AED : backtrace:\n09-21 10:58:21.044  3095  3095 I AEE_AED :     #00 pc 000000000006d6e0  /system/lib64/libc.so (tgkill+8)\n09-21 10:58:21.044  3095  3095 I AEE_AED :     #01 pc 000000000006ab00  /system/lib64/libc.so (pthread_kill+64)\n09-21 10:58:21.044  3095  3095 I AEE_AED :     #02 pc 0000000000024118  /system/lib64/libc.so (raise+24)\n09-21 10:58:21.044  3095  3095 I AEE_AED :     #03 pc 000000000001c9bc  /system/lib64/libc.so (abort+52)\n09-21 10:58:21.044  3095  3095 I AEE_AED :     #04 pc 00000000001e0e3c  /data/app/(my app)/lib/arm64/librealm-jni.so\n09-21 10:58:21.044  3095  3095 I AEE_AED :     #05 pc 00000000001e0e80  /data/app/(my app)/lib/arm64/librealm-jni.so\n09-21 10:58:21.045  3095  3095 I AEE_AED :     #06 pc 00000000001e0f10  /data/app/(my app)/lib/arm64/librealm-jni.so\n09-21 10:58:21.045  3095  3095 I AEE_AED :     #07 pc 000000000018ec00  /data/app/(my app)/lib/arm64/librealm-jni.so\n09-21 10:58:21.045  3095  3095 I AEE_AED :     #08 pc 000000000018bbd4  /data/app/(my app)/lib/arm64/librealm-jni.so\n09-21 10:58:21.045  3095  3095 I AEE_AED :     #09 pc 000000000018be6c  /data/app/(my app)/lib/arm64/librealm-jni.so\n09-21 10:58:21.045  3095  3095 I AEE_AED :     #10 pc 000000000018d614  /data/app/(my app)/lib/arm64/librealm-jni.so\n09-21 10:58:21.045  3095  3095 I AEE_AED :     #11 pc 00000000000e8d68  /data/app/(my app)/lib/arm64/librealm-jni.so\n09-21 10:58:21.045  3095  3095 I AEE_AED :     #12 pc 00000000000d2560  /data/app/(my app)/lib/arm64/librealm-jni.so\n09-21 10:58:21.045  3095  3095 I AEE_AED :     #13 pc 000000000005ba20  /data/app/(my app)/lib/arm64/librealm-jni.so (Java_io_realm_internal_SharedRealm_nativeCommitTransaction+48)\n09-21 10:58:21.045  3095  3095 I AEE_AED :     #14 pc 0000000000ca5f14  /data/app/(my app)/oat/arm64/base.odex (offset 0xb21000)\n09-21 11:11:17.435  7315  7315 F libc    : Fatal signal 6 (SIGABRT), code -6 in tid 7315 ((my app process))", "url": "https://github.com/realm/realm-java/issues/5300", "user": "byronshlin", "labels": ["O-Community", "Pipeline-On-Hold", "Reproduction-Required", "T-Bug-Crash"], "created": "2017-09-21 07:01:51", "closed": "2019-11-27 21:45:03", "commits": {}, "ttf": 797.0002777777778, "commitsDetails": []}, {"title": "Fix PrimaryKeyTests#removingPrimaryKeyRemovesConstraint_typeSetters", "body": "This unit test surfaces a problem with our schema cache:\r\n```\r\n   /**\r\n     * This test surfaces a bunch of problems, most of them seem to be around caching of the schema\r\n     * during a transaction\r\n     *\r\n     * 1) Removing the primary key do not invalidate the cache in RealmSchema and those cached\r\n     *    are ImmutableRealmObjectSchema so do not change when the primary key is removed.\r\n     *\r\n     * 2) Addding `schema.refresh()` to RealmObjectSchema.removePrimaryKey()` causes\r\n     *    RealmPrimaryKeyConstraintException anyway. Unclear why.\r\n     */\r\n```", "url": "https://github.com/realm/realm-java/issues/5231", "user": "cmelchior", "labels": ["T-Bug-Crash"], "created": "2017-09-08 20:57:17", "closed": "2017-09-21 07:38:36", "commits": {"024480b156625199f44f2f14c45c45e99758f5da": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "024480b156625199f44f2f14c45c45e99758f5da", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "progard & JNI issues for 3.7.0", "body": "```\r\n09-05 13:39:36.546 5999-5999/com.myapp E/REALM: /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/jni_util/java_method.cpp:33: [realm-core-2.8.6] Assertion failed: m_method_id != nullptr\r\nIMPORTANT: if you see this error, please send this log to help@realm.io.\r\n09-05 13:39:36.546 5999-5999/com.myapp A/libc: Fatal signal 6 (SIGABRT), code -6 in tid 5999 (com.myapp)\r\n[ 09-05 13:39:36.547 1295: 1295 W/ ]\r\ndebuggerd: handling request: pid=5999 uid=10085 gid=10085 tid=5999\r\n09-05 13:39:36.602 6046-6046/? A/DEBUG: pid: 5999, tid: 5999, name: com.myapp>>> com.myapp<<<\r\n09-05 13:39:36.603 6046-6046/? A/DEBUG: #05 pc 001f69d4 /data/app/com.myapp-2/lib/x86/librealm-jni.so\r\n09-05 13:39:36.603 6046-6046/? A/DEBUG: #06 pc 001f6a22 /data/app/com.myapp-2/lib/x86/librealm-jni.so\r\n09-05 13:39:36.603 6046-6046/? A/DEBUG: #07 pc 001f6aa7 /data/app/com.myapp-2/lib/x86/librealm-jni.so\r\n09-05 13:39:36.603 6046-6046/? A/DEBUG: #08 pc 000abd11 /data/app/com.myapp-2/lib/x86/librealm-jni.so\r\n09-05 13:39:36.603 6046-6046/? A/DEBUG: #09 pc 0004703a /data/app/com.myapp-2/lib/x86/librealm-jni.so (Java_io_realm_internal_OsRealmConfig_nativeSetSchemaConfig+794)\r\n09-05 13:39:36.604 6046-6046/? A/DEBUG: #10 pc 0053125b /data/app/com.myapp-2/oat/x86/base.odex (offset 0x4b5000)\r\n```\r\n\r\nLooks like `@Keep` doesn't apply to the inner classes.\r\n\r\nreported by\r\nhttps://secure.helpscout.net/conversation/426298456/11199/?folderId=366141", "url": "https://github.com/realm/realm-java/issues/5211", "user": "beeender", "labels": ["P-0-EXPEDITE", "T-Bug-Crash"], "created": "2017-09-06 02:20:16", "closed": "2017-09-11 11:03:17", "commits": {"03939d81751819d83e55c8f98f0499250270528c": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "363caada70903b97893f18d0e24310c779521c4e": {"commitGHEventType": "closed", "commitUser": "realm-ci"}, "b827a816a6079eccee6cc2989e9712e93216f071": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "a66abc7a0dbe3f592f4fc4bfeb0c6e56c12b661c": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "03939d81751819d83e55c8f98f0499250270528c", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "363caada70903b97893f18d0e24310c779521c4e", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["46f9aff4d06a404ef31c7073c4ea19b240b26214"], "nameRev": "363caada70903b97893f18d0e24310c779521c4e tags/v3.7.1~2", "commitMessage": "Keep SharedRealm's inner classes (#5212)\n\nClose #5211\r\n", "commitDateTime": "2017-09-06 19:16:23", "authoredDateTime": "2017-09-06 19:16:23", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/Keep.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/SharedRealm.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Keep.java", "spoonMethods": []}, {"spoonFilePath": "SharedRealm.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.SharedRealm", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "b827a816a6079eccee6cc2989e9712e93216f071", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a66abc7a0dbe3f592f4fc4bfeb0c6e56c12b661c", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["196b195606489686a62281dd6fa5a34224f59b13"], "nameRev": "a66abc7a0dbe3f592f4fc4bfeb0c6e56c12b661c tags/v3.7.2~3", "commitMessage": "getColumnInfo was checking obfuscated class name\n\nIt should check the table name instead.\nClose #5211\n", "commitDateTime": "2017-09-11 19:03:09", "authoredDateTime": "2017-09-11 16:01:46", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/ColumnIndices.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ColumnIndices.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.ColumnIndices.getColumnInfo(java.lang.String)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a66abc7a0dbe3f592f4fc4bfeb0c6e56c12b661c"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1.0, "deletions": 1.0, "lines": 2.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3.0, "UPD": 1.0, "INS": 1.0, "MOV": 1.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-library/src/main/java/io/realm/internal"], "changesInPackagesSPOON": ["io.realm.internal.ColumnIndices.getColumnInfo(java.lang.String)"]}, {"title": "Realm 3.7.0: permissionManager.makeOffer: First start error: If you see this error, please send this log to help@realm.io", "body": "Gradle 4.1, Android 4.3.\r\n\r\nI want to get token by Realm 3.7.0. (by using class **PermissionManager**) and send token to all Android clients.\r\n\r\nMy Project's buil.gradle:\r\n\r\n```\r\n`buildscript {\r\n    ext.kotlin_version = '1.0.5-2'\r\n    repositories {\r\n        jcenter()\r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:2.3.3'\r\n        classpath \"io.realm:realm-gradle-plugin:3.7.0\"\r\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        jcenter()\r\n    }\r\n}\r\n```\r\n\r\n\r\nMy app's build.gradle:\r\n\r\n```\r\napply plugin: 'com.android.application'\r\napply plugin: 'kotlin-android'\r\napply plugin: 'realm-android'\r\n\r\nrealm {\r\n    syncEnabled = true;\r\n}\r\n\r\nandroid {\r\n    compileSdkVersion 26\r\n    buildToolsVersion \"26.0.1\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.myproject\"\r\n        minSdkVersion 15\r\n        targetSdkVersion 26\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n      release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\r\n      }\r\n      debug {\r\n          \r\n        }\r\n    }\r\n    configurations.all {\r\n        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'\r\n    }\r\n}\r\n\r\n\r\ndependencies {\r\n    compile fileTree(dir: 'libs', include: ['*.jar'])\r\n    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {\r\n        exclude group: 'com.android.support', module: 'support-annotations'\r\n    })\r\n    compile 'com.android.support:appcompat-v7:26.+'\r\n    compile 'com.android.support.constraint:constraint-layout:1.0.2'\r\n    compile 'com.google.code.gson:gson:2.8.1'\r\n    compile \"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version\"\r\n    compile 'org.nanohttpd:nanohttpd:2.2.0'\r\n\r\n    testCompile 'junit:junit:4.12'\r\n}\r\n\r\n```\r\n\r\nMy Android code:`\r\n\r\n```\r\nimport io.realm.ObjectServerError;\r\nimport io.realm.PermissionManager;\r\nimport io.realm.Realm;\r\nimport io.realm.RealmConfiguration;\r\nimport io.realm.SyncConfiguration;\r\nimport io.realm.SyncCredentials;\r\nimport io.realm.SyncUser;\r\nimport io.realm.permissions.AccessLevel;\r\nimport io.realm.permissions.PermissionOffer;\r\n\r\npublic class MyApplication extends Application {\r\n\r\n    @Override\r\n    public void onCreate() {\r\n        super.onCreate();\r\n        Realm.init(this);\r\n        loginAndConfig();\r\n    }\r\n\r\n    private void loginAndConfig() {\r\n        SyncUser.Callback callback = new SyncUser.Callback() {\r\n            @Override\r\n            public void onSuccess(SyncUser user) {\r\n                setRealmDefaultConfiguration(user);\r\n                createToken(user, new PermissionOffer(REALM_URL, AccessLevel.READ, null));\r\n            }\r\n\r\n            @Override\r\n            public void onError(ObjectServerError error) {\r\n                String errorMsg;\r\n                switch (error.getErrorCode()) {\r\n                    case UNKNOWN_ACCOUNT:\r\n                        errorMsg = \"Account does not exists.\";\r\n                        break;\r\n                    case INVALID_CREDENTIALS:\r\n                        errorMsg = \"User name and password does not match\";\r\n                        break;\r\n                    default:\r\n                        errorMsg = error.toString();\r\n                }\r\n            }\r\n        };\r\n\r\n        SyncCredentials syncCredentials = SyncCredentials.usernamePassword(\r\n                BuildConfig.USER_NAME, BuildConfig.PASSWORD, false);\r\n        SyncUser.loginAsync(syncCredentials, AUTH_URL, callback);\r\n    }\r\n\r\n    private void setRealmDefaultConfiguration(SyncUser syncUser) {\r\n        SyncConfiguration syncConfig = new SyncConfiguration.Builder(syncUser, REALM_URL).build();\r\n        Realm.setDefaultConfiguration(syncConfig);\r\n    }\r\n\r\n    private void createToken(SyncUser syncUser, final PermissionOffer permissionOffer) {\r\n        Log.d(TAG, \"createToken: Start\");\r\n        PermissionManager permissionManager = syncUser.getPermissionManager();\r\n        Log.d(TAG, \"createToken: success created permissionManager\");\r\n\r\n        permissionManager.makeOffer(permissionOffer, new PermissionManager.MakeOfferCallback() {\r\n            @Override\r\n            public void onSuccess(String offerToken) {\r\n                 Log.d(TAG, \"onSuccess: offerToken = \" + offerToken);\r\n            }\r\n\r\n            @Override\r\n            public void onError(ObjectServerError error) {\r\n               Log.e(TAG, \"onError: \", error);\r\n            }\r\n        });\r\n    }\r\n}\r\n```\r\n\r\nAs result after **FIRST** start of  Android application:\r\n\r\n1.  Success login to Realm Server Object\r\n2. Success called my custom method `createToken(SyncUser syncUser, final PermissionOffer permissionOffer)`\r\n3. In logcat show  \"_createToken: Start_\"\r\n4. In logcat show  \"_createToken: success created permissionManager_\"\r\n\r\nBut then I get the next error:\r\n\r\nD/com.myproject..MyApplication( 1580): createToken: Start\r\nD/com.myproject..MyApplication( 1580): createToken: success created permissionManager\r\n\r\n```\r\nE/REALM\t  ( 1580): /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/jni_util/java_class.cpp:50: [realm-core-2.8.6] Assertion failed: cls\r\nE/REALM\t  ( 1580): IMPORTANT: if you see this error, please send this log to help@realm.io.\r\nF/libc\t  ( 1580): Fatal signal 11 (SIGSEGV) at 0xdeadbaad (code=1), thread 1580 (.myproject.realmserver)\r\nI/DEBUG\t  (  123): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\nI/DEBUG\t  (  123): Build fingerprint: 'google/yakju/maguro:4.3/JWR66Y/776638:user/release-keys'\r\nI/DEBUG\t  (  123): Revision: '9'\r\nI/DEBUG\t  (  123): pid: 1580, tid: 1580, name: .myproject.realmserver\t>>> com.myproject. <<<\r\nI/DEBUG\t  (  123): signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr deadbaad\r\nI/DEBUG\t  (  123):     r0 00000027  r1 415a5f18\t r2 00000008  r3 deadbaad\r\nI/DEBUG\t  (  123):     r4 00000000  r5 be908d64\t r6 be908e70  r7 5ecadd78\r\nI/DEBUG\t  (  123):     r8 00000032  r9 5ecadd90\t sl 2aaaaaaa  fp 58d8f008\r\nI/DEBUG\t  (  123):     ip 00000001  sp be908d60\t lr 400e9f93  pc 400e74e8  cpsr 600f0030\r\nI/DEBUG\t  (  123):     d0  2e6f692e6d6c6165  d1\t 6f79206669203a54\r\nI/DEBUG\t  (  123):     d2  6874206565732075  d3\t 726f727265207369\r\nI/DEBUG\t  (  123):     d4  657361656c70202c  d5\t 687420646e657320\r\nI/DEBUG\t  (  123):     d6  7420676f6c207369  d7\t 7240706c6568206f\r\nI/DEBUG\t  (  123):     d8  0000000000000000  d9\t 0000000000000000\r\nI/DEBUG\t  (  123):     d10 0000000000000000  d11 0000000000000000\r\nI/DEBUG\t  (  123):     d12 0000000000000000  d13 0000000000000000\r\nI/DEBUG\t  (  123):     d14 0000000000000000  d15 0000000000000000\r\nI/DEBUG\t  (  123):     d16 0000000000000008  d17 0000000000000000\r\nI/DEBUG\t  (  123):     d18 3fd9005f20000000  d19 3fe0000000000000\r\nI/DEBUG\t  (  123):     d20 0000000000000000  d21 4040000000000000\r\nI/DEBUG\t  (  123):     d22 4040000000000000  d23 4040000000000000\r\nI/DEBUG\t  (  123):     d24 3ff0000000000000  d25 3ff0000000000000\r\nI/DEBUG\t  (  123):     d26 be23e4f5df600000  d27 3f66f5abf13a4071\r\nI/DEBUG\t  (  123):     d28 bed0810fee5b0a9d  d29 3ee086fe7cc5fe6e\r\nI/DEBUG\t  (  123):     d30 be23e4f5df66956e  d31 3f11566a75de22e0\r\nI/DEBUG\t  (  123):     scr 60000014\r\nI/DEBUG\t  (  123): \r\nI/DEBUG\t  (  123): backtrace:\r\nI/DEBUG\t  (  123):     #00  pc 0001e4e8\t /system/lib/libc.so\r\nI/DEBUG\t  (  123):     #01  pc 0001c510\t /system/lib/libc.so (abort+4)\r\nI/DEBUG\t  (  123):     #02  pc 0028b42b\t /data/app-lib/com.myproject.-1/librealm-jni.so\r\nI/DEBUG\t  (  123):     #03  pc 0028b457\t /data/app-lib/com.myproject.-1/librealm-jni.so\r\nI/DEBUG\t  (  123): \r\nI/DEBUG\t  (  123): stack:\r\nI/DEBUG\t  (  123):\t    be908d20  be908d68\t[stack]\r\nI/DEBUG\t  (  123):\t    be908d24  000000d6\t\r\nI/DEBUG\t  (  123):\t    be908d28  40111170\t/system/lib/libc.so\r\nI/DEBUG\t  (  123):\t    be908d2c  415a5f18\t\r\nI/DEBUG\t  (  123):\t    be908d30  00000015\t\r\nI/DEBUG\t  (  123):\t    be908d34  400e8f75\t/system/lib/libc.so (__sflush+56)\r\nI/DEBUG\t  (  123):\t    be908d38  40111264\t/system/lib/libc.so\r\nI/DEBUG\t  (  123):\t    be908d3c  401111c4\t/system/lib/libc.so\r\nI/DEBUG\t  (  123):\t    be908d40  00000000\t\r\nI/DEBUG\t  (  123):\t    be908d44  400e9f93\t/system/lib/libc.so (_fwalk+34)\r\nI/DEBUG\t  (  123):\t    be908d48  400e923d\t/system/lib/libc.so (_cleanup)\r\nI/DEBUG\t  (  123):\t    be908d4c  be908d64\t[stack]\r\nI/DEBUG\t  (  123):\t    be908d50  be908e70\t[stack]\r\nI/DEBUG\t  (  123):\t    be908d54  5ecadd78\t/data/app-lib/com.myproject.-1/librealm-jni.so\r\nI/DEBUG\t  (  123):\t    be908d58  df0027ad\t\r\nI/DEBUG\t  (  123):\t    be908d5c  00000000\t\r\nI/DEBUG\t  (  123):     #00  be908d60  00000032\t\r\nI/DEBUG\t  (  123):\t    be908d64  fffffbdf\t\r\nI/DEBUG\t  (  123):\t    be908d68  40111000\t/system/lib/libc.so\r\nI/DEBUG\t  (  123):\t    be908d6c  be908d9c\t[stack]\r\nI/DEBUG\t  (  123):\t    be908d70  be908d9c\t[stack]\r\nI/DEBUG\t  (  123):\t    be908d74  be908dac\t[stack]\r\nI/DEBUG\t  (  123):\t    be908d78  be908e70\t[stack]\r\nI/DEBUG\t  (  123):\t    be908d7c  be908d9c\t[stack]\r\nI/DEBUG\t  (  123):\t    be908d80  be908dac\t[stack]\r\nI/DEBUG\t  (  123):\t    be908d84  400e5514\t/system/lib/libc.so (__pthread_clone)\r\nI/DEBUG\t  (  123):     #01  be908d88  00000000\t\r\nI/DEBUG\t  (  123):\t    be908d8c  5ec3c42f\t/data/app-lib/com.myproject.-1/librealm-jni.so\r\nI/DEBUG\t  (  123):     #02  be908d90  00000000\t\r\nI/DEBUG\t  (  123):\t    be908d94  5ec3c45b\t/data/app-lib/com.myproject.-1/librealm-jni.so\r\nI/DEBUG\t  (  123): \r\nI/DEBUG\t  (  123): memory near r1:\r\nI/DEBUG\t  (  123):     415a5ef8 00000001 0000128e 00002fa8 00001f40  \r\nI/DEBUG\t  (  123):     415a5f08 00001f40 00000001 00000001 0000100b  \r\nI/DEBUG\t  (  123):     415a5f18 6d206e49 69616d67 4e4a206e 6e4f5f49  \r\nI/DEBUG\t  (  123):     415a5f28 64616f4c 0000000a 6d202230 61537861  \r\nI/DEBUG\t  (  123):     415a5f38 656c706d 65746152 3834223d 22303030  \r\nI/DEBUG\t  (  123):     415a5f48 2020200a 20202020 6e696d20 6e616843  \r\nI/DEBUG\t  (  123):     415a5f58 736c656e 2231223d 78616d20 6e616843  \r\nI/DEBUG\t  (  123):     415a5f68 736c656e 2231223d 0a3e2f20 2020200a  \r\nI/DEBUG\t  (  123):     415a5f78 75413c20 456f6964 646f636e 61437265  \r\nI/DEBUG\t  (  123):     415a5f88 616e2070 223d656d 65636161 2022646c  \r\nI/DEBUG\t  (  123):     415a5f98 62616e65 3d64656c 75727422 200a2265  \r\nI/DEBUG\t  (  123):     415a5fa8 20202020 6d202020 69426e69 74615274  \r\nI/DEBUG\t  (  123):     415a5fb8 31223d65 30303036 616d2022 74694278  \r\nI/DEBUG\t  (  123):     415a5fc8 65746152 3931223d 30303032 20200a22  \r\nI/DEBUG\t  (  123):     415a5fd8 20202020 696d2020 6d61536e 52656c70  \r\nI/DEBUG\t  (  123):     415a5fe8 3d657461 30363122 20223030 5378616d  \r\nI/DEBUG\t  (  123): \r\nI/DEBUG\t  (  123): memory near r5:\r\nI/DEBUG\t  (  123):     be908d44 400e9f93 400e923d be908d64 be908e70  \r\nI/DEBUG\t  (  123):     be908d54 5ecadd78 df0027ad 00000000 00000032  \r\nI/DEBUG\t  (  123):     be908d64 fffffbdf 40111000 be908d9c be908d9c  \r\nI/DEBUG\t  (  123):     be908d74 be908dac be908e70 be908d9c be908dac  \r\nI/DEBUG\t  (  123):     be908d84 400e5514 00000000 5ec3c42f 00000000  \r\nI/DEBUG\t  (  123):     be908d94 5ec3c45b be908dac 58da9b04 5ecfe858  \r\nI/DEBUG\t  (  123):     be908da4 5ec3c4b3 00000e80 5ecfe844 00000000  \r\nI/DEBUG\t  (  123):     be908db4 5ecfe858 5ed08a60 58d84a44 58d84a44  \r\nI/DEBUG\t  (  123):     be908dc4 58d84a45 58d84a44 58d84b0d 58d84c44  \r\nI/DEBUG\t  (  123):     be908dd4 5ed1b6c0 00000018 58d84a44 5ecfe86c  \r\nI/DEBUG\t  (  123):     be908de4 00000006 00000000 00001002 00000000  \r\nI/DEBUG\t  (  123):     be908df4 00000000 00000000 00000000 00000000  \r\nI/DEBUG\t  (  123):     be908e04 00000000 00000000 00000000 00000000  \r\nI/DEBUG\t  (  123):     be908e14 00000000 00000000 00000000 00000000  \r\nI/DEBUG\t  (  123):     be908e24 00000000 00000000 00000000 00000000  \r\nI/DEBUG\t  (  123):     be908e34 00000000 00000000 00000000 00000000  \r\nI/DEBUG\t  (  123): \r\nI/DEBUG\t  (  123): memory near r6:\r\nI/DEBUG\t  (  123):     be908e50 00000000 5ebf0120 be908db8 5ed1b444  \r\nI/DEBUG\t  (  123):     be908e60 5ed1b6e0 5ed1be10 41771d90 5ea59267  \r\nI/DEBUG\t  (  123):     be908e70 5ecb5be8 00000000 5ed12994 00000001  \r\nI/DEBUG\t  (  123):     be908e80 58d92ca8 5ea5927f 00000001 58d93af8  \r\nI/DEBUG\t  (  123):     be908e90 58d92920 5ea56269 58da96ec 00000008  \r\nI/DEBUG\t  (  123):     be908ea0 5eba48a1 58d93af8 58d92ca8 58d92ca8  \r\nI/DEBUG\t  (  123):     be908eb0 be908eec 58d93af8 58d92ca8 58d92ca8  \r\nI/DEBUG\t  (  123):     be908ec0 be908eec 5ea6fc81 58e9a770 00000000  \r\nI/DEBUG\t  (  123):     be908ed0 00000000 00000000 be908f08 58d8f010  \r\nI/DEBUG\t  (  123):     be908ee0 000300c8 5ebff1a7 01000408 58d8f010  \r\nI/DEBUG\t  (  123):     be908ef0 00000000 00000000 00000000 be908f18  \r\nI/DEBUG\t  (  123):     be908f00 00000000 be908eeb 58da2da8 00000400  \r\nI/DEBUG\t  (  123):     be908f10 be909028 592c9c77 592c9c77 00000000  \r\nI/DEBUG\t  (  123):     be908f20 00000000 00000000 00000000 00000000  \r\nI/DEBUG\t  (  123):     be908f30 be909000 00090000 be908fc8 58d8fda0  \r\nI/DEBUG\t  (  123):     be908f40 000300c8 5ea84691 00000004 00000000  \r\nI/DEBUG\t  (  123): \r\nI/DEBUG\t  (  123): memory near r7:\r\nI/DEBUG\t  (  123):     5ecadd58 74206f74 62206568 746c6975 69206e69  \r\nI/DEBUG\t  (  123):     5ecadd68 656c706d 746e656d 6f697461 00002e6e  \r\nI/DEBUG\t  (  123):     5ecadd78 65737341 6f697472 6166206e 64656c69  \r\nI/DEBUG\t  (  123):     5ecadd88 6c63203a 00000073 6573552f 632f7372  \r\nI/DEBUG\t  (  123):     5ecadd98 65522f6d 2f6d6c61 6c616572 616a2d6d  \r\nI/DEBUG\t  (  123):     5ecadda8 722f6176 6d6c6165 6165722f 6c2d6d6c  \r\nI/DEBUG\t  (  123):     5ecaddb8 61726269 732f7972 6d2f6372 2f6e6961  \r\nI/DEBUG\t  (  123):     5ecaddc8 2f707063 5f696e6a 6c697475 76616a2f  \r\nI/DEBUG\t  (  123):     5ecaddd8 6c635f61 2e737361 00707063 6176614a  \r\nI/DEBUG\t  (  123):     5ecadde8 63786520 69747065 68206e6f 62207361  \r\nI/DEBUG\t  (  123):     5ecaddf8 206e6565 7563636f 64657272 6554202e  \r\nI/DEBUG\t  (  123):     5ecade08 6e696d72 20657461 20494e4a 74207962  \r\nI/DEBUG\t  (  123):     5ecade18 776f7268 20676e69 2b632061 7865202b  \r\nI/DEBUG\t  (  123):     5ecade28 74706563 2e6e6f69 00000000 280a3125  \r\nI/DEBUG\t  (  123):     5ecade38 253a3225 00002933 72656854 73692065  \r\nI/DEBUG\t  (  123):     5ecade48 70206120 69646e65 4a20676e 20617661  \r\nI/DEBUG\t  (  123): \r\nI/DEBUG\t  (  123): memory near r9:\r\nI/DEBUG\t  (  123):     5ecadd70 6f697461 00002e6e 65737341 6f697472  \r\nI/DEBUG\t  (  123):     5ecadd80 6166206e 64656c69 6c63203a 00000073  \r\nI/DEBUG\t  (  123):     5ecadd90 6573552f 632f7372 65522f6d 2f6d6c61  \r\nI/DEBUG\t  (  123):     5ecadda0 6c616572 616a2d6d 722f6176 6d6c6165  \r\nI/DEBUG\t  (  123):     5ecaddb0 6165722f 6c2d6d6c 61726269 732f7972  \r\nI/DEBUG\t  (  123):     5ecaddc0 6d2f6372 2f6e6961 2f707063 5f696e6a  \r\nI/DEBUG\t  (  123):     5ecaddd0 6c697475 76616a2f 6c635f61 2e737361  \r\nI/DEBUG\t  (  123):     5ecadde0 00707063 6176614a 63786520 69747065  \r\nI/DEBUG\t  (  123):     5ecaddf0 68206e6f 62207361 206e6565 7563636f  \r\nI/DEBUG\t  (  123):     5ecade00 64657272 6554202e 6e696d72 20657461  \r\nI/DEBUG\t  (  123):     5ecade10 20494e4a 74207962 776f7268 20676e69  \r\nI/DEBUG\t  (  123):     5ecade20 2b632061 7865202b 74706563 2e6e6f69  \r\nI/DEBUG\t  (  123):     5ecade30 00000000 280a3125 253a3225 00002933  \r\nI/DEBUG\t  (  123):     5ecade40 72656854 73692065 70206120 69646e65  \r\nI/DEBUG\t  (  123):     5ecade50 4a20676e 20617661 65637865 6f697470  \r\nI/DEBUG\t  (  123):     5ecade60 00002e6e 65737341 6f697472 6166206e  \r\nI/DEBUG\t  (  123): \r\nI/DEBUG\t  (  123): memory near sl:\r\nI/DEBUG\t  (  123):     2aaaaa88 ffffffff ffffffff ffffffff ffffffff  \r\nI/DEBUG\t  (  123):     2aaaaa98 ffffffff ffffffff ffffffff ffffffff  \r\nI/DEBUG\t  (  123):     2aaaaaa8 ffffffff ffffffff ffffffff ffffffff  \r\nI/DEBUG\t  (  123):     2aaaaab8 ffffffff ffffffff ffffffff ffffffff  \r\nI/DEBUG\t  (  123):     2aaaaac8 ffffffff ffffffff ffffffff ffffffff  \r\nI/DEBUG\t  (  123):     2aaaaad8 ffffffff ffffffff ffffffff ffffffff  \r\nI/DEBUG\t  (  123):     2aaaaae8 ffffffff ffffffff ffffffff ffffffff  \r\nI/DEBUG\t  (  123):     2aaaaaf8 ffffffff ffffffff ffffffff ffffffff  \r\nI/DEBUG\t  (  123):     2aaaab08 ffffffff ffffffff ffffffff ffffffff  \r\nI/DEBUG\t  (  123):     2aaaab18 ffffffff ffffffff ffffffff ffffffff  \r\nI/DEBUG\t  (  123):     2aaaab28 ffffffff ffffffff ffffffff ffffffff  \r\nI/DEBUG\t  (  123):     2aaaab38 ffffffff ffffffff ffffffff ffffffff  \r\nI/DEBUG\t  (  123):     2aaaab48 ffffffff ffffffff ffffffff ffffffff  \r\nI/DEBUG\t  (  123):     2aaaab58 ffffffff ffffffff ffffffff ffffffff  \r\nI/DEBUG\t  (  123):     2aaaab68 ffffffff ffffffff ffffffff ffffffff  \r\nI/DEBUG\t  (  123):     2aaaab78 ffffffff ffffffff ffffffff ffffffff  \r\nI/DEBUG\t  (  123): \r\nI/DEBUG\t  (  123): memory near fp:\r\nI/DEBUG\t  (  123):     58d8efe8 00000000 00000000 00000000 00000000  \r\nI/DEBUG\t  (  123):     58d8eff8 41414141 65000008 00000000 00000e6b  \r\nI/DEBUG\t  (  123):     58d8f008 00000000 00000000 5ed06360 00000000  \r\nI/DEBUG\t  (  123):     58d8f018 5ed05950 00090000 58d92da8 00000007  \r\nI/DEBUG\t  (  123):     58d8f028 00000000 00000000 00000001 00000000  \r\nI/DEBUG\t  (  123):     58d8f038 417d268c 417d2680 58da2068 00000028  \r\nI/DEBUG\t  (  123):     58d8f048 58d75000 00001000 00001000 0000000c  \r\nI/DEBUG\t  (  123):     58d8f058 58d92e50 00000090 00000003 00000000  \r\nI/DEBUG\t  (  123):     58d8f068 00000000 00000000 00000000 00000000  \r\nI/DEBUG\t  (  123):     58d8f078 00000000 00000000 00000000 00000000  \r\nI/DEBUG\t  (  123):     58d8f088 00000000 00000000 00000000 00000000  \r\nI/DEBUG\t  (  123):     58d8f098 00000000 00000000 00000000 00000000  \r\nI/DEBUG\t  (  123):     58d8f0a8 00000000 00000200 58d75200 00000003  \r\nI/DEBUG\t  (  123):     58d8f0b8 00000000 00000000 00000000 0000dcd8  \r\nI/DEBUG\t  (  123):     58d8f0c8 58e99cd8 00000008 00000500 58d75500  \r\nI/DEBUG\t  (  123):     58d8f0d8 00000003 00000e08 58d75e08 00000008  \r\nI/DEBUG\t  (  123): \r\nI/DEBUG\t  (  123): memory near sp:\r\nI/DEBUG\t  (  123):     be908d40 00000000 400e9f93 400e923d be908d64  \r\nI/DEBUG\t  (  123):     be908d50 be908e70 5ecadd78 df0027ad 00000000  \r\nI/DEBUG\t  (  123):     be908d60 00000032 fffffbdf 40111000 be908d9c  \r\nI/DEBUG\t  (  123):     be908d70 be908d9c be908dac be908e70 be908d9c  \r\nI/DEBUG\t  (  123):     be908d80 be908dac 400e5514 00000000 5ec3c42f  \r\nI/DEBUG\t  (  123):     be908d90 00000000 5ec3c45b be908dac 58da9b04  \r\nI/DEBUG\t  (  123):     be908da0 5ecfe858 5ec3c4b3 00000e80 5ecfe844  \r\nI/DEBUG\t  (  123):     be908db0 00000000 5ecfe858 5ed08a60 58d84a44  \r\nI/DEBUG\t  (  123):     be908dc0 58d84a44 58d84a45 58d84a44 58d84b0d  \r\nI/DEBUG\t  (  123):     be908dd0 58d84c44 5ed1b6c0 00000018 58d84a44  \r\nI/DEBUG\t  (  123):     be908de0 5ecfe86c 00000006 00000000 00001002  \r\nI/DEBUG\t  (  123):     be908df0 00000000 00000000 00000000 00000000  \r\nI/DEBUG\t  (  123):     be908e00 00000000 00000000 00000000 00000000  \r\nI/DEBUG\t  (  123):     be908e10 00000000 00000000 00000000 00000000  \r\nI/DEBUG\t  (  123):     be908e20 00000000 00000000 00000000 00000000  \r\nI/DEBUG\t  (  123):     be908e30 00000000 00000000 00000000 00000000  \r\nI/DEBUG\t  (  123): \r\nI/DEBUG\t  (  123): code around pc:\r\nI/DEBUG\t  (  123):     400e74c8 461ce00b 2b006823 e026d1fb b12468e4  \r\nI/DEBUG\t  (  123):     400e74d8 21014a18 6011447a 4b1247a0 24002027  \r\nI/DEBUG\t  (  123):     400e74e8 f7fc7018 2106ee42 e898f7fe 5180f04f  \r\nI/DEBUG\t  (  123):     400e74f8 a9029104 94022006 9403460a ec44f7fd  \r\nI/DEBUG\t  (  123):     400e7508 46224629 f7fd2002 f7fcec50 2106ee2e  \r\nI/DEBUG\t  (  123):     400e7518 e884f7fe f7fc2001 6960eada d1dc2800  \r\nI/DEBUG\t  (  123):     400e7528 bf00e7d4 deadbaad 00029b30 ffffff9c  \r\nI/DEBUG\t  (  123):     400e7538 0002cdc0 0002cda4 2400b510 aa04b088  \r\nI/DEBUG\t  (  123):     400e7548 46699002 94014620 94039400 eb92f7fd  \r\nI/DEBUG\t  (  123):     400e7558 db0642a0 b1139b07 1c419806 98069106  \r\nI/DEBUG\t  (  123):     400e7568 4620e000 bd10b008 4b1eb40e b082b5f0  \r\nI/DEBUG\t  (  123):     400e7578 447b491d f107af00 585e021c f8522101  \r\nI/DEBUG\t  (  123):     400e7588 68354b04 f852607d 31015b04 d1fa2d00  \r\nI/DEBUG\t  (  123):     400e7598 320e008a 0507f022 0220f107 0d05ebad  \r\nI/DEBUG\t  (  123):     400e75a8 f107603a 46690224 9400466d 4c04f852  \r\nI/DEBUG\t  (  123):     400e75b8 f8453204 2c004f04 f8dfd1f8 f853c030  \r\nI/DEBUG\t  (  123): \r\nI/DEBUG\t  (  123): code around lr:\r\nI/DEBUG\t  (  123):     400e9f70 4a0e4b0d e92d447b 260041f0 4680589c  \r\nI/DEBUG\t  (  123):     400e9f80 686768a5 f9b5e007 2b00300c 4628dd02  \r\nI/DEBUG\t  (  123):     400e9f90 430647c0 3f013554 6824d5f5 d1ef2c00  \r\nI/DEBUG\t  (  123):     400e9fa0 e8bd4630 bf0081f0 00027060 ffffffc4  \r\nI/DEBUG\t  (  123):     400e9fb0 43f0e92d fb01461e 4b16f502 4916460f  \r\nI/DEBUG\t  (  123):     400e9fc0 447bb087 aa014614 20019001 95029203  \r\nI/DEBUG\t  (  123):     400e9fd0 90049505 681a585b b1124698 f0094630  \r\nI/DEBUG\t  (  123):     400e9fe0 4630fd26 f7ffa903 4681fe9c 0000f8d8  \r\nI/DEBUG\t  (  123):     400e9ff0 4630b110 fd28f009 0f00f1b9 9c05d005  \r\nI/DEBUG\t  (  123):     400ea000 1b284639 eb30f017 46204604 e8bdb007  \r\nI/DEBUG\t  (  123):     400ea010 bf0083f0 00027012 ffffff60 46036842  \r\nI/DEBUG\t  (  123):     400ea020 60411e51 da012900 bb9ef000 f8126802  \r\nI/DEBUG\t  (  123):     400ea030 601a0b01 00004770 4a104b0f b570447b  \r\nI/DEBUG\t  (  123):     400ea040 589b4604 461e6819 f009b109 6860fcf0  \r\nI/DEBUG\t  (  123):     400ea050 60651e45 da042d00 f0004620 4605fb85  \r\nI/DEBUG\t  (  123):     400ea060 6822e003 5b01f812 68336022 4620b113  \r\nI/DEBUG\t  (  123): \r\nI/DEBUG\t  (  123): memory map around fault addr deadbaad:\r\nI/DEBUG\t  (  123):     be8e9000-be90a000 rw- [stack]\r\nI/DEBUG\t  (  123):     (no map for address)\r\nI/DEBUG\t  (  123):     ffff0000-ffff1000 r-x [vectors]\r\nI/BootReceiver(\t 373): Copying /data/tombstones/tombstone_06 to DropBox (SYSTEM_TOMBSTONE)\r\nW/ActivityManager(  373):   Force finishing activity com.myproject./.activity.MainActivity\r\nW/InputDispatcher(  373): channel '4284f8c8 com.myproject./com.myproject..activity.MainActivity (server)' ~ Consumer closed input channel or an error occurred.\t events=0x9\r\nE/InputDispatcher(  373): channel '4284f8c8 com.myproject./com.myproject..activity.MainActivity (server)' ~ Channel is unrecoverably broken and will be disposed!\r\nW/InputDispatcher(  373): Attempted to unregister already unregistered input channel '4284f8c8 com.myproject./com.myproject..activity.MainActivity (server)'\r\nI/WindowState(\t373): WIN DEATH: Window{4284f8c8 u0 com.myproject./com.myproject..activity.MainActivity}\r\nD/Zygote  (  126): Process 1580 terminated by signal (11)\r\nD/dalvikvm(  373): GC_FOR_ALLOC freed 2406K, 30% free 20273K/28860K, paused 107ms, total 108ms\r\nW/ActivityManager(  373): Exception thrown during pause\r\nW/ActivityManager(  373): android.os.DeadObjectException\r\nW/ActivityManager(  373):\tat android.os.BinderProxy.transact(Native Method)\r\nW/ActivityManager(  373):\tat android.app.ApplicationThreadProxy.schedulePauseActivity(ApplicationThreadNative.java:635)\r\nW/ActivityManager(  373):\tat com.android.server.am.ActivityStack.startPausingLocked(ActivityStack.java:990)\r\nW/ActivityManager(  373):\tat com.android.server.am.ActivityStack.finishActivityLocked(ActivityStack.java:3834)\r\nW/ActivityManager(  373):\tat com.android.server.am.ActivityStack.finishActivityLocked(ActivityStack.java:3766)\r\nW/ActivityManager(  373):\tat com.android.server.am.ActivityManagerService.handleAppCrashLocked(ActivityManagerService.java:8344)\r\nW/ActivityManager(  373):\tat com.android.server.am.ActivityManagerService.makeAppCrashingLocked(ActivityManagerService.java:8221)\r\nW/ActivityManager(  373):\tat com.android.server.am.ActivityManagerService.crashApplication(ActivityManagerService.java:8900)\r\nW/ActivityManager(  373):\tat com.android.server.am.ActivityManagerService.handleApplicationCrashInner(ActivityManagerService.java:8455)\r\nW/ActivityManager(  373):\tat com.android.server.am.NativeCrashListener$NativeCrashReporter.run(NativeCrashListener.java:86)\r\nI/ActivityManager(  373): Process com.myproject. (pid 1580) has died.\r\n```\r\n\r\n\r\nSo, what is wrong in my code?", "url": "https://github.com/realm/realm-java/issues/5195", "user": "alexei-28", "labels": ["T-Bug-Crash"], "created": "2017-09-02 11:07:43", "closed": "2017-09-06 09:21:42", "commits": {"5785e7a427d4df72b354bff79cbfa447b731dce6": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "46f9aff4d06a404ef31c7073c4ea19b240b26214": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "5785e7a427d4df72b354bff79cbfa447b731dce6", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "46f9aff4d06a404ef31c7073c4ea19b240b26214", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["3109b141bf08ba9878097084df11b4a2d76b7c0a"], "nameRev": "46f9aff4d06a404ef31c7073c4ea19b240b26214 tags/v3.7.1~3", "commitMessage": "java_class_global_def for global class loading\n\n- Add JavaClassGlobalDef to handle global jclass loading.\n- Move common types classes loading to JavaClassGlobalDef.\n- Load SharedRealm$$SchemaChangeCallback & RealmNotifier in JNI_OnLoad\n  to fix #5195 .\n- Code clean up.\n\nNOTE:\nCurrently the JavaClassGlobalDef::initialize() takes about 0.3 ms on a\nlowend armv7 device. So keeping less classes loaded at the beginning\nwill still be a good idea since the Realm.init() will be usually called\non the UI thread when start.\n", "commitDateTime": "2017-09-06 17:21:33", "authoredDateTime": "2017-09-05 15:48:31", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_RealmFileUserStore.cpp", "insertions": 8, "deletions": 5, "lines": 13}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_SyncSession.cpp", "insertions": 7, "deletions": 4, "lines": 11}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_Collection.cpp", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_OsObject.cpp", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_TableQuery.cpp", "insertions": 10, "deletions": 8, "lines": 18}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_Util.cpp", "insertions": 4, "deletions": 15, "lines": 19}, {"filePath": "realm/realm-library/src/main/cpp/java_binding_context.cpp", "insertions": 7, "deletions": 11, "lines": 18}, {"filePath": "realm/realm-library/src/main/cpp/java_binding_context.hpp", "insertions": 0, "deletions": 9, "lines": 9}, {"filePath": "realm/realm-library/src/main/cpp/java_class_global_def.hpp", "insertions": 150, "deletions": 0, "lines": 150}, {"filePath": "realm/realm-library/src/main/cpp/jni_util/java_method.cpp", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/main/cpp/util.cpp", "insertions": 0, "deletions": 24, "lines": 24}, {"filePath": "realm/realm-library/src/main/cpp/util.hpp", "insertions": 0, "deletions": 37, "lines": 37}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["46f9aff4d06a404ef31c7073c4ea19b240b26214"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 194.0, "deletions": 119.0, "lines": 313.0, "gitFilesChange": 12}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-library/src/main/cpp/io_realm_internal_Util.cpp", "realm/realm-library/src/main/cpp/jni_util/java_method.cpp", "realm/realm-library/src/main/cpp/io_realm_internal_TableQuery.cpp", "realm/realm-library/src/main/cpp/io_realm_SyncSession.cpp", "realm/realm-library/src/main/cpp/java_binding_context.hpp", "realm/realm-library/src/main/cpp/io_realm_internal_Collection.cpp", "realm/realm-library/src/main/cpp/io_realm_RealmFileUserStore.cpp", "realm/realm-library/src/main/cpp/java_class_global_def.hpp", "realm/realm-library/src/main/cpp/java_binding_context.cpp", "realm/realm-library/src/main/cpp/io_realm_internal_OsObject.cpp", "realm/realm-library/src/main/cpp/util.hpp", "realm/realm-library/src/main/cpp/util.cpp"]}, {"title": "Native crash", "body": "#### Native Crash\r\n\r\nThis comes from the play developers console. So as of right now I don't have more data than just the crash\r\n\r\n```\r\n  native: pc 000000000004ad34  /system/lib/libc.so (tgkill+12)\r\n  native: pc 00000000000484d3  /system/lib/libc.so (pthread_kill+34)\r\n  native: pc 000000000001d495  /system/lib/libc.so (raise+10)\r\n  native: pc 0000000000018fd1  /system/lib/libc.so (__libc_android_abort+34)\r\n  native: pc 0000000000017034  /system/lib/libc.so (abort+4)\r\n  native: pc 000000000012bb6b  /data/app/com.anghami-1/lib/arm/librealm-jni.so\r\n  native: pc 000000000012bb97  /data/app/com.anghami-1/lib/arm/librealm-jni.so\r\n  native: pc 000000000012bbef  /data/app/com.anghami-1/lib/arm/librealm-jni.so\r\n  native: pc 00000000000f20f1  /data/app/com.anghami-1/lib/arm/librealm-jni.so\r\n  native: pc 00000000000eff5d  /data/app/com.anghami-1/lib/arm/librealm-jni.so\r\n  native: pc 00000000000f0145  /data/app/com.anghami-1/lib/arm/librealm-jni.so\r\n  native: pc 00000000000f1275  /data/app/com.anghami-1/lib/arm/librealm-jni.so\r\n  native: pc 000000000007fb7f  /data/app/com.anghami-1/lib/arm/librealm-jni.so\r\n  native: pc 0000000000073871  /data/app/com.anghami-1/lib/arm/librealm-jni.so\r\n  native: pc 000000000002fdab  /data/app/com.anghami-1/lib/arm/librealm-jni.so (Java_io_realm_internal_SharedRealm_nativeCommitTransaction+22)\r\n  native: pc 0000000000ecf96d  /data/app/com.anghami-1/oat/arm/base.odex\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 3.5.0\r\n\r\nRealm sync feature enabled:no\r\n\r\nAndroid Studio version: Android Studio 3.0 beta 2\r\n\r\nWhich Android version and device: 2 devices have the crash:\r\n\r\n1. Mars_pro, Android 7.0\r\n2. Lenovo P1 (P1a42), 2048MB RAM, Android 7.1\r\n\r\nThis comes from our beta channel with 150 currently active users. Our production build sees around 6~7M monthly actives so we expect that this will become a lot more serious once we deploy there.\r\n", "url": "https://github.com/realm/realm-java/issues/5178", "user": "raja-baz", "labels": ["O-Community", "T-Bug-Crash"], "created": "2017-08-31 07:33:45", "closed": "2017-09-18 11:44:44", "commits": {}, "ttf": 18.00027777777778, "commitsDetails": []}, {"title": "Segmentation fault in librealm-jni.so", "body": "<!---\n\n**Questions**: If you have questions about how to use Realm, ask on\n[StackOverflow](http://stackoverflow.com/questions/ask?tags=realm).\nWe monitor the `realm` tag.\n\n**Feature Request**: Just fill in the first two sections below.\n\n**Bugs**: To help you as fast as possible with an issue please describe your issue\nand the steps you have taken to reproduce it in as many details as possible.\n\n-->\n\n#### Crash\n\nThis is crash that happened once(can't easily reproduce) with one of our testers. The code that crashed is a simple copyToRealmOrUpdate:\n\n```\n    RealmSongInfo songInfo = SongRepository.getRealmSongInfo(realm, song.id);\n    if (songInfo == null) {\n      songInfo = new RealmSongInfo();\n      songInfo.id = song.id; //primary key\n    }\n    songInfo.size = song.size;\n    songInfo.title = song.title;\n    songInfo.hash = song.hash;\n    songInfo.lastTimeAccessed = System.currentTimeMillis();\n    realm.copyToRealmOrUpdate(songInfo);\n```\n\nThis is the only code that runs in the transaction that we suspect crashed. I say suspect because I'm not 100% sure, but from our own app logs leading up to the crash, I'm 90% sure that this is the transaction that would've been happening at that point\n\nThe crash itself is a segmentation fault. On the developer console it shows like so:\n\n<img width=\"819\" alt=\"screen shot 2017-08-29 at 16 46 12\" src=\"https://user-images.githubusercontent.com/1265646/29824432-3ceca5b8-8cda-11e7-966b-044423370df0.png\">\n\nFrom the logcat I was able to retrieve the following:\n\n```\n08-29 16:04:56.356 28302 28302 F libc    : Fatal signal 11 (SIGSEGV), code 1, fault addr 0xae47ffff in tid 28302 (com.anghami)\n08-29 16:04:56.361 28302 28721 F libc    : Fatal signal 11 (SIGSEGV), code 1, fault addr 0xf85d75e4 in tid 28721 (ExoPlayerImplIn)\n08-29 16:04:56.371 28302 28360 F libc    : Fatal signal 11 (SIGSEGV), code 1, fault addr 0x182051d in tid 28360 (RenderThread)\n08-29 16:04:56.525 28735 28735 F DEBUG   : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n08-29 16:04:56.526 28735 28735 F DEBUG   : Build fingerprint: 'google/sailfish/sailfish:7.1.2/NJH47F/4146041:user/release-keys'\n08-29 16:04:56.526 28735 28735 F DEBUG   : Revision: '0'\n08-29 16:04:56.526 28735 28735 F DEBUG   : ABI: 'arm'\n08-29 16:04:56.526 28735 28735 F DEBUG   : pid: 28302, tid: 28302, name: com.anghami  >>> com.anghami <<<\n08-29 16:04:56.526 28735 28735 F DEBUG   : signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0xae47ffff\n08-29 16:04:56.526 28735 28735 F DEBUG   :     r0 ae480000  r1 ae47ffff  r2 fff0dfdf  r3 0000001f\n08-29 16:04:56.526 28735 28735 F DEBUG   :     r4 bd5cdd10  r5 00000000  r6 00003058  r7 00003058\n08-29 16:04:56.526 28735 28735 F DEBUG   :     r8 000000d7  r9 00000000  sl 00000001  fp ae571fa0\n08-29 16:04:56.526 28735 28735 F DEBUG   :     ip f8000000  sp fff562a8  lr cb8f5c91  pc e77eaacc  cpsr a00f0010\n08-29 16:04:56.535 28735 28735 F DEBUG   :\n08-29 16:04:56.535 28735 28735 F DEBUG   : backtrace:\n08-29 16:04:56.536 28735 28735 F DEBUG   :     #00 pc 00018acc  /system/lib/libc.so (memmove+444)\n08-29 16:04:56.536 28735 28735 F DEBUG   :     #01 pc 0012fc8d  /data/app/com.anghami-1/lib/arm/librealm-jni.so\n08-29 16:04:56.536 28735 28735 F DEBUG   :     #02 pc 00130323  /data/app/com.anghami-1/lib/arm/librealm-jni.so\n08-29 16:04:56.536 28735 28735 F DEBUG   :     #03 pc 00130673  /data/app/com.anghami-1/lib/arm/librealm-jni.so\n08-29 16:04:56.536 28735 28735 F DEBUG   :     #04 pc 00133e63  /data/app/com.anghami-1/lib/arm/librealm-jni.so\n08-29 16:04:56.536 28735 28735 F DEBUG   :     #05 pc 00133f2d  /data/app/com.anghami-1/lib/arm/librealm-jni.so\n08-29 16:04:56.536 28735 28735 F DEBUG   :     #06 pc 00133f79  /data/app/com.anghami-1/lib/arm/librealm-jni.so\n08-29 16:04:56.536 28735 28735 F DEBUG   :     #07 pc 00126045  /data/app/com.anghami-1/lib/arm/librealm-jni.so\n08-29 16:04:56.536 28735 28735 F DEBUG   :     #08 pc 0002adb9  /data/app/com.anghami-1/lib/arm/librealm-jni.so (Java_io_realm_internal_OsObject_nativeCreateNewObjectWithStringPrimaryKey+88)\n08-29 16:04:56.536 28735 28735 F DEBUG   :     #09 pc 00f613b1  /data/app/com.anghami-1/oat/arm/base.odex (offset 0xe4f000)\n08-29 16:04:58.793  1096 28736 W ActivityManager:   Force finishing activity com.anghami/.app.main.MainActivity\n08-29 16:04:58.800  1096  1151 I BootReceiver: Copying /data/tombstones/tombstone_04 to DropBox (SYSTEM_TOMBSTONE)\n```\n\n#### Version of Realm and tooling\nRealm version(s): 3.5.0\n\nRealm sync feature enabled: no\n\nAndroid Studio version: 3.0 beta 2\n\nWhich Android version and device: Google pixel. Android v7.1.2\n\nLet me know if there's any more information that I can provide that might be helpful in resolving this", "url": "https://github.com/realm/realm-java/issues/5172", "user": "raja-baz", "labels": ["O-Community", "Reproduction-Required", "T-Bug-Crash"], "created": "2017-08-29 13:54:01", "closed": "2019-11-27 21:34:50", "commits": {}, "ttf": 820.0002777777778, "commitsDetails": []}, {"title": "Crash when syncing Realm", "body": "<!---\r\n\r\n**Questions**: If you have questions about how to use Realm, ask on\r\n[StackOverflow](http://stackoverflow.com/questions/ask?tags=realm).\r\nWe monitor the `realm` tag.\r\n\r\n**Feature Request**: Just fill in the first two sections below.\r\n\r\n**Bugs**: To help you as fast as possible with an issue please describe your issue\r\nand the steps you have taken to reproduce it in as many details as possible.\r\n\r\n-->\r\n\r\n#### Goal\r\n\r\nTrying to sync a Realm. The Realm is created by the Java client and one object is written to it with details about the user, right after Realm auth. This also only happens for some users. But it happens every time for those users. The users have all the same data from a client perspective. \r\n\r\nWhen calling `Realm.getInstance(myConfig)`...\r\n\r\n#### Expected Results\r\n\r\n...it will open the Realm and begin syncing any data up to/down from ROS. \r\n\r\n#### Actual Results\r\n\r\n...the app crashes with the following message:\r\n\r\n`Fatal signal 11 (SIGSEGV), code 1, fault addr 0xbe8dab64 in tid 8785 (Thread-13)`\r\n\r\n#### Steps & Code to Reproduce\r\n\r\nHere are the logs leading up to the crash:\r\n```\r\nConnection[3]: WebSocket::initiate_client_handshake()\r\nConnection[2]: WebSocket::handle_http_response_received()\r\nConnection[2]: Will emit a ping in 600000 milliseconds\r\nConnection[2]: Session[4]: Sending: BIND(server_path='/affdedc20b10a596127b9bd333f51a3e/*a_different_realm*, signed_user_token_size=1041, need_file_ident_pair=0)\r\nConnection[2]: Session[4]: Sending: IDENT(server_file_ident=1, client_file_ident=7, client_file_ident_secret=2349923828407908702, scan_server_version=0, scan_client_version=0, latest_server_version=0, latest_server_session_ident=0)\r\nUsing already open Realm file: /data/data/[PACKAGE_NAME]/files/realm-object-server/affdedc20b10a596127b9bd333f51a3e/affdedc20b10a596127b9bd333f51a3e/*a_different_realm*\r\nConnection[2]: Session[4]: Sending: UPLOAD(client_version=2, server_version=0, changeset_size=249, timestamp=83870271748)\r\nUsing already open Realm file: /data/data/[PACKAGE_NAME]/files/realm-object-server/affdedc20b10a596127b9bd333f51a3e/affdedc20b10a596127b9bd333f51a3e/*a_different_realm*\r\nConnection[2]: Session[4]: Sending: UPLOAD(client_version=3, server_version=0, changeset_size=1865, timestamp=83870271793)\r\nUsing already open Realm file: /data/data/[PACKAGE_NAME]/files/realm-object-server/affdedc20b10a596127b9bd333f51a3e/affdedc20b10a596127b9bd333f51a3e/*a_different_realm*\r\nConnection[2]: Session[4]: Sending: UPLOAD(client_version=6, server_version=0, changeset_size=1865, timestamp=83871234822)\r\nUsing already open Realm file: /data/data/[PACKAGE_NAME]/files/realm-object-server/affdedc20b10a596127b9bd333f51a3e/affdedc20b10a596127b9bd333f51a3e/*a_different_realm*\r\nConnection[2]: Session[4]: Sending: UPLOAD(client_version=8, server_version=0, changeset_size=1862, timestamp=83873276439)\r\nDownload message compression: is_body_compressed = 1, compressed_body_size=13032, uncompressed_body_size=20432\r\nConnection[1]: Session[2]: Received: DOWNLOAD(scan_server_version=19, scan_client_version=6, latest_server_version=19, latest_server_session_ident=6431164143487835281, latest_client_version=6, downloadable_bytes=20066, number_of_changesets=16)\r\nUsing already open Realm file: /data/data/[PACKAGE_NAME]/files/realm-object-server/affdedc20b10a596127b9bd333f51a3e/affdedc20b10a596127b9bd333f51a3e/**the_realm_we're_trying_to_sync**\r\n\r\nA/libc: Fatal signal 11 (SIGSEGV), code 1, fault addr 0xbe8dab64 in tid 8785 (Thread-13)\r\n```\r\n\r\n#### Code Sample\r\n\r\n```java\r\n\r\nSyncUser syncUser = SyncUser.currentUser();\r\nString realmUrl = \"a-valid-path\";\r\nSyncConfiguration syncConfiguration = new SyncConfiguration.Builder(syncUser, realmUrl)\r\n                .trustedRootCA(certName)\r\n                .modules(new UserModule())\r\n                .build();\r\nRealm.getInstance(syncConfiguration);\r\n```\r\n\r\nUserModule.java:\r\n```java\r\n@RealmModule(classes = {User.class})\r\npublic class UserModule {}\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): **Realm Java 4.0.0-BETA2-afe7114-SNAPSHOT** and **ROS 2.0.0-rc2**\r\n\r\nRealm sync feature enabled: **yes**\r\n\r\nAndroid Studio version: **2.3.1**\r\n\r\nWhich Android version and device: **Nexus 6P** running **6.0.1**\r\n", "url": "https://github.com/realm/realm-java/issues/5165", "user": "phansen-nd", "labels": ["O-Customer", "T-Bug-Crash"], "created": "2017-08-28 18:21:59", "closed": "2017-10-24 11:37:52", "commits": {}, "ttf": 56.000277777777775, "commitsDetails": []}, {"title": "Client Reset triggered manually causes errors when Realm is re-opened", "body": "If a ClientReset error is triggered, the Session Error handler is correctly triggered with the `ClientResetRequiredError`. However, if the user then decides to manually trigger the cleanup and re-open the Realm, it appears not to work and Object Store crashes with a exception saying the path doesn't exist:\r\n\r\n```\r\nio.realm.exceptions.RealmFileException: Unable to open a realm at path '/data/data/io.realm.test/cache/junit1002515331/3054f53f-2ae7-448d-8ff6-52876b6befa9/3054f53f-2ae7-448d-8ff6-52876b6befa9/myrealm.management': make_dir() failed: No such file or directory. (make_dir() failed: No such file or directory) (/data/data/io.realm.test/cache/junit1002515331/3054f53f-2ae7-448d-8ff6-52876b6befa9/3054f53f-2ae7-448d-8ff6-52876b6befa9/myrealm.management) in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 256 Kind: ACCESS_ERROR.\r\nat io.realm.internal.SharedRealm.nativeGetSharedRealm(Native Method)\r\nat io.realm.internal.SharedRealm.<init>(SharedRealm.java:190)\r\nat io.realm.internal.SharedRealm.getInstance(SharedRealm.java:243)\r\nat io.realm.internal.SharedRealm.getInstance(SharedRealm.java:206)\r\nat io.realm.RealmCache.doCreateRealmOrGetFromCache(RealmCache.java:303)\r\nat io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:289)\r\nat io.realm.Realm.getInstance(Realm.java:320)\r\nat io.realm.SessionTests$5$1.run(SessionTests.java:220)\r\n```\r\n\r\nThe expected use case is that in an event of Client Reset should be possible to:\r\n1) Close all open Realm instances\r\n2) Manually trigger the `ClientResetRequiredError.executeClientReset()` method\r\n3) Open the Realm again using the same configuration\r\n4) Be able to download all changes using either `waitForInitialRemoteData` or `SyncSession.downloadAllServerChanges()`\r\n", "url": "https://github.com/realm/realm-java/issues/5143", "user": "cmelchior", "labels": ["T-Bug-Crash"], "created": "2017-08-23 12:42:14", "closed": "2017-10-11 18:33:02", "commits": {"0a9afc76ae8c534bfe55d000c09cd02028da2663": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}, "329cfcfed9a7f2ac4d6def263ca1044fc28f874e": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}}, "ttf": 49.000277777777775, "commitsDetails": [{"commitHash": "0a9afc76ae8c534bfe55d000c09cd02028da2663", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "329cfcfed9a7f2ac4d6def263ca1044fc28f874e", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": ["f7272eec72b9037ad639027eb05c11f82ffed0b4"], "nameRev": "329cfcfed9a7f2ac4d6def263ca1044fc28f874e tags/v4.0.0~13", "commitMessage": "Enabling client reset test (#5388)\n\n* fixes #5143 ", "commitDateTime": "2017-10-11 19:33:01", "authoredDateTime": "2017-10-11 19:33:01", "commitGitStats": [{"filePath": "realm/realm-library/src/androidTestObjectServer/java/io/realm/SessionTests.java", "insertions": 0, "deletions": 53, "lines": 53}, {"filePath": "realm/realm-library/src/main/cpp/object-store", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/syncIntegrationTest/java/io/realm/SyncSessionTests.java", "insertions": 52, "deletions": 0, "lines": 52}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.SessionTests.clientReset_manualTriggerAllowSessionToRestart()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "io.realm.SessionTests.errorHandler_useBackupSyncConfigurationAfterClientReset().7", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.SessionTests.errorHandler_useClientResetEncrypted().8", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.SessionTests.clientReset_manualTriggerAllowSessionToRestart().5.onError(io.realm.SyncSession,io.realm.ObjectServerError)", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 6}, {"spoonMethodName": "io.realm.SessionTests.clientReset_manualTriggerAllowSessionToRestart().5.onError(io.realm.SyncSession,io.realm.ObjectServerError).1.run()", "TOT": 12, "UPD": 6, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "io.realm.SessionTests.errorHandler_useBackupSyncConfigurationForClientReset().6.onError(io.realm.SyncSession,io.realm.ObjectServerError)", "TOT": 25, "UPD": 1, "INS": 0, "MOV": 24, "DEL": 0}, {"spoonMethodName": "io.realm.SessionTests.errorHandler_useBackupSyncConfigurationAfterClientReset().7.onError(io.realm.SyncSession,io.realm.ObjectServerError)", "TOT": 29, "UPD": 5, "INS": 0, "MOV": 19, "DEL": 5}, {"spoonMethodName": "io.realm.SessionTests.errorHandler_useClientResetEncrypted().8.onError(io.realm.SyncSession,io.realm.ObjectServerError)", "TOT": 10, "UPD": 4, "INS": 0, "MOV": 4, "DEL": 2}, {"spoonMethodName": "io.realm.SessionTests.clientReset_manualTriggerAllowSessionToRestart().5", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.SessionTests.errorHandler_useBackupSyncConfigurationForClientReset()", "TOT": 13, "UPD": 0, "INS": 1, "MOV": 11, "DEL": 1}, {"spoonMethodName": "io.realm.SessionTests.errorHandler_useBackupSyncConfigurationForClientReset().5.onError(io.realm.SyncSession,io.realm.ObjectServerError)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.SessionTests.errorHandler_useClientResetEncrypted().7.onError(io.realm.SyncSession,io.realm.ObjectServerError)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.SessionTests.errorHandler_useBackupSyncConfigurationAfterClientReset()", "TOT": 10, "UPD": 0, "INS": 0, "MOV": 10, "DEL": 0}, {"spoonMethodName": "io.realm.SessionTests.errorHandler_useBackupSyncConfigurationForClientReset().6", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SyncSessionTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.SyncSessionTests.clientReset_manualTriggerAllowSessionToRestart()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "App crashes randomly after updating Realm from 3.0.0 to 3.5.0", "body": "Realm version: 3.0.0\r\nDevice: Android SDK Simulator x86 with Android v7.1.1\r\nEncryption: Un-encrypted\r\nAndroid studio V 2.3.2\r\nRealm sync feature enabled: no\r\n\r\nThe app uses SyncAdapter. Whenever some local changes are made in realm, SyncAdapter would sync the changes with server using an API. All the local changes made due to some user interaction are made on main thread using executeTransaction() while the sync happens on a different thread. \r\n \r\n#### Goal\r\n\r\nWe want to migrate Realm from 3.0.0 to 3.5.0. However, app crashes in some scenarios upon upgrade to 3.5.0. I.e. in case a local change is done and the sync triggers, the app crashes randomly when trying to persist the changes received in response. Two different stack traces were logged in Debug mode are mentioned below\r\n\r\n#### Actual Results\r\n**Exception 1**:\r\n\r\n```\r\nmport.dev.debug A/libc: Fatal signal 11 (SIGSEGV), code 1, fault addr 0x20 in tid 855 (mport.dev.debug)\r\n                                                                             \r\n                                                                             [ 08-01 14:46:55.785  1254: 1254 W/         ]\r\n                                                                             debuggerd: handling request: pid=855 uid=10072 gid=10072 tid=855\r\n08-01 14:46:55.790 1747-1747/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n08-01 14:46:55.790 1747-1747/? A/DEBUG: Build fingerprint: 'Android/sdk_google_phone_x86/generic_x86:7.1.1/NYC/3756122:userdebug/test-keys'\r\n08-01 14:46:55.790 1747-1747/? A/DEBUG: Revision: '0'\r\n08-01 14:46:55.790 1747-1747/? A/DEBUG: ABI: 'x86'\r\n08-01 14:46:55.790 1747-1747/? A/DEBUG: pid: 855, tid: 855, name: mport.dev.debug  >>> <package name> <<<\r\n08-01 14:46:55.790 1747-1747/? A/DEBUG: signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x20\r\n08-01 14:46:55.790 1747-1747/? A/DEBUG:     eax 00000000  ebx acc00ac0  ecx 00000011  edx 00000001\r\n08-01 14:46:55.790 1747-1747/? A/DEBUG:     esi 00000000  edi 00000000\r\n08-01 14:46:55.790 1747-1747/? A/DEBUG:     xcs 00000073  xds 0000007b  xes 0000007b  xfs 0000003b  xss 0000007b\r\n08-01 14:46:55.790 1747-1747/? A/DEBUG:     eip aef531cc  ebp bfbeb8a8  esp bfbeb8a8  flags 00210206\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG: backtrace:\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #00 pc 001dc1cc  /system/lib/libskia.so (_ZN8SkMatrix12setTranslateEff+60)\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #01 pc 000f8be2  /system/lib/libandroid_runtime.so (_ZN7android12SkMatrixGlue12setTranslateEP7_JNIEnvP8_jobjectxff+50)\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #02 pc 0193374a  /system/framework/x86/boot-framework.oat (offset 0x1584000) (android.graphics.Matrix.native_setTranslate+150)\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #03 pc 0193592b  /system/framework/x86/boot-framework.oat (offset 0x1584000) (android.graphics.Matrix.setTranslate+71)\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #04 pc 0216528b  /system/framework/x86/boot-framework.oat (offset 0x1584000) (android.widget.ImageView.configureBounds+631)\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #05 pc 0216688b  /system/framework/x86/boot-framework.oat (offset 0x1584000) (android.widget.ImageView.updateDrawable+743)\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #06 pc 02168719  /system/framework/x86/boot-framework.oat (offset 0x1584000) (android.widget.ImageView.setImageDrawable+101)\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #07 pc 00109262  /system/lib/libart.so (art_quick_invoke_stub+338)\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #08 pc 00112d9d  /system/lib/libart.so (_ZN3art9ArtMethod6InvokeEPNS_6ThreadEPjjPNS_6JValueEPKc+237)\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #09 pc 0031d596  /system/lib/libart.so (_ZN3art11interpreter34ArtInterpreterToCompiledCodeBridgeEPNS_6ThreadEPNS_9ArtMethodEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+294)\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #10 pc 00315437  /system/lib/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+615)\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #11 pc 0067ede7  /system/lib/libart.so (MterpInvokeVirtualQuick+535)\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #12 pc 000ff2a1  /system/lib/libart.so (artMterpAsmInstructionStart+29857)\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #13 pc 002e5e98  /system/lib/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+488)\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #14 pc 002ed6e0  /system/lib/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+192)\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #15 pc 00316612  /system/lib/libart.so (_ZN3art11interpreter6DoCallILb1ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+450)\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #16 pc 0067e3bd  /system/lib/libart.so (MterpInvokeDirectRange+461)\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #17 pc 000fb921  /system/lib/libart.so (artMterpAsmInstructionStart+15137)\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #18 pc 002e5e98  /system/lib/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+488)\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #19 pc 002ed6e0  /system/lib/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+192)\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #20 pc 0031541b  /system/lib/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+587)\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #21 pc 0067bde2  /system/lib/libart.so (MterpInvokeInterface+1474)\r\n08-01 14:46:56.077 1747-1747/? A/DEBUG:     #22 pc 000fb721  /system/lib/libart.so (artMterpAsmInstructionStart+14625)\r\n08-01 14:46:56.078 1747-1747/? A/DEBUG:     #23 pc 002e5e98  /system/lib/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+488)\r\n08-01 14:46:56.078 1747-1747/? A/DEBUG:     #24 pc 002ed6e0  /system/lib/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+192)\r\n08-01 14:46:56.078 1747-1747/? A/DEBUG:     #25 pc 0031541b  /system/lib/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+587)\r\n08-01 14:46:56.078 1747-1747/? A/DEBUG:     #26 pc 0067c110  /system/lib/libart.so (MterpInvokeDirect+464)\r\n08-01 14:46:56.078 1747-1747/? A/DEBUG:     #27 pc 000fb621  /system/lib/libart.so (artMterpAsmInstructionStart+14369)\r\n08-01 14:46:56.078 1747-1747/? A/DEBUG:     #28 pc 002e5e98  /system/lib/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+488)\r\n08-01 14:46:56.079 1747-1747/? A/DEBUG:     #29 pc 002ed6e0  /system/lib/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+192)\r\n08-01 14:46:56.079 1747-1747/? A/DEBUG:     #30 pc 0031541b  /system/lib/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+587)\r\n08-01 14:46:56.079 1747-1747/? A/DEBUG:     #31 pc 0067ede7  /system/lib/libart.so (MterpInvokeVirtualQuick+535)\r\n08-01 14:46:56.079 1747-1747/? A/DEBUG:     #32 pc 000ff2a1  /system/lib/libart.so (artMterpAsmInstructionStart+29857)\r\n08-01 14:46:56.079 1747-1747/? A/DEBUG:     #33 pc 002e5e98  /system/lib/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+488)\r\n08-01 14:46:56.079 1747-1747/? A/DEBUG:     #34 pc 002ed6e0  /system/lib/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+192)\r\n08-01 14:46:56.079 1747-1747/? A/DEBUG:     #35 pc 0031541b  /system/lib/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+587)\r\n08-01 14:46:56.079 1747-1747/? A/DEBUG:     #36 pc 0067bde2  /system/lib/libart.so (MterpInvokeInterface+1474)\r\n08-01 14:46:56.079 1747-1747/? A/DEBUG:     #37 pc 000fb721  /system/lib/libart.so (artMterpAsmInstructionStart+14625)\r\n08-01 14:46:56.079 1747-1747/? A/DEBUG:     #38 pc 002e5e98  /system/lib/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+488)\r\n08-01 14:46:56.080 1747-1747/? A/DEBUG:     #39 pc 002ed6e0  /system/lib/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+192)\r\n08-01 14:46:56.080 1747-1747/? A/DEBUG:     #40 pc 0031541b  /system/lib/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+587)\r\n08-01 14:46:56.080 1747-1747/? A/DEBUG:     #41 pc 0067bde2  /system/lib/libart.so (MterpInvokeInterface+1474)\r\n08-01 14:46:56.080 1747-1747/? A/DEBUG:     #42 pc 000fb721  /system/lib/libart.so (artMterpAsmInstructionStart+14625)\r\n08-01 14:46:56.080 1747-1747/? A/DEBUG:     #43 pc 002e5e98  /system/lib/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+488)\r\n08-01 14:46:56.080 1747-1747/? A/DEBUG:     #44 pc 002ed6e0  /system/lib/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+192)\r\n08-01 14:46:56.080 1747-1747/? A/DEBUG:     #45 pc 0031541b  /system/lib/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+587)\r\n08-01 14:46:56.080 1747-1747/? A/DEBUG:     #46 pc 0067ede7  /system/lib/libart.so (MterpInvokeVirtualQuick+535)\r\n08-01 14:46:56.080 1747-1747/? A/DEBUG:     #47 pc 000ff2a1  /system/lib/libart.so (artMterpAsmInstructionStart+29857)\r\n08-01 14:46:56.080 1747-1747/? A/DEBUG:     #48 pc 002e5e98  /system/lib/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+488)\r\n08-01 14:46:56.080 1747-1747/? A/DEBUG:     #49 pc 002ed5f0  /system/lib/libart.so (_ZN3art11interpreter30EnterInterpreterFromEntryPointEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameE+176)\r\n08-01 14:46:56.080 1747-1747/? A/DEBUG:     #50 pc 0066cf79  /system/lib/libart.so (artQuickToInterpreterBridge+1049)\r\n08-01 14:46:56.080 1747-1747/? A/DEBUG:     #51 pc 0010f39d  /system/lib/libart.so (art_quick_to_interpreter_bridge+77)\r\n08-01 14:46:56.080 1747-1747/? A/DEBUG:     #52 pc 00014e03  /dev/ashmem/dalvik-jit-code-cache (deleted)\r\n                                        \r\n                                        \r\n                                        [ 08-01 14:46:56.255  1254: 1254 W/         ]\r\n                                        debuggerd: resuming target 855\r\n\r\n```\r\n\r\n\r\n**Exception 2**: \r\n```\r\nmport.dev.debug A/libc: Fatal signal 11 (SIGSEGV), code 1, fault addr 0x20 in tid 32429 (mport.dev.debug)\r\n                                                                                 \r\n                                                                                 [ 08-01 18:21:48.093  1254: 1254 W/         ]\r\n                                                                                 debuggerd: handling request: pid=32429 uid=10074 gid=10074 tid=32429\r\n08-01 18:21:48.102 4223-4223/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n08-01 18:21:48.103 4223-4223/? A/DEBUG: Build fingerprint: 'Android/sdk_google_phone_x86/generic_x86:7.1.1/NYC/3756122:userdebug/test-keys'\r\n08-01 18:21:48.103 4223-4223/? A/DEBUG: Revision: '0'\r\n08-01 18:21:48.103 4223-4223/? A/DEBUG: ABI: 'x86'\r\n08-01 18:21:48.103 4223-4223/? A/DEBUG: pid: 32429, tid: 32429, name: mport.dev.debug  >>> mport.dev.debug <<<\r\n08-01 18:21:48.103 4223-4223/? A/DEBUG: signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x20\r\n08-01 18:21:48.103 4223-4223/? A/DEBUG:     eax 00000000  ebx acc00ac0  ecx 00000011  edx 00000001\r\n08-01 18:21:48.103 4223-4223/? A/DEBUG:     esi 00000000  edi 00000000\r\n08-01 18:21:48.103 4223-4223/? A/DEBUG:     xcs 00000073  xds 0000007b  xes 0000007b  xfs 0000003b  xss 0000007b\r\n08-01 18:21:48.103 4223-4223/? A/DEBUG:     eip aef531cc  ebp bfbed708  esp bfbed708  flags 00010206\r\n08-01 18:21:48.390 4223-4223/? A/DEBUG: backtrace:\r\n08-01 18:21:48.390 4223-4223/? A/DEBUG:     #00 pc 001dc1cc  /system/lib/libskia.so (_ZN8SkMatrix12setTranslateEff+60)\r\n08-01 18:21:48.390 4223-4223/? A/DEBUG:     #01 pc 000f8be2  /system/lib/libandroid_runtime.so (_ZN7android12SkMatrixGlue12setTranslateEP7_JNIEnvP8_jobjectxff+50)\r\n08-01 18:21:48.390 4223-4223/? A/DEBUG:     #02 pc 0193374a  /system/framework/x86/boot-framework.oat (offset 0x1584000) (android.graphics.Matrix.native_setTranslate+150)\r\n08-01 18:21:48.390 4223-4223/? A/DEBUG:     #03 pc 0193592b  /system/framework/x86/boot-framework.oat (offset 0x1584000) (android.graphics.Matrix.setTranslate+71)\r\n08-01 18:21:48.390 4223-4223/? A/DEBUG:     #04 pc 0216528b  /system/framework/x86/boot-framework.oat (offset 0x1584000) (android.widget.ImageView.configureBounds+631)\r\n08-01 18:21:48.390 4223-4223/? A/DEBUG:     #05 pc 0216688b  /system/framework/x86/boot-framework.oat (offset 0x1584000) (android.widget.ImageView.updateDrawable+743)\r\n08-01 18:21:48.390 4223-4223/? A/DEBUG:     #06 pc 02168719  /system/framework/x86/boot-framework.oat (offset 0x1584000) (android.widget.ImageView.setImageDrawable+101)\r\n08-01 18:21:48.390 4223-4223/? A/DEBUG:     #07 pc 00109262  /system/lib/libart.so (art_quick_invoke_stub+338)\r\n08-01 18:21:48.390 4223-4223/? A/DEBUG:     #08 pc 00112d9d  /system/lib/libart.so (_ZN3art9ArtMethod6InvokeEPNS_6ThreadEPjjPNS_6JValueEPKc+237)\r\n08-01 18:21:48.390 4223-4223/? A/DEBUG:     #09 pc 0031d596  /system/lib/libart.so (_ZN3art11interpreter34ArtInterpreterToCompiledCodeBridgeEPNS_6ThreadEPNS_9ArtMethodEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+294)\r\n08-01 18:21:48.390 4223-4223/? A/DEBUG:     #10 pc 00315437  /system/lib/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+615)\r\n08-01 18:21:48.390 4223-4223/? A/DEBUG:     #11 pc 0067ede7  /system/lib/libart.so (MterpInvokeVirtualQuick+535)\r\n08-01 18:21:48.390 4223-4223/? A/DEBUG:     #12 pc 000ff2a1  /system/lib/libart.so (artMterpAsmInstructionStart+29857)\r\n08-01 18:21:48.390 4223-4223/? A/DEBUG:     #13 pc 002e5e98  /system/lib/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+488)\r\n08-01 18:21:48.390 4223-4223/? A/DEBUG:     #14 pc 002ed5f0  /system/lib/libart.so (_ZN3art11interpreter30EnterInterpreterFromEntryPointEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameE+176)\r\n08-01 18:21:48.390 4223-4223/? A/DEBUG:     #15 pc 0066cf79  /system/lib/libart.so (artQuickToInterpreterBridge+1049)\r\n08-01 18:21:48.390 4223-4223/? A/DEBUG:     #16 pc 0010f39d  /system/lib/libart.so (art_quick_to_interpreter_bridge+77)\r\n08-01 18:21:48.390 4223-4223/? A/DEBUG:     #17 pc 000bdde9  /dev/ashmem/dalvik-jit-code-cache (deleted)\r\n```\r\n\r\n#### Steps & Code to Reproduce\r\n\r\nWe could not pin point an exact reason why this happens. Went through the change log 3.0.0 onwards but we are unable to identify any particular change that can cause this. Based on the logs that we added, we can see that the transactions get completed successfully and it crashes after few milliseconds.\r\n\r\nIt would be great if you can pinpoint if this is a bug or something could be wrong at our end", "url": "https://github.com/realm/realm-java/issues/5056", "user": "patelnishantk", "labels": ["T-Bug-Crash"], "created": "2017-08-01 13:38:20", "closed": "2017-11-30 07:14:02", "commits": {}, "ttf": 120.00027777777778, "commitsDetails": []}, {"title": "\"Bad Realm File Header\" error after compacting that threw \"No space left on device\"", "body": "#### Goal\r\n\r\n> Don't let the realm file crashed\r\n\r\n#### Expected Results\r\n\r\n> Realm file not crashed\r\n\r\n#### Actual Results\r\n\r\n>  Realm file crashed\r\n\r\n#### Steps & Code to Reproduce\r\n\r\nI have a user experienced a \"No space left on device\" error at first when `compactRealm` was called.\r\nThen the user can never open my app due to the `io.realm.exceptions.RealmFileException: Bad Realm file header (#1)` error.\r\n\r\n#### Code Sample\r\n\r\n```\r\nException io.realm.exceptions.RealmError: Unrecoverable error. write(): failed: No space left on device in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 109\r\n```\r\n\r\n```java\r\n\r\n        Realm.init( context );\r\n        RealmConfiguration realmConfiguration = new RealmConfiguration.Builder()\r\n                .schemaVersion( REALM_DATABASE_VERSION ) // Must be bumped when the schema changes\r\n                .migration( this ) // Migration to run instead of throwing an exception\r\n//                .deleteRealmIfMigrationNeeded()\r\n                .build();\r\n\r\n        Realm.compactRealm( realmConfiguration );\r\n\r\n        Realm.setDefaultConfiguration(realmConfiguration);\r\n\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 3.0.0\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: IntelliJ IDEA 2017.1\r\n\r\nWhich Android version and device: API 23, Samsung SM-G532G\r\n", "url": "https://github.com/realm/realm-java/issues/5011", "user": "KimiChiu", "labels": ["Blocked", "T-Bug-Crash"], "created": "2017-07-24 03:07:01", "closed": "2017-10-24 12:05:13", "commits": {}, "ttf": 92.00027777777778, "commitsDetails": []}, {"title": "Realm 3.4.0 SIGNAL 11", "body": "We recently upgraded our app from Realm 3.1.4 to Realm 3.4.0.\r\nEverything appeared to be fine in QC and Staging tests, but when we released to production we saw our errors go through the roof. Unfortunately we still can't reproduce the issue in QC or Staging, and we don't have support for native crashes enabled in crashlytics.  From the play console, we have:\r\n\r\nThis appears to be happening in our arm builds (armeabi-v7a and arm64-v8a).\r\n\r\narm64-v8a:\r\nbacktrace:\r\n  native: pc 0000000000174d40  /data/app/com.ourapp.app-1/lib/arm64/librealm-jni.so\r\n  native: pc 0000000000175898  /data/app/com.ourapp.app-1/lib/arm64/librealm-jni.so\r\n  native: pc 000000000003fefc  /data/app/com.ourapp.app-1/lib/arm64/librealm-jni.so\r\n  native: pc 00000000001cf6f0  /data/app/com.ourapp.app-1/lib/arm64/librealm-jni.so\r\n  native: pc 00000000001cf74c  /data/app/com.ourapp.app-1/lib/arm64/librealm-jni.so\r\n  native: pc 0000000000083cc4  /data/app/com.ourapp.app-1/lib/arm64/librealm-jni.so\r\n  native: pc 000000000007ba44  /data/app/com.ourapp.app-1/lib/arm64/librealm-jni.so\r\n  native: pc 00000000001c7cec  /data/app/com.ourapp.app-1/lib/arm64/librealm-jni.so\r\n  native: pc 00000000001c8184  /data/app/com.ourapp.app-1/lib/arm64/librealm-jni.so\r\n  native: pc 00000000001951e8  /data/app/com.ourapp.app-1/lib/arm64/librealm-jni.so\r\n  native: pc 00000000001c8184  /data/app/com.ourapp.app-1/lib/arm64/librealm-jni.so\r\n  native: pc 00000000001951e8  /data/app/com.ourapp.app-1/lib/arm64/librealm-jni.so\r\n  native: pc 00000000001c7c1c  /data/app/com.ourapp.app-1/lib/arm64/librealm-jni.so\r\n  native: pc 0000000000195f0c  /data/app/com.ourapp.app-1/lib/arm64/librealm-jni.so\r\n  native: pc 00000000001a5468  /data/app/com.ourapp.app-1/lib/arm64/librealm-jni.so\r\n  native: pc 00000000001a5550  /data/app/com.ourapp.app-1/lib/arm64/librealm-jni.so\r\n  native: pc 00000000000f312c  /data/app/com.ourapp.app-1/lib/arm64/librealm-jni.so\r\n  native: pc 00000000000efb4c  /data/app/com.ourapp.app-1/lib/arm64/librealm-jni.so\r\n  native: pc 00000000000efe7c  /data/app/com.ourapp.app-1/lib/arm64/librealm-jni.so\r\n  native: pc 0000000000106da8  /data/app/com.ourapp.app-1/lib/arm64/librealm-jni.so\r\n  native: pc 0000000000106e84  /data/app/com.ourapp.app-1/lib/arm64/librealm-jni.so\r\n  native: pc 00000000002186f8  /data/app/com.ourapp.app-1/lib/arm64/librealm-jni.so\r\n  native: pc 000000000006904c  /system/lib64/libc.so (_ZL15__pthread_startPv+196)\r\n  native: pc 000000000001e2b8  /system/lib64/libc.so (__start_thread+16)\r\n\r\n\r\narmeabi-v7a:\r\nbacktrace:\r\n  native: pc 00000000000e332a  /data/app/com.ourapp.app-2/lib/arm/librealm-jni.so\r\n\r\nHELP!!", "url": "https://github.com/realm/realm-java/issues/4976", "user": "mandrachek", "labels": ["Blocked", "O-Community", "T-Bug-Crash"], "created": "2017-07-17 11:49:14", "closed": "2017-08-23 04:30:10", "commits": {}, "ttf": 36.000277777777775, "commitsDetails": []}, {"title": "Crash: mmap() with size 0: offset 0", "body": "```java\nNon-fatal Exception: io.realm.exceptions.RealmError: Unrecoverable error. mmap() failed: Invalid argumentsize: 0offset: 0 in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 281\n       at io.realm.internal.SharedRealm.nativeCommitTransaction(SharedRealm.java)\n       at io.realm.internal.SharedRealm.commitTransaction(SharedRealm.java:260)\n       at io.realm.BaseRealm.commitTransaction(BaseRealm.java:359)\n       at io.realm.Realm.commitTransaction(Realm.java:130)\n       at io.realm.Realm.executeTransaction(Realm.java:1465)\n```\n\nThe debug trace is a little wonky but we can say it is either caused by a .deleteFromRealm() call or .copyToRealmOrUpdate() small transaction.  The size value of 0 and offset 0 looks like a realm core bug.\n\nThat's all the details we have right now. Will appened if the trace becomes clearer. This happened on \n\n1) Android 7.0 with no disk or memory pressure (LGLS992)\n2) Realm 3.3.2\n3) No encryption. Db on internal disk.", "url": "https://github.com/realm/realm-java/issues/4848", "user": "diegomontoya", "labels": ["O-Community", "Pipeline-On-Hold", "Reproduction-Required", "T-Bug-Crash"], "created": "2017-06-26 07:12:35", "closed": "2019-11-27 21:29:43", "commits": {}, "ttf": 884.0002777777778, "commitsDetails": []}, {"title": "IllegalArgumentException: Could not parse user json", "body": "\r\n#### Goal\r\n\r\nI'm trying to create a synced realm database\r\n\r\n#### Expected Results\r\n\r\nThat the database should not crash even if it failed to login\r\n\r\n#### Actual Results\r\n\r\nSyncUser.currentUser throws an exception, crashing the whole application and it's not possible to delete that invalid user.\r\nThe error is something like:\r\nCaused by:\r\n```\r\n java.lang.IllegalArgumentException: Could not parse user json: eyJpZGVudGl0eSI6IjQ0ZWU5Y2ZlNGMwNDc5YTVmZDU4MWMwOTQ5OTI5Y2YxIiwiZXhwaXJlcyI6MTgxMzM1NDkzNCwiYXBwX2lkIjoiY29tLmxvc3RwaXhlbHMuZmllbGRzZXJ2aWNlIiwiYWNjZXNzIjpbInJlZnJlc2giXSwiaXNfYWRtaW4iOmZhbHNlLCJzYWx0IjowLjY1OTEwMjg3OTYyMzExNTN9:P1KRa4IykFyVWdd9CUt84jytP7r+O3X8P7bgwtXjJBrgbwLtf0Fz8+ezfKP01G5mjumsjx9bc4ZCY+JkaEOjSu1U+kDck0Oi7fOgvhpf2cpPjPryrEMF/XXkNq8EBzUfumdNRsxoBEJhNsGcOui/UO8kEI1y0qlxUdjVwEupqv62BPlz4AzGCC27MWsKUACDLJUekC/pdMTRYcrWEVTfmZXZHrm90QtXwmJVSUKePmwWhE5xTvDQKw49bT1FJzX45RhRZez3pP2SAYpwNH8IVpnMqN1M4+OruwTt//eRwO8VQdPJKgXLk3T2Cx1AWnjL+AkuW0dcKBmbjJt3Cs3v1g==\r\n                                                                                 at io.realm.SyncUser.fromJson(SyncUser.java:157)\r\n                                                                                 at io.realm.RealmFileUserStore.toSyncUserOrNull(RealmFileUserStore.java:84)\r\n                                                                                 at io.realm.RealmFileUserStore.getCurrent(RealmFileUserStore.java:44)\r\n                                                                                 at io.realm.SyncUser.currentUser(SyncUser.java:110)\r\n\r\n```\r\n#### Steps & Code to Reproduce\r\n\r\nI first start with an offline realm database. Then I create a synced user with this code\r\n```\r\nGoogleSignInResult result = Auth.GoogleSignInApi.getSignInResultFromIntent(data);\r\n        if (result.isSuccess()) {\r\n            GoogleSignInAccount acct = result.getSignInAccount();\r\n            String token = acct.getIdToken();\r\n            SyncCredentials myCredentials = SyncCredentials.google(token);\r\n            String authURL = serverUrl + \"/auth\";\r\n            return SyncUser.login(myCredentials, authURL);\r\n        }\r\n```\r\n\r\nI then merge the offline and online database\r\n\r\n```\r\nif (user != null && user.isValid()) {\r\n            RealmConfiguration configuration = getSyncConfig(user);\r\n            Realm offlineRealm = Realm.getDefaultInstance();\r\n            Realm.setDefaultConfiguration(configuration);\r\n            Realm onlineRealm = Realm.getDefaultInstance();\r\n\r\n            // Merge\r\n            try {\r\n                onlineRealm.refresh();\r\n                // Code for merging offline database to online database\r\n            } finally {\r\n                offlineRealm.close();\r\n                onlineRealm.close();\r\n            }\r\n        }\r\n```\r\n\r\nIf an exception occurs I catch it and logout that user\r\n```\r\nSyncUser user = SyncUser.currentUser();\r\n        if (user != null && user.isValid()) {\r\n            user.logout();\r\n        }\r\n```\r\n\r\nNow if an exception occur, then next time the app is started SyncUser.currentUser() will throw the above exception and it's not possible to use the app until the data of the app is cleared.\r\n\r\nA local Realm object is a member of the activity and is closed after login/merge is done and set to default instance again to now point to correct realm database.\r\n\r\nIs it possible to clear the invalid user without deleting all data? What can cause this to happen? Encryption is not applied to the databases. The realm server is running locally on my Mac. I can't reproduce the problem every time, but 1 out of 3 times when I try, I get this problem and needs to clear app data to be able to use the app again.\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 3.3.2\r\n\r\nRealm sync feature enabled: yes\r\n\r\nAndroid Studio version: 2.3\r\n\r\nWhich Android version and device: Emulator, android API 24", "url": "https://github.com/realm/realm-java/issues/4822", "user": "Maxxan", "labels": ["T-Bug-Crash"], "created": "2017-06-20 22:11:17", "closed": "2017-06-30 11:54:45", "commits": {"1680c299637aa48aa7e609f6bd0a43234d710683": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}, "5d388ea9d7d238babc5d6f9a57682802df58a198": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "1680c299637aa48aa7e609f6bd0a43234d710683", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5d388ea9d7d238babc5d6f9a57682802df58a198", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["f531c9aedb57db295cbe7f8759ed301806d2f0fa"], "nameRev": "5d388ea9d7d238babc5d6f9a57682802df58a198 tags/v3.5.0~4^2~16", "commitMessage": "fixes #4822 (#4862)\n\n* fixes #4822 ", "commitDateTime": "2017-06-30 12:54:39", "authoredDateTime": "2017-06-30 12:54:39", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "realm/realm-library/src/androidTestObjectServer/java/io/realm/SessionTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/androidTestObjectServer/java/io/realm/SyncConfigurationTests.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "realm/realm-library/src/androidTestObjectServer/java/io/realm/SyncManagerTests.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "realm/realm-library/src/androidTestObjectServer/java/io/realm/SyncUserTests.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "realm/realm-library/src/androidTestObjectServer/java/io/realm/SyncedRealmMigrationTests.java", "insertions": 0, "deletions": 7, "lines": 7}, {"filePath": "realm/realm-library/src/androidTestObjectServer/java/io/realm/util/SyncTestUtils.java", "insertions": 32, "deletions": 6, "lines": 38}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_RealmFileUserStore.cpp", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/RealmFileUserStore.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/SyncUser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/UserStore.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/internal/SyncObjectServerFacade.java", "insertions": 18, "deletions": 4, "lines": 22}, {"filePath": "realm/realm-library/src/syncIntegrationTest/java/io/realm/objectserver/AuthTests.java", "insertions": 131, "deletions": 0, "lines": 131}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.SessionTests.get_syncValues()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SyncConfigurationTests.java", "spoonMethods": []}, {"spoonFilePath": "SyncManagerTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.SyncManagerTests.setUp().1.isActive(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SyncUserTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.SyncUserTests.tearDown()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SyncedRealmMigrationTests.java", "spoonMethods": []}, {"spoonFilePath": "SyncTestUtils.java", "spoonMethods": [{"spoonMethodName": "io.realm.util.SyncTestUtils", "TOT": 7, "UPD": 2, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.util.SyncTestUtils.createTestAdminUser()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.util.SyncTestUtils.createTestUser()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.util.SyncTestUtils.createTestUser(long)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.util.SyncTestUtils.createTestUser(java.lang.String)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.realm.util.SyncTestUtils.addToUserStore(io.realm.SyncUser)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.util.SyncTestUtils.createTestUser(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,boolean)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RealmFileUserStore.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmFileUserStore.isActive(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmFileUserStore.nativeIsActive(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SyncUser.java", "spoonMethods": [{"spoonMethodName": "io.realm.SyncUser.isValid()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "UserStore.java", "spoonMethods": [{"spoonMethodName": "io.realm.isActive(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SyncObjectServerFacade.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.SyncObjectServerFacade.getUserAndServerUrl(io.realm.RealmConfiguration)", "TOT": 11, "UPD": 4, "INS": 3, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "AuthTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.objectserver.AuthTests.cachedInstanceShouldThrowIfUserBecomeInvalid()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.objectserver.AuthTests.buildingSyncConfigurationShouldThrowIfInvalidUser()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.objectserver.AuthTests.usingConfigurationWithInvalidUserShouldThrow()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.objectserver.AuthTests.loggingOutUserShouldImpactOtherInstances()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.objectserver.AuthTests.loggingOutCurrentUserShouldImpactOtherInstances()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "SIGSEGV when using InsertOrUpdate", "body": "I create chatting apps. The server give me a bunch of data repeatly (looping). I save it to Realm on Background (using AsyncTask). And I often get this error. Thanks before \ud83d\ude0a\n\n*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n```\nBuild fingerprint: 'Xiaomi/ferrari/ferrari:5.0.2/LRX22G/V8.2.2.0.LXIMIDL:user/release-keys'\nRevision: '0'\nABI: 'arm64'\npid: 5599, tid: 5767, name: ndroid.klikchat  >>> com.kliklabs.android.klikchat <<<\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x8\n    x0   00000055b48127e8  x1   000000004d07abbc  x2   0000000000000000  x3   00000055b4813180\n    x4   0000000000006538  x5   000000000002eee8  x6   00000055b5208230  x7   0000000000000070\n    x8   0000007f835c81c8  x9   0000000000000003  x10  0000000000000033  x11  0000000000000001\n    x12  0000000000000001  x13  000000000000000c  x14  0000000000000073  x15  00000000000001ff\n    x16  00000055b5208290  x17  0000007fa3cd2e90  x18  0000000000000000  x19  0000000009000000\n    x20  00000055b48127e8  x21  000000000000005d  x22  0000000000000098  x23  0000000000000000\n    x24  0000000000000000  x25  0000000000000000  x26  000000004d07abbc  x27  0000000000000001\n    x28  0000000000000438  x29  0000007f835c80c0  x30  0000007f8d0f63e8\n    sp   0000007f835c80c0  pc   0000007f8d0f3808  pstate 0000000060000000\n\nbacktrace:\n    #00 pc 00000000000f5808  /data/app/com.kliklabs.android.klikchat-2/lib/arm64/librealm-jni.so\n    #01 pc 00000000000f83e4  /data/app/com.kliklabs.android.klikchat-2/lib/arm64/librealm-jni.so\n    #02 pc 0000000000160d8c  /data/app/com.kliklabs.android.klikchat-2/lib/arm64/librealm-jni.so\n    #03 pc 00000000001617dc  /data/app/com.kliklabs.android.klikchat-2/lib/arm64/librealm-jni.so\n    #04 pc 0000000000039688  /data/app/com.kliklabs.android.klikchat-2/lib/arm64/librealm-jni.so\n    #05 pc 000000000016bf30  /data/app/com.kliklabs.android.klikchat-2/lib/arm64/librealm-jni.so\n    #06 pc 000000000016c354  /data/app/com.kliklabs.android.klikchat-2/lib/arm64/librealm-jni.so\n    #07 pc 00000000001cb748  /data/app/com.kliklabs.android.klikchat-2/lib/arm64/librealm-jni.so\n    #08 pc 00000000001cbadc  /data/app/com.kliklabs.android.klikchat-2/lib/arm64/librealm-jni.so\n    #09 pc 00000000001cbb0c  /data/app/com.kliklabs.android.klikchat-2/lib/arm64/librealm-jni.so\n    #10 pc 00000000001cbb0c  /data/app/com.kliklabs.android.klikchat-2/lib/arm64/librealm-jni.so\n    #11 pc 00000000001cbb0c  /data/app/com.kliklabs.android.klikchat-2/lib/arm64/librealm-jni.so\n    #12 pc 00000000001cbb0c  /data/app/com.kliklabs.android.klikchat-2/lib/arm64/librealm-jni.so\n    #13 pc 00000000001cbb0c  /data/app/com.kliklabs.android.klikchat-2/lib/arm64/librealm-jni.so\n    #14 pc 00000000001cbeb4  /data/app/com.kliklabs.android.klikchat-2/lib/arm64/librealm-jni.so\n    #15 pc 00000000001cdc08  /data/app/com.kliklabs.android.klikchat-2/lib/arm64/librealm-jni.so\n    #16 pc 00000000000ddeac  /data/app/com.kliklabs.android.klikchat-2/lib/arm64/librealm-jni.so\n    #17 pc 00000000000da770  /data/app/com.kliklabs.android.klikchat-2/lib/arm64/librealm-jni.so\n    #18 pc 00000000000da9dc  /data/app/com.kliklabs.android.klikchat-2/lib/arm64/librealm-jni.so\n    #19 pc 00000000000f3938  /data/app/com.kliklabs.android.klikchat-2/lib/arm64/librealm-jni.so\n    #20 pc 00000000000f3a14  /data/app/com.kliklabs.android.klikchat-2/lib/arm64/librealm-jni.so\n    #21 pc 0000000000204154  /data/app/com.kliklabs.android.klikchat-2/lib/arm64/librealm-jni.so\n    #22 pc 0000000000018890  /system/lib64/libc.so (_ZL15__pthread_startPv+52)\n    #23 pc 0000000000014cb0  /system/lib64/libc.so (__start_thread+16)\n```\nRealm version: 3.0.0\nSync: No\nEncryption: Yes\nAndroid Studio: 2.3.3\nAndroid Version: 5.0.2, 6.0.1", "url": "https://github.com/realm/realm-java/issues/4776", "user": "mu-hasan", "labels": ["O-Community", "Pipeline-Waiting-for-User", "Reproduction-Required", "T-Bug-Crash"], "created": "2017-06-13 04:56:17", "closed": "2019-11-27 13:32:29", "commits": {}, "ttf": 897.0002777777778, "commitsDetails": []}, {"title": "java.util.IllegalFormatConversionException: d != io.realm.ErrorCode error", "body": "I used the latest version(3.2.0) of the realm-java.\r\nAnd I found a bug on the SyncSession.java 327 line.\r\n\r\n```java\r\nRealmLog.debug(\"Session[%s]: Failed to get access token (%d)\", configuration.getPath(), response.getError().getErrorCode());\r\n\r\n```\r\n\r\nThe 2nd format of message is \"%d\", but 2nd argument is ErrorCode enum.\r\nSo, a exception was fire at the String.format(message, args).\r\n\r\nI hope the bugs will be fixed as soon as possible.\r\n\r\nThanks.\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 3.2.0\r\n\r\nRealm sync feature enabled: yes\r\n\r\nAndroid Studio version: 2.3.2\r\n\r\nWhich Android version and device: Android version 7.0, Samsung Galaxy S8\r\n", "url": "https://github.com/realm/realm-java/issues/4726", "user": "bigparksh", "labels": ["T-Bug-Crash"], "created": "2017-05-30 06:17:36", "closed": "2017-06-01 21:40:30", "commits": {"43cdd8dcdea9c3c931d3d0e59acb11da16062512": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "c62b8808eebb5fa804f43e1055ffade17f679f8f": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "43cdd8dcdea9c3c931d3d0e59acb11da16062512", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c62b8808eebb5fa804f43e1055ffade17f679f8f", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["c80eab8cb83a2a96815ce7f3932e69ffce7a0611"], "nameRev": "c62b8808eebb5fa804f43e1055ffade17f679f8f tags/v3.3.2~12", "commitMessage": "fix crash when authentication error happens (#4726) (#4732)\n\n", "commitDateTime": "2017-05-31 18:06:06", "authoredDateTime": "2017-05-31 18:06:06", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/SyncSession.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SyncSession.java", "spoonMethods": [{"spoonMethodName": "io.realm.SyncSession.authenticateRealm(io.realm.internal.network.AuthenticationServer).2.onError(io.realm.internal.network.AuthenticateResponse)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Invalid query: table not found in this schema.", "body": "Hi there!\r\nFaced a strange issue: ProGuard build is crashing with next message:\r\n\r\n```\r\njava.lang.IllegalArgumentException: Invalid query: table 'TableNameHere' not found in this schema.\r\nat aig.a(CachedFieldDescriptor.java:72)\r\nat aii.c(FieldDescriptor.java:284)\r\nat aii.a(FieldDescriptor.java:177)\r\nat ahb.b(RealmQuery.java:347)\r\nat ahb.a(RealmQuery.java:339)\r\n```\r\n\r\nProguard main configuration part:\r\n\r\n```\r\n-dontskipnonpubliclibraryclassmembers\r\n-optimizationpasses 7\r\n-allowaccessmodification\r\n-repackageclasses\r\n-dontpreverify\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 3.2.1\r\nAndroid Studio version: 2.3.2\r\nWhich Android version and device: 7.1.2, Nexus 5X, Pixel XL", "url": "https://github.com/realm/realm-java/issues/4673", "user": "dummyco", "labels": ["P-0-EXPEDITE", "T-Bug-Crash"], "created": "2017-05-19 10:38:38", "closed": "2017-05-24 13:59:43", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Realm database migration is crashing on Android 7.1.2", "body": "\r\nThe app is crashing with a realm exception that some tables do not exist in the schema. I made three tables in Realm Database and created the migration for them. The app update(migration) is working for all versions of Android, but for Android 7.1.2 is crashing the app with the mentioned exception.\r\n\r\n#### Expected Results\r\nThe app not to crash and for the migration to work as expected.\r\n\r\n#### Actual Results\r\nThe app is crashing with RealmException , table X is missing from the schema.\r\n\r\n#### Steps & Code to Reproduce\r\nI had version 1.0 of the app installed on my phone, then I installed the Android 7.1.2 update, then I updated my app to version 2.0 which contains the three new tables I mentioned.\r\n\r\nOn a phone with 7.1.2 that had no previously installed versions of the app, the installation worked fine (e.g first install).\r\n\r\n\r\nI was using realm 1.3.0 when this crash occurred. I bumped the version to 3.1.4 and the crash was still happening. Unfortunately, a phone restart fixed the problem and it never reproduced, but this happened on 2 different phones, Nexus 6P and Google Pixel, so it is a major issue.\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 1.3.0 and 3.1.4\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.3\r\n\r\nWhich Android version and device: Google Pixel ; Nexus 6P; Android 7.1.2\r\n", "url": "https://github.com/realm/realm-java/issues/4651", "user": "petronela0306", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2017-05-16 15:27:53", "closed": "2017-11-21 14:28:23", "commits": {}, "ttf": 188.00027777777777, "commitsDetails": []}, {"title": "Does realm keep all objects of a transaction in native memory until commit?", "body": "We are doing a synchronization of data from a server backend. In order to have a clean, consistent database all the time, we do this within a transaction and commit only after everything went well.\r\n\r\nNow when getting too many items from the server (1.5 million items on first sync attempt), our app crashes with the following exception:\r\n\r\n```\r\nio.realm.internal.OutOfMemoryError: std::bad_alloc in /home/cc/repo/realm/release/realm/realm-library/src/main/cpp/io_realm_internal_Table.cpp line 669 \r\n05-15 08:27:05.334 11067-11108/com.timetac.timetaclibrary.test W/System.err:     at io.realm.internal.Table.nativeSetLong(Native Method)\r\n05-15 08:27:05.334 11067-11108/com.timetac.timetaclibrary.test W/System.err:     at io.realm.NodeToUserRealmProxy.insertOrUpdate(NodeToUserRealmProxy.java:1071)\r\n05-15 08:27:05.334 11067-11108/com.timetac.timetaclibrary.test W/System.err:     at io.realm.LibraryRealmModuleMediator.insertOrUpdate(LibraryRealmModuleMediator.java:761)\r\n05-15 08:27:05.334 11067-11108/com.timetac.timetaclibrary.test W/System.err:     at io.realm.Realm.insertOrUpdate(Realm.java:1170)\r\n```\r\nDoes that mean that all items are kept in memory by realm, until the commit?\r\nCan that be changed somehow? Are there any other ways or best practices for syncing?\r\n\r\n", "url": "https://github.com/realm/realm-java/issues/4644", "user": "ridcully99", "labels": ["T-Bug-Crash"], "created": "2017-05-15 08:35:59", "closed": "2017-05-24 18:44:34", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "denied { create } for name=\"access_control.new_commit.cv\" ", "body": "run my project on android5 or android6 is ok,  but on android7.1.1,there is a bug:\r\n> **Bugs**:  E/REALM_JNI: jni: ThrowingException 5, Permission denied in /Users/blakemeike/Working/release/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 94, .\r\ntype=1400 audit(0.0:315): avc: denied { create } for name=\"access_control.new_commit.cv\" scontext=u:r:system_app:s0 tcontext=u:object_r:system_app_data_file:s0 tclass=fifo_file permissive=0\r\n at io.realm.internal.SharedRealm.nativeGetSharedRealm(Native Method)\r\n                                                                     at io.realm.internal.SharedRealm.getInstance(SharedRealm.java:209)\r\n                                                                     at io.realm.internal.SharedRealm.getInstance(SharedRealm.java:186)\r\n                                                                     at io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:124)\r\n                                                                     at io.realm.DynamicRealm.getInstance(DynamicRealm.java:67)\r\n                                                                     at io.realm.BaseRealm$4.onResult(BaseRealm.java:634)\r\n                                                                     at io.realm.RealmCache.invokeWithGlobalRefCount(RealmCache.java:295)\r\n                                                                     at io.realm.BaseRealm.migrateRealm(BaseRealm.java:617)\r\n                                                                     at io.realm.Realm.migrateRealm(Realm.java:1577)\r\n#### Version of Realm and tooling\r\nRealm version(s): 2.3.0\r\n\r\nRealm sync feature enabled: yes\r\n\r\nAndroid Studio version: 2.2.3\r\n\r\nWhich Android version and device: android7.1.1\uff0c\r\n", "url": "https://github.com/realm/realm-java/issues/4630", "user": "ldf1210750006", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2017-05-11 12:28:33", "closed": "2017-12-12 05:15:35", "commits": {}, "ttf": 214.00027777777777, "commitsDetails": []}, {"title": "Realm is causing a reboot on device running Android O developer preview", "body": "On a Nexus 5X running Android O Developer preview 1, any request to Realm, query or transaction,  seems to fail and cause the phone to reboot.\r\n\r\nWhat is even weirder is that changing how many field are present in RealmObject is changing how the error is triggered...\r\n\r\nMaybe it's related to this but I don't really know : https://developer.android.com/preview/behavior-changes.html#nl\r\n\r\n**Actual Results**\r\nPhone is rebooting when pressing Query or Save button\r\n\r\n**Steps & Code to Reproduce :**\r\n* Clone this project : https://github.com/n0tnull/RealmCrashOnAndroidO\r\n* Run it on a device with the Android O Developer Preview\r\n* Click on Save or Query button\r\n* Device will reboot\r\n\r\n**Version of Realm and tooling :**\r\n* Realm version(s): 3.1.4 (latest)\r\n* Android Studio version: 2.4 preview 7\r\n* com.android.tools.build:gradle:2.4.0-alpha7\r\n\r\n**Which Android version and device:**\r\nAndroid O Dev Preview 1 - Nexus 5X", "url": "https://github.com/realm/realm-java/issues/4624", "user": "n0tnull", "labels": ["T-Bug-Crash"], "created": "2017-05-10 22:16:53", "closed": "2017-05-16 08:57:15", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "RealmRecyclerView not showing data on initial sync then crash", "body": "#### Bug Description\r\nThe RealmRecyclerView does not show data on initial login to a new Realm Object Server.  It shows the correct number of items in the list, but the data is all blank.  \r\n\r\n![image](https://cloud.githubusercontent.com/assets/219132/25181307/22aa7436-24df-11e7-8444-b17b400571a1.png)\r\n\r\nThe next item that comes in, which matches the criteria for the query backing the list, causes the app to crash.  Alternatively, tapping either of the buttons in any cell causes a crash.\r\n\r\nThe only way around to resolve this is to destroy the activity and relaunch.  Either by rotating the screen or manually closing it through the task manager/recents button.\r\n\r\nThis happens on a Nexus 6p device as well as a simulated Nexus 6P AVD.  \r\n\r\n#### Steps to reproduce\r\n\r\n**Generically you could produced this via**\r\n1. Deploy a Realm Object Server, connect to it and create data.\r\n2. Create a fresh Nexus 6p (or other) AVD device in Android studio (or just wipe the data of an existing).  Need to have the app freshly installed.\r\n3. Launch the app, the test app should login (similar to that of [this](https://github.com/realm-demos/realm-surveys/blob/master/Android/app/src/main/java/realm/io/realmsurveys/controller/SplashActivity.java) example), then go to an activity with just a RecyclerView showing the data (similar to [this](https://github.com/realm-demos/realm-surveys/blob/master/Android/app/src/main/java/realm/io/realmsurveys/controller/SurveyActivity.java) example).\r\n\r\n**Specifically you can quickly reproduce this using the RealmSurvey demo app.**\r\n1. Deploy a Realm Object Server.\r\n2. Follow the instructions to connect the the RealmSurvey admin client to the survey realm (https://github.com/realm-demos/realm-surveys/tree/master/macOS)  _This requires XCODE._\r\n3. Using the Admin app, enter some questions.\r\n4. _Optionally, connect a Realm Object Browser to validate the data is present._\r\n5. Open and run the Realm Surveys Android client, per the instructions here.\r\n\r\n#### Expected Result\r\nThe data would show with \r\ne.g.\r\n![image](https://cloud.githubusercontent.com/assets/219132/25183688/4cabc986-24e6-11e7-8fc5-a1f1a5d7c77c.png)\r\n\r\n#### Actual Result\r\nBut instead it is blank with the other crashing as described above.\r\ne.g.\r\n![image](https://cloud.githubusercontent.com/assets/219132/25181307/22aa7436-24df-11e7-8444-b17b400571a1.png)\r\n\r\n#### Additional Info\r\n**Versions**\r\nRMP: 1.4.1\r\nRealm Gradle Plugin Versions: 2.3.2-3.1.3\r\nRealm Adapters Version: 1.4.0, 2.0.0\r\nNote: I've also tried versions 3.0.0/2.0.0 and 2.3.2/1.4.0 and experienced the same issue.  I do not see this issue in the iOS realm SDK.  I also did not see this issue back with really old versions of RMP, perhaps 1.0 something around there.\r\n\r\nI haven't eliminated the possibility that I'm doing something wrong, however it seems that if this were the case rotating the device would have no effect.  But just to be sure, here are the 2 class responsible for logging in and syncing:\r\n\r\nMain launcher activity: [SplashActivity.java](https://github.com/realm-demos/realm-surveys/blob/master/Android/app/src/main/java/realm/io/realmsurveys/controller/SplashActivity.java)\r\n\r\n```java\r\npublic class SplashActivity extends AppCompatActivity {\r\n\r\n    public static final String TAG = SplashActivity.class.getName();\r\n\r\n    public static final String HOST = \"192.168.1.162\"; // <-- Enter your Realm Object Server IP here\r\n    public static final String REALM_URL = \"realm://\" + HOST + \":9080/~/survey\";\r\n    public static final String SERVER_URL = \"http://\" + HOST + \":9080/auth\";\r\n    public static final String ID = \"survey@demo.io\";\r\n    public static final String PASSWORD = \"password\";\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_splash);\r\n        login();\r\n    }\r\n\r\n    private void login() {\r\n\r\n        SyncUser user = SyncUser.currentUser();\r\n        if(user != null) {\r\n            postLogin(user);\r\n\r\n        } else {\r\n\r\n            final SyncCredentials syncCredentials = SyncCredentials.usernamePassword(ID, PASSWORD, false);\r\n\r\n            SyncUser.loginAsync(syncCredentials, SERVER_URL, new SyncUser.Callback() {\r\n                @Override\r\n                public void onSuccess(SyncUser user) { postLogin(user); }\r\n\r\n                @Override\r\n                public void onError(ObjectServerError error) {\r\n                    logError(error);\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    private void postLogin(SyncUser user) {\r\n        setRealmDefaultConfig(user);\r\n        goTo(SurveyActivity.class);\r\n    }\r\n\r\n    private void setRealmDefaultConfig(SyncUser user) {\r\n        Log.d(TAG, \"Connecting to Sync Server at : [\"  + REALM_URL.replaceAll(\"~\", user.getIdentity()) + \"]\");\r\n        final SyncConfiguration syncConfiguration = new SyncConfiguration.Builder(user, REALM_URL).schemaVersion(1).build();\r\n        Realm.setDefaultConfiguration(syncConfiguration);\r\n    }\r\n\r\n    private void goTo(Class<? extends AppCompatActivity> activityClass) {\r\n        Intent intent = new Intent(this, activityClass);\r\n        startActivity(intent);\r\n        finish();\r\n    }\r\n\r\n    private void logError(Throwable e) {\r\n        Log.e(TAG, \"Realm Error\", e);\r\n    }\r\n\r\n}\r\n\r\n```\r\n\r\nRecycler view activity: [SurveyActivity.java](https://github.com/realm-demos/realm-surveys/blob/master/Android/app/src/main/java/realm/io/realmsurveys/controller/SurveyActivity.java)\r\n\r\n```java\r\npublic class SurveyActivity extends AppCompatActivity  {\r\n\r\n    private RecyclerView recyclerView;\r\n    private SharedPreferences sharedPreferences;\r\n    private Realm realm;\r\n    private RealmResults<Question> questions;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_survey);\r\n        recyclerView = (RecyclerView) findViewById(R.id.questionsList);\r\n\r\n        realm = Realm.getDefaultInstance();\r\n\r\n        questions = realm\r\n                .where(Question.class)\r\n                .isEmpty(\"answers\")\r\n                .or()\r\n                .beginGroup()\r\n                .not()\r\n                .contains(\"answers.userId\", uniqueUserId())\r\n                .endGroup()\r\n                .findAllSortedAsync(\"timestamp\");\r\n\r\n        recyclerView.setAdapter(new QuestionViewAdapter(this, questions, true));\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        recyclerView.setAdapter(null);\r\n        realm.close();\r\n    }\r\n\r\n    public void onQuestionAnswered(final String questionId, final boolean response) {\r\n        final String deviceUserId = uniqueUserId();\r\n        realm.executeTransactionAsync(new Realm.Transaction() {\r\n            @Override\r\n            public void execute(Realm bgRealm) {\r\n                Question question = bgRealm.where(Question.class).equalTo(\"questionId\", questionId).findFirst();\r\n                if(question != null) {\r\n                    Answer answer = question.getAnswers().where()\r\n                            .equalTo(\"userId\",deviceUserId)\r\n                            .findFirst();\r\n                    if(answer == null) {\r\n                        answer = bgRealm.createObject(Answer.class);\r\n                        answer.setUserId(deviceUserId);\r\n                        answer.setQuestion(question);\r\n                        answer.setResponse(response);\r\n                        question.getAnswers().add(answer);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private String uniqueUserId() {\r\n\r\n        if(sharedPreferences == null) {\r\n            sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getApplication());\r\n        }\r\n\r\n        String idForCurrentUser = sharedPreferences.getString(BuildConfig.APPLICATION_ID, null);\r\n        if (idForCurrentUser == null) {\r\n            idForCurrentUser = UUID.randomUUID().toString();\r\n            sharedPreferences.edit().putString(BuildConfig.APPLICATION_ID, idForCurrentUser).apply();\r\n        }\r\n\r\n        return idForCurrentUser;\r\n    }\r\n\r\n    }\r\n```\r\n\r\nRecyclerViewAdapter: [QuestionViewAdapter.java](https://github.com/realm-demos/realm-surveys/blob/master/Android/app/src/main/java/realm/io/realmsurveys/controller/QuestionViewAdapter.java)\r\n\r\n```java\r\npublic class QuestionViewAdapter extends RealmRecyclerViewAdapter<Question, QuestionViewAdapter.ViewHolder> {\r\n\r\n    private SurveyActivity surveyResponseHandler;\r\n\r\n    public QuestionViewAdapter(@NonNull SurveyActivity surveyActivity, @Nullable OrderedRealmCollection<Question> data, boolean autoUpdate) {\r\n        super(data, autoUpdate);\r\n        surveyResponseHandler = surveyActivity;\r\n     }\r\n\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\r\n        View view = LayoutInflater.from(parent.getContext())\r\n                .inflate(R.layout.survey_item, parent, false);\r\n        return new ViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(final ViewHolder holder, int position) {\r\n        final Question question = getData().get(position);\r\n\r\n        holder.questionText.setText(question.getQuestionText());\r\n        holder.yesButton.setEnabled(true);\r\n        holder.noButton.setEnabled(true);\r\n\r\n        View.OnClickListener clickListener = new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                if(v == holder.yesButton) {\r\n                    holder.yesButton.setEnabled(false);\r\n                    holder.noButton.setEnabled(true);\r\n                } else if (v == holder.noButton) {\r\n                    holder.noButton.setEnabled(false);\r\n                    holder.yesButton.setEnabled(true);\r\n                }\r\n\r\n                surveyResponseHandler.onQuestionAnswered(question.getQuestionId(), v == holder.yesButton);\r\n            }\r\n        };\r\n\r\n        holder.yesButton.setOnClickListener(clickListener);\r\n        holder.noButton.setOnClickListener(clickListener);\r\n    }\r\n\r\n    public class ViewHolder extends RecyclerView.ViewHolder {\r\n\r\n        public final View view;\r\n        public final TextView questionText;\r\n        public final Button yesButton;\r\n        public final Button noButton;\r\n\r\n        public ViewHolder(View view) {\r\n            super(view);\r\n            this.view = view;\r\n            questionText = (TextView) view.findViewById(R.id.questionText);\r\n            yesButton = (Button) view.findViewById(R.id.yesBtn);\r\n            noButton = (Button) view.findViewById(R.id.noBtn);\r\n        }\r\n\r\n    }\r\n\r\n    }\r\n```\r\n", "url": "https://github.com/realm/realm-java/issues/4517", "user": "ericmaxwell2003", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2017-04-19 14:12:21", "closed": "2017-11-23 10:13:51", "commits": {}, "ttf": 217.00027777777777, "commitsDetails": []}, {"title": "add/remove listeners in onStart/onStop causes crash", "body": "#### Goal\r\nStarting with Realm 3.1.0, I can cause a crash by adding/removing a RealmObject listener in onStart/onStop.\r\n\r\nI have created a test project, with a junit test.  The junit test passes when using Realm 3.0.0, but crashes with Realm 3.1.0, 3.1.1, and 3.1.2\r\n\r\nGoal: not crash.\r\n\r\n#### Actual Results\r\n\r\nThe junit error is:\r\n\r\n> Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Native crash''. Check device logcat for details\r\n\r\nThe logcat:\r\n[logcat.txt](https://github.com/realm/realm-java/files/923781/logcat.txt)\r\n\r\n#### Steps & Code to Reproduce\r\n\r\nTo reproduce the problem, download the Android Studio project (RealmBug) in the given repo, and run the test \"test()\".\r\n\r\nThe test project is comprised of 2 activities.  MainActivity has a RealmObject. It adds/removes a listener to the RealmObject in onStart/onStop.  SecondActivity is effectively empty.\r\n\r\nTo see the problem (this is what the junit test \"test()\" does):\r\n\r\n- start MainActivity\r\nMainActivity.onStart() will attach listener to RealmObject\r\n- click on the button to launch SecondActivity\r\nMainActivity.onStop() will remove listener from RealmObject\r\n- click on the back arrow, to return to MainActivity\r\nMainActivity.onStart() is called, then crash happens\r\n\r\nObservations:\r\n\r\n- If the call to \"removeAllChangeListeners\" in onStop() is commented out, the program no longer crashes\r\n- If the call to \"removeAllChangeListeners\" is replaced by \"removeChangeListener\", the program still crashes\r\n\r\n#### Code Sample\r\n\r\n[https://clo_knibbe@bitbucket.org/clo_knibbe/realmbug.git](url)\r\n\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 3.1.0, 3.1.1, 3.1.2\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.3\r\n\r\nWhich Android version and device: Nexus 7 AVD, API 23\r\n", "url": "https://github.com/realm/realm-java/issues/4502", "user": "cknibbe", "labels": ["T-Bug-Crash"], "created": "2017-04-15 18:20:54", "closed": "2017-04-18 13:43:34", "commits": {"71ab6b90b19ce6aedac6d5526523460a9ba4033a": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "9122c0a9255ce4a3f545619707d1af08457a0caa": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "71ab6b90b19ce6aedac6d5526523460a9ba4033a", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9122c0a9255ce4a3f545619707d1af08457a0caa", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["4405f6eb869124caec5ece120f68bde8c745fc50"], "nameRev": "9122c0a9255ce4a3f545619707d1af08457a0caa tags/v3.1.3~5", "commitMessage": "Update Object Store and test cases (#4507)\n\nUpdate OS to 7a1924b4cf\r\nFix #4502", "commitDateTime": "2017-04-18 21:43:27", "authoredDateTime": "2017-04-18 21:43:27", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmObjectTests.java", "insertions": 29, "deletions": 0, "lines": 29}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmResultsTests.java", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_OsObject.cpp", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/main/cpp/object-store", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmObjectTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmObjectTests.removeChangeListener_throwOnUnmanagedObject().20", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.removeChangeListener_throwOnUnmanagedObject().21", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.addChangeListener_returnedObjectOfCopyToRealmOrUpdate().22", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.addChangeListener_listenerShouldBeCalledIfObjectChangesAfterAsyncReturn().23", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.addChangeListener_returnedObjectOfCopyToRealmOrUpdate().22.onChange(io.realm.entities.AllTypesPrimaryKey)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.addChangeListener_listenerShouldBeCalledIfObjectChangesAfterAsyncReturn().23.onChange(io.realm.entities.AllTypesPrimaryKey)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmObjectTests.removeAllChangeListeners_thenAdd()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmResultsTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmResultsTests.syncQuery_defaultValuesAreIgnored().28", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmResultsTests.removeAllChangeListeners_thenAdd()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "JNI Error", "body": "#### Goal\r\n\r\nTo be able to commit a transaction\r\n\r\n#### Expected Results\r\n\r\nTo succeed and save to the Realm Database\r\n\r\n#### Actual Results\r\n\r\nCrashes\r\n\r\n#### Code Sample\r\n\r\nAffected Code, crashes on the first line (`executeTransaction`)\r\n```java\r\nRealm.getDefaultInstance().executeTransaction(new Realm.Transaction() {\r\n                        @Override\r\n                        public void execute(Realm realm) {\r\n                            getDepartures().clear();\r\n\r\n                            if(result.getTrainServices() != null && !result.getTrainServices().isEmpty()) {\r\n                                for (Service service : result.getTrainServices()) {\r\n                                    service.setId(getCrs(), true);\r\n                                    getDepartures().add(realm.copyToRealmOrUpdate(service));\r\n                                }\r\n                            }\r\n\r\n                            setDeparturesGathered(Calendar.getInstance().getTime());\r\n                        }\r\n                    });\r\n```\r\n\r\nStack Trace: \r\n```\r\n04-05 15:29:59.122 12199-12199/com.github.binpower93.stationhubapp E/art: JNI ERROR (app bug): attempt to use stale Local 0x100019 (should be 0x19)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470] JNI DETECTED ERROR IN APPLICATION: use of deleted local reference 0x100019\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]     from void io.realm.internal.SharedRealm.nativeCommitTransaction(long)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470] \"main\" prio=5 tid=1 Runnable\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   | group=\"main\" sCount=0 dsCount=0 obj=0x74130000 self=0xeec05400\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   | sysTid=12199 nice=-10 cgrp=default sched=0/0 handle=0xf18d2534\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   | state=R schedstat=( 2844241477 208878546 2183 ) utm=256 stm=27 core=4 HZ=100\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   | stack=0xff336000-0xff338000 stackSize=8MB\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   | held mutexes= \"mutator lock\"(shared held)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #00 pc 00350ab5  /system/lib/libart.so (_ZN3art15DumpNativeStackERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEiP12BacktraceMapPKcPNS_9ArtMethodEPv+128)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #01 pc 003311f9  /system/lib/libart.so (_ZNK3art6Thread9DumpStackERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEbP12BacktraceMap+308)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #02 pc 00239895  /system/lib/libart.so (_ZN3art9JavaVMExt8JniAbortEPKcS2_+848)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #03 pc 00239e2b  /system/lib/libart.so (_ZN3art9JavaVMExt9JniAbortFEPKcS2_z+66)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #04 pc 00334c25  /system/lib/libart.so (_ZNK3art6Thread13DecodeJObjectEP8_jobject+240)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #05 pc 000ca321  /system/lib/libart.so (_ZN3art11ScopedCheck13CheckInstanceERNS_18ScopedObjectAccessENS0_12InstanceKindEP8_jobjectb+120)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #06 pc 000c98d3  /system/lib/libart.so (_ZN3art11ScopedCheck22CheckPossibleHeapValueERNS_18ScopedObjectAccessEcNS_12JniValueTypeE+190)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #07 pc 000ca90b  /system/lib/libart.so (_ZN3art11ScopedCheck12CheckVarArgsERNS_18ScopedObjectAccessEPKNS_7VarArgsE+186)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #08 pc 000c9881  /system/lib/libart.so (_ZN3art11ScopedCheck22CheckPossibleHeapValueERNS_18ScopedObjectAccessEcNS_12JniValueTypeE+108)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #09 pc 000c8d0b  /system/lib/libart.so (_ZN3art11ScopedCheck5CheckERNS_18ScopedObjectAccessEbPKcPNS_12JniValueTypeE+802)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #10 pc 000cceb7  /system/lib/libart.so (_ZN3art8CheckJNI13CheckCallArgsERNS_18ScopedObjectAccessERNS_11ScopedCheckEP7_JNIEnvP8_jobjectP7_jclassP10_jmethodIDNS_10InvokeTypeEPKNS_7VarArgsE+114)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #11 pc 000cc4e5  /system/lib/libart.so (_ZN3art8CheckJNI11CallMethodVEPKcP7_JNIEnvP8_jobjectP7_jclassP10_jmethodIDSt9__va_listNS_9Primitive4TypeENS_10InvokeTypeE+512)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #12 pc 000c26b9  /system/lib/libart.so (_ZN3art8CheckJNI15CallVoidMethodVEP7_JNIEnvP8_jobjectP10_jmethodIDSt9__va_list+44)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #13 pc 00022c63  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #14 pc 0005df55  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #15 pc 0002c605  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #16 pc 0007b345  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #17 pc 0007b465  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #18 pc 0008f697  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #19 pc 0008f84d  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #20 pc 00080dcb  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #21 pc 000734a9  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #22 pc 0002df31  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (Java_io_realm_internal_SharedRealm_nativeCommitTransaction+64)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   native: #23 pc 0001a78d  /data/app/com.github.binpower93.stationhubapp-2/oat/arm/base.odex (Java_io_realm_internal_SharedRealm_nativeCommitTransaction__J+80)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   at io.realm.internal.SharedRealm.nativeCommitTransaction(Native method)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   at io.realm.internal.SharedRealm.commitTransaction(SharedRealm.java:251)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   at io.realm.BaseRealm.commitTransaction(BaseRealm.java:320)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   at io.realm.Realm.commitTransaction(Realm.java:127)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   at io.realm.Realm.executeTransaction(Realm.java:1348)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   at com.github.binpower93.stationhubapp.dataaccess.database.Station$4.success(Station.java:198)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   at com.github.binpower93.stationhubapp.dataaccess.database.Station$4.success(Station.java:193)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   at com.github.binpower93.stationhubapp.dataaccess.APIHelper$1.success(APIHelper.java:96)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   at com.github.binpower93.stationhubapp.dataaccess.APIHelper$1.success(APIHelper.java:93)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   at retrofit.CallbackRunnable$1.run(CallbackRunnable.java:45)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   at android.os.Handler.handleCallback(Handler.java:751)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   at android.os.Handler.dispatchMessage(Handler.java:95)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   at android.os.Looper.loop(Looper.java:154)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   at android.app.ActivityThread.main(ActivityThread.java:6121)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   at java.lang.reflect.Method.invoke!(Native method)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:889)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470]   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:779)\r\n04-05 15:29:59.170 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/java_vm_ext.cc:470] \r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] Runtime aborting...\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] Aborting thread:\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \"main\" prio=10 tid=1 Native\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | group=\"\" sCount=0 dsCount=0 obj=0x74130000 self=0xeec05400\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | sysTid=12199 nice=-10 cgrp=default sched=0/0 handle=0xf18d2534\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | state=R schedstat=( 2869857571 209014744 2191 ) utm=257 stm=28 core=4 HZ=100\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | stack=0xff336000-0xff338000 stackSize=8MB\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | held mutexes= \"abort lock\"\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #00 pc 00350ab5  /system/lib/libart.so (_ZN3art15DumpNativeStackERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEiP12BacktraceMapPKcPNS_9ArtMethodEPv+128)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #01 pc 003311f9  /system/lib/libart.so (_ZNK3art6Thread9DumpStackERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEbP12BacktraceMap+308)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #02 pc 003242b1  /system/lib/libart.so (_ZNK3art10AbortState10DumpThreadERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEPNS_6ThreadE+24)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #03 pc 00324139  /system/lib/libart.so (_ZNK3art10AbortState4DumpERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE+424)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #04 pc 0031ae25  /system/lib/libart.so (_ZN3art7Runtime5AbortEPKc+92)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #05 pc 000b5285  /system/lib/libart.so (_ZN3art10LogMessageD2Ev+1132)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #06 pc 00239bc5  /system/lib/libart.so (_ZN3art9JavaVMExt8JniAbortEPKcS2_+1664)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #07 pc 00239e2b  /system/lib/libart.so (_ZN3art9JavaVMExt9JniAbortFEPKcS2_z+66)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #08 pc 00334c25  /system/lib/libart.so (_ZNK3art6Thread13DecodeJObjectEP8_jobject+240)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #09 pc 000ca321  /system/lib/libart.so (_ZN3art11ScopedCheck13CheckInstanceERNS_18ScopedObjectAccessENS0_12InstanceKindEP8_jobjectb+120)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #10 pc 000c98d3  /system/lib/libart.so (_ZN3art11ScopedCheck22CheckPossibleHeapValueERNS_18ScopedObjectAccessEcNS_12JniValueTypeE+190)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #11 pc 000ca90b  /system/lib/libart.so (_ZN3art11ScopedCheck12CheckVarArgsERNS_18ScopedObjectAccessEPKNS_7VarArgsE+186)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #12 pc 000c9881  /system/lib/libart.so (_ZN3art11ScopedCheck22CheckPossibleHeapValueERNS_18ScopedObjectAccessEcNS_12JniValueTypeE+108)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #13 pc 000c8d0b  /system/lib/libart.so (_ZN3art11ScopedCheck5CheckERNS_18ScopedObjectAccessEbPKcPNS_12JniValueTypeE+802)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #14 pc 000cceb7  /system/lib/libart.so (_ZN3art8CheckJNI13CheckCallArgsERNS_18ScopedObjectAccessERNS_11ScopedCheckEP7_JNIEnvP8_jobjectP7_jclassP10_jmethodIDNS_10InvokeTypeEPKNS_7VarArgsE+114)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #15 pc 000cc4e5  /system/lib/libart.so (_ZN3art8CheckJNI11CallMethodVEPKcP7_JNIEnvP8_jobjectP7_jclassP10_jmethodIDSt9__va_listNS_9Primitive4TypeENS_10InvokeTypeE+512)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #16 pc 000c26b9  /system/lib/libart.so (_ZN3art8CheckJNI15CallVoidMethodVEP7_JNIEnvP8_jobjectP10_jmethodIDSt9__va_list+44)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #17 pc 00022c63  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #18 pc 0005df55  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #19 pc 0002c605  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #20 pc 0007b345  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #21 pc 0007b465  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #22 pc 0008f697  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #23 pc 0008f84d  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #24 pc 00080dcb  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #25 pc 000734a9  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #26 pc 0002df31  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (Java_io_realm_internal_SharedRealm_nativeCommitTransaction+64)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #27 pc 0001a78d  /data/app/com.github.binpower93.stationhubapp-2/oat/arm/base.odex (???)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at io.realm.internal.SharedRealm.nativeCommitTransaction(Native method)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at io.realm.internal.SharedRealm.commitTransaction(SharedRealm.java:251)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at io.realm.BaseRealm.commitTransaction(BaseRealm.java:320)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at io.realm.Realm.commitTransaction(Realm.java:127)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at io.realm.Realm.executeTransaction(Realm.java:1348)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at com.github.binpower93.stationhubapp.dataaccess.database.Station$4.success(Station.java:198)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at com.github.binpower93.stationhubapp.dataaccess.database.Station$4.success(Station.java:193)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at com.github.binpower93.stationhubapp.dataaccess.APIHelper$1.success(APIHelper.java:96)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at com.github.binpower93.stationhubapp.dataaccess.APIHelper$1.success(APIHelper.java:93)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at retrofit.CallbackRunnable$1.run(CallbackRunnable.java:45)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at android.os.Handler.handleCallback(Handler.java:751)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at android.os.Handler.dispatchMessage(Handler.java:95)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at android.os.Looper.loop(Looper.java:154)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at android.app.ActivityThread.main(ActivityThread.java:6121)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.reflect.Method.invoke!(Native method)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:889)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:779)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] Dumping all threads without appropriate locks held: thread list lock mutator lock\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] All threads:\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] DALVIK THREADS (48):\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \"main\" prio=10 tid=1 Runnable\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | group=\"\" sCount=0 dsCount=0 obj=0x74130000 self=0xeec05400\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | sysTid=12199 nice=-10 cgrp=default sched=0/0 handle=0xf18d2534\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | state=R schedstat=( 2899954027 209045942 2195 ) utm=258 stm=30 core=4 HZ=100\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | stack=0xff336000-0xff338000 stackSize=8MB\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | held mutexes= \"abort lock\" \"mutator lock\"(shared held)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #00 pc 00350ab5  /system/lib/libart.so (_ZN3art15DumpNativeStackERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEiP12BacktraceMapPKcPNS_9ArtMethodEPv+128)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #01 pc 003311f9  /system/lib/libart.so (_ZNK3art6Thread9DumpStackERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEbP12BacktraceMap+308)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #02 pc 00343221  /system/lib/libart.so (_ZN3art14DumpCheckpoint3RunEPNS_6ThreadE+620)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #03 pc 0033d22b  /system/lib/libart.so (_ZN3art10ThreadList13RunCheckpointEPNS_7ClosureE+330)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #04 pc 0033cf27  /system/lib/libart.so (_ZN3art10ThreadList4DumpERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEb+586)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #05 pc 00324105  /system/lib/libart.so (_ZNK3art10AbortState4DumpERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE+372)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #06 pc 0031ae25  /system/lib/libart.so (_ZN3art7Runtime5AbortEPKc+92)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #07 pc 000b5285  /system/lib/libart.so (_ZN3art10LogMessageD2Ev+1132)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #08 pc 00239bc5  /system/lib/libart.so (_ZN3art9JavaVMExt8JniAbortEPKcS2_+1664)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #09 pc 00239e2b  /system/lib/libart.so (_ZN3art9JavaVMExt9JniAbortFEPKcS2_z+66)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #10 pc 00334c25  /system/lib/libart.so (_ZNK3art6Thread13DecodeJObjectEP8_jobject+240)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #11 pc 000ca321  /system/lib/libart.so (_ZN3art11ScopedCheck13CheckInstanceERNS_18ScopedObjectAccessENS0_12InstanceKindEP8_jobjectb+120)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #12 pc 000c98d3  /system/lib/libart.so (_ZN3art11ScopedCheck22CheckPossibleHeapValueERNS_18ScopedObjectAccessEcNS_12JniValueTypeE+190)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #13 pc 000ca90b  /system/lib/libart.so (_ZN3art11ScopedCheck12CheckVarArgsERNS_18ScopedObjectAccessEPKNS_7VarArgsE+186)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #14 pc 000c9881  /system/lib/libart.so (_ZN3art11ScopedCheck22CheckPossibleHeapValueERNS_18ScopedObjectAccessEcNS_12JniValueTypeE+108)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #15 pc 000c8d0b  /system/lib/libart.so (_ZN3art11ScopedCheck5CheckERNS_18ScopedObjectAccessEbPKcPNS_12JniValueTypeE+802)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #16 pc 000cceb7  /system/lib/libart.so (_ZN3art8CheckJNI13CheckCallArgsERNS_18ScopedObjectAccessERNS_11ScopedCheckEP7_JNIEnvP8_jobjectP7_jclassP10_jmethodIDNS_10InvokeTypeEPKNS_7VarArgsE+114)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #17 pc 000cc4e5  /system/lib/libart.so (_ZN3art8CheckJNI11CallMethodVEPKcP7_JNIEnvP8_jobjectP7_jclassP10_jmethodIDSt9__va_listNS_9Primitive4TypeENS_10InvokeTypeE+512)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #18 pc 000c26b9  /system/lib/libart.so (_ZN3art8CheckJNI15CallVoidMethodVEP7_JNIEnvP8_jobjectP10_jmethodIDSt9__va_list+44)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #19 pc 00022c63  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #20 pc 0005df55  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #21 pc 0002c605  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #22 pc 0007b345  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.389 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #23 pc 0007b465  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #24 pc 0008f697  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #25 pc 0008f84d  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #26 pc 00080dcb  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #27 pc 000734a9  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #28 pc 0002df31  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (Java_io_realm_internal_SharedRealm_nativeCommitTransaction+64)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #29 pc 0001a78d  /data/app/com.github.binpower93.stationhubapp-2/oat/arm/base.odex (Java_io_realm_internal_SharedRealm_nativeCommitTransaction__J+80)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at io.realm.internal.SharedRealm.nativeCommitTransaction(Native method)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at io.realm.internal.SharedRealm.commitTransaction(SharedRealm.java:251)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at io.realm.BaseRealm.commitTransaction(BaseRealm.java:320)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at io.realm.Realm.commitTransaction(Realm.java:127)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at io.realm.Realm.executeTransaction(Realm.java:1348)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at com.github.binpower93.stationhubapp.dataaccess.database.Station$4.success(Station.java:198)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at com.github.binpower93.stationhubapp.dataaccess.database.Station$4.success(Station.java:193)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at com.github.binpower93.stationhubapp.dataaccess.APIHelper$1.success(APIHelper.java:96)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at com.github.binpower93.stationhubapp.dataaccess.APIHelper$1.success(APIHelper.java:93)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at retrofit.CallbackRunnable$1.run(CallbackRunnable.java:45)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at android.os.Handler.handleCallback(Handler.java:751)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at android.os.Handler.dispatchMessage(Handler.java:95)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at android.os.Looper.loop(Looper.java:154)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at android.app.ActivityThread.main(ActivityThread.java:6121)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.reflect.Method.invoke!(Native method)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:889)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:779)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \"Jit thread pool worker thread 0\" prio=10 tid=2 Native\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | group=\"\" sCount=1 dsCount=0 obj=0x12c710d0 self=0xe7892000\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | sysTid=12204 nice=9 cgrp=default sched=0/0 handle=0xee324920\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | state=S schedstat=( 779551443 125639352 894 ) utm=66 stm=11 core=5 HZ=100\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | stack=0xee226000-0xee228000 stackSize=1022KB\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | held mutexes=\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: __switch_to+0x8c/0x98\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: futex_wait_queue_me+0xd4/0x130\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: futex_wait+0xfc/0x210\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: do_futex+0xe0/0x920\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: compat_SyS_futex+0xe8/0x17c\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: cpu_switch_to+0x48/0x4c\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #00 pc 00017404  /system/lib/libc.so (syscall+28)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #01 pc 000b6e49  /system/lib/libart.so (_ZN3art17ConditionVariable16WaitHoldingLocksEPNS_6ThreadE+92)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #02 pc 00344785  /system/lib/libart.so (_ZN3art10ThreadPool7GetTaskEPNS_6ThreadE+160)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #03 pc 00343fa7  /system/lib/libart.so (_ZN3art16ThreadPoolWorker3RunEv+62)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #04 pc 00343acf  /system/lib/libart.so (_ZN3art16ThreadPoolWorker8CallbackEPv+78)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #05 pc 000470b3  /system/lib/libc.so (_ZL15__pthread_startPv+22)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #06 pc 00019e3d  /system/lib/libc.so (__start_thread+6)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   (no managed stack frames)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \"Signal Catcher\" prio=10 tid=3 WaitingInMainSignalCatcherLoop\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | group=\"\" sCount=1 dsCount=0 obj=0x12c71160 self=0xe4e49800\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | sysTid=12205 nice=0 cgrp=default sched=0/0 handle=0xee223920\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | state=S schedstat=( 503750 0 3 ) utm=0 stm=0 core=1 HZ=100\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | stack=0xee127000-0xee129000 stackSize=1014KB\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | held mutexes=\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: __switch_to+0x8c/0x98\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: do_sigtimedwait+0xec/0x1dc\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: compat_SyS_rt_sigtimedwait+0xc4/0x124\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: cpu_switch_to+0x48/0x4c\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #00 pc 00048894  /system/lib/libc.so (__rt_sigtimedwait+12)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #01 pc 0001e24b  /system/lib/libc.so (sigwait+34)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #02 pc 00327363  /system/lib/libart.so (_ZN3art9SignalSet4WaitEv+22)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #03 pc 00326f5d  /system/lib/libart.so (_ZN3art13SignalCatcher13WaitForSignalEPNS_6ThreadERNS_9SignalSetE+168)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #04 pc 00325cc1  /system/lib/libart.so (_ZN3art13SignalCatcher3RunEPv+276)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #05 pc 000470b3  /system/lib/libc.so (_ZL15__pthread_startPv+22)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #06 pc 00019e3d  /system/lib/libc.so (__start_thread+6)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   (no managed stack frames)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \"JDWP\" prio=10 tid=4 WaitingInMainDebuggerLoop\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | group=\"\" sCount=1 dsCount=0 obj=0x12c711f0 self=0xe7893400\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | sysTid=12206 nice=0 cgrp=default sched=0/0 handle=0xee124920\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | state=S schedstat=( 4221825 1624114 13 ) utm=0 stm=0 core=3 HZ=100\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | stack=0xee028000-0xee02a000 stackSize=1014KB\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | held mutexes=\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: __switch_to+0x8c/0x98\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: poll_schedule_timeout+0x54/0xbc\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: do_select+0x454/0x4c0\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: compat_core_sys_select+0x178/0x240\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: compat_sys_pselect6+0x1a4/0x254\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: cpu_switch_to+0x48/0x4c\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #00 pc 0004876c  /system/lib/libc.so (__pselect6+20)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #01 pc 0001d045  /system/lib/libc.so (select+88)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #02 pc 003fba77  /system/lib/libart.so (_ZN3art4JDWP12JdwpAdbState15ProcessIncomingEv+302)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #03 pc 002487a7  /system/lib/libart.so (_ZN3art4JDWP9JdwpState3RunEv+650)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #04 pc 00247f4b  /system/lib/libart.so (_ZN3art4JDWPL15StartJdwpThreadEPv+22)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #05 pc 000470b3  /system/lib/libc.so (_ZL15__pthread_startPv+22)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #06 pc 00019e3d  /system/lib/libc.so (__start_thread+6)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   (no managed stack frames)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \"ReferenceQueueDaemon\" prio=10 tid=5 Waiting\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | group=\"\" sCount=1 dsCount=0 obj=0x12c71280 self=0xe4e4ac00\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | sysTid=12207 nice=0 cgrp=default sched=0/0 handle=0xee025920\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | state=S schedstat=( 13942188 2871564 45 ) utm=1 stm=0 core=1 HZ=100\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | stack=0xedf23000-0xedf25000 stackSize=1038KB\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | held mutexes=\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: __switch_to+0x8c/0x98\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: futex_wait_queue_me+0xd4/0x130\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: futex_wait+0xfc/0x210\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: do_futex+0xe0/0x920\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: compat_SyS_futex+0xe8/0x17c\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: cpu_switch_to+0x48/0x4c\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #00 pc 00017404  /system/lib/libc.so (syscall+28)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #01 pc 000b6e49  /system/lib/libart.so (_ZN3art17ConditionVariable16WaitHoldingLocksEPNS_6ThreadE+92)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #02 pc 0029f17b  /system/lib/libart.so (_ZN3art7Monitor4WaitEPNS_6ThreadExibNS_11ThreadStateE+514)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #03 pc 002a09ab  /system/lib/libart.so (_ZN3art7Monitor4WaitEPNS_6ThreadEPNS_6mirror6ObjectExibNS_11ThreadStateE+258)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #04 pc 002af1c7  /system/lib/libart.so (_ZN3artL11Object_waitEP7_JNIEnvP8_jobject+32)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #05 pc 00000557  /system/framework/arm/boot.oat (Java_java_lang_Object_wait__+74)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.Object.wait!(Native method)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   - waiting on <0x0675d174> (a java.lang.Class<java.lang.ref.ReferenceQueue>)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.Daemons$ReferenceQueueDaemon.run(Daemons.java:150)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   - locked <0x0675d174> (a java.lang.Class<java.lang.ref.ReferenceQueue>)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.Thread.run(Thread.java:761)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \"FinalizerDaemon\" prio=10 tid=6 Waiting\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | group=\"\" sCount=1 dsCount=0 obj=0x12c71310 self=0xe4e4b100\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | sysTid=12208 nice=0 cgrp=default sched=0/0 handle=0xedf20920\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | state=S schedstat=( 14659900 11089527 72 ) utm=0 stm=0 core=1 HZ=100\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | stack=0xede1e000-0xede20000 stackSize=1038KB\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | held mutexes=\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: __switch_to+0x8c/0x98\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: futex_wait_queue_me+0xd4/0x130\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: futex_wait+0xfc/0x210\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: do_futex+0xe0/0x920\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: compat_SyS_futex+0xe8/0x17c\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: cpu_switch_to+0x48/0x4c\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #00 pc 00017404  /system/lib/libc.so (syscall+28)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #01 pc 000b6e49  /system/lib/libart.so (_ZN3art17ConditionVariable16WaitHoldingLocksEPNS_6ThreadE+92)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #02 pc 0029f17b  /system/lib/libart.so (_ZN3art7Monitor4WaitEPNS_6ThreadExibNS_11ThreadStateE+514)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #03 pc 002a09ab  /system/lib/libart.so (_ZN3art7Monitor4WaitEPNS_6ThreadEPNS_6mirror6ObjectExibNS_11ThreadStateE+258)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #04 pc 002af1f3  /system/lib/libart.so (_ZN3artL13Object_waitJIEP7_JNIEnvP8_jobjectxi+36)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #05 pc 00000655  /system/framework/arm/boot.oat (Java_java_lang_Object_wait__JI+96)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.Object.wait!(Native method)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   - waiting on <0x09b3b69d> (a java.lang.Object)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.Object.wait(Object.java:407)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:188)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   - locked <0x09b3b69d> (a java.lang.Object)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:209)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.Daemons$FinalizerDaemon.run(Daemons.java:204)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.Thread.run(Thread.java:761)\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \"FinalizerWatchdogDaemon\" prio=10 tid=7 Sleeping\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | group=\"\" sCount=1 dsCount=0 obj=0x12c713a0 self=0xe4e4b600\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | sysTid=12209 nice=0 cgrp=default sched=0/0 handle=0xede1b920\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | state=S schedstat=( 962653 6709530 17 ) utm=0 stm=0 core=1 HZ=100\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | stack=0xedd19000-0xedd1b000 stackSize=1038KB\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | held mutexes=\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: __switch_to+0x8c/0x98\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: futex_wait_queue_me+0xd4/0x130\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: futex_wait+0xfc/0x210\r\n04-05 15:29:59.390 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: do_futex+0xe0/0x920\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: compat_SyS_futex+0xe8/0x17c\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: cpu_switch_to+0x48/0x4c\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #00 pc 00017408  /system/lib/libc.so (syscall+32)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #01 pc 000b7271  /system/lib/libart.so (_ZN3art17ConditionVariable9TimedWaitEPNS_6ThreadExi+108)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #02 pc 0029f18b  /system/lib/libart.so (_ZN3art7Monitor4WaitEPNS_6ThreadExibNS_11ThreadStateE+530)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #03 pc 002a09ab  /system/lib/libart.so (_ZN3art7Monitor4WaitEPNS_6ThreadEPNS_6mirror6ObjectExibNS_11ThreadStateE+258)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #04 pc 002b3b79  /system/lib/libart.so (_ZN3artL12Thread_sleepEP7_JNIEnvP7_jclassP8_jobjectxi+56)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #05 pc 0008543b  /system/framework/arm/boot.oat (Java_java_lang_Thread_sleep__Ljava_lang_Object_2JI+126)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.Thread.sleep!(Native method)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   - sleeping on <0x0d96c712> (a java.lang.Object)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.Thread.sleep(Thread.java:371)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   - locked <0x0d96c712> (a java.lang.Object)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.Thread.sleep(Thread.java:313)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.Daemons$FinalizerWatchdogDaemon.sleepFor(Daemons.java:314)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.Daemons$FinalizerWatchdogDaemon.waitForFinalization(Daemons.java:336)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.Daemons$FinalizerWatchdogDaemon.run(Daemons.java:253)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.Thread.run(Thread.java:761)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \"HeapTaskDaemon\" prio=10 tid=8 Blocked\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | group=\"\" sCount=1 dsCount=0 obj=0x12c71430 self=0xe4e4bb00\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | sysTid=12210 nice=0 cgrp=default sched=0/0 handle=0xedd16920\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | state=S schedstat=( 312438219 25726722 165 ) utm=28 stm=2 core=5 HZ=100\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | stack=0xedc14000-0xedc16000 stackSize=1038KB\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | held mutexes=\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: __switch_to+0x8c/0x98\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: futex_wait_queue_me+0xd4/0x130\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: futex_wait+0xfc/0x210\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: do_futex+0xe0/0x920\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: compat_SyS_futex+0xe8/0x17c\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: cpu_switch_to+0x48/0x4c\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #00 pc 00017408  /system/lib/libc.so (syscall+32)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #01 pc 000b7271  /system/lib/libart.so (_ZN3art17ConditionVariable9TimedWaitEPNS_6ThreadExi+108)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #02 pc 001b4da9  /system/lib/libart.so (_ZN3art2gc13TaskProcessor7GetTaskEPNS_6ThreadE+228)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #03 pc 001b545d  /system/lib/libart.so (_ZN3art2gc13TaskProcessor11RunAllTasksEPNS_6ThreadE+44)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #04 pc 001615cf  /system/framework/arm/boot-core-libart.oat (Java_dalvik_system_VMRuntime_runHeapTasks__+74)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at dalvik.system.VMRuntime.runHeapTasks(Native method)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   - waiting to lock an unknown object\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.Daemons$HeapTaskDaemon.run(Daemons.java:433)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.Thread.run(Thread.java:761)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \"Binder:12199_1\" prio=10 tid=9 Native\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | group=\"\" sCount=1 dsCount=0 obj=0x12c715e0 self=0xeec05e00\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | sysTid=12212 nice=0 cgrp=default sched=0/0 handle=0xedb13920\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | state=S schedstat=( 21030519 9319843 73 ) utm=1 stm=0 core=1 HZ=100\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | stack=0xeda17000-0xeda19000 stackSize=1014KB\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | held mutexes=\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: __switch_to+0x8c/0x98\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: binder_thread_read+0xedc/0x1024\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: binder_ioctl+0x428/0x894\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: compat_sys_ioctl+0x120/0x1238\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: cpu_switch_to+0x48/0x4c\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #00 pc 00048668  /system/lib/libc.so (__ioctl+8)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #01 pc 0001ae3f  /system/lib/libc.so (ioctl+38)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #02 pc 0003cc87  /system/lib/libbinder.so (_ZN7android14IPCThreadState14talkWithDriverEb+202)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #03 pc 0003cd9d  /system/lib/libbinder.so (_ZN7android14IPCThreadState20getAndExecuteCommandEv+8)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #04 pc 0003d31b  /system/lib/libbinder.so (_ZN7android14IPCThreadState14joinThreadPoolEb+46)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #05 pc 0004f8c5  /system/lib/libbinder.so (???)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #06 pc 0000e345  /system/lib/libutils.so (_ZN7android6Thread11_threadLoopEPv+140)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #07 pc 000665f5  /system/lib/libandroid_runtime.so (_ZN7android14AndroidRuntime15javaThreadShellEPv+80)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #03 pc 0003cd9d  /system/lib/libbinder.so (_ZN7android14IPCThreadState20getAndExecuteCommandEv+8)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #04 pc 0003d31b  /system/lib/libbinder.so (_ZN7android14IPCThreadState14joinThreadPoolEb+46)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #05 pc 0004f8c5  /system/lib/libbinder.so (???)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #06 pc 0000e345  /system/lib/libutils.so (_ZN7android6Thread11_threadLoopEPv+140)\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | held mutexes=\r\n04-05 15:29:59.391 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: do_futex+0xe0/0x920\r\n04-05 15:29:59.392 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | sysTid=12233 nice=10 cgrp=bg_non_interactive sched=0/0 handle=0xd41f5920\r\n04-05 15:29:59.392 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | state=S schedstat=( 612838966 42007916 246 ) utm=60 stm=0 core=2 HZ=100\r\n04-05 15:29:59.392 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #05 pc 00029101  /system/lib/libhwui.so (_ZN7android10uirenderer12renderthread12RenderThread10threadLoopEv+284)\r\n04-05 15:29:59.392 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \r\n04-05 15:29:59.392 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: do_futex+0xe0/0x920\r\n04-05 15:29:59.393 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #04 pc 002af1f3  /system/lib/libart.so (_ZN3artL13Object_waitJIEP7_JNIEnvP8_jobjectxi+36)\r\n04-05 15:29:59.393 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   - waiting on <0x009a1f99> (a java.lang.Object)\r\n04-05 15:29:59.393 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at sun.misc.Unsafe.park(Unsafe.java:325)\r\n04-05 15:29:59.393 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #05 pc 000665f5  /system/lib/libandroid_runtime.so (_ZN7android14AndroidRuntime15javaThreadShellEPv+80)\r\n04-05 15:29:59.393 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #06 pc 000470b3  /system/lib/libc.so (_ZL15__pthread_startPv+22)\r\n04-05 15:29:59.393 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #07 pc 00019e3d  /system/lib/libc.so (__start_thread+6)\r\n04-05 15:29:59.393 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   (no managed stack frames)\r\n04-05 15:29:59.393 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | state=S schedstat=( 10616207 5243332 255 ) utm=0 stm=0 core=2 HZ=100\r\n04-05 15:29:59.393 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.Object.wait!(Native method)\r\n04-05 15:29:59.393 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at com.android.okhttp.okio.AsyncTimeout.awaitTimeout(AsyncTimeout.java:323)\r\n04-05 15:29:59.394 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: futex_wait_queue_me+0xd4/0x130\r\n04-05 15:29:59.394 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: cpu_switch_to+0x48/0x4c\r\n04-05 15:29:59.394 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #04 pc 0000e3c1  /system/lib/libutils.so (_ZN7android6Thread11_threadLoopEPv+264)\r\n04-05 15:29:59.394 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #05 pc 000665f5  /system/lib/libandroid_runtime.so (_ZN7android14AndroidRuntime15javaThreadShellEPv+80)\r\n04-05 15:29:59.394 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \r\n04-05 15:29:59.394 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #00 pc 00048668  /system/lib/libc.so (__ioctl+8)\r\n04-05 15:29:59.395 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #08 pc 000470b3  /system/lib/libc.so (_ZL15__pthread_startPv+22)\r\n04-05 15:29:59.395 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: futex_wait+0xfc/0x210\r\n04-05 15:29:59.396 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: futex_wait_queue_me+0xd4/0x130\r\n04-05 15:29:59.396 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | state=S schedstat=( 28125105 4358959 16 ) utm=2 stm=0 core=5 HZ=100\r\n04-05 15:29:59.397 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #05 pc 00000655  /system/framework/arm/boot.oat (Java_java_lang_Object_wait__JI+96)\r\n04-05 15:29:59.397 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \"androidmapsapi-vts_com.github.binpower93.stationhubapp_default\" prio=10 tid=33 Native\r\n04-05 15:29:59.397 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \r\n04-05 15:29:59.397 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | sysTid=12463 nice=10 cgrp=bg_non_interactive sched=0/0 handle=0xc7681920\r\n04-05 15:29:59.398 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at android.os.MessageQueue.nativePollOnce(Native method)\r\n04-05 15:29:59.398 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at android.os.MessageQueue.next(MessageQueue.java:323)\r\n04-05 15:29:59.398 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: SyS_epoll_wait+0x2d0/0x358\r\n04-05 15:29:59.398 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #06 pc 006276ed  /system/framework/arm/boot-framework.oat (Java_android_os_MessageQueue_nativePollOnce__JI+96)\r\n04-05 15:29:59.398 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at com.google.maps.api.android.lib6.gmm6.store.d.run(:com.google.android.gms.DynamiteModulesB:20094)\r\n04-05 15:29:59.398 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | held mutexes=\r\n04-05 15:29:59.398 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: compat_SyS_epoll_pwait+0xd8/0x178\r\n04-05 15:29:59.398 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | stack=0xc6f61000-0xc6f63000 stackSize=1038KB\r\n04-05 15:29:59.399 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: cpu_switch_to+0x48/0x4c\r\n04-05 15:29:59.399 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422] \"androidmapsapi-ula-1\" prio=10 tid=43 Waiting\r\n04-05 15:29:59.399 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: cpu_switch_to+0x48/0x4c\r\n04-05 15:29:59.399 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #00 pc 00017404  /system/lib/libc.so (syscall+28)\r\n04-05 15:29:59.399 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #01 pc 000b6e49  /system/lib/libart.so (_ZN3art17ConditionVariable16WaitHoldingLocksEPNS_6ThreadE+92)\r\n04-05 15:29:59.399 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #02 pc 0029f17b  /system/lib/libart.so (_ZN3art7Monitor4WaitEPNS_6ThreadExibNS_11ThreadStateE+514)\r\n04-05 15:29:59.399 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #03 pc 002a09ab  /system/lib/libart.so (_ZN3art7Monitor4WaitEPNS_6ThreadEPNS_6mirror6ObjectExibNS_11ThreadStateE+258)\r\n04-05 15:29:59.399 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n04-05 15:29:59.400 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | state=S schedstat=( 296146 0 1 ) utm=0 stm=0 core=0 HZ=100\r\n04-05 15:29:59.400 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   | stack=0xc4c08000-0xc4c0a000 stackSize=1038KB\r\n04-05 15:29:59.400 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1118)\r\n04-05 15:29:59.401 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #03 pc 002a09ab  /system/lib/libart.so (_ZN3art7Monitor4WaitEPNS_6ThreadEPNS_6mirror6ObjectExibNS_11ThreadStateE+258)\r\n04-05 15:29:59.401 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: futex_wait_queue_me+0xd4/0x130\r\n04-05 15:29:59.401 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: compat_SyS_futex+0xe8/0x17c\r\n04-05 15:29:59.401 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   - waiting on <0x08952109> (a java.lang.Object)\r\n04-05 15:29:59.401 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   kernel: __switch_to+0x8c/0x98\r\n04-05 15:29:59.402 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #05 pc 00000655  /system/framework/arm/boot.oat (Java_java_lang_Object_wait__JI+96)\r\n04-05 15:29:59.402 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   - waiting on <0x0d85ff0e> (a java.lang.Object)\r\n04-05 15:29:59.402 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.Thread.run(Thread.java:761)\r\n04-05 15:29:59.402 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #03 pc 002a09ab  /system/lib/libart.so (_ZN3art7Monitor4WaitEPNS_6ThreadEPNS_6mirror6ObjectExibNS_11ThreadStateE+258)\r\n04-05 15:29:59.402 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   native: #03 pc 002a09ab  /system/lib/libart.so (_ZN3art7Monitor4WaitEPNS_6ThreadEPNS_6mirror6ObjectExibNS_11ThreadStateE+258)\r\n04-05 15:29:59.402 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.Object.wait!(Native method)\r\n04-05 15:29:59.403 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:422]   at java.lang.Thread.run(Thread.java:761)\r\n04-05 15:29:59.403 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:427] JNI DETECTED ERROR IN APPLICATION: use of deleted local reference 0x100019\r\n04-05 15:29:59.403 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:427]     from void io.realm.internal.SharedRealm.nativeCommitTransaction(long)\r\n04-05 15:29:59.403 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:427] \"main\" prio=5 tid=1 Runnable\r\n04-05 15:29:59.403 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:427]   | group=\"main\" sCount=0 dsCount=0 obj=0x74130000 self=0xeec05400\r\n04-05 15:29:59.403 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:427]   | sysTid=12199 nice=-10 cgrp=default sched=0/0 handle=0xf18d2534\r\n04-05 15:29:59.403 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:427]   native: #11 pc 000cc4e5  /system/lib/libart.so (_ZN3art8CheckJNI11CallMethodVEPKcP7_JNIEnvP8_jobjectP7_jclassP10_jmethodIDSt9__va_listNS_9Primitive4TypeENS_10InvokeTypeE+512)\r\n04-05 15:29:59.403 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:427]   native: #20 pc 00080dcb  /data/app/com.github.binpower93.stationhubapp-2/lib/arm/librealm-jni.so (???)\r\n04-05 15:29:59.403 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:427]   at io.realm.internal.SharedRealm.nativeCommitTransaction(Native method)\r\n04-05 15:29:59.403 12199-12199/com.github.binpower93.stationhubapp A/art: art/runtime/runtime.cc:427]   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:889)\r\n04-05 15:29:59.416 12199-12199/com.github.binpower93.stationhubapp A/libc: Fatal signal 6 (SIGABRT), code -6 in tid 12199 (3.stationhubapp)\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 3.1.0 (worked on 3.0.1 SNAPSHOT)\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.3\r\n\r\nWhich Android version and device: Nexus 5X 7.1.2 (Beta)\r\n", "url": "https://github.com/realm/realm-java/issues/4437", "user": "gwbenbarber", "labels": ["T-Bug-Crash"], "created": "2017-04-05 14:46:57", "closed": "2017-04-07 10:11:53", "commits": {"4c9932f9e1ca1c6b24b8754f48a027137ccd508c": {"commitGHEventType": "referenced", "commitUser": "Zhuinden"}, "207f0903af5d9bf0c4cebb8941982a50a0d228c5": {"commitGHEventType": "referenced", "commitUser": "Zhuinden"}, "48cb6207c5925d0e66ff96ff3bbadf674fac2e84": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "1342bb249f903a9d7858d5c110d4e5c35c2496e3": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "15484f3aecf086933697ee81d9fc9d7b986c3b23": {"commitGHEventType": "closed", "commitUser": "beeender"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "4c9932f9e1ca1c6b24b8754f48a027137ccd508c", "commitGHEventType": "referenced", "commitUser": "Zhuinden", "commitParents": ["a8fd8b55e67335e112a3bd9d8474a17fcb9adafc"], "nameRev": "4c9932f9e1ca1c6b24b8754f48a027137ccd508c tags/v3.1.0~2", "commitMessage": "Fix OsRealmSchema leak (#4422)\n\n", "commitDateTime": "2017-04-05 15:59:29", "authoredDateTime": "2017-04-05 15:59:29", "commitGitStats": [{"filePath": "realm/realm-library/src/main/java/io/realm/OsRealmSchema.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "realm/realm-library/src/main/java/io/realm/Realm.java", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OsRealmSchema.java", "spoonMethods": []}, {"spoonFilePath": "Realm.java", "spoonMethods": [{"spoonMethodName": "io.realm.Realm.initializeSyncedRealm(io.realm.Realm)", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "207f0903af5d9bf0c4cebb8941982a50a0d228c5", "commitGHEventType": "referenced", "commitUser": "Zhuinden", "commitParents": ["5b55c6d382a848a10ab01cc00b2d7b1b1c4a7833"], "nameRev": "207f0903af5d9bf0c4cebb8941982a50a0d228c5 tags/v3.1.0~7", "commitMessage": "Acquire a global ref of jstring for field changes (#4421)\n\nWhen there are more than 512 fields change, the JNI local ref table\r\nsize limitation may be reached.\r\nFix #4378", "commitDateTime": "2017-04-04 16:40:44", "authoredDateTime": "2017-04-04 16:40:44", "commitGitStats": [{"filePath": "realm/realm-library/src/androidTest/java/io/realm/ObjectChangeSetTests.java", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_OsObject.cpp", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "realm/realm-library/src/main/cpp/jni_util/java_global_ref.hpp", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ObjectChangeSetTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.ObjectChangeSetTests.moreFieldsChangedThanLocalRefTableSize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "48cb6207c5925d0e66ff96ff3bbadf674fac2e84", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1342bb249f903a9d7858d5c110d4e5c35c2496e3", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "15484f3aecf086933697ee81d9fc9d7b986c3b23", "commitGHEventType": "closed", "commitUser": "beeender", "commitParents": ["86c8fa5e63ac2166f2805495a605b4873daa40af"], "nameRev": "15484f3aecf086933697ee81d9fc9d7b986c3b23 tags/v3.1.1~5", "commitMessage": "Stale local ref crash with Object listener (#4442)\n\nThe changed field string array needs to be reset after sending\r\nnotifications.\r\n\r\nFix #4437", "commitDateTime": "2017-04-07 16:35:19", "authoredDateTime": "2017-04-07 16:35:19", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/ObjectChangeSetTests.java", "insertions": 48, "deletions": 2, "lines": 50}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_OsObject.cpp", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ObjectChangeSetTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.ObjectChangeSetTests.findFirstAsync_changeSetIsNullWhenQueryReturns()", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 4, "DEL": 0}, {"spoonMethodName": "io.realm.ObjectChangeSetTests.findFirstAsync_queryExecutedByLocalCommit().6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.ObjectChangeSetTests.moreFieldsChangedThanLocalRefTableSize().7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.ObjectChangeSetTests.findFirstAsync_queryExecutedByLocalCommit().6.onChange(io.realm.entities.AllTypes,io.realm.ObjectChangeSet)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.ObjectChangeSetTests.findFirstAsync_changeSetIsNullWhenQueryReturns().5.onChange(io.realm.entities.AllTypes,io.realm.ObjectChangeSet)", "TOT": 9, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 2}, {"spoonMethodName": "io.realm.ObjectChangeSetTests.changeDifferentFieldOneAfterAnother().5", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.ObjectChangeSetTests.changeDifferentFieldOneAfterAnother().5.onChange(io.realm.RealmModel,io.realm.ObjectChangeSet)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.ObjectChangeSetTests.findFirstAsync_queryExecutedByLocalCommit().7.onChange(io.realm.entities.AllTypes,io.realm.ObjectChangeSet)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.ObjectChangeSetTests.findFirstAsync_changeSetIsNullWhenQueryReturns().5", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4c9932f9e1ca1c6b24b8754f48a027137ccd508c"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5.0, "deletions": 2.0, "lines": 7.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 5.0, "UPD": 0.0, "INS": 3.0, "MOV": 1.0, "DEL": 1.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-library/src/main/java/io/realm"], "changesInPackagesSPOON": ["io.realm.Realm.initializeSyncedRealm(io.realm.Realm)"]}, {"title": "Random crash on 3.1-SNAPSHOT", "body": "1) schemaVersion_throwsIfNotUpdatedForSchemaUpgrade\r\n\r\n```\r\n03-30 10:00:39.196  7319  7845 F libc    : Fatal signal 11 (SIGSEGV), code 1, fault addr 0xde39095c in tid 7845 (Thread-710)\r\n03-30 10:00:39.297   102   102 F DEBUG   : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n03-30 10:00:39.297   102   102 F DEBUG   : Build fingerprint: 'Android/vbox86p/vbox86p:6.0/MRA58K/genymotion08241314:userdebug/test-keys'\r\n03-30 10:00:39.297   102   102 F DEBUG   : Revision: '0'\r\n03-30 10:00:39.297   102   102 F DEBUG   : ABI: 'x86'\r\n03-30 10:00:39.297   102   102 F DEBUG   : pid: 7319, tid: 7845, name: Thread-710  >>> io.realm.test <<<\r\n03-30 10:00:39.297   102   102 F DEBUG   : signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0xde39095c\r\n03-30 10:00:39.301   102   102 F DEBUG   :     eax da9f5578  ebx deb92ce4  ecx 00000004  edx da9f5578\r\n03-30 10:00:39.301   102   102 F DEBUG   :     esi dc470cc8  edi de390958\r\n03-30 10:00:39.301   102   102 F DEBUG   :     xcs 00000023  xds 0000002b  xes 0000002b  xfs 000000cf  xss 0000002b\r\n03-30 10:00:39.301   102   102 F DEBUG   :     eip de8fc16b  ebp da9f5558  esp da9f5540  flags 00210206\r\n03-30 10:00:39.303   102   102 F DEBUG   : \r\n03-30 10:00:39.303   102   102 F DEBUG   : backtrace:\r\n03-30 10:00:39.303   102   102 F DEBUG   :     #00 pc 0026b16b  /data/app/io.realm.test-1/lib/x86/librealm-jni.so\r\n03-30 10:00:39.303   102   102 F DEBUG   :     #01 pc 0016e74f  /data/app/io.realm.test-1/lib/x86/librealm-jni.so\r\n03-30 10:00:39.303   102   102 F DEBUG   :     #02 pc 002ebdcf  /data/app/io.realm.test-1/lib/x86/librealm-jni.so\r\n03-30 10:00:39.303   102   102 F DEBUG   :     #03 pc 002ec17e  /data/app/io.realm.test-1/lib/x86/librealm-jni.so\r\n03-30 10:00:39.303   102   102 F DEBUG   :     #04 pc 002f01aa  /data/app/io.realm.test-1/lib/x86/librealm-jni.so\r\n03-30 10:00:39.303   102   102 F DEBUG   :     #05 pc 002f0247  /data/app/io.realm.test-1/lib/x86/librealm-jni.so\r\n03-30 10:00:39.303   102   102 F DEBUG   :     #06 pc 00177deb  /data/app/io.realm.test-1/lib/x86/librealm-jni.so\r\n03-30 10:00:39.303   102   102 F DEBUG   :     #07 pc 001767a9  /data/app/io.realm.test-1/lib/x86/librealm-jni.so\r\n03-30 10:00:39.303   102   102 F DEBUG   :     #08 pc 0016290b  /data/app/io.realm.test-1/lib/x86/librealm-jni.so\r\n03-30 10:00:39.303   102   102 F DEBUG   :     #09 pc 00163039  /data/app/io.realm.test-1/lib/x86/librealm-jni.so\r\n03-30 10:00:39.303   102   102 F DEBUG   :     #10 pc 0017c8b0  /data/app/io.realm.test-1/lib/x86/librealm-jni.so\r\n03-30 10:00:39.303   102   102 F DEBUG   :     #11 pc 0016d671  /data/app/io.realm.test-1/lib/x86/librealm-jni.so\r\n03-30 10:00:39.303   102   102 F DEBUG   :     #12 pc 0014eed5  /data/app/io.realm.test-1/lib/x86/librealm-jni.so (_ZNSt6thread5_ImplISt12_Bind_simpleIFZN5realm5_impl10SyncClientC4ESt10unique_ptrINS2_4util6LoggerESt14default_deleteIS7_EENS2_4sync6Client13ReconnectModeEbEUlvE_vEEE6_M_runEv+75)\r\n03-30 10:00:39.303   102   102 F DEBUG   :     #13 pc 0038cf7e  /data/app/io.realm.test-1/lib/x86/librealm-jni.so\r\n03-30 10:00:39.303   102   102 F DEBUG   :     #14 pc 000807f3  /system/lib/libc.so (__pthread_start(void*)+56)\r\n03-30 10:00:39.303   102   102 F DEBUG   :     #15 pc 00021952  /system/lib/libc.so (__start_thread+25)\r\n03-30 10:00:39.303   102   102 F DEBUG   :     #16 pc 000170b6  /system/lib/libc.so (__bionic_clone+70)\r\n03-3\r\n```\r\n\r\n2) io.realm.objectserver.ProgressListenerTests.downloadProgressListener_indefinitely\r\n```\r\n03-30 15:54:39.591 E/AndroidRuntime(17519): FATAL EXCEPTION: Thread-3174\r\n03-30 15:54:39.591 E/AndroidRuntime(17519): Process: io.realm.test, PID: 17519\r\n03-30 15:54:39.591 E/AndroidRuntime(17519): junit.framework.AssertionFailedError: Test took longer than 60 seconds\r\n03-30 15:54:39.591 E/AndroidRuntime(17519): \tat junit.framework.Assert.fail(Assert.java:50)\r\n03-30 15:54:39.591 E/AndroidRuntime(17519): \tat io.realm.TestHelper.awaitOrFail(TestHelper.java:791)\r\n03-30 15:54:39.591 E/AndroidRuntime(17519): \tat io.realm.TestHelper.awaitOrFail(TestHelper.java:781)\r\n03-30 15:54:39.591 E/AndroidRuntime(17519): \tat io.realm.objectserver.ProgressListenerTests.createRemoteData(ProgressListenerTests.java:96)\r\n03-30 15:54:39.591 E/AndroidRuntime(17519): \tat io.realm.objectserver.ProgressListenerTests.access$100(ProgressListenerTests.java:50)\r\n03-30 15:54:39.591 E/AndroidRuntime(17519): \tat io.realm.objectserver.ProgressListenerTests$3.run(ProgressListenerTests.java:144)\r\n03-30 15:54:39.591 E/AndroidRuntime(17519): \tat java.lang.Thread.run(Thread.java:818)\r\n03-30 15:54:39.673 W/ActivityManager(  628): Error in app io.realm.test running instrumentation ComponentInfo{io.realm.test/android.support.test.runner.AndroidJUnitRunner}:\r\n03-30 15:54:39.674 W/ActivityManager(  628):   junit.framework.AssertionFailedError\r\n03-30 15:54:39.675 W/ActivityManager(  628):   junit.framework.AssertionFailedError: Test took longer than 60 seconds\r\n03-30 15:54:39.799 D/AndroidRuntime(17505): Shutting down VM\r\n03-30 15:54:40.217 I/ActivityManager(  628): Force stopping io.realm.test appid=11451 user=0: finished inst\r\n03-30 15:54:40.221 I/ActivityManager(  628): Killing 17519:io.realm.test/u0a1451 (adj 0): stop io.realm.test\r\n```\r\n\r\n3) io.realm.SyncConfigurationTests.schemaVersion_bumpWhenUpgradingSchema\r\n\r\n```\r\n--------- beginning of crash\r\n03-30 12:15:27.353 F/libc    (12283): Fatal signal 11 (SIGSEGV), code 1, fault addr 0x1bc in tid 12829 (Thread-2777)\r\n03-30 12:15:27.457 I/DEBUG   (  189): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n03-30 12:15:27.457 I/DEBUG   (  189): Build fingerprint: 'nvidia/sb_na_wf/shieldtablet:5.1.1/LMY48C/37154_590.0364:user/release-keys'\r\n03-30 12:15:27.457 I/DEBUG   (  189): Revision: '0'\r\n03-30 12:15:27.457 I/DEBUG   (  189): ABI: 'arm'\r\n03-30 12:15:27.458 I/DEBUG   (  189): pid: 12283, tid: 12829, name: Thread-2777  >>> io.realm.test <<<\r\n03-30 12:15:27.458 I/DEBUG   (  189): signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x1bc\r\n03-30 12:15:27.487 I/DEBUG   (  189):     r0 88829b74  r1 42621b38  r2 00000000  r3 000001b8\r\n03-30 12:15:27.492 I/DEBUG   (  189):     r4 88829b78  r5 88829b78  r6 88829b74  r7 42724010\r\n03-30 12:15:27.494 I/DEBUG   (  189):     r8 42621b38  r9 88829bd0  sl 88829bd4  fp 00000000\r\n03-30 12:15:27.494 I/DEBUG   (  189):     ip 401d27d4  sp 88829b30  lr 79808887  pc 79776c20  cpsr 600f0030\r\n03-30 12:15:27.495 I/DEBUG   (  189): \r\n03-30 12:15:27.495 I/DEBUG   (  189): backtrace:\r\n03-30 12:15:27.495 I/DEBUG   (  189):     #00 pc 0006cc20  /data/app/io.realm.test-1/lib/arm/librealm-jni.so\r\n03-30 12:15:27.495 I/DEBUG   (  189):     #01 pc 000fe883  /data/app/io.realm.test-1/lib/arm/librealm-jni.so\r\n03-30 12:15:27.495 I/DEBUG   (  189):     #02 pc 000fcb8d  /data/app/io.realm.test-1/lib/arm/librealm-jni.so\r\n03-30 12:15:27.495 I/DEBUG   (  189):     #03 pc 000fce5b  /data/app/io.realm.test-1/lib/arm/librealm-jni.so\r\n03-30 12:15:27.495 I/DEBUG   (  189):     #04 pc 000f07ef  /data/app/io.realm.test-1/lib/arm/librealm-jni.so\r\n03-30 12:15:27.495 I/DEBUG   (  189):     #05 pc 000f0bd9  /data/app/io.realm.test-1/lib/arm/librealm-jni.so\r\n03-30 12:15:27.496 I/DEBUG   (  189):     #06 pc 001024cf  /data/app/io.realm.test-1/lib/arm/librealm-jni.so\r\n03-30 12:15:27.496 I/DEBUG   (  189):     #07 pc 000f6ed7  /data/app/io.realm.test-1/lib/arm/librealm-jni.so\r\n03-30 12:15:27.496 I/DEBUG   (  189):     #08 pc 000e4a87  /data/app/io.realm.test-1/lib/arm/librealm-jni.so (_ZNSt6thread5_ImplISt12_Bind_simpleIFZN5realm5_impl10SyncClientC4ESt10unique_ptrINS2_4util6LoggerESt14default_deleteIS7_EENS2_4sync6Client13ReconnectModeEbEUlvE_vEEE6_M_runEv+34)\r\n03-30 12:15:27.496 I/DEBUG   (  189):     #09 pc 002c158c  /data/app/io.realm.test-1/lib/arm/librealm-jni.so\r\n03-30 12:15:27.496 I/DEBUG   (  189):     #10 pc 000178df  /system/lib/libc.so (__pthread_start(void*)+30)\r\n03-30 12:15:27.496 I/DEBUG   (  189):     #11 pc 00015823  /system/lib/libc.so (__start_thread+6)\r\n03-30 12:15:28.354 I/DEBUG   (  189): \r\n03-30 12:15:28.354 I/DEBUG   (  189): Tombstone written to: /data/tombstones/tombstone_03\r\n```\r\n\r\n4) uploadProgressListener_changesOnly\r\n```\r\n03-30 22:13:14.607 I/TestRunner(32525): started: uploadProgressListener_changesOnly(io.realm.objectserver.ProgressListenerTests)\r\n03-30 22:13:14.611 I/MonitoringInstrumentation(32525): Activities that are still in CREATED to STOPPED: 0\r\n--------- beginning of crash\r\n03-30 22:13:14.774 F/libc    (32525): Fatal signal 6 (SIGABRT), code -6 in tid 1003 (Thread-57251)\r\n03-30 22:13:14.881 F/DEBUG   (  485): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n03-30 22:13:14.881 F/DEBUG   (  485): Build fingerprint: 'google/bullhead/bullhead:6.0/MDA89E/2296692:user/release-keys'\r\n03-30 22:13:14.882 F/DEBUG   (  485): Revision: 'rev_1.0'\r\n03-30 22:13:14.882 F/DEBUG   (  485): ABI: 'arm64'\r\n03-30 22:13:14.883 F/DEBUG   (  485): pid: 32525, tid: 1003, name: Thread-57251  >>> io.realm.test <<<\r\n03-30 22:13:14.884 F/DEBUG   (  485): signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------\r\n03-30 22:13:14.879 W/debuggerd64(  485): type=1400 audit(0.0:13828): avc: denied { search } for name=\"io.realm.test\" dev=\"dm-2\" ino=392526 scontext=u:r:debuggerd:s0 tcontext=u:object_r:app_data_file:s0:c512,c768 tclass=dir permissive=0\r\n03-30 22:13:14.921 F/DEBUG   (  485): Abort message: 'TEST_FATAL'\r\n03-30 22:13:14.922 F/DEBUG   (  485):     x0   0000000000000000  x1   00000000000003eb  x2   0000000000000006  x3   0000000000000000\r\n03-30 22:13:14.922 F/DEBUG   (  485):     x4   0000000000000000  x5   0000000000000001  x6   0000000000000000  x7   0000000000000000\r\n03-30 22:13:14.922 F/DEBUG   (  485):     x8   0000000000000083  x9   0000007f5298d5b0  x10  0000000000000001  x11  0000000000004000\r\n03-30 22:13:14.923 F/DEBUG   (  485):     x12  0000000000004001  x13  0000000000000000  x14  0000000000000001  x15  00000000ffffffff\r\n03-30 22:13:14.923 F/DEBUG   (  485):     x16  0000007f79d22568  x17  0000007f79cb4f9c  x18  0000007f79d30738  x19  0000007f5298d500\r\n03-30 22:13:14.923 F/DEBUG   (  485):     x20  0000007f5298d440  x21  0000000000000073  x22  0000000000000006  x23  00000000000ff000\r\n03-30 22:13:14.923 F/DEBUG   (  485):     x24  0000000000000002  x25  0000007f5d8cae30  x26  0000007f79cb1000  x27  0000007f556e7390\r\n03-30 22:13:14.923 F/DEBUG   (  485):     x28  0000000000001000  x29  0000007f5298d2b0  x30  0000007f79cb2858\r\n03-30 22:13:14.923 F/DEBUG   (  485):     sp   0000007f5298d2b0  pc   0000007f79cb4fa4  pstate 0000000020000000\r\n03-30 22:13:14.930 F/DEBUG   (  485): \r\n03-30 22:13:14.930 F/DEBUG   (  485): backtrace:\r\n03-30 22:13:14.931 F/DEBUG   (  485):     #00 pc 000000000006afa4  /system/lib64/libc.so (tgkill+8)\r\n03-30 22:13:14.931 F/DEBUG   (  485):     #01 pc 0000000000068854  /system/lib64/libc.so (pthread_kill+68)\r\n03-30 22:13:14.931 F/DEBUG   (  485):     #02 pc 0000000000023838  /system/lib64/libc.so (raise+28)\r\n03-30 22:13:14.931 F/DEBUG   (  485):     #03 pc 000000000001dfd8  /system/lib64/libc.so (abort+60)\r\n03-30 22:13:14.932 F/DEBUG   (  485):     #04 pc 00000000003b4f04  /data/app/io.realm.test-1/lib/arm64/librealm-jni.so (__gnu_cxx::__verbose_terminate_handler()+348)\r\n03-30 22:13:14.932 F/DEBUG   (  485):     #05 pc 0000000000386c20  /data/app/io.realm.test-1/lib/arm64/librealm-jni.so (__cxxabiv1::__terminate(void (*)())+8)\r\n03-30 22:13:14.932 F/DEBUG   (  485):     #06 pc 0000000000386c8c  /data/app/io.realm.test-1/lib/arm64/librealm-jni.so (std::terminate()+12)\r\n03-30 22:13:14.932 F/DEBUG   (  485):     #07 pc 00000000003b3cac  /data/app/io.realm.test-1/lib/arm64/librealm-jni.so\r\n03-30 22:13:14.932 F/DEBUG   (  485):     #08 pc 0000000000067ca4  /system/lib64/libc.so (__pthread_start(void*)+52)\r\n03-30 22:13:14.933 F/DEBUG   (  485):     #09 pc 000000000001eb84  /system/lib64/libc.so (__start_thread+16)\r\n0\r\n```", "url": "https://github.com/realm/realm-java/issues/4405", "user": "cmelchior", "labels": ["T-Bug-Crash", "T-Internal"], "created": "2017-03-30 14:08:30", "closed": "2017-04-04 08:08:30", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Fatal signal 11 (SIGSEGV), code 1, fault addr 0x69 in tid 6254", "body": "I'm working with encrypted realm 2.3.2. and I got this issue sometimes, I really don't understand why. I'm doing nothing special when it happens...\r\n\r\n```\r\nHere is the logs:\r\nA/libc: Fatal signal 11 (SIGSEGV), code 1, fault addr 0x69 in tid 6254 (mmunities.debug)\r\n\r\n*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\nBuild fingerprint: 'google/bullhead/bullhead:7.1.2/NPG05D/3635581:user/release-keys'\r\nRevision: 'rev_1.0'\r\nABI: 'arm64'\r\npid: 6254, tid: 6254, name: mmunities.debug  >>> com.facetts.communities.debug <<<\r\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x69\r\n  x0   0000000000000000  x1   0000000000000002  x2   0000000000000002  x3   0000000000000002\r\n  x4   000000000000000c  x5   00000074886d28e4  x6   00000074886d28f0  x7   00340037006a0036\r\n  x8   0000000000000000  x9   0000000000000000  x10  0000000000430000  x11  00000000ffffffff\r\n  x12  0000007fe9be8558  x13  0000000000000000  x14  00000074a0a5ea88  x15  0000000000000000\r\n  x16  0000007fe9be8680  x17  00000074a2dfa908  x18  00000074a21ec068  x19  0000007484f31e70\r\n  x20  0000007495664400  x21  0000000000000002  x22  0000000012e83580  x23  0000000012de95c0\r\n  x24  000000001305d790  x25  000000001305d7e0  x26  0000000012eb1400  x27  0000000012e83580\r\n  x28  0000000012f0ce08  x29  0000007fe9be8570  x30  000000749ad120a0\r\n  sp   0000007fe9be8570  pc   000000749ab9ea34  pstate 0000000020000000\r\nbacktrace:\r\n  #00 pc 0000000000039a34  /data/app/com.facetts.communities.debug-2/lib/arm64/librealm-jni.so\r\n  #01 pc 00000000001ad09c  /data/app/com.facetts.communities.debug-2/lib/arm64/librealm-jni.so\r\n  #02 pc 00000000001ad0f8  /data/app/com.facetts.communities.debug-2/lib/arm64/librealm-jni.so\r\n  #03 pc 00000000001ad110  /data/app/com.facetts.communities.debug-2/lib/arm64/librealm-jni.so\r\n  #04 pc 000000000009a4a0  /data/app/com.facetts.communities.debug-2/lib/arm64/librealm-jni.so Java_io_realm_internal_UncheckedRow_nativeGetString+72)\r\n  #05 pc 00000000008b83c0  /data/app/com.facetts.communities.debug-2/oat/arm64/base.odex (offset 0x7f3000)\r\n```", "url": "https://github.com/realm/realm-java/issues/4381", "user": "matomick", "labels": ["T-Bug-Crash"], "created": "2017-03-24 16:11:46", "closed": "2017-05-19 13:19:31", "commits": {}, "ttf": 55.000277777777775, "commitsDetails": []}, {"title": "uncaught exception in notifier thread: N5realm10LogicErrorE: Bad version number", "body": "#### Steps & Code to Reproduce\r\n\r\nUnfortunately, don't have any specific steps or code sample to reproduce. It is just randomly crash and it sometimes crashes in different places, but we cannot get it in Realm v2.3.1.\r\n\r\nI found similar issue in realm-cocoa @ https://github.com/realm/realm-cocoa/issues/4422.\r\n\r\n#### Version of Realm and tooling\r\n\r\nRealm version(s): 3.0.0\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.3\r\n\r\nWhich Android version and device: Android 7.1.1 on Nexus 5X, Android 4.3 on Samsung S3 GT-I9300, Emulator Android \r\n\r\n#### Logcat\r\n\r\n03-29 18:15:00.773 27003-27038 E/REALM: uncaught exception in notifier thread: N5realm10LogicErrorE: Bad version number\r\n                                        --------- beginning of crash\r\n03-29 18:15:00.776 27003-27038 A/libc: Fatal signal 6 (SIGABRT), code -6 in tid 27038 (-//-)\r\n [ 03-29 18:15:00.785   367:  367 W/] debuggerd: handling request: pid=27003 uid=10376 gid=10376 tid=27038\r\n03-29 18:15:01.005 27758-27758 A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n03-29 18:15:01.005 27758-27758 A/DEBUG: Build fingerprint: 'google/bullhead/bullhead:7.1.1/N4F26I/3532671:user/release-keys'\r\n03-29 18:15:01.005 27758-27758 A/DEBUG: Revision: 'rev_1.0'\r\n03-29 18:15:01.005 27758-27758 A/DEBUG: ABI: 'arm'\r\n03-29 18:15:01.005 27758-27758 A/DEBUG: pid: 27003, tid: 27038, name: -//-   >>> -//- <<<\r\n03-29 18:15:01.005 27758-27758 A/DEBUG: signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------\r\n03-29 18:15:01.005 27758-27758 A/DEBUG:     r0 00000000  r1 0000699e  r2 00000006  r3 00000008\r\n03-29 18:15:01.005 27758-27758 A/DEBUG:     r4 e3e69978  r5 00000006  r6 e3e69920  r7 0000010c\r\n03-29 18:15:01.005 27758-27758 A/DEBUG:     r8 ff9c25c4  r9 decde3cc  sl d106275c  fp e3e698f4\r\n03-29 18:15:01.005 27758-27758 A/DEBUG:     ip 00000011  sp e3e69888  lr ec867557  pc ec869db4  cpsr 200f0010\r\n03-29 18:15:01.015 27758-27758 A/DEBUG: backtrace:\r\n03-29 18:15:01.017 27758-27758 A/DEBUG:     #00 pc 00049db4  /system/lib/libc.so (tgkill+12)\r\n03-29 18:15:01.017 27758-27758 A/DEBUG:     #01 pc 00047553  /system/lib/libc.so (pthread_kill+34)\r\n03-29 18:15:01.017 27758-27758 A/DEBUG:     #02 pc 0001d8a5  /system/lib/libc.so (raise+10)\r\n03-29 18:15:01.017 27758-27758 A/DEBUG:     #03 pc 000193f1  /system/lib/libc.so (__libc_android_abort+34)\r\n03-29 18:15:01.017 27758-27758 A/DEBUG:     #04 pc 00017034  /system/lib/libc.so (abort+4)\r\n03-29 18:15:01.017 27758-27758 A/DEBUG:     #05 pc 0015d938  /data/app/{package}/base.apk (offset 0x1689000)\r\n03-29 18:15:01.017 27758-27758 A/DEBUG:     #06 pc 001307ec  /data/app/{package}/base.apk (offset 0x1689000)\r\n03-29 18:15:01.017 27758-27758 A/DEBUG:     #07 pc 0013088c  /data/app/{package}/base.apk (offset 0x1689000)\r\n03-29 18:15:01.017 27758-27758 A/DEBUG:     #08 pc 0015c828  /data/app/{package}/base.apk (offset 0x1689000)\r\n03-29 18:15:01.017 27758-27758 A/DEBUG:     #09 pc 00047023  /system/lib/libc.so (_ZL15__pthread_startPv+22)\r\n03-29 18:15:01.017 27758-27758 A/DEBUG:     #10 pc 00019e3d  /system/lib/libc.so (__start_thread+6)\r\n03-29 18:15:03.357 881-27759 W/ActivityManager:   Force finishing activity *.MainActivity\r\n", "url": "https://github.com/realm/realm-java/issues/4369", "user": "vadimbryl", "labels": ["T-Bug-Crash"], "created": "2017-03-23 12:11:36", "closed": "2017-04-04 07:38:33", "commits": {"e2555d6fce273e77505363d867f772d90ba39240": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "65df4ae73e8cae7c68446a52e01a61b0c97224ab": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "5b55c6d382a848a10ab01cc00b2d7b1b1c4a7833": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "e2555d6fce273e77505363d867f772d90ba39240", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "65df4ae73e8cae7c68446a52e01a61b0c97224ab", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5b55c6d382a848a10ab01cc00b2d7b1b1c4a7833", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["6ebcede20984fb46ba807502a716ec0099079ecd"], "nameRev": "5b55c6d382a848a10ab01cc00b2d7b1b1c4a7833 tags/v3.1.0~8", "commitMessage": "Update object store (#4420)\n\nto 3b6c0f6110.\r\nFix #4369", "commitDateTime": "2017-04-04 15:38:33", "authoredDateTime": "2017-04-04 15:38:33", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "realm/realm-library/src/main/cpp/object-store", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "SEGV_MAPERR, Failure when converting short string to UTF-16", "body": "We're experiencing easily reproducible crashes when using copyFromRealm while simultaneously writing on a separate thread.\r\n\r\nMay be related to #2492 \r\n\r\n#### Observations\r\n\r\n- Crashes only occur with at least 1 write thread\r\n- Crashes occur with relatively few iterations\r\n- Crashes appear to only occur when using encryption\r\n- Crashes do not appear to lead to corruption (as in #4128)\r\n\r\n#### Results\r\n\r\nBelow is a sampling of crashes on 3.0.0. I can generate crash reports on 2.3.2 if necessary.\r\n```\r\nE/REALM_JNI: jni: ThrowingException 5, Failure when converting short string to UTF-16 error_code = 1; retcode = 0; StringData.size = 13; StringData.data = class_Message; StringData as hex =  0x63 0x6c 0x61 0x73 0x73 0x5f 0x4d 0x65 0x73 0x73 0x61 0x67 0x65; in_begin = class_Message; in_end = ; out_curr = 0x941812e0; out_end = 0x94181340; in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_Table.cpp line 1294, .\r\nE/REALM_JNI: Exception has been thrown: Unrecoverable error. Failure when converting short string to UTF-16 error_code = 1; retcode = 0; StringData.size = 13; StringData.data = class_Message; StringData as hex =  0x63 0x6c 0x61 0x73 0x73 0x5f 0x4d 0x65 0x73 0x73 0x61 0x67 0x65; in_begin = class_Message; in_end = ; out_curr = 0x941812e0; out_end = 0x94181340; in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_Table.cpp line 1294\r\nE/AndroidRuntime: FATAL EXCEPTION: Thread-312\r\nProcess: io.binarysolutions.realmmemtest, PID: 12344\r\nio.realm.exceptions.RealmError: Unrecoverable error. Failure when converting short string to UTF-16 error_code = 1; retcode = 0; StringData.size = 13; StringData.data = class_Message; StringData as hex =  0x63 0x6c 0x61 0x73 0x73 0x5f 0x4d 0x65 0x73 0x73 0x61 0x67 0x65; in_begin = class_Message; in_end = ; out_curr = 0x941812e0; out_end = 0x94181340; in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_Table.cpp line 1294\r\n  at io.realm.internal.Table.nativeGetName(Native Method)\r\n  at io.realm.internal.Table.getName(Table.java:1097)\r\n  at io.realm.MessageRealmProxy.hashCode(MessageRealmProxy.java:804)\r\n  at java.util.Collections.secondaryHash(Collections.java:3427)\r\n  at java.util.HashMap.put(HashMap.java:385)\r\n  at io.realm.MessageRealmProxy.createDetachedCopy(MessageRealmProxy.java:749)\r\n  at io.realm.ContactRealmProxy.createDetachedCopy(ContactRealmProxy.java:774)\r\n  at io.realm.DefaultRealmModuleMediator.createDetachedCopy(DefaultRealmModuleMediator.java:268)\r\n  at io.realm.Realm.createDetachedCopy(Realm.java:1520)\r\n  at io.realm.Realm.copyFromRealm(Realm.java:1252)\r\n  at io.realm.Realm.copyFromRealm(Realm.java:1225)\r\n  at io.binarysolutions.realmtest.MainActivity$6.run(MainActivity.java:308)\r\n  at java.lang.Thread.run(Thread.java:818)\r\n```\r\n\r\n\r\n```\r\nsignal 11 (SIGSEGV), code 1, fault addr 0x4 in tid 11192 (Thread-302)\r\nRevision: '0'\r\nABI: 'arm'\r\npid: 10959, tid: 11192, name: Thread-302  >>> io.binarysolutions.realmmemtest <<<\r\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x4\r\n    r0 b826dc70  r1 00000018  r2 b826de08  r3 00000000\r\n    r4 0a000000  r5 b826dc70  r6 2d353535  r7 00000018\r\n    r8 00000000  r9 b8147890  sl 00000000  fp 00000000\r\n    ip b3ac813d  sp 94245358  lr b3b9c6ad  pc b3affa72  cpsr 600f0030\r\n\r\nStack Trace:\r\n  RELADDR   FUNCTION                                                FILE:LINE\r\n  0008ea72  realm::SlabAlloc::do_translate(unsigned int) const+206  libgcc2.c:?\r\n  0012b6a9  realm::StringColumn::get(unsigned int) const+200        libgcc2.c:?\r\n\r\n-----------------------------------------------------\r\n\r\nsignal 11 (SIGSEGV), code 1, fault addr 0x4 in tid 12135 (Thread-308)\r\nRevision: '0'\r\nABI: 'arm'\r\npid: 11985, tid: 12135, name: Thread-308  >>> io.binarysolutions.realmmemtest <<<\r\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x4\r\n    r0 b823b948  r1 00000000  r2 b823c434  r3 00000000\r\n    r4 0a000000  r5 b823b948  r6 e281e559  r7 000000df\r\n    r8 00000000  r9 b7f07dc0  sl 00000000  fp 00000000\r\n    ip b3ac813d  sp 94184318  lr b3b9a0ef  pc b3affa72  cpsr 600f0030\r\n\r\nStack Trace:\r\n  RELADDR   FUNCTION                                                                            FILE:LINE\r\n  0008ea72  realm::SlabAlloc::do_translate(unsigned int) const+206                              libgcc2.c:?\r\n  001290eb  realm::ArrayStringLong::get(char const*, unsigned int, realm::Allocator&, bool)+36  libgcc2.c:?\r\n\r\n-----------------------------------------------------\r\n\r\nsignal 11 (SIGSEGV), code 1, fault addr 0x41 in tid 12811 (Thread-316)\r\nRevision: '0'\r\nABI: 'arm'\r\npid: 12677, tid: 12811, name: Thread-316  >>> io.binarysolutions.realmmemtest <<<\r\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x41\r\n    r0 b7e9bf1c  r1 0000011a  r2 0000011a  r3 00000000\r\n    r4 941813d8  r5 b7e9bf10  r6 0000011a  r7 b7f20ba8\r\n    r8 b80812e4  r9 b8081258  sl 6fbf6508  fp 941816bc\r\n    ip b3ac813d  sp 94181390  lr b3b8ae7f  pc b3a958c8  cpsr 200f0030\r\n\r\nStack Trace:\r\n  RELADDR   FUNCTION                                             FILE:LINE\r\n  000248c8  realm::BpTree<long long>::get(unsigned int) const+8  libgcc2.c:?\r\n  00119e7b  realm::StringEnumColumn::get(unsigned int) const+12  libgcc2.c:?\r\n\r\n-----------------------------------------------------\r\n\r\nsignal 11 (SIGSEGV), code 1, fault addr 0x4 in tid 13354 (Thread-320)\r\nRevision: '0'\r\nABI: 'arm'\r\npid: 12963, tid: 13354, name: Thread-320  >>> io.binarysolutions.realmmemtest <<<\r\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x4\r\n    r0 b8202a30  r1 00000000  r2 b820366c  r3 00000000\r\n    r4 0a000000  r5 b8202a30  r6 212a4ebe  r7 000000fb\r\n    r8 00000000  r9 00000379  sl 00000000  fp 00000000\r\n    ip b3ac813d  sp 941812f8  lr b3b4ddad  pc b3affa72  cpsr 600f0030\r\n\r\nStack Trace:\r\n  RELADDR   FUNCTION                                                                                       FILE:LINE\r\n  0008ea72  realm::SlabAlloc::do_translate(unsigned int) const+206                                         libgcc2.c:?\r\n  000dcda9  (anonymous namespace)::find_bptree_child(long long, unsigned int, realm::Allocator const&)+60  libgcc2.c:?\r\n\r\n-----------------------------------------------------\r\n\r\nsignal 11 (SIGSEGV), code 1, fault addr 0x4 in tid 13632 (Thread-324)\r\nRevision: '0'\r\nABI: 'arm'\r\npid: 13498, tid: 13632, name: Thread-324  >>> io.binarysolutions.realmmemtest <<<\r\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x4\r\n    r0 b80eabe8  r1 00002cc8  r2 b80eb710  r3 00000000\r\n    r4 0a000000  r5 b80eabe8  r6 f4e842ba  r7 000000e4\r\n    r8 00000000  r9 b7f24580  sl 00000000  fp 00000000\r\n    ip b3ac813d  sp 9417e318  lr b3b9a119  pc b3affa72  cpsr 600f0030\r\n\r\nStack Trace:\r\n  RELADDR   FUNCTION                                                                            FILE:LINE\r\n  0008ea72  realm::SlabAlloc::do_translate(unsigned int) const+206                              libgcc2.c:?\r\n  00129115  realm::ArrayStringLong::get(char const*, unsigned int, realm::Allocator&, bool)+78  libgcc2.c:?\r\n\r\n-----------------------------------------------------\r\n\r\nsignal 11 (SIGSEGV), code 1, fault addr 0x4 in tid 14178 (Thread-329)\r\nRevision: '0'\r\nABI: 'arm'\r\npid: 14062, tid: 14178, name: Thread-329  >>> io.binarysolutions.realmmemtest <<<\r\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x4\r\n    r0 b81dc3b8  r1 0001cbf8  r2 b81dc688  r3 00000000\r\n    r4 0a000000  r5 b81dc3b8  r6 38f331c8  r7 00000032\r\n    r8 00000000  r9 0000010f  sl 00000000  fp 00000000\r\n    ip b3ac813d  sp 940822f8  lr b3b4ddad  pc b3affa72  cpsr 600f0030\r\n\r\nStack Trace:\r\n  RELADDR   FUNCTION                                                                                       FILE:LINE\r\n  0008ea72  realm::SlabAlloc::do_translate(unsigned int) const+206                                         libgcc2.c:?\r\n  000dcda9  (anonymous namespace)::find_bptree_child(long long, unsigned int, realm::Allocator const&)+60  libgcc2.c:?\r\n```\r\n\r\n#### Code \r\nhttps://github.com/bios-seiji/realm-crash/tree/300\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): <=3.0.0\r\nSync: no\r\nEncryption: yes\r\nAndroid Studio version: 2.2.2\r\nWhich Android version and device: 6.0.1\r\n", "url": "https://github.com/realm/realm-java/issues/4343", "user": "bios-seiji", "labels": ["T-Bug-Crash"], "created": "2017-03-19 01:04:13", "closed": "2017-05-19 11:04:54", "commits": {}, "ttf": 61.000277777777775, "commitsDetails": []}, {"title": "Crash In Android 4.2.1&Android 4.2.2  With Realm 3.0", "body": "please help me.\r\nI use realm 3.0. \r\nand collect crash in android 4.2.1& android 4.2.2 (level 17) . It looks like only crash in level 17.\r\n\r\n## This is crash log:\r\n\r\nmain(1)\r\nSIGSEGV(SEGV_ACCERR) \r\n#00 pc 00018b6c /system/lib/libc.so (memcpy+1324) [armeabi-v7a]\r\njava:\r\nio.realm.internal.SharedRealm.long nativeGetTable(long,java.lang.String)(Native Method)\r\nio.realm.internal.SharedRealm.io.realm.internal.Table getTable(java.lang.String)(ProGuard:271)\r\nio.realm.MasteryRealmBeanRealmProxy.io.realm.internal.Table initTable(io.realm.internal.SharedRealm)(ProGuard:149)\r\nio.realm.PersonSchemaMediator.io.realm.internal.Table createTable(java.lang.Class,io.realm.internal.SharedRealm)(ProGuard:58)\r\nio.realm.Realm.void initializeRealm(io.realm.Realm)(ProGuard:347)\r\nio.realm.Realm.io.realm.Realm createAndValidate(io.realm.RealmConfiguration,io.realm.internal.ColumnIndices[])(ProGuard:314)\r\nio.realm.Realm.io.realm.Realm createInstance(io.realm.RealmConfiguration,io.realm.internal.ColumnIndices[])(ProGuard:265)\r\nio.realm.RealmCache.io.realm.BaseRealm createRealmOrGetFromCache(io.realm.RealmConfiguration,java.lang.Class)(ProGuard:143)\r\nio.realm.Realm.io.realm.Realm getInstance(io.realm.RealmConfiguration)(ProGuard:228)\r\ncom.shensz.student.service.storage.StorageService.io.realm.Realm getPersonRealm()(ProGuard:120)\r\n\r\n## This is my code:\r\n\r\nprivate static final String REALM_NAME_PREFIX = \"person.\";\r\nprivate static final String REALM = \".realm\";\r\nprivate RealmConfiguration getPersonRealmConfiguration(String uid) {\r\n        Check.notNull(uid);\r\n        Check.notEmpty(uid);\r\n        String realmName;\r\n        if (TextUtils.isEmpty(uid)) {\r\n            realmName = REALM_NAME_PREFIX + \"unknown\" + REALM;\r\n        } else {\r\n            realmName = REALM_NAME_PREFIX + uid + REALM;\r\n        }\r\n        return new RealmConfiguration.Builder()\r\n                .name(realmName)\r\n                .deleteRealmIfMigrationNeeded()\r\n                .modules(new PersonSchema())\r\n                .schemaVersion(USER_REALM_VERSION)\r\n                .build();\r\n}", "url": "https://github.com/realm/realm-java/issues/4334", "user": "shisu250", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2017-03-16 16:23:27", "closed": "2017-03-17 13:57:38", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Samsung Galaxy S3 mini: Heap memory corruption", "body": "Samsung Galaxy S3 mini (i8200N)\r\n\r\nTrying to use Realm v2 we're getting the following crash:\r\n\r\n```\r\n[02-10 16:15:02.593 10641-10641/link.thismo.app A/libc: Fatal signal 11 (SIGSEGV) at 0x5ab96ff6 (code=2), thread 10641 (link.thismo.app)\r\n02-10 16:15:02.601 10641-10713/link.thismo.app I/dalvikvm: JNI ERROR (app bug): accessed deleted local reference 0x23400005\r\n02-10 16:15:02.601 10641-10713/link.thismo.app E/dalvikvm: VM aborting\r\n02-10 16:15:02.601 10641-10713/link.thismo.app A/libc: Fatal signal 11 (SIGSEGV) at 0xdeadd00d (code=1), thread 10713 (AnalyticsWorker)\r\n02-10 16:15:10.054 10641-10647/link.thismo.app A/libc: @@@ ABORTING: LIBC: HEAP MEMORY CORRUPTION IN dlmalloc]\r\n```\r\n\r\nA more complete crash log that happened on version 2.4.0-SNAPSHOT:\r\nhttps://gist.github.com/jonasbark/26fbd60062ed9af981a3d0b19f91c62d\r\n\r\nIt does not happen with e.g. 0.90.1.", "url": "https://github.com/realm/realm-java/issues/4177", "user": "jonasbark", "labels": ["Reproduction-Required", "T-Bug-Crash", "T-Duplicate"], "created": "2017-02-13 13:15:11", "closed": "2017-02-16 08:21:30", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Not a Realm file and Native exception", "body": "Hi, \nMy crash report keeps receiving these exceptions from some users.\nBut it never happened on my test device or emulator.\nWhat is the possible cause?\n\nHere's how I write data to Realm:\n```\nrealm.executeTransactionAsync(new Realm.Transaction() {\n            @Override\n            public void execute(Realm realm) {\n                autoIncrement ++;\n                MyRealmObject data = realm.createObject(MyRealmObject.class, id);\n                data.setContent( gson.toJson( myData ) ); // String, length range: 7000 ~ 60000\n                data.setPage( page ); // int\n            }\n        });\n```\n\nHere's how I read data from Realm:\n```\nRealmQuery<MyRealmObject> query = realm.where(MyRealmObject.class);\nquery.findAllSorted( MyRealmObject.PAGE, Sort.ASCENDING );\n```\nIt looks like the user has to remove the app or clear all data to make realm works again.\nIs this means the Realm database is crashed?\n\nFirebase Crash Report:\n\n> Exception java.lang.RuntimeException: Unable to create application com.ihad.ptt.App: io.realm.exceptions.RealmFileException: Unable to open a realm at path '/data/data/com.ihad.ptt/files/default.realm': Not a Realm file. (Not a Realm file) in /home/cc/repo/realm/realm-java-release/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 87 Kind: ACCESS_ERROR.\n> android.app.ActivityThread.handleBindApplication (ActivityThread.java:5665)\n> android.app.ActivityThread.-wrap2 (ActivityThread.java)\n> android.app.ActivityThread$H.handleMessage (ActivityThread.java:1573)\n> android.os.Handler.dispatchMessage (Handler.java:102)\n> android.os.Looper.loop (Looper.java:173)\n> android.app.ActivityThread.main (ActivityThread.java:6459)\n> java.lang.reflect.Method.invoke (Method.java)\n> com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run (ZygoteInit.java:938)\n> com.android.internal.os.ZygoteInit.main (ZygoteInit.java:828)\n> arrow_drop_down\n> Caused by io.realm.exceptions.RealmFileException: Unable to open a realm at path '/data/data/com.ihad.ptt/files/default.realm': Not a Realm file. (Not a Realm file) in /home/cc/repo/realm/realm-java-release/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 87\n> io.realm.internal.SharedRealm.nativeGetSharedRealm (SharedRealm.java)\n> io.realm.internal.SharedRealm.getInstance (SharedRealm.java:208)\n> io.realm.internal.SharedRealm.getInstance (SharedRealm.java:186)\n> io.realm.BaseRealm.compactRealm (BaseRealm.java:586)\n> io.realm.Realm.compactRealm (Realm.java:1565)\n> com.ihad.ptt.domain.dao.realm.impl.RealmMigration.init (RealmMigration.java:29)\n> com.ihad.ptt.App.onCreate (App.java:95)\n> android.app.Instrumentation.callApplicationOnCreate (Instrumentation.java:1037)\n> android.app.ActivityThread.handleBindApplication (ActivityThread.java:5662)\n> android.app.ActivityThread.-wrap2 (ActivityThread.java)\n> android.app.ActivityThread$H.handleMessage (ActivityThread.java:1573)\n> android.os.Handler.dispatchMessage (Handler.java:102)\n> android.os.Looper.loop (Looper.java:173)\n> android.app.ActivityThread.main (ActivityThread.java:6459)\n> java.lang.reflect.Method.invoke (Method.java)\n> com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run (ZygoteInit.java:938)\n> com.android.internal.os.ZygoteInit.main (ZygoteInit.java:828)\n\n\nNative Exception:\n\n> *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n> Build fingerprint: 'htc/pmeuhl_00709/htc_pmeuhl:6.0.1/MMB29M/801953.5:user/release-keys'\n> Revision: '0'\n> ABI: 'arm64'\n> pid: 13207, tid: 13207, name: com.ihad.ptt >>> com.ihad.ptt <<<\n> signal 11 (SIGSEGV), code 2 (SEGV_ACCERR), fault addr 0x7f62978008\n> x0 0000000000000000 x1 0000007f62908ca0 x2 0000000000000008 x3 0000000000014b00\n> x4 0000000000ffffff x5 000000000000003f x6 0000000000000040 x7 0000007f62978008\n> x8 000000000000006d x9 0000000000000000 x10 0000000000000000 x11 0000000000000040\n> x12 0000000000000010 x13 0000007f84b37a90 x14 000000559a211000 x15 0000007f84b37ad8\n> x16 0000007f84b30a58 x17 0000000000000000 x18 0000000000000001 x19 000000559a563900\n> x20 0000000000000000 x21 0000007fdafd3230 x22 0000007fdafd3540 x23 000000559a5634f0\n> x24 0000007fdafd3640 x25 0000007f62995000 x26 000000559a563700 x27 0000007fdafd3440\n> x28 000000559a563710 x29 0000007fdafd3160 x30 0000007f627f87d8\n> sp 0000007fdafd3160 pc 0000007f627b346c pstate 0000000020000000\n> \n> backtrace:\n> #00 pc 00000000000e746c /data/app/com.ihad.ptt-1/lib/arm64/librealm-jni.so\n> #01 pc 000000000012c7d4 /data/app/com.ihad.ptt-1/lib/arm64/librealm-jni.so\n> #02 pc 00000000000a530c /data/app/com.ihad.ptt-1/lib/arm64/librealm-jni.so\n> #03 pc 00000000000be754 /data/app/com.ihad.ptt-1/lib/arm64/librealm-jni.so\n> #04 pc 00000000000c26ec /data/app/com.ihad.ptt-1/lib/arm64/librealm-jni.so\n> #05 pc 00000000000bbcd0 /data/app/com.ihad.ptt-1/lib/arm64/librealm-jni.so\n> #06 pc 000000000004d2c0 /data/app/com.ihad.ptt-1/lib/arm64/librealm-jni.so (Java_io_realm_internal_SharedRealm_nativeGetSharedRealm+384)\n> #07 pc 000000000220c74c /data/app/com.ihad.ptt-1/oat/arm64/base.odex (offset 0x1051000)\n\n#### Version of Realm and tooling\nRealm version(s): 2.2.2\n\nRealm sync feature enabled: no\n\nAndroid Studio version: IntelliJ IDEA 2016.3.4\n\nWhich Android version and device: Android 6.0 HTC 10", "url": "https://github.com/realm/realm-java/issues/4176", "user": "KimiChiu", "labels": ["O-Community", "Pipeline-On-Hold", "Reproduction-Required", "T-Bug-Crash"], "created": "2017-02-13 03:36:17", "closed": "2019-11-27 21:19:50", "commits": {}, "ttf": 1017.0002777777778, "commitsDetails": []}, {"title": "Invalid argument `EINVAL` when opening Realm on Xiaomi Mi5's external storage", "body": "\r\nConfiguring a Realm directory .\r\n\r\nI have the permission\r\n\r\n     uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"\r\n\r\nJava:\r\n\r\n        RealmConfiguration myConfig = new RealmConfiguration.Builder()\r\n                .name(\"myrealm.realm\")\r\n                .directory(new File(\"/storage/emulated/0/Realm\"))\r\n                .build();\r\n\r\n        Realm myRealm = Realm.getInstance(myConfig);\r\n\r\n\r\nLog:\r\n\r\nE/AndroidRuntime: FATAL EXCEPTION: main\r\n                                                                      Process: com.test.zzlayers, PID: 19942\r\n                                                                      io.realm.exceptions.RealmError: Unrecoverable error. Invalid argument in /Users/blakemeike/Working/release/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 94\r\n                                                                          at io.realm.internal.SharedRealm.nativeGetSharedRealm(Native Method)\r\n                                                                          at io.realm.internal.SharedRealm.getInstance(SharedRealm.java:211)\r\n                                                                          at io.realm.internal.SharedRealm.getInstance(SharedRealm.java:188)\r\n                                                                          at io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:124)\r\n                                                                          at io.realm.Realm.getInstance(Realm.java:227)\r\n                                                                          at com.wshunli.zzlayers.MainActivity.onCreate(MainActivity.java:36)\r\n                                                                          at android.app.Activity.performCreate(Activity.java:6679)\r\n                                                                          at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1119)\r\n                                                                          at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2618)\r\n                                                                          at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2726)\r\n                                                                          at android.app.ActivityThread.-wrap12(ActivityThread.java)\r\n                                                                          at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1477)\r\n                                                                          at android.os.Handler.dispatchMessage(Handler.java:102)\r\n                                                                          at android.os.Looper.loop(Looper.java:154)\r\n                                                                          at android.app.ActivityThread.main(ActivityThread.java:6126)\r\n                                                                          at java.lang.reflect.Method.invoke(Native Method)\r\n                                                                          at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:886)\r\n                                                                          at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:776)\r\n\r\n\r\n    Realm version: io.realm:realm-gradle-plugin:2.3.1\r\n    Realm sync feature enabled: no\r\n    Android Studio version: 2.2.3\r\n    Physical Device: Xiaomi Mi5 Version 7.1.1", "url": "https://github.com/realm/realm-java/issues/4174", "user": "wshunli", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2017-02-12 06:51:56", "closed": "2017-03-10 13:44:25", "commits": {}, "ttf": 26.00027777777778, "commitsDetails": []}, {"title": "Database corruption after SEGV_MAPERR", "body": "Hello,\r\n\r\nWe're experiencing high incidents of SIGSEGV SEGV_MAPERR crashes on recent versions of Realm. We can reliably reproduce these crashes by opening realms on multiple threads and conducting operations. Crashing multiple times (1-5) will usually cause the database to corrupt. Most of our tests have been with encrypted realms, however, I was able to reproduce the same results using an unencrypted realm with much effort.\r\n\r\n#### Observations\r\n\r\n- The probability of crash increases with the number of global realm instances open (N > 2 usually leads to crash).\r\n- copyFromRealm increases probability of crashes\r\n- Crashes usually occur during GC\r\n- Crashes eventually lead to database corruption\r\n- Corruption spreads, once a realm has corruption, doing operations on that realm will crash and eventually prevent the realm from opening entirely.\r\n- Write operations on main thread increase crashes\r\n- Encryption increases the probability but does not appear to be the cause\r\n\r\n#### Results\r\n\r\nThis is a small set of crashes from production. I have hundreds, but they're much of the same.\r\n\r\n```\r\nsignal 11 (SIGSEGV), code 1, fault addr 0x674db176 in tid 27384 (m.messenger.app)\r\nRevision: '0'\r\nABI: 'arm'\r\npid: 27384, tid: 27384, name: m.messenger.app  >>> com.messenger.app <<<\r\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x674db176\r\n    r0 674db172  r1 b7989f78  r2 00000861  r3 0000004e\r\n    r4 676e6172  r5 b7900f90  r6 00000068  r7 bef3c350\r\n    r8 00000001  r9 bef3c37c  sl 9ec858c0  fp b7fd5e78\r\n    ip b6cb05dc  sp bef3c348  lr b3b7152d  pc b3b5e6c2  cpsr 800e0030\r\n\r\nStack Trace:\r\n  RELADDR   FUNCTION                                                                             FILE:LINE\r\n  000846c2  realm::BpTreeNode::get_bptree_leaf(unsigned int) const+82                            unwind-c.c:?\r\n  00085b0b  realm::BpTree<realm::util::Optional<long long> >::get(unsigned int) const+20         unwind-c.c:?\r\n  0008da9f  realm::TimestampColumn::get(unsigned int) const+14                                   unwind-c.c:?\r\n  000babe9  realm::TimestampNode<realm::Equal>::find_first_local(unsigned int, unsigned int)+64  unwind-c.c:?\r\n  000c3215  realm::ParentNode::find_first(unsigned int, unsigned int)+44                         unwind-c.c:?\r\n  000c940f  realm::Query::count(unsigned int, unsigned int, unsigned int) const+166              unwind-c.c:?\r\n  0003cd51  Java_io_realm_internal_TableQuery_nativeCount+88                                     unwind-c.c:?\r\n  010092f3  offset 0xd10000                                                                      /data/app/com.messenger.app-1/oat/arm/base.odex\r\n\r\n-----------------------------------------------------\r\n\r\nsignal 11 (SIGSEGV), code 1, fault addr 0x4 in tid 6685 (IncomingMessage)\r\nRevision: '0'\r\nABI: 'arm'\r\npid: 6606, tid: 6685, name: IncomingMessage  >>> com.messenger.app <<<\r\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x4\r\n    r0 b80ccf60  r1 ffff97a0  r2 b80cd26c  r3 00000000\r\n    r4 b80ccf60  r5 ffff97a0  r6 00000000  r7 00000037\r\n    r8 00000001  r9 00000000  sl 000e0000  fp b3d62ab0\r\n    ip 0000000c  sp a0427cb0  lr b3c89e2b  pc b3c40540  cpsr 600f0030\r\n\r\nStack Trace:\r\n  RELADDR   FUNCTION                                                                                                               FILE:LINE\r\n  00097540  realm::SlabAlloc::do_translate(unsigned int) const+448                                                                 unwind-c.c:?\r\n  000e0e29  realm::ArrayStringLong::init_from_mem(realm::MemRef)+178                                                               unwind-c.c:?\r\n  000e0f5d  realm::StringColumn::StringColumn(realm::Allocator&, unsigned int, bool, unsigned int)+288                             unwind-c.c:?\r\n  000da4f1  realm::Table::refresh_column_accessors(unsigned int)+932                                                               unwind-c.c:?\r\n  000a7f4b  realm::Group::do_get_table(unsigned int, bool (*)(realm::Spec const&))+698                                             unwind-c.c:?\r\n  000da40b  realm::Table::refresh_column_accessors(unsigned int)+702                                                               unwind-c.c:?\r\n  000a7f4b  realm::Group::do_get_table(unsigned int, bool (*)(realm::Spec const&))+698                                             unwind-c.c:?\r\n  000a9cd5  realm::Group::do_get_or_add_table(realm::StringData, bool (*)(realm::Spec const&), void (*)(realm::Table&), bool*)+52  unwind-c.c:?\r\n  000243ed  Java_io_realm_internal_SharedRealm_nativeGetTable+172                                                                  unwind-c.c:?\r\n  00fff4e9  offset 0xd10000                                                                                                        /data/app/com.messenger.app-1/oat/arm/base.odex\r\n\r\n-----------------------------------------------------\r\n\r\nsignal 11 (SIGSEGV), code 1, fault addr 0xb766dfbf in tid 6722 (IncomingMessage)\r\nRevision: '0'\r\nABI: 'arm'\r\npid: 6695, tid: 6722, name: IncomingMessage  >>> com.messenger.app <<<\r\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0xb766dfbf\r\n    r0 b766dfc0  r1 b766dfbf  r2 ffcbf0af  r3 0000001c\r\n    r4 a027ad10  r5 00000114  r6 00000000  r7 00015b48\r\n    r8 00015b48  r9 00000001  sl 00000001  fp 00000000\r\n    ip e0000000  sp a027a998  lr b3c03539  pc b6cb24ac  cpsr a00d0010\r\n\r\nStack Trace:\r\n  RELADDR   FUNCTION                                                                                                                                                                       FILE:LINE\r\n  000184ac  memmove+444                                                                                                                                                                    bionic/libc/arch-arm/denver/bionic/memmove.S:210\r\n  000e1535  realm::ArrayBlob::replace(unsigned int, unsigned int, char const*, unsigned int, bool)+640                                                                                     unwind-c.c:?\r\n  000e2745  realm::ArrayStringLong::bptree_leaf_insert(unsigned int, realm::StringData, realm::TreeInsertBase&)+68                                                                         unwind-c.c:?\r\n  000de4e5  realm::StringColumn::leaf_insert(realm::MemRef, realm::ArrayParent&, unsigned int, realm::Allocator&, unsigned int, realm::BpTreeNode::TreeInsert<realm::StringColumn>&)+1052  unwind-c.c:?\r\n  000de897  unsigned int realm::BpTreeNode::bptree_append<realm::StringColumn>(realm::BpTreeNode::TreeInsert<realm::StringColumn>&)+94                                                     unwind-c.c:?\r\n  000dea9d  realm::StringColumn::bptree_insert(unsigned int, realm::StringData, unsigned int)+240                                                                                          unwind-c.c:?\r\n  000cb343  realm::StringColumn::insert_rows(unsigned int, unsigned int, unsigned int, bool)+54                                                                                            unwind-c.c:?\r\n  000cc28d  realm::Table::insert_empty_row(unsigned int, unsigned int)+64                                                                                                                  unwind-c.c:?\r\n  000269a9  Java_io_realm_internal_Table_nativeAddEmptyRow+164                                                                                                                             unwind-c.c:?\r\n  010012c7  offset 0xd10000  \r\n\r\n-----------------------------------------------------\r\n\r\nsignal 11 (SIGSEGV), code 1, fault addr 0x20 in tid 28460 (m.messenger.app)\r\nRevision: '0'\r\nABI: 'arm'\r\npid: 28460, tid: 28460, name: m.messenger.app  >>> com.messenger.app <<<\r\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x20\r\n    r0 b79431f0  r1 00000008  r2 b3818008  r3 00000000\r\n    r4 b79431f0  r5 b77efef8  r6 00000008  r7 b79431f0\r\n    r8 00000020  r9 b79431f0  sl 00000008  fp 00000000\r\n    ip b6ca45dc  sp bedcfa40  lr b3b9bca3  pc b3b9a0fa  cpsr 40070030\r\n\r\nStack Trace:\r\n  RELADDR   FUNCTION                                                                                     FILE:LINE\r\n  000cc0fa  realm::Table::get_column_base(unsigned int)+18                                               unwind-c.c:?\r\n  000cdc9f  realm::Table::connect_opposite_link_columns(unsigned int, realm::Table&, unsigned int)+10    unwind-c.c:?\r\n  000da4dd  realm::Table::refresh_column_accessors(unsigned int)+912                                     unwind-c.c:?\r\n  000a7f4b  realm::Group::do_get_table(unsigned int, bool (*)(realm::Spec const&))+698                   unwind-c.c:?\r\n  0005bb9b  realm::ObjectSchema::ObjectSchema(realm::Group const&, realm::StringData, unsigned int)+810  unwind-c.c:?\r\n  00061641  realm::ObjectStore::schema_from_group(realm::Group const&)+160                               unwind-c.c:?\r\n  0006a445  realm::Realm::init(std::shared_ptr<realm::_impl::RealmCoordinator>)+268                      unwind-c.c:?\r\n  0006d9fb  realm::_impl::RealmCoordinator::get_realm(realm::Realm::Config)+542                          unwind-c.c:?\r\n  00068eb3  realm::Realm::get_shared_realm(realm::Realm::Config)+46                                      unwind-c.c:?\r\n  00024e95  Java_io_realm_internal_SharedRealm_nativeGetSharedRealm+224                                  unwind-c.c:?\r\n  00fff521  offset 0xd10000                                                                              /data/app/com.messenger.app-1/oat/arm/base.odex\r\n\r\n-----------------------------------------------------\r\n\r\nsignal 11 (SIGSEGV), code 1, fault addr 0x41 in tid 6212 (m.messenger.app)\r\nRevision: '0'\r\nABI: 'arm'\r\npid: 6212, tid: 6212, name: m.messenger.app  >>> com.messenger.app <<<\r\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x41\r\n    r0 b8b885a4  r1 00000001  r2 00000001  r3 00000000\r\n    r4 be9b6410  r5 b8b88598  r6 b3beeef7  r7 00000002\r\n    r8 00000001  r9 b88439a0  sl 00000000  fp 9ee2b9d0\r\n    ip b3bc76dd  sp be9b63d0  lr b3c44863  pc b3b8f9d0  cpsr 200e0030\r\n\r\nStack Trace:\r\n  RELADDR   FUNCTION                                                                                     FILE:LINE\r\n  0001f9d0  realm::BpTree<long long>::get(unsigned int) const+8                                          unwind-c.c:?\r\n  000d485f  realm::StringData realm::Table::get<realm::StringData>(unsigned int, unsigned int) const+84  unwind-c.c:?\r\n  000d4897  realm::Table::get_string(unsigned int, unsigned int) const+4                                 unwind-c.c:?\r\n  00057701  Java_io_realm_internal_UncheckedRow_nativeGetString+36                                       unwind-c.c:?\r\n  00ff98bb  offset 0xd10000                                                                              /data/app/com.messenger.app-2/oat/arm/base.odex\r\n\r\n-----------------------------------------------------\r\n\r\nsignal 11 (SIGSEGV), code 1, fault addr 0xfffd7dfc in tid 11074 (RxComputationSc)\r\nRevision: '0'\r\nABI: 'arm'\r\npid: 11041, tid: 11074, name: RxComputationSc  >>> com.messenger.app <<<\r\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0xfffd7dfc\r\n    r0 b842d560  r1 9f3950d8  r2 00000001  r3 00000030\r\n    r4 fffd7df8  r5 b842d560  r6 00024000  r7 b814c4e8\r\n    r8 9f3950d8  r9 b83dca8c  sl 1303d8b0  fp 00000001\r\n    ip 0000000c  sp 9f3950c0  lr b3bfb147  pc b3bf9e4c  cpsr 000f0030\r\n\r\nStack Trace:\r\n  RELADDR   FUNCTION                                                                          FILE:LINE\r\n  00086e4c  realm::Array::init_from_mem(realm::MemRef)+14                                     unwind-c.c:?\r\n  00088143  realm::Array::update_from_parent(unsigned int)+62                                 unwind-c.c:?\r\n  000d48eb  realm::Table::update_from_parent(unsigned int)+76                                 unwind-c.c:?\r\n  000a6bcb  realm::SharedGroup::commit_and_continue_as_read()+218                             unwind-c.c:?\r\n  00074af5  realm::_impl::transaction::commit(realm::SharedGroup&, realm::BindingContext*)+8  unwind-c.c:?\r\n  000685cd  realm::Realm::commit_transaction()+32                                             unwind-c.c:?\r\n  0002302b  Java_io_realm_internal_SharedRealm_nativeCommitTransaction+50                     unwind-c.c:?\r\n  00fd6555  offset 0xd10000                                                                   /data/app/com.messenger.app-1/oat/arm/base.odex\r\n\r\n-----------------------------------------------------\r\n```\r\n\r\n#### Steps & Code to Reproduce\r\n\r\nEncryption: On. Minimum 1 contact, 1 message, with body.length ~= 1000.\r\nAt least 1 write thread, and 1 other thread. Global instance N=2 will eventually crash, N=3+ will crash faster.\r\n\r\nThis code will often produce UTF-16 crash for us as well. We can provide the project if necessary, but this is the relevant code.\r\n\r\n```java\r\npublic class Contact extends RealmObject {\r\n\t@PrimaryKey\r\n\tprivate String id;\r\n\r\n\t@Index\r\n\t@Required\r\n\tprivate String username;\r\n\r\n\tprivate String number;\r\n\r\n\t@Nullable\r\n\tprivate RealmList<Message> mMessageList;\r\n        ...\r\n}\r\npublic class Message extends RealmObject {\r\n\t@PrimaryKey\r\n\tprivate String id;\r\n\r\n\t@Index\r\n\tprivate String contactId;\r\n\r\n\t@Required\r\n\tprivate String type;\r\n\r\n\tprivate String body;\r\n\r\n\t@Required\r\n\tprivate Date dateCreated;\r\n}\r\nThread mWriteThread = new Thread(new Runnable() {\r\n\t@Override\r\n\tpublic void run() {\r\n\t\tfinal AtomicInteger i = new AtomicInteger(0);\r\n\t\twhile(mRunThreads) {\r\n\t\t\ttry (Realm realm = Realm.getInstance(REALM_CONFIG)) {\r\n\t\t\t\trealm.executeTransaction(new Realm.Transaction() {\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void execute(Realm realm) {\r\n\t\t\t\t\t\tContact contact = realm.where(Contact.class).equalTo(\"id\", CONTACT_ID).findFirst();\r\n\t\t\t\t\t\tcontact.setUsername(\"User\" + i.incrementAndGet());\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\nThread mReadThread = new Thread(new Runnable() {\r\n\t@Override\r\n\tpublic void run() {\r\n\t\twhile(mRunThreads) {\r\n\t\t\ttry (Realm realm = Realm.getInstance(REALM_CONFIG)) {\r\n\t\t\t\ttry (Realm realm = Realm.getInstance(REALM_CONFIG)) {\r\n\t\t\t\t\trealm.where(Contact.class).equalTo(\"id\", CONTACT_ID).findAllSorted(\"username\");\r\n\t\t\t\t\trealm.copyFromRealm(realm.where(Contact.class).equalTo(\"id\", CONTACT_ID).findAllSorted(\"username\"),0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\t\r\n```\r\n\r\n#### Mitigations\r\n\r\nReducing global realm instances to N<=2 and reducing as much load on Realm as possible decreases the chances of crash and corruption.\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 2.2.1, 2.2.2, 2.3.0\r\n\r\nRealm sync feature enabled: no\r\n\r\nEncryption: yes\r\n\r\nAndroid Studio version: 2.2.2\r\n\r\nWhich Android version and device: Android 6.0.1 (CM13) / CAF 6.0.1, OnePlus One / OnePlus X\r\n\r\n#### Next steps\r\n\r\nThis appears to be similar to issue reported here: https://github.com/realm/realm-core/issues/2383\r\n\r\nHow can we further debug and fix these issues?\r\n\r\nDo you have any way to detect and/or recover from corruption? ie open realm in RO and verify integrity.\r\n", "url": "https://github.com/realm/realm-java/issues/4128", "user": "bios-seiji", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2017-01-31 09:10:47", "closed": "2017-02-23 18:30:18", "commits": {}, "ttf": 23.00027777777778, "commitsDetails": []}, {"title": "NPE on handoverQueryPointer", "body": "New random bug happended, this problem can be related with the #2021.\r\n\r\n```java\r\njava.lang.NullPointerException: Attempt to invoke virtual method 'long io.realm.RealmQuery.handoverQueryPointer()' on a null object reference\r\n  at io.realm.HandlerController.completedAsyncRealmObject(HandlerController.java:653)\r\n  at io.realm.HandlerController.handleMessage(HandlerController.java:132)\r\n  at android.os.Handler.dispatchMessage(Handler.java:98)\r\n  at android.os.Looper.loop(Looper.java:135)\r\n  at android.app.ActivityThread.main(ActivityThread.java:5343)\r\n  at java.lang.reflect.Method.invoke(Native Method)\r\n  at java.lang.reflect.Method.invoke(Method.java:372)\r\n  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:905)\r\n  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:700)\r\n```\r\n\r\n- Realm 2.3.0\r\n- Kotlin 1.0.4\r\n- Gradle 2.14.1", "url": "https://github.com/realm/realm-java/issues/4086", "user": "ppamorim", "labels": ["T-Bug-Crash"], "created": "2017-01-20 19:19:41", "closed": "2017-02-20 13:46:22", "commits": {"0cd4f7d61f39c36bb7dbe461b69ddead3b2595ba": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 30.00027777777778, "commitsDetails": [{"commitHash": "0cd4f7d61f39c36bb7dbe461b69ddead3b2595ba", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "Ensure that Java ErrorCode's match Syncs", "body": "The Sync Error codes has shuffled around a bit in the last few releases, and we need to ensure that the Java equivalents are aligned.\r\n", "url": "https://github.com/realm/realm-java/issues/4046", "user": "cmelchior", "labels": ["T-Bug-Crash"], "created": "2017-01-15 18:55:58", "closed": "2017-01-17 07:55:06", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "SyncClient ignoring protocol error", "body": "Errors can be either client error or protocol error not both\r\nthe following [condition is false](https://github.com/realm/realm-java/blob/releases/realm/realm-library/src/main/cpp/objectserver_shared.hpp#L65-L66), which result in ignoring all recoverable errors including new tokens.\r\n", "url": "https://github.com/realm/realm-java/issues/4038", "user": "nhachicha", "labels": ["T-Bug-Crash"], "created": "2017-01-13 07:59:34", "closed": "2017-01-14 16:04:28", "commits": {"4e0b1ba9458f48f14240e4fa2850032863f7eedc": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}, "ee9e40f2384a3d850b13adf986bfa240315cbdeb": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}, "1fcb027babdfa883b0f7cb7907b867a9579a09e6": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "4e0b1ba9458f48f14240e4fa2850032863f7eedc", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ee9e40f2384a3d850b13adf986bfa240315cbdeb", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1fcb027babdfa883b0f7cb7907b867a9579a09e6", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["71855ff62aa2ccfe9117b78f6bdc80400a30fff1"], "nameRev": "1fcb027babdfa883b0f7cb7907b867a9579a09e6 tags/v2.3.0~12^2~7", "commitMessage": "Nh/fixes token renew (#4040)\n\n* fixes #4039 and fixes #4038", "commitDateTime": "2017-01-14 16:04:17", "authoredDateTime": "2017-01-14 16:04:17", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/main/cpp/objectserver_shared.hpp", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/internal/objectserver/BoundState.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/internal/objectserver/ObjectServerSession.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "realm/realm-library/src/objectServer/java/io/realm/internal/objectserver/ObjectServerUser.java", "insertions": 8, "deletions": 4, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BoundState.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.objectserver.BoundState.onError(io.realm.ObjectServerError)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ObjectServerSession.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.objectserver.ObjectServerSession.removeAccessToken()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ObjectServerUser.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.objectserver.ObjectServerUser.setRefreshToken(io.realm.internal.objectserver.Token)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.objectserver.ObjectServerUser.isAuthenticated(io.realm.SyncConfiguration)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.objectserver.ObjectServerUser.getAccessToken(java.net.URI)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.objectserver.ObjectServerUser.removeAccessToken(java.net.URI)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Crash with encrypted Realm and RxJava", "body": "I have been seeing below trace quite a lot while developing the app. I don't know steps how to reproduce this error.\r\n\r\nMy setup is following:\r\nRealm 2.2.2 - encrypted database\r\nRxJava2 2.0.3\r\nRxAndroid 2.0.1\r\nRetrofit2 Rx adapter 1.0.0\r\n\r\nThe crash is related to Consumer accept callback where information is written to database in schedulers IO thread.\r\n\r\n> 01-12 08:43:54.705 16215-30065/com.xxx.android A/libc: Fatal signal 7 (SIGBUS), code 1, fault addr 0x3ab in tid 30065 (RxCachedThreadS)\r\n01-12 08:43:54.818 490-490/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n01-12 08:43:54.819 490-490/? A/DEBUG: Build fingerprint: 'google/bullhead/bullhead:6.0.1/MHC19Q/2705526:user/release-keys'\r\n01-12 08:43:54.819 490-490/? A/DEBUG: Revision: 'rev_1.0'\r\n01-12 08:43:54.820 490-490/? A/DEBUG: ABI: 'arm64'\r\n01-12 08:43:54.820 490-490/? A/DEBUG: pid: 16215, tid: 30065, name: RxCachedThreadS  >>> com.xxx.android <<<\r\n01-12 08:43:54.821 490-490/? A/DEBUG: signal 7 (SIGBUS), code 1 (BUS_ADRALN), fault addr 0x3ab\r\n01-12 08:43:54.856 490-490/? A/DEBUG:     x0   0000007f766bf9a8  x1   00000000000003ab  x2   0000000000000000  x3   0000007f93753f68\r\n01-12 08:43:54.857 490-490/? A/DEBUG:     x4   0000000000000000  x5   0000000000000000  x6   0000007f79c57c18  x7   0000007f753bf4f0\r\n01-12 08:43:54.857 490-490/? A/DEBUG:     x8   0000007f753bd3a8  x9   0000007f753bf4f0  x10  0000000000000001  x11  0000007f7470e4e0\r\n01-12 08:43:54.858 490-490/? A/DEBUG:     x12  0000007f980d5b40  x13  0000000000000003  x14  0000000000000004  x15  00000000000000a0\r\n01-12 08:43:54.858 490-490/? A/DEBUG:     x16  00000000000000a1  x17  0000007f980d5000  x18  0000007f7470e4e0  x19  0000007f79a6bb60\r\n01-12 08:43:54.859 490-490/? A/DEBUG:     x20  0000007f749be900  x21  0000000000000003  x22  0000007f766bf600  x23  0000000000000000\r\n01-12 08:43:54.860 490-490/? A/DEBUG:     x24  0000000000000010  x25  0000000000000000  x26  0000007f79af2500  x27  000000000000000c\r\n01-12 08:43:54.860 490-490/? A/DEBUG:     x28  0000007f79c57c18  x29  0000007f753bd660  x30  0000007f7c247cf0\r\n01-12 08:43:54.861 490-490/? A/DEBUG:     sp   0000007f753bd660  pc   0000007f7c247d60  pstate 0000000060000000\r\n01-12 08:43:55.020 490-490/? A/DEBUG: backtrace:\r\n01-12 08:43:55.021 490-490/? A/DEBUG:     #00 pc 0000000000156d60  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so\r\n01-12 08:43:55.022 490-490/? A/DEBUG:     #01 pc 0000000000162240  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so\r\n01-12 08:43:55.022 490-490/? A/DEBUG:     #02 pc 000000000012a0d4  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so\r\n01-12 08:43:55.023 490-490/? A/DEBUG:     #03 pc 0000000000162204  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so\r\n01-12 08:43:55.023 490-490/? A/DEBUG:     #04 pc 000000000012a0d4  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so\r\n01-12 08:43:55.024 490-490/? A/DEBUG:     #05 pc 00000000001622c0  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so\r\n01-12 08:43:55.024 490-490/? A/DEBUG:     #06 pc 000000000012a0d4  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so\r\n01-12 08:43:55.025 490-490/? A/DEBUG:     #07 pc 00000000001622c0  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so\r\n01-12 08:43:55.025 490-490/? A/DEBUG:     #08 pc 000000000012a0d4  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so\r\n01-12 08:43:55.026 490-490/? A/DEBUG:     #09 pc 00000000001622c0  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so\r\n01-12 08:43:55.026 490-490/? A/DEBUG:     #10 pc 000000000012a0d4  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so\r\n01-12 08:43:55.027 490-490/? A/DEBUG:     #11 pc 0000000000162204  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so\r\n01-12 08:43:55.027 490-490/? A/DEBUG:     #12 pc 000000000012a0d4  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so\r\n01-12 08:43:55.028 490-490/? A/DEBUG:     #13 pc 00000000001622c0  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so\r\n01-12 08:43:55.028 490-490/? A/DEBUG:     #14 pc 000000000012a0d4  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so\r\n01-12 08:43:55.029 490-490/? A/DEBUG:     #15 pc 0000000000162204  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so\r\n01-12 08:43:55.029 490-490/? A/DEBUG:     #16 pc 000000000012a0d4  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so\r\n01-12 08:43:55.030 490-490/? A/DEBUG:     #17 pc 00000000000a4cac  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so\r\n01-12 08:43:55.030 490-490/? A/DEBUG:     #18 pc 00000000000abeac  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so\r\n01-12 08:43:55.031 490-490/? A/DEBUG:     #19 pc 00000000000be768  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so\r\n01-12 08:43:55.031 490-490/? A/DEBUG:     #20 pc 00000000000c26ec  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so\r\n01-12 08:43:55.032 490-490/? A/DEBUG:     #21 pc 00000000000bbcd0  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so\r\n01-12 08:43:55.033 490-490/? A/DEBUG:     #22 pc 000000000004d2c0  /data/app/com.xxx.android-1/lib/arm64/librealm-jni.so (Java_io_realm_internal_SharedRealm_nativeGetSharedRealm+384)\r\n01-12 08:43:55.033 490-490/? A/DEBUG:     #23 pc 000000000322afdc  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (long io.realm.internal.SharedRealm.nativeGetSharedRealm(long, io.realm.internal.RealmNotifier)+160)\r\n01-12 08:43:55.034 490-490/? A/DEBUG:     #24 pc 0000000003229fc8  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (io.realm.internal.SharedRealm io.realm.internal.SharedRealm.getInstance(io.realm.RealmConfiguration, io.realm.internal.RealmNotifier, io.realm.internal.SharedRealm$SchemaVersionListener, boolean)+764)\r\n01-12 08:43:55.034 490-490/? A/DEBUG:     #25 pc 0000000002ff64ac  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (void io.realm.BaseRealm.<init>(io.realm.RealmConfiguration)+608)\r\n01-12 08:43:55.035 490-490/? A/DEBUG:     #26 pc 000000000301f448  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (void io.realm.Realm.<init>(io.realm.RealmConfiguration)+76)\r\n01-12 08:43:55.035 490-490/? A/DEBUG:     #27 pc 000000000301ff8c  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (io.realm.Realm io.realm.Realm.createAndValidate(io.realm.RealmConfiguration, io.realm.internal.ColumnIndices[])+128)\r\n01-12 08:43:55.036 490-490/? A/DEBUG:     #28 pc 00000000030208bc  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (io.realm.Realm io.realm.Realm.createInstance(io.realm.RealmConfiguration, io.realm.internal.ColumnIndices[])+64)\r\n01-12 08:43:55.036 490-490/? A/DEBUG:     #29 pc 000000000307e0a4  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (io.realm.BaseRealm io.realm.RealmCache.createRealmOrGetFromCache(io.realm.RealmConfiguration, java.lang.Class)+1240)\r\n01-12 08:43:55.037 490-490/? A/DEBUG:     #30 pc 0000000003021684  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (io.realm.Realm io.realm.Realm.getInstance(io.realm.RealmConfiguration)+232)\r\n01-12 08:43:55.037 490-490/? A/DEBUG:     #31 pc 0000000002409014  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (io.realm.Realm com.xxx.android.database.realm.RealmHelper.getRealm(io.realm.RealmConfiguration)+904)\r\n01-12 08:43:55.038 490-490/? A/DEBUG:     #32 pc 00000000026d6040  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (boolean com.xxx.android.database.realm.RealmImpl.addContainers(java.util.List, boolean)+116)\r\n01-12 08:43:55.039 490-490/? A/DEBUG:     #33 pc 0000000002718d5c  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (void com.xxx.android.model.AccountsModel$2.accept(com.xxx.android.network.response.BaseResponse)+1584)\r\n01-12 08:43:55.039 490-490/? A/DEBUG:     #34 pc 0000000002719178  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (void com.xxx.android.model.AccountsModel$2.accept(java.lang.Object)+108)\r\n01-12 08:43:55.040 490-490/? A/DEBUG:     #35 pc 0000000002f04fd0  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (void io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver.onNext(java.lang.Object)+132)\r\n01-12 08:43:55.040 490-490/? A/DEBUG:     #36 pc 0000000002f4d4a0  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (void io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver.onNext(java.lang.Object)+84)\r\n01-12 08:43:55.041 490-490/? A/DEBUG:     #37 pc 0000000002211e7c  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (void com.jakewharton.retrofit2.adapter.rxjava2.BodyObservable$BodyObserver.onNext(retrofit2.Response)+208)\r\n01-12 08:43:55.041 490-490/? A/DEBUG:     #38 pc 0000000002211d4c  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (void com.jakewharton.retrofit2.adapter.rxjava2.BodyObservable$BodyObserver.onNext(java.lang.Object)+112)\r\n01-12 08:43:55.042 490-490/? A/DEBUG:     #39 pc 00000000022431c0  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (void com.jakewharton.retrofit2.adapter.rxjava2.CallObservable.subscribeActual(io.reactivex.Observer)+340)\r\n01-12 08:43:55.042 490-490/? A/DEBUG:     #40 pc 00000000022392e8  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (void io.reactivex.Observable.subscribe(io.reactivex.Observer)+348)\r\n01-12 08:43:55.043 490-490/? A/DEBUG:     #41 pc 0000000002242dac  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (void com.jakewharton.retrofit2.adapter.rxjava2.BodyObservable.subscribeActual(io.reactivex.Observer)+160)\r\n01-12 08:43:55.044 490-490/? A/DEBUG:     #42 pc 00000000022392e8  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (void io.reactivex.Observable.subscribe(io.reactivex.Observer)+348)\r\n01-12 08:43:55.044 490-490/? A/DEBUG:     #43 pc 0000000002f4cf5c  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (void io.reactivex.internal.operators.observable.ObservableSubscribeOn$1.run()+112)\r\n01-12 08:43:55.044 490-490/? A/DEBUG:     #44 pc 0000000002da1588  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (void io.reactivex.Scheduler$1.run()+76)\r\n01-12 08:43:55.045 490-490/? A/DEBUG:     #45 pc 0000000002f96a48  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (void io.reactivex.internal.schedulers.ScheduledRunnable.run()+92)\r\n01-12 08:43:55.046 490-490/? A/DEBUG:     #46 pc 0000000002f96500  /data/app/com.xxx.android-1/oat/arm64/base.odex (offset 0x1362000) (java.lang.Object io.reactivex.internal.schedulers.ScheduledRunnable.call()+68)\r\n01-12 08:43:55.046 490-490/? A/DEBUG:     #47 pc 000000007259ba80  /data/dalvik-cache/arm64/system@framework@boot.oat (offset 0x1ede000)\r\n01-12 08:43:56.244 490-490/? A/DEBUG: Tombstone written to: /data/tombstones/tombstone_05\r\n01-12 08:43:56.244 490-490/? E/DEBUG: AM write failed: Broken pipe", "url": "https://github.com/realm/realm-java/issues/4023", "user": "NirpE", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2017-01-12 06:54:07", "closed": "2017-08-25 03:40:48", "commits": {}, "ttf": 224.00027777777777, "commitsDetails": []}, {"title": "Unrecoverable error. Permission denied in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp", "body": "**Goal**\r\n\r\nSharing a crash log (as reported by Crashlytics) on specific devices.\r\n\r\n**Expected Results**\r\n\r\nTo verify if my current API usage is correct and hopefully find a resolution.\r\n\r\n**Actual Results**\r\n\r\n> Fatal Exception: io.realm.exceptions.RealmError: Unrecoverable error. Permission denied in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 92\r\n>        at io.realm.internal.SharedRealm.nativeGetSharedRealm(SharedRealm.java)\r\n>        at io.realm.internal.SharedRealm.getInstance(SharedRealm.java:205)\r\n>        at io.realm.internal.SharedRealm.getInstance(SharedRealm.java:182)\r\n>        at io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:124)\r\n>        at io.realm.Realm.getInstance(Realm.java:227)\r\n>        at com.project.base.BaseRealm.(BaseRealm.java)\r\n>        at com.project.helpers.RepoImpl.(RepoImpl.java)\r\n>        at com.project.MainActivity.initialiseHelpers(MainActivity.java:272)\r\n>        at com.project.MainActivity.onCreate(MainActivity.java:162)\r\n>        at android.app.ActivityThread.handleCreateService(ActivityThread.java:2937)\r\n>        at android.app.ActivityThread.access$1900(ActivityThread.java:174)\r\n>        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1403)\r\n>        at android.os.Handler.dispatchMessage(Handler.java:102)\r\n>        at android.os.Looper.loop(Looper.java:146)\r\n>        at android.app.ActivityThread.main(ActivityThread.java:5752)\r\n>        at java.lang.reflect.Method.invokeNative(Method.java)\r\n>        at java.lang.reflect.Method.invoke(Method.java:515)\r\n>        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1291)\r\n>        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1107)\r\n>        at dalvik.system.NativeStart.main(NativeStart.java)\r\n\r\n**Code:** \r\n\r\n```\r\npublic class BaseRealm {\r\n    private RealmConfiguration config = new RealmConfiguration.Builder().build();\r\n    protected Realm mRealm = Realm.getInstance(config);\r\n}\r\n```\r\n\r\n```\r\npublic class RepoImpl extends BaseRealm implements RepoInterface {\r\n    @Override\r\n    public void add(String item) {\r\n        MyPOJO data = new MyPOJO();\r\n        data.setItem(item);\r\n        data.setTimestamp(System.currentTimeMillis());\r\n        mRealm.beginTransaction();\r\n        mRealm.copyToRealmOrUpdate(data);\r\n        mRealm.commitTransaction();\r\n    }\r\n    @Override\r\n    public int getResultCount() {\r\n        return mRealm.where(MyPOJO.class).findAllSorted(\"timestamp\", Sort.DESCENDING).size();\r\n    }\r\n    @Override\r\n    public MyPOJO getItemObjectByIndex(int index) {\r\n        try {\r\n            return mRealm.where(MyPOJO.class).findAllSorted(\"timestamp\", Sort.DESCENDING).get(index);\r\n        } catch (Exception e) {\r\n            return null;\r\n        }\r\n    }\r\n    @Override\r\n    public void remove(int position) {\r\n        mRealm.beginTransaction();\r\n        mRealm.where(MyPOJO.class).findAllSorted(\"timestamp\", Sort.DESCENDING).deleteFromRealm(position);\r\n        mRealm.commitTransaction();\r\n    }\r\n    @Override\r\n    public void closeRealm() {\r\n        mRealm.close();\r\n    }\r\n    @Override\r\n    public Realm getRealm() {\r\n        return mRealm;\r\n    }\r\n    @Override\r\n    public void clearRealm() {\r\n        getRealm().beginTransaction();\r\n        getRealm().deleteAll();\r\n        getRealm().commitTransaction();\r\n    }\r\n```\r\n\r\nThe RepoImpl instance is being created from two separate classes and the realm instance is being closed only when onDestroy() is triggered in each of the classes. clearRealm() is currently never called.\r\n\r\n**Realm version(s): 2.2.1**\r\n\r\n**Android Studio version: 2.2.3**\r\n\r\n**Which Android version and device:** Samsung SM-A500F (Android 6.0) and Lenovo S1a40 (Android 4.4.4)\r\n\r\nIt's seemingly working well on other devices.\r\n", "url": "https://github.com/realm/realm-java/issues/3972", "user": "sabergeek", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2017-01-01 16:59:17", "closed": "2017-12-14 02:52:01", "commits": {}, "ttf": 346.0002777777778, "commitsDetails": []}, {"title": "signal 7 (SIGBUS), code 2 (BUS_ADRERR)", "body": "* Device : Nexus 5\r\n* OS : Android 6.0.1\r\n* Realm Version : 2.2.1\r\n\r\n* When it occurred:\r\nin other app, user share image/text to our app. when that time, it occurred after updating database.\r\n\r\nmy application avoid to initiate in multi process like this:\r\n```java\r\nActivityManager activityManager =\r\n        (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);\r\nfor (ActivityManager.RunningAppProcessInfo processInfo : activityManager.getRunningAppProcesses()) {\r\n    if (Process.myPid() == processInfo.pid) {\r\n        if (TextUtils.equals(processInfo.processName, BuildConfig.APPLICATION_ID)) {\r\n            Realm.init(context);\r\n            Realm.setDefaultConfiguration(realmConfiguration());\r\n        }\r\n        break;\r\n    }\r\n}\r\n```\r\n\r\n* error log\r\n```\r\n *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n Build fingerprint: 'google/hammerhead/hammerhead:6.0.1/M4B30X/3237893:user/release-keys'\r\n Revision: '11'\r\n ABI: 'arm'\r\n pid: 15476, tid: 15615, name: EventThread  >>> com.tosslab.jandi.app <<<\r\n signal 7 (SIGBUS), code 2 (BUS_ADRERR), fault addr 0x94675000\r\n     r0 8d038090  r1 94674ff0  r2 00fc7f28  r3 00000008\r\n     r4 92618fa8  r5 00fffff0  r6 00fffff0  r7 00000000\r\n     r8 00000000  r9 00000000  sl 00fffff0  fp 92618f50\r\n12-27 15:07:53.933 199-199/? A/DEBUG:     ip 00000000  sp 92618e30  lr 9e75a51b  pc b6c9765a  cpsr 200b0030\r\n backtrace:\r\n     #00 pc 0001765a  /system/lib/libc.so (__memcpy_base+81)\r\n     #01 pc 000e1517  /data/app/com.tosslab.jandi.app-2/lib/arm/librealm-jni.so\r\n     #02 pc 000e14ef  /data/app/com.tosslab.jandi.app-2/lib/arm/librealm-jni.so\r\n     #03 pc 000e2cab  /data/app/com.tosslab.jandi.app-2/lib/arm/librealm-jni.so\r\n     #04 pc 000df94b  /data/app/com.tosslab.jandi.app-2/lib/arm/librealm-jni.so\r\n     #05 pc 000d78b3  /data/app/com.tosslab.jandi.app-2/lib/arm/librealm-jni.so\r\n     #06 pc 0005786d  /data/app/com.tosslab.jandi.app-2/lib/arm/librealm-jni.so (Java_io_realm_internal_UncheckedRow_nativeSetString+76)\r\n     #07 pc 024e57e5  /data/app/com.tosslab.jandi.app-2/oat/arm/base.odex (offset 0x15b3000)\r\n```", "url": "https://github.com/realm/realm-java/issues/3951", "user": "ZeroBrain", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2016-12-27 06:20:11", "closed": "2016-12-28 02:43:57", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "UnsatisfiedLinkError while loading native library librealm-jni.so.2.2.1", "body": "#### Goal\r\n\r\n> What do you want to achieve?\r\n\r\nRealm initialization with success\r\n\r\n#### Actual Results\r\n\r\n```\r\nException java.lang.UnsatisfiedLinkError: Cannot load library: soinfo_relocate(linker.cpp:992): cannot locate symbol \"pipe2\" referenced by \"librealm-jni.so.2.2.1\"...\r\njava.lang.Runtime.load (Runtime.java:341)\r\njava.lang.System.load (System.java:500)\r\ncom.getkeepsafe.a.e.b (SystemLibraryLoader.java:29)\r\ncom.getkeepsafe.a.d.c (ReLinkerInstance.java:198)\r\ncom.getkeepsafe.a.d.a (ReLinkerInstance.java:136)\r\ncom.getkeepsafe.a.c.a (ReLinker.java:70)\r\ncom.getkeepsafe.a.c.a (ReLinker.java:57)\r\nio.realm.internal.j.a (RealmCore.java:61)\r\nio.realm.v.a (Realm.java:187)\r\nio.github.rubensousa.euromillions.App.onCreate (App.java:45)\r\nandroid.app.Instrumentation.callApplicationOnCreate (Instrumentation.java:1065)\r\nandroid.app.ActivityThread.handleBindApplication (ActivityThread.java:4640)\r\nandroid.app.ActivityThread.access$1300 (ActivityThread.java:165)\r\nandroid.app.ActivityThread$H.handleMessage (ActivityThread.java:1433)\r\nandroid.os.Handler.dispatchMessage (Handler.java:107)\r\nandroid.os.Looper.loop (Looper.java:194)\r\nandroid.app.ActivityThread.main (ActivityThread.java:5370)\r\njava.lang.reflect.Method.invokeNative (Method.java)\r\njava.lang.reflect.Method.invoke (Method.java:525)\r\ncom.android.internal.os.ZygoteInit$MethodAndArgsCaller.run (ZygoteInit.java:833)\r\ncom.android.internal.os.ZygoteInit.main (ZygoteInit.java:600)\r\ndalvik.system.NativeStart.main (NativeStart.java)\r\n```\r\n#### Steps & Code to Reproduce\r\n\r\nCouldn't debug this since it happens in a rare chinese tablet: https://secretspecs.com/model/teclast/teclast-g17(b5dv/\r\n\r\nThe exception is thrown while attempting to call:\r\n\r\n```java\r\nRealm.init(this);\r\n```\r\nI think this is probably a Relinker issue and not a realm one, but I figured I should post this here.\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 2.2.1\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.2.3\r\n\r\nWhich Android version and device: Teclast G17(B5DV) API 17 (4.2.2) https://secretspecs.com/model/teclast/teclast-g17(b5dv/\r\n", "url": "https://github.com/realm/realm-java/issues/3945", "user": "rubensousa", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2016-12-23 23:45:26", "closed": "2017-01-04 01:48:11", "commits": {"70dd680af5c7d9100df100a78c328f6ab8022f7a": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "b97b0888a4d9303dc8e81ce857909ad0ed0490a4": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "70dd680af5c7d9100df100a78c328f6ab8022f7a", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b97b0888a4d9303dc8e81ce857909ad0ed0490a4", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["c385ecda12935f44378f2b33adb52702066c30cd"], "nameRev": "b97b0888a4d9303dc8e81ce857909ad0ed0490a4 tags/v2.2.2~5", "commitMessage": "Update object store\n\nto 814beb5a1e9\nFix #3945\nFix #3964\n", "commitDateTime": "2017-01-04 09:47:58", "authoredDateTime": "2017-01-03 23:54:55", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "realm/realm-library/src/main/cpp/object-store", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "RealmLog causes IllegalStateException", "body": "**Steps**\r\n1. Run an asynchronous query using Realm\r\n2. Use the RxJava API (query.asObservable)\r\n3. Inside of a map operator, check if the RealmObject returned is loaded and is valid\r\n\r\n**Desired behavior**\r\nThe boolean checks return true or false and I go about my day.\r\n\r\n**Encountered behavior**\r\nIn the case of isValid being false, RealmLog attempts to write this event and calls toString() on the Realm proxy class. This causes an IllegalStateException with the message:  Can't access a row that hasn't been loaded or represents 'null', make sure the instance is loaded and is valid by calling 'RealmObject.isLoaded() && RealmObject.isValid()'.\r\n\r\n**StackTrace**\r\n\r\n<code>\r\nFATAL EXCEPTION: main\r\n                                                        Process: org.unos.transnet.release, PID: 12048\r\n                                                                           java.lang.IllegalStateException: Can't access a row that hasn't been loaded or represents 'null', make sure the instance is loaded and is valid by calling 'RealmObject.isLoaded() && RealmObject.isValid()'.\r\n                                                                               at io.realm.internal.Row$1.isNullLink(Row.java:191)\r\n                                                                               at io.realm.ProfileEntityRealmProxy.realmGet$user(ProfileEntityRealmProxy.java:100)\r\n                                                                               at org.unos.ett.api.entity.ProfileEntity.toString(ProfileEntity.java:31)\r\n                                                                               at java.util.Formatter.transform(Formatter.java:1421)\r\n                                                                               at java.util.Formatter.doFormat(Formatter.java:1081)\r\n                                                                               at java.util.Formatter.format(Formatter.java:1042)\r\n                                                                               at java.util.Formatter.format(Formatter.java:1011)\r\n                                                                               at java.lang.String.format(String.java:1554)\r\n                                                                               at java.lang.String.format(String.java:1528)\r\n                                                                               at io.realm.log.RealmLog.log(RealmLog.java:360)\r\n                                                                               at io.realm.log.RealmLog.trace(RealmLog.java:203)\r\n                                                                               at io.realm.log.RealmLog.trace(RealmLog.java:192)\r\n                                                                               at io.realm.HandlerController.completedAsyncRealmObject(HandlerController.java:636)\r\n                                                                               at io.realm.HandlerController.handleMessage(HandlerController.java:131)\r\n                                                                               at android.os.Handler.dispatchMessage(Handler.java:98)\r\n                                                                               at android.os.Looper.loop(Looper.java:148)\r\n                                                                               at android.app.ActivityThread.main(ActivityThread.java:5417)\r\n                                                                               at java.lang.reflect.Method.invoke(Native Method)\r\n                                                                               at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)\r\n                                                                               at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616) </code>\r\n\r\n#### Code Sample\r\n\r\n```java\r\n\r\nrealm.where(entityClass)\r\n                .findFirstAsync()\r\n                .asObservable()\r\n                .cast(entityClass)\r\n                .map(new Func1<Entity, Optional<Entity>>() {\r\n            @Override\r\n            public Optional<Entity> call(Entity entity) {\r\n                boolean loaded = entity.load();\r\n                if (loaded && entity.isValid()) {\r\n                    return Optional.of(entity);\r\n                } else {\r\n                    return Optional.absent();\r\n                }\r\n            }\r\n        })\r\n                .first();\r\n\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 2.1.1\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.2.3\r\n\r\nWhich Android version and device: Android Emulator, API 23", "url": "https://github.com/realm/realm-java/issues/3928", "user": "ghost", "labels": ["T-Bug-Crash"], "created": "2016-12-19 21:43:36", "closed": "2017-02-20 13:43:07", "commits": {}, "ttf": 62.000277777777775, "commitsDetails": []}, {"title": "It will cause crashed in HUAWEI mobile phone...", "body": "\r\n", "url": "https://github.com/realm/realm-java/issues/3892", "user": "yuanhoujun", "labels": ["T-Bug-Crash"], "created": "2016-12-10 07:04:51", "closed": "2016-12-14 13:46:32", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "io.realm.exceptions.RealmError  Unrecoverable error. Permission denied", "body": "Version:Realm2.2.1\r\nRealm mRealm = Realm.getDefaultInstance();\r\n\r\nUnrecoverable error. Permission denied in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 92\r\n\r\nio.realm.internal.SharedRealm.nativeGetSharedRealm(Native Method)\r\nio.realm.internal.SharedRealm.a(SharedRealm.java:205)\r\nio.realm.internal.SharedRealm.a(SharedRealm.java:182)\r\nio.realm.t.a(RealmCache.java:124)\r\nio.realm.r.l(Realm.java:209)\r\n\r\n![image](https://cloud.githubusercontent.com/assets/4246885/20739254/1730d5cc-b6f4-11e6-9892-f3aa3f002390.png)\r\n", "url": "https://github.com/realm/realm-java/issues/3859", "user": "maisiji", "labels": ["Reproduction-Required", "T-Bug-Crash", "T-Duplicate"], "created": "2016-11-30 03:54:59", "closed": "2017-02-15 02:52:23", "commits": {}, "ttf": 76.00027777777778, "commitsDetails": []}, {"title": "Realm corrupted the database (Fatal signal 11 (SIGSEGV), code 1, fault addr 0x28 in tid 6777)", "body": "Hi,\n\nI had the same error like here posted, but this issue ticket was closed. So I opened a new one.\n**Bug:**\nhttps://github.com/realm/realm-java/issues/3765\n\n**Information:**\nI use realm version 2.1.1, updating to 2.2.0 don\u00b4t solve the problem.\n\nThe realm database is corrupted after a crash. After restart the app:\nRealm.init(context) (works)\nRealmConfiguration.Builder().schemaVersion(10).migration(DatabaseMigration(context)).build() (works)\nRealm.setDefaultConfiguration(configuration) (works)\nRealm.getDefaultInstance() (crashed)\nIt looks like if I read or write on realm the app crashed.\n\n**Work around:**\nCurrently we have solved the problem by downgrade the realm version to v2.0.2\nMore Information that we got:\nWe use a sync adapter and if we got much data the realm crashed while we update data after syncing it.\nBut in v2.0.2 we can\u00b4t repro it at the moment.\n\n**Log:**\n11-24 13:16:20.240 22850-22850/com.packagename.debug A/libc: Fatal signal 11 (SIGSEGV), code 1, fault addr 0x4 in tid 22850 (.packagename.debug)\n                                                                  [ 11-24 13:16:20.240   163:  163 W/         ]\n                                                                  debuggerd: handling request: pid=22850 uid=10078 gid=10078 tid=22850\n11-24 13:16:20.313 22888-22888/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n11-24 13:16:20.313 22888-22888/? A/DEBUG: Build fingerprint: 'google/marlin/marlin:7.1/NDE63P/3332229:user/release-keys'\n11-24 13:16:20.313 22888-22888/? A/DEBUG: Revision: '0'\n11-24 13:16:20.313 22888-22888/? A/DEBUG: ABI: 'arm'\n11-24 13:16:20.314 22888-22888/? A/DEBUG: pid: 22850, tid: 22850, name: .packagename.debug  >>> com.packagename.debug <<<\n11-24 13:16:20.314 22888-22888/? A/DEBUG: signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x4\n11-24 13:16:20.314 22888-22888/? A/DEBUG:     r0 9ea57008  r1 ffffed22  r2 9ea57a34  r3 00000000\n11-24 13:16:20.314 22888-22888/? A/DEBUG:     r4 9ea57008  r5 ffffed22  r6 00000000  r7 000000cf\n11-24 13:16:20.314 22888-22888/? A/DEBUG:     r8 00000020  r9 00000000  sl 00240000  fp a29b4ab0\n11-24 13:16:20.314 22888-22888/? A/DEBUG:     ip 00000002  sp bef6e670  lr a2882a37  pc a2892540  cpsr 60070030\n11-24 13:16:20.322 22888-22888/? A/DEBUG: backtrace:\n11-24 13:16:20.322 22888-22888/? A/DEBUG:     #00 pc 00097540  /data/app/com.packagename.debug-1/lib/arm/librealm-jni.so\n11-24 13:16:20.323 22888-22888/? A/DEBUG:     #01 pc 00087a35  /data/app/com.packagename.debug-1/lib/arm/librealm-jni.so\n11-24 13:16:20.323 22888-22888/? A/DEBUG:     #02 pc 00087aa7  /data/app/com.packagename.debug-1/lib/arm/librealm-jni.so\n11-24 13:16:20.323 22888-22888/? A/DEBUG:     #03 pc 000daad9  /data/app/com.packagename.debug-1/lib/arm/librealm-jni.so\n11-24 13:16:20.323 22888-22888/? A/DEBUG:     #04 pc 000a7f4b  /data/app/com.packagename.debug-1/lib/arm/librealm-jni.so\n11-24 13:16:20.323 22888-22888/? A/DEBUG:     #05 pc 000da48d  /data/app/com.packagename.debug-1/lib/arm/librealm-jni.so\n11-24 13:16:20.323 22888-22888/? A/DEBUG:     #06 pc 000a7f4b  /data/app/com.packagename.debug-1/lib/arm/librealm-jni.so\n11-24 13:16:20.323 22888-22888/? A/DEBUG:     #07 pc 0005bb9b  /data/app/com.packagename.debug-1/lib/arm/librealm-jni.so\n11-24 13:16:20.323 22888-22888/? A/DEBUG:     #08 pc 00061641  /data/app/com.packagename.debug-1/lib/arm/librealm-jni.so\n11-24 13:16:20.323 22888-22888/? A/DEBUG:     #09 pc 0006a445  /data/app/com.packagename.debug-1/lib/arm/librealm-jni.so\n11-24 13:16:20.323 22888-22888/? A/DEBUG:     #10 pc 0006d9fb  /data/app/com.packagename.debug-1/lib/arm/librealm-jni.so\n11-24 13:16:20.323 22888-22888/? A/DEBUG:     #11 pc 00068eb3  /data/app/com.packagename.debug-1/lib/arm/librealm-jni.so\n11-24 13:16:20.323 22888-22888/? A/DEBUG:     #12 pc 00024e95  /data/app/com.packagename.debug-1/lib/arm/librealm-jni.so (Java_io_realm_internal_SharedRealm_nativeGetSharedRealm+224)\n11-24 13:16:20.323 22888-22888/? A/DEBUG:     #13 pc 00af4819  /data/app/com.packagename.debug-1/oat/arm/base.odex (offset 0xa30000)", "url": "https://github.com/realm/realm-java/issues/3843", "user": "tkrawetzke", "labels": ["O-Community", "Pipeline-On-Hold", "Reproduction-Required", "T-Bug-Crash"], "created": "2016-11-25 09:13:14", "closed": "2019-11-27 21:10:00", "commits": {}, "ttf": 1097.0002777777777, "commitsDetails": []}, {"title": "io.realm.exceptions.RealmError: Unrecoverable error.", "body": "Caused by: io.realm.exceptions.RealmError: Unrecoverable error. Failure when computing UTF-16 size error_code = 5; retcode = 56; StringData.size = 74; StringData.data = http://img4.bitautoimg.com/autoalbum/files/20160AAAA in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_UncheckedRow.cpp line 136\r\n\r\nversion 2.0.2", "url": "https://github.com/realm/realm-java/issues/3825", "user": "zhangwenjia616", "labels": ["T-Bug-Crash"], "created": "2016-11-21 14:02:04", "closed": "2017-01-05 13:53:01", "commits": {}, "ttf": 44.000277777777775, "commitsDetails": []}, {"title": "OutOfMemoryError: std::bad_alloc in io_realm_internal_TableQuery.cpp line 1285", "body": "#### Goal\r\n\r\n> Our app logs metrics from a wearable (sent via BTLE). Metrics are sent and saved to Realm every second. The Realm is observed to display the metrics back to the user. Other metrics are periodically sent to a backend (and then removed from the Realm).\r\n\r\nThe app operates for about 5 hours before getting closed due to an OoM. The Realms all seem to be closed correctly (no warnings about about open Realms).\r\n\r\n#### Expected Results\r\n\r\n> I'm expecting uninterrupted periods of use. \r\n\r\n#### Actual Results\r\n\r\nLogcat reveals the following at the point that the app is closed:\r\n\r\n> 11-21 05:15:33.808 27702-28621/com.snuza.picoconnect E/REALM_JNI: jni: ThrowingException 4, std::bad_alloc in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_TableQuery.cpp line 1285, .\r\n11-21 05:15:33.809 27702-28655/com.snuza.picoconnect E/REALM_JNI: jni: ThrowingException 4, std::bad_alloc in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_TableQuery.cpp line 1285, .\r\n11-21 05:15:33.841 27702-28621/com.snuza.picoconnect E/REALM_JNI: Exception has been throw: std::bad_alloc in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_TableQuery.cpp line 1285 \r\n11-21 05:15:33.841 27702-28655/com.snuza.picoconnect E/REALM_JNI: Exception has been throw: std::bad_alloc in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_TableQuery.cpp line 1285 \r\n11-21 05:15:33.855 27702-28621/com.snuza.picoconnect E/REALM_JAVA: io.realm.internal.OutOfMemoryError: std::bad_alloc in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_TableQuery.cpp line 1285 \r\n                                                                       at io.realm.internal.TableQuery.nativeBatchUpdateQueries(Native Method)\r\n                                                                       at io.realm.internal.TableQuery.batchUpdateQueries(TableQuery.java:500)\r\n                                                                       at io.realm.internal.async.QueryUpdateTask.run(QueryUpdateTask.java:87)\r\n                                                                       at io.realm.internal.async.BgPriorityRunnable.run(BgPriorityRunnable.java:34)\r\n                                                                       at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\r\n                                                                       at java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n                                                                       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n                                                                       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n                                                                       at java.lang.Thread.run(Thread.java:818)\r\n\r\n#### Steps & Code to Reproduce\r\n\r\n> Approximately 5 hours of runtime.\r\n\r\n#### Code Sample\r\n\r\n> N/A\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 2.2.1\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.3 Canary\r\n\r\nWhich Android version and device: Android 5.1.1 on the Nexus 5", "url": "https://github.com/realm/realm-java/issues/3821", "user": "mitchwongho", "labels": ["T-Bug-Crash"], "created": "2016-11-21 05:49:17", "closed": "2016-11-30 10:48:06", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "Realm crashes on Android 2.3 device", "body": "This issue is reported by @takke on twitter (http://twitter.com/takke/status/798782520749801472).\r\n\r\n#### Goal\r\n\r\nWorks on Android 2.3.x devices.\r\n\r\n#### Expected Results\r\n\r\nno crash\r\n\r\n#### Actual Results\r\n\r\nWhen executing `Realm.getDefaultInstance()`, the app crash with following dump in logcat.\r\n\r\n```\r\n01-06 10:32:12.689 I/DEBUG   (  747): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n01-06 10:32:12.689 I/DEBUG   (  747): Build fingerprint: 'google/passion/passion:2.3.6/GRK39F/189904:user/release-keys'\r\n01-06 10:32:12.689 I/DEBUG   (  747): pid: 845, tid: 845  >>> jp.takke.realmandroid23issuesample <<<\r\n01-06 10:32:12.689 I/DEBUG   (  747): signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr de5685a7\r\n01-06 10:32:12.689 I/DEBUG   (  747):  r0 00000007  r1 00000001  r2 800a3d68  r3 00000000\r\n01-06 10:32:12.689 I/DEBUG   (  747):  r4 0000ce60  r5 0000abe0  r6 de5685a7  r7 00000000\r\n01-06 10:32:12.689 I/DEBUG   (  747):  r8 0000abe0  r9 4214cb28  10 0000abe0  fp 800a5368\r\n01-06 10:32:12.689 I/DEBUG   (  747):  ip 800a56cc  sp beef23b0  lr 8004a719  pc 8004a718  cpsr 60000030\r\n01-06 10:32:12.699 I/DEBUG   (  747):  d0  2e746c756166652e  d1  2f73656c69662f6e\r\n01-06 10:32:12.699 I/DEBUG   (  747):  d2  646e616d6c61656f  d3  7369333264696f74\r\n01-06 10:32:12.699 I/DEBUG   (  747):  d4  2f73656c69662f65  d5  2e746c7561666564\r\n01-06 10:32:12.699 I/DEBUG   (  747):  d6  616d2e6d6c616572  d7  746e656d6567616e\r\n01-06 10:32:12.699 I/DEBUG   (  747):  d8  0000000000000000  d9  0000000000000000\r\n01-06 10:32:12.699 I/DEBUG   (  747):  d10 0000000000000000  d11 0000000000000000\r\n01-06 10:32:12.699 I/DEBUG   (  747):  d12 0000000000000000  d13 0000000000000000\r\n01-06 10:32:12.699 I/DEBUG   (  747):  d14 0000000000000000  d15 0000000000000000\r\n01-06 10:32:12.699 I/DEBUG   (  747):  d16 beef21e4beef211c  d17 0000000000000000\r\n01-06 10:32:12.699 I/DEBUG   (  747):  d18 42eccefa43de3400  d19 3fbc71c71c71c71c\r\n01-06 10:32:12.699 I/DEBUG   (  747):  d20 4008000000000000  d21 3fd99a27ad32ddf5\r\n01-06 10:32:12.699 I/DEBUG   (  747):  d22 3fd24998d6307188  d23 3fcc7288e957b53b\r\n01-06 10:32:12.699 I/DEBUG   (  747):  d24 3fc74721cad6b0ed  d25 3fc39a09d078c69f\r\n01-06 10:32:12.699 I/DEBUG   (  747):  d26 0000000000000000  d27 0000000000000000\r\n01-06 10:32:12.699 I/DEBUG   (  747):  d28 0000000000000000  d29 0000000000000000\r\n01-06 10:32:12.699 I/DEBUG   (  747):  d30 0000000000000000  d31 0000000000000000\r\n01-06 10:32:12.699 I/DEBUG   (  747):  scr 20000012\r\n01-06 10:32:12.699 I/DEBUG   (  747):\r\n01-06 10:32:12.769 I/DEBUG   (  747):          #00  pc 0004a718  /system/lib/libdvm.so\r\n01-06 10:32:12.769 I/DEBUG   (  747):          #01  lr 8004a719  /system/lib/libdvm.so\r\n01-06 10:32:12.769 I/DEBUG   (  747):\r\n01-06 10:32:12.769 I/DEBUG   (  747): code around pc:\r\n01-06 10:32:12.769 I/DEBUG   (  747): 8004a6f8 21074620 fb00f008 b0049802 81f0e8bd\r\n01-06 10:32:12.769 I/DEBUG   (  747): 8004a708 6904b570 4605460e 46202101 faf4f008\r\n01-06 10:32:12.769 I/DEBUG   (  747): 8004a718 46286831 ff0ef7ff 46052107 f0084620\r\n01-06 10:32:12.769 I/DEBUG   (  747): 8004a728 4628faeb bf00bd70 6904b5f7 4605460e\r\n01-06 10:32:12.769 I/DEBUG   (  747): 8004a738 46202101 fae0f008 0307f006 2b074f16\r\n01-06 10:32:12.769 I/DEBUG   (  747):\r\n01-06 10:32:12.769 I/DEBUG   (  747): code around lr:\r\n01-06 10:32:12.769 I/DEBUG   (  747): 8004a6f8 21074620 fb00f008 b0049802 81f0e8bd\r\n01-06 10:32:12.769 I/DEBUG   (  747): 8004a708 6904b570 4605460e 46202101 faf4f008\r\n01-06 10:32:12.769 I/DEBUG   (  747): 8004a718 46286831 ff0ef7ff 46052107 f0084620\r\n01-06 10:32:12.769 I/DEBUG   (  747): 8004a728 4628faeb bf00bd70 6904b5f7 4605460e\r\n01-06 10:32:12.769 I/DEBUG   (  747): 8004a738 46202101 fae0f008 0307f006 2b074f16\r\n01-06 10:32:12.769 I/DEBUG   (  747):\r\n01-06 10:32:12.769 I/DEBUG   (  747): stack:\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef2370  40597a58\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef2374  0000ce60\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef2378  00000000\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef237c  800aad38\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef2380  0000abe0\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef2384  8004aa71  /system/lib/libdvm.so\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef2388  405973a0\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef238c  00000000\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef2390  beef211c\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef2394  beef21e4\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef2398  800aad38\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef239c  0000ce60\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef23a0  0000ce60\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef23a4  0000abe0\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef23a8  df002777\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef23ac  e3a070ad\r\n01-06 10:32:12.769 I/DEBUG   (  747): #00 beef23b0  002b2c50\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef23b4  beef2418\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef23b8  805bae10\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef23bc  804583e1  /data/data/jp.takke.realmandroid23issuesample/lib/librealm-jni.so\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef23c0  beef2428\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef23c4  2020a000\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef23c8  0000abe0\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef23cc  4214cb28\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef23d0  0000abe0\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef23d4  afd13ec7  /system/lib/libc.so\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef23d8  00000014\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef23dc  805bae10\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef23e0  002b29c0\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef23e4  002b2c50\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef23e8  beef2428\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef23ec  00000000\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef23f0  0000abe0\r\n01-06 10:32:12.769 I/DEBUG   (  747):     beef23f4  4214cb28\r\n01-06 10:32:13.029 I/ActivityManager(   92): Process jp.takke.realmandroid23issuesample (pid 845) has died.\r\n01-06 10:32:13.049 W/InputManagerService(   92): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@407d5bf0\r\n01-06 10:32:13.059 D/Zygote  (   66): Process 845 terminated by signal (11)\r\n```\r\n\r\n\r\n#### Steps & Code to Reproduce\r\n\r\nA project which reproduce this issue:\r\n\r\nhttps://github.com/takke/RealmAndroid23IssueSample/blob/master/app/src/main/java/jp/takke/realmandroid23issuesample/MainActivity.java\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 2.0.0 or later (works fine with Realm Java 1.2.0)\r\n\r\nRealm sync feature enabled: no\r\n\r\nAndroid Studio version: 2.3 canary 1\r\n\r\nWhich Android version and device: 2.3.6 (Nexus One)\r\n\r\n", "url": "https://github.com/realm/realm-java/issues/3804", "user": "zaki50", "labels": ["T-Bug-Crash"], "created": "2016-11-16 09:31:43", "closed": "2017-01-23 10:32:37", "commits": {}, "ttf": 68.00027777777778, "commitsDetails": []}, {"title": "BadVersionException in TableQuery.cpp line 1131", "body": "Hi,\r\n\r\nI am using Realm version 2.2.0 in an Android app.\r\nI am using a Nexus 5 and Honor 7 lite. Both with android 6.0.1\r\nSame crash happens on both phones.\r\n\r\nI am using findFirstAsync and findAllAsync queries including storeOrUpdate queries in different threads.\r\nAlso I am removing change listeners in the UI Thread but only when the RealmObjects are valid.\r\n\r\nIf I switch between my activities several times I get this Native JNI Exception from Realm. \r\n\r\nI am trying to debug and pinpoint what I am doing wrong and how I should instead use Realm so it doesn't generate these native exceptions. Any help from your end in which direction I should look at would be appreciated.\r\n\r\nI.e. does it have to do more with transactions and storing, or more with findAll and findFirst calls ?\r\n\r\nKind regards,\r\n\r\nSiebe\r\n\r\nSTACKTRACE \r\n\r\nFatal Exception: java.lang.Error: io.realm.internal.async.BadVersionException: std::exception in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_TableQuery.cpp line 1131\r\n       at io.realm.AndroidNotifier.throwBackgroundException(AndroidNotifier.java:138)\r\n       at io.realm.RealmQuery.closeSharedRealmAndSendEventToNotifier(RealmQuery.java:2201)\r\n       at io.realm.RealmQuery.access$000(RealmQuery.java:62)\r\n       at io.realm.RealmQuery$5.call(RealmQuery.java:2141)\r\n       at io.realm.RealmQuery$5.call(RealmQuery.java:2115)\r\n       at io.realm.internal.async.BgPriorityCallable.call(BgPriorityCallable.java:36)\r\n       at java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n       at java.lang.Thread.run(Thread.java:818)\r\nCaused by io.realm.internal.async.BadVersionException: std::exception in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_TableQuery.cpp line 1131\r\n       at io.realm.internal.TableQuery.nativeFindWithHandover(TableQuery.java)\r\n       at io.realm.internal.TableQuery.findWithHandover(TableQuery.java:446)\r\n       at io.realm.RealmQuery$5.call(RealmQuery.java:2124)\r\n       at io.realm.RealmQuery$5.call(RealmQuery.java:2115)\r\n       at io.realm.internal.async.BgPriorityCallable.call(BgPriorityCallable.java:36)\r\n       at java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n       at java.lang.Thread.run(Thread.java:818)", "url": "https://github.com/realm/realm-java/issues/3802", "user": "siebeprojects", "labels": ["T-Bug-Crash"], "created": "2016-11-15 22:27:51", "closed": "2017-02-20 13:39:49", "commits": {}, "ttf": 96.00027777777778, "commitsDetails": []}, {"title": "Realm.getLocalInstanceCount() can crash", "body": "See https://github.com/realm/realm-java/issues/3788#issuecomment-260318809", "url": "https://github.com/realm/realm-java/issues/3791", "user": "cmelchior", "labels": ["T-Bug-Crash"], "created": "2016-11-14 13:15:22", "closed": "2016-11-22 14:39:51", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Realm 2.x crashes on native layer executing Realm.compact() method", "body": "Hi!\r\n\r\nRealm.compact() crashes on some devices. In my case such device is Samsung SM-T110 android tablet with AOS 4.2.2 (API 17). It works OK (at least crashless) on any other device I have. \r\n\r\n#### Goal\r\n\r\nTo run Realm.compact()\r\n\r\n#### Expected Results\r\n\r\nMethod compact() works fine as intended\r\n\r\n#### Actual Results\r\n\r\nCrash on a native layer\r\n```\r\n> 11-09 13:17:00.257 4078-4078/ua.npost A/libc: Fatal signal 11 (SIGSEGV) at 0x5fd20ff5 (code=1), thread 4078 (ua.npost)\r\n> 11-09 13:17:00.359 1901-1901/? I/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n> 11-09 13:17:00.359 1901-1901/? I/DEBUG: Build fingerprint: 'samsung/goyawifixx/goyawifi:4.2.2/JDQ39/T110XXUANI7:user/release-keys'\r\n> 11-09 13:17:00.359 1901-1901/? I/DEBUG: Revision: '2'\r\n> 11-09 13:17:00.367 1901-1901/? I/DEBUG: pid: 4078, tid: 4078, name: ua.npost  >>> ua.npost <<<\r\n> 11-09 13:17:00.367 1901-1901/? I/DEBUG: signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 5fd20ff5\r\n> 11-09 13:17:00.593 1901-1901/? I/DEBUG:     r0 5fd29d67  r1 5fd20ff5  r2 5fd2abdf  r3 5fd20ff5\r\n> 11-09 13:17:00.593 1901-1901/? I/DEBUG:     r4 00000000  r5 5fd21005  r6 5fd2ba60  r7 5fd29d28\r\n> 11-09 13:17:00.593 1901-1901/? I/DEBUG:     r8 00000010  r9 00000010  sl 60103ac0  fp 00000010\r\n> 11-09 13:17:00.593 1901-1901/? I/DEBUG:     ip 00000000  sp be9762b0  lr 00000000  pc 5ff60598  cpsr 20000030\r\n> 11-09 13:17:00.593 1901-1901/? I/DEBUG:     d0  7079546f67726100  d1  d1bbd0b5d0b1d000\r\n> 11-09 13:17:00.593 1901-1901/? I/DEBUG:     d2  b0d0bdd081d18300  d3  d0b5d0bcd0208f00\r\n> 11-09 13:17:00.593 1901-1901/? I/DEBUG:     d4  8bd1b1d020b9d0be  d5  bed0b2d0bed082d1\r\n> 11-09 13:17:00.593 1901-1901/? I/DEBUG:     d6  d1b5d082d120b9d0  d7  d0bad0b8d0bdd085\r\n> 11-09 13:17:00.593 1901-1901/? I/DEBUG:     d8  0000000000000000  d9  0000000000000000\r\n> 11-09 13:17:00.593 1901-1901/? I/DEBUG:     d10 0000000000000000  d11 0000000000000000\r\n> 11-09 13:17:00.593 1901-1901/? I/DEBUG:     d12 0000000000000000  d13 0000000000000000\r\n> 11-09 13:17:00.593 1901-1901/? I/DEBUG:     d14 0000000000000000  d15 0000000000000000\r\n> 11-09 13:17:00.593 1901-1901/? I/DEBUG:     d16 4026000000000000  d17 00000000002fa9c8\r\n> 11-09 13:17:00.593 1901-1901/? I/DEBUG:     d18 00000000002fa9c8  d19 3ff0000000000000\r\n> 11-09 13:17:00.593 1901-1901/? I/DEBUG:     d20 4008000000000000  d21 3fbc71c71c71c71c\r\n> 11-09 13:17:00.593 1901-1901/? I/DEBUG:     d22 3fcc7288e957b53b  d23 3fd24998d6307188\r\n> 11-09 13:17:00.593 1901-1901/? I/DEBUG:     d24 3fd99a27ad32ddf5  d25 3fe555b0aaeac752\r\n> 11-09 13:17:00.593 1901-1901/? I/DEBUG:     d26 0000000000000000  d27 0000000000000000\r\n> 11-09 13:17:00.593 1901-1901/? I/DEBUG:     d28 0000000000000000  d29 0000000000000000\r\n> 11-09 13:17:00.593 1901-1901/? I/DEBUG:     d30 0000000000000000  d31 0000000000000000\r\n> 11-09 13:17:00.593 1901-1901/? I/DEBUG:     scr 80000010\r\n> 11-09 13:17:00.593 1901-1901/? I/DEBUG: backtrace:\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     #00  pc 00086598  /mnt/asec/ua.npost-3/lib/librealm-jni.so\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     #01  pc 000892e7  /mnt/asec/ua.npost-3/lib/librealm-jni.so\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     #02  pc 000deab9  /mnt/asec/ua.npost-3/lib/librealm-jni.so\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     #03  pc 000d4e9f  /mnt/asec/ua.npost-3/lib/librealm-jni.so\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG: stack:\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be976270  00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be976274  5ff5ca81  /mnt/asec/ua.npost-3/lib/librealm-jni.so\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be976278  5fd25980  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be97627c  5ff5add5  /mnt/asec/ua.npost-3/lib/librealm-jni.so\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be976280  5ff588dd  /mnt/asec/ua.npost-3/lib/librealm-jni.so\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be976284  5ff603cb  /mnt/asec/ua.npost-3/lib/librealm-jni.so\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be976288  5fd2ba67  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be97628c  00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be976290  5fd2ba60  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be976294  5fd2ba60  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be976298  5fd29d28  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be97629c  00000010  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9762a0  00000010  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9762a4  60103ac0  /data/data/ua.npost/files/default.realm\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9762a8  df0027ad  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9762ac  00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     #00  be9762b0  00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9762b4  00000001  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9762b8  0000000f  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9762bc  00000009  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9762c0  60103ac0  /data/data/ua.npost/files/default.realm\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9762c4  00000009  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9762c8  5fd2ba70  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9762cc  be976310  [stack]\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9762d0  00000001  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9762d4  5fd29d28  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9762d8  00000001  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9762dc  ffffffff  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9762e0  00000009  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9762e4  00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9762e8  be9763c4  [stack]\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9762ec  5ff632eb  /mnt/asec/ua.npost-3/lib/librealm-jni.so\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     #01  be9762f0  00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9762f4  00000080  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9762f8  00000019  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9762fc  00000001  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be976300  00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be976304  5fd23ab0  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be976308  be976498  [stack]\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be97630c  00000001  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be976310  60103ac0  /data/data/ua.npost/files/default.realm\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be976314  00000009  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be976318  5fd23300  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be97631c  be976484  [stack]\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be976320  000003e8  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be976324  5ffb7ca3  /mnt/asec/ua.npost-3/lib/librealm-jni.so\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be976328  00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be97632c  00301100  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          ........  ........\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     #02  be9763a0  be9763c4  [stack]\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9763a4  00000048  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9763a8  600934a8  /mnt/asec/ua.npost-3/lib/librealm-jni.so\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9763ac  00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9763b0  60103ac0  /data/data/ua.npost/files/default.realm\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9763b4  00000009  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9763b8  5fd2ba58  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9763bc  6007e0e4  /mnt/asec/ua.npost-3/lib/librealm-jni.so\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9763c0  6007e0e4  /mnt/asec/ua.npost-3/lib/librealm-jni.so\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9763c4  60103ac9  /data/data/ua.npost/files/default.realm\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9763c8  60103ac0  /data/data/ua.npost/files/default.realm\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9763cc  00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9763d0  00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9763d4  00302000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9763d8  5fd2ba58  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          be9763dc  00000001  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:          ........  ........\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG: memory near r0:\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd29d44 00000010 00000000 00000000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd29d54 00001000 00000000 00000000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd29d64 00100000 00000000 00000800 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd29d74 00080000 00000000 00000008 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd29d84 00080000 00000000 00000800 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd29d94 00080000 08000000 00000000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd29da4 00080000 00000000 00000800 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd29db4 00080000 00000000 00000008 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd29dc4 00080000 00000000 00000800 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd29dd4 00080000 00080000 00000000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd29de4 00080000 00000000 00000800 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd29df4 00080000 00000000 00000008 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd29e04 00080000 00000000 00000800 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd29e14 00080000 08000000 00000000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd29e24 00080000 00000000 00000800 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd29e34 00080000 00000000 00000008 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG: memory near r1:\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd20fd4 ffffffff ffffffff ffffffff ffffffff  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd20fe4 ffffffff ffffffff ffffffff ffffffff  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd20ff4 ffffffff ffffffff ffffffff 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd21004 000010b9 00000000 00000000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd21014 00100000 00000000 00000000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd21024 10000000 00000000 00000000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd21034 00000000 00000010 00000000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd21044 00000000 00001000 00000000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd21054 00000000 00100000 00000000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd21064 00000000 10000000 00000000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd21074 00000000 00000000 00000010 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd21084 00000000 00000000 00001000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd21094 00000000 00000000 00100000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd210a4 00000000 00000000 10000000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd210b4 00000000 00000000 00000000 00000010  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd210c4 00000000 00000000 00000000 00001000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG: memory near r2:\r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd2abbc 00000008 00000000 00080000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd2abcc 00000800 00000000 00080000 00080000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd2abdc 00000000 00000000 00080000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd2abec 00000800 00000000 00080000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd2abfc 00000008 00000000 00080000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd2ac0c 00000800 00000000 00080000 08000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd2ac1c 00000000 00000000 00080000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd2ac2c 00000800 00000000 00080000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd2ac3c 00000008 00000000 00080000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd2ac4c 00000800 00000000 00080000 00000008  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd2ac5c 00000000 00000000 00080000 00000000  \r\n> 11-09 13:17:00.601 1901-1901/? I/DEBUG:     5fd2ac6c 00000800 00000000 00080000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd2ac7c 00000008 00000000 00080000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd2ac8c 00000800 00000000 00080000 08000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd2ac9c 00000000 00000000 00080000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd2acac 00000800 00000000 00080000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG: memory near r3:\r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd20fd4 ffffffff ffffffff ffffffff ffffffff  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd20fe4 ffffffff ffffffff ffffffff ffffffff  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd20ff4 ffffffff ffffffff ffffffff 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd21004 000010b9 00000000 00000000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd21014 00100000 00000000 00000000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd21024 10000000 00000000 00000000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd21034 00000000 00000010 00000000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd21044 00000000 00001000 00000000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd21054 00000000 00100000 00000000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd21064 00000000 10000000 00000000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd21074 00000000 00000000 00000010 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd21084 00000000 00000000 00001000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd21094 00000000 00000000 00100000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd210a4 00000000 00000000 10000000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd210b4 00000000 00000000 00000000 00000010  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd210c4 00000000 00000000 00000000 00001000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG: memory near r5:\r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd20fe4 ffffffff ffffffff ffffffff ffffffff  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd20ff4 ffffffff ffffffff ffffffff 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd21004 000010b9 00000000 00000000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd21014 00100000 00000000 00000000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd21024 10000000 00000000 00000000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd21034 00000000 00000010 00000000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd21044 00000000 00001000 00000000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd21054 00000000 00100000 00000000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd21064 00000000 10000000 00000000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd21074 00000000 00000000 00000010 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd21084 00000000 00000000 00001000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd21094 00000000 00000000 00100000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd210a4 00000000 00000000 10000000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd210b4 00000000 00000000 00000000 00000010  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd210c4 00000000 00000000 00000000 00001000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd210d4 00000000 00000000 00000000 00100000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG: memory near r6:\r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd2ba40 00000000 00080000 00000000 00000800  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd2ba50 00000000 00080000 0d008000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd2ba60 00000000 000a0000 00000000 0a000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd2ba70 86d18f00 00d096d1 00000000 c1000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd2ba80 d0b0d096 00b8d0bb 032e0309 03780353  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd2ba90 03c2039d 040c03e7 04560431 04a0047b  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd2baa0 04ea04c5 0534050f 057e0559 05c805a3  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd2bab0 061205ed 065c0637 06a60681 06f006cb  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd2bac0 073a0715 0784075f 07ce07a9 081807f3  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd2bad0 0862083d 08ac0887 00800000 35000011  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd2bae0 bed0b3d0 82d181d1 bdd0b8d0 b0d0bdd0  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd2baf0 28208fd1 bed0bad0 bfd080d1 81d183d1  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd2bb00 b0d0bdd0 d0208fd1 d0b5d0bc d0b5d0b1  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd2bb10 298cd1bb 0d4c0d00 0d960d71 0de00dbb  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd2bb20 0e2a0e05 0e740e4f 0ebe0e99 0f080ee3  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd2bb30 0f520f2d 0f9c0f77 0fe60fc1 1030100b  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG: memory near r7:\r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd29d08 00000000 00000000 00001000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd29d18 00000000 00000000 00100000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd29d28 00000000 00000000 10000000 00000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd29d38 00000000 00000000 00000000 00000010  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd29d48 00000000 00000000 00000000 00001000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd29d58 00000000 00000000 00000000 00100000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd29d68 00000000 00000800 00000000 00080000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd29d78 00000000 00000008 00000000 00080000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd29d88 00000000 00000800 00000000 00080000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd29d98 08000000 00000000 00000000 00080000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd29da8 00000000 00000800 00000000 00080000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd29db8 00000000 00000008 00000000 00080000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd29dc8 00000000 00000800 00000000 00080000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd29dd8 00080000 00000000 00000000 00080000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd29de8 00000000 00000800 00000000 00080000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     5fd29df8 00000000 00000008 00000000 00080000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG: memory near sl:\r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     60103aa0 00067a80 00067a18 41414141 0500000d  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     60103ab0 67726143 0000006f 00000000 0a000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     60103ac0 75636f44 746e656d 00000073 06000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     60103ad0 65726954 65685773 00736c65 04000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     60103ae0 6c6c6150 00007465 00000000 09000000  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     60103af0 756c6156 656c6261 65706150 01007372  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     60103b00 41414141 05000006 43617267 446f6375  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     60103b10 50616c6c 54697265 56616c75 34396164  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     60103b20 41414141 06000066 00067b00 00000001  \r\n> 11-09 13:17:00.609 1901-1901/? I/DEBUG:     60103b30 00000003 00000007 00000005 00000009  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     60103b40 41414141 05000004 3f301c09 02066159  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     60103b50 41414141 59000011 80d193d0 b7d083d1  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     60103b60 d094d000 d1bad0be d0bcd083 d1bdd0b5  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     60103b70 008bd182 b8d0a8d0 8bd1bdd0 d0b4d02d  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     60103b80 d081d1b8 00b8d0ba b0d09fd0 bbd0bbd0  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     60103b90 82d1b5d0 d0008bd1 d0b5d0a6 d1bdd0bd  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG: memory near sp:\r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     be976290 5fd2ba60 5fd2ba60 5fd29d28 00000010  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     be9762a0 00000010 60103ac0 df0027ad 00000000  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     be9762b0 00000000 00000001 0000000f 00000009  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     be9762c0 60103ac0 00000009 5fd2ba70 be976310  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     be9762d0 00000001 5fd29d28 00000001 ffffffff  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     be9762e0 00000009 00000000 be9763c4 5ff632eb  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     be9762f0 00000000 00000080 00000019 00000001  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     be976300 00000000 5fd23ab0 be976498 00000001  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     be976310 60103ac0 00000009 5fd23300 be976484  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     be976320 000003e8 5ffb7ca3 00000000 00301100  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     be976330 00000000 00000000 5fd23ab0 6009521c  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     be976340 5fd2ba58 00302000 5fd23ab0 5ff65f17  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     be976350 5fd23ab0 00000080 c0000000 00000048  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     be976360 0000005a 00000128 00000000 00000000  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     be976370 60093bf8 be976474 c0000000 ffffffff  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     be976380 be976484 be9763b0 ffffffff ffffffff  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG: code around pc:\r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     5ff60578 ebc1ec01 1e6a0109 44711e5d 1c01f803  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     5ff60588 1040f897 0301ebc8 429d442b 4619d006  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     5ff60598 4b01f801 d1fb428d 1040f897 0501f1c1  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     5ff605a8 1b524415 d36e428a d028429e 1040f897  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     5ff605b8 f1b9e7dd d10e0f00 0801f04f 0f00f1bb  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     5ff605c8 f108d042 fa5f33ff 9302fc88 e7b446c3  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     5ff605d8 0f00f1bb f109d038 f1b80801 d9f00f02  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     5ff605e8 0859ea49 0898ea48 1818ea48 0801f108  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     5ff605f8 fc88fa5f 33fff10c 46e39302 46cce79d  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     5ff60608 f8dd693e f887900c 9b01c040 6b0bfb03  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     5ff60618 445b9b02 f1b9461c d0040f00 46514658  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     5ff60628 f791464a 44d9ec90 bf1c454c 2200464b  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     5ff60638 f803d003 42a32b01 f1bad1fb d02b0f00  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     5ff60648 0904ebc9 9000f884 e8bdb007 f10b8ff0  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     5ff60658 693e33ff e7d89302 d0d4429e f488fa5f  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     5ff60668 f1c81e59 f8030800 44434c01 bf184299  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG: code around lr:\r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     00000000 ffffffff ffffffff ffffffff ffffffff  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     00000010 ffffffff ffffffff ffffffff ffffffff  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     00000020 ffffffff ffffffff ffffffff ffffffff  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     00000030 ffffffff ffffffff ffffffff ffffffff  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     00000040 ffffffff ffffffff ffffffff ffffffff  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     00000050 ffffffff ffffffff ffffffff ffffffff  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     00000060 ffffffff ffffffff ffffffff ffffffff  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     00000070 ffffffff ffffffff ffffffff ffffffff  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     00000080 ffffffff ffffffff ffffffff ffffffff  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     00000090 ffffffff ffffffff ffffffff ffffffff  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     000000a0 ffffffff ffffffff ffffffff ffffffff  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     000000b0 ffffffff ffffffff ffffffff ffffffff  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     000000c0 ffffffff ffffffff ffffffff ffffffff  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     000000d0 ffffffff ffffffff ffffffff ffffffff  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     000000e0 ffffffff ffffffff ffffffff ffffffff  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     000000f0 ffffffff ffffffff ffffffff ffffffff  \r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG: memory map around fault addr 5fd20ff5:\r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     5fd1d000-5fd1e000 /data/data/ua.npost/files/default.realm.lock\r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     (no map for address)\r\n> 11-09 13:17:00.617 1901-1901/? I/DEBUG:     5fd21000-5fd5d000 \r\n> 11-09 13:17:00.789 1901-1901/? I/DEBUG: !@dumpstate -k -t -z -d -o /data/log/dumpstate_app_native -m 4078\r\n> 11-09 13:17:00.789 525-579/? I/BootReceiver: Copying /data/tombstones/tombstone_07 to DropBox (SYSTEM_TOMBSTONE)\r\n```\r\n\r\n#### Steps & Code to Reproduce\r\n\r\nActually execute Realm.compact() \r\n\r\n#### Code Sample\r\n\r\n``` java\r\n        Realm.init(context.getApplicationContext());\r\n        realmConfiguration = new RealmConfiguration.Builder()\r\n                .schemaVersion(19)\r\n                .migration(new Migration())\r\n                .build();\r\n        Realm.compactRealm(realmConfiguration); // it crashes at this line\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 2.0.2-SNAPSHOT, 2.1.1\r\n\r\nRealm sync feature enabled: no, but not sure.\r\n\r\nAndroid Studio version: 2.2.2\r\n\r\nWhich Android version and device: Samsung SM-T110 tablet with AOS 4.2.2 (API 17)\r\n", "url": "https://github.com/realm/realm-java/issues/3762", "user": "stan-ko", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2016-11-09 11:45:45", "closed": "2017-10-24 12:53:20", "commits": {}, "ttf": 349.0002777777778, "commitsDetails": []}, {"title": "RealmFileException: Function not implemented in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 81 Kind: ACCESS_ERROR.", "body": "I get this, it happens on: Android 4.3\r\nBlackberry Leap device.\r\nRealm 2.0.2\r\nAny ideas for a fix?\r\n\r\nio.realm.exceptions.RealmFileException: Function not implemented in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 81 Kind: ACCESS_ERROR.\r\n\tat io.realm.internal.SharedRealm.nativeGetSharedRealm(Native Method)\r\n\tat io.realm.internal.SharedRealm.getInstance(Unknown Source)\r\n\tat io.realm.internal.SharedRealm.getInstance(Unknown Source)\r\n\tat io.realm.RealmCache.createRealmOrGetFromCache(Unknown Source)\r\n\tat io.realm.Realm.getInstance(Unknown Source)", "url": "https://github.com/realm/realm-java/issues/3735", "user": "matomick", "labels": ["T-Bug-Crash"], "created": "2016-11-02 09:03:38", "closed": "2016-12-27 08:33:12", "commits": {}, "ttf": 54.000277777777775, "commitsDetails": []}, {"title": "StackOverflow when using insertOrUpdate to insert object with two-way relation", "body": "#### Goal\r\n\r\nI want to copy an object that has a two way relation from one Realm to another using insertOrUpdate. \r\n\r\n#### Expected Results\r\n\r\nItem is inserted to the new realm and relations are maintained.\r\n\r\n#### Actual Results\r\n\r\nStack Overflow Error\r\n```\r\n at io.realm.ParentRealmProxy.insertOrUpdate(ParentRealmProxy.java:534)\r\n                      at io.realm.ChildRealmProxy.insertOrUpdate(ChildRealmProxy.java:506)\r\n                      at io.realm.ParentRealmProxy.insertOrUpdate(ParentRealmProxy.java:534)\r\n                      at io.realm.ChildRealmProxy.insertOrUpdate(ChildRealmProxy.java:506)\r\n                      at io.realm.ParentRealmProxy.insertOrUpdate(ParentRealmProxy.java:534)\r\n                      at io.realm.ChildRealmProxy.insertOrUpdate(ChildRealmProxy.java:506)\r\n                      at io.realm.ParentRealmProxy.insertOrUpdate(ParentRealmProxy.java:534)\r\n                      at io.realm.ChildRealmProxy.insertOrUpdate(ChildRealmProxy.java:506)\r\n                      at io.realm.ParentRealmProxy.insertOrUpdate(ParentRealmProxy.java:534)\r\n```\r\n\r\n#### Steps & Code to Reproduce\r\n\r\nSee code sample\r\n\r\n#### Code Sample\r\n```\r\npublic class Parent extends RealmObject {\r\n    @PrimaryKey\r\n    @Required\r\n    private String id;\r\n\r\n    private RealmList<Child> childList;\r\n\r\n    public RealmList<Child> getChildList() {\r\n        return childList;\r\n    }\r\n}\r\n\r\npublic class Child extends RealmObject {\r\n\r\n    @PrimaryKey\r\n    @Required\r\n    private String id;\r\n\r\n    private Parent parent;\r\n\r\n    public Parent getParent() {\r\n        return parent;\r\n    }\r\n\r\n    public void setParent(Parent parent) {\r\n        this.parent = parent;\r\n    }\r\n}\r\n\r\npublic class RealmOverflowBugActivity extends AppCompatActivity {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_realm_overflow_bug);\r\n\r\n        Realm.init(this);\r\n\r\n        RealmConfiguration config1 = new RealmConfiguration.Builder().name(\"config1\").deleteRealmIfMigrationNeeded().build();\r\n        RealmConfiguration config2 = new RealmConfiguration.Builder().name(\"config2\").deleteRealmIfMigrationNeeded().build();\r\n\r\n        Realm realm1 = Realm.getInstance(config1);\r\n        Realm realm2 = Realm.getInstance(config2);\r\n\r\n        //Set up initial data to realm1\r\n        realm1.beginTransaction();\r\n\r\n        //Add data\r\n        Parent parent = realm1.createObject(Parent.class, \"parentKey\");\r\n        Child child = realm1.createObject(Child.class, \"childKey\");\r\n\r\n        //Set relations\r\n        parent.getChildList().add(child);\r\n        child.setParent(parent);\r\n\r\n        realm1.commitTransaction();\r\n\r\n\r\n        //Insert object with relations from realm1 to realm2\r\n        realm2.beginTransaction();\r\n        realm2.insertOrUpdate(parent); //StackOverflowError! Using copyToRealmOrUpdate works.\r\n        realm2.commitTransaction();\r\n\r\n        realm1.close();\r\n        realm2.close();\r\n    }\r\n}\r\n```\r\n\r\n#### Version of Realm and tooling\r\nRealm version(s): 2.1.1\r\n\r\nRealm sync feature enabled: yes/no\r\n\r\nAndroid Studio version: 2.2.1\r\n\r\nWhich Android version and device: \r\nNexus5 emulator", "url": "https://github.com/realm/realm-java/issues/3732", "user": "sipersso", "labels": ["T-Bug-Crash"], "created": "2016-11-02 01:51:54", "closed": "2016-11-21 09:49:46", "commits": {"66978976e1d3492fa09e84cbc7c35a068c7ec863": {"commitGHEventType": "referenced", "commitUser": "cmelchior"}}, "ttf": 19.00027777777778, "commitsDetails": [{"commitHash": "66978976e1d3492fa09e84cbc7c35a068c7ec863", "commitGHEventType": "referenced", "commitUser": "cmelchior", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "Native crash on api 10", "body": "When I call `Realm.GetDefaultInstance()` I get a crash in native code on an api 10 (GT-I9070) device. It works on newer devices. It crashes with realm 2.1.1 but not on 1.2.0. \r\n\r\nlogs:\r\n```\r\n10-31 09:45:57.400 I/dalvikvm: \"Signal Catcher\" daemon prio=5 tid=4 RUNNABLE\r\n10-31 09:45:57.400 I/dalvikvm:   | group=\"system\" sCount=0 dsCount=0 obj=0x40518e60 self=0xf20b0\r\n10-31 09:45:57.400 I/dalvikvm:   | sysTid=5210 nice=0 sched=0/0 cgrp=[no-cpu-subsys] handle=1151064\r\n10-31 09:45:57.400 I/dalvikvm:   | schedstat=( 1037600 244140 25 )\r\n10-31 09:45:57.400 I/dalvikvm:     at dalvik.system.NativeStart.run(Native Method)\r\n10-31 09:45:57.400 I/dalvikvm: [<c0295308>] save_stack_trace_tsk+0x0/0x90\r\n                               [<c03b5af0>] proc_pid_stack+0xf8/0x144\r\n                               [<c03b6e54>] proc_single_show+0x48/0x84\r\n                               [<c038b47c>] seq_read+0x26c/0x4e4\r\n                               [<c03720fc>] vfs_read+0xa8/0x150\r\n                               [<c0372250>] sys_read+0x3c/0x68\r\n                               [<c0291740>] ret_fast_syscall+0x0/0x30\r\n                               [<ffffffff>] 0xffffffff\r\n                               ------------------------------\r\n10-31 09:45:57.400 I/dalvikvm: \"main\" prio=5 tid=1 RUNNABLE\r\n10-31 09:45:57.400 I/dalvikvm:   | group=\"main\" sCount=1 dsCount=0 obj=0x400281f8 self=0xd190\r\n10-31 09:45:57.400 I/dalvikvm:   | sysTid=5207 nice=0 sched=0/0 cgrp=[no-cpu-subsys] handle=-1345002240\r\n10-31 09:45:57.400 I/dalvikvm:   | schedstat=( 757019059 483764632 1174 )\r\n10-31 09:45:57.500 I/dalvikvm:     at io.realm.internal.SharedRealm.nativeGetSharedRealm(Native Method)\r\n10-31 09:45:57.500 I/dalvikvm:     at io.realm.internal.SharedRealm.getInstance(SharedRealm.java:205)\r\n10-31 09:45:57.500 I/dalvikvm:     at io.realm.BaseRealm.<init>(BaseRealm.java:82)\r\n10-31 09:45:57.530 I/dalvikvm:     at io.realm.Realm.<init>(Realm.java:140)\r\n10-31 09:45:57.530 I/dalvikvm:     at io.realm.Realm.createAndValidate(Realm.java:285)\r\n10-31 09:45:57.530 I/dalvikvm:     at io.realm.Realm.createInstance(Realm.java:266)\r\n10-31 09:45:57.560 I/dalvikvm:     at io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:143)\r\n10-31 09:45:57.560 I/dalvikvm:     at io.realm.Realm.getDefaultInstance(Realm.java:211)\r\n10-31 09:45:57.560 I/dalvikvm:     at *snip*.LoginActivity.startLogin(LoginActivity.java:221)\r\n10-31 09:45:57.560 I/dalvikvm:     at *snip*.LoginActivity.login(LoginActivity.java:207)\r\n10-31 09:45:57.560 I/dalvikvm:     at java.lang.reflect.Method.invokeNative(Native Method)\r\n10-31 09:45:57.560 I/dalvikvm:     at java.lang.reflect.Method.invoke(Method.java:507)\r\n10-31 09:45:57.580 I/dalvikvm:     at android.support.v7.app.AppCompatViewInflater$DeclaredOnClickListener.onClick(AppCompatViewInflater.java:288)\r\n10-31 09:45:57.580 I/dalvikvm:     at android.view.View.performClick(View.java:2585)\r\n10-31 09:45:57.590 I/dalvikvm:     at android.view.View$PerformClick.run(View.java:9299)\r\n10-31 09:45:57.620 I/dalvikvm:     at android.os.Handler.handleCallback(Handler.java:587)\r\n10-31 09:45:57.620 I/dalvikvm:     at android.os.Handler.dispatchMessage(Handler.java:92)\r\n10-31 09:45:57.620 I/dalvikvm:     at android.os.Looper.loop(Looper.java:130)\r\n10-31 09:45:57.620 I/dalvikvm:     at android.app.ActivityThread.main(ActivityThread.java:3770)\r\n10-31 09:45:57.620 I/dalvikvm:     at java.lang.reflect.Method.invokeNative(Native Method)\r\n10-31 09:45:57.620 I/dalvikvm:     at java.lang.reflect.Method.invoke(Method.java:507)\r\n10-31 09:45:57.620 I/dalvikvm:     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:912)\r\n10-31 09:45:57.620 I/dalvikvm:     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:670)\r\n10-31 09:45:57.620 I/dalvikvm:     at dalvik.system.NativeStart.main(Native Method)\r\n10-31 09:45:57.620 I/dalvikvm: [<ffffffff>] 0xffffffff\r\n                               ------------------------------\r\n```\r\n\r\nrealm config:\r\n```\r\nRealm.init(this);\r\n        RealmConfiguration config = new RealmConfiguration.Builder()\r\n                .schemaVersion(REALMSCHEMAVERSION)\r\n                .deleteRealmIfMigrationNeeded()\r\n                .build();\r\n        Realm.setDefaultConfiguration(config);\r\n```", "url": "https://github.com/realm/realm-java/issues/3726", "user": "RAalders", "labels": ["T-Bug-Crash"], "created": "2016-10-31 08:50:57", "closed": "2017-01-03 11:47:05", "commits": {"b8a23338e83e98a56b352fc25b3ed242c8bbc25c": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "0dfe1bab112a7851ef05a0aa91c8b95eae9a0042": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 64.00027777777778, "commitsDetails": [{"commitHash": "b8a23338e83e98a56b352fc25b3ed242c8bbc25c", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0dfe1bab112a7851ef05a0aa91c8b95eae9a0042", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["617ecfd93bcc6582cbb878bf21868887a0691133"], "nameRev": "0dfe1bab112a7851ef05a0aa91c8b95eae9a0042 tags/v2.2.2~7", "commitMessage": "RAII wrapper for some JNI resources (#3959)\n\n* Move the global jvm pointer to JniUtils and add some helper functions.\r\n* Wrapper for jmethodID, global weak ref.\r\n* Refactor the wrapper for the local ref.\r\n* Before using the global weak ref, always try to acquire a local ref\r\n  first since until Android 4.0 weak global references could only be\r\n  passed to NewLocalRef, NewGlobalRef, and DeleteWeakGlobalRef.\r\n  See https://developer.android.com/training/articles/perf-jni.html#unsupported\r\n  for more details. This fix #3726 .\r\n", "commitDateTime": "2017-01-03 19:46:57", "authoredDateTime": "2017-01-03 19:46:57", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_SyncManager.cpp", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_TableQuery.cpp", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "realm/realm-library/src/main/cpp/io_realm_internal_Util.cpp", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "realm/realm-library/src/main/cpp/java_binding_context.cpp", "insertions": 8, "deletions": 34, "lines": 42}, {"filePath": "realm/realm-library/src/main/cpp/java_binding_context.hpp", "insertions": 6, "deletions": 10, "lines": 16}, {"filePath": "realm/realm-library/src/main/cpp/jni_util/java_global_weak_ref.cpp", "insertions": 41, "deletions": 0, "lines": 41}, {"filePath": "realm/realm-library/src/main/cpp/jni_util/java_global_weak_ref.hpp", "insertions": 67, "deletions": 0, "lines": 67}, {"filePath": "realm/realm-library/src/main/cpp/jni_util/java_local_ref.hpp", "insertions": 57, "deletions": 0, "lines": 57}, {"filePath": "realm/realm-library/src/main/cpp/jni_util/java_method.cpp", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "realm/realm-library/src/main/cpp/jni_util/java_method.hpp", "insertions": 51, "deletions": 0, "lines": 51}, {"filePath": "realm/realm-library/src/main/cpp/jni_util/jni_utils.cpp", "insertions": 48, "deletions": 0, "lines": 48}, {"filePath": "realm/realm-library/src/main/cpp/jni_util/jni_utils.hpp", "insertions": 46, "deletions": 0, "lines": 46}, {"filePath": "realm/realm-library/src/main/cpp/objectserver_shared.hpp", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "realm/realm-library/src/main/cpp/util.cpp", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "realm/realm-library/src/main/cpp/util.hpp", "insertions": 0, "deletions": 24, "lines": 24}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Operation not permitted in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 81", "body": "Operation not permitted in /Users/zaki/fromgit/realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_SharedRealm.cpp line 92\n\nI want create my realm file on external storage,when i use Realm.getDefaultInstance(),i get the exception.\n\nIn MyApplication.java:\n        Realm.init(this);\n        File directory = new File(Environment.getExternalStorageDirectory(), \"RealmSamplesData\");\n        if (!directory.exists()) directory.mkdirs();\n        RealmConfiguration config = new RealmConfiguration.Builder()\n                .name(\"myrealm.realm\")\n                .directory(directory)\n                .build();\n        Realm.setDefaultConfiguration(config);\n\nIn MainActivity.java:\n      mRealm = Realm.getDefaultInstance();\n\n```\n\n#### Version of Realm and tooling\nRealm version(s): 2.1.1\n\nAndroid Studio version: 2.2.2\n\nWhich Android version and device: Android 4.4, on PDA device\n```\n", "url": "https://github.com/realm/realm-java/issues/3713", "user": "GuaiShu", "labels": ["T-Bug-Crash"], "created": "2016-10-28 02:36:59", "closed": "2016-12-26 03:23:20", "commits": {}, "ttf": 59.000277777777775, "commitsDetails": []}, {"title": "Realm-Transformer crashes if you have a class that ends with `RealmProxy` but isn't an actual proxy generated by Realm", "body": "http://stackoverflow.com/questions/40258259/cannot-invoke-method-hasannotation-on-null-object/40284179#40284179\n\nThe transformer attempts to access `superclass` but it is not guaranteed to exist if you yourself create a class that ends with the name `RealmProxy`.\n", "url": "https://github.com/realm/realm-java/issues/3709", "user": "Zhuinden", "labels": ["O-Community", "T-Bug-Crash"], "created": "2016-10-27 12:15:33", "closed": "2018-06-06 09:45:07", "commits": {}, "ttf": 586.0002777777778, "commitsDetails": []}, {"title": "Samsung Tab 3 Lite 7 crashes on Realm 2.0.1 and 2.0.2", "body": "A Samsung Galaxy Tab 3 Lite 7 (SM-T111) crashes on startup with the below error (Android 4.2.2)\nHas been confirmed working on Nexus 5, Nexus 4 and emulators 15, 19, 21, 22, 23, 24.\n\n```\n10-18 11:57:25.851 D/dalvikvm( 6127): Trying to load lib /data/app-lib/com.zt.android.test.realmio-1/librealm-jni.so 0x412e0568\n10-18 11:57:25.851 D/dalvikvm( 6127): Added shared lib /data/app-lib/com.zt.android.test.realmio-1/librealm-jni.so 0x412e0568\n10-18 11:57:25.859 V/REALM   ( 6127):  --> Java_io_realm_internal_SharedRealm_nativeCreateConfig\n10-18 11:57:25.859 V/REALM   ( 6127):  --> Java_io_realm_internal_SharedRealm_nativeGetSharedRealm 1521857752\n10-18 11:57:25.867 I/v_hwc   (  112): hwc prepare: 3D composition\n10-18 11:57:25.875 V/REALM   ( 6127):  --> Java_io_realm_internal_SharedRealm_nativeCloseConfig 1521857752\n10-18 11:57:25.875 V/REALM   ( 6127):  --> Java_io_realm_internal_SharedRealm_nativeHasTable 1522273128\n10-18 11:57:25.875 V/REALM   ( 6127):  --> Java_io_realm_internal_SharedRealm_nativeCloseSharedRealm 1522273128\n10-18 11:57:25.875 V/REALM   ( 6127):  --> Java_io_realm_internal_SharedRealm_nativeCreateConfig\n10-18 11:57:25.875 V/REALM   ( 6127):  --> Java_io_realm_internal_SharedRealm_nativeGetSharedRealm 1521857752\n10-18 11:57:25.875 V/REALM   ( 6127):  --> Java_io_realm_internal_SharedRealm_nativeGetVersion 1522276080\n10-18 11:57:25.875 V/REALM   ( 6127):  --> Java_io_realm_internal_SharedRealm_nativeCloseConfig 1521857752\n10-18 11:57:25.875 V/REALM   ( 6127):  --> Java_io_realm_internal_SharedRealm_nativeIsClosed 1522276080\n10-18 11:57:25.875 V/REALM   ( 6127):  --> Java_io_realm_internal_SharedRealm_nativeGetVersion 1522276080\n10-18 11:57:25.875 V/REALM   ( 6127):  --> Java_io_realm_internal_SharedRealm_nativeGetVersion 1522276080\n10-18 11:57:25.875 V/REALM   ( 6127):  --> Java_io_realm_internal_SharedRealm_nativeIsClosed 1522276080\n10-18 11:57:25.875 V/REALM   ( 6127):  --> Java_io_realm_internal_SharedRealm_nativeBeginTransaction 1522276080\n10-18 11:57:25.875 V/REALM   ( 6127):  --> Java_io_realm_internal_SharedRealm_nativeGetVersion 1522276080\n10-18 11:57:25.875 V/REALM   ( 6127):  --> Java_io_realm_internal_SharedRealm_nativeSetVersion 1522276080\n10-18 11:57:25.875 F/libc    ( 6127): Fatal signal 11 (SIGSEGV) at 0x5ab3eff6 (code=2), thread 6127 (id.test.realmio)\n10-18 11:57:25.882 F/libc    ( 6127): Fatal signal 11 (SIGSEGV) at 0x00000008 (code=1), thread 6142 (id.test.realmio)\n```\n\n```\n10-18 11:48:42.945 D/CrashAnrDetector(  484): Build: samsung/goya3gxx/goya3g:4.2.2/JDQ39/T111XXUAOC2:user/release-keys\n10-18 11:48:42.945 D/CrashAnrDetector(  484): Hardware: PXA986\n10-18 11:48:42.945 D/CrashAnrDetector(  484): Revision: 2\n10-18 11:48:42.945 D/CrashAnrDetector(  484): Bootloader: T111XXUAOC2\n10-18 11:48:42.945 D/CrashAnrDetector(  484): Radio: unknown\n10-18 11:48:42.945 D/CrashAnrDetector(  484): Kernel: Linux version 3.4.5-2825369 (se.infra@SWDB2804) (gcc version 4.6.x-google 20120106 (prerelease) (GCC) ) #2 SMP PREEMPT Tue Mar 17 22:04:14 KST 2015\n10-18 11:48:42.945 D/CrashAnrDetector(  484):\n10-18 11:48:42.945 D/CrashAnrDetector(  484): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n10-18 11:48:42.945 D/CrashAnrDetector(  484): Build fingerprint: 'samsung/goya3gxx/goya3g:4.2.2/JDQ39/T111XXUAOC2:user/release-keys'\n10-18 11:48:42.945 D/CrashAnrDetector(  484): Revision: '2'\n10-18 11:48:42.945 D/CrashAnrDetector(  484): pid: 5805, tid: 5805, name: id.test.realmio  >>> io.realm.test.realmio <<<\n10-18 11:48:42.945 D/CrashAnrDetector(  484): signal 11 (SIGSEGV), code 2 (SEGV_ACCERR), fault addr 5baa4ffe\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     r0 5baa500b  r1 5baa4ffe  r2 5bb71283  r3 5baa4ffe\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     r4 00000000  r5 5baa500a  r6 5bbb5358  r7 5dc08d20\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     r8 00000010  r9 00000010  sl 5e8bf810  fp 00000010\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     ip 00000000  sp bed19318  lr 00000000  pc 5e7a1052  cpsr 20000030\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     d0  65706f72705f6b70  d1  532f6c616e726500\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     d2  65742e64696f7200  d3  6d6c6165722e7402\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     d4  746c75616665642f  d5  6d2e6d6c6165722e\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     d6  6e656d6567616e61  d7  7373656363612f74\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     d8  0000000000000000  d9  0000000000000000\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     d10 0000000000000000  d11 0000000000000000\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     d12 0000000000000000  d13 0000000000000000\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     d14 0000000000000000  d15 0000000000000000\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     d16 4026000000000000  d17 0000000000000000\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     d18 0000000000000000  d19 0000000000000000\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     d20 4008000000000000  d21 3fbc71c71c71c71c\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     d22 3fcc7288e957b53b  d23 3fd24998d6307188\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     d24 3fd99a27ad32ddf5  d25 3fe555b0aaeac752\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     d26 0000000000000000  d27 0000000000000000\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     d28 0000000000000000  d29 0000000000000000\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     d30 0000000000000000  d31 0000000000000000\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     scr 20000010\n10-18 11:48:42.945 D/CrashAnrDetector(  484):\n10-18 11:48:42.945 D/CrashAnrDetector(  484): backtrace:\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     #00  pc 00082052  /data/app-lib/io.realm.test.realmio-1/librealm-jni.so\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     #01  pc 000a50b7  /data/app-lib/io.realm.test.realmio-1/librealm-jni.so\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     #02  pc 0005a69d  /data/app-lib/io.realm.test.realmio-1/librealm-jni.so\n10-18 11:48:42.945 D/CrashAnrDetector(  484):\n10-18 11:48:42.945 D/CrashAnrDetector(  484): stack:\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed192d8  5bbb5950\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed192dc  00001680\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed192e0  5bbb5bd0\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed192e4  00001900\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed192e8  5e7991cb  /data/app-lib/io.realm.test.realmio-1/librealm-jni.so\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed192ec  5e7a0e85  /data/app-lib/io.realm.test.realmio-1/librealm-jni.so\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed192f0  00000000\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed192f4  5e8d4168  /data/app-lib/io.realm.test.realmio-1/librealm-jni.so\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed192f8  5bbb5958\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed192fc  00000000\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19300  bed19330  [stack]\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19304  00000000\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19308  5dc08d20\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed1930c  5dc08d20\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19310  df0027ad\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19314  00000000\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     #00  bed19318  5e799c41  /data/app-lib/io.realm.test.realmio-1/librealm-jni.so\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed1931c  00000001\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19320  0000000f\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19324  00000008\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19328  5e8bf810  /data/app-lib/io.realm.test.realmio-1/librealm-jni.so\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed1932c  00000008\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19330  5bbb5360\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19334  ffffffff\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19338  00000000\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed1933c  5dc08d20\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19340  00000001\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19344  00000001\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19348  00000000\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed1934c  5e8bf810  /data/app-lib/io.realm.test.realmio-1/librealm-jni.so\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19350  5dc08008\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19354  5e7c40bb  /data/app-lib/io.realm.test.realmio-1/librealm-jni.so\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     #01  bed19358  ffffffff\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed1935c  00000000\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19360  00000000\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19364  00000008\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19368  5abee570\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed1936c  00000000\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19370  5ab9ed08\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19374  5abee6e0\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19378  5e8bf810  /data/app-lib/io.realm.test.realmio-1/librealm-jni.so\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed1937c  00000008\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19380  00000001\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19384  5e7db265  /data/app-lib/io.realm.test.realmio-1/librealm-jni.so\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19388  5e8bf810  /data/app-lib/io.realm.test.realmio-1/librealm-jni.so\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed1938c  00000008\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19390  00000000\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed19394  5abee570\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          ........  ........\n10-18 11:48:42.945 D/CrashAnrDetector(  484):     #02  bed193b8  00000000\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed193bc  00000000\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed193c0  5dc08d20\n10-18 11:48:42.945 D/CrashAnrDetector(  484):          bed193c4  5e7c0c\n10-18 11:48:42.945 D/CrashAnrDetector(  484): processName:io.realm.test.realmio\n10-18 11:48:42.945 D/CrashAnrDetector(  484): broadcastEvent : io.realm.test.realmio SYSTEM_TOMBSTONE\n```\n\nI'm working on getting a sample project. /cc @beeender", "url": "https://github.com/realm/realm-java/issues/3651", "user": "cmelchior", "labels": ["T-Bug-Crash"], "created": "2016-10-18 09:11:02", "closed": "2017-04-07 14:07:39", "commits": {"81cecb851c470b88545ac821492ed10d5a3b0c9d": {"commitGHEventType": "referenced", "commitUser": "kneth"}, "149c70af044d21ab9bfae0350e56a1d603974695": {"commitGHEventType": "referenced", "commitUser": "cmelchior"}}, "ttf": 171.00027777777777, "commitsDetails": [{"commitHash": "81cecb851c470b88545ac821492ed10d5a3b0c9d", "commitGHEventType": "referenced", "commitUser": "kneth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "149c70af044d21ab9bfae0350e56a1d603974695", "commitGHEventType": "referenced", "commitUser": "cmelchior", "commitParents": ["461c157134c9921effcf53b929bcc8ad5358b02e"], "nameRev": "149c70af044d21ab9bfae0350e56a1d603974695 tags/v2.3.0~12^2", "commitMessage": "Adding temp. solution for issue #3651 (#4067)\n\n", "commitDateTime": "2017-01-19 06:38:18", "authoredDateTime": "2017-01-19 06:38:18", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/main/cpp/object-store", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Native crash signal 11 (SIGSEGV), code 2", "body": "We have received a reasonable number of native crashes related to realm and we are having difficulties pinpointing what the cause is. We are unable to reproduce the problem so anything that could help us would be appreciated.\n\nSome information:\n- We use encryption, a SyncAdapter and multiple Realm files. \n- The crashes only happen on devices running Android 5.0 or above. \n- The crashes first started appearing after we upgraded to Realm 1.0.0 but also occur on Realm versions up to 1.2.0 which is what we are currently using in our release.\n\nThe stack traces below are a few examples of the native crashes on 1.2.0. There are more crash groups but they are all similar to these.\n\n```\nBuild fingerprint: 'samsung/xcover3ltexx/xcover3lte:5.1.1/LMY48B/G388FXXU1BPB3:user/release-keys'\nRevision: '7'\nABI: 'arm'\npid: 5015, tid: 7685, name: SyncAdapterThre >>> x.y.z <<<\nsignal 11 (SIGSEGV), code 2 (SEGV_ACCERR), fault addr 0x58f7fff0\nr0 abd10760 r1 58f80058 r2 00000000 r3 abd10760\nr4 00000012 r5 58f80310 r6 58f80058 r7 00000000\nr8 abe552d0 r9 00000000 sl 00000012 fp 00000000\nip 4c91bc65 sp 58f80000 lr 4c93556d pc 4c997488 cpsr 40070030\n\nbacktrace:\n#00 pc 000c6488 /data/app/x.y.z-2/lib/arm/librealm-jni.so\n```\n\n```\nBuild fingerprint: 'samsung/s5neoltexx/s5neolte:6.0.1/MMB29K/G903FXXU1BPE2:user/release-keys'\nRevision: '0'\nABI: 'arm'\npid: 8861, tid: 8861, name: y.z >>> com.x.y.z <<<\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x4\nr0 dcf11008 r1 00006440 r2 dcf11228 r3 00000000\nr4 00058000 r5 dcf11008 r6 00000024 r7 a1f4d4a5\nr8 00000000 r9 00000258 sl 00000000 fp 00000000\nip f4a02018 sp ffe84990 lr df9173ef pc df90c266 cpsr 600b0030\n\nbacktrace:\n#00 pc 00042266 /data/app/x.y.z-2/lib/arm/librealm-jni.so\n#01 pc 0004d3eb /data/app//x.y.z-2/lib/arm/librealm-jni.so\n#02 pc 0004d465 /data/app//x.y.z-2/lib/arm/librealm-jni.so\n#03 pc 0006b1d5 /data/app//x.y.z/lib/arm/librealm-jni.so\n#04 pc 000c502d /data/app//x.y.z/lib/arm/librealm-jni.so\n#05 pc 00028b13 /data/app//x.y.z-2/lib/arm/librealm-jni.so (Java_io_realm_internal_Group_nativeGetTableNativePtr+286)\n#06 pc 0167c2b5 /data/app/x.y.z-2/oat/arm/base.odex (offset 0xeb8000)\n```\n\n``````\nBuild fingerprint: 'samsung/s5neoltexx/s5neolte:6.0.1/MMB29K/G903FXXU1BPE2:user/release-keys'\nRevision: '0'\nABI: 'arm'\npid: 25806, tid: 25866, name: SyncAdapterThre >>> x.y.z <<<\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x4\nr0 ef285008 r1 00000420 r2 ef285228 r3 00000000\nr4 00058000 r5 ef285008 r6 00000024 r7 a1f4d4a5\nr8 00000000 r9 00000258 sl 00000000 fp 00000000\nip dafbf018 sp dfb2d9d0 lr dff173ef pc dff0c266 cpsr 600b0030\n\nbacktrace:\n#00 pc 00042266 /data/app/x.y.z-2/lib/arm/librealm-jni.so\n#01 pc 0004d3eb /data/app/x.y.z-2/lib/arm/librealm-jni.so\n...\n(Java_io_realm_internal_Group_nativeGetTableNativePtr+286)\n#08 pc 0167c2b5 /data/app/x.y.z-2/oat/arm/base.odex (offset 0xeb8000\n```)\n``````\n", "url": "https://github.com/realm/realm-java/issues/3590", "user": "EdwardvanRaak", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2016-10-07 11:18:27", "closed": "2017-08-25 03:44:24", "commits": {}, "ttf": 321.0002777777778, "commitsDetails": []}, {"title": "DynamicRealmObject#setList() causes native crash if the specified field is not a List", "body": "Calling `DynamicRealmObject#setList()` against an object from `DynamicRealm` causes a native crash if the field type is not a `List`.\n", "url": "https://github.com/realm/realm-java/issues/3549", "user": "zaki50", "labels": ["T-Bug-Crash"], "created": "2016-10-03 17:25:58", "closed": "2016-10-04 14:07:54", "commits": {"b2f71f4b82a7f2a27d56a5f7d90baa7119136d27": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "b2f71f4b82a7f2a27d56a5f7d90baa7119136d27", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "Crash - didn't find class \"io.realm.internal.network.NetworkStateReceiver\"", "body": "Hi, with the new Realm 2.0 I am getting crash as below:\n\n```\njava.lang.RuntimeException: Unable to instantiate receiver io.realm.internal.network.NetworkStateReceiver: java.lang.ClassNotFoundException: Didn't find class \"io.realm.internal.network.NetworkStateReceiver\"\n```\n", "url": "https://github.com/realm/realm-java/issues/3505", "user": "lukcz", "labels": ["T-Bug-Crash"], "created": "2016-09-27 21:19:02", "closed": "2016-10-05 08:31:37", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "Fatal Exception: java.lang.UnsatisfiedLinkError : librealm-jni.so not found", "body": "> What do you want to achieve?\n\nNo Problem is occured with realm\n#### Actual Results\n\n>  Some of Android Smartphone of LG are crashed\n#### Steps & Code to Reproduce\n\n> I fixed my code with \"Couldn\u2019t load \u201clibrealm-jni.so\u201d from Realm Blog.\n\nbut We can't fix a bug.\n#### Code Sample\n\n``` java\n\n> \nRealmConfiguration config = new RealmConfiguration.Builder(this)\n                .schemaVersion(47)\n                .migration(new Migration())\n                .build();\n\n        Realm.setDefaultConfiguration(config);\n        Realm.getInstance(config);\n\n```\n\n```\n   ndk {\n        abiFilters \"armeabi\", \"armeabi-v7a\", \"x86\", \"x86_64\"\n   }\n\n```\n#### Version of Realm and tooling\n\nRealm version(s): 1.2.0\n\nAndroid Studio version: 2.2\n\nWhich Android version and device: 4.4.2 , 4.4.4 , 4.2.0\n## ERROR LOG\n\nhttp://crashes.to/s/c7a78b064b1\n", "url": "https://github.com/realm/realm-java/issues/3496", "user": "cyber7eyes", "labels": ["T-Bug-Crash", "T-Help"], "created": "2016-09-27 06:45:13", "closed": "2016-10-11 10:28:41", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "SIGSEV signal 11", "body": "#### Goal\n\n> Use the library\n#### Expected Results\n\n> No sigsev\n#### Actual Results\n\n> Here's the error code:\n\n`Fatal signal 11 (SIGSEGV), code 1, fault addr 0x14c in tid 7837 (ator.app)`\n\n> Here's the \"Build Fingerprint:\"\n\n```\nBuild fingerprint: 'generic/vbox86p/vbox86p:5.0/LRX21M/buildbot11172321:userdebug/test-keys'\n26643-26643/? I/DEBUG: Revision: '0'\n26643-26643/? I/DEBUG: ABI: 'x86'\n26643-26643/? I/DEBUG: pid: 7837, tid: 7837, name: ator.app  >>> com.lockedout.app <<<\n26643-26643/? I/DEBUG: signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x14c\n26643-26643/? I/DEBUG:     eax 00000148  ebx ffffffff  ecx 7470d340  edx 00000002\n26643-26643/? I/DEBUG:     esi 00000000  edi 00000002\n26643-26643/? I/DEBUG:     xcs 00000023  xds 0000002b  xes 0000002b  xfs 00000007  xss 0000002b\n26643-26643/? I/DEBUG:     eip e2f6d025  ebp ffd3cd58  esp ffd3cd50  flags 00210246\n26643-26643/? I/DEBUG: backtrace:\n26643-26643/? I/DEBUG:     #00 pc 0002a025  /data/app/com.lockedout.app-1/lib/x86/librealm-jni.so\n26643-26643/? I/DEBUG:     #01 pc 0009c141  /data/app/com.lockedout.app-1/lib/x86/librealm-jni.so\n26643-26643/? I/DEBUG:     #02 pc 0009c299  /data/app/com.lockedout.app-1/lib/x86/librealm-jni.so\n26643-26643/? I/DEBUG:     #03 pc 004002d3  /data/dalvik-cache/x86/data@app@com.lockedout.app-1@base.apk@classes.dex\n26643-26643/? I/DEBUG:     #04 pc 00000002  <unknown>\n26643-26643/? I/DEBUG: Tombstone written to: /data/tombstones/tombstone_06\n```\n#### Steps & Code to Reproduce\n\n> Happens when I  call `notifyDataSetChanged` on a `RecyclerView.Adapter` after I've deleted an `Item` (extends `RealmObject`) from a `User`'s (also extends `RealmObject`) list of `Items`. In order for you to better understand what the `RecyclerView.Adapter`'s holding, I need to explain the design:\n> \n> There are 4 possible `Items` a `User` can have, each with their own unique id (1-4). The `User` may not have all of them though, so when I show a user the list of all the possible `Items` they can have I need to show both the ones they do and the ones they don't have. So there is an `ItemWrapper` (does not extend `RealmObject`) to help with that. The adapter holds onto a list of `ItemWrappers` and if say the `User` doesn't have `Items` 1 or 3, then then the 1st and 3rd wrappers in the `RecyclerView.Adapter` (positions 0 and 2) will have a null `Item` field. The `Item` that the `ItemWraper` wraps is the managed `RealmObject` that is in the `User`'s list of `Items`\n> \n> `notifyDataSetChanged` is called within the `onChange()` of a `RealmChangeListener`, set on the `User` object. When `onChange` is called, I create a new list of `ItemWrappers` using the `User`'s `Item` list, swap out the old list of `ItemWrappers` on the adapter with the new one, and then call `notifyDataSetChanged`.\n> \n> The error does not occur if I do not call `notifyDataSetChanged`.\n#### Version of Realm and tooling\n\nRealm version(s): 1.2.0\n\nAndroid Studio version: 2.1.1\n\nWhich Android version and device: Google Nexus 5, Android 5.0.0, API 21", "url": "https://github.com/realm/realm-java/issues/3492", "user": "btech", "labels": ["O-Community", "Pipeline-On-Hold", "Reproduction-Required", "T-Bug-Crash"], "created": "2016-09-25 08:06:26", "closed": "2019-11-27 21:04:57", "commits": {}, "ttf": 1158.0002777777777, "commitsDetails": []}, {"title": "java.lang.ArrayIndexOutOfBoundsException rowIndex > available rows", "body": "#### Expected Results\n\n> No crash\n#### Actual Results\n\n> ``` java\n> Fatal Exception: java.lang.ArrayIndexOutOfBoundsException: rowIndex > available rows: 4 > 4\n>        at io.realm.internal.TableView.nativeRemoveRow(TableView.java)\n>        at io.realm.internal.TableView.remove(TableView.java:405)\n>        at io.realm.RealmResults.deleteFromRealm(RealmResults.java:246)\n>        at removed.SavedMediaRecyclerViewAdapter$8.onClick(SavedMediaRecyclerViewAdapter.java:288)\n>        at cn.pedant.SweetAlert.SweetAlertDialog.onClick(SweetAlertDialog.java:372)\n>        at android.view.View.performClick(View.java:4240)\n>        at android.view.View$PerformClick.run(View.java:17721)\n>        at android.os.Handler.handleCallback(Handler.java:730)\n>        at android.os.Handler.dispatchMessage(Handler.java:92)\n>        at android.os.Looper.loop(Looper.java:137)\n>        at android.app.ActivityThread.main(ActivityThread.java:5199)\n>        at java.lang.reflect.Method.invokeNative(Method.java)\n>        at java.lang.reflect.Method.invoke(Method.java:525)\n>        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:737)\n>        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:553)\n>        at dalvik.system.NativeStart.main(NativeStart.java)\n> ```\n#### Steps & Code to Reproduce\n\n> I am using `RealmBasedRecyclerViewAdapter` (https://github.com/thorbenprimke/realm-recyclerview - but I think this kind of issue should in Realm not the lib so I am posting it here) for my RecyclerView, I just override `onItemSwipedDismiss` to show confirm dialog before actual deleting object from Realm. So can you please take a look. Thanks\n#### Code Sample\n\n``` java\n\n@Override\n    public void onItemSwipedDismiss(final int position) {\n        new SweetAlertDialog(mContext, SweetAlertDialog.WARNING_TYPE)\n                .setTitleText(mContext.getString(R.string.delete_confim_prompt))\n                .setContentText(mContext.getString(R.string.wont_recover))\n                .setConfirmText(mContext.getString(R.string.yes_delete))\n                .setCancelText(mContext.getString(R.string.no_cancel))\n                .showCancelButton(true)\n                .setConfirmClickListener(new SweetAlertDialog.OnSweetClickListener() {\n                    @Override\n                    public void onClick(SweetAlertDialog sDialog) {\n                        Realm realm = Realm.getDefaultInstance();\n                        realm.beginTransaction();\n                        realmResults.deleteFromRealm(position);\n                        realm.commitTransaction();\n                        notifyItemRemoved(position);\n                        realm.close();\n                        sDialog.dismissWithAnimation();\n                    }\n                })\n                .setCancelClickListener(new SweetAlertDialog.OnSweetClickListener() {\n                    @Override\n                    public void onClick(SweetAlertDialog sDialog) {\n                        sDialog.dismissWithAnimation();\n                        notifyItemChanged(position);\n                    }\n                })\n                .show();\n    }\n\n```\n#### Version of Realm and tooling\n\nRealm version(s): 1.1.0, 1.1.1, 1.2.0\n\nAndroid Studio version: 2.2 beta\n\nWhich Android version and device: C6530N (4.3), GT-I9300 (4.3), JAX QS (4.4.2)...\n", "url": "https://github.com/realm/realm-java/issues/3337", "user": "donnguyen", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2016-08-23 09:23:52", "closed": "2017-03-27 13:57:32", "commits": {}, "ttf": 216.00027777777777, "commitsDetails": []}, {"title": "signal 7 (SIGBUS), code 2 (BUS_ADRERR)/signal 11 (SIGSEGV), code 1 (SEGV_MAPERR)", "body": "#### Goal\n\nNo crash\n#### Expected Results\n\nNo crash\n#### Steps & Code to Reproduce\n\nUnable to reproduce error. We do not have the db file that created this error. \n#### Version of Realm and tooling\n\nRealm version(s): 1.1.1\n\nAndroid Studio version: 2.2-beta\n\nWhich Android version and device: \n\nThis user crashed with same error type \"signal 7 (SIGBUS), code 2 (BUS_ADRERR\" 5 consecutive times at different fault address but same backtrace.\n\n```\nBuild fingerprint: 'samsung/s3ve3gxx/s3ve3g:4.4.2/KOT49H/I9301IXCSAPG7:user/release-keys'\nRevision: '4'\npid: 24157, tid: 24178, name: BgGopherThread  >>> com.myapp <<<\nsignal 7 (SIGBUS), code 2 (BUS_ADRERR), fault addr 78f99ff0\n    r0 7909cfb0  r1 78f99ff0  r2 001d5ba8  r3 78e97048\n    r4 001d5ba8  r5 78f9a008  r6 001d5be8  r7 001d5ba8\n    r8 78f9a008  r9 00984411  sl 001c0000  fp 00000000\n    ip 000040b5  sp 7869c9e0  lr 78f99dd0  pc 400a972c  cpsr 200d0030\n    d0  0000000000000000  d1  0000000000000000\n    d2  0000000000000000  d3  0000000000000000\n    d4  0000000000000000  d5  0000000000000000\n    d6  0000000000000000  d7  0000000000000000\n    d8  0000000000000000  d9  0000000000000000\n    d10 0000000000000000  d11 0000000000000000\n    d12 0000000000000000  d13 0000000000000000\n    d14 0000000000000000  d15 0000000000000000\n    d16 7373656363612f74  d17 6c6f72746e6f635f\n    d18 72706e6f69746369  d19 666e61662e737365\n    d20 662f6e6f69746369  d21 6361632f73656c69\n    d22 6d2e62642e326568  d23 6e656d6567616e61\n    d24 3fd1b10853a79915  d25 3fd554fa9ca0567a\n    d26 3fdb6db71408e660  d27 3fe33333332d4313\n    d28 3ff0000000000000  d29 0000000000000001\n    d30 fff0000000000000  d31 ffffffff00000000\n    scr 20000010\n\nbacktrace:\n    #00  pc 0002272c  /system/lib/libc.so (memmove+99)\n    #01  pc 0001fcd1  /data/app-lib/com.myapp-9/librealm-jni.so\n```\n\n**Same user crashed 2 times with a slightly different back trace.**\n\n```\nBuild fingerprint: 'samsung/s3ve3gxx/s3ve3g:4.4.2/KOT49H/I9301IXCSAPG7:user/release-keys'\nRevision: '4'\npid: 11686, tid: 11686, name: ress.myapp  >>> com.myapp <<<\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 7969a000\n    r0 79fa9f88  r1 79699fe8  r2 001d5ba8  r3 6f697461\n    r4 001d5ba8  r5 79ec7008  r6 001d5be8  r7 001d5ba8\n    r8 79ec7008  r9 00000000  sl 7969a380  fp 00000000\n    ip 00003ca1  sp be8d7188  lr 000003c0  pc 400a924c  cpsr 200d0030\n    d0  0000000000000000  d1  0000000000000000\n    d2  0000000000000000  d3  0000000000000000\n    d4  0000000000000000  d5  0000000000000000\n    d6  0000000000000000  d7  0000000000000000\n    d8  0000000000000000  d9  0000000000000000\n    d10 0000000000000000  d11 0000000000000000\n    d12 0000000000000000  d13 0000000000000000\n    d14 0000000000000000  d15 0000000000000000\n    d16 7373656363612f74  d17 6c6f72746e6f635f\n    d18 72706e6f69746369  d19 666e61662e737365\n    d20 662f6e6f69746369  d21 6361632f73656c69\n    d22 6d2e62642e326568  d23 6e656d6567616e61\n    d24 3f8fcf331262ca11  d25 0109010a010a0109\n    d26 0000000000000000  d27 0000000000000000\n    d28 00f100f200f200f1  d29 00f600f500f400f3\n    d30 010a010a010a010a  d31 0000000000000000\n    scr 20000012\n\nbacktrace:\n    #00  pc 0002224c  /system/lib/libc.so (__memcpy_base+163)\n    #01  pc 0001fcd1  /data/app-lib/com.myapp-9/librealm-jni.so\n```\n", "url": "https://github.com/realm/realm-java/issues/3293", "user": "diegomontoya", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2016-08-16 02:50:36", "closed": "2016-11-21 04:07:09", "commits": {}, "ttf": 97.00027777777778, "commitsDetails": []}, {"title": "Crash in the threadExample project.", "body": "``` java\n Caused by: java.lang.IllegalStateException: Changing Realm data can only be done from inside a transaction.\n                                                                               at io.realm.internal.Table.throwImmutable(Table.java:1375)\n                                                                               at io.realm.internal.Table.checkImmutable(Table.java:1030)\n                                                                               at io.realm.internal.Table.clear(Table.java:320)\n                                                                               at io.realm.Realm.delete(Realm.java:1265)\n                                                                               at io.realm.examples.threads.PassingObjectsFragment.onDestroy(PassingObjectsFragment.java:116)\n```\n\n``` java\n@Override\n    public void onDestroy() {\n        super.onDestroy();\n        // Clear out all Person instances.\n        realm.delete(Person.class);\n        realm.close();\n    }\n```\n\nAccording to the document, `delete` need to put in a transaction.\n", "url": "https://github.com/realm/realm-java/issues/3244", "user": "whataa", "labels": ["T-Bug-Crash"], "created": "2016-08-03 07:03:39", "closed": "2016-08-03 08:47:37", "commits": {"eaa0b7442e7a24aaeccf7ce932dad1e11892c3e1": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "05ad94426b8e3817dad92df60d7a7358810fe405": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "78a1efe46ae6a8af23fdd90402369eb79a8cf1ff": {"commitGHEventType": "referenced", "commitUser": "cmelchior"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "eaa0b7442e7a24aaeccf7ce932dad1e11892c3e1", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "05ad94426b8e3817dad92df60d7a7358810fe405", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["a2294aa3325e973f016be49a56e7fc824d915943"], "nameRev": "05ad94426b8e3817dad92df60d7a7358810fe405 tags/v1.1.1~5", "commitMessage": "Missing transaction in threading example (#3245)\n\nClose #3244", "commitDateTime": "2016-08-03 16:06:15", "authoredDateTime": "2016-08-03 16:06:15", "commitGitStats": [{"filePath": "examples/threadExample/src/main/java/io/realm/examples/threads/PassingObjectsFragment.java", "insertions": 6, "deletions": 1, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PassingObjectsFragment.java", "spoonMethods": [{"spoonMethodName": "io.realm.examples.threads.PassingObjectsFragment.onDestroy()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.examples.threads.PassingObjectsFragment.onDestroy().5.execute(io.realm.Realm)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "78a1efe46ae6a8af23fdd90402369eb79a8cf1ff", "commitGHEventType": "referenced", "commitUser": "cmelchior", "commitParents": ["e5c18eb2506388373b4bac13886b3d480c8d33a2", "da21c0e578a879624f1535f02484df2d1750576a"], "nameRev": "78a1efe46ae6a8af23fdd90402369eb79a8cf1ff tags/v1.2.0~26", "commitMessage": "Merge pull request #3250 from realm/merge-f3b025-to-master\n\n* Check transaction state for buld insertion (#3228)\r\n\r\n* Throws if they are not called in a transaction.\r\n* Test cases for buld insertion thread checking.\r\n* Lint warnings fix.\r\n\r\nClose #3173\r\n\r\n* Clarify how insertOrUpdate behave for objects with primary keys. (#3241)\r\n\r\n* Missing transaction in threading example (#3245)\r\n\r\nClose #3244\r\n\r\n* insert(): Correctly detect multiple objects with the same primary key  (#3239)\r\n\r\n* Fix isLoaded JavaDoc (#3240)\r\n", "commitDateTime": "2016-08-03 11:48:09", "authoredDateTime": "2016-08-03 11:48:09", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "examples/threadExample/src/main/java/io/realm/examples/threads/PassingObjectsFragment.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyClassGenerator.java", "insertions": 71, "deletions": 103, "lines": 174}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/AllTypesRealmProxy.java", "insertions": 35, "deletions": 25, "lines": 60}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/BulkInsertTests.java", "insertions": 49, "deletions": 21, "lines": 70}, {"filePath": "realm/realm-library/src/main/java/io/realm/Realm.java", "insertions": 21, "deletions": 4, "lines": 25}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmObject.java", "insertions": 66, "deletions": 6, "lines": 72}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/Row.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/Table.java", "insertions": 9, "deletions": 3, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PassingObjectsFragment.java", "spoonMethods": [{"spoonMethodName": "io.realm.examples.threads.PassingObjectsFragment.onDestroy()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.realm.examples.threads.PassingObjectsFragment.onDestroy().5.execute(io.realm.Realm)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmProxyClassGenerator.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitInsertMethod(com.squareup.javawriter.JavaWriter)", "TOT": 8, "UPD": 2, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitInsertListMethod(com.squareup.javawriter.JavaWriter)", "TOT": 8, "UPD": 2, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitInsertOrUpdateListMethod(com.squareup.javawriter.JavaWriter)", "TOT": 45, "UPD": 5, "INS": 2, "MOV": 36, "DEL": 2}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitInsertOrUpdateMethod(com.squareup.javawriter.JavaWriter)", "TOT": 39, "UPD": 4, "INS": 2, "MOV": 29, "DEL": 4}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.addPrimaryKeyCheckIfNeeeded(io.realm.processor.ClassMetaData,boolean,com.squareup.javawriter.JavaWriter)", "TOT": 10, "UPD": 0, "INS": 10, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AllTypesRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.AllTypesRealmProxy.insert(io.realm.Realm,some.test.AllTypes,java.util.Map)", "TOT": 15, "UPD": 6, "INS": 4, "MOV": 3, "DEL": 2}, {"spoonMethodName": "io.realm.AllTypesRealmProxy.insertOrUpdate(io.realm.Realm,some.test.AllTypes,java.util.Map)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "io.realm.AllTypesRealmProxy.insertOrUpdate(io.realm.Realm,java.util.Iterator,java.util.Map)", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 3}, {"spoonMethodName": "io.realm.AllTypesRealmProxy.insert(io.realm.Realm,java.util.Iterator,java.util.Map)", "TOT": 16, "UPD": 2, "INS": 6, "MOV": 5, "DEL": 3}]}, {"spoonFilePath": "BulkInsertTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm_RealmModel()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm_InvalidRealmModel()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdateToRealm_NullTypes()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm_CyclicType()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdateToRealm_CyclicType()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm_NullPrimaryKey()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdateToRealm()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm_list()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm_emptyList()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm_emptyListWithCompositeMediator()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm_emptyListWithFilterableMediator()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdateToRealm_list()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdateToRealm_emptyList()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdateToRealm_emptyListWithCompositeMediator()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdateToRealm_emptyListWithFilterableMediator()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.testObjectNull()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.testListNull()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.testListNullElement()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.testManagedObject()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.linkingManagedToUnmanagedObject()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insert_duplicatedPrimaryKeyFails()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Realm.java", "spoonMethods": []}, {"spoonFilePath": "RealmObject.java", "spoonMethods": []}, {"spoonFilePath": "Row.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.1", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Table.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.Table.nativeFindFirstNull(long,long)", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.Table.throwDuplicatePrimaryKeyException(java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.Table.addEmptyRow()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "io.realm.internal.Table.addEmptyRowWithPrimaryKey(java.lang.Object)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "io.realm.internal.Table.checkStringValueIsLegal(long,long,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.Table.checkIntValueIsLegal(long,long,long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.Table.checkDuplicatedNullForPrimaryKeyValue(long,long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.realm.internal.Table.findFirstNull(long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "java.lang.NullPointerException while building with gradle", "body": "As the title says, I get a NullPointerException when building my project with gradle in Android Studio. Below is the stacktrace. I can assume the problem is with one of my RealmObject classes, but error doesn't give me a hint which one.  I'm using Realm 1.1.0.\n\nCan you help please?\n\n```\norg.gradle.api.tasks.TaskExecutionException: Execution failed for task ':app:compileBetaDebugJavaWithJavac'.\n    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:69)\n    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:46)\n    at org.gradle.api.internal.tasks.execution.PostExecutionAnalysisTaskExecuter.execute(PostExecutionAnalysisTaskExecuter.java:35)\n    at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:64)\n    at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:58)\n    at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:52)\n    at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:52)\n    at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:53)\n    at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)\n    at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:203)\n    at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:185)\n    at org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.processTask(AbstractTaskPlanExecutor.java:66)\n    at org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.run(AbstractTaskPlanExecutor.java:50)\n    at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor.process(DefaultTaskPlanExecutor.java:25)\n    at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter.execute(DefaultTaskGraphExecuter.java:110)\n    at org.gradle.execution.SelectedTaskExecutionAction.execute(SelectedTaskExecutionAction.java:37)\n    at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:37)\n    at org.gradle.execution.DefaultBuildExecuter.access$000(DefaultBuildExecuter.java:23)\n    at org.gradle.execution.DefaultBuildExecuter$1.proceed(DefaultBuildExecuter.java:43)\n    at org.gradle.execution.DryRunBuildExecutionAction.execute(DryRunBuildExecutionAction.java:32)\n    at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:37)\n    at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:30)\n    at org.gradle.initialization.DefaultGradleLauncher$4.run(DefaultGradleLauncher.java:154)\n    at org.gradle.internal.Factories$1.create(Factories.java:22)\n    at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:90)\n    at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:52)\n    at org.gradle.initialization.DefaultGradleLauncher.doBuildStages(DefaultGradleLauncher.java:151)\n    at org.gradle.initialization.DefaultGradleLauncher.access$200(DefaultGradleLauncher.java:32)\n    at org.gradle.initialization.DefaultGradleLauncher$1.create(DefaultGradleLauncher.java:99)\n    at org.gradle.initialization.DefaultGradleLauncher$1.create(DefaultGradleLauncher.java:93)\n    at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:90)\n    at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:62)\n    at org.gradle.initialization.DefaultGradleLauncher.doBuild(DefaultGradleLauncher.java:93)\n    at org.gradle.initialization.DefaultGradleLauncher.run(DefaultGradleLauncher.java:82)\n    at org.gradle.launcher.exec.InProcessBuildActionExecuter$DefaultBuildController.run(InProcessBuildActionExecuter.java:94)\n    at org.gradle.tooling.internal.provider.runner.BuildModelActionRunner.run(BuildModelActionRunner.java:46)\n    at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)\n    at org.gradle.tooling.internal.provider.runner.SubscribableBuildActionRunner.run(SubscribableBuildActionRunner.java:58)\n    at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)\n    at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:43)\n    at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:28)\n    at org.gradle.launcher.exec.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:75)\n    at org.gradle.launcher.exec.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:45)\n    at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:52)\n    at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:37)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:26)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:34)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:74)\n    at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:72)\n    at org.gradle.util.Swapper.swap(Swapper.java:38)\n    at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:72)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.health.DaemonHealthTracker.execute(DaemonHealthTracker.java:47)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:66)\n    at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:72)\n    at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.health.HintGCAfterBuild.execute(HintGCAfterBuild.java:41)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:50)\n    at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:246)\n    at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54)\n    at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40)\nCaused by: java.lang.RuntimeException: java.lang.NullPointerException\n    at com.sun.tools.javac.main.Main.compile(Main.java:469)\n    at com.sun.tools.javac.api.JavacTaskImpl.call(JavacTaskImpl.java:132)\n    at org.gradle.api.internal.tasks.compile.JdkJavaCompiler.execute(JdkJavaCompiler.java:46)\n    at org.gradle.api.internal.tasks.compile.JdkJavaCompiler.execute(JdkJavaCompiler.java:33)\n    at org.gradle.api.internal.tasks.compile.NormalizingJavaCompiler.delegateAndHandleErrors(NormalizingJavaCompiler.java:104)\n    at org.gradle.api.internal.tasks.compile.NormalizingJavaCompiler.execute(NormalizingJavaCompiler.java:53)\n    at org.gradle.api.internal.tasks.compile.NormalizingJavaCompiler.execute(NormalizingJavaCompiler.java:38)\n    at org.gradle.api.internal.tasks.compile.CleaningJavaCompilerSupport.execute(CleaningJavaCompilerSupport.java:35)\n    at org.gradle.api.internal.tasks.compile.CleaningJavaCompilerSupport.execute(CleaningJavaCompilerSupport.java:25)\n    at org.gradle.api.tasks.compile.JavaCompile.performCompilation(JavaCompile.java:163)\n    at org.gradle.api.tasks.compile.JavaCompile.compile(JavaCompile.java:145)\n    at org.gradle.api.tasks.compile.JavaCompile.compile(JavaCompile.java:93)\n    at com.android.build.gradle.tasks.factory.AndroidJavaCompile.compile(AndroidJavaCompile.java:49)\n    at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:75)\n    at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$IncrementalTaskAction.doExecute(AnnotationProcessingTaskFactory.java:244)\n    at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.execute(AnnotationProcessingTaskFactory.java:220)\n    at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$IncrementalTaskAction.execute(AnnotationProcessingTaskFactory.java:231)\n    at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.execute(AnnotationProcessingTaskFactory.java:209)\n    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:80)\n    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:61)\n    ... 70 more\nCaused by: java.lang.NullPointerException\n    at io.realm.processor.ClassMetaData.checkListTypes(ClassMetaData.java:175)\n    at io.realm.processor.ClassMetaData.generate(ClassMetaData.java:118)\n    at io.realm.processor.RealmProcessor.process(RealmProcessor.java:143)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.callProcessor(JavacProcessingEnvironment.java:793)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.discoverAndRunProcs(JavacProcessingEnvironment.java:722)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.access$1700(JavacProcessingEnvironment.java:97)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment$Round.run(JavacProcessingEnvironment.java:1029)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.doProcessing(JavacProcessingEnvironment.java:1163)\n    at com.sun.tools.javac.main.JavaCompiler.processAnnotations(JavaCompiler.java:1108)\n    at com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:824)\n    at com.sun.tools.javac.main.Main.compile(Main.java:439)\n    ... 89 more\n\n```\n", "url": "https://github.com/realm/realm-java/issues/3218", "user": "tihomirleka", "labels": ["T-Bug-Crash", "T-Duplicate"], "created": "2016-07-27 12:17:53", "closed": "2016-07-28 03:22:43", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Crash: table index out of range #2522 still exists!", "body": "The bug 'Crash: table index out of range #2522' is said to be closed in Realm version 1.0.0\nThis bug still exists. This happened in an old low end device.\n\nCrashLog,\n\n```\nFatal Exception: io.realm.exceptions.RealmError: Unrecoverable error. Table index out of range in io_realm_internal_Group.cpp line 190\n       at io.realm.internal.Group.nativeGetTableNativePtr(Group.java)\n       at io.realm.internal.Group.getTable(Group.java:199)\n       at io.realm.internal.SharedGroupManager.getTable(SharedGroupManager.java:90)\n       at io.realm.BaseRealm.getVersion(BaseRealm.java:427)\n       at io.realm.Realm.getVersion(Realm.java:7120)\n       at io.realm.Realm.createInstance(Realm.java:228)\n       at io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:126)\n       at io.realm.Realm.getDefaultInstance(Realm.java:174)\n       at com.talkoot.android.pubnub.PubNubObserverDelegateImpl$$Lambda$2.run(Unknown Source:1072)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)\n       at java.lang.Thread.run(Thread.java:838)\n\n```\n\nWe are using realm 1.0.0.\nDevice : iris405\nOS : 4.2.2\nRooted : yes\nFree Space :300.64 MB\nFree Ram : 61.21 MB\n", "url": "https://github.com/realm/realm-java/issues/3215", "user": "imidhuntv", "labels": ["T-Bug-Crash"], "created": "2016-07-26 12:58:09", "closed": "2016-10-25 06:28:58", "commits": {}, "ttf": 90.00027777777778, "commitsDetails": []}, {"title": "Too many open files after upgrade to 1.1.0", "body": "#### Goal\n\n> What do you want to achieve?\n\nNot have the app crash\n\n> ?\n#### Actual Results\n\nSeeing some unusual stack traces:\n\n```\njava.lang.IllegalArgumentException: Illegal Argument: open(\"/data/data/com.truly.truly/files/default.realm.management/log_access\") failed: Too many open files path: /data/data/com.truly.truly/files/default.realm.management/log_access in io_realm_internal_SharedGroup.cpp line 188\n```\n\n```\njava.lang.IllegalArgumentException: Illegal Argument: open(\"/data/data/com.truly.truly/files/default.realm.management/log_access\") failed: Too many open files path: /data/data/com.truly.truly/files/default.realm.management/log_access in io_realm_internal_SharedGroup.cpp line 188\n```\n#### Steps & Code to Reproduce\n\nThe full stack traces don't reveal much additional useful information and no substantial changes that would cause may more realms to be created. Any suggestions for debugging would be appreciated.\n#### Version of Realm and tooling\n\nRealm version(s): 1.1.0\n\nAndroid Studio version: 2.1\n\nWhich Android version and device: Various devices and operating systems in production environment\n", "url": "https://github.com/realm/realm-java/issues/3197", "user": "johnryan", "labels": ["T-Bug-Crash"], "created": "2016-07-19 23:07:45", "closed": "2016-08-05 10:54:30", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "IllegalArgumentException: Field 'xxx': type mismatch. Was DATE", "body": "This kind of crash happened to @KynoYang a few times, but the crash logs are not exact the same:\n\nCrash 1\n\n```\njava.lang.IllegalArgumentException: Field 'xxx': type mismatch. Was DATE, expected [STRING].\n    at io.realm.RealmObjectSchema.getColumnIndices(RealmObjectSchema.java:618)\n    at io.realm.RealmQuery.equalTo(RealmQuery.java:262)\n    at io.realm.RealmQuery.equalTo(RealmQuery.java:249)\n    at com.xxx.xx.data.xxx.getLatestMsg(xxx.java:80)\n```\n\nCrash 2\n\n```\nio.realm.exceptions.RealmError: Unrecoverable error. Data type mismatch in io_realm_internal_TableQuery.cpp line 886\n    at io.realm.internal.TableQuery.nativeEqual(Native Method)\n    at io.realm.internal.TableQuery.equalTo(TableQuery.java:350)\n    at io.realm.RealmQuery.equalTo(RealmQuery.java:263)\n    at io.realm.RealmQuery.equalTo(RealmQuery.java:249)\n    at com.xx.xxx.data.xxxxxxx.getXXXByVid(xxx.java:98)\n```\n\nFrom the log we can see the first exception was thrown in the java, but the 2nd one was thrown from native code. This is abnormal. Since the both of them went through the same calling routine that the 2nd one did the java side type checking as well -- But it threw later.\n\nIt might indicate that we have a corrupted pointer that caused by a concurrency problem.\n\nPS.: There are also a few other crashes from @KynoYang which indicate the similar problem. But those two are quite typical.\n\nMight be fixed by https://github.com/realm/realm-core/pull/1958 . We need to monitor this after `v1.1.1` release.\n", "url": "https://github.com/realm/realm-java/issues/3188", "user": "beeender", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2016-07-15 04:35:59", "closed": "2017-01-24 10:12:57", "commits": {}, "ttf": 193.00027777777777, "commitsDetails": []}, {"title": "What's the \"INSTALL_FAILED_DEXOPT\" means when upgrade to 1.1.0?", "body": "Hi, guys:\nI got an issue when upgrade realm from 1.0.1 to 1.1.0 and choose run button in Android Studio 2.1.2(app running perfect with 1.0.1):\n\n> Installation failed since the device possibly has stale dexed jars that don't match the current version(dexopt error).\n> In order to proceed, you have to uninstall the existing application.\n\nerrors in AS run history:\n\n> Failure [INSTALL_FAILED_DEXOPT]\n\nAfter uninstall the existing app, AS ask to uninstall existing app again(the app has already uninstalled), and got another error _DELETE_FAILED_INTERNAL_ERROR_ \n\nThis uninstall dialog appears every time when running app and got the same error _INSTALL_FAILED_DEXOPT_\n\nWhen I back to realm 1.0.1 and sync the project, the app running perfect.\n\nI have tried to _clean the project_, or _delete all build directory_, or _invalidate caches/restart AS_, but can not fix it.\nis there any other advice?\nThanks!\n#### Version of Realm and tooling\n\n> Realm version(s): 1.1.0\n> Android Studio version: 2.1.2\n> Which Android version and device: Samsung Note3, Android 5.0\n", "url": "https://github.com/realm/realm-java/issues/3124", "user": "HsiangLeekwok", "labels": ["T-Bug-Crash"], "created": "2016-07-05 04:45:32", "closed": "2018-04-05 08:10:12", "commits": {}, "ttf": 639.0002777777778, "commitsDetails": []}, {"title": "insertOrUpdate(Collection) does not handle empty list properly", "body": "#### Goal\n\n> What do you want to achieve?\n\nSave empty list\n#### Expected Results\n\nIgnore it considering it's empty\n#### Actual Results\n\n```\n 07-01 10:56:02.262 9258-9364/E/BasePersistDbTaskImpl: Error during saving [CompletedRecordsXML].\n    java.util.NoSuchElementException\n    at java.util.AbstractList$SimpleListIterator.next(AbstractList.java:59)\n    at io.realm.internal.modules.CompositeMediator.insertOrUpdate(CompositeMediator.java:121)\n    at io.realm.Realm.insertOrUpdate(Realm.java:853)\n```\n\nOn this line\n\n```\n    RealmProxyMediator mediator = getMediator(Util.getOriginalModelClass(Util.getOriginalModelClass(objects.iterator().next().getClass())));\n```\n#### Steps & Code to Reproduce\n\nTry to save an empty RealmList.\n#### Version of Realm and tooling\n\nRealm version(s): 1.1.0\n\nAndroid Studio version: 2.1.1 but it's irrelevant\n\nWhich Android version and device: 6.0.2, Nexus 5X\n", "url": "https://github.com/realm/realm-java/issues/3103", "user": "Zhuinden", "labels": ["T-Bug-Crash"], "created": "2016-07-01 09:06:05", "closed": "2016-07-05 12:43:06", "commits": {"c470a3d78e9cb2a405f15e53fa42c3a854638abf": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "5da0d68be4367adcd5e17e8ab2ae4d8cb20cb47e": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "fe0b5d4bbad869593ed21377fd000184f8830d71": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "43677db85974bcb76071bd0f7dc1c33bc7c9acd7": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "66536afc686d04b73cb09dbde2788220266854b3": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "c470a3d78e9cb2a405f15e53fa42c3a854638abf", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5da0d68be4367adcd5e17e8ab2ae4d8cb20cb47e", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "fe0b5d4bbad869593ed21377fd000184f8830d71", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "43677db85974bcb76071bd0f7dc1c33bc7c9acd7", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "66536afc686d04b73cb09dbde2788220266854b3", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["2066a9c3c7ce8a4e8ad50d79466fe292303fbe0e"], "nameRev": "66536afc686d04b73cb09dbde2788220266854b3 tags/v1.1.1~19", "commitMessage": "Allow empty collection to insert/insertOrUpdate(Collection) (#3106)\n\n* added tests to reproduce #3103\r\n\r\n* Fixed a crash when an empty `Collection` is passed to `insert()`/`insertOrUpdate()` (#3103).\r\n\r\n* update the implementation\r\n\r\n* update javadoc comment\r\n", "commitDateTime": "2016-07-05 21:39:07", "authoredDateTime": "2016-07-05 21:39:07", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/BulkInsertTests.java", "insertions": 143, "deletions": 0, "lines": 143}, {"filePath": "realm/realm-library/src/main/java/io/realm/Realm.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/RealmProxyMediator.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BulkInsertTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdateToRealm_list().2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm_emptyList()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm_emptyListWithCompositeMediator()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertToRealm_emptyListWithFilterableMediator()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdateToRealm_emptyList()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdateToRealm_emptyListWithCompositeMediator()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.BulkInsertTests.insertOrUpdateToRealm_emptyListWithFilterableMediator()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Realm.java", "spoonMethods": [{"spoonMethodName": "io.realm.Realm.insert(java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.Realm.insertOrUpdate(java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmProxyMediator.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 4, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "DynamicRealmObject.setObject() seg faults with invalid field name", "body": "```\ndynamicRealm.beginTransaction();\nDynamicRealmObject o = dynamicRealm.createObject(AllJavaTypes.CLASS_NAME);\no.setObject(\"boom\", o);\n```\n\nWe don't check if the column name exists for Object and just parse -1 on to `getLinkTarget` which seg faults.\n\nRight now DynamicRealmObject doesn't use `RealmObjectSchema` for these kinds of look-ups. Ideally all schema access should go through this class to enforce any additional rules we might have, but that will require us being aware if the schema is being invalidated by core so we can can recalculate cached information. Such a callback is already available and needed for interprocess support anyway.\n", "url": "https://github.com/realm/realm-java/issues/3087", "user": "cmelchior", "labels": ["T-Bug-Crash"], "created": "2016-06-29 15:56:43", "closed": "2017-10-24 13:45:38", "commits": {}, "ttf": 481.0002777777778, "commitsDetails": []}, {"title": "Using Map as class name causing compilation error", "body": "As in title:\n\n```\npublic class Map extends RealmObject {\n\nprivate double latitude;\nprivate double longitude;\nprivate int zoom;\n\npublic double getLatitude() {\n    return latitude;\n}\n\npublic void setLatitude(double latitude) {\n    this.latitude = latitude;\n}\n\npublic double getLongitude() {\n    return longitude;\n}\n\npublic void setLongitude(double longitude) {\n    this.longitude = longitude;\n}\n\npublic int getZoom() {\n    return zoom;\n}\n\npublic void setZoom(int zoom) {\n    this.zoom = zoom;\n}\n\n}\n```\n\nStacktrace:\n[...]/app/build/generated/source/apt/debug/io/realm/MapRealmProxy.java\nError:(23, 1) error: a type with the same simple name is already defined by the single-type-import of Map\nError:(232, 80) error: type Map does not take parameters\nError:(242, 75) error: type Map does not take parameters\nError:(251, 94) error: type Map does not take parameters\n\nRealm version(s): 1.0.1\n\nAndroid Studio version: 2.2 preview 4\n\nWhich Android version and device: all\n", "url": "https://github.com/realm/realm-java/issues/3077", "user": "dawidhyzy", "labels": ["T-Bug-Crash"], "created": "2016-06-27 11:36:25", "closed": "2016-07-01 02:52:10", "commits": {"3d70853304a1afa752db5f7bcd4f829d9f616a4a": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "1e54fb34ac126f902e3699cd562f209b9e48478e": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "a5c8a603b7f5fb4cc1e319f2419c889a6cb80025": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "f8163489641869a49fbff415a820a0912d5abdd6": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "99e6f221e35ab46738fd171f87ea5d6a89d437a0": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "3d70853304a1afa752db5f7bcd4f829d9f616a4a", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1e54fb34ac126f902e3699cd562f209b9e48478e", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a5c8a603b7f5fb4cc1e319f2419c889a6cb80025", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f8163489641869a49fbff415a820a0912d5abdd6", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["d87a1fbc8f282d63a71ca3f7c890831b877d9986"], "nameRev": "f8163489641869a49fbff415a820a0912d5abdd6 tags/v1.1.0~4^2^2~1", "commitMessage": "Use qualified name for model classes in generated code in order to avoid name conflict. (#3083)\n\n* use qualified name for model classes in generated code in order to avoid name conflict.\r\n\r\n* add model classes that test issue 3077.\r\n\r\n* update changelog for #3077\r\n", "commitDateTime": "2016-06-30 13:44:38", "authoredDateTime": "2016-06-30 13:44:38", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/ClassMetaData.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmJsonTypeHelper.java", "insertions": 23, "deletions": 11, "lines": 34}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyClassGenerator.java", "insertions": 88, "deletions": 92, "lines": 180}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyMediatorGenerator.java", "insertions": 18, "deletions": 21, "lines": 39}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/Utils.java", "insertions": 27, "deletions": 16, "lines": 43}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/AllTypesRealmProxy.java", "insertions": 42, "deletions": 43, "lines": 85}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/BooleansRealmProxy.java", "insertions": 14, "deletions": 15, "lines": 29}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/NullTypesRealmProxy.java", "insertions": 16, "deletions": 17, "lines": 33}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/RealmDefaultModuleMediator.java", "insertions": 19, "deletions": 20, "lines": 39}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/SimpleRealmProxy.java", "insertions": 15, "deletions": 16, "lines": 31}, {"filePath": "realm/realm-library/src/androidTest/assets/asset_file.realm", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmConfigurationTests.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/entities/AssetFileModule.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/entities/conflict/List.java", "insertions": 29, "deletions": 0, "lines": 29}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/entities/conflict/Map.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/entities/conflict/String.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/entities/conflict/package-info.java", "insertions": 22, "deletions": 0, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClassMetaData.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.ClassMetaData.checkListTypes()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmJsonTypeHelper.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.RealmJsonTypeHelper.SimpleTypeConverter.emitGetObjectWithPrimaryKeyValue(java.lang.String,java.lang.String,com.squareup.javawriter.JavaWriter)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmJsonTypeHelper.emitCreateObjectWithPrimaryKeyValue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.squareup.javawriter.JavaWriter)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmJsonTypeHelper.SimpleTypeConverter.emitGetObjectWithPrimaryKeyValue(java.lang.String,java.lang.String,java.lang.String,com.squareup.javawriter.JavaWriter)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmJsonTypeHelper.emitGetObjectWithPrimaryKeyValue(java.lang.String,java.lang.String,java.lang.String,com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmJsonTypeHelper.1.emitGetObjectWithPrimaryKeyValue(java.lang.String,java.lang.String,java.lang.String,com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmJsonTypeHelper.2.emitGetObjectWithPrimaryKeyValue(java.lang.String,java.lang.String,java.lang.String,com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmProxyClassGenerator.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator", "TOT": 7, "UPD": 3, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.generate()", "TOT": 11, "UPD": 4, "INS": 1, "MOV": 2, "DEL": 4}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitEqualsMethod(com.squareup.javawriter.JavaWriter)", "TOT": 17, "UPD": 6, "INS": 6, "MOV": 0, "DEL": 5}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitConstructor(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitInitTableMethod(com.squareup.javawriter.JavaWriter)", "TOT": 15, "UPD": 8, "INS": 2, "MOV": 4, "DEL": 1}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitValidateTableMethod(com.squareup.javawriter.JavaWriter)", "TOT": 16, "UPD": 12, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitGetTableNameMethod(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitCopyOrUpdateMethod(com.squareup.javawriter.JavaWriter)", "TOT": 8, "UPD": 6, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitCopyMethod(com.squareup.javawriter.JavaWriter)", "TOT": 24, "UPD": 11, "INS": 1, "MOV": 7, "DEL": 5}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitCreateDetachedCopyMethod(com.squareup.javawriter.JavaWriter)", "TOT": 9, "UPD": 9, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitUpdateMethod(com.squareup.javawriter.JavaWriter)", "TOT": 27, "UPD": 11, "INS": 1, "MOV": 9, "DEL": 6}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitToStringMethod(com.squareup.javawriter.JavaWriter)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitCreateOrUpdateUsingJsonObject(com.squareup.javawriter.JavaWriter)", "TOT": 11, "UPD": 8, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitCreateUsingJsonStream(com.squareup.javawriter.JavaWriter)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitColumnIndicesClass(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.columnInfoClassName()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitClassFields(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitAccessors(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmProxyMediatorGenerator.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator", "TOT": 8, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 3}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitMediatorSwitch(io.realm.processor.RealmProxyMediatorGenerator$ProxySwitchStatement,com.squareup.javawriter.JavaWriter,boolean)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitCreateTableMethod(com.squareup.javawriter.JavaWriter).1.emitStatement(int,com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitValidateTableMethod(com.squareup.javawriter.JavaWriter).2.emitStatement(int,com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitGetFieldNamesMethod(com.squareup.javawriter.JavaWriter).3.emitStatement(int,com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitGetTableNameMethod(com.squareup.javawriter.JavaWriter).4.emitStatement(int,com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitNewInstanceMethod(com.squareup.javawriter.JavaWriter).5.emitStatement(int,com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitCopyToRealmMethod(com.squareup.javawriter.JavaWriter).6.emitStatement(int,com.squareup.javawriter.JavaWriter)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitCreteOrUpdateUsingJsonObject(com.squareup.javawriter.JavaWriter).7.emitStatement(int,com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitCreateUsingJsonStream(com.squareup.javawriter.JavaWriter).8.emitStatement(int,com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitCreateDetachedCopyMethod(com.squareup.javawriter.JavaWriter).9.emitStatement(int,com.squareup.javawriter.JavaWriter)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.generate()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 3}, {"spoonMethodName": "io.realm.processor.RealmProxyMediatorGenerator.emitFields(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Utils.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.Utils.getGenericType(javax.lang.model.element.VariableElement)", "TOT": 14, "UPD": 5, "INS": 0, "MOV": 9, "DEL": 0}, {"spoonMethodName": "io.realm.processor.Utils.getFieldTypeSimpleName(javax.lang.model.element.VariableElement)", "TOT": 17, "UPD": 4, "INS": 1, "MOV": 10, "DEL": 2}, {"spoonMethodName": "io.realm.processor.Utils.getProxyClassSimpleName(javax.lang.model.element.VariableElement)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.Utils.getFieldTypeQualifiedName(javax.lang.model.element.VariableElement)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.Utils.getGenericTypeQualifiedName(javax.lang.model.element.VariableElement)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AllTypesRealmProxy.java", "spoonMethods": []}, {"spoonFilePath": "BooleansRealmProxy.java", "spoonMethods": []}, {"spoonFilePath": "NullTypesRealmProxy.java", "spoonMethods": []}, {"spoonFilePath": "RealmDefaultModuleMediator.java", "spoonMethods": []}, {"spoonFilePath": "SimpleRealmProxy.java", "spoonMethods": []}, {"spoonFilePath": "RealmConfigurationTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmConfigurationTests.assetFileValidFile()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.RealmConfigurationTests.initialDataTransactionAssetFile()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AssetFileModule.java", "spoonMethods": [{"spoonMethodName": "io.realm.entities.AssetFileModule", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "List.java", "spoonMethods": [{"spoonMethodName": "io.realm.entities.conflict.List", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Map.java", "spoonMethods": [{"spoonMethodName": "io.realm.entities.conflict.Map", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "String.java", "spoonMethods": [{"spoonMethodName": "io.realm.entities.conflict.String", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "package-info.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}, {"commitHash": "99e6f221e35ab46738fd171f87ea5d6a89d437a0", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 4, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Exception : Invalid format of Realm file.", "body": "> I'm using realm for databse processingin my android project. And I got some user's report about the crash:\n\n``` java\njava.lang.IllegalArgumentException: Illegal Argument: Invalid format of Realm file.\nat io.realm.internal.SharedGroup.createNativeWithImplicitTransactions()(SourceFile:-2)\nat io.realm.internal.SharedGroup.&lt;init&gt;()(SourceFile:64)\nat io.realm.internal.SharedGroupManager.&lt;init&gt;()(SourceFile:49)\nat io.realm.BaseRealm.&lt;init&gt;()(SourceFile:77)\nat io.realm.Realm.&lt;init&gt;()(SourceFile:138)\nat io.realm.Realm.createAndValidate()(SourceFile:269)\nat io.realm.Realm.createInstance()(SourceFile:249)\nat io.realm.RealmCache.createRealmOrGetFromCache()(SourceFile:114)\nat io.realm.Realm.getInstance()(SourceFile:213)\n```\n\n> I never face the crash while developing but seems that my user got it many times. Below is my implementation which crash was detected:\n\n``` java\n\nprivate Realm getRealmFromConfig(Context context) {\n    RealmConfiguration config = getRealmConfigByDBName(context, databaseName);\n    Realm.compactRealm(config);\n    return Realm.getInstance(config);\n}\n\npublic RealmConfiguration getRealmConfigByDBName(Context context, String dbName) {\n    RealmConfiguration config = new RealmConfiguration.Builder(context)\n            .name(dbName)\n            .schemaVersion(1)\n            .setModules(new Module())\n            .deleteRealmIfMigrationNeeded()\n            .build();\n    return config;\n}\n\n```\n#### Details\n\nThe crash log points out that crash occur in line return Realm.getInstance(config);\n\nI have a look at Realm.java file but still can not get any more information which related to message Invalid format of Realm file. So any one can help to give me a solution or workaround which can resolve the problem or some theory about why crash occurs.\n\n> Thanks for helping", "url": "https://github.com/realm/realm-java/issues/3064", "user": "dinhthaidaica", "labels": ["O-Community", "Pipeline-On-Hold", "Reproduction-Required", "T-Bug-Crash"], "created": "2016-06-24 08:48:54", "closed": "2019-11-27 20:54:39", "commits": {}, "ttf": 1251.0002777777777, "commitsDetails": []}, {"title": "Realm not copying database from assets", "body": "#### Goal\n\n> What do you want to achieve?\n> Copy a pre-filled database from assets by using .assetFile(context, \"default.realm\")\n#### Expected Results\n\n> Database gets copied and contains all the data\n#### Actual Results\n\n>  Copied database is only 4kb in size, while the original database in the assets folder is 123kb in size.\n> Using realm.isEmpty() returns true, which it should not. The Realm Browser for OS X correctly shows all the data in the database. Using realm.where() always returns an empty result.\n#### Steps & Code to Reproduce\n\n> RealmConfiguration config = new RealmConfiguration.Builder(context)\n>     .name(\"default.realm\")\n>     .schemaVersion(1)\n>     .assetFile(context, \"default.realm\")\n>     .deleteRealmIfMigrationNeeded()\n>     .build();\n> \n> Realm realm = Realm.getInstance(config);\n> realm.isEmpty() // => true\n\nUsing this code, realm.isEmpty() always prints true\n#### Version of Realm and tooling\n\nRealm version(s): 1.0.0\n\nAndroid Studio version: 2.2 Preview 2\n\nWhich Android version and device: CM 13 Android 6.0.1 Galaxy S5 klte\n", "url": "https://github.com/realm/realm-java/issues/2933", "user": "AlexLardschneider", "labels": ["T-Bug-Crash"], "created": "2016-06-03 11:12:58", "closed": "2016-06-15 09:30:18", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "Incompatible lock file. Info size doesn't match, 1112 1120.", "body": "The issue https://github.com/realm/realm-java/issues/2459 was closed, even though this problem still persists on 1.0.0 realm version.\n\nFatal Exception: io.realm.exceptions.RealmError: Unrecoverable error. Incompatible lock file. Info size doesn't match, 1112 1120. in io_realm_internal_SharedGroup.cpp line 113\nat io.realm.internal.SharedGroup.createNativeWithImplicitTransactions(SharedGroup.java)\nat io.realm.internal.SharedGroup.(SharedGroup.java:64)\nat io.realm.internal.SharedGroupManager.(SharedGroupManager.java:49)\nat io.realm.BaseRealm.(BaseRealm.java:79)\nat io.realm.Realm.(Realm.java:138)\nat io.realm.Realm.createAndValidate(Realm.java:248)\nat io.realm.Realm.createInstance(Realm.java:228)\nat io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:126)\nat io.realm.Realm.getInstance(Realm.java:192)\n", "url": "https://github.com/realm/realm-java/issues/2928", "user": "vytautasgimbutas", "labels": ["Reproduction-Required", "T-Bug-Crash", "T-Duplicate"], "created": "2016-06-02 09:42:53", "closed": "2016-06-03 08:29:37", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ThrowingException 16, std::exception in io_realm_internal_TableQuery.cpp line 1288", "body": "After  `ThrowingException 16, std::exception in io_realm_internal_TableQuery.cpp line 1288` exception is logged, i can't\n1. load data using Observable (Observable' s onNext not called, only `ThrowingException 16, std::exception in io_realm_internal_TableQuery.cpp line 1288` is logged in logcat)\n2. load data synchronously (`Requested table is not in this Realm. Creating it requires a transaction` exception happens)\n3. insert data. Whenever i insert data, `A RealmObject with no @PrimaryKey cannot be updated` error happened, although that class has a `@PrimaryKey` annotated field.\n4. finally initialize Realm with `ArrayIndexOutOfBoundsException: columnIndex > available columns.`exception\n\n**Case 1~3 dismiss after process is restarted (swipe it in recent tasks), but i could reproduce below steps. After case 4, i uninstalled application and no longer reproduce any of problems.**\n#### Steps & Code to Reproduce\n\nThe class that have this problem query data and is listening changes (using observable) in main thread. At the same time every data about that class are removed (`realm.delete(*.class)`) and re-inserted with fresh one from server in worker thread.\n\nI tried to find reproduce step for 1~2 hours, but i couldn't. \n#### Version of Realm and tooling\n\nRealm version(s): 1.0.0\n\nAndroid Studio version: 2.1.1\n\nWhich Android version and device: 6.0.1 (Galaxy S6)\n", "url": "https://github.com/realm/realm-java/issues/2901", "user": "hohnamkung", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2016-05-30 08:34:56", "closed": "2017-09-05 12:13:48", "commits": {}, "ttf": 463.0002777777778, "commitsDetails": []}, {"title": "Realm crashing in Samsung Note 2 due to \"Encrypted interprocess sharing\" is currently unsupported", "body": "```\nFatal Exception: io.realm.exceptions.RealmError\nUnrecoverable error. /data/data/com.conem.app/files/file.realm: Encrypted interprocess sharing is currently unsupported in io_realm_internal_SharedGroup.cpp line 113\n Raw\nio.realm.internal.SharedGroup.createNativeWithImplicitTransactions (SharedGroup.java)\nio.realm.internal.SharedGroup. (SharedGroup.java)\nio.realm.internal.SharedGroupManager. (SharedGroupManager.java)\nio.realm.BaseRealm. (BaseRealm.java)\nio.realm.Realm. (Realm.java)\nio.realm.Realm.createAndValidate (Realm.java:269)\nio.realm.Realm.createInstance (Realm.java:249)\nio.realm.RealmCache.createRealmOrGetFromCache (RealmCache.java:118)\nio.realm.Realm.getDefaultInstance (Realm.java:195)\n```\n#### Version of Realm and tooling\n\nRealm version(s): 0.90.0\n\nAndroid Studio version: 2.1\n\nWhich Android version and device: Samsung Note 2\n\nNative Platform : armeabi-v7a \n", "url": "https://github.com/realm/realm-java/issues/2762", "user": "mihirjoshi21", "labels": ["T-Bug-Crash"], "created": "2016-05-10 06:47:06", "closed": "2016-10-27 13:06:30", "commits": {}, "ttf": 170.00027777777777, "commitsDetails": []}, {"title": "native crash in RealmResults#deleteAllFromRealm()", "body": "#### Goal\n\nallow to call `RealmResults.deleteAllFromRealm()` against the `RealmResults` object which contains deleted object in it.\n#### Expected Results\n\nno native crash and all existing objects are deleted.\n#### Actual Results\n\nnative crash\n#### Steps & Code to Reproduce\n\nexecuting following sample code\n#### Code Sample\n\n``` java\n        realm.beginTransaction();\n        realm.createObject(Dog.class);\n        realm.createObject(Dog.class);\n        realm.commitTransaction();\n\n        RealmResults<Dog> results = realm.where(Dog.class).findAll();\n\n        realm.beginTransaction();\n\n        Dog dog = results.get(0);\n        dog.deleteFromRealm();\n\n        results.deleteAllFromRealm();\n\n        realm.commitTransaction();\n```\n#### Version of Realm and tooling\n\nRealm version(s): current master\n\nAndroid Studio version: 2.1\n\nWhich Android version and device: 4.1.1 on genymotion\n", "url": "https://github.com/realm/realm-java/issues/2759", "user": "zaki50", "labels": ["Blocked", "T-Bug-Crash"], "created": "2016-05-09 22:24:24", "closed": "2016-05-17 08:59:14", "commits": {"7b0ff440668d7da0557efea04d8ba745aecc0ec1": {"commitGHEventType": "referenced", "commitUser": "kneth"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "7b0ff440668d7da0557efea04d8ba745aecc0ec1", "commitGHEventType": "referenced", "commitUser": "kneth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "NoClassDefFoundError in few devices", "body": "Logcat from crashlytics. \n\n```\nFatal Exception: java.lang.NoClassDefFoundError\nio/realm/exceptions/RealmError\n Raw\nio.realm.internal.SharedGroup.createNativeWithImplicitTransactions (SharedGroup.java)\nio.realm.internal.SharedGroup. (SharedGroup.java)\nio.realm.internal.SharedGroupManager. (SharedGroupManager.java)\nio.realm.BaseRealm. (BaseRealm.java)\nio.realm.Realm. (Realm.java)\nio.realm.Realm.createAndValidate (Realm.java:246)\nio.realm.Realm.createInstance (Realm.java:231)\nio.realm.RealmCache.createRealmOrGetFromCache (RealmCache.java:114)\nio.realm.Realm.getDefaultInstance (Realm.java:181)\n```\n#### Version of Realm and tooling\n\nRealm version(s):  - 0.87.4\n\nAndroid Studio version: 2.1\n\nWhich Android version and device: Asus and Samsung (4.4.2 and 4.4.4) \n", "url": "https://github.com/realm/realm-java/issues/2714", "user": "mihirjoshi21", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2016-05-02 15:53:55", "closed": "2016-05-04 08:54:24", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Field that implements RealmModel", "body": "Can I use fields that implements RealmModel? Thanks!\n", "url": "https://github.com/realm/realm-java/issues/2654", "user": "astulnikov", "labels": ["T-Bug-Crash"], "created": "2016-04-24 09:42:06", "closed": "2016-04-25 11:53:18", "commits": {"8c24a59ab7b15236ed6f8b9055b1447002d9a83b": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "548960156f87b0ce74ffd4ca40c4d0de116efe02": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "5c8b406026b33bb8b69afc5d30e9bf94167f5e89": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "475ecbbd359f2fb21231241f7ef42e5ea8ff9299": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "8c24a59ab7b15236ed6f8b9055b1447002d9a83b", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "548960156f87b0ce74ffd4ca40c4d0de116efe02", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5c8b406026b33bb8b69afc5d30e9bf94167f5e89", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "475ecbbd359f2fb21231241f7ef42e5ea8ff9299", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["7f20ae48e31d9b1c3a3a71963bc65b459ee2827f"], "nameRev": "475ecbbd359f2fb21231241f7ef42e5ea8ff9299 tags/v0.89.1~2", "commitMessage": "Fix using RealmModel as a field (#2666)\n\n* Modify and rename isRealmObject to isRealmModel.\r\n* Modify annotation processor to allow RealmModel as a field.\r\n\r\nFix #2654", "commitDateTime": "2016-04-25 13:52:48", "authoredDateTime": "2016-04-25 13:52:48", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/ClassMetaData.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyClassGenerator.java", "insertions": 11, "deletions": 11, "lines": 22}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/Utils.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "realm/realm-annotations-processor/src/test/java/io/realm/processor/RealmProcessorTest.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/AllTypesRealmProxy.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/NullTypesRealmProxy.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "realm/realm-annotations-processor/src/test/resources/some/test/SimpleRealmModel.java", "insertions": 29, "deletions": 0, "lines": 29}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmModelTests.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/entities/pojo/RealmModelWithRealmModelField.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/entities/pojo/RealmObjectWithRealmModelField.java", "insertions": 31, "deletions": 0, "lines": 31}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClassMetaData.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.ClassMetaData.categorizeClassElements()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmProxyClassGenerator.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.generate()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitCopyMethod(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitCreateDetachedCopyMethod(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitUpdateMethod(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitToStringMethod(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitCreateOrUpdateUsingJsonObject(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitCreateUsingJsonStream(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitAccessors(com.squareup.javawriter.JavaWriter)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitInitTableMethod(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProxyClassGenerator.emitValidateTableMethod(com.squareup.javawriter.JavaWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Utils.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.Utils", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.Utils.isRealmObject(javax.lang.model.element.VariableElement)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.Utils.initialize(javax.annotation.processing.ProcessingEnvironment)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmProcessorTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.processor.RealmProcessorTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.processor.RealmProcessorTest.compileWithRealmModelFieldInReamlModel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AllTypesRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.AllTypesRealmProxy.realmSet$columnObject(some.test.AllTypes)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NullTypesRealmProxy.java", "spoonMethods": [{"spoonMethodName": "io.realm.NullTypesRealmProxy.realmSet$fieldObjectNull(some.test.NullTypes)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SimpleRealmModel.java", "spoonMethods": [{"spoonMethodName": "some.test.SimpleRealmModel", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmModelTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmModelTests.realmModelWithRealmModelField()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmModelTests.realmObjectWithRealmModelField()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmModelWithRealmModelField.java", "spoonMethods": [{"spoonMethodName": "io.realm.entities.pojo.RealmModelWithRealmModelField", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmObjectWithRealmModelField.java", "spoonMethods": [{"spoonMethodName": "io.realm.entities.pojo.RealmObjectWithRealmModelField", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Realm continuously crashing on arm64-v8a architecture", "body": "Transfer issue from SO http://stackoverflow.com/questions/36639081/realm-continuously-crashing-on-arm64-v8a-architecture\n\nI am splitting for different CPU architecture. \n\n```\n    ext.versionCodes = ['armeabi': 31, 'armeabi-v7a': 32, 'arm64-v8a': 33, 'mips': 34, 'x86': 35, 'x86_64': 36]\n```\n\nRealm is crashing in devices which have `arm64-v8a` like **Galaxy S7 Edge** &  **Note 5**. \n\n**Stack trace from Google Developers Console -** \n\n```\n    *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n    Build fingerprint: 'samsung/hero2qltetmo/hero2qltetmo:6.0.1/MMB29M/G935TUVU2APC8:user/release-keys'\n    Revision: '15'\n    ABI: 'arm64'\n    pid: 31837, tid: 31872, name: AsyncTask #1  >>> com.app <<<\n    signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x570048\n        x0   0000007f938d1c08  x1   0000000000000000  x2   0000000000000000  x3   0000000000000000\n        x4   0000000000000000  x5   0000000000000000  x6   0000000000000000  x7   0000000000000000\n        x8   0000000000000001  x9   0000007f99bde000  x10  0000007f99bdd000  x11  0000000000000000\n        x12  0000007f9d88a888  x13  0000000000000001  x14  0000000000000000  x15  0000007f99cfc68c\n        x16  0000007f846e3820  x17  0000007f9d814038  x18  0000000000000000  x19  0000000000570048\n        x20  0000007f997a9660  x21  0000007f984a8e00  x22  0000007f938d1c00  x23  0000000012cc51c0\n        x24  0000000012cc5160  x25  0000000012d70640  x26  0000007f843f3480  x27  0000000000000000\n        x28  0000000000000001  x29  0000007f843f33f0  x30  0000007f845c702c\n        sp   0000007f843f33f0  pc   0000007f845c702c  pstate 0000000060000000\n\n    backtrace:\n        #00 pc 00000000000c602c  /data/app/com.app -1/lib/arm64/librealm-jni.so\n        #01 pc 00000000013a1af4  /data/app/com.app- /oat/arm64/base.odex (offset 0x94b000)\n```\n\n**Stack trace from Crashlytics**\n\n```\n    Caused by java.lang.ExceptionInInitializerError\n    io.realm.internal.SharedGroupManager. (SharedGroupManager.java:43)\n    io.realm.BaseRealm. (BaseRealm.java:76)\n    io.realm.Realm. (Realm.java:126)\n    io.realm.Realm.createAndValidate (Realm.java:246)\n    io.realm.Realm.createInstance (Realm.java:231)\n    io.realm.RealmCache.createRealmOrGetFromCache (RealmCache.java:114)\n    io.realm.Realm.getDefaultInstance (Realm.java:181)\n    com.app.display.ActivitySplash$1.doInBackground (ActivitySplash.java:58)\n    com.app.display.ActivitySplash$1.doInBackground (ActivitySplash.java:52)\n    android.os.AsyncTask$2.call (AsyncTask.java:287)\n    java.lang.Thread.run (Thread.java:856)\n```\n", "url": "https://github.com/realm/realm-java/issues/2611", "user": "beeender", "labels": ["T-Bug-Crash"], "created": "2016-04-15 08:18:21", "closed": "2016-05-13 03:18:21", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "Unrecoverable error. Bad transaction log in io_realm_internal_SharedGroup.cpp", "body": "Transferred from #2402 No.2 \n\nCrash log at\nhttp://crashes.to/s/24c6157fa0e\n\nException see below\n\n```\nFatal Exception: io.realm.exceptions.RealmError: Unrecoverable error. Bad transaction log in io_realm_internal_SharedGroup.cpp line 157\n       at io.realm.internal.SharedGroup.nativeAdvanceRead(SharedGroup.java)\n       at io.realm.internal.SharedGroup.advanceRead(SharedGroup.java:86)\n       at io.realm.internal.ImplicitTransaction.advanceRead(ImplicitTransaction.java:33)\n       at io.realm.internal.SharedGroupManager.advanceRead(SharedGroupManager.java:74)\n       at io.realm.HandlerController.realmChanged(HandlerController.java:333)\n       at io.realm.HandlerController.handleMessage(HandlerController.java:100)\n       at android.os.Handler.dispatchMessage(Handler.java:98)\n       at android.os.Looper.loop(Looper.java:136)\n       at android.app.ActivityThread.main(ActivityThread.java:5120)\n       at java.lang.reflect.Method.invokeNative(Method.java)\n       at java.lang.reflect.Method.invoke(Method.java:515)\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:792)\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:608)\n       at dalvik.system.NativeStart.main(NativeStart.java)\n```\n", "url": "https://github.com/realm/realm-java/issues/2567", "user": "beeender", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2016-04-07 02:26:55", "closed": "2017-03-15 09:00:01", "commits": {}, "ttf": 342.0002777777778, "commitsDetails": []}, {"title": "RealmSchema.remove() doesn't clear primary key metadata", "body": "There is `User` table in APP version 1.0: \n\n```\n@Table(name=\"User1\")\npublic class User extends RealmObject {\n\n    @PrimaryKey\n    public int    uid;\n\n    @Required\n    public String name;\n}\n```\n\nIn APP version 2.0, add a field `age`:\n\n```\n@Table(name=\"User2\")\npublic class User extends RealmObject {\n\n    @PrimaryKey\n    public int    uid;\n\n    @Required\n    public String name;\n\n    public int    age;\n}\n```\n\nI usually **change** `User` **table name** in version 2.0 by changing **annotation**. i don't want to call `addField` or `removeField`. If the requirement changes every version\uff0ci have to write code in Migration every time i change User<br/>\n\nSo, i run such code:\n\n```\nRealmConfiguration config = new RealmConfiguration.Builder(getApplicationContext()).build();\n\nRealm realm = Realm.getInstance(config);\n\nrealm.beginTransaction();\nrealm.getSchema().remove(\"User\");\nrealm.commitTransaction();\n\nrealm.beginTransaction();\nrealm.copyToRealmOrUpdate(user);\n```\n\nAnd then, throws exception:\n\n```\nE/AndroidRuntime: FATAL EXCEPTION: main\nProcess: com.example.realm, PID: 26909\njava.lang.IllegalArgumentException: A RealmObject with no @PrimaryKey cannot be updated: class com.example.realm.bean.User\nat io.realm.Realm.checkHasPrimaryKey(Realm.java:1411)\nat io.realm.Realm.copyToRealmOrUpdate(Realm.java:764)\nat com.example.realm.MainActivity.testTable(MainActivity.java:72)\n```\n", "url": "https://github.com/realm/realm-java/issues/2555", "user": "kkmike999", "labels": ["T-Bug-Crash"], "created": "2016-04-05 13:15:38", "closed": "2016-04-25 11:26:20", "commits": {"0d6186fa2ae26a62693010d465b0f01073f51a94": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "b3730c421d936189263370f3bf704e9d3f0ce195": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "7f20ae48e31d9b1c3a3a71963bc65b459ee2827f": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 19.00027777777778, "commitsDetails": [{"commitHash": "0d6186fa2ae26a62693010d465b0f01073f51a94", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b3730c421d936189263370f3bf704e9d3f0ce195", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "7f20ae48e31d9b1c3a3a71963bc65b459ee2827f", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["cb54b4429ac1d0b6128f92c696707ad68adf845b"], "nameRev": "7f20ae48e31d9b1c3a3a71963bc65b459ee2827f tags/v0.89.1~3", "commitMessage": "Handle PK when calling RealmSchema's remove/rename (#2663)\n\n* Handle PK when calling RealmSchema's remove/rename\r\n\r\n* RealmSchema.remove() should remove the field from PK table.\r\n* RealmSchema.rename() should change the corresponding row in the PK\r\n  table.\r\n\r\nFix #2555", "commitDateTime": "2016-04-25 13:15:17", "authoredDateTime": "2016-04-25 13:15:17", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmObjectSchemaTests.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmSchemaTests.java", "insertions": 69, "deletions": 3, "lines": 72}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmSchema.java", "insertions": 19, "deletions": 0, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmObjectSchemaTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmObjectSchemaTests.renameField_withPrimaryKey()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmSchemaTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmSchemaTests.getAll()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmSchemaTests.rename_shouldChangeInfoInPKTable()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmSchemaTests.remove_shouldRemoveInfoFromPKTable()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmSchemaTests.setUp()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmObjectSchema.java", "spoonMethods": []}, {"spoonFilePath": "RealmSchema.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmSchema.remove(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmSchema.rename(java.lang.String,java.lang.String)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Realm Shared Group Crash", "body": "The exception I am getting is as follows\n\n```\nFatal Exception: io.realm.exceptions.RealmError: Unrecoverable error. Wrong transactional state (no active transaction, wrong type of transaction, or transaction already in progress) in io_realm_internal_SharedGroup.cpp line 157\n       at io.realm.internal.SharedGroup.nativeAdvanceRead(SharedGroup.java)\n       at io.realm.internal.SharedGroup.advanceRead(SharedGroup.java:86)\n       at io.realm.internal.ImplicitTransaction.advanceRead(ImplicitTransaction.java:33)\n       at io.realm.internal.SharedGroupManager.advanceRead(SharedGroupManager.java:74)\n       at io.realm.HandlerController.realmChanged(HandlerController.java:333)\n       at io.realm.HandlerController.handleMessage(HandlerController.java:100)\n       at android.os.Handler.dispatchMessage(Handler.java:98)\n       at android.os.Looper.loop(Looper.java:148)\n       at android.os.HandlerThread.run(HandlerThread.java:61)\n```\n", "url": "https://github.com/realm/realm-java/issues/2553", "user": "Sutirth", "labels": ["T-Bug-Crash"], "created": "2016-04-05 09:08:55", "closed": "2016-05-04 08:44:43", "commits": {}, "ttf": 28.00027777777778, "commitsDetails": []}, {"title": "Calling setter method in no argument constructor results in NPE", "body": "#### Goal\n\nBe able to use setter methods in the no arguments constructor.\n#### Expected Results\n\nNo NPE and field set to the given value.\n#### Actual Results\n\n```\nCaused by: java.lang.NullPointerException: Attempt to invoke virtual method 'void io.realm.BaseRealm.checkIfValid()' on a null object reference\n                                                                                at io.realm.ModelRealmProxy.realmSet$string(ModelRealmProxy.java:62)\n                                                                                at de.jonasrottmann.realmtest.Model.setString(Model.java:13)\n                                                                                at de.jonasrottmann.realmtest.Model.<init>(Model.java:19)\n                                                                                at io.realm.ModelRealmProxy.<init>(ModelRealmProxy.java:51)\n                                                                                at io.realm.DefaultRealmModuleMediator.newInstance(DefaultRealmModuleMediator.java:80)\n                                                                                at io.realm.BaseRealm.get(BaseRealm.java:521)\n                                                                                at io.realm.Realm.createObject(Realm.java:709)\n```\n#### Code Sample\n\n``` java\n\npublic class Model extends RealmObject {\n    public String string;\n\n\n\n    public void setString(String string) {\n        this.string = string;\n    }\n\n\n\n    public Model() {\n        setString(\"Success!\");\n    }\n}\n\n```\n#### Version of Realm and tooling\n\nRealm version(s): 0.88.2\n\nAndroid Studio version: 2.1 Preview 4\n\nWhich Android version and device: 6.0.1 (MHC19J) on Nexus 5X\n", "url": "https://github.com/realm/realm-java/issues/2536", "user": "jonasrottmann", "labels": ["T-Bug-Crash"], "created": "2016-03-31 11:53:02", "closed": "2016-09-16 12:57:12", "commits": {"d2d949be64b8a8f4c3e7e276283c7aadad93f87f": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "1bd555a7827bf6e3dd709e3d5341e142fc6cdbbd": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "6ed38db23c33ae43ad3c1253e8dd1b78d41d2d4d": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "48197be15f754cefa55eefb8794f01f202d58fa0": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 169.00027777777777, "commitsDetails": [{"commitHash": "d2d949be64b8a8f4c3e7e276283c7aadad93f87f", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1bd555a7827bf6e3dd709e3d5341e142fc6cdbbd", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "6ed38db23c33ae43ad3c1253e8dd1b78d41d2d4d", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "48197be15f754cefa55eefb8794f01f202d58fa0", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["3cbc084b3c888e9555629638e31adebbfd369c8f"], "nameRev": "48197be15f754cefa55eefb8794f01f202d58fa0 tags/v2.0.0~16^2~14", "commitMessage": "Allow to specify default value of the field in model's constructor (#3397)\n\n* Allow to call its accessors, and replace its field accesses with accessor calls in model's constructor.\r\n\r\nfixes #777\r\nfixes #2536\r\n\r\n* use field instead of checking transaction\r\n\r\n* fix a bug that acceptDefaultValue is not set correctly\r\n\r\n* reject default values when the getter of a model creates other model object\r\n\r\n* add simple test for default value\r\n\r\n* supports default value of model field\r\n\r\n* supports default value of RealmList fields\r\n\r\n* add tests for assignment in constructor and setter in constructor\r\n\r\n* update javadoc comments of createObject\r\n\r\n* always ignores the default value of primary key if the object is managed\r\n\r\n* update javadoc\r\n\r\n* add a test for default values handling in copyToRealm(). the last assertion of RealmTests.copyToRealm_defaultValuesAreIgnored() is failing now.\r\n\r\n* refactor tests\r\n\r\n* use isPrimaryKey()\r\n\r\n* fix a bug that unexpected realm object is created by default value of RealmModel/RealmList fields\r\n\r\n* remove extra ';' from generated code\r\n\r\n* add more tests for default value\r\n\r\n* fix tests\r\n\r\n* fix a bug that creates unexpected objects\r\n\r\n* rename internal methods\r\n\r\n* update changelog\r\n\r\n* update CHANGELOG\r\n\r\n* review comments\r\n\r\n* update CHANGELOG\r\n\r\n* added a description of how proxy object should be created in the Javadoc comment of RealmProcessor\r\n", "commitDateTime": "2016-09-16 21:57:12", "authoredDateTime": "2016-09-16 21:57:12", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "realm-transformer/src/main/groovy/io/realm/transformer/BytecodeModifier.groovy", "insertions": 5, "deletions": 24, "lines": 29}, {"filePath": "realm-transformer/src/main/groovy/io/realm/transformer/RealmTransformer.groovy", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm-transformer/src/test/groovy/io/realm/transformer/BytecodeModifierTest.groovy", "insertions": 3, "deletions": 36, "lines": 39}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/ClassMetaData.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmJsonTypeHelper.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmProcessor.java", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyClassGenerator.java", "insertions": 160, "deletions": 34, "lines": 194}, {"filePath": "realm/realm-annotations-processor/src/main/java/io/realm/processor/RealmProxyMediatorGenerator.java", "insertions": 14, "deletions": 2, "lines": 16}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/AllTypesRealmProxy.java", "insertions": 208, "deletions": 16, "lines": 224}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/BooleansRealmProxy.java", "insertions": 86, "deletions": 7, "lines": 93}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/NullTypesRealmProxy.java", "insertions": 368, "deletions": 8, "lines": 376}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/RealmDefaultModuleMediator.java", "insertions": 13, "deletions": 6, "lines": 19}, {"filePath": "realm/realm-annotations-processor/src/test/resources/io/realm/SimpleRealmProxy.java", "insertions": 53, "deletions": 6, "lines": 59}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmAsyncQueryTests.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmJsonTests.java", "insertions": 221, "deletions": 1, "lines": 222}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmResultsTests.java", "insertions": 78, "deletions": 0, "lines": 78}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmTests.java", "insertions": 310, "deletions": 0, "lines": 310}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/TestHelper.java", "insertions": 58, "deletions": 0, "lines": 58}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/entities/DefaultValueConstructor.java", "insertions": 227, "deletions": 0, "lines": 227}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/entities/DefaultValueOfField.java", "insertions": 213, "deletions": 0, "lines": 213}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/entities/DefaultValueSetter.java", "insertions": 231, "deletions": 0, "lines": 231}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/entities/PrimaryKeyWithNoPrimaryKeyObjectRelation.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/entities/RandomPrimaryKey.java", "insertions": 54, "deletions": 0, "lines": 54}, {"filePath": "realm/realm-library/src/main/java/io/realm/BaseRealm.java", "insertions": 66, "deletions": 14, "lines": 80}, {"filePath": "realm/realm-library/src/main/java/io/realm/DynamicRealm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java", "insertions": 17, "deletions": 9, "lines": 26}, {"filePath": "realm/realm-library/src/main/java/io/realm/ProxyState.java", "insertions": 31, "deletions": 0, "lines": 31}, {"filePath": "realm/realm-library/src/main/java/io/realm/Realm.java", "insertions": 46, "deletions": 4, "lines": 50}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/RealmQuery.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/RealmProxyMediator.java", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/modules/CompositeMediator.java", "insertions": 8, "deletions": 2, "lines": 10}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/modules/FilterableMediator.java", "insertions": 8, "deletions": 2, "lines": 10}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "SharedGroup crash when init realm file.", "body": "I said once before about this crash, but I still can't reproduce it.\n\nI share crash log below\nhttp://crashes.to/s/6f786c3c97c\n\nThe problem line is\n\n```\nmRealm = Realm.getDefaultInstance();\n```\n\nI hope you solve asap, cause it is most crash now for us, and it gives very bad experience to our users.\n", "url": "https://github.com/realm/realm-java/issues/2524", "user": "maryangmin", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2016-03-29 01:12:19", "closed": "2016-10-27 13:08:29", "commits": {}, "ttf": 212.00027777777777, "commitsDetails": []}, {"title": "Crash: table index out of range", "body": "Realm version: Snapshot 20160218-1450004-77 build.\nDevices: Adroid 4.0.4 and 4.2.2 devices\n\nGot 5 users crashing on this exception:\n\nFatal Exception: io.realm.exceptions.RealmError: Unrecoverable error. Table index out of range in io_realm_internal_Group.cpp line 190\n       at io.realm.internal.Group.nativeGetTableNativePtr(Unknown Source)\n       at io.realm.internal.Group.getTable(Unknown Source:199)\n       at io.realm.internal.SharedGroupManager.getTable(Unknown Source:88)\n", "url": "https://github.com/realm/realm-java/issues/2522", "user": "diegomontoya", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2016-03-28 04:38:25", "closed": "2016-11-20 15:56:04", "commits": {}, "ttf": 237.00027777777777, "commitsDetails": []}, {"title": "RealmError: Unrecoverable error. Failure when converting short string to UTF-16", "body": "#### Actual Results\n\nIn Realm v0.88.2 - 1\n\n```\nFatal Exception: io.realm.exceptions.RealmError: Unrecoverable error. Failure when converting short string to UTF-16 error_code = 4; retcode = 0; StringData.size = 16; StringData.data =  in io_realm_internal_UncheckedRow.cpp line 138\n   at io.realm.internal.UncheckedRow.nativeGetString(UncheckedRow.java)\n   at io.realm.internal.UncheckedRow.getString(UncheckedRow.java:169)\n   at io.realm.RMessageViewRealmProxy.realmGet$key(RMessageViewRealmProxy.java:213)\n   at kr.co.vcnc.android.couple.model.viewmodel.RMessageView.getKey(RMessageView.java:115)\n   at kr.co.vcnc.android.couple.feature.chat.ChattingView.replaceData(ChattingView.java:540)\n   at kr.co.vcnc.android.couple.feature.chat.ChattingActivity.replace(ChattingActivity.java:486)\n   at kr.co.vcnc.android.couple.feature.chat.ChattingActivity.restoreWalkieTalkieButton(ChattingActivity.java)\n```\n\nIn Realm v0.88.2 - 2\n\n```\nFatal Exception: io.realm.exceptions.RealmError: Unrecoverable error. Failure when computing UTF-16 size error_code = 1; retcode = 0; StringData.size = 65535; StringData.data = \u05c1 in io_realm_internal_UncheckedRow.cpp line 138\n   at io.realm.internal.UncheckedRow.nativeGetString(UncheckedRow.java)\n   at io.realm.internal.UncheckedRow.getString(UncheckedRow.java:169)\n   at io.realm.RMessageRealmProxy.realmGet$content(RMessageRealmProxy.java:200)\n   at kr.co.vcnc.android.couple.between.api.model.chat.RMessage.getContent(RMessage.java:102)\n   at kr.co.vcnc.android.couple.between.api.model.chat.RMessage.toCObject(RMessage.java:124)\n   at kr.co.vcnc.android.couple.model.viewmodel.RMessageView.toCObject(RMessageView.java:140)\n   at kr.co.vcnc.android.couple.feature.chat.ChattingView$ChatAdapter.onBindViewHolder(ChattingView.java:476)\n```\n\nIn Realm v0.87.4\n\n```\nFatal Exception: io.realm.exceptions.RealmError: Unrecoverable error. Failure when converting short string to UTF-16 error_code = 1; retcode = 0; StringData.size = 22; StringData.data = 920000.jpg in io_realm_internal_UncheckedRow.cpp line 138\n   at io.realm.internal.UncheckedRow.nativeGetString(UncheckedRow.java)\n   at io.realm.internal.UncheckedRow.getString(UncheckedRow.java:169)\n   at io.realm.RMessageRealmProxy.getId(RMessageRealmProxy.java:197)\n   at kr.co.vcnc.android.couple.between.api.model.chat.RMessage.toCObject(RMessage.java:123)\n   at kr.co.vcnc.android.couple.model.viewmodel.RMessageView.toCObject(RMessageView.java:140)\n   at kr.co.vcnc.android.couple.feature.chat.ChattingView$ChatAdapter.onBindViewHolder(ChattingView.java:388)\n   at kr.co.vcnc.android.couple.feature.chat.ChattingView$ChatAdapter.onBindViewHolder(ChattingView.java:366)\n```\n#### Steps & Code to Reproduce\n\nI can't reproduce it, but crashes are collected from Fabric.\nAccording to information from Fabric, this happens when i try to read message id or message content from Realm.\nMessage's id is encoded as [Base58](https://en.wikipedia.org/wiki/Base58), and Message's content is a arbitrary strings.\n#### Code Sample\n\n`RMessage.java`\n\n``` java\n    public static CMessage toCObject(RMessage rMessage) {\n        if(rMessage == null) {\n            return null;\n        }\n        CMessage cMessage = new CMessage();\n        cMessage.setCreatedTime(rMessage.getCreatedTime());\n        cMessage.setUpdatedTime(rMessage.getUpdatedTime());\n        if (rMessage.getAttachments() != null) {\n            ArrayList<CAttachment> attachments = new ArrayList<CAttachment>();\n            for (RAttachment i : rMessage.getAttachments()) {\n                if (i != null) {\n                    attachments.add(RAttachment.toCObject(i));\n                }\n            }\n            cMessage.setAttachments(attachments);\n        }\n        cMessage.setContentType(rMessage.getContentType());\n        cMessage.setFrom(rMessage.getFrom());\n        cMessage.setId(rMessage.getId());\n        cMessage.setContent(rMessage.getContent());\n        return cMessage;\n    }\n```\n#### Version of Realm and tooling\n\nRealm version(s): at leat from 0.87.4 ~ current\n\nWhich Android version and device: \n![screen shot 2016-03-17 at 4 00 49 pm](https://cloud.githubusercontent.com/assets/1873136/13838708/7aeeffaa-ec59-11e5-98c4-03e1d308ae00.png)\n\n![screen shot 2016-03-17 at 4 00 36 pm](https://cloud.githubusercontent.com/assets/1873136/13838724/8d6f1cdc-ec59-11e5-9c17-cefbe980c402.png)\n![screen shot 2016-03-17 at 4 00 44 pm](https://cloud.githubusercontent.com/assets/1873136/13838726/8fef2420-ec59-11e5-950d-241a4611c5e9.png)\n\n![screen shot 2016-03-17 at 4 03 30 pm](https://cloud.githubusercontent.com/assets/1873136/13838760/de6b21d0-ec59-11e5-877f-9daf8df1eb65.png)\n", "url": "https://github.com/realm/realm-java/issues/2492", "user": "hohnamkung", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2016-03-17 07:04:23", "closed": "2017-05-24 14:02:00", "commits": {}, "ttf": 433.0002777777778, "commitsDetails": []}, {"title": "RealmError: Incompatible lock file /  After 2.0 RealmFileException  All processes sharing a single file must be the same architecture.", "body": "#### Goal\n\nTo report specific error after upgrading v0.88.0\n#### Expected Results\n\nCrash is not occurred.\n#### Actual Results\n\n```\nFatal Exception: io.realm.exceptions.RealmError: Unrecoverable error. Incompatible lock file in io_realm_internal_SharedGroup.cpp line 113\n   at io.realm.internal.SharedGroup.createNativeWithImplicitTransactions(SharedGroup.java)\n   at io.realm.internal.SharedGroup.(SharedGroup.java:63)\n   at io.realm.internal.SharedGroupManager.(SharedGroupManager.java:48)\n   at io.realm.BaseRealm.(BaseRealm.java:76)\n   at io.realm.Realm.(Realm.java:138)\n   at io.realm.Realm.createAndValidate(Realm.java:268)\n   at io.realm.Realm.createInstance(Realm.java:248)\n   at io.realm.RealmCache.createRealmOrGetFromCache(RealmCache.java:114)\n   at io.realm.Realm.getInstance(Realm.java:213)\n   at kr.co.vcnc.android.couple.feature.MainTabIndicator.updateHomeBadge(MainTabIndicator.java:138)\n   at kr.co.vcnc.android.couple.feature.MainTabIndicator.onAttachedToWindow(MainTabIndicator.java:83)\n   at android.view.View.dispatchAttachedToWindow(View.java:12626)\n   at android.view.ViewGroup.dispatchAttachedToWindow(ViewGroup.java:2473)\n   at android.view.ViewGroup.dispatchAttachedToWindow(ViewGroup.java:2480)\n   at android.view.ViewGroup.dispatchAttachedToWindow(ViewGroup.java:2480)\n   at android.view.ViewGroup.dispatchAttachedToWindow(ViewGroup.java:2480)\n   at android.view.ViewGroup.dispatchAttachedToWindow(ViewGroup.java:2480)\n   at android.view.ViewGroup.dispatchAttachedToWindow(ViewGroup.java:2480)\n   at android.view.ViewGroup.dispatchAttachedToWindow(ViewGroup.java:2480)\n   at android.view.ViewGroup.dispatchAttachedToWindow(ViewGroup.java:2480)\n   at android.view.ViewGroup.dispatchAttachedToWindow(ViewGroup.java:2480)\n   at android.view.ViewGroup.dispatchAttachedToWindow(ViewGroup.java:2480)\n   at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1264)\n   at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1047)\n   at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:5896)\n   at android.view.Choreographer$CallbackRecord.run(Choreographer.java:761)\n   at android.view.Choreographer.doCallbacks(Choreographer.java:574)\n   at android.view.Choreographer.doFrame(Choreographer.java:544)\n   at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:747)\n   at android.os.Handler.handleCallback(Handler.java:733)\n   at android.os.Handler.dispatchMessage(Handler.java:95)\n   at android.os.Looper.loop(Looper.java:136)\n   at android.app.ActivityThread.main(ActivityThread.java:5120)\n   at java.lang.reflect.Method.invokeNative(Method.java)\n   at java.lang.reflect.Method.invoke(Method.java:515)\n   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:792)\n   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:608)\n   at dalvik.system.NativeStart.main(NativeStart.java)\n```\n#### Steps & Code to Reproduce\n\nI got this stack trace from Fabric. I've tested several devices that we have, i can't reproduce it.\nInstead, i attached some code that error is happening.\n\nFYI, at this update (to v0.88.0), we upgraded Realm's schema version. \n(We're using `deleteRealmIfMigrationNeeded` option)\n#### Code Sample\n\n```\n@Override\nprotected void onAttachedToWindow() {\n    homeBadgeSubscription = Realm.getInstance(CoupleApplication.getRealmHome())\n                .where(RHomeCardViewView.class)\n                .equalTo(\"closed\", false)\n                .equalTo(\"newIndicator\", true)\n                .findAllAsync()\n                .asObservable()\n                .filter(RealmResults::isLoaded)\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(BasicSubscriber.    <RealmResults<RHomeCardViewView>>create().next(homeCardViewViews -> {\n                    int size = homeCardViewViews.size();\n                    updateTextView(size);\n                }));\n\n@Override\nprotected void onDetachedFromWindow() {\n    if (homeBadgeSubscription != null) {\n        homeBadgeSubscription.unsubscribe();\n    }\n}\n```\n#### Version of Realm and tooling\n\nRealm version(s): v0.88.0\n\nWhich Android version and device: \nWhen i first saw this crash, i think this is occurred because users are using BlackBerry. \nBut now Android users have a crash.\n\n![screen shot 2016-03-15 at 10 55 28 am](https://cloud.githubusercontent.com/assets/1873136/13765402/811f1c0c-ea9c-11e5-9925-451e7411d39a.png)\n![screen shot 2016-03-15 at 10 55 40 am](https://cloud.githubusercontent.com/assets/1873136/13765405/839b1a62-ea9c-11e5-81c2-34cc3181686b.png)\n![screen shot 2016-03-15 at 10 55 47 am](https://cloud.githubusercontent.com/assets/1873136/13765407/85bebc68-ea9c-11e5-99a3-104287c4a8a1.png)\n\nThe peak point is yesterday. (Realm v0.88.0)\n![screen shot 2016-03-15 at 10 59 39 am](https://cloud.githubusercontent.com/assets/1873136/13765472/24e53bf0-ea9d-11e5-898e-daa274ed70e0.png)\n", "url": "https://github.com/realm/realm-java/issues/2459", "user": "hohnamkung", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2016-03-15 02:01:14", "closed": "2017-11-16 08:39:09", "commits": {"f4e340c6e4b482ac912609f28cc4f003806ea0f8": {"commitGHEventType": "referenced", "commitUser": "cmelchior"}, "d0b38ebe6a6c812a7273ade0e018b60b24319623": {"commitGHEventType": "referenced", "commitUser": "kneth"}, "deadeee10e48cc7738fec144ec530f8589887be3": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "c491e1ae25a5562870026cee7db85f99c2501e65": {"commitGHEventType": "closed", "commitUser": "realm-ci"}}, "ttf": 611.0002777777778, "commitsDetails": [{"commitHash": "f4e340c6e4b482ac912609f28cc4f003806ea0f8", "commitGHEventType": "referenced", "commitUser": "cmelchior", "commitParents": ["345e0f8e0aebc5456b7b923403b712eed6f4425c"], "nameRev": "f4e340c6e4b482ac912609f28cc4f003806ea0f8 tags/v1.0.1~2", "commitMessage": "Optimistic opening of a Realm file (#3013)\n\nWe have anecdotal evidence that multiple processes might be open for the same app. We have not been able to verify this, but the result matches the \"IncompatibleLockFile\" errors reported in #2459. This happens if the two processes have two versions of Realm (e.g. during app upgrades).\r\n\r\nThis PR is based on our assumption that such an overlap is not intentional and only happens because one process is started before the previous was completely shut down.\r\n\r\nSo this PR introduces an optimistic opening scheme where we retry for 3 second before crashing as before.\r\n\r\n", "commitDateTime": "2016-06-16 15:56:59", "authoredDateTime": "2016-06-16 15:56:59", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/config/findbugs/findbugs-filter.xml", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "realm/realm-jni/src/io_realm_internal_Util.cpp", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "realm/realm-jni/src/util.cpp", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "realm/realm-jni/src/util.hpp", "insertions": 8, "deletions": 2, "lines": 10}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmTests.java", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "realm/realm-library/src/main/java/io/realm/exceptions/IncompatibleLockFileException.java", "insertions": 35, "deletions": 0, "lines": 35}, {"filePath": "realm/realm-library/src/main/java/io/realm/exceptions/RealmIOException.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/SharedGroup.java", "insertions": 56, "deletions": 2, "lines": 58}, {"filePath": "realm/realm-library/src/main/java/io/realm/internal/Util.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmTests.incompatibleLockFile()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IncompatibleLockFileException.java", "spoonMethods": [{"spoonMethodName": "io.realm.exceptions.IncompatibleLockFileException", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealmIOException.java", "spoonMethods": [{"spoonMethodName": "io.realm.exceptions.RealmIOException", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SharedGroup.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.SharedGroup", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.realm.internal.SharedGroup.openSharedGroupOrFail(io.realm.internal.SharedGroup$Durability,byte[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.internal.SharedGroup.getSleepTime(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Util.java", "spoonMethods": [{"spoonMethodName": "io.realm.internal.Util.Testcase", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "d0b38ebe6a6c812a7273ade0e018b60b24319623", "commitGHEventType": "referenced", "commitUser": "kneth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "deadeee10e48cc7738fec144ec530f8589887be3", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c491e1ae25a5562870026cee7db85f99c2501e65", "commitGHEventType": "closed", "commitUser": "realm-ci", "commitParents": ["683e09f9c4749ccde05cdbecfb32788dbd55b1bf"], "nameRev": "c491e1ae25a5562870026cee7db85f99c2501e65 tags/v4.2.0~4^2~1", "commitMessage": "Update sync to 2.1.4\n\nClose #2459\n", "commitDateTime": "2017-11-16 16:39:03", "authoredDateTime": "2017-11-16 15:39:53", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "dependencies.list", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c491e1ae25a5562870026cee7db85f99c2501e65"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2.0, "deletions": 2.0, "lines": 4.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["dependencies.list"], "changesInPackagesSPOON": []}, {"title": "std::exception in io_realm_internal_TableQuery.cpp line 1682 when calling RealmResults.load() with multiple Realm instances", "body": "#### Steps to reproduce\n- Obtain an instance of `Realm`\n- Execute an async transaction on it\n- Obtain a second instance of `Realm` with same configuration and on the same thread (it will return the same instance as the first `Realm`)\n- Execute an async query\n- Call `load()` to synchronously wait for the query to execute \n#### Issue\n\nThe `load()` method throws a native exception: `std::exception in io_realm_internal_TableQuery.cpp line 1682`. this exception is swallowed on the Java side, but I managed to debug it and I discovered it's actually a `BadVersionException`.\nAfter some investigation I think the issue is in the invocation of `Realm.getInstance()` after submitting the first transaction. If that happens before (or if I reuse the same `Realm` variable) everything works correctly.\nI already discussed with @cmelchior on Slack about the issue.\n#### Code Sample\n\n(in Kotlin :stuck_out_tongue: )\n\n``` kotlin\nval realm = Realm.getInstance(realmConfiguration)\nrealm.executeTransactionAsync {\n    it.deleteAll()\n}\nval realm2 = Realm.getInstance(realmConfiguration)\nrealm2.where(RealmDocument::class.java).findAllAsync().load()\n```\n#### Version of Realm and tooling\n\nRealm version(s): 0.88.0\n\nAndroid Studio version: 2.0\n\nWhich Android version and device: Emulator with 6.0\n", "url": "https://github.com/realm/realm-java/issues/2417", "user": "dmarcato", "labels": ["T-Bug-Crash"], "created": "2016-03-10 21:01:54", "closed": "2016-03-15 19:58:38", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Realm.getInstance(RealmConfiguration) error", "body": "Hi, I've updated Realm from 0.87.5 to 0.88.00 and I am getting a NullPointerException error when I try to open a new instance without close the previous opened instance.\n\nI have an Activity that I open a Realm instance on onCreate and I close it on onDestroy, but I have to start an IntentService and when this IntentService open an another Realm instance, I get a NullPointerException. If I close the realm of Activity before onDestroy, nothing happens.\n\n```\n        config = new RealmConfiguration.Builder(context)\n                .name(Environment.REALM_NAME)\n                .schemaVersion(Environment.REALM_VERSION)\n                .build();\n\n        realm = Realm.getInstance(config);\n```\n\nI am getting a NullPointerException when I open Realm.getInstance(config) twice without close the first one. If I close the first instance, it is ok.\n", "url": "https://github.com/realm/realm-java/issues/2416", "user": "lourenci", "labels": ["T-Bug-Crash"], "created": "2016-03-10 19:41:33", "closed": "2016-03-11 09:13:44", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ArrayIndexOutOfBoundsException: rowIndex is less than 0", "body": "## Goal (what do you want to achieve?)\n\nI am changing status of a field in realm table continuously  \n## Expected Results\n\nThe status should change in the database\n## Actual Results (e.g. full stack trace with exception)\n\n```\n03-10 17:27:50.122 28586-28586/com.workoutguru.workoutcash E/AndroidRuntime: FATAL EXCEPTION: main\n03-10 17:27:50.122 28586-28586/com.workoutguru.workoutcash E/AndroidRuntime: Process: com.workoutguru.workoutcash, PID: 28586\n03-10 17:27:50.122 28586-28586/com.workoutguru.workoutcash E/AndroidRuntime: java.lang.ArrayIndexOutOfBoundsException: rowIndex is less than 0.\n03-10 17:27:50.122 28586-28586/com.workoutguru.workoutcash E/AndroidRuntime:     at io.realm.internal.TableView.nativeGetSourceRowIndex(Native Method)\n03-10 17:27:50.122 28586-28586/com.workoutguru.workoutcash E/AndroidRuntime:     at io.realm.internal.TableView.getSourceRowIndex(TableView.java:158)\n03-10 17:27:50.122 28586-28586/com.workoutguru.workoutcash E/AndroidRuntime:     at io.realm.RealmResults.get(RealmResults.java:174)\n03-10 17:27:50.122 28586-28586/com.workoutguru.workoutcash E/AndroidRuntime:     at com.workoutguru.workoutcash.CompanyGoals_AllGoals_Fragment$CompanyAllGoalsAdapter$CompanyAllGoalsAdapterViewHolder$1$1.onResponse(CompanyGoals_AllGoals_Fragment.java:668)\n03-10 17:27:50.122 28586-28586/com.workoutguru.workoutcash E/AndroidRuntime:     at retrofit.ExecutorCallAdapterFactory$ExecutorCallback$1.run(ExecutorCallAdapterFactory.java:86)\n03-10 17:27:50.122 28586-28586/com.workoutguru.workoutcash E/AndroidRuntime:     at android.os.Handler.handleCallback(Handler.java:739)\n03-10 17:27:50.122 28586-28586/com.workoutguru.workoutcash E/AndroidRuntime:     at android.os.Handler.dispatchMessage(Handler.java:95)\n03-10 17:27:50.122 28586-28586/com.workoutguru.workoutcash E/AndroidRuntime:     at android.os.Looper.loop(Looper.java:135)\n03-10 17:27:50.122 28586-28586/com.workoutguru.workoutcash E/AndroidRuntime:     at android.app.ActivityThread.main(ActivityThread.java:5343)\n03-10 17:27:50.122 28586-28586/com.workoutguru.workoutcash E/AndroidRuntime:     at java.lang.reflect.Method.invoke(Native Method)\n03-10 17:27:50.122 28586-28586/com.workoutguru.workoutcash E/AndroidRuntime:     at java.lang.reflect.Method.invoke(Method.java:372)\n03-10 17:27:50.122 28586-28586/com.workoutguru.workoutcash E/AndroidRuntime:     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:905)\n03-10 17:27:50.122 28586-28586/com.workoutguru.workoutcash E/AndroidRuntime:     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:700)\n```\n## Version of Realm and tooling\n\nRealm version(s): compile 'io.realm:realm-android:0.87.5'\n\nAndroid Studio version:  android 1.4\n\nAndroid version(s) on device/simulator: Device version 5.1,API:22\n", "url": "https://github.com/realm/realm-java/issues/2408", "user": "Sutirth", "labels": ["T-Bug-Crash"], "created": "2016-03-10 11:59:14", "closed": "2016-06-03 08:00:28", "commits": {"e284e4740997e5b5eb444daaba3c068104d329b5": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "b9df63817bf7a6b905af0148bb38e3fcd3bdbaab": {"commitGHEventType": "referenced", "commitUser": "beeender"}, "a1e34f996c342ae3e24f92b93687673a99357906": {"commitGHEventType": "referenced", "commitUser": "beeender"}}, "ttf": 84.00027777777778, "commitsDetails": [{"commitHash": "e284e4740997e5b5eb444daaba3c068104d329b5", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b9df63817bf7a6b905af0148bb38e3fcd3bdbaab", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a1e34f996c342ae3e24f92b93687673a99357906", "commitGHEventType": "referenced", "commitUser": "beeender", "commitParents": ["6d7e9b0bf108efc3e95c8d23b2676c9aba1dc78b"], "nameRev": "a1e34f996c342ae3e24f92b93687673a99357906 tags/v1.0.1~15", "commitMessage": "RealmResults is not synced in global listener (#2926)\n\nClose #2408\r\n\r\nRealmResults are synced when calling its listener, since we need to\r\ncheck the table version before calling the listener. So sync it just\r\nafter advance read won't be an option - in that way, the result's\r\nlistener won't be triggered.\r\n\r\nSo we notify the global listeners as the last thing to do, at that\r\npoint, result will be synced already.\r\n\r\nAlso a test case is added to ensure the calling sequence of synced\r\nlisteners.", "commitDateTime": "2016-06-03 16:00:13", "authoredDateTime": "2016-06-03 16:00:13", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/NotificationsTest.java", "insertions": 126, "deletions": 1, "lines": 127}, {"filePath": "realm/realm-library/src/main/java/io/realm/HandlerController.java", "insertions": 6, "deletions": 1, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "NotificationsTest.java", "spoonMethods": [{"spoonMethodName": "io.realm.NotificationsTest.realmListener_realmResultShouldBeSynced()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.NotificationsTest.callingOrdersOfListeners()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HandlerController.java", "spoonMethods": [{"spoonMethodName": "io.realm.HandlerController.notifyAllListeners()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Bad Version exception. (Please stop send error to internal handler.)", "body": "Bad version exception still happens and you seem don't have solution about this.\n\nIt happens in findAllAsync or findAllSortedAsync.\n\nSo, I do try-catch to all usage of the methods.\n\nBut bad version exception fires again and kill app cause the methods don't allow send exception to us, just kill app! (why???)\n\nWe release our app with realm recently and bad version exception is most number of crash ever, very ever.\n\nWe have more than 1 million users in our app, and it is now giving users very bad experience.\n\nI think you should fix it or for temporal solution, do not just throw exception in your sdk to kill app.\n(If you can't, we have to change DB to another... But I don't want it and I think you too.)\n\nOne more, it is very bad exception and we get some upset about you haven't solved this bug even though this issue happened at Dec, 2015.\n\nPlease look at this issue seriously.\n", "url": "https://github.com/realm/realm-java/issues/2391", "user": "maryangmin", "labels": ["T-Bug-Crash"], "created": "2016-03-05 20:15:16", "closed": "2016-03-15 19:58:33", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "[0.88-SNAPSHOT] RealmTransformer should support both 1.5 and 2.0.0-beta", "body": "Using latest snapshot i get following error during gradle sync:\n`Error:Unable to load class 'io.realm.transformer.RealmTransformer'.`\n\n```\nbuildscript {\n    repositories {\n        jcenter()\n        maven {\n            url 'http://oss.jfrog.org/artifactory/oss-snapshot-local'\n        }\n        maven {\n            url \"https://jitpack.io\"\n        }\n    }\n    dependencies {\n        classpath 'io.realm:realm-gradle-plugin:0.88.0-SNAPSHOT'\n    }\n}\n\napply plugin: 'realm-android'\n```\n", "url": "https://github.com/realm/realm-java/issues/2348", "user": "lukcz", "labels": ["T-Bug-Crash"], "created": "2016-02-26 11:36:32", "closed": "2016-03-07 16:03:19", "commits": {"b10d4c4d3e54cd8d7f2aef66781f16fea14b8595": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "fcdc0d0d3daed0ae5781d0320e05f3a880f4ee9a": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "c4ac7743329e454dc1624d01379cd7341cd1b7d6": {"commitGHEventType": "referenced", "commitUser": "zaki50"}, "106ff11632a9c392dfee0e04ed17540f81bc969a": {"commitGHEventType": "referenced", "commitUser": "zaki50"}}, "ttf": 10.000277777777777, "commitsDetails": [{"commitHash": "b10d4c4d3e54cd8d7f2aef66781f16fea14b8595", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "fcdc0d0d3daed0ae5781d0320e05f3a880f4ee9a", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c4ac7743329e454dc1624d01379cd7341cd1b7d6", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "106ff11632a9c392dfee0e04ed17540f81bc969a", "commitGHEventType": "referenced", "commitUser": "zaki50", "commitParents": ["6bc56299e170465eb20e5817423542e8e8440250"], "nameRev": "106ff11632a9c392dfee0e04ed17540f81bc969a tags/v0.88.0~10^2~1", "commitMessage": "removed runtime dependency to 'com.android.tools.build:transform-api:1.5.0' from 'realm-transformer'. This fixes #2348\n", "commitDateTime": "2016-03-06 22:35:02", "authoredDateTime": "2016-02-27 03:13:32", "commitGitStats": [{"filePath": "realm-transformer/build.gradle", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["106ff11632a9c392dfee0e04ed17540f81bc969a"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0.0, "deletions": 1.0, "lines": 1.0, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm-transformer"]}, {"title": "io.realm.exceptions.RealmError: Unrecoverable error. open() failed: No such file or directory in io_realm_internal_SharedGroup.cpp line 188", "body": "Hi, \nI keep getting the above error in my app(crashes) when I logout and re-login. \nUsing the realm config\n`realmConfiguration = new RealmConfiguration.Builder(this)\n                .name(\"hombotdata.realm\")\n                .deleteRealmIfMigrationNeeded()\n                .schemaVersion(1)\n                .build();\n        Realm.setDefaultConfiguration(realmConfiguration);`\n\nOn logout, I close out all open instances of realm and delete the realm database using\n`Realm.deleteRealm(realmConfiguration);`\n\nEven though the app crashes, when I reopen it, it's succesfully logged in(Session data is stored and the app is able to resume the session). \nHow do I fix it?\n\n**StackTrace:**\n_io.realm.exceptions.RealmError: Unrecoverable error. open() failed: No such file or directory in io_realm_internal_SharedGroup.cpp line 188\n                                                                                 at io.realm.internal.SharedGroup.nativeCommitAndContinueAsRead(Native Method)\n                                                                                 at io.realm.internal.SharedGroup.commitAndContinueAsRead(SharedGroup.java:99)\n                                                                                 at io.realm.internal.ImplicitTransaction.commitAndContinueAsRead(ImplicitTransaction.java:60)\n                                                                                 at io.realm.internal.SharedGroupManager.commitAndContinueAsRead(SharedGroupManager.java:116)\n                                                                                 at io.realm.BaseRealm.commitTransaction(BaseRealm.java:292)\n                                                                                 at io.realm.Realm.commitTransaction(Realm.java:108)\n                                                                                 at com.vikilabs.hombot_android.home.HomeModel$3.onResponse(HomeModel.java:141)\n                                                                                 at retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall$1$1.run(ExecutorCallAdapterFactory.java:65)\n                                                                                 at android.os.Handler.handleCallback(Handler.java:739)\n                                                                                 at android.os.Handler.dispatchMessage(Handler.java:95)\n                                                                                 at android.os.Looper.loop(Looper.java:155)\n                                                                                 at android.app.ActivityThread.main(ActivityThread.java:5721)\n                                                                                 at java.lang.reflect.Method.invoke(Native Method)\n                                                                                 at java.lang.reflect.Method.invoke(Method.java:372)\n                                                                                 at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1029)\n                                                                                 at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:824)_\n", "url": "https://github.com/realm/realm-java/issues/2308", "user": "vishnu888", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2016-02-20 07:48:09", "closed": "2016-05-25 12:55:55", "commits": {}, "ttf": 95.00027777777778, "commitsDetails": []}, {"title": "Query in realm.executeTransaction success callback is not work, realm is not being update yet for some case", "body": "[Here](https://github.com/luhui/RealmExample) is the sample code.\nThis code also reproduce the issue #2115 \n\nIn `MyApplication.java`\n\nQuery in callback can get the data had been saved\n\n``` java\nRealm realm = Realm.getDefaultInstance();\n        Log.e(\"lh\", \"before save \" + realm.allObjects(Users.class).size());\n        realm.executeTransaction(new Realm.Transaction() {\n            @Override\n            public void execute(Realm realm) {\n                Users users = new Users();\n                users.setId(UUID.randomUUID().toString());\n                users.setName(\"test\");\n                realm.copyToRealm(users);\n            }\n        }, new Realm.Transaction.Callback() {\n            @Override\n            public void onSuccess() {\n                //realm already update\n                Log.e(\"lh\", \"after save \" + realm.allObjects(Users.class).size());\n                realm.close();\n            }\n        });\n```\n\nBut in `FirstFragment.java`, query immediately will failed, delay 1s and re-query will be work.\n\n``` java\nprivate void updateEvent() {\n        String id = UUID.randomUUID().toString();\n        Log.e(\"lh\", \"before save \" + id + \"----\" + Realm.getDefaultInstance().allObjects(Event.class).size());\n        realm.executeTransaction(realm1 -> {\n            Event games = new Event();\n            games.setId(id);\n            games.setName(\"test-name!!\");\n            realm1.copyToRealmOrUpdate(games);\n        }, new Realm.Transaction.Callback() {\n            @Override\n            public void onSuccess() {\n                super.onSuccess();\n                //Not update yet\n                Log.e(\"lh\", \"save \" + id + \" result ....\" + realm.allObjects(Event.class).size());\n\n                //Delay 1s, will be work\n                new TimerTask(1000).startTask(() -> Log.e(\"lh\", \"save \" + id + \" result after 1s....\" + realm.allObjects(Event.class).size()));\n            }\n        });\n    }\n```\n\nBut in `SecondFragment.java`, the subscription can update the new `Event` object successfully\n\n``` java\n@Override\n    public void onResume() {\n        super.onResume();\n        subscription = realm.where(Event.class)\n                .findAllAsync()\n                .asObservable()\n                .subscribe(event -> {\n                    textView.setText(\"\");\n                    for (Event e :\n                            event) {\n                        textView.append(\"second - event id: \" + e.getId());\n                    }\n                });\n    }\n```\n", "url": "https://github.com/realm/realm-java/issues/2292", "user": "luhui", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2016-02-17 03:04:01", "closed": "2016-04-11 09:25:57", "commits": {}, "ttf": 54.000277777777775, "commitsDetails": []}, {"title": "LG F320S API 19 Native Crash", "body": "During instrument test on my own device, [**LG F320S API 19**](http://www.gsmchoice.com/en/catalogue/lg/g2f320/), I'm seeing a native crash on [`RealmAsyncQueryTests > accessingRealmListOnUnloadedRealmObjectShouldThrow`](https://github.com/realm/realm-java/blob/6fae910f476675c508b16915aa922394f1f32762/realm/realm-library/src/androidTest/java/io/realm/RealmAsyncQueryTests.java#L347).\nI am not entirely sure if this crash has any correlation to the issue #1795, but I believe it might be worth to look into it.\n\nHere are the crash messages.\n\n**Console**\n\n```\nio.realm.RealmAsyncQueryTests > accessingRealmListOnUnloadedRealmObjectShouldThrow[LG-F320S - 4.4.2] FAILED\nTest failed to run to completion. Reason: 'Instrumentation run failed due to 'Native crash''. Check device logcat for details\nTests on LG-F320S - 4.4.2 failed: Instrumentation run failed due to 'Native crash'\n:realm:realm-library:connectedDebugAndroidTest FAILED\n:connectedCheck FAILED\n\nFAILURE: Build failed with an exception.\n```\n\n**Instrument test report**\n_accessingRealmListOnUnloadedRealmObjectShouldThrow_\n\n> Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Native crash''. Check device logcat for details\n\n**Logcat Output**\n[Output](http://stk1m1.github.io/test-results/02-03-16-LGF320S-Android-4.4.2-API19.crash.log.txt)\n\n**Reproducibility**\nI can reproduce anytime. The last test was done on commit `26401c7`.\n", "url": "https://github.com/realm/realm-java/issues/2224", "user": "stk1m1", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2016-02-03 08:18:14", "closed": "2016-03-21 07:36:09", "commits": {}, "ttf": 46.000277777777775, "commitsDetails": []}, {"title": "Native crash at /data/app-lib/com.gmspartnersltd.earthmiles-1/librealm-jni.so", "body": "Any idea on what could be causing this?\n\n```\n*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\nBuild fingerprint: 'motorola/XT926_verizon/vanquish:4.4.2/KDA20.62-15.1/15:user/release-keys'\nRevision: 'p300'\npid: 15508, tid: 15508, name: sltd.earthmiles  >>> com.gmspartnersltd.earthmiles <<<\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 00000004\n    r0 608a8ec0  r1 00000001  r2 608a78d8  r3 00000000\n    r4 608a8ec0  r5 60a86008  r6 00000004  r7 00000001\n    r8 608a8ec0  r9 00000c20  sl bed5a278  fp 60887a18\n    ip 00000001  sp bed5a180  lr 60a3b491  pc 60a31006  cpsr 400e0030\n    d0  0000000000000000  d1  0000000000000000\n    d2  0000000000000000  d3  0000000000000000\n    d4  577126c0579823b0  d5  579d9268579d9230\n    d6  577127a057712768  d7  57712810579d92a0\n    d8  0000000000000000  d9  0000000000000000\n    d10 0000000000000000  d11 0000000000000000\n    d12 0000000000000000  d13 0000000000000000\n    d14 0000000000000000  d15 0000000000000000\n    d16 416c70e000000002  d17 0000000200000002\n    d18 00000004416c70e0  d19 0000000200000003\n    d20 00000000416c61e8  d21 0000000000000000\n    d22 416c6890421df2e8  d23 0000000000000000\n    d24 4240ec9cc1238000  d25 0003000000030000\n    d26 0000002e0000002d  d27 000000300000002f\n    d28 0100010001000100  d29 0100010001000100\n    d30 0000000000000000  d31 0000000000000000\n    scr 20000010\n\nbacktrace:\n    #00  pc 0007d006  /data/app-lib/com.gmspartnersltd.earthmiles-1/librealm-jni.so\n    #01  pc 0008748d  /data/app-lib/com.gmspartnersltd.earthmiles-1/librealm-jni.so\n\ncode around pc:\n    60a30fe4 46022300 f0024630 e7eefeb3 6089f504  \n    60a30ff4 f7ea4629 4620fd57 f7ff2100 f8d4fc8f  \n    60a31004 f8533448 e8bd0027 e92d87f0 460541f0  \n    60a31014 8234f8d0 4617460e 45442400 4621d00a  \n    60a31024 f7ff4628 4631ffbb 3401463a 6cdb6803  \n    60a31034 e7f24798 81f0e8bd 41f3e92d 46074616  \n    60a31044 0042e88d e893466a 461c0003 fc3cf7f7  \n    60a31054 42986823 d0094605 2c08f850 429a9b00  \n    60a31064 f850d104 9b012c04 d00e429a 46316938  \n    60a31074 ffa3f7bf 4629b948 4620466a fe80f7d8  \n    60a31084 46316938 f7ff4622 b002ffc0 81f0e8bd  \n    60a31094 43f8e92d 69004605 4691460e fa51f7c7  \n    60a310a4 240068f7 42bc4680 4621d00b f7d54630  \n    60a310b4 4641f8fd 3401464b 46284602 ffbcf7ff  \n    60a310c4 e8bde7f1 e92d83f8 460641f0 46174688  \n    60a310d4 fb3ef7bf 0301ea50 f110d016 464234ff  \n\ncode around lr:\n    60a3b470 46206823 3b012101 e8bd6023 f7b741f0  \n    60a3b480 e92dbdf7 461741f3 4680461c fd88f7f5  \n    60a3b490 ac014621 46384606 fd82f7f5 46054639  \n    60a3b4a0 f7c94620 4621fd54 0010f106 f975f7f3  \n    60a3b4b0 f7f14620 4620ffda 61754641 fd47f7c9  \n    60a3b4c0 f1054621 f7f30014 4620f968 ffcdf7f1  \n    60a3b4d0 b00261ae 81f0e8bd 4615b5f0 e000f8d0  \n    60a3b4e0 6846460f cd0fb087 c40f466c e8954632  \n    60a3b4f0 466b0003 0003e884 46394670 fe4cf7fd  \n    60a3b500 bdf0b007 41f0e92d 8b02ed2d 8b40eeb0  \n    60a3b510 4604b084 2101460f f7b74616 4639fda9  \n    60a3b520 f7f54620 4631fd3d 0b48eeb0 f940f7ce  \n    60a3b530 689d6ae3 f105b315 46210804 4640ac04  \n    60a3b540 fe98f7ec 4640211f fe31f7ec f8441c43  \n    60a3b550 23083d0c 70034621 f7bc4638 4630fe02  \n    60a3b560 f7bc4621 ab04fdfe ed239a01 cb038b02\n```\n", "url": "https://github.com/realm/realm-java/issues/2173", "user": "shahzaibmuneeb", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2016-01-27 18:42:41", "closed": "2016-02-08 10:01:45", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "[0.88.0-SNAPSHOT] IllegalStateException: Caller thread behind the worker thread", "body": "http://crashes.to/s/d9d24a52572\nThis exception is thrown after I migrated my codebase from synchronous to asynchronous realm calls using observables. The stacktrace doesn't show where it went wrong from my code.\n\n```\nmessagesSubscription = realm.where(Message.class)\n        .equalTo(\"conversationId\", conversationId)\n        .findAllSortedAsync(\"updated\")\n        .asObservable()\n        .filter(RealmResults::isLoaded)\n        .subscribe((messages) -> {\n          if (adapter != null) {\n            adapter.call(messages);\n          }\n        });\n```\n\nThe above is the only asynchronous call in that problematic activity. Any ideas why the exception is thrown?\n", "url": "https://github.com/realm/realm-java/issues/2115", "user": "njovy", "labels": ["T-Bug-Crash"], "created": "2016-01-19 15:59:33", "closed": "2016-02-24 12:46:09", "commits": {"5c51d53cd86691b28267d23e48084f8a65ec007f": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}, "ac90eb33a426022cc8e093a47db6ae137b9d2049": {"commitGHEventType": "closed", "commitUser": "cmelchior"}, "e5bd008093a16d8952224afd56716aa533a0ff8d": {"commitGHEventType": "referenced", "commitUser": "nhachicha"}}, "ttf": 35.000277777777775, "commitsDetails": [{"commitHash": "5c51d53cd86691b28267d23e48084f8a65ec007f", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ac90eb33a426022cc8e093a47db6ae137b9d2049", "commitGHEventType": "closed", "commitUser": "cmelchior", "commitParents": ["4aae7287806236c5613cca1daed7cec2e2f2e93f"], "nameRev": "ac90eb33a426022cc8e093a47db6ae137b9d2049 tags/v0.87.5~1^2", "commitMessage": "fixes #2115 IllegalStateException Caller thread behind the worker thread\n", "commitDateTime": "2016-02-23 19:01:59", "authoredDateTime": "2016-02-23 19:01:59", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-jni/src/io_realm_internal_TableQuery.cpp", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmAsyncQueryTests.java", "insertions": 73, "deletions": 0, "lines": 73}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmAsyncQueryTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmAsyncQueryTests.testFindFirstUsesCallerThreadVersion()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.testQueryingLinkHandover()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "e5bd008093a16d8952224afd56716aa533a0ff8d", "commitGHEventType": "referenced", "commitUser": "nhachicha", "commitParents": ["4aae7287806236c5613cca1daed7cec2e2f2e93f", "ac90eb33a426022cc8e093a47db6ae137b9d2049"], "nameRev": "e5bd008093a16d8952224afd56716aa533a0ff8d tags/v0.87.5~1", "commitMessage": "Merge pull request #2294 from realm/nh/bug/2115_async_badversion\n\nfixes #2115 IllegalStateException Caller thread behind the worker thread", "commitDateTime": "2016-02-24 00:02:51", "authoredDateTime": "2016-02-24 00:02:51", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "realm/realm-jni/src/io_realm_internal_TableQuery.cpp", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "realm/realm-library/src/androidTest/java/io/realm/RealmAsyncQueryTests.java", "insertions": 73, "deletions": 0, "lines": 73}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealmAsyncQueryTests.java", "spoonMethods": [{"spoonMethodName": "io.realm.RealmAsyncQueryTests.testFindFirstUsesCallerThreadVersion()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.realm.RealmAsyncQueryTests.testQueryingLinkHandover()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ac90eb33a426022cc8e093a47db6ae137b9d2049"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7.0, "deletions": 7.0, "lines": 14.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["realm/realm-jni/src/io_realm_internal_TableQuery.cpp"], "changesInPackagesSPOON": []}, {"title": "Handling Fatal signal 11", "body": "Hi,\nI had the same issues as described here #1388 \nLet's say by updating to 0.85.0, it will fix this issue, but for other unknown reason we get a Fatal signal.\nWould be nice if it could be possible to create a handler for case like this and allow us to do a backup of the current data or event to show a message to the user.\nBecause when it happens, the user are losing his data.\n\nAny advices?\n", "url": "https://github.com/realm/realm-java/issues/2089", "user": "cre8ivejp", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2016-01-15 04:18:48", "closed": "2017-01-26 11:16:48", "commits": {}, "ttf": 377.0002777777778, "commitsDetails": []}, {"title": "Crash: Fatal Signal 11 after running same query on a large database", "body": "I started getting sporadic crashes at times in realm when i changed from small test database to large production database. I could narrow it down to calling same async query 2-3 times. My scenario is I have a ViewPager with different fragments showing data from same table with different conditions(sorting order).\n\nSo to reproduce it I did following\n\n```\nRealm defaultRealm = Realm.getDefaultInstance();\nRealmResults<Content> realmResults = defaultRealm .where(Content.class).equalTo(\"contentParts.active\", true).greaterThan(\"bestOf\", 0).findAllSortedAsync(\"bestOf\", false);\nrealmResults.addChangeListener(iistenerA);\n\nRealm duplicateRealm= Realm.getDefaultInstance();\nRealmResults<Content> realmResults2 = duplicateRealm.where(Content.class).equalTo(\"contentParts.active\", true).greaterThan(\"bestOf\", 0).findAllSortedAsync(\"bestOf\", false);\nrealmResults2.addChangeListener(iistenerB);\n```\n\nMy realm file is around 2.5MB,\ntested on  v 0.84.1 and 0.85.1\ndevice for logs: Nexus 5 running M Preview 3(tested on other devices as well)\n\n[crash log 1.txt](https://github.com/realm/realm-java/files/51725/crash.log.1.txt)\n[crash log 2.txt](https://github.com/realm/realm-java/files/51726/crash.log.2.txt)\n\nThis issue might be realted to these two issues\nhttps://github.com/realm/realm-java/issues/1851\nand https://github.com/realm/realm-java/issues/1645\n", "url": "https://github.com/realm/realm-java/issues/1887", "user": "vikas-fueled", "labels": ["T-Bug-Crash"], "created": "2015-12-04 07:14:48", "closed": "2016-02-02 05:11:35", "commits": {}, "ttf": 59.000277777777775, "commitsDetails": []}, {"title": "UTF16 cpp read from realm  crash", "body": "Fatal Exception: io.realm.exceptions.RealmError: Unrecoverable error. Failure when converting long string to UTF-16 error_code \n\nThe actual string value and crash info is sent to help@realm.io.\n\nExpectation: If set/save string to realm is valid, then retrieve should be valid in reverse direction.\n\nMaybe related to https://github.com/realm/realm-java/issues/1756\n", "url": "https://github.com/realm/realm-java/issues/1811", "user": "diegomontoya", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2015-11-23 04:04:00", "closed": "2016-11-20 15:59:23", "commits": {}, "ttf": 363.0002777777778, "commitsDetails": []}, {"title": "Crash with signal 11 (SIGSEGV)", "body": "Hi Realm team!\n\nWe're using Realm 0.84.1, it works very well for us.\nBut we've got some complaints from user about app crash on realm.\n\nBelow exception is most frequently occurred one (collected from GooglePlayDeveloper Console)\nThe 99.8% of this exception came from Android 4.4 device and one forth came from LG G3.\n(FYI. We do not encrypt the Realm.) \n\n```\n*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\nBuild fingerprint: 'samsung/ks01lteskt/ks01lteskt:4.4.2/KOT49H/E330SKSUCNJ1:user/release-keys'\nRevision: '13'\npid: 14636, tid: 14756, name: db_thead  >>> kr.co.vcnc.android.couple <<<\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr fffffffc\n    r0 7b7395e0  r1 ffffffff  r2 7b7395e0  r3 00000000\n    r4 7b7395e0  r5 7caf9708  r6 73a03f80  r7 ffffffff\n    r8 7b739148  r9 00020590  sl 7c91cad8  fp 798fe960\n    ip 00000001  sp 7c91be98  lr 7ca6f31d  pc 7ca72c6e  cpsr 60070030\n    d0  0000000000000000  d1  0000000000000000\n    d2  0000000000000000  d3  0000000000000000\n    d4  0037003a00220066  d5  007d0030002e0034\n    d6  006500770022002c  d7  0065006800740061\n    d8  0000000000000000  d9  0000000000000000\n    d10 0000000000000000  d11 0000000000000000\n    d12 0000000000000000  d13 0000000000000000\n    d14 0000000000000000  d15 0000000000000000\n    d16 6d9dc0b86d9dc080  d17 6d9dc1286d9dc0f0\n    d18 6d9dc1986d9dc160  d19 6d9dc2086d9dc1d0\n    d20 6d9dc2786d9dc240  d21 6de4c5806d9dc2b0\n    d22 6de4c3486de4c5b8  d23 6de4c3b86de4c380\n    d24 4008000000000000  d25 3ff0000000000000\n    d26 3c4baf4e740749c8  d27 3fa7b80000000000\n    d28 bf5224a5191957e0  d29 3f6293aba995d593\n    d30 be63c064abe8bbf2  d31 3f11562ac78a4541\n    scr 60000012\n\nbacktrace:\n    #00  pc 00057c6e  /data/app-lib/kr.co.vcnc.android.couple-2/librealm-jni.so\n    #01  pc 00054319  /data/app-lib/kr.co.vcnc.android.couple-2/librealm-jni.so\n\ncode around pc:\n    7ca72c4c 46022300 f0324630 e7eefef5 6089f504  \n    7ca72c5c f7f74629 4620fc4f f7ff2100 f8d4fc8f  \n    7ca72c6c f8533448 e8bd0027 e92d87f0 b0954ff0  \n    7ca72c7c 46064691 451ee9dd f7ff468b 4649ffbf  \n    7ca72c8c 4622462b f9baf01e f8d36af3 f1b88008  \n    7ca72c9c d03a0f00 0a04f108 af0a4631 f7f34650  \n    7ca72cac f8d6f9d9 e9cde000 ae04450c e028f8cd  \n    7ca72cbc f8cdcf0f c60fb028 0003e897 0003e886  \n    7ca72ccc 4506e9cd f8cdad02 ac0c9008 c40fcd0f  \n    7ca72cdc 000fe895 000fe884 46502129 fba9f007  \n    7ca72cec 1c43a914 3d4cf841 7003230f 9102980a  \n    7ca72cfc fda7f7f3 9902980c fda3f7f3 a902a80e  \n    7ca72d0c fda8f7f3 f8c89b01 b0153008 8ff0e8bd  \n    7ca72d1c 43f7e92d 460f4604 46162101 f7ef4698  \n    7ca72d2c 4639fafb f7ff4620 f8d8ff69 46312000  \n    7ca72d3c f7e617d3 6ae3f967 b1f5689d 0904f105  \n\ncode around lr:\n    7ca6f2fc f7f341f0 e92db811 461741f3 4680461c  \n    7ca6f30c fc7cf003 ac014621 46384606 fc76f003  \n    7ca6f31c 46054639 f0194620 4621fdbf 0010f106  \n    7ca6f32c fa1df024 f0224620 4620fff4 61754641  \n    7ca6f33c fdb2f019 f1054621 f0240014 4620fa10  \n    7ca6f34c ffe7f022 b00261ae 81f0e8bd 4615b5f0  \n    7ca6f35c e000f8d0 6846460f cd0fb087 c40f466c  \n    7ca6f36c e8954632 466b0003 0003e884 46394670  \n    7ca6f37c f976f7fd bdf0b007 41f0e92d 8b02ed2d  \n    7ca6f38c 8b40eeb0 4604b084 2101460f f7f24616  \n    7ca6f39c 4639ffc3 f0034620 4631fc31 0b48eeb0  \n    7ca6f3ac fd12f029 689d6ae3 f105b315 46210804  \n    7ca6f3bc 4640ac04 fe4ef7f6 4640211f f839f00b  \n    7ca6f3cc f8441c43 23083d0c 70034621 f7f74638  \n    7ca6f3dc 4630fa38 f7f74621 ab04fa34 ed239a01  \n    7ca6f3ec cb038b02 f8423208 f8420c08 60aa1c04\n```\n", "url": "https://github.com/realm/realm-java/issues/1795", "user": "hohnamkung", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2015-11-18 12:11:39", "closed": "2016-03-07 10:53:35", "commits": {}, "ttf": 109.00027777777778, "commitsDetails": []}, {"title": "Requested table is not in this Realm", "body": "I have the next crash\n\n``` logcat\nCaused by: java.lang.IllegalStateException: Requested table is not in this Realm. Creating it requires a transaction: class_Chat\n    at io.realm.internal.Group.getTable(SourceFile:220)\n    at io.realm.Realm.getTable(SourceFile:330)\n    at io.realm.RealmQuery.(SourceFile:75)\n    at io.realm.Realm.where(SourceFile:1270)\n    at io.chat.runner.db.a.a(SourceFile:105)\n    at io.chat.runner.chat.ChatListFragment.m(SourceFile:227)\n    at io.chat.runner.chat.ChatListFragment.onResume(SourceFile:188)\n    at android.support.v4.app.Fragment.performResume(SourceFile:1829)\n    at android.support.v4.app.FragmentManagerImpl.moveToState(SourceFile:993)\n    at android.support.v4.app.FragmentManagerImpl.moveToState(SourceFile:1136)\n    at android.support.v4.app.FragmentManagerImpl.moveToState(SourceFile:1118)\n    at android.support.v4.app.FragmentManagerImpl.dispatchResume(SourceFile:1937)\n    at android.support.v4.app.FragmentActivity.onResumeFragments(SourceFile:444)\n    at android.support.v4.app.FragmentActivity.onPostResume(SourceFile:433)\n    at android.support.v7.app.ActionBarActivity.onPostResume(SourceFile:146)\n    at android.app.Activity.performResume(Activity.java:6089)\n    at android.app.ActivityThread.performResumeActivity(ActivityThread.java:2975)\n    ... 11 more\n```\n\nI ran ChatList screen several times and everything was okay.\n", "url": "https://github.com/realm/realm-java/issues/1017", "user": "alexustinovsm", "labels": ["Reproduction-Required", "T-Bug-Crash"], "created": "2015-04-07 16:21:49", "closed": "2016-07-01 05:43:18", "commits": {}, "ttf": 450.0002777777778, "commitsDetails": []}, {"title": "Fatal crash in for each loop", "body": "Hi, I have issue similar to https://github.com/realm/realm-java/issues/484 and to https://github.com/realm/realm-java/issues/589 . I trying to run query in cycle, check if this record not exists, then create it. Before `for/each cycle` at the same thread and the same realm instance query works fine. But when we entered to cycle it crashed. I use `realm library version 0.74.0, Android studio 1.0rc`.\n\n```\nSong model:\n```\n\n```\npublic class Song extends RealmObject {\n    private String id;\n    private String ownerId;\n    private String artist;\n    private String title;\n    private int duration;\n    private String url;\n    private String lyrics_id;\n    private int genreId;\n    private String albumId;\n    private int index;\n    private boolean needToRemove;\n**** and their getters and setters ****\n}\n```\n\n```\nPart of the code where it crash:\n```\n\n```\n{\n List<Song> songs = lists[0];\n Realm workerRealm = getRealmInstanceForWorkerThread();\n String myId = PreferenceHelper.getUserId();\n // Mark all songs need to remove true\n RealmResults<Song> songRealmList = workerRealm.where(Song.class)\n          .equalTo(\"ownerId\", myId)\n          .findAll();                                         // Works fine\n workerRealm.beginTransaction();\n for (Song song : songRealmList) {\n    song.setNeedToRemove(true);         // Works fine\n }\n for (Song song : songs) {                    // Entering to cycle\n   // Check if the record exist\n  Song querySong = workerRealm.where(Song.class)\n         .beginGroup()\n         .equalTo(\"id\", song.getId())\n         .equalTo(\"ownerId\", song.getOwnerId())\n         .endGroup()\n         .findFirst();                                 // And here it crash              \n\n if (querySong == null) {\n   querySong = workerRealm.createObject(Song.class);\n }\n querySong.setOwnerId(song.getOwnerId());\n querySong.setUrl(song.getUrl());\n querySong.setLyrics_id(song.getLyrics_id());\n querySong.setGenreId(song.getGenreId());\n querySong.setDuration(song.getDuration());\n querySong.setTitle(song.getTitle());\n querySong.setId(song.getId());\n querySong.setAlbumId(song.getAlbumId());\n querySong.setArtist(song.getArtist());\n querySong.setNeedToRemove(song.isNeedToRemove());\n querySong.setIndex(song.getIndex());\n}\n```\n\nError message: `Method threw 'java.lang.RuntimeException' exception. Cannot evaluate io.realm.SongRealmProxy.toString()`\n  `A/libc\ufe55 Fatal signal 11 (SIGSEGV), code 1, fault addr 0xa1e25ffc in tid -2049854000 (UpdateMultipleO)`\n\n`UpdateMultipleO` - it is my method where I do this( full name `updateMultipleOwnSongsAndAlbumsInDB`).\n", "url": "https://github.com/realm/realm-java/issues/602", "user": "sergeyfitis", "labels": ["T-Bug-Crash"], "created": "2014-11-22 00:35:06", "closed": "2016-04-21 16:53:41", "commits": {}, "ttf": 516.0002777777778, "commitsDetails": []}]}