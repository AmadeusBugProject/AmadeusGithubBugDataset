{"issues": [{"labels": ["Bug", "Cognito", "Needs Info from Requester", "closing-soon-if-no-response"], "closed": "2020-06-12 13:44:34", "body": "**Describe the bug**\r\nCan't login with Facebook on Android if account was created on iOS \r\n\r\n**To Reproduce**\r\nWe have two identical native clients for Android and iOS. \r\nif user make fist login on iOS device, it will not be able to login on Android.\r\nOnly account manual deleting from User Pool helps.\r\nIt reproduces in 90% on Android. And in 30% on iOS. \r\n\r\n```\r\n val hostedUIOptions = HostedUIOptions.builder()\r\n                .identityProvider(\"Facebook\")\r\n                .build()\r\n\r\nval signInUIOptions = SignInUIOptions.builder()\r\n                .hostedUIOptions(hostedUIOptions)\r\n                .build()\r\n\r\nawsClient.showSignIn(\r\n                    (context as MyApplication).currentActivity,\r\n                    signInUIOptions\r\n                )\r\n\r\n```\r\nlogcat:\r\n\r\n_com.amazonaws.mobileconnectors.cognitoauth.exceptions.AuthInvalidGrantException: invalid_grant\r\n        at com.amazonaws.mobileconnectors.cognitoauth.util.AuthHttpResponseParser.parseHttpResponse(AuthHttpResponseParser.java:67)\r\n        at com.amazonaws.mobileconnectors.cognitoauth.AuthClient$1.run(AuthClient.java:323)\r\n        at java.lang.Thread.run(Thread.java:919)_\r\n\r\n\r\n**Which AWS service(s) are affected?**\r\nCognito\r\n\r\n**Expected behavior**\r\nAndroid users must have ability to log into accounts created with iOS SDK. \r\n\r\n\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.16.11 - 2.16.12\r\n - Device: Pixel 3, Pixel 3XL, Sumsungs, Emulators\r\n - Android Version: all from 7.1 to 10\r\n - Specific to simulators: No\r\n\r\n\r\n", "commits": {}, "title": "Can't login with Facebook on Android if account was created on iOS ", "created": "2020-04-28 13:00:56", "user": "igorka48", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1656", "commitsDetails": [], "ttf": 45.000277777777775}, {"labels": ["AWSMobileClient", "Bug", "Cognito"], "closed": "2020-04-17 11:10:53", "body": "**Describe the bug**\r\nA successful call to federatedSignIn regularly takes anywhere from 1500 to 2000 ms (this is not an internet problem other network calls e.g. to my server hosted on ec2 take 200ms).\r\n\r\n**To Reproduce**\r\nA code sample or steps:\r\n```\r\n// I used the Facebook version shown here:\r\n// https://aws-amplify.github.io/docs/sdk/android/authentication#federated-sign-in\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\nAwsMobileClient with Cognito\r\n\r\n**Expected behavior**\r\nA successful call should take a few hundred ms tops.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.16.11\r\n - Device: OnePlus 5T\r\n - Android Version: OxygenOS 9.0.11\r\n - Specific to simulators: No\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "commits": {}, "title": "federatedSignIn is unacceptably slow", "created": "2020-04-14 03:56:58", "user": "maxflores", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1566", "commitsDetails": [], "ttf": 3.000277777777778}, {"labels": ["Bug", "IoT"], "closed": "2020-04-11 01:41:38", "body": "**Describe the bug**\r\nI'am using android sdk. When I want to make a custom authorization with mqtt it says you are \"Already connected\". And I can see the connection in the logs but after 1 second it kicks me out. And there is no proper sample app for custom authorization.\r\n\r\n**To Reproduce**\r\nA code sample or steps:\r\nI am using the Amplify pubsub tutorials code\r\n\r\n**Which AWS service(s) are affected?**\r\n\r\n**Expected behavior**\r\nIn iOS there is no connection error in same method but when we try in the Android platform it says already connected.\r\n\r\n**Screenshots**\r\n`https://imgur.com/G29NjHR`\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: [e.g. 2.6.25]\r\n - Device: Samsung S10E , Nexus 5\r\n - Android Version: Android 10 , Android 7.1\r\n - Specific to simulators: No\r\n", "commits": {}, "title": "MqttException (0) - java.io.IOException: Already connected", "created": "2020-04-09 08:48:16", "user": "cmbaykal", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1550", "commitsDetails": [], "ttf": 1.0002777777777778}, {"labels": ["AWSMobileClient", "Bug"], "closed": "2020-03-27 18:31:35", "body": "**Describe the bug**\r\nWhenever I use the aws-sdk-android lib for Cognito authenticationI have to strip out the non-Cognito related error messaging. For example, here's one output of the 'message':\r\n\r\n> Missing required parameter USERNAME (Service: AmazonCognitoIdentityProvider; Status Code: 400; Error Code: InvalidParameterException; Request ID: e41655ce-fc4c-4ba6-b420-9045efd403f2)\r\n\r\nAnd here's what the amplify-js-sdk returns:\r\n\r\n> Missing required parameter USERNAME\r\n\r\nThe actual Cognito service returns a shortened version of the message, while the android-sdk adds additional verbosity that needs to be stripped out. This makes displaying the actual reason for authentication harder to do since I need to strip out everything after the '(' character. Although doable, I now rely on the Cognito service to not include the '(' character in their messages. \r\n\r\n**To Reproduce**\r\nA code sample or steps:\r\n```\r\n    fun signIn(\r\n        username: String,\r\n        password: String,\r\n        onStateChange: (loginState: LoginState) -> Unit\r\n    ) {\r\n        AWSMobileClient.getInstance().signIn(\r\n            username,\r\n            password,\r\n            null,\r\n            object : Callback<SignInResult> {\r\n                override fun onResult(signInResult: SignInResult) {\r\n                    ThreadUtils.runOnUiThread(Runnable {\r\n                        Log.d(\r\n                            TAG,\r\n                            \"Sign-in callback state: \" + signInResult.signInState\r\n                        )\r\n                        when (signInResult.signInState) {\r\n                            SignInState.DONE -> {\r\n                                println(\"Sign-in done.\")\r\n                                onStateChange(LoginState(LoginStateEnum.LOGGED_IN, \"Success\"))\r\n                            }\r\n                            SignInState.SMS_MFA -> {\r\n                                println(\"Please confirm sign-in with SMS.\")\r\n                                onStateChange(\r\n                                    LoginState(\r\n                                        LoginStateEnum.SMS_MFA,\r\n                                        \"Please confirm sign-in with SMS\"\r\n                                    )\r\n                                )\r\n                            }\r\n                            SignInState.NEW_PASSWORD_REQUIRED -> {\r\n                                println(\"Please confirm sign-in with new password.\")\r\n                                onStateChange(\r\n                                    LoginState(\r\n                                        LoginStateEnum.NEW_PASSWORD_REQUIRED,\r\n                                        \"Please confirm sign-in with new password\"\r\n                                    )\r\n                                )\r\n                            }\r\n                            else -> println(\"Unsupported sign-in confirmation: \" + signInResult.signInState)\r\n                        }\r\n                    })\r\n                }\r\n\r\n                override fun onError(e: java.lang.Exception) {\r\n                    ThreadUtils.runOnUiThread(Runnable {\r\n                        Log.e(TAG, \"${e.message}\")\r\n                        onStateChange(LoginState(LoginStateEnum.LOGIN_ERROR, e.message))\r\n                    })\r\n                }\r\n            })\r\n    }\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\n\r\n**Expected behavior**\r\nThe android-sdk shouldn't add additionl verbosity to the Cognito's error message\r\n\r\n\r\n**Environment Information (please complete the following information):**\r\n```\r\n    implementation 'com.amplifyframework:core:0.9.1'\r\n    implementation 'com.amplifyframework:aws-api:0.9.1'\r\n```\r\n", "commits": {}, "title": "The Cognito error messages are too verbose, especially compared to other language SDKs", "created": "2020-02-19 15:12:13", "user": "vbudilov", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1523", "commitsDetails": [], "ttf": 37.000277777777775}, {"labels": ["Bug", "Cognito"], "closed": "2020-04-22 07:43:58", "body": "**Describe the bug**\r\nWhen the client uses cognito identity to contact with S3, \"The AWS Access Key Id you provided does not exist in our records.\" happens sometimes and may continue for minutes.\r\nBTW could you please tell me how to collect logs in production devices?\r\n\r\n**To Reproduce**\r\nHappens randomly and could not be reproduced. Code is similar as in sample S3TrasferUtilitySample. I added developer authenticated identiy as in the doc. The server will keep the token for 2 hours, which is less than the 3 hour expiration. Every time the user interacts with S3 the cognito token will be refreshed, i.e. the server determines whether to send a new one. \r\n\r\nI created a MyUtils and put CognitoCachingCredentialsProvider & AmazonS3Client & S3TransferUtility here:\r\n\r\n```\r\nprivate static CognitoCachingCredentialsProvider getCredProvider(Context context) {\r\n\tif (sCredProvider == null) {\r\n\t\tfinal DeveloperAuthenticationProvider developerProvider = new DeveloperAuthenticationProvider( null, Constants.COGNITO_POOL_ID, Regions.CN_NORTH_1);\r\n\t\tsCredProvider = new CognitoCachingCredentialsProvider( context, developerProvider, Regions.CN_NORTH_1);\r\n\t\t}\r\n    return sCredProvider;\r\n}\r\n\t\r\npublic static AmazonS3Client getS3Client(Context context) {\r\n\tif (sS3Client == null) {\r\n\t\tsS3Client = new AmazonS3Client(getCredProvider(context.getApplicationContext()).getCredentials(), Region.getRegion(Regions.fromName(Constants.BUCKET_REGION)));\r\n\t}\t\r\n\treturn sS3Client;\r\n}\r\n\t\r\npublic static TransferUtility getTransferUtility(Context context) {\r\n    if (sTransferUtility == null) {\r\n        sTransferUtility = TransferUtility.builder()\r\n                .context(context)\r\n                .s3Client(getS3Client(context))\r\n                .awsConfiguration(new AWSConfiguration(context))\r\n                .build();\r\n    }\r\n    return sTransferUtility;\r\n}\r\n```\r\n\r\n\r\n**Which AWS service(s) are affected?**\r\nCognito, S3\r\n\r\n**Expected behavior**\r\nExpected client could interact with S3 stably.\r\n\r\n**Screenshots**\r\nError message:\r\n2019-12-18 17:23:00.144 24001-28649/com.ielts.junior D/com.amazonaws.request: Received error response: com.amazonaws.services.s3.model.AmazonS3Exception: The AWS Access Key Id you provided does not exist in our records. (Service: null; Status Code: 403; Error Code: InvalidAccessKeyId; Request ID: 43F27ACBF0497ED5), S3 Extended Request ID: cUMqwiJZ/0ZWBp365HuXdBjPOSfR8ssR3gSEGWWH7IFbg1gnicjolF+unI6KB8WP15/VWbc3tE8=\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: [e.g. 2.16.+]\r\n - Device: [e.g. Pixel XL, Simulator]\r\n - Android Version: [e.g. Nougat 7.1.2]\r\n - Specific to simulators: [e.g. No]\r\n\r\n**Additional context**\r\n  The client fetches identityId + cognito token from the server. Then it calls GetCredentialsForIdentity and uses the credentials to contact with S3. \r\n  I printed the credentials object and found it contained the temperate access key + secret key + session token. AWS Support searched S3 server logs using request id + host id and could see the temperate access key and error. \r\n  They told me the s3 server log meant that the secret key or token was either not provided or malformed. \r\n  However if the secreat key was not provided or malformed, the signature could not be calculated or could be wrong. And if the token was malformed the error message would be invalid token. \r\n  Hence the most possible reason was token was missing in the http request. However I only used aws sdk and how could only token was missing from the credentials object?", "commits": {}, "title": "China Region Using Cognito Identity Pool dev auth identity intermitently reports with The AWS Access Key Id you provided does not exist in our records.", "created": "2020-03-05 17:56:26", "user": "WilliamWeiWei", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1506", "commitsDetails": [], "ttf": 47.000277777777775}, {"labels": ["Bug", "S3"], "closed": "2020-03-31 08:10:43", "body": "**Describe the bug**\r\nwith code below,  value returned by pause is true,\r\nbut `onProgressChanged` in the listener keeps running\r\n\r\nin version: 2.11.0, though state `FAILED` comes up after `PAUSED` in `onStateChanged`,\r\nuploading task stop properly.\r\n\r\n**To Reproduce**\r\n```\r\nTransferObserver uploadObserver = getS3Utility(context).upload(\r\n        //...\r\n);\r\nuploadObserver.setTransferListener(getmTransferListener(this));\r\n```\r\n\r\nstart an upload via above method, then pause by its id like\r\n\r\n```\r\ngetS3Utility(aContext).pause(taskId); // taskId is equal to uploadObserver.getId()\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\ncom.amazonaws:aws-android-sdk-s3:2.16.8\r\ncom.amazonaws:aws-android-sdk-mobile-client:2.16.8\r\n\r\n**Expected behavior**\r\nwhen pause method is triggered, uploading task stop\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version:2.16.8\r\n - Device: Pixel 3\r\n - Android Version: 10\r\n - Specific to simulators: No\r\n\r\n", "commits": {}, "title": "pause in TransferUtility seems not work", "created": "2020-03-03 04:36:46", "user": "gcobc12677", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1500", "commitsDetails": [], "ttf": 28.00027777777778}, {"labels": ["AWSMobileClient", "Bug"], "closed": "2020-03-22 08:35:55", "body": "**Describe the bug**\r\nWhen call Confirm sign in  Api less that 23  not working , but in above Api 23  its work perfectly . \r\n\r\n**To Reproduce**\r\nA code sample or steps:\r\n```\r\n public  void confirmSignIn(Context context, String code) {\r\n\r\n        Log.d(TAG, \"confirmSignIn:\"+code);\r\n         AWSMobileClient.getInstance().initialize(context, new Callback<UserStateDetails>() {\r\n             @Override\r\n             public void onResult(UserStateDetails result) {\r\n                 final Map<String, String> clientMetaData = new HashMap<String, String>();\r\n                 final Map<String, String> res = new HashMap<String, String>();\r\n                 clientMetaData.put(\"challengeResponseAnswer\", \"\"+code);\r\n                 res.put(CognitoServiceConstants.CHLG_RESP_ANSWER, \"\"+code);\r\n\r\n                 AWSMobileClient.getInstance().confirmSignIn(res,clientMetaData, new Callback<SignInResult>() {\r\n                     @Override\r\n                     public void onResult(final SignInResult signInResult) {\r\n                         mResultConfirmSignInResultMutableLiveData.postValue(signInResult);\r\n                     }\r\n                     @Override\r\n                     public void onError(Exception e) {\r\n\r\n                         Log.d(TAG, \"verification:2Confirm Custom auth Sign-in error4\", e);\r\n                         if (e.getMessage().contains(\"Incorrect username or password\")){\r\n                             mResultIncorrectUserNameMutableLiveData.postValue(true);\r\n                         }\r\n                     }\r\n                 });\r\n             }\r\n\r\n             @Override\r\n             public void onError(Exception e) {\r\n                 errorValueMutableLiveData.postValue(e.getMessage());\r\n\r\n                 Log.d(TAG, \"verification:onError1:\"+e.getMessage());\r\n             }\r\n         });\r\n\r\n\r\n    }\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\nAwsMobileClient / S3 , AppSync\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\nno screen \r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: [e.g. 2.16.8]\r\n - Device: [e.g. Pixel Api 22, Simulator]\r\n - Android Version: [e.g. Lollipop 7.1.2]\r\n - Specific to simulators: [e.g. Yes]\r\n\r\n**Additional context**\r\npls solve the problem faster as soon as possible ", "commits": {}, "title": "Issues in Confirm Sign in in less Api 23 in android device ", "created": "2020-03-02 12:29:11", "user": "mohammedhasna2015", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1499", "commitsDetails": [], "ttf": 19.00027777777778}, {"labels": ["AWSMobileClient", "Bug", "Needs Info from Requester", "closing-soon-if-no-response"], "closed": "2020-03-06 18:35:43", "body": "**Description**\r\nIn my application, App request for **accessToken** at **Wed Jan 29 15:32:55 CST 2020** and received \r\naccessToken and idToken successfully with token expire date  **Wed Jan 29 16:21:44 CST 2020**.\r\nPlease below log \r\n```\r\nAwsMobileClient: Received accessToken - Token expire date : Wed Jan 29 16:21:44 CST 2020\r\n - eyJraWQiOiJOUzBKcFlXUUJTNFQwdSsrOGg2bWYzcmwrUDBkdFZKRU9pNk8weHVnTEM0PSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiJkNzM4NDBhMS01MzBjLTQ3YWMtYTY0Zi1mMmMxNzkzMjhjOWQiLCJldmVudF9pZCI6IjNhZDljNDFkLTAwMzItNDcyZC1hOGJjLTg4ZmRmMGMzYTEzOCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE1ODAyMjkzMDEsImlzcyI6Imh0dHBzOlwvXC9jb2duaXRvLWlkcC51cy1lYXN0LTEuYW1hem9uYXdzLmNvbVwvdXMtZWFzdC0xX1ppMGRZVzFmQyIsImV4cCI6MTU4MDMzNjUwNCwiaWF0IjoxNTgwMzMyOTA0LCJqdGkiOiJjNjNhMGQwZC05NDdiLTQ5NmUtYjVhYy05ZTdjYTFjMjdjNmMiLCJjbGllbnRfaWQiOiI1MXBqM2hjNmlwYW9lNGpkNTZoMHVybTBybyIsInVzZXJuYW1lIjoiYzg5ZWY1MmQtM2JkNi00MzU1LWJhYjMtNjQ2YTdjZmZlODQ0In0.bPrdZpNQwkHdC_xyhNCW5EN59_wSN3f9dWJ6POaOawN6CnyR2VMBiDxhh2x4izENlUzF0qWiC7WpE_scZBTHesmxWjBoSbd68n9-TIri3aPiiUhyrgT6wQuWjpsgCB9eRsFt-5nrZ_UUz3wktJTX4ZRDCkEssRuaewsWC1318uT017elwmgGacwXVz9rtM_Q4aeWe0o-TSev2m2WjhXqrWLh7IrIw6QDxwCuHg2C7SEPIbI7HuPL8_yYRQLnVF91GIq6b9touPfkPKYHVJZqpf_f68FcqqRthkFnDfdUL5tpvDuxVqdy9L2oDNmGkQ4-nS3u9ONwl-BlhRy-WsCsBw\r\n```\r\nAfter this  when App send request to AWS at **Wed Jan 29 15:33:02 CST 2020** it throws exception **Caused by: com.amazonaws.services.cognitoidentity.model.NotAuthorizedException: Invalid login token. Token expired: 1580337161 >= 1580336504 (Service: AmazonCognitoIdentity; Status Code: 400; Error Code: NotAuthorizedException; Request ID: 99a63c8b-5fd6-4857-90cf-d39b3d7a7a61)**\r\n\r\nSo the question is why accessToken expired earlier than its expired time?\r\nAlso, AWSMobileClient sends notification user state SIGNED_IN instead of SIGNED_OUT_USER_POOLS_TOKENS_INVALID for invalid token. See below log\r\n\r\n`[Wed Jan 29 15:44:11 CST 2020] ONELINK-LOG: AwsMobileClient: User state changed to SIGNED_IN`\r\n\r\n\r\n\r\n**Expected behavior**\r\nAwsMobileClient should not send Token expired: 1580337161 >= 1580336504 if received new token within 1 hr.\r\n\r\n\r\n- Device: Android\r\n- OS: 9.0\r\n", "commits": {}, "title": "login token expired within few seconds after getting new accessToken.", "created": "2020-02-14 13:51:49", "user": "adkhatri", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1471", "commitsDetails": [], "ttf": 21.00027777777778}, {"filteredCommitsReason": {"alsoFixesPhrase": 0, "duplicated": 1, "mergeCommitUsed": 0, "moreThanOneParent": 0, "unavailable": 0, "multipleIssueFixes": 1}, "labels": ["AWSMobileClient", "Bug", "Needs Info from Requester"], "user": "TobiS97", "filteredCommits": [], "commits": {"76122cbb85de21dda6282a79d59c1f62d9586ee7": {"commitUser": "TrekSoft", "commitGHEventType": "referenced"}, "7a74c833c3c35f621ffb8a470d9a8754220254f4": {"commitUser": "TrekSoft", "commitGHEventType": "referenced"}}, "created": "2020-02-13 11:01:23", "commitsDetails": [{"commitMessage": "Fixes sign in method caching issues #1469 and #1262 (#1531)\n\n", "commitParents": ["b0a4855bd3b4b2bfd0bef7153b5ec25657f433e3"], "commitHash": "76122cbb85de21dda6282a79d59c1f62d9586ee7", "commitSpoonAstDiffStats": [{"spoonFilePath": "AWSMobileClient.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}]}], "nameRev": "76122cbb85de21dda6282a79d59c1f62d9586ee7 tags/release_v2.16.12~36^2", "commitUser": "TrekSoft", "authoredDateTime": "2020-03-26 09:37:22", "commitGHEventType": "referenced", "commitGitStats": [{"lines": 3, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java", "insertions": 3, "deletions": 0}], "commitDateTime": "2020-03-26 09:37:22", "spoonStatsSkippedReason": ""}, {"commitMessage": "", "commitParents": [], "commitHash": "7a74c833c3c35f621ffb8a470d9a8754220254f4", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "TrekSoft", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}], "title": "AWSMobileCLient getTokens returns Exception: No cached session.", "spoonStatsSummary": {"spoonMethodsChanged": 0, "DEL": 0.0, "INS": 0.0, "UPD": 0.0, "MOV": 0.0, "TOT": 0.0, "spoonFilesChanged": 0}, "gitStatsSummary": {"lines": 0.0, "insertions": 0.0, "gitFilesChange": 0, "deletions": 0.0}, "closed": "2020-02-25 09:34:04", "statsSkippedReason": "", "body": "**State your question**\r\nI followed the Tutorial on https://aws-amplify.github.io/docs/sdk/android/authentication. After a sucessfully calling the signIn Method from the AWSMobileCLient as stated in the tutorial, I get back the message \"Tokens are invalid, please sign-in again. Exception: No chached session.\" \r\nThe userState of my user is logged in.\r\nThe essential code:\r\n\r\n\r\n        AWSMobileClient.getInstance().signIn(username, password, null, new Callback<SignInResult>               () {\r\n            @Override\r\n            public void onResult(final SignInResult signInResult) {\r\n                runOnUiThread(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        Log.d(\"CognitoService\", \"Sign-in callback state: \" + signInResult\r\n                                .getSignInState());\r\n                        switch (signInResult.getSignInState()) {\r\n                            case DONE:\r\n                                makeToast(context, \"Sign-in done.\");\r\n                                confirmSignIn();\r\n                                try {\r\n                                    Log.d(\"Debug\", AWSMobileClient.getInstance().getTokens().getAccessToken\r\n                                            ().toString());\r\n                                } catch (Exception e) {\r\n                                    e.printStackTrace();\r\n                                }\r\n                                Intent intent = new Intent(getApplicationContext(), MainActivity\r\n                                        .class);\r\n                                startActivity(intent);\r\n                                break;\r\n                            case SMS_MFA:\r\n                                makeToast(context, \"Please confirm sign-in with SMS.\");\r\n                                break;\r\n                            case NEW_PASSWORD_REQUIRED:\r\n                                makeToast(context, \"Please confirm sign-in with new password.\");\r\n                                break;\r\n                            default:\r\n                                makeToast(context, \"Unsupported sign-in confirmation: \"\r\n                                        + signInResult.getSignInState());\r\n                                break;\r\n                        }\r\n                    }\r\n                });\r\n            }`\r\nHere the stacktrace of the exception:\r\nIt is weird that the getTokens() call delegates the logic to a _getHostedUITokens() method, even if I don't use the hosted ui in this setup. I only use the hosted UI when clicking a login with FB button.\r\n\r\n```\r\n02-13 10:44:13.647 28585-28585/com.example.tobi.androidapp W/AWSMobileClient: Tokens are invalid, please sign-in again.\r\njava.lang.Exception: No cached session.\r\n    at com.amazonaws.mobile.client.AWSMobileClient$12.onFailure(AWSMobileClient.java:1818)\r\n    at com.amazonaws.mobileconnectors.cognitoauth.AuthClient.getSession(AuthClient.java:182)\r\n    at com.amazonaws.mobileconnectors.cognitoauth.Auth.getSession(Auth.java:674)\r\n    at com.amazonaws.mobile.client.AWSMobileClient._getHostedUITokens(AWSMobileClient.java:1821)\r\n    at com.amazonaws.mobile.client.AWSMobileClient.access$800(AWSMobileClient.java:161)\r\n    at com.amazonaws.mobile.client.AWSMobileClient$11.run(AWSMobileClient.java:1743)\r\n    at com.amazonaws.mobile.client.internal.InternalCallback.await(InternalCallback.java:115)\r\n    at com.amazonaws.mobile.client.AWSMobileClient.getTokens(AWSMobileClient.java:1717)\r\n    at com.amazonaws.mobile.client.AWSMobileClient.getUserStateDetails(AWSMobileClient.java:1024)\r\n    at com.amazonaws.mobile.client.AWSMobileClient.waitForSignIn(AWSMobileClient.java:903)\r\n    at com.amazonaws.mobile.client.AWSMobileClient$11.run(AWSMobileClient.java:1733)\r\n    at com.amazonaws.mobile.client.internal.InternalCallback.await(InternalCallback.java:115)\r\n    at com.amazonaws.mobile.client.AWSMobileClient.getTokens(AWSMobileClient.java:1699)\r\n    at com.example.tobi.androidapp.LoginActivity$3$1.run(LoginActivity.java:120)\r\n    at android.os.Handler.handleCallback(Handler.java:790)\r\n    at android.os.Handler.dispatchMessage(Handler.java:99)\r\n    at android.os.Looper.loop(Looper.java:164)\r\n    at android.app.ActivityThread.main(ActivityThread.java:6494)\r\n    at java.lang.reflect.Method.invoke(Native Method)\r\n    at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)\r\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)\r\n Caused by: java.lang.Exception: No cached session\r\n    at com.amazonaws.mobileconnectors.cognitoauth.AuthClient.getSession(AuthClient.java:182)\u00a0\r\n    at com.amazonaws.mobileconnectors.cognitoauth.Auth.getSession(Auth.java:674)\u00a0\r\n    at com.amazonaws.mobile.client.AWSMobileClient._getHostedUITokens(AWSMobileClient.java:1821)\u00a0\r\n    at com.amazonaws.mobile.client.AWSMobileClient.access$800(AWSMobileClient.java:161)\u00a0\r\n    at com.amazonaws.mobile.client.AWSMobileClient$11.run(AWSMobileClient.java:1743)\u00a0\r\n    at com.amazonaws.mobile.client.internal.InternalCallback.await(InternalCallback.java:115)\u00a0\r\n    at com.amazonaws.mobile.client.AWSMobileClient.getTokens(AWSMobileClient.java:1717)\u00a0\r\n    at com.amazonaws.mobile.client.AWSMobileClient.getUserStateDetails(AWSMobileClient.java:1024)\u00a0\r\n    at com.amazonaws.mobile.client.AWSMobileClient.waitForSignIn(AWSMobileClient.java:903)\u00a0\r\n    at com.amazonaws.mobile.client.AWSMobileClient$11.run(AWSMobileClient.java:1733)\u00a0\r\n    at com.amazonaws.mobile.client.internal.InternalCallback.await(InternalCallback.java:115)\u00a0\r\n    at com.amazonaws.mobile.client.AWSMobileClient.getTokens(AWSMobileClient.java:1699)\u00a0\r\n    at com.example.tobi.androidapp.LoginActivity$3$1.run(LoginActivity.java:120)\u00a0\r\n    at android.os.Handler.handleCallback(Handler.java:790)\u00a0\r\n    at android.os.Handler.dispatchMessage(Handler.java:99)\u00a0\r\n    at android.os.Looper.loop(Looper.java:164)\u00a0\r\n    at android.app.ActivityThread.main(ActivityThread.java:6494)\u00a0\r\n    at java.lang.reflect.Method.invoke(Native Method)\u00a0\r\n    at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)\u00a0\r\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)\r\n```\r\n\r\n**Which AWS Services are you utilizing?**\r\nI am using the Amplify Android SDK for authenticating my users.\r\nVersion: 2.16.+ (aws-android-sdk-mobile-client, com.amazonaws:aws-android-sdk-cognitoauth, ...)\r\n\r\n**Environment(please complete the following information):**\r\n\r\n\r\n**Device Information (please complete the following information):**\r\n - Emulated Device: Nexus 6 API 27\r\n", "changesInPackagesGIT": [], "changesInPackagesSPOON": [], "ttf": 11.000277777777777, "numCommits": 0, "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1469"}, {"labels": ["AWSMobileClient", "Bug", "Needs Info from Requester", "closing-soon-if-no-response"], "closed": "2020-03-06 19:21:03", "body": "**Description**\r\nWhen App request for accessToken, AWSMobileClient.getInstance().getTokens() method throw execption \"java.lang.Exception: getTokens does not support retrieving tokens for federated sign-in\".\r\nAlso for an invalid token, Library sent SIGNED_OUT_FEDERATED_TOKENS_INVALID instead of SIGNED_OUT_USER_POOLS_TOKENS_INVALID.\r\nApp has used AWSMobileClient.getInstance().signIn() method for login. No use of  federatedSignIn() method for login still getting above execption.\r\nLibrary version use for AWSMobileClient is **2.13.2**\r\n\r\n**To Reproduce**\r\n1. Perform Login using AWSMobileClient.getInstance().signIn() with normal username and password. \r\n2. Put the app in idle mode for 2-3 days\r\n3. After 2-3 day, resume App and perform getToken() for accessToken.\r\n\r\n```\r\n public void signIn(User user, LoginCompletionCallback loginCompletionCallback) {\r\n        currentUser.loggedInState = null;\r\n        AWSMobileClient.getInstance().signIn(user.email, user.password, null,\r\n                new Callback<SignInResult>() {\r\n                    @Override\r\n                    public void onResult(final SignInResult signInResult) {\r\n                        switch (signInResult.getSignInState()) {\r\n                            case DONE:\r\n                               getTokens((data, error) -> {\r\n                                    if (error != null) {\r\n                                        // FIXME Should we block user from here?\r\n                                    }\r\n                                    if (loginCompletionCallback != null) {\r\n                                        runOnUiThread(() -> loginCompletionCallback.completion(null));\r\n                                    }\r\n                                });\r\n                                break;\r\n                            // Below sign in states are not supported/implemented in app/cloud now\r\n                            // So they are not handled for now\r\n                            case SMS_MFA:                      \r\n                                break;\r\n                            case NEW_PASSWORD_REQUIRED:\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(Exception e) {\r\n                    }\r\n                });\r\n    }\r\n\r\n\r\n\r\n  private void getTokens(CompletionHandlerCallback completionHandlerCallback) {\r\n        AWSMobileClient.getInstance().getTokens(new Callback<Tokens>() {\r\n            @Override\r\n            public void onResult(Tokens result) {\r\n                Token accessToken = result.getAccessToken();\r\n                /*Token refreshToken = result.getRefreshToken();     \r\n            }\r\n\r\n            @Override\r\n            public void onError(Exception e) {\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n```\r\n**Affected AWS service**\r\n   com.amazonaws:aws-android-sdk-lambda:2.13.2\r\n   com.amazonaws:aws-android-sdk-mobile-client:2.13.2\r\n   com.amazonaws:aws-android-sdk-auth-userpools:2.13.2\r\n   com.amazonaws:aws-android-sdk-cognitoauth:2.13.2\r\n \r\n**Expected behavior**\r\nThe library should send SIGNED_OUT_USER_POOLS_TOKENS_INVALID instead of SIGNED_OUT_FEDERATED_TOKENS_INVALID for normal login with username and password.\r\n\r\n**Environment Information**\r\n - AWS verison 2.13.2\r\n\r\n\r\n", "commits": {}, "title": "GetToken() return java.lang.Exception: getTokens does not support retrieving tokens for federated sign-in", "created": "2020-02-04 14:15:49", "user": "adkhatri", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1465", "commitsDetails": [], "ttf": 31.00027777777778}, {"labels": ["Bug", "Needs Info from Requester", "S3"], "closed": "2020-04-16 17:58:10", "body": "Sharing the crash logs\r\n\r\nAWS s3 transfer utility causes crash. Have seen similar bug \r\nhttps://github.com/aws-amplify/aws-sdk-android/issues/1093 in which it was suggested to remove \"awss3transfertable.db\"which i have not tried. But I have tried updating to the latest version but still issues are reported..\r\n\r\nCaused by java.lang.NumberFormatException\r\nFor input string: \"ANY\"\r\n\r\nsun.misc.FloatingDecimal.readJavaFormatString (FloatingDecimal.java:2043)\r\nsun.misc.FloatingDecimal.parseDouble (FloatingDecimal.java:110)\r\njava.lang.Double.parseDouble (Double.java:538)\r\ncom.google.gson.stream.JsonReader.nextInt (JsonReader.java:186)\r\ncom.google.gson.internal.bind.TypeAdapters$7.a (TypeAdapters.java:13)\r\ncom.google.gson.internal.bind.TypeAdapters$7.read (TypeAdapters.java)\r\ncom.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.a (ReflectiveTypeAdapterFactory.java:2)\r\ncom.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.a (ReflectiveTypeAdapterFactory.java:47)\r\ncom.google.gson.Gson.a (Gson.java:20)\r\ncom.google.gson.Gson.a (Gson.java:4)\r\ncom.google.gson.Gson.a (Gson.java:9)\r\ncom.google.gson.Gson.assertFullConsumption (Gson.java)\r\n\r\ncom.amazonaws.mobileconnectors.s3.transferutility.TransferRecord.a (TransferRecord.java:422)\r\ncom.amazonaws.mobileconnectors.s3.transferutility.TransferDBUtil.getTransferById (TransferDBUtil.java:16)\r\ncom.amazonaws.mobileconnectors.s3.transferutility.TransferUtility.a (TransferUtility.java:20)\r\ncom.amazonaws.mobileconnectors.s3.transferutility.TransferUtility.a (TransferUtility.java:2)\r\ncom.amazonaws.mobileconnectors.s3.transferutility.TransferUtility.a (TransferUtility.java:23)\r\n\r\n\r\n - AWS Android SDK Version: [e.g. 2.16.6, older versions also]\r\n - Device: [e.g. Galaxy S9 and many devices]\r\n - Android Version: [9]\r\n\r\n\r\n", "commits": {}, "title": "Number format exception Transfer Record", "created": "2020-01-30 15:53:34", "user": "sougandhmp", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1461", "commitsDetails": [], "ttf": 77.00027777777778}, {"labels": ["Bug", "Core"], "closed": "2020-04-11 02:06:56", "body": "**Describe the bug**\r\nLogin via cognito is stucked on meizu M5s on keyStore.containsAlias(keyAlias) in KeyProvider23 class. There is no callback or failure. \r\n\r\n**To Reproduce**\r\nLogin via with cognito certain user which has been already registered in conginto pool.\r\n```\r\n        val cognitoUser = cognitoUserPool.getUser(email)\r\n        cognitoUser.getSessionInBackground(AuthenticationHandlerImpl(it, pass))\r\n\r\nclass AuthenticationHandlerImpl(\r\n    private val continuation: CancellableContinuation<PendingResult>,\r\n    private val password: String\r\n) : AuthenticationHandler {\r\n\r\n    override fun onSuccess(session: CognitoUserSession?, newDevice: CognitoDevice?) {\r\n        val accessToken = session?.idToken?.jwtToken\r\n        val refreshToken = session?.refreshToken?.token\r\n        if (accessToken.isNullOrBlank()) {\r\n            continuation.resume(ErrorResult(AwsCognitoSessionManager.NO_ACCESS_TOKEN_ERROR, null))\r\n            return\r\n        }\r\n        if (refreshToken.isNullOrBlank()) {\r\n            continuation.resume(ErrorResult(AwsCognitoSessionManager.NO_REFRESH_TOKEN_ERROR, null))\r\n            return\r\n        }\r\n        continuation.resume(Success(AuthCredentials(accessToken, refreshToken)))\r\n    }\r\n\r\n    override fun onFailure(exception: Exception?) {\r\n        continuation.resume(ErrorResult(1, exception?.message))\r\n    }\r\n\r\n    override fun getAuthenticationDetails(\r\n        continuation: AuthenticationContinuation,\r\n        userId: String?\r\n    ) {\r\n        val authenticationDetails = AuthenticationDetails(userId, password, null)\r\n        continuation.setAuthenticationDetails(authenticationDetails)\r\n        continuation.continueTask()\r\n    }\r\n\r\n    override fun authenticationChallenge(continuation: ChallengeContinuation) {\r\n        continuation.continueTask()\r\n    }\r\n\r\n    override fun getMFACode(continuation: MultiFactorAuthenticationContinuation) {\r\n        continuation.continueTask()\r\n    }\r\n\r\n}\r\n```\r\n\r\n**Cognito, aws core sdk**\r\n\r\n**Expected behavior**\r\nUser should successfully logged in.\r\n\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.6.17\r\n - Device: Meizu, M5s\r\n - Android Version: Android 9\r\n - Specific to simulators: No\r\n\r\n", "commits": {}, "title": "KeyProvider23 keyStore.containsAlias(keyAlias)", "created": "2020-01-30 14:52:15", "user": "BoykoDmytro", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1460", "commitsDetails": [], "ttf": 71.00027777777778}, {"labels": ["AWSMobileClient", "Bug", "Needs Info from Requester"], "closed": "2020-04-02 09:34:36", "body": "**Describe the bug**\r\nHello friends i got this error when i try to authentication using Auth0 Hosted UI\r\n```\r\n\r\nException: Failed to exchange code for tokens\r\n        at com.amazonaws.mobile.client.internal.oauth2.OAuth2Client.requestTokens(OAuth2Client.java:334)\r\n        at com.amazonaws.mobile.client.AWSMobileClient$24$1.onResult(AWSMobileClient.java:2721)\r\n        at com.amazonaws.mobile.client.AWSMobileClient$24$1.onResult(AWSMobileClient.java:2717)\r\n        at com.amazonaws.mobile.client.internal.oauth2.OAuth2Client.handleRedirect(OAuth2Client.java:266)\r\n        at com.amazonaws.mobile.client.AWSMobileClient.handleAuthResponse(AWSMobileClient.java:2555)\r\n        at com.kpn.amplifypoc.MainActivity$3.run(MainActivity.java:71)\r\n        at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:245)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n     Caused by: com.amazonaws.mobile.client.internal.oauth2.OAuth2Exception: Failed to exchange code for tokens\r\n        at com.amazonaws.mobile.client.internal.oauth2.HTTPUtil.parseHttpResponse(OAuth2Client.java:576)\r\n        at com.amazonaws.mobile.client.internal.oauth2.OAuth2Client.requestTokens(OAuth2Client.java:330)\r\n        at com.amazonaws.mobile.client.AWSMobileClient$24$1.onResult(AWSMobileClient.java:2721)\u00a0\r\n        at com.amazonaws.mobile.client.AWSMobileClient$24$1.onResult(AWSMobileClient.java:2717)\u00a0\r\n        at com.amazonaws.mobile.client.internal.oauth2.OAuth2Client.handleRedirect(OAuth2Client.java:266)\u00a0\r\n        at com.amazonaws.mobile.client.AWSMobileClient.handleAuthResponse(AWSMobileClient.java:2555)\u00a0\r\n        at com.kpn.amplifypoc.MainActivity$3.run(MainActivity.java:71)\u00a0\r\n        at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:245)\u00a0\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\u00a0\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\u00a0\r\n        at java.lang.Thread.run(Thread.java:764)\u00a0\r\n\r\n```\r\n\r\n\r\n\r\n\r\n**To Reproduce**\r\nA code sample \r\n\r\n`                AWSMobileClient.getInstance().handleAuthResponse(intent);\r\n`\r\n\r\n\r\n\r\n\r\n**Additional context**\r\n    implementation('com.amazonaws:aws-android-sdk-mobile-client:2.16.7') { transitive = true }\r\n    implementation('com.amazonaws:aws-android-sdk-cognitoauth:2.16.7') { transitive = true }\r\n    implementation 'com.amazonaws:aws-android-sdk-auth-userpools:2.16.7'\r\n    implementation 'com.amazonaws:aws-android-sdk-auth-ui:2.16.7'\r\n\r\n", "commits": {}, "title": "com.amazonaws.mobile.client.internal.oauth2.OAuth2Exception: Failed to exchange code for tokensSDK 2.16.7", "created": "2020-01-24 13:38:26", "user": "davedega", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1453", "commitsDetails": [], "ttf": 68.00027777777778}, {"filteredCommitsReason": {"alsoFixesPhrase": 0, "duplicated": 0, "mergeCommitUsed": 0, "moreThanOneParent": 0, "unavailable": 0, "multipleIssueFixes": 0}, "labels": ["Bug", "Cognito"], "user": "wooj2", "filteredCommits": ["536d78ca48d9179514b98db35b0a7a31c0a4028c"], "commits": {"536d78ca48d9179514b98db35b0a7a31c0a4028c": {"commitUser": "rjuliano", "commitGHEventType": "referenced"}}, "created": "2020-01-23 19:35:54", "commitsDetails": [{"commitMessage": "Rjuliano/pwdfix (#1528)\n\n* [aws-android-sdk-mobile] Allow user attributes to be set on confirmSignin\r\n\r\nModified the _confirmSignin overload to allow callers\r\nto pass in a map of user attributes when responding to\r\na NEW_PASSWORD_REQUIRED challenge\r\n\r\nResolves:https://github.com/aws-amplify/aws-sdk-android/issues/1403\r\nSee Also:https://github.com/aws-amplify/aws-sdk-android/issues/1452", "commitParents": ["817232ce521058f1fa30c706a796fd225d24fd74"], "commitHash": "536d78ca48d9179514b98db35b0a7a31c0a4028c", "commitSpoonAstDiffStats": [{"spoonFilePath": "AWSMobileClient.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.util.Map,com.amazonaws.mobile.client.Callback,java.util.Map).8.run()", "DEL": 2, "INS": 3, "UPD": 2, "MOV": 3, "TOT": 10}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient", "DEL": 0, "INS": 2, "UPD": 0, "MOV": 0, "TOT": 2}]}, {"spoonFilePath": "AWSMobileClientTest.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testSignInWaitFederated().3", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 1, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testAddRemoveListeners().6", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testAddRemoveListeners().5", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testSignInWaitOIDC().5.onUserStateChanged(com.amazonaws.mobile.client.UserStateDetails)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testSignIn()", "DEL": 0, "INS": 1, "UPD": 1, "MOV": 1, "TOT": 3}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest", "DEL": 0, "INS": 3, "UPD": 0, "MOV": 0, "TOT": 3}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testGetTokensStress().8", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testSignInWaitFederated()", "DEL": 0, "INS": 0, "UPD": 0, "MOV": 1, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testSignInWaitOIDC().4.onUserStateChanged(com.amazonaws.mobile.client.UserStateDetails)", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 5, "TOT": 7}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testSignInForceChangePassword()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testAWSMobileClientInitialize().11.onResult(com.amazonaws.mobile.client.UserStateDetails)", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testSignInWaitFederated().3.onUserStateChanged(com.amazonaws.mobile.client.UserStateDetails)", "DEL": 1, "INS": 0, "UPD": 1, "MOV": 6, "TOT": 8}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testFederatedSignInWithDeveloperAuthenticatedIdentities()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testSignInWaitOIDC()", "DEL": 0, "INS": 0, "UPD": 0, "MOV": 1, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testGetTokensStress().7", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testSignInWaitOIDC().4", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 1, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testAWSMobileClientInitialize().11", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.beforeClass()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.createUserViaAdminAPI(java.lang.String,java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testGetTokensStress().8.run()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 1, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testGetCredentialsStress()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 1, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testGetCredentialsStress().9", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testGetTokensStress()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 1, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testAWSMobileClientInitialize().11.onError(java.lang.Exception)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testGetCredentialsStress().10", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testGetCredentialsStress().10.run()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 1, "TOT": 2}]}], "nameRev": "536d78ca48d9179514b98db35b0a7a31c0a4028c tags/release_v2.16.12~37", "commitUser": "rjuliano", "authoredDateTime": "2020-03-26 14:29:15", "commitGHEventType": "referenced", "commitGitStats": [{"lines": 77, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTest.java", "insertions": 74, "deletions": 3}, {"lines": 15, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java", "insertions": 12, "deletions": 3}], "commitDateTime": "2020-03-26 14:29:15", "spoonStatsSkippedReason": ""}], "title": "Potential bug with Cognito w/ FORCE_CHANGE_PASSWORD flow", "spoonStatsSummary": {"spoonMethodsChanged": 2, "DEL": 2, "INS": 5, "UPD": 2, "MOV": 3, "TOT": 12, "spoonFilesChanged": 1}, "gitStatsSummary": {"lines": 15, "insertions": 12, "gitFilesChange": 1, "deletions": 3}, "closed": "2020-03-30 19:09:56", "statsSkippedReason": "", "body": "Hi,\r\n\r\nWe recently fixed a bug on iOS where in the FORCE_CHANGE_PASSWORD flow within Cognito was broken because we were sending the service an email_verified ==true as part of the request when attempting to update a user's password.  We suspect that this bug also exists on Android, and we opening this issue for someone on the team to triage/investigate (and fix if necessary)\r\n\r\n**Repro steps:**\r\n1.  Create an account in the cognito console in a state where the email address has been verified, and they need to change update their password on the next login\r\n2.  Create an app w/ cognito and log in with these credentials to allow the \"change password\" flow to appear\r\n3.  Attempt to change the password\r\n\r\n**Issue Observed on iOS:**\r\nWhen attempting to change the password, we received an error from the cognito service saying: \"Cannot modify the non-mutable attribute email_verified\".  (We suspect we'd see the same behavior on android -- can someone verify?).\r\n\r\n**Original bug filed here (against iOS):**\r\nhttps://github.com/aws-amplify/aws-sdk-ios/issues/2203\r\n\r\n**Client-side PR merged for iOS here:**\r\nhttps://github.com/aws-amplify/aws-sdk-ios/pull/2240\r\n", "changesInPackagesGIT": ["aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client"], "changesInPackagesSPOON": ["com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.util.Map,com.amazonaws.mobile.client.Callback,java.util.Map).8.run()", "com.amazonaws.mobile.client.AWSMobileClient"], "ttf": 66.00027777777778, "numCommits": 1, "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1452"}, {"labels": ["AWSMobileClient", "Bug", "Duplicate"], "closed": "2020-01-24 18:56:47", "body": "**User cannot able to signin in first try. I tried it both the last version 2.16.6 and 2.16.0. Result is the same.**\r\n\r\nSteps to reproduce:\r\n    I signed in app and then i sign out with AWSMobileClient.getInstance().signOut(SignOutOptions.builder().invalidateTokens(true).build(), new Callback<Void>() {...}\r\n    I press sign in google button (signed in google account). It call back with \"com.amazonaws.mobileconnectors.cognitoauth.exceptions.AuthNavigationException: user cancelled\" error. But when i press the button again the result of call back is \"signed in succeeded\".\r\n```\r\n\r\ncognito and cognitoauth affected.\r\n\r\nUser must be able to signin on the first try.\r\n\r\n**Environment Information**\r\n - AWS Android SDK Version: [2.16.6]\r\n - Device: [Z30]\r\n - Android Version: [8.1.0]\r\n\r\n\r\n", "commits": {}, "title": "cognitoauth: AuthNavigationException: user cancelled", "created": "2020-01-21 12:46:17", "user": "SaMumcu", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1443", "commitsDetails": [], "ttf": 3.000277777777778}, {"labels": ["Bug", "Core", "closing-soon-if-no-response"], "closed": "2020-01-31 17:40:16", "body": "Getting following logs when I'm trying to upload file to S3 bucket.\r\nDevice is : Huawie Y9 2019\r\nSDK version: '2.16.6'\r\n\r\n```\r\n\r\n\r\nAWSKeyValueStore: com.amazonaws.internal.keyvaluestore.KeyNotFoundException: Error occurred while accessing AndroidKeyStore to retrieve the key for keyAlias: com.amazonaws.android.auth.aesKeyStoreAlias\r\n2020-01-10 14:46:01.874 21450-23199/com.fayvo I/AWSKeyValueStore: Deleting the encryption key identified by the keyAlias: com.amazonaws.android.auth.aesKeyStoreAlias\r\n2020-01-10 14:46:01.882 21450-23199/com.fayvo W/AWSKeyValueStore: No encryption key found for encryptionKeyAlias: com.amazonaws.android.auth.aesKeyStoreAlias\r\n2020-01-10 14:46:01.961 21450-23199/com.fayvo I/KeyProvider23: Generated the encryption key identified by the keyAlias: com.amazonaws.android.auth.aesKeyStoreAlias using AndroidKeyStore\r\n\r\n```", "commits": {}, "title": "Error occurred while accessing AndroidKeyStore to retrieve the key for keyAlias", "created": "2020-01-10 09:51:35", "user": "usmanrana07", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1427", "commitsDetails": [], "ttf": 21.00027777777778}, {"labels": ["AWSMobileClient", "Bug", "Needs Info from Requester"], "closed": "2020-03-20 17:56:10", "body": "**Describe the bug**\r\nI was able to get tokens from AWSMobileClient successfully. But, 2 days ago i started get the error: \"getTokens does not support retrieving tokens while signed-out\". It was weird because i was trying to get tokens right after logging the user in, in another activity which is user profile. So, i was sure that user was not in signout state When i checked other logs, i saw that AWSMobileClient was having trouble with KeyValueStore. I am getting KeyNotFoundException when i try to get tokens. I read other issues related KeyValueStore in here. Here is what i tried so far:\r\n\r\n-Clearing cache and data.\r\n-Uninstalling the app.\r\n-Restarting the device.\r\n-Logging in with different credentials.\r\n-Registering a new user and logging with the new user.\r\n-Downgrading AWSMobileClient to 2.15.2.\r\n\r\nNo luck so far.\r\n\r\n**To Reproduce**\r\nHere is how i login:\r\n```\r\n    fun signInUser(username: String, password: String, cognitoSignInResponse: CognitoSignInResponse) {\r\n        user = cognitoUserPool.getUser(username)\r\n\r\n        val authenticationHandler = object : AuthenticationHandler {\r\n            override fun authenticationChallenge(continuation: ChallengeContinuation?) {}\r\n\r\n            override fun getMFACode(continuation: MultiFactorAuthenticationContinuation?) {}\r\n\r\n            override fun onSuccess(userSession: CognitoUserSession?, newDevice: CognitoDevice?) {\r\n                cognitoSignInResponse.onSuccess(userSession)\r\n            }\r\n\r\n            override fun getAuthenticationDetails(authenticationContinuation: AuthenticationContinuation,\r\n                                                  serId: String) {\r\n                // The API needs user sign-in credentials to continue\r\n                val authenticationDetails = AuthenticationDetails(username, password, null)\r\n                // Pass the user sign-in credentials to the continuation\r\n                authenticationContinuation.setAuthenticationDetails(authenticationDetails)\r\n                // Allow the sign-in to continue\r\n                authenticationContinuation.continueTask()\r\n            }\r\n\r\n            override fun onFailure(exception: Exception) {\r\n                cognitoSignInResponse.onFailure(exception)\r\n            }\r\n        }\r\n        user.getSessionInBackground(authenticationHandler)\r\n    }\r\n```\r\nHere is how i try to get tokens:\r\n```\r\n        AWSMobileClient.getInstance().initialize(context, awsConfig, object : Callback<UserStateDetails> {\r\n            override fun onResult(result: UserStateDetails?) {\r\n\r\n                AWSMobileClient.getInstance().getTokens(object : Callback<Tokens> {\r\n                    override fun onResult(result: Tokens?) {\r\n                        accessTokenCallback.onSuccess(result?.accessToken?.tokenString)\r\n                    }\r\n\r\n                    override fun onError(e: java.lang.Exception?) {\r\n                        Log.e(\"Cognito error:\", \" \" + e?.toString())\r\n                        accessTokenCallback.onFailure(e)\r\n                    }\r\n                })\r\n            }\r\n\r\n            override fun onError(e: java.lang.Exception?) {\r\n                Log.e(\"Cognito error:\", \" \" + e?.toString())\r\n                accessTokenCallback.onFailure(e)\r\n            }\r\n        })\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\nAWSMobileClient\r\n\r\n**Expected behavior**\r\nGetting cached tokens\r\n\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: com.amazonaws:aws-android-sdk-mobile-client:2.16.5\r\n - Device: Samsung S8(Android 9) and Virtual Device Pixel 2(API 26)\r\n - Specific to simulators: No\r\n\r\n**Error log:**\r\n```\r\n2019-12-24 15:08:33.468 29867-32338/com.xxx.app.debug E/AWSKeyValueStore: com.amazonaws.internal.keyvaluestore.KeyNotFoundException: Error occurred while accessing AndroidKeyStore to retrieve the key for keyAlias: com.amazonaws.mobile.client.aesKeyStoreAlias\r\n2019-12-24 15:08:33.487 29867-32338/com.xxx.app.debug E/AWSKeyValueStore: Error in retrieving the decryption key used to decrypt the data from the persistent store. Returning null for the requested dataKey = provider\r\n2019-12-24 15:08:33.490 29867-32338/com.xxx.app.debug E/AWSKeyValueStore: com.amazonaws.internal.keyvaluestore.KeyNotFoundException: Error occurred while accessing AndroidKeyStore to retrieve the key for keyAlias: com.amazonaws.mobile.client.aesKeyStoreAlias\r\n2019-12-24 15:08:33.497 29867-32338/com.xxx.app.debug E/AWSKeyValueStore: Error in retrieving the decryption key used to decrypt the data from the persistent store. Returning null for the requested dataKey = token\r\n2019-12-24 15:08:33.499 29867-32338/com.xxx.app.debug E/AWSKeyValueStore: com.amazonaws.internal.keyvaluestore.KeyNotFoundException: Error occurred while accessing AndroidKeyStore to retrieve the key for keyAlias: com.amazonaws.mobile.client.aesKeyStoreAlias\r\n2019-12-24 15:08:33.502 29867-32338/com.xxx.app.debug E/AWSKeyValueStore: Error in retrieving the decryption key used to decrypt the data from the persistent store. Returning null for the requested dataKey = cognitoIdentityId\r\n2019-12-24 15:08:33.504 29867-32338/com.xxx.app.debug E/AWSKeyValueStore: com.amazonaws.internal.keyvaluestore.KeyNotFoundException: Error occurred while accessing AndroidKeyStore to retrieve the key for keyAlias: com.amazonaws.mobile.client.aesKeyStoreAlias\r\n2019-12-24 15:08:33.510 29867-32338/com.xxx.app.debug E/AWSKeyValueStore: Error in retrieving the decryption key used to decrypt the data from the persistent store. Returning null for the requested dataKey = isFederationEnabled\r\n2019-12-24 15:08:33.515 29867-32343/com.xxx.app.debug E/AWSKeyValueStore: com.amazonaws.internal.keyvaluestore.KeyNotFoundException: Error occurred while accessing AndroidKeyStore to retrieve the key for keyAlias: com.amazonaws.mobile.client.aesKeyStoreAlias\r\n2019-12-24 15:08:33.519 29867-32343/com.xxx.app.debug E/AWSKeyValueStore: Error in retrieving the decryption key used to decrypt the data from the persistent store. Returning null for the requested dataKey = provider\r\n2019-12-24 15:08:33.520 29867-32343/com.xxx.app.debug E/AWSKeyValueStore: com.amazonaws.internal.keyvaluestore.KeyNotFoundException: Error occurred while accessing AndroidKeyStore to retrieve the key for keyAlias: com.amazonaws.mobile.client.aesKeyStoreAlias\r\n2019-12-24 15:08:33.526 29867-32343/com.xxx.app.debug E/AWSKeyValueStore: Error in retrieving the decryption key used to decrypt the data from the persistent store. Returning null for the requested dataKey = token\r\n2019-12-24 15:08:33.528 29867-32343/com.xxx.app.debug E/AWSKeyValueStore: com.amazonaws.internal.keyvaluestore.KeyNotFoundException: Error occurred while accessing AndroidKeyStore to retrieve the key for keyAlias: com.amazonaws.mobile.client.aesKeyStoreAlias\r\n2019-12-24 15:08:33.533 29867-32343/com.xxx.app.debug E/AWSKeyValueStore: Error in retrieving the decryption key used to decrypt the data from the persistent store. Returning null for the requested dataKey = provider\r\n2019-12-24 15:08:33.535 29867-32343/com.xxx.app.debug E/AWSKeyValueStore: com.amazonaws.internal.keyvaluestore.KeyNotFoundException: Error occurred while accessing AndroidKeyStore to retrieve the key for keyAlias: com.amazonaws.mobile.client.aesKeyStoreAlias\r\n2019-12-24 15:08:33.543 29867-32343/com.xxx.app.debug E/AWSKeyValueStore: Error in retrieving the decryption key used to decrypt the data from the persistent store. Returning null for the requested dataKey = token\r\n2019-12-24 15:08:33.548 29867-32343/com.xxx.app.debug E/AWSKeyValueStore: com.amazonaws.internal.keyvaluestore.KeyNotFoundException: Error occurred while accessing AndroidKeyStore to retrieve the key for keyAlias: com.amazonaws.mobile.client.aesKeyStoreAlias\r\n2019-12-24 15:08:33.565 29867-32343/com.xxx.app.debug E/AWSKeyValueStore: Error in retrieving the decryption key used to decrypt the data from the persistent store. Returning null for the requested dataKey = cognitoIdentityId\r\n2019-12-24 15:08:33.569 29867-32343/com.xxx.app.debug E/AWSKeyValueStore: com.amazonaws.internal.keyvaluestore.KeyNotFoundException: Error occurred while accessing AndroidKeyStore to retrieve the key for keyAlias: com.amazonaws.mobile.client.aesKeyStoreAlias\r\n2019-12-24 15:08:33.579 29867-32343/com.xxx.app.debug E/AWSKeyValueStore: Error in retrieving the decryption key used to decrypt the data from the persistent store. Returning null for the requested dataKey = isFederationEnabled\r\n2019-12-24 15:08:33.582 29867-32343/com.xxx.app.debug E/Cognito\u00a0error::  java.lang.Exception: getTokens does not support retrieving tokens while signed-out\r\n```\r\n", "commits": {}, "title": "com.amazonaws.internal.keyvaluestore.KeyNotFoundException", "created": "2019-12-24 20:57:13", "user": "zmeid", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1392", "commitsDetails": [], "ttf": 86.00027777777778}, {"labels": ["Bug", "Needs Info from Requester", "S3", "closing-soon-if-no-response"], "closed": "2020-04-03 18:06:09", "body": "Hello everyone,\r\n\r\nI have an app in which uploads videos to S3 using TransferUtility.\r\nIt works in most cases, but in Xiomi MI 8 Lite, it crashes.\r\n\r\nI thought it was a max size issue, but is not.\r\n\r\nI appreciate any suggestions on how to fix it.\r\n\r\nSDK version\r\n```\r\n    implementation 'com.amazonaws:aws-android-sdk-core:2.16.5'\r\n    implementation 'com.amazonaws:aws-android-sdk-s3:2.16.5'\r\n    implementation 'com.amazonaws:aws-android-sdk-cognito:2.16.5'\r\n```\r\n\r\nHere is my code:\r\n\r\n```\r\nprivate void uploadFile() {\r\n\r\n        spinProgress.setVisibility(View.VISIBLE);\r\n\r\n        CognitoCachingCredentialsProvider credentialsProvider = new CognitoCachingCredentialsProvider(\r\n                getApplicationContext(),\r\n                \"XXX\",\r\n                Regions.US_EAST_1 // Region\r\n        );\r\n\r\n        // get file to upload\r\n        prepend = \"android-\" + interviewId + \"-\" + String.valueOf(questionId) + \".mp4\";\r\n\r\n        videoToUpload = CamRecordActivity.getOutputMediaFile(\r\n                interviewId,\r\n                questionId,\r\n                this\r\n        );\r\n\r\n        TransferNetworkLossHandler.getInstance(getApplicationContext());\r\n        //TransferNetworkLossHandler.getInstance(getApplicationContext()).onReceive(getApplicationContext(), new Intent().setAction(ConnectivityManager.CONNECTIVITY_ACTION));\r\n\r\n        AmazonS3Client s3 = new AmazonS3Client(credentialsProvider);\r\n        s3.setRegion(Region.getRegion(Regions.US_EAST_1));\r\n\r\n        final TransferUtility transferUtility = new TransferUtility(s3, getApplicationContext());\r\n\r\n        // connection timeout\r\n        ClientConfiguration clientConfiguration = new ClientConfiguration();\r\n        // 30 seconds\r\n        clientConfiguration.setConnectionTimeout(30000);\r\n        // 5 min\r\n        clientConfiguration.setSocketTimeout(300000);\r\n\r\n        final TransferObserver transferObserver = transferUtility.upload(\r\n                \"mobvideosappin\",     /* The bucket to upload to */\r\n                prepend,    /* The key for the uploaded object */\r\n                videoToUpload        /* The file where the data to upload exists */\r\n        );\r\n\r\n        transferObserver.setTransferListener(new TransferListener(){\r\n\r\n            @Override\r\n            public void onStateChanged(int id, TransferState state) {\r\n                Log.i(\"STATE: \", String.valueOf(state));\r\n\r\n                if (state.equals(TransferState.COMPLETED)) {\r\n                    Log.i(\"DONE: \", String.valueOf(state));\r\n                    spinProgress.setVisibility(View.INVISIBLE);\r\n                    postAnswer.start();\r\n                    transferUtility.cancel(id);\r\n                }\r\n\r\n                if (state.equals(TransferState.FAILED)) {\r\n                    showToast(getString(R.string.tryagain));\r\n\r\n                    Thread th = new Thread((Runnable) transferUtility.resume(id));\r\n                    th.start();\r\n\r\n                    //finish();\r\n                    //startActivity(getIntent());\r\n                }\r\n\r\n                if (state.equals(TransferState.WAITING) || state.equals(TransferState.WAITING_FOR_NETWORK)) {\r\n                    showToast(getString(R.string.waiting));\r\n                }\r\n\r\n                if (state.equals(TransferState.CANCELED)) {\r\n                    showToast(getString(R.string.tryagain));\r\n\r\n                    finish();\r\n                    startActivity(getIntent());\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onProgressChanged(int id, long bytesCurrent, long bytesTotal) {\r\n\r\n                Log.i(\"BYTES\", String.valueOf(transferObserver.getBytesTransferred()));\r\n\r\n                float _percent = ((float)bytesCurrent/(float)bytesTotal)*100.0f;\r\n                final int percentage = (int) _percent;\r\n\r\n                mProgress.setMax(100);\r\n                mProgress.setProgress(percentage);\r\n                textProgress.setText(String.valueOf(percentage) + \"%\");\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onError(int id, Exception ex) {\r\n                textProgress.setText(getString(R.string.tryagain));\r\n\r\n                ex.printStackTrace();\r\n\r\n                finish();\r\n                startActivity(getIntent());\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n    }\r\n```\r\n\r\n\r\nAnd here is the log:\r\n\r\n```\r\nI/BYTES: 16777216\r\n2019-12-20 17:20:46.053 3272-3937/com.jobconvo.entrevistanew E/UploadPartTask: Upload part interrupted: com.amazonaws.AmazonClientException: Unable to execute HTTP request: timeout\r\n2019-12-20 17:20:46.056 3272-3272/com.jobconvo.entrevistanew I/BYTES: 17190538\r\n\r\n...\r\n\r\nI/BYTES: 8388608\r\n2019-12-20 17:23:54.273 4672-4994/com.jobconvo.entrevistanew E/UploadPartTask: Upload part interrupted: com.amazonaws.AmazonClientException: Unable to execute HTTP request: timeout\r\n2019-12-20 17:23:54.286 4672-4672/com.jobconvo.entrevistanew I/BYTES: 8696079\r\n2019-12-20 17:23:54.302 4672-4994/com.jobconvo.entrevistanew E/UploadPartTask: Encountered error uploading part \r\n    com.amazonaws.AmazonClientException: Unable to execute HTTP request: timeout\r\n        at com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:441)\r\n        at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:212)\r\n        at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:4913)\r\n        at com.amazonaws.services.s3.AmazonS3Client.uploadPart(AmazonS3Client.java:3887)\r\n        at com.amazonaws.mobileconnectors.s3.transferutility.UploadPartTask.call(UploadPartTask.java:60)\r\n        at com.amazonaws.mobileconnectors.s3.transferutility.UploadPartTask.call(UploadPartTask.java:30)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n     Caused by: java.net.SocketTimeoutException: timeout\r\n        at com.android.okhttp.okio.Okio$3.newTimeoutException(Okio.java:212)\r\n        at com.android.okhttp.okio.AsyncTimeout.exit(AsyncTimeout.java:261)\r\n        at com.android.okhttp.okio.AsyncTimeout$2.read(AsyncTimeout.java:215)\r\n        at com.android.okhttp.okio.RealBufferedSource.indexOf(RealBufferedSource.java:306)\r\n        at com.android.okhttp.okio.RealBufferedSource.indexOf(RealBufferedSource.java:300)\r\n        at com.android.okhttp.okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:196)\r\n        at com.android.okhttp.internal.http.Http1xStream.readResponse(Http1xStream.java:186)\r\n        at com.android.okhttp.internal.http.Http1xStream.readResponseHeaders(Http1xStream.java:127)\r\n        at com.android.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:737)\r\n        at com.android.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:609)\r\n        at com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:471)\r\n        at com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:407)\r\n        at com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponseMessage(HttpURLConnectionImpl.java:534)\r\n        at com.android.okhttp.internal.huc.DelegatingHttpsURLConnection.getResponseMessage(DelegatingHttpsURLConnection.java:109)\r\n        at com.android.okhttp.internal.huc.HttpsURLConnectionImpl.getResponseMessage(HttpsURLConnectionImpl.java:26)\r\n        at com.amazonaws.http.UrlHttpClient.createHttpResponse(UrlHttpClient.java:92)\r\n        at com.amazonaws.http.UrlHttpClient.execute(UrlHttpClient.java:85)\r\n        at com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:371)\r\n        at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:212)\u00a0\r\n        at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:4913)\u00a0\r\n        at com.amazonaws.services.s3.AmazonS3Client.uploadPart(AmazonS3Client.java:3887)\u00a0\r\n        at com.amazonaws.mobileconnectors.s3.transferutility.UploadPartTask.call(UploadPartTask.java:60)\u00a0\r\n        at com.amazonaws.mobileconnectors.s3.transferutility.UploadPartTask.call(UploadPartTask.java:30)\u00a0\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\u00a0\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\u00a0\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\u00a0\r\n        at java.lang.Thread.run(Thread.java:764)\u00a0\r\n     Caused by: java.net.SocketException: socket is closed\r\n        at com.android.org.conscrypt.ConscryptFileDescriptorSocket$SSLInputStream.read(ConscryptFileDescriptorSocket.java:551)\r\n        at com.android.okhttp.okio.Okio$2.read(Okio.java:136)\r\n        at com.android.okhttp.okio.AsyncTimeout$2.read(AsyncTimeout.java:211)\r\n        at com.android.okhttp.okio.RealBufferedSource.indexOf(RealBufferedSource.java:306)\u00a0\r\n        at com.android.okhttp.okio.RealBufferedSource.indexOf(RealBufferedSource.java:300)\u00a0\r\n        at com.android.okhttp.okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:196)\u00a0\r\n        at com.android.okhttp.internal.http.Http1xStream.readResponse(Http1xStream.java:186)\u00a0\r\n        at com.android.okhttp.internal.http.Http1xStream.readResponseHeaders(Http1xStream.java:127)\u00a0\r\n        at com.android.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:737)\u00a0\r\n        at com.android.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:609)\u00a0\r\n        at com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:471)\u00a0\r\n        at com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:407)\u00a0\r\n        at com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponseMessage(HttpURLConnectionImpl.java:534)\u00a0\r\n        at com.android.okhttp.internal.huc.DelegatingHttpsURLConnection.getResponseMessage(DelegatingHttpsURLConnection.java:109)\u00a0\r\n        at com.android.okhttp.internal.huc.HttpsURLConnectionImpl.getResponseMessage(HttpsURLConnectionImpl.java:26)\u00a0\r\n        at com.amazonaws.http.UrlHttpClient.createHttpResponse(UrlHttpClient.java:92)\u00a0\r\n        at com.amazonaws.http.UrlHttpClient.execute(UrlHttpClient.java:85)\u00a0\r\n        at com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:371)\u00a0\r\n        at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:212)\u00a0\r\n        at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:4913)\u00a0\r\n        at com.amazonaws.services.s3.AmazonS3Client.uploadPart(AmazonS3Client.java:3887)\u00a0\r\n        at com.amazonaws.mobileconnectors.s3.transferutility.UploadPartTask.call(UploadPartTask.java:60)\u00a0\r\n        at com.amazonaws.mobileconnectors.s3.transferutility.UploadPartTask.call(UploadPartTask.java:30)\u00a0\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\u00a0\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\u00a0\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\u00a0\r\n        at java.lang.Thread.run(Thread.java:764)\u00a0\r\n```", "commits": {}, "title": "S3 TransferUtility Upload part interrupted: time out and socket is closed", "created": "2019-12-20 19:44:38", "user": "bahiamartins", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1387", "commitsDetails": [], "ttf": 104.00027777777778}, {"labels": ["Bug", "IoT", "Needs Info from Requester", "closing-soon-if-no-response"], "closed": "2020-04-17 18:22:50", "body": "**Describe the bug**\r\nI was using v2.16.0 on Android 5.1 and it worked fine.\r\nToday I tried to update it to v2.16.4 and I got an issue with reading files in my app:\r\n```\r\nFATAL EXCEPTION: main\r\nProcess: com.chargedup.largestation.dev, PID: 9701\r\njava.lang.RuntimeException: Unable to create application com.chargedup.largestation.App: java.io.FileNotFoundException: /mnt/internal_sd/Android/data/com.chargedup.largestation.dev/files/options.json: open failed: EACCES (Permission denied)\r\n    at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4582)\r\n    at android.app.ActivityThread.access$1500(ActivityThread.java:151)\r\n    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1380)\r\n    at android.os.Handler.dispatchMessage(Handler.java:102)\r\n    at android.os.Looper.loop(Looper.java:135)\r\n    at android.app.ActivityThread.main(ActivityThread.java:5280)\r\n    at java.lang.reflect.Method.invoke(Native Method)\r\n    at java.lang.reflect.Method.invoke(Method.java:372)\r\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:963)\r\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:758)\r\nCaused by: java.io.FileNotFoundException: /mnt/internal_sd/Android/data/com.chargedup.largestation.dev/files/options.json: open failed: EACCES (Permission denied)\r\n    at libcore.io.IoBridge.open(IoBridge.java:456)\r\n    at java.io.FileInputStream.<init>(FileInputStream.java:76)\r\n    at com.chargedup.largestation.data.options.DataOptionsModule.provideOptions(DataOptionsModule.kt:30)\r\n    at com.chargedup.largestation.data.options.DataOptionsModule_ProvideOptionsFactory.provideOptions(DataOptionsModule_ProvideOptionsFactory.java:39)\r\n    at com.chargedup.largestation.data.options.DataOptionsModule_ProvideOptionsFactory.get(DataOptionsModule_ProvideOptionsFactory.java:29)\r\n    at com.chargedup.largestation.data.options.DataOptionsModule_ProvideOptionsFactory.get(DataOptionsModule_ProvideOptionsFactory.java:9)\r\n    at com.chargedup.largestation.data.DataAndroidModule_ProvidesStationIdFactory.get(DataAndroidModule_ProvidesStationIdFactory.java:26)\r\n    at com.chargedup.largestation.data.DataAndroidModule_ProvidesStationIdFactory.get(DataAndroidModule_ProvidesStationIdFactory.java:9)\r\n    at com.chargedup.largestation.data.iot.AwsModule_ProvidesStationInputTopicFactory.get(AwsModule_ProvidesStationInputTopicFactory.java:28)\r\n    at com.chargedup.largestation.data.iot.AwsModule_ProvidesStationInputTopicFactory.get(AwsModule_ProvidesStationInputTopicFactory.java:8)\r\n    at com.chargedup.largestation.data.iot.IotClient_Factory.get(IotClient_Factory.java:66)\r\n    at com.chargedup.largestation.data.iot.IotClient_Factory.get(IotClient_Factory.java:12)\r\n    at dagger.internal.DoubleCheck.get(DoubleCheck.java:47)\r\n    at com.chargedup.largestation.appinitializers.SystemInitializer_Factory.get(SystemInitializer_Factory.java:35)\r\n    at com.chargedup.largestation.appinitializers.SystemInitializer_Factory.get(SystemInitializer_Factory.java:11)\r\n    at dagger.internal.DoubleCheck.get(DoubleCheck.java:47)\r\n    at dagger.internal.SetFactory.get(SetFactory.java:126)\r\n    at dagger.internal.SetFactory.get(SetFactory.java:37)\r\n    at com.chargedup.common.appinitializers.AppInitializers_Factory.get(AppInitializers_Factory.java:22)\r\n    at com.chargedup.common.appinitializers.AppInitializers_Factory.get(AppInitializers_Factory.java:9)\r\n    at dagger.internal.DoubleCheck.get(DoubleCheck.java:47)\r\n    at com.chargedup.largestation.di.DaggerAppComponent.injectApp(DaggerAppComponent.java:462)\r\n    at com.chargedup.largestation.di.DaggerAppComponent.inject(DaggerAppComponent.java:458)\r\n    at com.chargedup.largestation.di.DaggerAppComponent.inject(DaggerAppComponent.java:168)\r\n    at dagger.android.DaggerApplication.injectIfNecessary(DaggerApplication.java:63)\r\n    at dagger.android.DaggerApplication.onCreate(DaggerApplication.java:38)\r\n    at com.chargedup.largestation.App.onCreate(App.kt:13)\r\n    at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1012)\r\n    at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4579)\r\n    ... 9 more\r\nCaused by: android.system.ErrnoException: open failed: EACCES (Permission denied)\r\n    at libcore.io.Posix.open(Native Method)\r\n    at libcore.io.BlockGuardOs.open(BlockGuardOs.java:186)\r\n    at libcore.io.IoBridge.open(IoBridge.java:442)\r\n```\r\n\r\n**To Reproduce**\r\n```\r\n@Provides\r\n    fun provideOptions(\r\n        @Named(OPTIONS_PATH) optionsPath: String,\r\n        adapter: JsonAdapter<Options>\r\n    ): Options {\r\n        val file = File(optionsPath)\r\n        val inputStream = FileInputStream(file)\r\n        val bytes = inputStream.readBytes()\r\n        val str = bytes.toString(Charsets.UTF_8)\r\n        return adapter.fromJson(str)!!\r\n    }\r\n```\r\nIt seems that `FileInputStream(file)` throws an exception.\r\nTo be honest I don't know how to explain that, yet. This file is not read by AWS SDK, I'm reading a file in my own code, but still, I got this issue only when I update AWS IOT SDK to v2.16.4. I tested also v2.16.2, v2.16.3. Same problem. \r\n_(Tested as well v2.16.1, but using this one I'm facing the issue reported in #1259 & #1275)_.\r\n\r\n**Which AWS service(s) are affected?**\r\nAWS IOT\r\n\r\n**Expected behaviour**\r\nNo exception.\r\n\r\n**Screenshots**\r\n-\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.16.2, 2.16.3, 2.16.4\r\n - Device: Custom device\r\n - Android Version: 5.1 (API 21)\r\n - Specific to simulators: No\r\n\r\n**Additional context**\r\n-\r\n", "commits": {}, "title": "Using v2.16.4 causes FileInputStream crash on Android 5.1", "created": "2019-11-29 11:44:42", "user": "rynkowsg", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1336", "commitsDetails": [], "ttf": 140.00027777777777}, {"labels": ["Bug", "Core", "closing-soon-if-no-response"], "closed": "2019-11-13 18:42:22", "body": "I am using `com.amazonaws:aws-android-sdk-pinpoint:2.14.1` \r\n\r\nI don't know how to reproduce the crash but I get this report in Google Play:\r\n\r\n```\r\njava.lang.RuntimeException: \r\n  at android.app.ActivityThread.handleBindApplication (ActivityThread.java:4556)\r\n  at android.app.ActivityThread.access$1500 (ActivityThread.java:151)\r\n  at android.app.ActivityThread$H.handleMessage (ActivityThread.java:1364)\r\n  at android.os.Handler.dispatchMessage (Handler.java:102)\r\n  at android.os.Looper.loop (Looper.java:135)\r\n  at android.app.ActivityThread.main (ActivityThread.java:5254)\r\n  at java.lang.reflect.Method.invoke (Native Method)\r\n  at java.lang.reflect.Method.invoke (Method.java:372)\r\n  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run (ZygoteInit.java:904)\r\n  at com.android.internal.os.ZygoteInit.main (ZygoteInit.java:699)\r\n\r\nCaused by: java.lang.IllegalStateException: \r\n  at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize (CognitoCachingCredentialsProvider.java:434)\r\n  at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init> (CognitoCachingCredentialsProvider.java:417)\r\n  at com.amazonaws.mobile.auth.core.IdentityManager.createCredentialsProvider (IdentityManager.java:932)\r\n  at com.amazonaws.mobile.auth.core.IdentityManager.<init> (IdentityManager.java:228)\r\n  ...\r\n  at android.app.Instrumentation.callApplicationOnCreate (Instrumentation.java:1012)\r\n  at android.app.ActivityThread.handleBindApplication (ActivityThread.java:4553)\r\n\r\nCaused by: java.lang.IllegalStateException: \r\n  at com.amazonaws.internal.keyvaluestore.KeyProvider18.getKey (KeyProvider18.java:108)\r\n  at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.setPersistenceEnabled (AWSKeyValueStore.java:138)\r\n  at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.<init> (AWSKeyValueStore.java:108)\r\n  at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize (CognitoCachingCredentialsProvider.java:425)\r\n\r\nCaused by: java.lang.IllegalArgumentException: \r\n  at javax.crypto.spec.SecretKeySpec.<init> (SecretKeySpec.java:59)\r\n  at com.amazonaws.internal.keyvaluestore.KeyProvider18.getKey (KeyProvider18.java:90)\r\n```\r\n\r\nAny idea?", "commits": {}, "title": "Pinpoint initialisation crash", "created": "2019-11-06 12:29:50", "user": "Joseph82", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1298", "commitsDetails": [], "ttf": 7.000277777777778}, {"labels": ["Bug", "S3"], "closed": "2020-04-14 18:43:27", "body": "**Describe the bug**\r\nTransferNetworkLossHandler is crashing on an illegal state exception when the network connection is poor.\r\n```\r\njava.lang.IllegalStateException\r\nCouldn't read row 988, col 0 from CursorWindow. Make sure the Cursor is initialized correctly before accessing data from it.\r\nandroid.database.CursorWindow.nativeGetLong (CursorWindow.java)\r\nandroid.database.CursorWindow.getLong + 511 (CursorWindow.java:511)\r\nandroid.database.CursorWindow.getInt + 578 (CursorWindow.java:578)\r\nandroid.database.AbstractWindowedCursor.getInt + 84 (AbstractWindowedCursor.java:84)\r\ncom.amazonaws.mobileconnectors.s3.transferutility.TransferNetworkLossHandler.resumeAllTransfersOnNetworkAvailability + 171 (TransferNetworkLossHandler.java:171)\r\ncom.amazonaws.mobileconnectors.s3.transferutility.TransferNetworkLossHandler.access$000 + 37 (TransferNetworkLossHandler.java:37)\r\ncom.amazonaws.mobileconnectors.s3.transferutility.TransferNetworkLossHandler$1.run + 123 (TransferNetworkLossHandler.java:123)\r\njava.lang.Thread.run + 761 (Thread.java:761)\r\n```\r\n**To Reproduce**\r\n1. Use a slow network connection (~100kbps)\r\n1. Attempt to upload files to s3.\r\n1. on upload failure, terminate TransferUtility and create a new instance for when the network reconnects.\r\n\r\n**Which AWS service(s) are affected?**\r\nS3\r\n\r\n**Expected behavior**\r\nFailures in the TransferUtility should not terminate the thread via an uncaught exception. The transfer utility should close gracefully. \r\n\r\n**Screenshots**\r\nN/A\r\n\r\n**Environment Information:**\r\n - AWS Android SDK Version: 2.16.1\r\n - Android Version: 7.0\r\n - Specific to simulators:  Unknown\r\n\r\n**Additional context**\r\nThe exception is being caught with:\r\n```\r\n Thread.setDefaultUncaughtExceptionHandler(Thread.UncaughtExceptionHandler);\r\n```\r\n", "commits": {}, "title": "TransferNetworkLossHandler can crash the thread when using a poor network connection", "created": "2019-11-01 16:03:27", "user": "alex-pathspot", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1289", "commitsDetails": [], "ttf": 165.00027777777777}, {"filteredCommitsReason": {"alsoFixesPhrase": 0, "duplicated": 2, "mergeCommitUsed": 0, "moreThanOneParent": 0, "unavailable": 0, "multipleIssueFixes": 1}, "labels": ["AWSMobileClient", "Bug"], "user": "BillBunting", "filteredCommits": [], "commits": {"fd2769bf71587724ba681b42d652c9a15dd9d42c": {"commitUser": "TrekSoft", "commitGHEventType": "referenced"}, "b0a4855bd3b4b2bfd0bef7153b5ec25657f433e3": {"commitUser": "TrekSoft", "commitGHEventType": "referenced"}, "e7e2e3b968db18ded001d2aa5a4cd4fa75f3943a": {"commitUser": "TrekSoft", "commitGHEventType": "referenced"}}, "created": "2019-10-28 18:29:06", "commitsDetails": [{"commitMessage": "", "commitParents": [], "commitHash": "fd2769bf71587724ba681b42d652c9a15dd9d42c", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "TrekSoft", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "Fixes Drop In UI for Dark Theme - issue #1281 (#1527)\n\n", "commitParents": ["0a4eac920163f80b0e46fe93721a2cc93848f36d"], "commitHash": "b0a4855bd3b4b2bfd0bef7153b5ec25657f433e3", "commitSpoonAstDiffStats": [{"spoonFilePath": "FormView.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobile.auth.userpools.FormView", "DEL": 1, "INS": 3, "UPD": 0, "MOV": 1, "TOT": 5}]}], "nameRev": "b0a4855bd3b4b2bfd0bef7153b5ec25657f433e3 tags/release_v2.16.12~36^2~1", "commitUser": "TrekSoft", "authoredDateTime": "2020-03-23 15:15:44", "commitGHEventType": "referenced", "commitGitStats": [{"lines": 29, "filePath": "aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/FormView.java", "insertions": 20, "deletions": 9}], "commitDateTime": "2020-03-23 15:15:44", "spoonStatsSkippedReason": ""}, {"commitMessage": "", "commitParents": [], "commitHash": "e7e2e3b968db18ded001d2aa5a4cd4fa75f3943a", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "TrekSoft", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}], "title": "Android 10 Dark Theme breaks AWSMobileClient SignIn screen", "spoonStatsSummary": {"spoonMethodsChanged": 0, "DEL": 0.0, "INS": 0.0, "UPD": 0.0, "MOV": 0.0, "TOT": 0.0, "spoonFilesChanged": 0}, "gitStatsSummary": {"lines": 0.0, "insertions": 0.0, "gitFilesChange": 0, "deletions": 0.0}, "closed": "2020-03-23 19:16:31", "statsSkippedReason": "", "body": "**Describe the bug**\r\nThe AWSMobileClient showSignIn UX does not support Android 10 Dark Theme. The username and password text field background color is white and the foreground text color is also white, username and password fields are thus not visible. The background of the text box should be dark in the dark theme. The white lower background should also be dark. The UX should match the iOS version. (https://github.com/aws-amplify/aws-sdk-ios version 2.12.1)\r\n\r\n\r\n**Which AWS service(s) are affected?**\r\nAWSMobileClient\r\n\r\n**Expected behavior**\r\nThe UX should support Android 10 Dark Theme mode.\r\n\r\n**Screenshots**\r\n![Screen Shot 2019-10-28 at 2 21 18 PM](https://user-images.githubusercontent.com/5861783/67705975-5f3cc080-f98e-11e9-914e-44ed0a7e71ae.png)\r\n\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.16.1 (and want for 2.13.3 too)\r\n - Device: Any \r\n - Android Version: 10\r\n - Specific to simulators: No\r\n\r\n**Additional context**\r\nSimilar to iOS issue which was recently fixed:  https://github.com/aws-amplify/aws-sdk-ios/issues/1953\r\n", "changesInPackagesGIT": [], "changesInPackagesSPOON": [], "ttf": 147.00027777777777, "numCommits": 0, "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1281"}, {"labels": ["Bug", "Duplicate", "IoT"], "closed": "2019-10-28 20:10:07", "body": "**Describe the bug**\r\n```\r\nAndroidRuntime  E  FATAL EXCEPTION: MQTT Con: 200853\r\n                E  Process: com.chargedup.largestation.dev.debug, PID: 10664\r\n                E  java.lang.NoClassDefFoundError: Failed resolution of: Ljavax/net/ssl/SNIHostName;\r\n                E      at org.eclipse.paho.client.mqttv3.internal.SSLNetworkModule.start(SSLNetworkModule.java:139)\r\n                E      at org.eclipse.paho.client.mqttv3.internal.ClientComms$ConnectBG.run(ClientComms.java:722)\r\n                E      at java.lang.Thread.run(Thread.java:818)\r\n                E  Caused by: java.lang.ClassNotFoundException: Didn't find class \"javax.net.ssl.SNIHostName\" on path: DexPathList[[\r\n                zip file \"/data/app/com.chargedup.largestation.dev.debug-1/base.apk\"],nativeLibraryDirectories=[/data/app/com.cha\r\n                                                                                                                rgedup.largestation.dev.debug-1/lib/arm, /vendor/lib, /system/lib]]\r\n                E      at dalvik.system.BaseDexClassLoader.findClass(BaseDexClassLoader.java:56)\r\n                E      at java.lang.ClassLoader.loadClass(ClassLoader.java:511)\r\n                E      at java.lang.ClassLoader.loadClass(ClassLoader.java:469)\r\n                E      ... 3 more\r\n                E      Suppressed: java.lang.ClassNotFoundException: javax.net.ssl.SNIHostName\r\n                E          at java.lang.Class.classForName(Native Method)\r\n                E          at java.lang.BootClassLoader.findClass(ClassLoader.java:781)\r\n                E          at java.lang.BootClassLoader.loadClass(ClassLoader.java:841)\r\n                E          at java.lang.ClassLoader.loadClass(ClassLoader.java:504)\r\n                E          ... 4 more\r\n                E      Caused by: java.lang.NoClassDefFoundError: Class not found using the boot class loader; no stack available\r\n```\r\n**To Reproduce**\r\nA code sample or steps:\r\n```\r\nprovided AWS sample code\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\nIoT\r\n\r\n**Expected behavior**\r\nNo crashes on launch.\r\n\r\n**Screenshots**\r\nNo screenshots.\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.16.1\r\n - Device: Custom Device\r\n - Android Version: 5.1\r\n - Specific to simulators: No\r\n\r\n**Additional context**\r\nHappens in 2.16.1, when you introduced \"org.eclipse.paho:org.eclipse.paho.client.mqttv3\".\r\n2.16.0 works fine.\r\n", "commits": {}, "title": "Crash of AWS IoT SDK v2.16.1 on Android 5.1", "created": "2019-10-26 11:24:51", "user": "rynkowsg", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1275", "commitsDetails": [], "ttf": 2.000277777777778}, {"labels": ["Bug", "Needs Info from Requester", "S3"], "closed": "2020-04-11 01:00:31", "body": "**Describe the bug**\r\nVideos uploaded with TransferUtility upload method in S3 are corrupted (size of videos in S3 are lesser than original videos located in device).\r\n\r\n**To Reproduce**\r\nMultipart upload with TransferUtility\r\n\r\n```\r\nTransferObserver transferObserver;\r\n// Set Metadata\r\nObjectMetadata objectMetadata = new ObjectMetadata();\r\nobjectMetadata.setContentDisposition(\"attachment;\"+\"filename=\"+fileName);\r\n// Upload file with custom Metadata\r\ntransferObserver = transferUtility.upload(\"uploadFolder/fileName.mp4\", fileToUpload, objectMetadata);\r\ntransferObserver.setTransferListener(new UploadListener(this));\r\n\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\nS3\r\n\r\n**Expected behavior**\r\nI expect that videos are in S3 only if upload is successful.\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: [2.13.7]\r\n - Android Version: [ > 6.0 ]\r\n - Specific to simulators: [No]\r\n\r\n**Additional context**\r\nI try to reproduce bug stopping upload before ends but in that case the video file is not present in S3 bucket like is expected.\r\n", "commits": {}, "title": "Corrupted uploaded files in S3", "created": "2019-10-25 15:04:22", "user": "agalfioni", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1273", "commitsDetails": [], "ttf": 168.00027777777777}, {"filteredCommitsReason": {"alsoFixesPhrase": 0, "duplicated": 1, "mergeCommitUsed": 0, "moreThanOneParent": 0, "unavailable": 0, "multipleIssueFixes": 1}, "labels": ["AWSMobileClient", "Bug", "Needs Info from Requester", "closing-soon-if-no-response"], "user": "mohsenk", "filteredCommits": [], "commits": {"76122cbb85de21dda6282a79d59c1f62d9586ee7": {"commitUser": "TrekSoft", "commitGHEventType": "referenced"}, "7a74c833c3c35f621ffb8a470d9a8754220254f4": {"commitUser": "TrekSoft", "commitGHEventType": "referenced"}}, "created": "2019-10-19 11:16:44", "commitsDetails": [{"commitMessage": "Fixes sign in method caching issues #1469 and #1262 (#1531)\n\n", "commitParents": ["b0a4855bd3b4b2bfd0bef7153b5ec25657f433e3"], "commitHash": "76122cbb85de21dda6282a79d59c1f62d9586ee7", "commitSpoonAstDiffStats": [{"spoonFilePath": "AWSMobileClient.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}]}], "nameRev": "76122cbb85de21dda6282a79d59c1f62d9586ee7 tags/release_v2.16.12~36^2", "commitUser": "TrekSoft", "authoredDateTime": "2020-03-26 09:37:22", "commitGHEventType": "referenced", "commitGitStats": [{"lines": 3, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java", "insertions": 3, "deletions": 0}], "commitDateTime": "2020-03-26 09:37:22", "spoonStatsSkippedReason": ""}, {"commitMessage": "", "commitParents": [], "commitHash": "7a74c833c3c35f621ffb8a470d9a8754220254f4", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "TrekSoft", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}], "title": "I get \"No cached session error\" after calling getToken()  when user state is SIGNED_IN ", "spoonStatsSummary": {"spoonMethodsChanged": 0, "DEL": 0.0, "INS": 0.0, "UPD": 0.0, "MOV": 0.0, "TOT": 0.0, "spoonFilesChanged": 0}, "gitStatsSummary": {"lines": 0.0, "insertions": 0.0, "gitFilesChange": 0, "deletions": 0.0}, "closed": "2020-03-06 18:35:42", "statsSkippedReason": "", "body": "**Describe the bug**\r\nAt first when i login with Google HosteUI everything is good. but after close and open app. my userStateListener  says that user is \"SIGNED_IN\" and i'm going to get call getTokens() method but it returns error \"No Cached Session\".\r\n\r\n```\r\n2019-10-19 14:38:49.108 12558-12660/hu.avicenna.android E/ApiClient: error in get token\r\n    java.lang.Exception: No cached session.\r\n        at com.amazonaws.mobile.client.AWSMobileClient$10.onFailure(AWSMobileClient.java:1648)\r\n        at com.amazonaws.mobileconnectors.cognitoauth.AuthClient.getSession(AuthClient.java:182)\r\n        at com.amazonaws.mobileconnectors.cognitoauth.Auth.getSession(Auth.java:674)\r\n        at com.amazonaws.mobile.client.AWSMobileClient._getHostedUITokens(AWSMobileClient.java:1651)\r\n        at com.amazonaws.mobile.client.AWSMobileClient.access$800(AWSMobileClient.java:163)\r\n        at com.amazonaws.mobile.client.AWSMobileClient$9.run(AWSMobileClient.java:1573)\r\n        at com.amazonaws.mobile.client.internal.InternalCallback$1.run(InternalCallback.java:101)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n     Caused by: java.lang.Exception: No cached session\r\n        at com.amazonaws.mobileconnectors.cognitoauth.AuthClient.getSession(AuthClient.java:182)\u00a0\r\n        at com.amazonaws.mobileconnectors.cognitoauth.Auth.getSession(Auth.java:674)\u00a0\r\n        at com.amazonaws.mobile.client.AWSMobileClient._getHostedUITokens(AWSMobileClient.java:1651)\u00a0\r\n        at com.amazonaws.mobile.client.AWSMobileClient.access$800(AWSMobileClient.java:163)\u00a0\r\n        at com.amazonaws.mobile.client.AWSMobileClient$9.run(AWSMobileClient.java:1573)\u00a0\r\n        at com.amazonaws.mobile.client.internal.InternalCallback$1.run(InternalCallback.java:101)\u00a0\r\n        at java.lang.Thread.run(Thread.java:764)\u00a0\r\n```\r\n\r\n\r\n\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.15.1\r\n - Device: OnePlus 5T\r\n - Android Version: 8.1\r\n - Specific to simulators: No\r\n\r\n", "changesInPackagesGIT": [], "changesInPackagesSPOON": [], "ttf": 139.00027777777777, "numCommits": 0, "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1262"}, {"labels": ["Bug", "IoT"], "closed": "2019-11-22 01:58:08", "body": "**Describe the bug**\r\nWhen I try to make request for the shadow of the IoT device, sometimes got NPE by unknown response.\r\n\r\n**To Reproduce**\r\nI cannot reproduce this random phenomenon.\r\nI get the following requestId for a client with this issue:(no responseId for unknown response)\r\n*Time: 2019/10/10 16:14:33 \"America/Chicago\"*\r\n*x-amzn-RequestId: a86c741a-6945-37be-af2c-565e94154c06*\r\nThe code I used:\r\n```\r\nAWSIotDataClient dataClient = getDataClient(serialNumber);\r\nGetThingShadowRequest request = new GetThingShadowRequest().withThingName(serialNumber);\r\nGetThingShadowResult result = dataClient.**getThingShadow**(request);\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\nIoT\r\n\r\n**Screenshots**\r\nNo screenshots.\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: <= 2.16.0 \r\n - Device: Samsung Galaxy Note 9 \r\n - Device Model: SM-N960U\r\n - Android Version: 9.0\r\n - Specific to simulators: No\r\n\r\n**Additional context**\r\nException logs:\r\n```\r\njava.lang.NullPointerException: Attempt to invoke virtual method 'boolean java.lang.String.equals(java.lang.Object)' on a null object reference\r\n\tat com.amazonaws.services.iotdata.model.transform.ConflictExceptionUnmarshaller.match(ConflictExceptionUnmarshaller.java:31)\r\n\tat com.amazonaws.http.JsonErrorResponseHandler.runErrorUnmarshallers(JsonErrorResponseHandler.java:97)\r\n\tat com.amazonaws.http.JsonErrorResponseHandler.handle(JsonErrorResponseHandler.java:67)\r\n\tat com.amazonaws.http.JsonErrorResponseHandler.handle(JsonErrorResponseHandler.java:35)\r\n\tat com.amazonaws.http.AmazonHttpClient.handleErrorResponse(AmazonHttpClient.java:699)\r\n\tat com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:405)\r\n\tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:212)\r\n\tat com.amazonaws.services.iotdata.AWSIotDataClient.invoke(AWSIotDataClient.java:619)\r\n\tat com.amazonaws.services.iotdata.AWSIotDataClient.getThingShadow(AWSIotDataClient.java:451)\r\n```", "commits": {}, "title": "IoT: Unknown response causes NPE when calling AWSIotDataClient.getThingsShadow", "created": "2019-10-15 08:51:01", "user": "awc", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1257", "commitsDetails": [], "ttf": 37.000277777777775}, {"labels": ["Awaiting Release", "Bug", "S3"], "closed": "2020-04-11 02:07:43", "body": "**State your question**\r\n\r\nI've read the documentation for the MD5 file integrity check when uploading files to S3. Please see: https://aws-amplify.github.io/aws-sdk-android/docs/reference/com/amazonaws/services/s3/model/ObjectMetadata.html#getContentMD5--\r\n\r\nIt says on the documentation that \r\n\r\n> The AWS S3 Java client will attempt to calculate this field automatically when uploading files to Amazon S3.\r\n\r\nHowever, looking at the database entry for the transfer utility, it does not contain any data about the MD5. Also, checking `UploadTask#createPutObjectRequest L:457`, `upload.md5` is null. \r\n\r\nDoes this MD5 header need to be computed and set manually? Thank you.\r\n\r\n**Which AWS Services are you utilizing?**\r\n\r\nAWS S3\r\n\r\n**Provide code snippets (if applicable)**\r\nJava docs snippet:\r\n```java\r\n/**\r\n     * <p>\r\n     * Sets the base64 encoded 128-bit MD5 digest of the associated object\r\n     * (content - not including headers) according to RFC 1864. This data is\r\n     * used as a message integrity check to verify that the data received by\r\n     * Amazon S3 is the same data that the caller sent. If set to null,then the\r\n     * MD5 digest is removed from the metadata.\r\n     * </p>\r\n     * <p>\r\n     * This field represents the base64 encoded 128-bit MD5 digest digest of an\r\n     * object's content as calculated on the caller's side. The ETag metadata\r\n     * field represents the hex encoded 128-bit MD5 digest as computed by Amazon\r\n     * S3.\r\n     * </p>\r\n     * <p>\r\n     * The AWS S3 Android client will attempt to calculate this field\r\n     * automatically when uploading files to Amazon S3.\r\n     * </p>\r\n     *\r\n     * @param md5Base64 The base64 encoded MD5 hash of the content for the\r\n     *            object associated with this metadata.\r\n     * @see ObjectMetadata#getContentMD5()\r\n     */\r\n    public void setContentMD5(String md5Base64) {\r\n        if (md5Base64 == null) {\r\n            metadata.remove(Headers.CONTENT_MD5);\r\n        } else {\r\n            metadata.put(Headers.CONTENT_MD5, md5Base64);\r\n        }\r\n\r\n    }\r\n```\r\n\r\n**Environment(please complete the following information):**\r\n - SDK Version: 2.16.+ (Gradle)\r\n\r\n**Device Information (please complete the following information):**\r\n - Device: Android Emulator\r\n - Android Version: Android 8.1 Google Play\r\n", "commits": {}, "title": "S3 upload MD5 not automatically populated", "created": "2019-10-04 19:10:20", "user": "emarc-m", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1236", "commitsDetails": [], "ttf": 189.00027777777777}, {"labels": ["Bug", "IoT"], "closed": "2020-04-11 10:35:16", "body": "I am experiencing the same issue as https://github.com/aws-amplify/aws-sdk-android/issues/380\r\nHaving upgraded from `com.amazonaws:aws-android-sdk-iot:2.6.18` to `com.amazonaws:aws-android-sdk-iot:2.16.1@aar`\r\nI now find the permission READ_PHONE_STATE having been added, as the merge report states:\r\n\r\n```\r\nuses-permission#android.permission.READ_PHONE_STATE\r\nIMPLIED from <project>/src/debug/AndroidManifest.xml:2:1-20:12 reason: com.amazonaws.iot has a targetSdkVersion < 4\r\n```\r\n\r\nWhen I tried to include the source code from release_v2.16.1 and its dependant modules, as new modules in my app, the merge report didn't mention this implied permission.\r\n\r\nAfter this update, I also find that the native platforms of my final apk has been restricted to:\r\n`arm64-v8a, armeabi-v8a, x86, x86_64`\r\nfrom none, though I'm not 100% sure this is related yet.\r\n\r\nI hope you're able to advise!\r\nThanks in advance.", "commits": {}, "title": "Implied READ_PHONE_STATE permission", "created": "2019-10-04 13:03:51", "user": "chris6647", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1234", "commitsDetails": [], "ttf": 189.00027777777777}, {"labels": ["Bug", "S3"], "closed": "2019-10-05 12:07:34", "body": "**Describe the bug**\r\nI see that this issue was already opened before https://github.com/aws-amplify/aws-sdk-android/issues/777\r\n\r\nBut we are still rarely encountering a ConcurrentModificationException at \r\npauseAllTransfersDueToNetworkInterruption in aws-android-sdk-core:2.16.0\r\n\r\n`java.util.ConcurrentModificationException\r\n        at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441)\r\n        at java.util.HashMap$ValueIterator.next(HashMap.java:1470)\r\n        at java.util.Collections$UnmodifiableCollection$1.next(Collections.java:1084)\r\n        at com.amazonaws.mobileconnectors.s3.transferutility.TransferNetworkLossHandler.pauseAllTransfersDueToNetworkInterruption(TransferNetworkLossHandler.java:212)\r\n        at com.amazonaws.mobileconnectors.s3.transferutility.TransferNetworkLossHandler.access$100(TransferNetworkLossHandler.java:37)\r\n        at com.amazonaws.mobileconnectors.s3.transferutility.TransferNetworkLossHandler$1.run(TransferNetworkLossHandler.java:125)\r\n        at java.lang.Thread.run(Thread.java:784)`\r\n\r\n**To Reproduce**\r\nThe exception occurs when the network is disconnected while a new upload task is submitting at the same time.  Here is my code which adds the upload task:\r\n` try {\r\n            TransferObserver transferObserver = mTransferUtility.upload(getFileUploadPath(file), file);\r\n            transferObserver.setTransferListener(...);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n`\r\nAws gradle dependencies:\r\n`   \r\nimplementation 'com.amazonaws:aws-android-sdk-core:2.16.0'    \r\nimplementation 'com.amazonaws:aws-android-sdk-s3:2.13.5'    \r\nimplementation('com.amazonaws:aws-android-sdk-mobile-client:2.16.0@aar') { transitive = true }    \r\nimplementation('com.amazonaws:aws-android-sdk-auth-userpools:2.16.0@aar') { transitive = true }`\r\n\r\n**Which AWS service(s) are affected?**\r\nAmazon S3\r\n\r\n**Expected behavior**\r\nThe exception should not occur.\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.16.0\r\n - Device: Actual Devices\r\n - Android Version: All versions\r\n - Specific to simulators: No\r\n", "commits": {}, "title": "ConcurrentModificationException in pauseAllTransfersDueToNetworkInterruption, aws-android-sdk-core:2.16.0", "created": "2019-10-04 06:38:23", "user": "HashimAli09", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1231", "commitsDetails": [], "ttf": 1.0002777777777778}, {"labels": ["Bug", "Core", "closing-soon-if-no-response"], "closed": "2019-10-07 17:35:43", "body": "**Describe the bug**\r\nI am getting such crashes on fabric report and play store's Android Vitals section.\r\n\r\nKeyProvider23.java line 73\r\ncom.amazonaws.internal.keyvaluestore.KeyProvider23.getKey\r\n\r\nFatal Exception: java.lang.RuntimeException: Unable to create service com.canlah.services.KaraokeUploadService: java.lang.IllegalStateException: Error in initializing the CognitoCachingCredentialsProvider. \r\n       at android.app.ActivityThread.handleCreateService + 3081(ActivityThread.java:3081)\r\n       at android.app.ActivityThread.-wrap4(ActivityThread.java)\r\n       at android.app.ActivityThread$H.handleMessage + 1575(ActivityThread.java:1575)\r\n       at android.os.Handler.dispatchMessage + 111(Handler.java:111)\r\n       at android.os.Looper.loop + 207(Looper.java:207)\r\n       at android.app.ActivityThread.main + 5737(ActivityThread.java:5737)\r\n       at java.lang.reflect.Method.invoke(Method.java)\r\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run + 789(ZygoteInit.java:789)\r\n       at com.android.internal.os.ZygoteInit.main + 679(ZygoteInit.java:679)\r\n\r\n**To Reproduce**\r\nA code sample or steps:\r\n```\r\nYour code\r\n```\r\n\r\n**Which AWS service(s) are affected?** S3\r\n\r\n**Expected behavior**\r\nWhile uploading is being initiated it's crashing cause of CognitoCachingCredentialsProvider\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: [2.14.2]\r\n - Device: [Karbon, Nokia]\r\n - Android Version: [Marshmallow 6]\r\n - Specific to simulators: [No]\r\n\r\n**Additional context**\r\nI am continuously posting problems but not getting any satisfactory results and not on time. Losing confidence of thousands of users. Hope will get a proper fix.\r\n\r\nThanks \r\n\r\n", "commits": {}, "title": "Crashes related to com.amazonaws.internal.keyvaluestore.KeyProvider23.getKey", "created": "2019-09-29 18:29:41", "user": "deepakrokz", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1226", "commitsDetails": [], "ttf": 7.000277777777778}, {"labels": ["AWSMobileClient", "Bug", "Cognito", "Needs Info from Requester", "closing-soon-if-no-response"], "closed": "2019-10-25 14:49:15", "body": "**Describe the bug**\r\nAfter I signed in my app successfully. I get refreshToken but it's invalid\r\n\r\nGet refreshToken success\r\n```\r\ntokens.getRefreshToken().getTokenString()\r\n```\r\n\r\nGet refreshToken expiration fail\r\n```\r\ntokens.getRefreshToken().getExpiration()\r\n```\r\n\r\nError\r\n```\r\nCognitoParameterInvalidException: invalid token\r\n\r\nFailed to get claim from token\r\n```\r\n", "commits": {}, "title": "refreshToken is invalid after signed in ", "created": "2019-09-20 11:52:57", "user": "truongnguyen-agilityio", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1208", "commitsDetails": [], "ttf": 35.000277777777775}, {"labels": ["AWSMobileClient", "Bug", "Core"], "closed": "2019-11-11 22:10:35", "body": "**Describe the bug**\r\nAmazon crash on initialization of CognitioCachingCredentialsProvider.\r\n\r\n**To Reproduce**\r\nA code sample or steps:\r\n```java\r\n//I initialize a Handler class which will handle TextToSpeech requests.\r\nclass UtteranceHandler extends Handler {\r\n    //the context passed to handler is MainActivity \r\n    UtteranceHandler(Context context){\r\n        this.context = new WeakReference<>(context);\r\n        //initialize resources\r\n        initPollyClient();\r\n    }\r\nprivate void initPollyClient() {\r\n        // Cognito pool ID. Pool needs to be unauthenticated pool with\r\n        // Amazon Polly permissions.\r\n        String COGNITO_POOL_ID = \"***\";\r\n        // Region of Amazon Polly.\r\n        Regions MY_REGION = ***;\r\n        // Initialize the Amazon Cognito credentials provider.\r\n        CognitoCachingCredentialsProvider credentialsProvider = new CognitoCachingCredentialsProvider(\r\n                context.get(),//program crashes on this line\r\n                COGNITO_POOL_ID,\r\n                MY_REGION\r\n        );\r\n        // Create a client that supports generation of pre-signed URLs.\r\n        client = new AmazonPollyPresigningClient(credentialsProvider);\r\n    }\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\nI am trying to user the Amazon polly service\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\nThe code shown should initialize a TTS client. \r\n\r\n**Screenshots**\r\nThis is the application log:\r\n\r\n```\r\nI/AWSKeyValueStore: Detected Android API Level = 28\r\nI/AWSKeyValueStore: Using keyAlias = com.amazonaws.android.auth.aesKeyStoreAlias\r\nD/KeyProvider23: AndroidKeyStore contains keyAlias com.amazonaws.android.auth.aesKeyStoreAlias\r\n    Loading the encryption key from Android KeyStore.\r\nI/AWSKeyValueStore: Creating the AWSKeyValueStore with key for sharedPreferences = com.amazonaws.android.auth\r\nE/: [ZeroHung]zrhung_get_config: Get config failed for wp[0x0008]\r\nE/AWSKeyValueStore: Error in decrypting data. \r\n    javax.crypto.AEADBadTagException\r\n        at android.security.keystore.AndroidKeyStoreCipherSpiBase.engineDoFinal(AndroidKeyStoreCipherSpiBase.java:517)\r\n        at javax.crypto.Cipher.doFinal(Cipher.java:2055)\r\n        at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.decrypt(AWSKeyValueStore.java:360)\r\n        at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.get(AWSKeyValueStore.java:207)\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.getCachedIdentityId(CognitoCachingCredentialsProvider.java:575)\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize(CognitoCachingCredentialsProvider.java:429)\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init>(CognitoCachingCredentialsProvider.java:190)\r\n        at com.felmoreno1726.mobilemigrationapp.UtteranceHandler.initPollyClient(UtteranceHandler.java:117)\r\n        at com.felmoreno1726.mobilemigrationapp.UtteranceHandler.<init>(UtteranceHandler.java:43)\r\n        at com.felmoreno1726.mobilemigrationapp.MainActivity.onCreate(MainActivity.java:57)\r\n        at android.app.Activity.performCreate(Activity.java:7436)\r\n        at android.app.Activity.performCreate(Activity.java:7426)\r\n        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1286)\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3279)\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3484)\r\n        at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:86)\r\n        at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:108)\r\n        at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:68)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2123)\r\n        at android.os.Handler.dispatchMessage(Handler.java:109)\r\n        at android.os.Looper.loop(Looper.java:207)\r\n        at android.app.ActivityThread.main(ActivityThread.java:7470)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:524)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:958)\r\n     Caused by: android.security.KeyStoreException: Signature/MAC verification failed\r\n        at android.security.KeyStore.getKeyStoreException(KeyStore.java:851)\r\n        at android.security.keystore.KeyStoreCryptoOperationChunkedStreamer.doFinal(KeyStoreCryptoOperationChunkedStreamer.java:224)\r\n        at android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer.doFinal(AndroidKeyStoreAuthenticatedAESCipherSpi.java:373)\r\n        at android.security.keystore.AndroidKeyStoreCipherSpiBase.engineDoFinal(AndroidKeyStoreCipherSpiBase.java:506)\r\n        at javax.crypto.Cipher.doFinal(Cipher.java:2055)\u00a0\r\n        at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.decrypt(AWSKeyValueStore.java:360)\u00a0\r\n        at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.get(AWSKeyValueStore.java:207)\u00a0\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.getCachedIdentityId(CognitoCachingCredentialsProvider.java:575)\u00a0\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize(CognitoCachingCredentialsProvider.java:429)\u00a0\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init>(CognitoCachingCredentialsProvider.java:190)\u00a0\r\n        at com.felmoreno1726.mobilemigrationapp.UtteranceHandler.initPollyClient(UtteranceHandler.java:117)\u00a0\r\n        at com.felmoreno1726.mobilemigrationapp.UtteranceHandler.<init>(UtteranceHandler.java:43)\u00a0\r\n        at com.felmoreno1726.mobilemigrationapp.MainActivity.onCreate(MainActivity.java:57)\u00a0\r\n        at android.app.Activity.performCreate(Activity.java:7436)\u00a0\r\n        at android.app.Activity.performCreate(Activity.java:7426)\u00a0\r\n        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1286)\u00a0\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3279)\u00a0\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3484)\u00a0\r\n        at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:86)\u00a0\r\n        at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:108)\u00a0\r\n        at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:68)\u00a0\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2123)\u00a0\r\n        at android.os.Handler.dispatchMessage(Handler.java:109)\u00a0\r\n        at android.os.Looper.loop(Looper.java:207)\u00a0\r\n        at android.app.ActivityThread.main(ActivityThread.java:7470)\u00a0\r\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:524)\u00a0\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:958)\u00a0\r\nD/CognitoCachingCredentialsProvider: Loading credentials from SharedPreferences\r\nE/AWSKeyValueStore: Error in decrypting data. \r\n    javax.crypto.AEADBadTagException\r\n        at android.security.keystore.AndroidKeyStoreCipherSpiBase.engineDoFinal(AndroidKeyStoreCipherSpiBase.java:517)\r\n        at javax.crypto.Cipher.doFinal(Cipher.java:2055)\r\n        at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.decrypt(AWSKeyValueStore.java:360)\r\n        at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.get(AWSKeyValueStore.java:207)\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.loadCachedCredentials(CognitoCachingCredentialsProvider.java:588)\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize(CognitoCachingCredentialsProvider.java:430)\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init>(CognitoCachingCredentialsProvider.java:190)\r\n        at com.felmoreno1726.mobilemigrationapp.UtteranceHandler.initPollyClient(UtteranceHandler.java:117)\r\n        at com.felmoreno1726.mobilemigrationapp.UtteranceHandler.<init>(UtteranceHandler.java:43)\r\n        at com.felmoreno1726.mobilemigrationapp.MainActivity.onCreate(MainActivity.java:57)\r\n        at android.app.Activity.performCreate(Activity.java:7436)\r\n        at android.app.Activity.performCreate(Activity.java:7426)\r\n        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1286)\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3279)\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3484)\r\n        at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:86)\r\n        at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:108)\r\n        at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:68)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2123)\r\n        at android.os.Handler.dispatchMessage(Handler.java:109)\r\n        at android.os.Looper.loop(Looper.java:207)\r\n        at android.app.ActivityThread.main(ActivityThread.java:7470)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:524)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:958)\r\n     Caused by: android.security.KeyStoreException: Signature/MAC verification failed\r\n        at android.security.KeyStore.getKeyStoreException(KeyStore.java:851)\r\n        at android.security.keystore.KeyStoreCryptoOperationChunkedStreamer.doFinal(KeyStoreCryptoOperationChunkedStreamer.java:224)\r\n        at android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer.doFinal(AndroidKeyStoreAuthenticatedAESCipherSpi.java:373)\r\n        at android.security.keystore.AndroidKeyStoreCipherSpiBase.engineDoFinal(AndroidKeyStoreCipherSpiBase.java:506)\r\n        at javax.crypto.Cipher.doFinal(Cipher.java:2055)\u00a0\r\n        at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.decrypt(AWSKeyValueStore.java:360)\u00a0\r\n        at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.get(AWSKeyValueStore.java:207)\u00a0\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.loadCachedCredentials(CognitoCachingCredentialsProvider.java:588)\u00a0\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize(CognitoCachingCredentialsProvider.java:430)\u00a0\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init>(CognitoCachingCredentialsProvider.java:190)\u00a0\r\n        at com.felmoreno1726.mobilemigrationapp.UtteranceHandler.initPollyClient(UtteranceHandler.java:117)\u00a0\r\n        at com.felmoreno1726.mobilemigrationapp.UtteranceHandler.<init>(UtteranceHandler.java:43)\u00a0\r\n        at com.felmoreno1726.mobilemigrationapp.MainActivity.onCreate(MainActivity.java:57)\u00a0\r\n        at android.app.Activity.performCreate(Activity.java:7436)\u00a0\r\n        at android.app.Activity.performCreate(Activity.java:7426)\u00a0\r\n        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1286)\u00a0\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3279)\u00a0\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3484)\u00a0\r\n        at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:86)\u00a0\r\n        at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:108)\u00a0\r\n        at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:68)\u00a0\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2123)\u00a0\r\n        at android.os.Handler.dispatchMessage(Handler.java:109)\u00a0\r\n        at android.os.Looper.loop(Looper.java:207)\u00a0\r\n        at android.app.ActivityThread.main(ActivityThread.java:7470)\u00a0\r\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:524)\u00a0\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:958)\u00a0\r\nE/AWSKeyValueStore: Error in decrypting data. \r\n    javax.crypto.AEADBadTagException\r\n        at android.security.keystore.AndroidKeyStoreCipherSpiBase.engineDoFinal(AndroidKeyStoreCipherSpiBase.java:517)\r\n        at javax.crypto.Cipher.doFinal(Cipher.java:2055)\r\n        at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.decrypt(AWSKeyValueStore.java:360)\r\n        at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.get(AWSKeyValueStore.java:207)\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.loadCachedCredentials(CognitoCachingCredentialsProvider.java:605)\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize(CognitoCachingCredentialsProvider.java:430)\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init>(CognitoCachingCredentialsProvider.java:190)\r\n        at com.felmoreno1726.mobilemigrationapp.UtteranceHandler.initPollyClient(UtteranceHandler.java:117)\r\n        at com.felmoreno1726.mobilemigrationapp.UtteranceHandler.<init>(UtteranceHandler.java:43)\r\n        at com.felmoreno1726.mobilemigrationapp.MainActivity.onCreate(MainActivity.java:57)\r\n        at android.app.Activity.performCreate(Activity.java:7436)\r\n        at android.app.Activity.performCreate(Activity.java:7426)\r\n        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1286)\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3279)\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3484)\r\n        at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:86)\r\n        at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:108)\r\n        at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:68)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2123)\r\n        at android.os.Handler.dispatchMessage(Handler.java:109)\r\n        at android.os.Looper.loop(Looper.java:207)\r\n        at android.app.ActivityThread.main(ActivityThread.java:7470)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:524)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:958)\r\n     Caused by: android.security.KeyStoreException: Signature/MAC verification failed\r\n        at android.security.KeyStore.getKeyStoreException(KeyStore.java:851)\r\n        at android.security.keystore.KeyStoreCryptoOperationChunkedStreamer.doFinal(KeyStoreCryptoOperationChunkedStreamer.java:224)\r\n        at android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer.doFinal(AndroidKeyStoreAuthenticatedAESCipherSpi.java:373)\r\n        at android.security.keystore.AndroidKeyStoreCipherSpiBase.engineDoFinal(AndroidKeyStoreCipherSpiBase.java:506)\r\n        at javax.crypto.Cipher.doFinal(Cipher.java:2055)\u00a0\r\n        at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.decrypt(AWSKeyValueStore.java:360)\u00a0\r\n        at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.get(AWSKeyValueStore.java:207)\u00a0\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.loadCachedCredentials(CognitoCachingCredentialsProvider.java:605)\u00a0\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize(CognitoCachingCredentialsProvider.java:430)\u00a0\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init>(CognitoCachingCredentialsProvider.java:190)\u00a0\r\n        at com.felmoreno1726.mobilemigrationapp.UtteranceHandler.initPollyClient(UtteranceHandler.java:117)\u00a0\r\n        at com.felmoreno1726.mobilemigrationapp.UtteranceHandler.<init>(UtteranceHandler.java:43)\u00a0\r\n        at com.felmoreno1726.mobilemigrationapp.MainActivity.onCreate(MainActivity.java:57)\u00a0\r\n        at android.app.Activity.performCreate(Activity.java:7436)\u00a0\r\n        at android.app.Activity.performCreate(Activity.java:7426)\u00a0\r\n        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1286)\u00a0\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3279)\u00a0\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3484)\u00a0\r\n        at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:86)\u00a0\r\n        at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:108)\u00a0\r\n        at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:68)\u00a0\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2123)\u00a0\r\n        at android.os.Handler.dispatchMessage(Handler.java:109)\u00a0\r\n        at android.os.Looper.loop(Looper.java:207)\u00a0\r\n        at android.app.ActivityThread.main(ActivityThread.java:7470)\u00a0\r\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:524)\u00a0\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:958)\u00a0\r\nE/AWSKeyValueStore: Error in decrypting data. \r\n    javax.crypto.AEADBadTagException\r\n        at android.security.keystore.AndroidKeyStoreCipherSpiBase.engineDoFinal(AndroidKeyStoreCipherSpiBase.java:517)\r\n        at javax.crypto.Cipher.doFinal(Cipher.java:2055)\r\n        at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.decrypt(AWSKeyValueStore.java:360)\r\n        at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.get(AWSKeyValueStore.java:207)\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.loadCachedCredentials(CognitoCachingCredentialsProvider.java:606)\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize(CognitoCachingCredentialsProvider.java:430)\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init>(CognitoCachingCredentialsProvider.java:190)\r\n        at com.felmoreno1726.mobilemigrationapp.UtteranceHandler.initPollyClient(UtteranceHandler.java:117)\r\n        at com.felmoreno1726.mobilemigrationapp.UtteranceHandler.<init>(UtteranceHandler.java:43)\r\n        at com.felmoreno1726.mobilemigrationapp.MainActivity.onCreate(MainActivity.java:57)\r\n        at android.app.Activity.performCreate(Activity.java:7436)\r\n        at android.app.Activity.performCreate(Activity.java:7426)\r\n        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1286)\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3279)\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3484)\r\n        at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:86)\r\n        at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:108)\r\n        at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:68)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2123)\r\n        at android.os.Handler.dispatchMessage(Handler.java:109)\r\n        at android.os.Looper.loop(Looper.java:207)\r\n        at android.app.ActivityThread.main(ActivityThread.java:7470)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:524)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:958)\r\n     Caused by: android.security.KeyStoreException: Signature/MAC verification failed\r\n        at android.security.KeyStore.getKeyStoreException(KeyStore.java:851)\r\n        at android.security.keystore.KeyStoreCryptoOperationChunkedStreamer.doFinal(KeyStoreCryptoOperationChunkedStreamer.java:224)\r\n        at android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer.doFinal(AndroidKeyStoreAuthenticatedAESCipherSpi.java:373)\r\n        at android.security.keystore.AndroidKeyStoreCipherSpiBase.engineDoFinal(AndroidKeyStoreCipherSpiBase.java:506)\r\n        at javax.crypto.Cipher.doFinal(Cipher.java:2055)\u00a0\r\n        at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.decrypt(AWSKeyValueStore.java:360)\u00a0\r\n        at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.get(AWSKeyValueStore.java:207)\u00a0\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.loadCachedCredentials(CognitoCachingCredentialsProvider.java:606)\u00a0\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize(CognitoCachingCredentialsProvider.java:430)\u00a0\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init>(CognitoCachingCredentialsProvider.java:190)\u00a0\r\n        at com.felmoreno1726.mobilemigrationapp.UtteranceHandler.initPollyClient(UtteranceHandler.java:117)\u00a0\r\n        at com.felmoreno1726.mobilemigrationapp.UtteranceHandler.<init>(UtteranceHandler.java:43)\u00a0\r\n        at com.felmoreno1726.mobilemigrationapp.MainActivity.onCreate(MainActivity.java:57)\u00a0\r\n        at android.app.Activity.performCreate(Activity.java:7436)\u00a0\r\n        at android.app.Activity.performCreate(Activity.java:7426)\u00a0\r\n        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1286)\u00a0\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3279)\u00a0\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3484)\u00a0\r\n        at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:86)\u00a0\r\n        at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:108)\u00a0\r\n        at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:68)\u00a0\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2123)\u00a0\r\n        at android.os.Handler.dispatchMessage(Handler.java:109)\u00a0\r\n        at android.os.Looper.loop(Looper.java:207)\u00a0\r\n        at android.app.ActivityThread.main(ActivityThread.java:7470)\u00a0\r\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:524)\u00a0\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:958)\u00a0\r\nE/AWSKeyValueStore: Error in decrypting data. \r\n    javax.crypto.AEADBadTagException\r\n        at android.security.keystore.AndroidKeyStoreCipherSpiBase.engineDoFinal(AndroidKeyStoreCipherSpiBase.java:517)\r\n        at javax.crypto.Cipher.doFinal(Cipher.java:2055)\r\n        at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.decrypt(AWSKeyValueStore.java:360)\r\n        at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.get(AWSKeyValueStore.java:207)\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.loadCachedCredentials(CognitoCachingCredentialsProvider.java:607)\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize(CognitoCachingCredentialsProvider.java:430)\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init>(CognitoCachingCredentialsProvider.java:190)\r\n        at com.felmoreno1726.mobilemigrationapp.UtteranceHandler.initPollyClient(UtteranceHandler.java:117)\r\n        at com.felmoreno1726.mobilemigrationapp.UtteranceHandler.<init>(UtteranceHandler.java:43)\r\n        at com.felmoreno1726.mobilemigrationapp.MainActivity.onCreate(MainActivity.java:57)\r\n        at android.app.Activity.performCreate(Activity.java:7436)\r\n        at android.app.Activity.performCreate(Activity.java:7426)\r\n        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1286)\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3279)\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3484)\r\n        at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:86)\r\n        at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:108)\r\n        at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:68)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2123)\r\n        at android.os.Handler.dispatchMessage(Handler.java:109)\r\n        at android.os.Looper.loop(Looper.java:207)\r\n        at android.app.ActivityThread.main(ActivityThread.java:7470)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:524)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:958)\r\n     Caused by: android.security.KeyStoreException: Signature/MAC verification failed\r\n        at android.security.KeyStore.getKeyStoreException(KeyStore.java:851)\r\n        at android.security.keystore.KeyStoreCryptoOperationChunkedStreamer.doFinal(KeyStoreCryptoOperationChunkedStreamer.java:224)\r\n        at android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer.doFinal(AndroidKeyStoreAuthenticatedAESCipherSpi.java:373)\r\n        at android.security.keystore.AndroidKeyStoreCipherSpiBase.engineDoFinal(AndroidKeyStoreCipherSpiBase.java:506)\r\n        at javax.crypto.Cipher.doFinal(Cipher.java:2055)\u00a0\r\n        at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.decrypt(AWSKeyValueStore.java:360)\u00a0\r\n        at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.get(AWSKeyValueStore.java:207)\u00a0\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.loadCachedCredentials(CognitoCachingCredentialsProvider.java:607)\u00a0\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize(CognitoCachingCredentialsProvider.java:430)\u00a0\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init>(CognitoCachingCredentialsProvider.java:190)\u00a0\r\n        at com.felmoreno1726.mobilemigrationapp.UtteranceHandler.initPollyClient(UtteranceHandler.java:117)\u00a0\r\n        at com.felmoreno1726.mobilemigrationapp.UtteranceHandler.<init>(UtteranceHandler.java:43)\u00a0\r\n        at com.felmoreno1726.mobilemigrationapp.MainActivity.onCreate(MainActivity.java:57)\u00a0\r\n        at android.app.Activity.performCreate(Activity.java:7436)\u00a0\r\n        at android.app.Activity.performCreate(Activity.java:7426)\u00a0\r\n        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1286)\u00a0\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3279)\u00a0\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3484)\u00a0\r\n        at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:86)\u00a0\r\n        at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:108)\u00a0\r\n        at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:68)\u00a0\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2123)\u00a0\r\n        at android.os.Handler.dispatchMessage(Handler.java:109)\u00a0\r\n        at android.os.Looper.loop(Looper.java:207)\u00a0\r\n        at android.app.ActivityThread.main(ActivityThread.java:7470)\u00a0\r\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:524)\u00a0\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:958)\u00a0\r\nD/CognitoCachingCredentialsProvider: No valid credentials found in SharedPreferences\r\n```\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: From gradle\r\n    def aws_version = \"2.13.+\"\r\n    implementation \"com.amazonaws:aws-android-sdk-polly:$aws_version\"\r\n    implementation \"com.amazonaws:aws-android-sdk-mobile-client:$aws_version\"\r\n - Device: HUAWEI CLT-L09\r\n - Android Version: Android 9, API 28\r\n - Specific to simulators: Yes. This error is not thrown when I try to reproduce on API 27 (Nexus nor Pixel)\r\n\r\n**Additional context**\r\nWeirdly enough I have been able to start and use the service when I create the TTS client from within another Handler class, but not when it is main Activity that creates the UtteranceHandler instance.\r\n\r\nThanks\r\n", "commits": {}, "title": "Error in decryption key initializing CognitoCachingCredentialsProvider", "created": "2019-08-05 20:13:39", "user": "felmoreno1726", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1115", "commitsDetails": [], "ttf": 98.00027777777778}, {"labels": ["Bug", "Cognito", "Needs Info from Requester", "closing-soon-if-no-response"], "closed": "2019-09-06 17:01:43", "body": "**Describe the bug**\r\nWe're getting a very high volume of AWS library crashes in Firebase Crashlytics, could you check?\r\n\r\n**Which AWS service(s) are affected?**\r\nAndroid SDK 2.13.5\r\n`implementation \"com.amazonaws:aws-android-sdk-core:2.13.5\"`\r\n`implementation \"com.amazonaws:aws-android-sdk-cognitoidentityprovider:2.13.5\"`\r\n`implementation \"com.amazonaws:aws-android-sdk-appsync:2.10.0\"`\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/6125289/62375942-ddb3ce80-b515-11e9-94bd-039e4c625774.png)\r\n![image](https://user-images.githubusercontent.com/6125289/62375950-ea382700-b515-11e9-8d8b-45a5fd2314f7.png)\r\n\r\n**Additional context**\r\nFirebase Crashlytics.\r\n```\r\nFatal Exception: java.lang.RuntimeException: Unable to create application com.pontomobi.smiles.SmilesApplication: java.lang.IllegalStateException: Error in initializing the CognitoCachingCredentialsProvider. \r\n       at android.app.ActivityThread.handleBindApplication + 6499(ActivityThread.java:6499)\r\n       at android.app.ActivityThread.access$1800 + 229(ActivityThread.java:229)\r\n       at android.app.ActivityThread$H.handleMessage + 1887(ActivityThread.java:1887)\r\n       at android.os.Handler.dispatchMessage + 102(Handler.java:102)\r\n       at android.os.Looper.loop + 148(Looper.java:148)\r\n       at android.app.ActivityThread.main + 7406(ActivityThread.java:7406)\r\n       at java.lang.reflect.Method.invoke(Method.java)\r\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run + 1230(ZygoteInit.java:1230)\r\n       at com.android.internal.os.ZygoteInit.main + 1120(ZygoteInit.java:1120)\r\n```\r\n```\r\nCaused by java.lang.IllegalStateException: Error in initializing the CognitoCachingCredentialsProvider. \r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize + 434(CognitoCachingCredentialsProvider.java:434)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init> + 190(CognitoCachingCredentialsProvider.java:190)\r\n       at com.pontomobi.smiles.SmilesApplication.onCreate + 152(SmilesApplication.java:152)\r\n       at android.app.Instrumentation.callApplicationOnCreate + 1037(Instrumentation.java:1037)\r\n       at android.app.ActivityThread.handleBindApplication + 6496(ActivityThread.java:6496)\r\n       at android.app.ActivityThread.access$1800 + 229(ActivityThread.java:229)\r\n       at android.app.ActivityThread$H.handleMessage + 1887(ActivityThread.java:1887)\r\n       at android.os.Handler.dispatchMessage + 102(Handler.java:102)\r\n       at android.os.Looper.loop + 148(Looper.java:148)\r\n       at android.app.ActivityThread.main + 7406(ActivityThread.java:7406)\r\n       at java.lang.reflect.Method.invoke(Method.java)\r\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run + 1230(ZygoteInit.java:1230)\r\n       at com.android.internal.os.ZygoteInit.main + 1120(ZygoteInit.java:1120)\r\n```\r\n```\r\nCaused by java.lang.IllegalStateException: java.security.UnrecoverableKeyException: Failed to obtain information about key\r\n       at com.amazonaws.internal.keyvaluestore.KeyProvider23.getKey + 84(KeyProvider23.java:84)\r\n       at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.setPersistenceEnabled + 131(AWSKeyValueStore.java:131)\r\n       at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.<init> + 108(AWSKeyValueStore.java:108)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize + 425(CognitoCachingCredentialsProvider.java:425)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init> + 190(CognitoCachingCredentialsProvider.java:190)\r\n       at com.pontomobi.smiles.SmilesApplication.onCreate + 152(SmilesApplication.java:152)\r\n       at android.app.Instrumentation.callApplicationOnCreate + 1037(Instrumentation.java:1037)\r\n       at android.app.ActivityThread.handleBindApplication + 6496(ActivityThread.java:6496)\r\n       at android.app.ActivityThread.access$1800 + 229(ActivityThread.java:229)\r\n       at android.app.ActivityThread$H.handleMessage + 1887(ActivityThread.java:1887)\r\n       at android.os.Handler.dispatchMessage + 102(Handler.java:102)\r\n       at android.os.Looper.loop + 148(Looper.java:148)\r\n       at android.app.ActivityThread.main + 7406(ActivityThread.java:7406)\r\n       at java.lang.reflect.Method.invoke(Method.java)\r\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run + 1230(ZygoteInit.java:1230)\r\n       at com.android.internal.os.ZygoteInit.main + 1120(ZygoteInit.java:1120)\r\n```\r\n```\r\nCaused by java.security.UnrecoverableKeyException: Failed to obtain information about key\r\n       at android.security.keystore.AndroidKeyStoreProvider.loadAndroidKeyStoreSecretKeyFromKeystore + 275(AndroidKeyStoreProvider.java:275)\r\n       at android.security.keystore.AndroidKeyStoreSpi.engineGetKey + 97(AndroidKeyStoreSpi.java:97)\r\n       at java.security.KeyStore.getKey + 253(KeyStore.java:253)\r\n       at com.amazonaws.internal.keyvaluestore.KeyProvider23.getKey + 80(KeyProvider23.java:80)\r\n       at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.setPersistenceEnabled + 131(AWSKeyValueStore.java:131)\r\n       at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.<init> + 108(AWSKeyValueStore.java:108)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize + 425(CognitoCachingCredentialsProvider.java:425)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init> + 190(CognitoCachingCredentialsProvider.java:190)\r\n       at com.pontomobi.smiles.SmilesApplication.onCreate + 152(SmilesApplication.java:152)\r\n       at android.app.Instrumentation.callApplicationOnCreate + 1037(Instrumentation.java:1037)\r\n       at android.app.ActivityThread.handleBindApplication + 6496(ActivityThread.java:6496)\r\n       at android.app.ActivityThread.access$1800 + 229(ActivityThread.java:229)\r\n       at android.app.ActivityThread$H.handleMessage + 1887(ActivityThread.java:1887)\r\n       at android.os.Handler.dispatchMessage + 102(Handler.java:102)\r\n       at android.os.Looper.loop + 148(Looper.java:148)\r\n       at android.app.ActivityThread.main + 7406(ActivityThread.java:7406)\r\n       at java.lang.reflect.Method.invoke(Method.java)\r\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run + 1230(ZygoteInit.java:1230)\r\n       at com.android.internal.os.ZygoteInit.main + 1120(ZygoteInit.java:1120)\r\n```\r\n```\r\nCaused by android.security.KeyStoreException: -49\r\n       at android.security.KeyStore.getKeyStoreException + 945(KeyStore.java:945)\r\n       at android.security.keystore.AndroidKeyStoreProvider.loadAndroidKeyStoreSecretKeyFromKeystore + 275(AndroidKeyStoreProvider.java:275)\r\n       at android.security.keystore.AndroidKeyStoreSpi.engineGetKey + 97(AndroidKeyStoreSpi.java:97)\r\n       at java.security.KeyStore.getKey + 253(KeyStore.java:253)\r\n       at com.amazonaws.internal.keyvaluestore.KeyProvider23.getKey + 80(KeyProvider23.java:80)\r\n       at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.setPersistenceEnabled + 131(AWSKeyValueStore.java:131)\r\n       at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.<init> + 108(AWSKeyValueStore.java:108)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize + 425(CognitoCachingCredentialsProvider.java:425)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init> + 190(CognitoCachingCredentialsProvider.java:190)\r\n       at com.pontomobi.smiles.SmilesApplication.onCreate + 152(SmilesApplication.java:152)\r\n       at android.app.Instrumentation.callApplicationOnCreate + 1037(Instrumentation.java:1037)\r\n       at android.app.ActivityThread.handleBindApplication + 6496(ActivityThread.java:6496)\r\n       at android.app.ActivityThread.access$1800 + 229(ActivityThread.java:229)\r\n       at android.app.ActivityThread$H.handleMessage + 1887(ActivityThread.java:1887)\r\n       at android.os.Handler.dispatchMessage + 102(Handler.java:102)\r\n       at android.os.Looper.loop + 148(Looper.java:148)\r\n       at android.app.ActivityThread.main + 7406(ActivityThread.java:7406)\r\n       at java.lang.reflect.Method.invoke(Method.java)\r\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run + 1230(ZygoteInit.java:1230)\r\n       at com.android.internal.os.ZygoteInit.main + 1120(ZygoteInit.java:1120)\r\n```", "commits": {}, "title": "KeyProvider23.java line 80", "created": "2019-08-02 14:09:05", "user": "owdeveloper", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1109", "commitsDetails": [], "ttf": 35.000277777777775}, {"labels": ["Bug", "Cognito", "Needs Info from Requester", "closing-soon-if-no-response"], "closed": "2019-09-06 17:01:42", "body": "**Describe the bug**\r\nWe're getting a very high volume of AWS library crashes in Firebase Crashlytics, could you check?\r\n\r\n**Which AWS service(s) are affected?**\r\nAndroid SDK 2.13.5\r\n`implementation \"com.amazonaws:aws-android-sdk-core:2.13.5\"`\r\n`implementation \"com.amazonaws:aws-android-sdk-cognitoidentityprovider:2.13.5\"`\r\n`implementation \"com.amazonaws:aws-android-sdk-appsync:2.10.0\"`\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/6125289/62375159-020eab80-b514-11e9-9241-1d230a4193e7.png)\r\n![image](https://user-images.githubusercontent.com/6125289/62375271-48fca100-b514-11e9-9d59-5edf1de10492.png)\r\n\r\n**Additional context**\r\nFirebase Crashlytics.\r\n```\r\nFatal Exception: java.lang.RuntimeException: Unable to create application com.pontomobi.smiles.SmilesApplication: java.lang.IllegalStateException: Error in initializing the CognitoCachingCredentialsProvider. \r\n       at android.app.ActivityThread.handleBindApplication + 4592(ActivityThread.java:4592)\r\n       at android.app.ActivityThread.access$1500 + 155(ActivityThread.java:155)\r\n       at android.app.ActivityThread$H.handleMessage + 1303(ActivityThread.java:1303)\r\n       at android.os.Handler.dispatchMessage + 102(Handler.java:102)\r\n       at android.os.Looper.loop + 136(Looper.java:136)\r\n       at android.app.ActivityThread.main + 5426(ActivityThread.java:5426)\r\n       at java.lang.reflect.Method.invokeNative(Method.java)\r\n       at java.lang.reflect.Method.invoke + 515(Method.java:515)\r\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run + 1268(ZygoteInit.java:1268)\r\n       at com.android.internal.os.ZygoteInit.main + 1084(ZygoteInit.java:1084)\r\n       at dalvik.system.NativeStart.main(NativeStart.java)\r\n```\r\n```\r\nCaused by java.lang.IllegalStateException: Error in initializing the CognitoCachingCredentialsProvider. \r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize + 434(CognitoCachingCredentialsProvider.java:434)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init> + 190(CognitoCachingCredentialsProvider.java:190)\r\n       at com.pontomobi.smiles.SmilesApplication.onCreate + 152(SmilesApplication.java:152)\r\n       at android.app.Instrumentation.callApplicationOnCreate + 1014(Instrumentation.java:1014)\r\n       at android.app.ActivityThread.handleBindApplication + 4589(ActivityThread.java:4589)\r\n       at android.app.ActivityThread.access$1500 + 155(ActivityThread.java:155)\r\n       at android.app.ActivityThread$H.handleMessage + 1303(ActivityThread.java:1303)\r\n       at android.os.Handler.dispatchMessage + 102(Handler.java:102)\r\n       at android.os.Looper.loop + 136(Looper.java:136)\r\n       at android.app.ActivityThread.main + 5426(ActivityThread.java:5426)\r\n       at java.lang.reflect.Method.invokeNative(Method.java)\r\n       at java.lang.reflect.Method.invoke + 515(Method.java:515)\r\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run + 1268(ZygoteInit.java:1268)\r\n       at com.android.internal.os.ZygoteInit.main + 1084(ZygoteInit.java:1084)\r\n       at dalvik.system.NativeStart.main(NativeStart.java)\r\n```\r\n```\r\nCaused by java.lang.IllegalStateException: java.lang.IllegalArgumentException: key == null\r\n       at com.amazonaws.internal.keyvaluestore.KeyProvider18.getKey + 108(KeyProvider18.java:108)\r\n       at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.setPersistenceEnabled + 138(AWSKeyValueStore.java:138)\r\n       at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.<init> + 108(AWSKeyValueStore.java:108)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize + 425(CognitoCachingCredentialsProvider.java:425)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init> + 190(CognitoCachingCredentialsProvider.java:190)\r\n       at com.pontomobi.smiles.SmilesApplication.onCreate + 152(SmilesApplication.java:152)\r\n       at android.app.Instrumentation.callApplicationOnCreate + 1014(Instrumentation.java:1014)\r\n       at android.app.ActivityThread.handleBindApplication + 4589(ActivityThread.java:4589)\r\n       at android.app.ActivityThread.access$1500 + 155(ActivityThread.java:155)\r\n       at android.app.ActivityThread$H.handleMessage + 1303(ActivityThread.java:1303)\r\n       at android.os.Handler.dispatchMessage + 102(Handler.java:102)\r\n       at android.os.Looper.loop + 136(Looper.java:136)\r\n       at android.app.ActivityThread.main + 5426(ActivityThread.java:5426)\r\n       at java.lang.reflect.Method.invokeNative(Method.java)\r\n       at java.lang.reflect.Method.invoke + 515(Method.java:515)\r\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run + 1268(ZygoteInit.java:1268)\r\n       at com.android.internal.os.ZygoteInit.main + 1084(ZygoteInit.java:1084)\r\n       at dalvik.system.NativeStart.main(NativeStart.java)\r\n```\r\n```\r\nCaused by java.lang.IllegalArgumentException: key == null\r\n       at javax.crypto.spec.SecretKeySpec.<init> + 59(SecretKeySpec.java:59)\r\n       at com.amazonaws.internal.keyvaluestore.KeyProvider18.getKey + 90(KeyProvider18.java:90)\r\n       at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.setPersistenceEnabled + 138(AWSKeyValueStore.java:138)\r\n       at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.<init> + 108(AWSKeyValueStore.java:108)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize + 425(CognitoCachingCredentialsProvider.java:425)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init> + 190(CognitoCachingCredentialsProvider.java:190)\r\n       at com.pontomobi.smiles.SmilesApplication.onCreate + 152(SmilesApplication.java:152)\r\n       at android.app.Instrumentation.callApplicationOnCreate + 1014(Instrumentation.java:1014)\r\n       at android.app.ActivityThread.handleBindApplication + 4589(ActivityThread.java:4589)\r\n       at android.app.ActivityThread.access$1500 + 155(ActivityThread.java:155)\r\n       at android.app.ActivityThread$H.handleMessage + 1303(ActivityThread.java:1303)\r\n       at android.os.Handler.dispatchMessage + 102(Handler.java:102)\r\n       at android.os.Looper.loop + 136(Looper.java:136)\r\n       at android.app.ActivityThread.main + 5426(ActivityThread.java:5426)\r\n       at java.lang.reflect.Method.invokeNative(Method.java)\r\n       at java.lang.reflect.Method.invoke + 515(Method.java:515)\r\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run + 1268(ZygoteInit.java:1268)\r\n       at com.android.internal.os.ZygoteInit.main + 1084(ZygoteInit.java:1084)\r\n       at dalvik.system.NativeStart.main(NativeStart.java)\r\n```", "commits": {}, "title": "KeyProvider18.java line 90", "created": "2019-08-02 14:02:46", "user": "owdeveloper", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1108", "commitsDetails": [], "ttf": 35.000277777777775}, {"labels": ["Bug", "S3"], "closed": "2019-08-21 04:54:21", "body": "**State your question**\r\nGetting error while uploading any file from Android 6.0.1\r\n\r\n**Which AWS Services are you utilizing?**  - S3\r\n\r\n**Provide code snippets (if applicable)**\r\n08-01 09:39:43.977 8286-9177/? D/UploadTask: Failed to upload: 2 due to Log tag \"AwsChunkedEncodingInputStream\" exceeds limit of 23 characters\r\n<img width=\"890\" alt=\"\u87a2\u5e55\u5feb\u7167 2019-08-01 \u4e0a\u534810 28 02\" src=\"https://user-images.githubusercontent.com/53545072/62258900-59931580-b447-11e9-8b48-4828967199b0.png\">\r\n\r\n\r\n**Environment(please complete the following information):**\r\n - SDK Version: 2.13.1\r\n\r\n**Device Information (please complete the following information):**\r\n - Device : LENOVO Lenovo PB2-690M\r\n - Android Version: [e.g. Marshmallow 6.0.1]\r\n - Specific to simulators: No", "commits": {}, "title": "Upload Fails with error Log tag \"AwsChunkedEncodingInputStream\" exceeds limit of 23 characters", "created": "2019-08-01 01:33:26", "user": "lionheart1060", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1103", "commitsDetails": [], "ttf": 20.00027777777778}, {"labels": ["Bug", "S3"], "closed": "2019-08-14 16:59:13", "body": "**Describe the bug**\r\n\r\nFatal Exception: c.f.c.t: java.lang.NumberFormatException: For input string: \"ANY\"\r\n       at com.google.gson.internal.bind.TypeAdapters$7.read + 228(TypeAdapters.java:228)\r\n       at com.google.gson.internal.bind.TypeAdapters$7.read + 218(TypeAdapters.java:218)\r\n       at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read + 131(ReflectiveTypeAdapterFactory.java:131)\r\n       at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read + 222(ReflectiveTypeAdapterFactory.java:222)\r\n       at com.google.gson.Gson.fromJson + 927(Gson.java:927)\r\n       at com.google.gson.Gson.fromJson + 892(Gson.java:892)\r\n       at com.google.gson.Gson.fromJson + 841(Gson.java:841)\r\n       at com.google.gson.Gson.fromJson + 813(Gson.java:813)\r\n       at com.amazonaws.mobileconnectors.s3.transferutility.TransferRecord.updateFromDB + 159(TransferRecord.java:159)\r\n       at com.amazonaws.mobileconnectors.s3.transferutility.TransferNetworkLossHandler.resumeAllTransfersOnNetworkAvailability + 176(TransferNetworkLossHandler.java:176)\r\n       at com.amazonaws.mobileconnectors.s3.transferutility.TransferNetworkLossHandler.access$000 + 37(TransferNetworkLossHandler.java:37)\r\n       at com.amazonaws.mobileconnectors.s3.transferutility.TransferNetworkLossHandler$1.run + 123(TransferNetworkLossHandler.java:123)\r\n\r\n**To Reproduce**\r\n Updated sdk from version 2.12.0\r\n\r\n\r\n**Which AWS service(s) are affected?**\r\nS3\r\n\r\n**Expected behavior**\r\nNot to\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: [2.13.5]\r\n - Device: Note 9 \r\n - Android Version: 9 \r\n - Specific to simulators: No\r\n\r\n", "commits": {}, "title": "NumberFormatException thrown in TransferRecord.updateFromDB", "created": "2019-07-27 18:46:42", "user": "GerardoRobledo", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1093", "commitsDetails": [], "ttf": 17.00027777777778}, {"labels": ["Awaiting Release", "Bug", "Pinpoint"], "closed": "2019-08-22 17:22:45", "body": "Customer reports that they see infrequent crashes from the Pinpoint library: \r\n\r\n```\r\nFatal Exception: com.amazonaws.AmazonClientException: android.permission.INTERNET permission is not granted.\r\n       at com.amazonaws.mobileconnectors.pinpoint.PinpointManager.<init>(Unknown Source:133)\r\n       at XXXXXX(Unknown Source:48)\r\n       at android.os.Handler.handleCallback(Handler.java:869)\r\n       at android.os.Handler.dispatchMessage(Handler.java:101)\r\n       at android.os.Looper.loop(Looper.java:206)\r\n       at android.os.HandlerThread.run(HandlerThread.java:65)\r\n```\r\n\r\nWe've found that the SDK validates if the Internet permission has been granted through the `checkSelfPermission` call which may not work in certain devices/manufacturers/Custom Android implementations.\r\n\r\nWe need to investigate to see if we can remove this validation from the SDK as other SDKs don't do this check.", "commits": {}, "title": "Pinpoint crash: \"INTERNET permission not granted\"", "created": "2019-07-26 22:18:03", "user": "palpatim", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1092", "commitsDetails": [], "ttf": 26.00027777777778}, {"labels": ["AWSMobileClient", "Bug", "Duplicate"], "closed": "2020-01-24 18:57:15", "body": "**Describe the bug**\r\n\r\n```\r\nE/: [ZeroHung]zrhung_get_config: Get config failed for wp[0x0008]\r\nE/LOGIN: onError: \r\n    com.amazonaws.mobileconnectors.cognitoauth.exceptions.AuthNavigationException: user cancelled\r\n        at com.amazonaws.mobileconnectors.cognitoauth.AuthClient$4.onNavigationEvent(AuthClient.java:624)\r\n        at androidx.browser.customtabs.CustomTabsClient$2$1.run(CustomTabsClient.java:200)\r\n        at android.os.Handler.handleCallback(Handler.java:891)\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\r\n        at android.os.Looper.loop(Looper.java:207)\r\n        at android.app.ActivityThread.main(ActivityThread.java:7470)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:524)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:958)\r\n```\r\n\r\n**Gradle**\r\n\r\n```\r\ngroup 'com.flutter.master.flutter_plugin_hosted_ui'\r\nversion '1.0-SNAPSHOT'\r\n\r\nbuildscript {\r\n    ext.kotlin_version = '1.3.41'\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:3.4.2'\r\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\r\n        classpath 'com.amazonaws:aws-android-sdk-appsync-gradle-plugin:2.9.0'\r\n    }\r\n}\r\n\r\nrootProject.allprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n}\r\n\r\napply plugin: 'com.android.library'\r\napply plugin: 'kotlin-android'\r\napply plugin: 'com.amazonaws.appsync'\r\n\r\nandroid {\r\n    compileSdkVersion 28\r\n\r\n    sourceSets {\r\n        main.java.srcDirs += 'src/main/kotlin'\r\n    }\r\n    defaultConfig {\r\n        minSdkVersion 23\r\n        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\r\n    }\r\n    lintOptions {\r\n        disable 'InvalidPackage'\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version\"\r\n    //For AWSMobileClient only:\r\n    implementation ('com.amazonaws:aws-android-sdk-mobile-client:2.13.+@aar') { transitive = true }\r\n//For the drop-in UI also:\r\n    implementation 'com.amazonaws:aws-android-sdk-auth-userpools:2.13.7'\r\n    implementation 'com.amazonaws:aws-android-sdk-auth-ui:2.13.7'\r\n    implementation(\"com.amazonaws:aws-android-sdk-cognitoauth:2.13.+@aar\") { transitive = true }\r\n    //Base SDK\r\n    implementation 'com.amazonaws:aws-android-sdk-core:2.13.7'\r\n    //AppSync SDK\r\n    implementation 'com.amazonaws:aws-android-sdk-appsync:2.9.0'\r\n    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.1'\r\n    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'\r\n    implementation 'com.google.android.gms:play-services-auth:17.0.0'\r\n    implementation 'androidx.appcompat:appcompat:1.0.2'\r\n    implementation 'com.google.code.gson:gson:2.8.5'\r\n}\r\n```", "commits": {}, "title": "User pool federation with hosted UI, \"AuthNavigationException: user cancelled\" always thrown before onSuccess  and when using in flugin flutter, it always return \"User cancelled \" and state \"SIGN_OUT\"", "created": "2019-07-23 09:25:00", "user": "namanh007", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1083", "commitsDetails": [], "ttf": 185.00027777777777}, {"labels": ["Bug", "Pinpoint"], "closed": "2020-03-15 17:00:37", "body": "**Describe the bug**\r\nWhen device is offline, if you call **pinpointManager.getAnalyticsClient().submitEvents()** it will drop events with this message:\r\n`E/EventRecorder: AmazonClientException: Failed submission of 3 events, events will be removed from the local database.`\r\n\r\nThe bug is in [EventRecorder ](https://github.com/aws-amplify/aws-sdk-android/blob/master/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/internal/event/EventRecorder.java#L501) class, in function **isClientExceptionRetryable**. It checks if:\r\n`amazonClientException.getCause() instanceof UnknownHostException`\r\nexpecting that AmazonClientException exception's cause will be UnknownHostException. But in reality (at least on my phone), when there is no internet connection exception being thrown is AmazonClientException, with its cause being also AmazonClientException, with its cause then being UnknownHostException.\r\n\r\nThis would fix the bug:\r\n```\r\nprivate boolean isClientExceptionRetryable(AmazonClientException amazonClientException) {\r\n    return amazonClientException.getCause() != null &&\r\n            (amazonClientException.getCause() instanceof UnknownHostException ||\r\n             amazonClientException.getCause() instanceof SocketException ||\r\n             (amazonClientException.getCause() instanceof AmazonClientException &&\r\n            isClientExceptionRetryable((AmazonClientException)amazonClientException.getCause())));\r\n}\r\n```\r\n\r\n@kvasukib I see that you tried to fix this issue [here](https://github.com/aws-amplify/aws-sdk-android/issues/773), but your solution works only when AmazonClientException has a direct cause being UnknownHostException. On my phone AmazonClientException has a cause AmazonClientException which then has cause UnknownHostException. That is behavior I see in other services too when there is no internet, some of them return exception with direct cause being UnknownHostException, some have nested exceptions like here.\r\n\r\n**To Reproduce**\r\nCall pinpointManager.getAnalyticsClient().submitEvents() while device is in airplane mode.\r\n\r\n**Which AWS service(s) are affected?**\r\nPinpoint (aws-android-sdk-pinpoint)\r\n\r\n**Expected behavior**\r\nisClientExceptionRetryable should properly classify exception as retryable, so that events are not cleared from the SQL table.\r\n\r\n**Screenshots**\r\n/\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.13.7\r\n - Device: Huawei Mate 10pro\r\n - Android Version: Pie 9.0\r\n - Specific to simulators: No\r\n\r\n**Additional context**\r\n/\r\n", "commits": {}, "title": "Pinpoint is losing events when device is offline", "created": "2019-07-18 08:12:01", "user": "markorakita", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1074", "commitsDetails": [], "ttf": 241.00027777777777}, {"labels": ["Bug", "KinesisVideo", "closing-soon-if-no-response"], "closed": "2019-08-06 10:57:42", "body": "**Describe the bug**\r\nWhen you run the `kinesisVideoClient.createMediaSource` method, the error is returned:\r\n\r\n```\r\nE / KinesisVideoAndroidClient: 2019-07-06T15: 12Z T2202: EXCEPTION: ResourceNotFoundException: Service call failed .: The requested stream is not found or not active. (Service: AWSKinesisVideo; Status Code: 404; Error Code: ResourceNotFoundException; Request ID: ba0da9da-faea-461f-919a-354ec7c48a42)\r\n```\r\n\r\nThe problem occurs when using sdk **com.amazonaws: aws-android-sdk-kinesisvideo: 2.13.** +, If you use the **com.amazonaws: aws-android-sdk-kinesisvideo: 2.11.**  The problem does not occur.\r\n\r\n**To Reproduce**\r\nYou can reproduce the problem using the AWS AmazonKinesisVideoDemoApp sample project.\r\n\r\n```\r\n            mKinesisVideoClient = KinesisVideoAndroidClientFactory.createKinesisVideoClient(\r\n                    getActivity(),\r\n                    KinesisVideoDemoApp.KINESIS_VIDEO_REGION,\r\n                    KinesisVideoDemoApp.getCredentialsProvider());\r\n\r\n            mCameraMediaSource = (AndroidCameraMediaSource) mKinesisVideoClient\r\n                    .createMediaSource(mStreamName, mConfiguration);\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\nKinesis Video Stream\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.13.+\r\n - Device: Pixel XL, Simulator\r\n - Android Version: API 28\r\n - Specific to simulators: No\r\n\r\n", "commits": {}, "title": "Error execute createMediaSource using sdk version 2.13.+", "created": "2019-07-06 18:25:21", "user": "addodelgrossi", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1065", "commitsDetails": [], "ttf": 30.00027777777778}, {"labels": ["Bug", "Lex"], "closed": "2020-04-03 21:09:26", "body": "**Describe the bug**\r\nFollowing the instructions on the [Lex Sample App](https://github.com/awslabs/aws-sdk-android-samples/tree/master/LexSample) in the Android Sample Repo, I ran into two problems attempting to initialize AWSMobileClient:\r\n\r\n1. The AWS CLI injected an \"Auth\" section into the generated `awsconfiguration.json` file, despite my not using Hosted UI\r\n1. The SDK would not properly intialize AWSMobileClient without me adding `aws-android-sdk-cognitoauth` to my build.gradle\r\n\r\nI've not been able to investigate this deeply to see if this is a bug due to a recent change, or a problem in my local setup.\r\n\r\n**To Reproduce**\r\n\r\n1. Follow the instructions on the LexSample to spin up a new Lex sample app\r\n  1. It may be necessary to perform an additional setup step not documented in the LexSample instructions: The CLI does not create any aliases, and I don't think it publishes the newly-created bot. That might need to be done before running the sample, but I haven't investigated closely\r\n1. Attempt to build and run the app\r\n\r\n**Expected behavior**\r\n\r\nThe app builds, runs, and is able to do a \"book trip\" transaction via TextActivity.\r\n\r\n**Actual Behavior**\r\n\r\n1. The app fails to initialize AWSMobileClient during the TextActivity, failing to find `AuthProvider`. Relevant stack trace:\r\n\r\n```\r\nCaused by: java.lang.ClassNotFoundException: Didn't find class \"com.amazonaws.mobileconnectors.cognitoauth.handlers.AuthHandler\" on path: DexPathList[[zip file \"/data/app/com.amazonaws.sample.lex-JMOmFkHzt2PylpxsL9CcQA==/base.apk\", zip file \"/data/app/com.amazonaws.sample.lex-JMOmFkHzt2PylpxsL9CcQA==/split_lib_dependencies_apk.apk\", zip file \"/data/app/com.amazonaws.sample.lex-JMOmFkHzt2PylpxsL9CcQA==/split_lib_resources_apk.apk\", zip file \"/data/app/com.amazonaws.sample.lex-JMOmFkHzt2PylpxsL9CcQA==/split_lib_slice_0_apk.apk\", zip file \"/data/app/com.amazonaws.sample.lex-JMOmFkHzt2PylpxsL9CcQA==/split_lib_slice_1_apk.apk\", zip file \"/data/app/com.amazonaws.sample.lex-JMOmFkHzt2PylpxsL9CcQA==/split_lib_slice_2_apk.apk\", zip file \"/data/app/com.amazonaws.sample.lex-JMOmFkHzt2PylpxsL9CcQA==/split_lib_slice_3_apk.apk\", zip file \"/data/app/com.amazonaws.sample.lex-JMOmFkHzt2PylpxsL9CcQA==/split_lib_slice_4_apk.apk\", zip file \"/data/app/com.amazonaws.sample.lex-JMOmFkHzt2PylpxsL9CcQA==/split_lib_slice_5_apk.apk\", \r\n        at java.lang.Class dalvik.system.BaseDexClassLoader.findClass(java.lang.String) (BaseDexClassLoader.java:125)\r\n        at java.lang.Class java.lang.ClassLoader.loadClass(java.lang.String, boolean) (ClassLoader.java:379)\r\n        at java.lang.Class java.lang.ClassLoader.loadClass(java.lang.String) (ClassLoader.java:312)\r\n        at com.amazonaws.mobile.client.AWSMobileClient com.amazonaws.mobile.client.AWSMobileClient.getInstance() (AWSMobileClient.java:-1)\r\n        at void com.amazonaws.sample.lex.TextActivity.initializeLexSDK() (TextActivity.java:150)\r\n        at void com.amazonaws.sample.lex.TextActivity.init() (TextActivity.java:139)\r\n        at void com.amazonaws.sample.lex.TextActivity.onCreate(android.os.Bundle) (TextActivity.java:109)\r\n        at void android.app.Activity.performCreate(android.os.Bundle, android.os.PersistableBundle) (Activity.java:7009)\r\n        at void android.app.Activity.performCreate(android.os.Bundle) (Activity.java:7000)\r\n        at void android.app.Instrumentation.callActivityOnCreate(android.app.Activity, android.os.Bundle) (Instrumentation.java:1214)\r\n        at android.app.Activity android.app.ActivityThread.performLaunchActivity(android.app.ActivityThread$ActivityClientRecord, android.content.Intent) (ActivityThread.java:2731)\r\n        at void android.app.ActivityThread.handleLaunchActivity(android.app.ActivityThread$ActivityClientRecord, android.content.Intent, java.lang.String) (ActivityThread.java:2856)\r\n        at void android.app.ActivityThread.-wrap11(android.app.ActivityThread, android.app.ActivityThread$ActivityClientRecord, android.content.Intent, java.lang.String) (ActivityThread.java:-1)\r\n        at void android.app.ActivityThread$H.handleMessage(android.os.Message) (ActivityThread.java:1589)\r\n        at void android.os.Handler.dispatchMessage(android.os.Message) (Handler.java:106)\r\n        at void android.os.Looper.loop() (Looper.java:164)\r\n        at void android.app.ActivityThread.main(java.lang.String[]) (ActivityThread.java:6494)\r\n        at java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (Method.java:-2)\r\n        at void com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run() (RuntimeInit.java:438)\r\n        at void com.android.internal.os.ZygoteInit.main(java.lang.String[]) (ZygoteInit.java:807)\r\n```\r\n\r\n1. After working around the above (see below), the app also logs an error and fails to initialize the AWSMobileClient (but does not crash because of it):\r\n\r\n```\r\nE/TextActivity: initialize.onError: \r\n    java.lang.RuntimeException: Failed to initialize OAuth, please check your awsconfiguration.json\r\n        at com.amazonaws.mobile.client.AWSMobileClient$2.run(AWSMobileClient.java:579)\r\n        at com.amazonaws.mobile.client.internal.InternalCallback$1.run(InternalCallback.java:101)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n     Caused by: org.json.JSONException: No value for Scopes\r\n        at org.json.JSONObject.get(JSONObject.java:392)\r\n        at org.json.JSONObject.getJSONArray(JSONObject.java:587)\r\n        at com.amazonaws.mobile.client.AWSMobileClient._initializeHostedUI(AWSMobileClient.java:602)\r\n        at com.amazonaws.mobile.client.AWSMobileClient.access$400(AWSMobileClient.java:164)\r\n        at com.amazonaws.mobile.client.AWSMobileClient$2.run(AWSMobileClient.java:576)\r\n        at com.amazonaws.mobile.client.internal.InternalCallback$1.run(InternalCallback.java:101)\u00a0\r\n        at java.lang.Thread.run(Thread.java:764)\u00a0\r\n```\r\n\r\n**Workarounds**\r\n\r\n1. Add to `dependencies` section of `build.gradle`:\r\n\r\n```gradle\r\nimplementation (\"com.amazonaws:aws-android-sdk-cognitoauth:$aws_version@aar\") { transitive=true }\r\n```\r\n\r\n1. Remove the `OAuth` section from `awsconfiguration.json`\r\n\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.13.6\r\n - Emulator\r\n - API 23\r\n - Specific to simulators: No\r\n", "commits": {}, "title": "Lex sample requires CognitoAuth SDK", "created": "2019-06-13 23:35:50", "user": "palpatim", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1018", "commitsDetails": [], "ttf": 294.0002777777778}, {"labels": ["Bug", "Needs Info from Requester", "Rekognition", "closing-soon-if-no-response"], "closed": "2019-08-28 19:53:28", "body": "Hello, as in this https://docs.aws.amazon.com/rekognition/latest/dg/add-faces-to-collection-procedure.html documentation I want to use \"withMaxFaces\" with \"IndexFacesRequest\" but realized that mobile SDK doesn't support it.\r\n\r\nI'm using AWS Rekognition service with SDK Version: 2.13.6 \r\nimplementation 'com.amazonaws:aws-android-sdk-rekognition:2.13.6'\r\n\r\nI am trying to add max 1 person(biggest face) to my collection. For now I am adding photo with IndexFacesRequest and after that I am keeping 1 faceId and using DeleteFacesRequest for the rest of all faceIds but it is not a good solution. Being able to use \"withMaxFaces\" with \"IndexFacesRequest\" will be better. We use GDPR in app and I am adding then deleting faces without permission. Any plans for supporting \"withMaxFaces\" with \"IndexFacesRequest\" as in JavaSDK?\r\n\r\n\r\n", "commits": {}, "title": "Using \"withMaxFaces\" with \"IndexFacesRequest\" with Rekognition SDK", "created": "2019-06-11 14:04:08", "user": "semaspahi", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1016", "commitsDetails": [], "ttf": 78.00027777777778}, {"labels": ["Bug", "Core", "Needs Info from Requester", "closing-soon-if-no-response"], "closed": "2019-09-06 17:01:41", "body": "**Describe the bug**\r\nFirebase Crash report show many errors/crashs in android.\r\n\r\n**Implementation Code**\r\n```\r\nClass BaseAplication\r\n```\r\n```\r\n        credentialsProvider = new CognitoCachingCredentialsProvider(\r\n                context,    /* get the context for the application */\r\n                IDENTITY_POOL_ID,    /* Identity Pool ID */\r\n                Regions.US_EAST_1           /* Region for your identity pool--US_EAST_1 or EU_WEST_1*/\r\n        );\r\n```\r\n```\r\nprivate class CognitoAuthTask extends AsyncTask<String, Void, Credentials> {\r\n        @Override\r\n        protected Credentials doInBackground(String... strings) {\r\n            String userId = strings[0];\r\n            String token = strings[1];\r\n            GetCredentialsForIdentityResult tokenResp = null;\r\n            try {\r\n                Map<String, String> providerTokens = new HashMap<String, String>();\r\n                providerTokens.put(\"cognito-identity.amazonaws.com\", token);\r\n                AmazonCognitoIdentityClient identityClient = new AmazonCognitoIdentityClient(credentialsProvider);\r\n                identityClient.setRegion(Region.getRegion(Regions.US_EAST_1));\r\n                GetCredentialsForIdentityRequest request = new GetCredentialsForIdentityRequest();\r\n                request.setIdentityId(userId);\r\n                request.withLogins(providerTokens);\r\n                tokenResp = identityClient.getCredentialsForIdentity(request);\r\n            } catch (Exception e) {\r\n                if (BuildConfig.DEBUG) {\r\n                    e.printStackTrace();\r\n                }\r\n            } finally {\r\n                return tokenResp == null ? null : tokenResp.getCredentials();\r\n            }\r\n        }\r\n\r\n        @Override\r\n        protected void onPostExecute(Credentials credentials) {\r\n            super.onPostExecute(credentials);\r\n            cognitoCredentials = credentials;\r\n            if (BuildConfig.DEBUG) {\r\n                Log.d(\"Cognito Credentials\", credentials == null ? \"null\" : credentials.toString());\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\n**Last 5 days - Firebase Crash Error**\r\n```\r\n744 errors\r\n```\r\n```\r\nFatal Exception: java.lang.RuntimeException: Unable to create application com.pontomobi.Application: java.lang.IllegalStateException: Error in initializing the CognitoCachingCredentialsProvider. \r\n       at android.app.ActivityThread.handleBindApplication(ActivityThread.java:6499)\r\n       at android.app.ActivityThread.access$1800(ActivityThread.java:229)\r\n       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1887)\r\n       at android.os.Handler.dispatchMessage(Handler.java:102)\r\n       at android.os.Looper.loop(Looper.java:148)\r\n       at android.app.ActivityThread.main(ActivityThread.java:7406)\r\n       at java.lang.reflect.Method.invoke(Method.java)\r\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1230)\r\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1120)\r\n```\r\n```\r\nCaused by java.lang.IllegalStateException: Error in initializing the CognitoCachingCredentialsProvider. \r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize(CognitoCachingCredentialsProvider.java:434)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init>(CognitoCachingCredentialsProvider.java:190)\r\n       at com.pontomobi.Application.onCreate(Application.java:143)\r\n       at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1037)\r\n       at android.app.ActivityThread.handleBindApplication(ActivityThread.java:6496)\r\n       at android.app.ActivityThread.access$1800(ActivityThread.java:229)\r\n       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1887)\r\n       at android.os.Handler.dispatchMessage(Handler.java:102)\r\n       at android.os.Looper.loop(Looper.java:148)\r\n       at android.app.ActivityThread.main(ActivityThread.java:7406)\r\n       at java.lang.reflect.Method.invoke(Method.java)\r\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1230)\r\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1120)\r\n```\r\n```\r\nCaused by java.lang.IllegalStateException: java.security.UnrecoverableKeyException: Failed to obtain information about key\r\n       at com.amazonaws.internal.keyvaluestore.KeyProvider23.getKey(KeyProvider23.java:69)\r\n       at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.setPersistenceEnabled(AWSKeyValueStore.java:131)\r\n       at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.<init>(AWSKeyValueStore.java:108)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize(CognitoCachingCredentialsProvider.java:425)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init>(CognitoCachingCredentialsProvider.java:190)\r\n       at com.pontomobi.Application.onCreate(Application.java:143)\r\n       at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1037)\r\n       at android.app.ActivityThread.handleBindApplication(ActivityThread.java:6496)\r\n       at android.app.ActivityThread.access$1800(ActivityThread.java:229)\r\n       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1887)\r\n       at android.os.Handler.dispatchMessage(Handler.java:102)\r\n       at android.os.Looper.loop(Looper.java:148)\r\n       at android.app.ActivityThread.main(ActivityThread.java:7406)\r\n       at java.lang.reflect.Method.invoke(Method.java)\r\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1230)\r\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1120)\r\n```\r\n```\r\nCaused by java.security.UnrecoverableKeyException: Failed to obtain information about key\r\n       at android.security.keystore.AndroidKeyStoreProvider.loadAndroidKeyStoreSecretKeyFromKeystore(AndroidKeyStoreProvider.java:275)\r\n       at android.security.keystore.AndroidKeyStoreSpi.engineGetKey(AndroidKeyStoreSpi.java:97)\r\n       at java.security.KeyStore.getKey(KeyStore.java:253)\r\n       at com.amazonaws.internal.keyvaluestore.KeyProvider23.getKey(KeyProvider23.java:65)\r\n       at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.setPersistenceEnabled(AWSKeyValueStore.java:131)\r\n       at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.<init>(AWSKeyValueStore.java:108)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize(CognitoCachingCredentialsProvider.java:425)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init>(CognitoCachingCredentialsProvider.java:190)\r\n       at com.pontomobi.Application.onCreate(Application.java:143)\r\n       at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1037)\r\n       at android.app.ActivityThread.handleBindApplication(ActivityThread.java:6496)\r\n       at android.app.ActivityThread.access$1800(ActivityThread.java:229)\r\n       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1887)\r\n       at android.os.Handler.dispatchMessage(Handler.java:102)\r\n       at android.os.Looper.loop(Looper.java:148)\r\n       at android.app.ActivityThread.main(ActivityThread.java:7406)\r\n       at java.lang.reflect.Method.invoke(Method.java)\r\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1230)\r\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1120)\r\n```\r\n```\r\nCaused by android.security.KeyStoreException: -49\r\n       at android.security.KeyStore.getKeyStoreException(KeyStore.java:945)\r\n       at android.security.keystore.AndroidKeyStoreProvider.loadAndroidKeyStoreSecretKeyFromKeystore(AndroidKeyStoreProvider.java:275)\r\n       at android.security.keystore.AndroidKeyStoreSpi.engineGetKey(AndroidKeyStoreSpi.java:97)\r\n       at java.security.KeyStore.getKey(KeyStore.java:253)\r\n       at com.amazonaws.internal.keyvaluestore.KeyProvider23.getKey(KeyProvider23.java:65)\r\n       at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.setPersistenceEnabled(AWSKeyValueStore.java:131)\r\n       at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.<init>(AWSKeyValueStore.java:108)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize(CognitoCachingCredentialsProvider.java:425)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init>(CognitoCachingCredentialsProvider.java:190)\r\n       at com.pontomobi.Application.onCreate(Application.java:143)\r\n       at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1037)\r\n       at android.app.ActivityThread.handleBindApplication(ActivityThread.java:6496)\r\n       at android.app.ActivityThread.access$1800(ActivityThread.java:229)\r\n       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1887)\r\n       at android.os.Handler.dispatchMessage(Handler.java:102)\r\n       at android.os.Looper.loop(Looper.java:148)\r\n       at android.app.ActivityThread.main(ActivityThread.java:7406)\r\n       at java.lang.reflect.Method.invoke(Method.java)\r\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1230)\r\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1120)\r\n```\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: \r\n```\r\n    implementation 'com.amazonaws:aws-android-sdk-core:2.2.+'\r\n    implementation 'com.amazonaws:aws-android-sdk-cognitoidentityprovider:2.2.+'\r\n    implementation 'com.amazonaws:aws-android-sdk-appsync:2.9.0'\r\n```\r\n - Device: 97% Samsung (84% Galaxy Grand Prime Plus, 12% Galaxy J2 Prime)\r\n - Android Version: 97% Android 6\r\n\r\n**Additional context**\r\nProblems before update sdk version on app \r\n", "commits": {}, "title": "UnrecoverableKeyException while initializing CognitoCachingCredentialsProvider in Android 6 ", "created": "2019-05-29 21:02:33", "user": "owdeveloper", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/1001", "commitsDetails": [], "ttf": 99.00027777777778}, {"labels": ["Bug", "Core", "closing-soon-if-no-response"], "closed": "2019-06-27 19:26:37", "body": "An issue currently affecting our production app where a NumbersFormatException is being thrown in CognitoCachingCredentialsProvider. In this release we moved from AWS Android SDK version 2.7.0 to 2.13.4. \r\n\r\n```\r\nFatal Exception: java.lang.IllegalStateException: Error in initializing the CognitoCachingCredentialsProvider. \r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize(CognitoCachingCredentialsProvider.java:434)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init>(CognitoCachingCredentialsProvider.java:383)\r\nCaused by java.lang.NumberFormatException: null\r\n       at java.lang.Long.parseLong(Long.java:557)\r\n       at java.lang.Long.parseLong(Long.java:636)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.loadCachedCredentials(CognitoCachingCredentialsProvider.java:590)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize(CognitoCachingCredentialsProvider.java:430)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.<init>(CognitoCachingCredentialsProvider.java:383)\r\n```\r\n\r\nExceptions are thrown while getting the credentialsProvider prior to making a Lambda call and getting an AmazonS3Client to use in TransferUtility.\r\n\r\nThis issue seems intermittent and does not happen all time and has been difficult to reproduce. Our crash reporting has been picking up this exception and has occurred more than once for some users. \r\n\r\n - AWS Android SDK Version: 2.13.4\r\n - Device: Range of devices from Pixel 2 to Samsungs.\r\n - Android Version: so far only Android 9 devices has been reported\r\n - Specific to simulators: No\r\n\r\n", "commits": {}, "title": "NumberFormatException thrown in CognitoCachingCredentialsProvider", "created": "2019-05-22 01:03:21", "user": "markacoss", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/972", "commitsDetails": [], "ttf": 36.000277777777775}, {"labels": ["Bug", "Core"], "closed": "2019-06-20 19:25:55", "body": "**Describe the bug**\r\nWhen we tries to run the AWSMobileClient on 4.2 and 4.3 Android devices, a `NoSuchMethodError` raises:\r\n\r\n`java.lang.NoSuchMethodError: android.security.KeyPairGeneratorSpec$Builder.setKeySize\r\n        at com.amazonaws.internal.keyvaluestore.KeyProvider18.a(KeyProvider18.java:154)\r\n        at com.amazonaws.internal.keyvaluestore.KeyProvider18.a(KeyProvider18.java:72)\r\n        at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.a(AWSKeyValueStore.java:138)\r\n        at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.<init>(AWSKeyValueStore.java:108)\r\n        at com.amazonaws.mobile.client.AWSMobileClientStore.<init>(AWSMobileClient.java:3462)\r\n        at com.amazonaws.mobile.client.AWSMobileClient$2.run(AWSMobileClient.java:477)\r\n        at com.amazonaws.mobile.client.internal.InternalCallback$1.run(InternalCallback.java:101)\r\n        at java.lang.Thread.run(Thread.java:841)`\r\n\r\n**To Reproduce**\r\nJust tries to run the AWSMobileClient on specific 4.3 devices.\r\n\r\n**Expected behavior**\r\nRun on Android 4.3, because accordingly with the documentation, the minSdkVersion is 15.\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.13.4\r\n - Device: I've tested in Samsung Galaxy S3 (4.3), Sony Xperia Z (4.3)\r\n - Android Version: 4.3\r\n - Specific to simulators: No", "commits": {}, "title": "AWSMobileClient not working on Android 4.3", "created": "2019-05-17 14:26:20", "user": "luanalbineli", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/964", "commitsDetails": [], "ttf": 34.000277777777775}, {"labels": ["Awaiting Release", "Bug", "S3"], "closed": "2019-06-06 17:37:30", "body": "**Describe the bug**\r\nWhen using the following method ` public TransferObserver upload(String bucket, String key, File file, ObjectMetadata metadata,\r\n            CannedAccessControlList cannedAcl, TransferListener listener)`  in airplane mode, `TransferStatusUpdater` won't notify any listener because is not added by the time `TransferRecord.checkPreferredNetworkAvailability` has been called.\r\n\r\n\r\n**To Reproduce**\r\nA code sample or steps:\r\n```\r\n val observer = transferUtility.upload(Constants.BUCKET_NAME, fileToUpload.name, fileToUpload,\r\n                    ObjectMetadata(),null,transferListener)\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\nS3\r\n\r\n**Expected behavior**\r\nDebugging `TransferUtility` class you can see the following.\r\n```\r\n    public TransferObserver upload(String bucket, String key, File file, ObjectMetadata metadata,\r\n            CannedAccessControlList cannedAcl, TransferListener listener) {\r\n        if (file == null || file.isDirectory() || !file.exists()) {\r\n            throw new IllegalArgumentException(\"Invalid file: \" + file);\r\n        }\r\n        int recordId;\r\n        if (shouldUploadInMultipart(file)) {\r\n            recordId = createMultipartUploadRecords(bucket, key, file, metadata, cannedAcl);\r\n        } else {\r\n\r\n            final Uri uri = dbUtil.insertSingleTransferRecord(TransferType.UPLOAD, bucket, key, file, metadata,\r\n                    cannedAcl, transferUtilityOptions);\r\n            recordId = Integer.parseInt(uri.getLastPathSegment());\r\n        }\r\n        //this line triggers TransferRecord\r\n       submitTransferJob(TRANSFER_ADD, recordId); \r\n       // this initialize our TransferObserver.\r\n        return new TransferObserver(recordId, dbUtil, bucket, key, file, listener); \r\n    }\r\n```\r\n\r\nIf  we change to \r\n```\r\n    public TransferObserver upload(String bucket, String key, File file, ObjectMetadata metadata,\r\n            CannedAccessControlList cannedAcl, TransferListener listener) {\r\n        if (file == null || file.isDirectory() || !file.exists()) {\r\n            throw new IllegalArgumentException(\"Invalid file: \" + file);\r\n        }\r\n        int recordId;\r\n        if (shouldUploadInMultipart(file)) {\r\n            recordId = createMultipartUploadRecords(bucket, key, file, metadata, cannedAcl);\r\n        } else {\r\n\r\n            final Uri uri = dbUtil.insertSingleTransferRecord(TransferType.UPLOAD, bucket, key, file, metadata,\r\n                    cannedAcl, transferUtilityOptions);\r\n            recordId = Integer.parseInt(uri.getLastPathSegment());\r\n        }\r\n        TransferObserver transferObserver = new TransferObserver(recordId, dbUtil, bucket, key, file, listener)\r\n        submitTransferJob(TRANSFER_ADD, recordId); \r\n       \r\n        return transferObserver; \r\n    }\r\n```\r\n\r\n then the listener would be called.\r\n\r\n\r\n\r\n**Screenshots**\r\n<img width=\"1680\" alt=\"Screen Shot 2019-05-14 at 7 06 18 PM\" src=\"https://user-images.githubusercontent.com/5215641/57740195-2b8a0a80-767c-11e9-9bbd-9c068fd8dd1d.png\">\r\n<img width=\"1792\" alt=\"Screen Shot 2019-05-14 at 7 07 35 PM\" src=\"https://user-images.githubusercontent.com/5215641/57740194-2b8a0a80-767c-11e9-9260-bc78437c6401.png\">\r\n\r\n<img width=\"1680\" alt=\"Screen Shot 2019-05-14 at 7 08 48 PM\" src=\"https://user-images.githubusercontent.com/5215641/57740193-2b8a0a80-767c-11e9-81e2-df7abf65cd3e.png\">\r\n\r\n", "commits": {}, "title": "TransferUtility does not update the TransferListener when the preferred network type is not available", "created": "2019-05-15 00:13:36", "user": "GerardoRobledo", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/958", "commitsDetails": [], "ttf": 22.00027777777778}, {"labels": ["Bug", "Cognito"], "closed": "2019-05-17 19:57:18", "body": "**Describe the bug**\r\nNullPointerException when I am trying to integrate a User Pool with an Identity Pool like in the documentation https://docs.aws.amazon.com/cognito/latest/developerguide/tutorial-integrating-user-pools-android.html?shortFooter=true#tutorial-integrating-user-pools-getting-aws-credentials-android.\r\n\r\nThe NullPointerException is \r\n\r\n> E/CognitoCachingCredentialsProvider: Error in initializing the CognitoCachingCredentialsProvider. java.lang.NullPointerException: Attempt to invoke virtual method 'android.content.SharedPreferences android.content.Context.getSharedPreferences(java.lang.String, int)' on a null object reference\r\n[...]\r\n> Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'android.content.SharedPreferences android.content.Context.getSharedPreferences(java.lang.String, int)' on a null object reference\r\nat android.content.ContextWrapper.getSharedPreferences(ContextWrapper.java:174)\r\nat com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.setPersistenceEnabled(AWSKeyValueStore.java:118)\r\nat com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.<init>(AWSKeyValueStore.java:108)\r\nat com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize(CognitoCachingCredentialsProvider.java:425)\r\nat com.amazonaws.auth.CognitoCachingCredentialsProvider.<init>(CognitoCachingCredentialsProvider.java:190)\u00a0\r\n\r\n**To Reproduce**\r\nI am using \r\n`CognitoCachingCredentialsProvider credentialsProvider = new CognitoCachingCredentialsProvider(this, identityPoolId, cognitoRegion);`\r\n\r\nAnd I set the logins in onSuccess callback from AuthenticationHandler \r\n` AuthenticationHandler authenticationHandler = new AuthenticationHandler() {`\r\n`@Override`\r\n`public void onSuccess(CognitoUserSession cognitoUserSession, CognitoDevice device) {`\r\n`AwsHelper.setCurrSession(cognitoUserSession);`\r\n`Map<String, String> logins = new HashMap<>();`\r\n`logins.put(\"cognito-idp.\"+cognitoRegion+\".amazonaws.com/\"+ userPoolId, cognitoUserSession.getIdToken().getJWTToken());`\r\n`credentialsProvider.setLogins(logins);`\r\n`}`\r\n\r\n`AwsHelper.getPool().getUser(username).getSessionInBackground(authenticationHandler);`\r\n\r\n**Which AWS service(s) are affected?**\r\n\r\n_cognitoidentityprovider_\r\n\r\n**Environment Information (please complete the following information):**\r\n\r\nAWS Android SDK Version: \r\n\r\napp build.gradle\r\n> implementation 'com.amazonaws:aws-android-sdk-core:2.13.4'\r\n> implementation 'com.amazonaws:aws-android-sdk-appsync:2.8.3'\r\n> implementation 'com.amazonaws:aws-android-sdk-cognitoidentityprovider:2.13.4'\r\n\r\nproject build.gradle\r\n> classpath 'com.amazonaws:aws-android-sdk-appsync-gradle-plugin:2.8.3'\r\n\r\nDevice: Sony Xperia XZ1\r\nAndroid Version: 9.0.0 API 28", "commits": {}, "title": "Error in initializing the CognitoCachingCredentialsProvider : NullPointerException on getSharedPreferences ", "created": "2019-05-11 22:00:20", "user": "NassB", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/952", "commitsDetails": [], "ttf": 5.000277777777778}, {"labels": ["AWSMobileClient", "Bug", "Needs Info from Requester", "closing-soon-if-no-response"], "closed": "2019-06-03 17:04:48", "body": "**Describe the bug**\r\nHi all, we are trying to configure the Amplify Authentication on Android, but when we try to sign in the onResult callback is called with a signInState equals to SignInState.DONE, but when we tries to get the token (both sync or async), a Exception raises: \"getTokens does not support retrieving tokens while signed-out\"\r\n\r\nLooking in the log, there is a exception after the sign in on it:\r\n\r\n> java.lang.RuntimeException: Error in federating the token.\r\n        at com.amazonaws.mobile.client.AWSMobileClient$8.run(AWSMobileClient.java:1484)\r\n        at com.amazonaws.mobile.client.internal.InternalCallback.await(InternalCallback.java:115)\r\n        at com.amazonaws.mobile.client.AWSMobileClient.federatedSignInWithoutAssigningState(AWSMobileClient.java:1414)\r\n        at com.amazonaws.mobile.client.AWSMobileClient$6$1.onSuccess(AWSMobileClient.java:1156)\r\n        at com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.getSession(CognitoUser.java:745)\r\n        at com.amazonaws.mobile.client.AWSMobileClient$6.run(AWSMobileClient.java:1142)\r\n        at com.amazonaws.mobile.client.internal.InternalCallback$1.run(InternalCallback.java:101)\r\n        at java.lang.Thread.run(Thread.java:818)\r\n     Caused by: com.amazonaws.services.cognitoidentity.model.NotAuthorizedException: Token is not from a supported provider of this identity pool. (Service: AmazonCognitoIdentity; Status Code: 400; Error Code: NotAuthorizedException; Request ID: 3c924e1f-70ea-11e9-80ca-01ad7f96c8b7)\r\n        at com.amazonaws.http.AmazonHttpClient.handleErrorResponse(AmazonHttpClient.java:730)\r\n        at com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:405)\r\n        at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:212)\r\n        at com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.invoke(AmazonCognitoIdentityClient.java:1658)\r\n        at com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.getId(AmazonCognitoIdentityClient.java:739)\r\n        at com.amazonaws.auth.AWSAbstractCognitoIdentityProvider.getIdentityId(AWSAbstractCognitoIdentityProvider.java:172)\r\n        at com.amazonaws.mobile.client.AWSMobileClientCognitoIdentityProvider.refresh(AWSMobileClient.java:3600)\r\n        at com.amazonaws.auth.CognitoCredentialsProvider.startSession(CognitoCredentialsProvider.java:678)\r\n        at com.amazonaws.auth.CognitoCredentialsProvider.refresh(CognitoCredentialsProvider.java:631)\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.refresh(CognitoCachingCredentialsProvider.java:510)\r\n        at com.amazonaws.mobile.client.AWSMobileClient.federateWithCognitoIdentity(AWSMobileClient.java:1515)\r\n        at com.amazonaws.mobile.client.AWSMobileClient$8.run(AWSMobileClient.java:1471)\r\n\r\n**To Reproduce**\r\nJust initialize the AWSMobileClient, call signIn with a valid username and password and call getTokens(). The most akward is that signIn is returning a SignInState.DONE, even with this exception.\r\n\r\n\r\n**build.gradle (app)**\r\n```\r\nimplementation \"com.amazonaws:aws-android-sdk-mobile-client:2.13.4\"\r\nimplementation \"com.amazonaws:aws-android-sdk-auth-userpools:2.13.4\"\r\n```\r\n\r\n**MainApplication.kt (extends Application)**\r\n```\r\nAWSMobileClient.getInstance().initialize(applicationContext, object : Callback<UserStateDetails> {\r\n    override fun onError(e: Exception?) {\r\n        Timber.e(e, \"An error occurred while tried to init the AWSMobileClient\")\r\n    }\r\n    override fun onResult(result: UserStateDetails?) {\r\n        Timber.d(\"Successfully started the AWSMobileClient: ${result?.userState}\") // Reaches here with SIGNED_OUT\r\n    }\r\n})\r\n```\r\n\r\n**Repository.kt**\r\n```\r\nsuspend fun signInOnCognito(email: String, password: String): String =\r\n        suspendCoroutine { continuation ->\r\n            val signInCallback = object : Callback<SignInResult> {\r\n                override fun onResult(result: SignInResult) {\r\n                    Timber.d(\"Sign in result: ${result.signInState}\")\r\n                    fetchToken(continuation)\r\n                }\r\n\r\n                override fun onError(exception: java.lang.Exception) {\r\n                    continuation.resumeWithException(exception)\r\n                }\r\n            }\r\n\r\n            AWSMobileClient.getInstance().signIn(email, password, null, signInCallback)\r\n        }\r\n\r\nfun fetchToken(continuation: Continuation<String>) {\r\n    val getTokensCallback = object : Callback<Tokens> {\r\n        override fun onResult(result: Tokens) {\r\n            Timber.d(\"Got the user token\")\r\n            continuation.resume(result.idToken.tokenString)\r\n        }\r\n\r\n        override fun onError(e: Exception) {\r\n            Timber.e(e, \"Cannot get the user token\")\r\n            continuation.resumeWithException(e)\r\n        }\r\n\r\n    }\r\n    AWSMobileClient.getInstance().getTokens(getTokensCallback)\r\n}\r\n```\r\n\r\n**awsconfiguration.json**\r\n```\r\n{\r\n    \"UserAgent\": \"aws-amplify-cli/0.1.0\",\r\n    \"Version\": \"1.0\",\r\n    \"IdentityManager\": {\r\n        \"Default\": {}\r\n    },\r\n    \"CredentialsProvider\": {\r\n        \"CognitoIdentity\": {\r\n            \"Default\": {\r\n                \"PoolId\": \"XXXXXXXXXXXXXXXXXXXXXXXXXX\",\r\n                \"Region\": \"us-east-1\"\r\n            }\r\n        }\r\n    },\r\n    \"CognitoUserPool\": {\r\n        \"Default\": {\r\n            \"PoolId\": \"XXXXXXXXXXXXXXXXXXXXXXXXXX\",\r\n            \"AppClientId\": \"XXXXXXXXXXXXXXXXXXXXXXXXXX\",\r\n            \"AppClientSecret\": \"XXXXXXXXXXXXXXXXXXXXXXXXXX\",\r\n            \"Region\": \"us-east-1\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\nAmazon Cognito\r\n\r\n**Expected behavior**\r\nSign in and retrieve the jwt token string.\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.13.4\r\n - Device: Any\r\n - Android Version: Any\r\n - Specific to simulators: No\r\n", "commits": {}, "title": "Cognito - Sign In - Error in federating the token", "created": "2019-05-07 17:51:42", "user": "luanalbineli", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/942", "commitsDetails": [], "ttf": 26.00027777777778}, {"labels": ["Bug", "Core", "Needs Info from Requester"], "closed": "2019-09-03 17:28:46", "body": "**Describe the bug**\r\nUpgrade to 2.13.3 make app crash.\r\n\r\n**To Reproduce**\r\nA code sample or steps:\r\nI use dagger2 to inject s3client.\r\nBelow is my code in AmazonModule(dagger module) to initialize CognitoCachingCredentialsProvider.\r\n```\r\nval provider = CognitoCachingCredentialsProvider(activity, BuildConfig.COGNITO_POOL_ID, Regions.AP_NORTHEAST_2)\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\nApp crash\r\n\r\n**Expected behavior**\r\nNon crash\r\n\r\n**Screenshots**\r\nApp crash\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.13.3\r\n - Device: Many android device\r\n - Android Version: android 4, 5\r\n - Specific to simulators: No\r\n\r\n**Additional context**\r\nI added the call stack of my crash\r\n```\r\nCaused by java.lang.IllegalArgumentException: key == null\r\n       at javax.crypto.spec.SecretKeySpec.(SecretKeySpec.java:59)\r\n       at com.amazonaws.internal.keyvaluestore.KeyProvider18.getKey(KeyProvider18.java:80)\r\n       at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.setPersistenceEnabled(AWSKeyValueStore.java:138)\r\n       at com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.(SourceFile:1138)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.initialize(CognitoCachingCredentialsProvider.java:425)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.(SourceFile:1425)\r\n       at com.towneers.www.di.modules.AmazonModule.provideCognitoCachingCredentialsProvider$android_50004_realRelease(AmazonModule.java:24)\r\n       at com.towneers.www.di.modules.AmazonModule_ProvideCognitoCachingCredentialsProvider$android_50004_realReleaseFactory.proxyProvideCognitoCachingCredentialsProvider$android_50004_realRelease$53f6d157(AmazonModule_ProvideCognitoCachingCredentialsProvider.java:40)\r\n       at com.towneers.www.di.components.DaggerHoianComponent.getCognitoCachingCredentialsProvider(DaggerHoianComponent.java:1309)\r\n       at com.towneers.www.di.components.DaggerHoianComponent.access$26500(DaggerHoianComponent.java:652)\r\n       at com.towneers.www.di.components.DaggerHoianComponent$PostArticleActivitySubcomponentImpl.injectPostArticleActivity(DaggerHoianComponent.java:6864)\r\n       at com.towneers.www.di.components.DaggerHoianComponent$PostArticleActivitySubcomponentImpl.inject(DaggerHoianComponent.java:6841)\r\n       at com.towneers.www.di.components.DaggerHoianComponent$PostArticleActivitySubcomponentImpl.inject(DaggerHoianComponent.java:6786)\r\n       at dagger.android.DispatchingAndroidInjector.maybeInject(DispatchingAndroidInjector.java:113)\r\n       at dagger.android.DispatchingAndroidInjector.inject(DispatchingAndroidInjector.java:134)\r\n       at dagger.android.AndroidInjection.inject(AndroidInjection.java:59)\r\n       at dagger.android.support.DaggerAppCompatActivity.onCreate(DaggerAppCompatActivity.java:43)\r\n       at com.towneers.www.base.BaseActivity.onCreate(BaseActivity.java:124)\r\n       at com.towneers.www.ui.activity.PostArticleActivity.onCreate(PostArticleActivity.java:135)\r\n       at android.app.Activity.performCreate(Activity.java:5580)\r\n       at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1093)\r\n       at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2400)\r\n       at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2495)\r\n       at android.app.ActivityThread.access$900(ActivityThread.java:170)\r\n       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1304)\r\n       at android.os.Handler.dispatchMessage(Handler.java:102)\r\n       at android.os.Looper.loop(Looper.java:146)\r\n       at android.app.ActivityThread.main(ActivityThread.java:5635)\r\n       at java.lang.reflect.Method.invokeNative(Method.java)\r\n       at java.lang.reflect.Method.invoke(Method.java:515)\r\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1291)\r\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1107)\r\n       at dalvik.system.NativeStart.main(NativeStart.java)\r\n```", "commits": {}, "title": "Error in retrieving the encryption key used for secure storage of credentials", "created": "2019-05-03 00:31:07", "user": "iam1492", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/937", "commitsDetails": [], "ttf": 123.00027777777778}, {"labels": ["Bug", "Needs Info from Requester", "S3"], "closed": "2019-05-03 19:01:31", "body": "**State your question**\r\nI am trying to resume uploads that did not previously upload to S3 (switched device to airplane mode to force 3 failures).\r\n\r\ntransferState = WAITING_FOR_NETWORK\r\n\r\nI have reviewed and made changes based on issue # 618, but I am having no luck. I cannot get the 3 files to upload. See observers from Logcat output:\r\n\r\n<img width=\"1542\" alt=\"Screen Shot 2019-05-02 at 5 12 54 PM\" src=\"https://user-images.githubusercontent.com/7821160/57107283-95f68e80-6cfd-11e9-9a95-422860b5a64d.png\">\r\n\r\n\r\n**Which AWS Services are you utilizing?**\r\nS3 - TransferUtility\r\n\r\n**Provide code snippets (if applicable)**\r\nI have stripped out all my code and am just running the following function to try to resume the upload:\r\n\r\n`\r\n    private fun resumeTransfers () {\r\n        val KEY = MY_KEY\r\n        val SECRET = MY_SECRET\r\n        val credentials = BasicAWSCredentials(KEY, SECRET)\r\n\r\n        val s3Client = AmazonS3Client(credentials, Region.getRegion(Regions.US_EAST_1))\r\n\r\n        val xx = TransferNetworkLossHandler.getInstance(appContext)\r\n        val transferUtility = TransferUtility.builder()\r\n                .context(appContext)\r\n                .awsConfiguration(AWSMobileClient.getInstance().configuration)\r\n                .s3Client(s3Client)\r\n                .build()\r\n\r\n\r\n        val observers = transferUtility.getTransfersWithType(TransferType.UPLOAD)\r\n        Log.i(TAG, \"Stats observers: \" + observers.size)\r\n\r\n        transferUtility.resumeAllWithType(TransferType.UPLOAD)\r\n\r\n        for (observer in observers) {\r\n\r\n            if (TransferState.WAITING.equals(observer.getState()) || TransferState.WAITING_FOR_NETWORK.equals(observer.getState()) || TransferState.IN_PROGRESS.equals(observer.getState())) {\r\n\r\n                observer.refresh()\r\n                Log.i(TAG, \"For observers: \" + observer.toString())\r\n\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\n**Environment(please complete the following information):**\r\n - SDK Version: [2.13.2]\r\n\r\n**Device Information (please complete the following information):**\r\n - Emulator - Nexus 5X API 28 x86 (Android 9, API 28)\r\n\r\n", "commits": {}, "title": "Cannot Resume Upload - transferState = WAITING_FOR_NETWORK", "created": "2019-05-02 21:17:54", "user": "richgabrielli", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/936", "commitsDetails": [], "ttf": 0.0002777777777777778}, {"filteredCommitsReason": {"alsoFixesPhrase": 0, "duplicated": 1, "mergeCommitUsed": 0, "moreThanOneParent": 0, "unavailable": 0, "multipleIssueFixes": 1}, "labels": ["Awaiting Release", "Bug", "S3"], "user": "chorniyn", "filteredCommits": [], "commits": {"24e117e87ba9f839e2f0a4d481f70161e49ebb6f": {"commitUser": "kvasukib", "commitGHEventType": "referenced"}, "37d714fe6c944b24bfd93a4e388c31a8f471142a": {"commitUser": "aws-amplify-ops", "commitGHEventType": "closed"}}, "created": "2019-04-15 19:44:57", "commitsDetails": [{"commitMessage": "", "commitParents": [], "commitHash": "24e117e87ba9f839e2f0a4d481f70161e49ebb6f", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "kvasukib", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "Make checking for TransferNetworkLossHandler optional. (#900)\n\n* Make checking for TransferNetworkLossHandler optional.\r\n\r\nFixes #899\r\n\r\n* Remove isNetworkHandlerRegisteredAndNotConnected()\r\n", "commitParents": ["19996e8d5978f5fd17b8733a4fe01317165e94b6"], "commitHash": "37d714fe6c944b24bfd93a4e388c31a8f471142a", "commitSpoonAstDiffStats": [{"spoonFilePath": "UploadTask.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobileconnectors.s3.transferutility.UploadTask.isNetworkHandlerRegisteredAndNetworkConnected()", "DEL": 1, "INS": 0, "UPD": 0, "MOV": 4, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobileconnectors.s3.transferutility.UploadTask.call()", "DEL": 1, "INS": 1, "UPD": 2, "MOV": 3, "TOT": 7}, {"spoonMethodName": "com.amazonaws.mobileconnectors.s3.transferutility.UploadTask.uploadMultipartAndWaitForCompletion()", "DEL": 2, "INS": 2, "UPD": 3, "MOV": 5, "TOT": 12}]}], "nameRev": "37d714fe6c944b24bfd93a4e388c31a8f471142a tags/release_v2.16.12~342", "commitUser": "aws-amplify-ops", "authoredDateTime": "2019-04-19 09:58:52", "commitGHEventType": "closed", "commitGitStats": [{"lines": 49, "filePath": "aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/UploadTask.java", "insertions": 27, "deletions": 22}], "commitDateTime": "2019-04-19 09:58:52", "spoonStatsSkippedReason": ""}], "title": "S3 upload hangs up in WAITING_FOR_NETWORK state", "spoonStatsSummary": {"spoonMethodsChanged": 0, "DEL": 0.0, "INS": 0.0, "UPD": 0.0, "MOV": 0.0, "TOT": 0.0, "spoonFilesChanged": 0}, "gitStatsSummary": {"lines": 0.0, "insertions": 0.0, "gitFilesChange": 0, "deletions": 0.0}, "closed": "2019-04-19 17:27:43", "statsSkippedReason": "", "body": "**Bug description**\r\nAfter upgrading the `aws-android-sdk-mobile-client` from `2.12.6` to `2.13.1` the code which uploaded image to S3 against `TransferUtility` stopped working. It was hanging up in `WAITING_FOR_NETWORK` state.\r\n\r\n**How To Reproduce**\r\nNo special circumstances took place: wi-fi connection with internet was available.\r\nThe s3 file upload was initiated with the following code (which worked on aws-sdk `2.13.0` and `2.12.6`)\r\n\r\n```\r\nval s3Client = AmazonS3Client(AWSMobileClient.getInstance(), region((context)))\r\nval observer = TransferUtility.builder().s3Client(s3Client)\r\n        .context(context)\r\n        .awsConfiguration(AWSMobileClient.getInstance().configuration)\r\n        .build()\r\n        .upload(bucketName(context), name, file)\r\nobserver.setTransferListener(listener)\r\n```\r\n\r\nThe transfer listener was like this\r\n```\r\nTransferListener {\r\n\toverride fun onStateChanged(id: Int, state: TransferState?) {\r\n\t\tLog.i(TAG, \"Upload state changed to ${state?.name}\")\r\n\t}\r\n\toverride fun onError(id: Int, ex: java.lang.Exception) {\r\n\t\tLog.e(TAG, \"Failed to upload to S3, job id $jobId\", ex)\r\n\t}\r\n\r\n\toverride fun onProgressChanged(id: Int, bytesCurrent: Long, bytesTotal: Long) {\r\n\t\tshowProgressNotification(bytesCurrent.toInt(), bytesTotal.toInt())\r\n\t}\r\n}\r\n```\r\nWhen upload started, the app received only one `onStateChanged` with `WAITING_FOR_NETWORK` state and no other updates reported to `TransferListener`. File was not uploaded to S3 bucket. \r\n\r\n**Affected AWS service(s)**\r\nS3\r\n\r\n**Expected behavior**\r\nFile should be uploaded with progress updates reported to `TransferListener`\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: `2.13.1`\r\n - Devices: `Xiaomi Mi5s` and `Samsung Galaxy J7 (2016)`\r\n - Android Version: 8.0.0 (Xiaomi) / 8.1.0 (Samsung)\r\n\r\n**Additional context**\r\nThere was such message in the logs (com.amazonaws.mobileconnectors.s3.transferutility.UploadTask):\r\n\r\n```\r\n2019-04-12 17:04:49.831 9610-16011/com.ehawk.repath.staging E/UploadTask: \r\nTransferUtilityException: [com.amazonaws.mobileconnectors.s3.transferutility.TransferUtilityException: TransferNetworkLossHandler is not created. Please call `TransferNetworkLossHandler.getInstance(Context)` to instantiate it before retrieving]\r\n2019-04-12 17:05:23.249 9610-16011/com.ehawk.repath.staging I/UploadTask: Network not connected. Setting the state to WAITING_FOR_NETWORK.\r\n```\r\nAfter that `UploadTask.call()` finished and no actual upload happened\r\n\r\n\r\nQuestions:\r\n1. Is it now mandatory to register `TransferNetworkLossHandler` for being able to use `TransferUtility`?\r\n1. Is there any examples of how that should be done? Is `Application.onCreate()` a valid point to create/register this?", "changesInPackagesGIT": [], "changesInPackagesSPOON": [], "ttf": 3.000277777777778, "numCommits": 0, "url": "https://github.com/aws-amplify/aws-sdk-android/issues/899"}, {"labels": ["Bug", "Cognito", "Needs Info from Requester"], "closed": "2019-08-21 21:33:19", "body": "I'm implementing **CustomAuthChallenge**'. This issue occurs when:\r\n\r\n-  I try to pass user name for getting user session which is lets say 'abc_xyz'\r\n-  Then it comes in '`getAuthenticationDetails`' method of the callback where i set username and auth type.\r\n-  Then '`authenticateChallenge`' method is called in which 'continuation' object is received which has  a username in its params and that username is not the same that i passed but is userId '12121' of that user. \r\n- I set ANSWER in 'authenticateChallenge' and let it continueTask\r\n- '`onFailure`' is called with the error 'Unable to verify secret hash for client'\r\n\r\n I checked the sdk and i saw  that userId is treated as '**usernameInternal**' . If i use userId '12121' in replacement of username 'abc_xyz' instead then it works fine. But in iOS it is working with username and we don't want to disclose userId so using username is mandatory. How can i resolve this issue?", "commits": {}, "title": "Unable to verify secret hash for client in v2.13.1 too but working fine for iOS", "created": "2019-04-09 09:53:29", "user": "usmanrana07", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/889", "commitsDetails": [], "ttf": 134.00027777777777}, {"labels": ["AWSMobileClient", "Bug", "Needs Info from Requester"], "closed": "2019-08-29 17:22:11", "body": "**Describe the bug**\r\nI am using Hosted UI `AWSMobileClient.getInstance().showSignIn` API to authenticate my users. I can not get user token if my app killed. \r\n\r\n**To Reproduce**\r\nLogin by `AWSMobileClient.getInstance().showSignIn` API, the app can get token, identityId and userState is `SIGNED_IN`.\r\nKill the app and open again, the app can not get token (no callback return), but it still can get identityId and userState is `SIGNED_IN`. Even the app call `getTokens` many times, but no callback invoked. However, if I invoke `signOut` API,  the `onError` callback of `getTokens` will be invoked with `java.lang.Exception: getTokens does not support retrieving tokens while signed-out`.\r\n\r\n**Which AWS service(s) are affected?**\r\nAWSMobileClient \r\n\r\n**Expected behavior**\r\nThe app can get user access token as long as user session is valid (refresh token is valid) even if the app killed. \r\n\r\n**Screenshots**\r\nThe following logs show logs after invoke `getTokens` and `getIdentityId`. As you can see, no `getTokens` callback return, but `getIdentityId` return a valid Id. \r\n<details> \r\n<summary>Click me to see logs</summary>\r\n\r\n```\r\n2019-04-09 12:28:12.603 21157-21174/com.abc.abc D/AWSMobileClient: Inspecting user state details\r\n2019-04-09 12:28:12.605 21157-21174/com.abc.abc I/SplashScreenActivity: Result: SIGNED_IN\r\n2019-04-09 12:28:16.254 21157-21208/com.abc.abc D/AWSMobileClient: Inspecting user state details\r\n2019-04-09 12:28:16.364 21157-21208/com.abc.abc W/AWSMobileClient: Tokens are invalid, please sign-in again.\r\n    java.lang.NullPointerException: Attempt to invoke virtual method 'void com.amazonaws.mobileconnectors.cognitoauth.Auth.setAuthHandler(com.amazonaws.mobileconnectors.cognitoauth.handlers.AuthHandler)' on a null object reference\r\n        at com.amazonaws.mobile.client.AWSMobileClient$8.run(AWSMobileClient.java:1555)\r\n        at com.amazonaws.mobile.client.internal.InternalCallback.await(InternalCallback.java:115)\r\n        at com.amazonaws.mobile.client.AWSMobileClient.getTokens(AWSMobileClient.java:1517)\r\n        at com.amazonaws.mobile.client.AWSMobileClient.getUserStateDetails(AWSMobileClient.java:1011)\r\n        at com.amazonaws.mobile.client.AWSMobileClient.waitForSignIn(AWSMobileClient.java:904)\r\n        at com.amazonaws.mobile.client.AWSMobileClient$8.run(AWSMobileClient.java:1533)\r\n        at com.amazonaws.mobile.client.internal.InternalCallback$1.run(InternalCallback.java:101)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n2019-04-09 12:28:16.364 21157-21208/com.abc.abc D/AWSMobileClient: waitForSignIn: userState:SIGNED_OUT_USER_POOLS_TOKENS_INVALID\r\n2019-04-09 12:28:18.139 21157-21157/com.abc.abc D/MainActivity: getIdentity: ap-southeast-1:e65b4819-078b-495c-8041-73fe0e0d7bd1\r\n```\r\n</details>\r\n\r\nIf I try to call `getTokens` 5 times, then invoke `signOut` API, the `onError` callback of `getTokens` will be invoked 5 times.\r\n\r\n<details> \r\n<summary>Click me to see logs</summary>\r\n\r\n```\r\n2019-04-09 12:29:12.541 21157-21157/com.abc.abc D/CognitoCachingCredentialsProvider: Clearing credentials from SharedPreferences\r\n2019-04-09 12:29:12.544 21157-21157/com.abc.abc D/CognitoCachingCredentialsProvider: Identity id is changed\r\n2019-04-09 12:29:12.544 21157-21157/com.abc.abc D/CognitoCachingCredentialsProvider: Saving identity id to SharedPreferences\r\n2019-04-09 12:29:12.545 21157-21157/com.abc.abc D/CognitoCachingCredentialsProvider: Clearing credentials from SharedPreferences\r\n2019-04-09 12:29:12.547 21157-21157/com.abc.abc D/IdentityManager: Signing out...\r\n2019-04-09 12:29:12.581 21157-21157/com.abc.abc D/AWSMobileClient: Inspecting user state details\r\n2019-04-09 12:29:12.585 21157-21208/com.abc.abc D/AWSMobileClient: Inspecting user state details\r\n2019-04-09 12:29:12.587 21157-21208/com.abc.abc E/MainActivity: onError: java.lang.Exception: getTokens does not support retrieving tokens while signed-out\r\n2019-04-09 12:29:12.588 21157-21254/com.abc.abc D/AWSMobileClient: Inspecting user state details\r\n2019-04-09 12:29:12.590 21157-21254/com.abc.abc D/AWSMobileClient: waitForSignIn: userState:SIGNED_OUT\r\n2019-04-09 12:29:12.590 21157-21254/com.abc.abc E/MainActivity: onError: java.lang.Exception: getTokens does not support retrieving tokens while signed-out\r\n2019-04-09 12:29:12.591 21157-21260/com.abc.abc D/AWSMobileClient: Inspecting user state details\r\n2019-04-09 12:29:12.593 21157-21260/com.abc.abc D/AWSMobileClient: waitForSignIn: userState:SIGNED_OUT\r\n2019-04-09 12:29:12.594 21157-21260/com.abc.abc E/MainActivity: onError: java.lang.Exception: getTokens does not support retrieving tokens while signed-out\r\n2019-04-09 12:29:12.594 21157-21267/com.abc.abc D/AWSMobileClient: Inspecting user state details\r\n2019-04-09 12:29:12.600 21157-21267/com.abc.abc D/AWSMobileClient: waitForSignIn: userState:SIGNED_OUT\r\n2019-04-09 12:29:12.600 21157-21267/com.abc.abc E/MainActivity: onError: java.lang.Exception: getTokens does not support retrieving tokens while signed-out\r\n2019-04-09 12:29:12.601 21157-21274/com.abc.abc D/AWSMobileClient: Inspecting user state details\r\n2019-04-09 12:29:12.603 21157-21274/com.abc.abc D/AWSMobileClient: waitForSignIn: userState:SIGNED_OUT\r\n2019-04-09 12:29:12.604 21157-21274/com.abc.abc E/MainActivity: onError: java.lang.Exception: getTokens does not support retrieving tokens while signed-out\r\n```\r\n</details>\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.13.1\r\n - Device: Nexus 5X\r\n - Android Version: 8.1.0\r\n\r\n**Additional context**\r\nI realized that every time the app initialize AWSMobileClient at the start up time, it print stack trace like the following logs.\r\n\r\n```\r\n2019-04-09 12:24:02.347 20262-20283/com.abc.abc D/AWSMobileClient: getHostedUIJSON: Failed to read config\r\n    java.lang.NullPointerException: Attempt to invoke virtual method 'org.json.JSONObject com.amazonaws.mobile.config.AWSConfiguration.optJsonObject(java.lang.String)' on a null object reference\r\n        at com.amazonaws.mobile.client.AWSMobileClient.getHostedUIJSONFromJSON(AWSMobileClient.java:636)\r\n        at com.amazonaws.mobile.client.AWSMobileClient.getHostedUIJSON(AWSMobileClient.java:655)\r\n        at com.amazonaws.mobile.client.AWSMobileClient$2.run(AWSMobileClient.java:569)\r\n        at com.amazonaws.mobile.client.internal.InternalCallback$1.run(InternalCallback.java:101)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n```\r\n", "commits": {}, "title": "Authentication by Cognito Hosted UI can not get token if my app killed", "created": "2019-04-09 05:17:10", "user": "HayTran94", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/888", "commitsDetails": [], "ttf": 142.00027777777777}, {"labels": ["AWSMobileClient", "Bug", "Needs Info from Requester", "closing-soon-if-no-response"], "closed": "2019-09-04 23:12:43", "body": "**Describe the bug**\r\nI have already signed in and then I kill app and open app again.\r\nIn my plash screen I call API   AWSMobileClient.getInstance().initialize()  and check the user state is  \"SIGNED_IN\".\r\nAfter that I go to next step, call my backend API which needs token using  AWSMobileClient.getInstance().getTokens(new Callback<Tokens>()) after i call that API. I got user state is \" SIGNED_OUT_USER_POOLS_TOKENS_INVALID\" and This call blocked the thread forever don't return token or any error. \r\n\r\nI know that the token will expire after 1 hour but I have already signed in. Just kill my app and open app again How can i got SIGNED_OUT_USER_POOLS_TOKENS_INVALID after call get token. \r\n\r\nI resolved it by add UserStateListener after getting SIGNED_OUT_USER_POOLS_TOKENS_INVALID i will sign in again but should I do that every time I kill app and open again ?\r\n\r\n**To Reproduce**\r\n\r\n<details><summary>Code and logs</summary>\r\n\r\n```\r\n`My code in plash screen: \r\nAWSMobileClient.getInstance().initialize(getApplicationContext(), new Callback<UserStateDetails>() {\r\n                    @Override\r\n                    public void onResult(UserStateDetails userStateDetails) {\r\n                        Log.i(\"MYLOG\", \"Result: \" + userStateDetails.getUserState());\r\n                        initializeSingletonClass();\r\n\r\n                        if (userStateDetails.getUserState() == UserState.SIGNED_IN) {\r\n                            routeToAppropriatePage(ActMain.class);\r\n                        } else {\r\n                            routeToAppropriatePage(ActLoginOption.class);\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(Exception e) {\r\n                        Log.e(TAG, \"MYLOG\", e);\r\n                        routeToAppropriatePage(ActLoginOption.class);\r\n                    }\r\n                }\r\n        );\r\n        AWSMobileClient.getInstance().addUserStateListener(new UserStateListener() {\r\n            @Override\r\n            public void onUserStateChanged(UserStateDetails details) {\r\n                switch (details.getUserState()) {\r\n                    case GUEST:\r\n                        Log.i(\"MYLOG\", \"user is in guest mode\");\r\n                        break;\r\n                    case SIGNED_OUT:\r\n                        Log.i(\"MYLOG\", \"user is signed out\");\r\n                        break;\r\n                    case SIGNED_IN:\r\n                        Log.i(\"MYLOG\", \"user is signed in\");\r\n                        break;\r\n                    case SIGNED_OUT_USER_POOLS_TOKENS_INVALID:\r\n                        Log.i(\"MYLOG\", \"need to login again\");\r\n                        break;\r\n                    case SIGNED_OUT_FEDERATED_TOKENS_INVALID:\r\n                        Log.i(\"MYLOG\", \"user logged in via federation, but currently needs new tokens\");\r\n                        break;\r\n                    default:\r\n                        Log.e(\"MYLOG\", \"unsupported\");\r\n                }\r\n            }\r\n        });\r\n\r\nI put it onResume function \r\n\r\nMy code when i call get token: \r\n    protected Single<String> getToken() {\r\n        return Single.create((subscribe) -> {\r\n            AWSMobileClient.getInstance().getTokens(new Callback<Tokens>() {\r\n                @Override\r\n                public void onResult(Tokens result) {\r\n                    Log.d(TAG, \"getTokens onResult: access\");\r\n                    subscribe.onSuccess(result.getAccessToken().getTokenString());\r\n                }\r\n\r\n                @Override\r\n                public void onError(Exception e) {\r\n                    Log.d(TAG, \"getTokens onError: \" + e);\r\n                    subscribe.onError(e);\r\n                }\r\n            });\r\n        });\r\n    }\r\nlog: \r\nwhen i go to plash screen: \r\n2019-04-05 16:11:23.495 31573-31784/ I/MYLOG: Result: SIGNED_IN\r\n2019-04-05 16:11:23.674 31573-31842/ I/MYLOG: user is signed in\r\nafter i call get token: \r\n2019-04-05 16:11:23.495 31573-31784/ I/MYLOG: Result: SIGNED_IN\r\n2019-04-05 16:11:23.674 31573-31842/ I/MYLOG: user is signed in\r\n2019-04-05 16:11:24.369 31573-31916/ I/MYLOG: need to login again`\r\n```\r\n\r\n</details>\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.13.0\r\n - Device: Samsung, xiaomi, Redmi\r\n - Android Version: 7.1.1, 8.1.0\r\n\r\nI'm waiting for your feedback.\r\nThanks\r\n", "commits": {}, "title": "Tokens are invalid, please sign-in again after call AWSMobileClient.getInstance().getTokens(callback)", "created": "2019-04-05 09:52:35", "user": "tvanmanh", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/873", "commitsDetails": [], "ttf": 152.00027777777777}, {"labels": ["Bug", "KinesisVideo"], "closed": "2019-06-24 23:14:11", "body": "**Describe the bug**\r\nThe streaming video in Kinesis Video Stream Console shows with wrong orientation. Both modes (landscape and portrait) have the same stream rotation on console preview  - 90 degrees. Also withCameraOrientation() for AndroidCameraMediaSourceConfiguration does not fix this, stream not event react to this value.\r\n\r\n**To Reproduce**\r\nConfigure Camera Media Source with with this parameters:\r\n```\r\nAndroidCameraMediaSourceConfiguration.builder()\r\n.withCameraId(\"0\")\r\n.withEncodingMimeType(\"video/avc\")\r\n.withHorizontalResolution(320)\r\n.withVerticalResolution(240)\r\n.withCameraFacing(0)\r\n.withIsEncoderHardwareAccelerated(true)\r\n.withFrameRate(20)\r\n.withRetentionPeriodInHours(1)\r\n.withEncodingBitRate(128 * 1024)\r\n.withCameraOrientation(-90)\r\n.withIsAbsoluteTimecode(false));\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\nKinesis Video Streams\r\n\r\n**Expected behavior**\r\nExpected result is getting correct rotation for stream for portrait mode and make withCameraOrientation() method works.\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.12.6\r\n - Device: Google Pixel 2 XL\r\n - Android Version: 9\r\n\r\n**Additional context**\r\nI reproduce this issue on different devices.\r\n", "commits": {}, "title": "Stream video rotated by 90 degrees on Kinesis Stream", "created": "2019-04-02 09:31:36", "user": "mrkiwi", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/854", "commitsDetails": [], "ttf": 83.00027777777778}, {"labels": ["Bug", "IoT"], "closed": "2019-04-09 16:00:04", "body": "**Describe the bug**\r\n\r\nWhen AWSIotMqttManager tries to reconnect, after ~100-300 attempts to reconnect the app crashes with this error:\r\n`Could not create epoll instance: Too many open files`\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n1. Succesfully connect the AWSIotMqttManager with AWS with autoReconnect enabled\r\n\r\nI use this settings: \r\n```  \r\n  manager.setMaxAutoReconnectAttepts(-1)\r\n  manager.keepAlive = 0\r\n  manager.setReconnectRetryLimits(1, 8)\r\n```\r\n2. Turn off the internet connection\r\n3. AWSIotMqttManager tries to reconnect, after ~100-300 attempts to reconnect the app crashes with the following errors:\r\n```\r\n2019-03-29 20:33:27.285 I/AWSIotMqttManager: schedule Reconnect attempt 158 of -1 in 8 seconds.\r\n2019-03-29 20:33:31.750 I/AWSIotMqttManager: attempting to reconnect to mqtt broker\r\n2019-03-29 20:33:31.776 W/AWSIotMqttManager: Reconnect failed \r\n2019-03-29 20:33:31.779 I/AWSIotMqttManager: schedule Reconnect attempt 159 of -1 in 8 seconds.\r\n2019-03-29 20:33:31.783 A/Looper: Could not create epoll instance: Too many open files\r\n2019-03-29 20:33:31.817 W/zygote: ashmem_create_region failed for 'indirect ref table': Too many open files\r\n2019-03-29 20:33:36.921 I/AWSIotMqttManager: attempting to reconnect to mqtt broker\r\n2019-03-29 20:33:36.925 W/zygote: ashmem_create_region failed for 'indirect ref table': Too many open files\r\n2019-03-29 20:33:36.925 I/AWSIotMqttManager: attempting to reconnect to mqtt broker\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\n\r\nAWS IoT\r\n\r\n**Expected behavior**\r\n\r\nAWSIotMqttManager should continue to reconnect without errors\r\n\r\n**Environment Information (please complete the following information):**\r\n\r\n - AWS Android SDK Version: \r\n`'com.amazonaws:aws-android-sdk-core:2.10.+'`\r\n` 'com.amazonaws:aws-android-sdk-iot:2.6.+'`\r\n\r\n - Device: Huawei Watch 2\r\n - Android Version: 8.0\r\n - Specific to simulators: no\r\n\r\n**Additional context**\r\n\r\nThe wearOS devices are used in the environment with a specific network setup which causes a huge number of reconnect attempts. So, from time to time the app crashes.\r\nI'm wondering how to fix or avoid such crashes?\r\n", "commits": {}, "title": "Got \"Could not create epoll instance: Too many open files\" error after ~150 unsuccessful reconnecting attempts", "created": "2019-03-31 13:22:59", "user": "yoshka88", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/842", "commitsDetails": [], "ttf": 9.000277777777777}, {"labels": ["Bug", "IoT", "Needs Info from Requester"], "closed": "2019-04-05 16:25:14", "body": "**Describe the bug**\r\nWhen I try to connect to the AWS using AwsIotMqttManager and the device time is out of sync, I'm getting the 403 response. Setting time offset using SDKGlobalConfiguration.setGlobalTimeOffset() doesn't affect this.\r\n\r\n**To Reproduce**\r\n1. Disable device's automatic time setting and set time to 10 minutes off\r\n2. Try connecting to AWS using AwsIotMqttManager\r\n\r\n**Which AWS service(s) are affected?**\r\nAWS IoT\r\n\r\n**Expected behavior**\r\nAdding the global time offset should work with IoT\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: aws-android-sdk-iot:2.12.5\r\n - Device: Pixel 2 XL\r\n - Android Version: Pie 9\r\n - Specific to simulators: No\r\n\r\n**Additional context**\r\nIt seems that AwsIotMqttManager uses System.currentTimeMillis() when generating the signed AwsIoT websocket url.\r\n", "commits": {}, "title": "AWS IoT: 403 response when the device time is out of sync", "created": "2019-03-26 09:08:02", "user": "slomin", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/814", "commitsDetails": [], "ttf": 10.000277777777777}, {"labels": ["Bug", "Cognito", "closing-soon-if-no-response"], "closed": "2019-04-08 10:33:55", "body": "**Describe the bug**\r\nFunction isAuthenticated() from cognitoauth returns always false even after successful login.\r\n\r\n**To Reproduce**\r\nDownload and configure the cognitoauth sample for android https://github.com/awslabs/aws-sdk-android-samples. \r\nAdd the following line to the onSuccess of the AuthHandler:\r\n```\r\nLog.d(TAG, \"Is user signed = \" + auth.isAuthenticated());\r\n```\r\nAuthenticate and see the logs. _false_ is returned even after a successful login.\r\n\r\n**Which AWS service(s) are affected?**\r\ncognitoauth\r\n\r\n**Expected behavior**\r\nisAuthenticated() should return true after a successful login.\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Cognito Auth SDK Version: 2.12.+\r\n - Device: Simulator, but should occur in any\r\n - Android Version: 9.0 (haven't tried in others, but suspect that the same will occur)\r\n\r\n**Additional context**\r\nThis only occurs in the latest version of cognito auth sdk (2.12.+). In version 2.11.+ isAuthenticated() works as expected.\r\nSimilar issue to https://github.com/aws-amplify/aws-sdk-android/issues/508 but that one was probably fixed long ago.", "commits": {}, "title": "Cognito Auth isAuthenticated always returning false", "created": "2019-03-23 14:00:59", "user": "bluetrickpt", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/813", "commitsDetails": [], "ttf": 15.000277777777777}, {"filteredCommitsReason": {"alsoFixesPhrase": 0, "duplicated": 3, "mergeCommitUsed": 0, "moreThanOneParent": 0, "unavailable": 0, "multipleIssueFixes": 2}, "labels": ["AWSMobileClient", "Bug", "closing-soon-if-no-response"], "user": "BillBunting", "filteredCommits": [], "commits": {"254e91bdc9838dd48cdd089fdc42451245769edf": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "7d0b3a77d47735c4a38968b078383a80e6d772d4": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "0168363c9d9192f3240f4bd486c931d2ab81c293": {"commitUser": "rohandubal", "commitGHEventType": "referenced"}, "64ac4a4e83d5fb2d2df7d6630317277ab82c5bf7": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "b054ee84d10f5a7ea682c543c2839599e7cbedd2": {"commitUser": "sunchunqiang", "commitGHEventType": "referenced"}}, "created": "2019-03-22 00:28:54", "commitsDetails": [{"commitMessage": "", "commitParents": [], "commitHash": "254e91bdc9838dd48cdd089fdc42451245769edf", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "Update federatedSignIn to immediately contact service; refresh Google/Facebook from drop-in UI\n\nUpdated `federatedSignIn()` method to contact the service immediately to validate tokens. The `signIn()` method will also attempt to federated immediately when applicable. See [issue #800](https://github.com/aws-amplify/aws-sdk-android/issues/800)\nFix Google or Facebook refresh when using the drop-in UI. See [issue #809](https://github.com/aws-amplify/aws-sdk-android/issues/809), [issue #700](https://github.com/aws-amplify/aws-sdk-android/issues/700)\nAnnotated methods that are designed to be called from UI thread or from a background thread with @AnyThread and @WorkerThread, respectively.\n", "commitParents": ["45e71599b6f3f14c359f96f820db21a1c0f5e27f"], "commitHash": "7d0b3a77d47735c4a38968b078383a80e6d772d4", "commitSpoonAstDiffStats": [{"spoonFilePath": "AWSMobileClient.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6.run().1.run()", "DEL": 0, "INS": 0, "UPD": 5, "MOV": 7, "TOT": 12}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.util.Map,com.amazonaws.mobile.client.Callback).15", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getAWSCredentials(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.verifyUserAttribute(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._initialize(android.content.Context,com.amazonaws.mobile.config.AWSConfiguration,com.amazonaws.mobile.client.Callback).2.run()", "DEL": 12, "INS": 12, "UPD": 1, "MOV": 0, "TOT": 25}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._forgotPassword(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmVerifyUserAttribute(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signOut()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.updateUserAttributes(java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._resendSignUp(java.lang.String,com.amazonaws.mobile.client.Callback).10", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.handleAuthResponse(android.content.Intent)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context,com.amazonaws.mobile.config.AWSConfiguration,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._initialize(android.content.Context,com.amazonaws.mobile.config.AWSConfiguration,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.resendSignUp(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.currentUserState(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.getMFACode(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.MultiFactorAuthenticationContinuation)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run().1.onFailure(java.lang.Exception)", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.currentUserState()", "DEL": 0, "INS": 1, "UPD": 2, "MOV": 3, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback).4.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserSession,com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoDevice)", "DEL": 1, "INS": 0, "UPD": 5, "MOV": 0, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmUpdateUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 6, "TOT": 7}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmUpdateUserAttribute(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getUserAttributes(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.lang.String,com.amazonaws.mobile.client.Callback).14", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._changePassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).13", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInDropInUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).23", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback).18.run()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getUserAttributes(com.amazonaws.mobile.client.Callback).16.run()", "DEL": 1, "INS": 0, "UPD": 0, "MOV": 1, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 4, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmForgotPassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback).17", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInDropInUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUserAttributes()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.getAuthenticationDetails(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationContinuation,java.lang.String)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUsername()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmForgotPassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getUserAttributes(com.amazonaws.mobile.client.Callback).16", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run().1.onResult(com.amazonaws.mobile.client.internal.oauth2.AuthorizeResponse).1.onResult(com.amazonaws.mobile.client.internal.oauth2.OAuth2Tokens)", "DEL": 0, "INS": 0, "UPD": 4, "MOV": 1, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.addUserStateListener(com.amazonaws.mobile.client.UserStateListener)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getTokens()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._changePassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignUp(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmForgotPassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).12", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run()", "DEL": 0, "INS": 0, "UPD": 5, "MOV": 0, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoauth.AuthUserSession).2.run()", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).19", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback).17.run()", "DEL": 0, "INS": 0, "UPD": 0, "MOV": 1, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.resendSignUp(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.amazonaws.mobile.client.Callback).8", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).19.run()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 1, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._resendSignUp(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signOut(com.amazonaws.mobile.client.SignOutOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 4, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6.run()", "DEL": 3, "INS": 0, "UPD": 2, "MOV": 4, "TOT": 9}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.authenticationChallenge(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.ChallengeContinuation)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run().1.onResult(com.amazonaws.mobile.client.internal.oauth2.AuthorizeResponse).1.onResult(com.amazonaws.mobile.client.internal.oauth2.OAuth2Tokens).1.onError(java.lang.Exception)", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 2, "TOT": 4}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getTokens(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._forgotPassword(java.lang.String,com.amazonaws.mobile.client.Callback).11", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.changePassword(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignUp(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.forgotPassword(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run()", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback).18", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUserAttributes(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmVerifyUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 2, "UPD": 0, "MOV": 6, "TOT": 8}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run().1.onResult(com.amazonaws.mobile.client.internal.oauth2.AuthorizeResponse).1.onResult(com.amazonaws.mobile.client.internal.oauth2.OAuth2Tokens).1.onResult(com.amazonaws.mobile.client.UserStateDetails)", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 3, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.forgotPassword(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUserStateDetails(boolean)", "DEL": 0, "INS": 4, "UPD": 1, "MOV": 0, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback).4.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserSession,com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoDevice).1.onResult(com.amazonaws.mobile.client.UserStateDetails)", "DEL": 0, "INS": 0, "UPD": 0, "MOV": 1, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignUp(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signOut(com.amazonaws.mobile.client.SignOutOptions).5.run()", "DEL": 0, "INS": 0, "UPD": 5, "MOV": 0, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signOut(com.amazonaws.mobile.client.SignOutOptions)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getDeviceOperations()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context,com.amazonaws.mobile.client.AWSStartupHandler).25", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback).18.run()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmForgotPassword(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.changePassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signOut(com.amazonaws.mobile.client.SignOutOptions).5", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback).4", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.isSignedIn()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.onFailure(java.lang.Exception)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getAWSCredentials()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).20", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInDropInUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).23.run()", "DEL": 0, "INS": 0, "UPD": 6, "MOV": 0, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getIdentityId()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signIn(java.lang.String,java.lang.String,java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.removeUserStateListener(com.amazonaws.mobile.client.UserStateListener)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignUp(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).9", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).7.run()", "DEL": 0, "INS": 2, "UPD": 0, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context).24", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6.end(com.amazonaws.mobile.client.UserStateDetails)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run()", "DEL": 1, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 3}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoauth.AuthUserSession)", "DEL": 0, "INS": 0, "UPD": 4, "MOV": 0, "TOT": 4}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.releaseSignInWait()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}]}, {"spoonFilePath": "AWSMobileClientTest.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.deleteAllUsers(java.lang.String)", "DEL": 1, "INS": 2, "UPD": 8, "MOV": 9, "TOT": 20}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testFederate()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}]}, {"spoonFilePath": "UserStateDetails.java", "spoonMethods": []}, {"spoonFilePath": "GoogleSignInProvider.java", "spoonMethods": []}], "nameRev": "7d0b3a77d47735c4a38968b078383a80e6d772d4 tags/release_v2.16.12~378^2~14", "commitUser": "minbi", "authoredDateTime": "2019-04-02 10:07:08", "commitGHEventType": "referenced", "commitGitStats": [{"lines": 7, "filePath": "CHANGELOG.md", "insertions": 7, "deletions": 0}, {"lines": 218, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java", "insertions": 182, "deletions": 36}, {"lines": 1, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/UserStateDetails.java", "insertions": 0, "deletions": 1}, {"lines": 4, "filePath": "aws-android-sdk-auth-google/src/main/java/com/amazonaws/mobile/auth/google/GoogleSignInProvider.java", "insertions": 2, "deletions": 2}, {"lines": 43, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTest.java", "insertions": 31, "deletions": 12}], "commitDateTime": "2019-04-02 12:24:03", "spoonStatsSkippedReason": ""}, {"commitMessage": "Fix isAuthenticated in CognitoAuth caused by scopes unmarshalling (#874)\n\n* [CognitoAuth] Fix string to set logic that caused isAuthenticated to return false #809\r\n\r\n* Update CHANGELOG.md\r\n", "commitParents": ["45c2032e8109b4a32c19ccca7888f21766d69f60"], "commitHash": "0168363c9d9192f3240f4bd486c931d2ab81c293", "commitSpoonAstDiffStats": [{"spoonFilePath": "LocalDataManager.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoauth.util.LocalDataManager.setFromString(java.lang.String)", "DEL": 1, "INS": 4, "UPD": 0, "MOV": 1, "TOT": 6}]}], "nameRev": "0168363c9d9192f3240f4bd486c931d2ab81c293 tags/release_v2.16.12~362", "commitUser": "rohandubal", "authoredDateTime": "2019-04-05 11:07:42", "commitGHEventType": "referenced", "commitGitStats": [{"lines": 3, "filePath": "CHANGELOG.md", "insertions": 3, "deletions": 0}, {"lines": 1, "filePath": ".idea/modules.xml", "insertions": 1, "deletions": 0}, {"lines": 8, "filePath": "aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/util/LocalDataManager.java", "insertions": 7, "deletions": 1}], "commitDateTime": "2019-04-05 11:07:42", "spoonStatsSkippedReason": ""}, {"commitMessage": "Update federatedSignIn to immediately contact service; refresh Google/Facebook from drop-in UI\n\nUpdated `federatedSignIn()` method to contact the service immediately to validate tokens. The `signIn()` method will also attempt to federated immediately when applicable. See [issue #800](https://github.com/aws-amplify/aws-sdk-android/issues/800)\nFix Google or Facebook refresh when using the drop-in UI. See [issue #809](https://github.com/aws-amplify/aws-sdk-android/issues/809), [issue #700](https://github.com/aws-amplify/aws-sdk-android/issues/700)\nAnnotated methods that are designed to be called from UI thread or from a background thread with @AnyThread and @WorkerThread, respectively.\n", "commitParents": ["1385b0489a80df04c2f6f7fe997f336c804e76c3"], "commitHash": "b054ee84d10f5a7ea682c543c2839599e7cbedd2", "commitSpoonAstDiffStats": [{"spoonFilePath": "AWSMobileClient.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6.run().1.run()", "DEL": 0, "INS": 0, "UPD": 5, "MOV": 7, "TOT": 12}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.util.Map,com.amazonaws.mobile.client.Callback).15", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getAWSCredentials(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.verifyUserAttribute(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._initialize(android.content.Context,com.amazonaws.mobile.config.AWSConfiguration,com.amazonaws.mobile.client.Callback).2.run()", "DEL": 12, "INS": 12, "UPD": 1, "MOV": 0, "TOT": 25}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._forgotPassword(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmVerifyUserAttribute(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signOut()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.updateUserAttributes(java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._resendSignUp(java.lang.String,com.amazonaws.mobile.client.Callback).10", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.handleAuthResponse(android.content.Intent)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context,com.amazonaws.mobile.config.AWSConfiguration,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._initialize(android.content.Context,com.amazonaws.mobile.config.AWSConfiguration,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.resendSignUp(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.currentUserState(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.getMFACode(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.MultiFactorAuthenticationContinuation)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run().1.onFailure(java.lang.Exception)", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.currentUserState()", "DEL": 0, "INS": 1, "UPD": 2, "MOV": 3, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback).4.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserSession,com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoDevice)", "DEL": 1, "INS": 0, "UPD": 5, "MOV": 0, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmUpdateUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 6, "TOT": 7}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmUpdateUserAttribute(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getUserAttributes(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.lang.String,com.amazonaws.mobile.client.Callback).14", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._changePassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).13", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInDropInUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).23", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback).18.run()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getUserAttributes(com.amazonaws.mobile.client.Callback).16.run()", "DEL": 1, "INS": 0, "UPD": 0, "MOV": 1, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 4, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmForgotPassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback).17", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInDropInUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUserAttributes()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.getAuthenticationDetails(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationContinuation,java.lang.String)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUsername()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmForgotPassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getUserAttributes(com.amazonaws.mobile.client.Callback).16", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run().1.onResult(com.amazonaws.mobile.client.internal.oauth2.AuthorizeResponse).1.onResult(com.amazonaws.mobile.client.internal.oauth2.OAuth2Tokens)", "DEL": 0, "INS": 0, "UPD": 4, "MOV": 1, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.addUserStateListener(com.amazonaws.mobile.client.UserStateListener)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getTokens()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._changePassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignUp(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmForgotPassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).12", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run()", "DEL": 0, "INS": 0, "UPD": 5, "MOV": 0, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoauth.AuthUserSession).2.run()", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).19", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback).17.run()", "DEL": 0, "INS": 0, "UPD": 0, "MOV": 1, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.resendSignUp(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.amazonaws.mobile.client.Callback).8", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).19.run()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 1, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._resendSignUp(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signOut(com.amazonaws.mobile.client.SignOutOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 4, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6.run()", "DEL": 3, "INS": 0, "UPD": 2, "MOV": 4, "TOT": 9}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.authenticationChallenge(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.ChallengeContinuation)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run().1.onResult(com.amazonaws.mobile.client.internal.oauth2.AuthorizeResponse).1.onResult(com.amazonaws.mobile.client.internal.oauth2.OAuth2Tokens).1.onError(java.lang.Exception)", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 2, "TOT": 4}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getTokens(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._forgotPassword(java.lang.String,com.amazonaws.mobile.client.Callback).11", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.changePassword(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignUp(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.forgotPassword(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run()", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback).18", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUserAttributes(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmVerifyUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 2, "UPD": 0, "MOV": 6, "TOT": 8}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run().1.onResult(com.amazonaws.mobile.client.internal.oauth2.AuthorizeResponse).1.onResult(com.amazonaws.mobile.client.internal.oauth2.OAuth2Tokens).1.onResult(com.amazonaws.mobile.client.UserStateDetails)", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 3, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.forgotPassword(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUserStateDetails(boolean)", "DEL": 0, "INS": 4, "UPD": 1, "MOV": 0, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback).4.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserSession,com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoDevice).1.onResult(com.amazonaws.mobile.client.UserStateDetails)", "DEL": 0, "INS": 0, "UPD": 0, "MOV": 1, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignUp(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signOut(com.amazonaws.mobile.client.SignOutOptions).5.run()", "DEL": 0, "INS": 0, "UPD": 5, "MOV": 0, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signOut(com.amazonaws.mobile.client.SignOutOptions)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getDeviceOperations()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context,com.amazonaws.mobile.client.AWSStartupHandler).25", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback).18.run()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmForgotPassword(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.changePassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signOut(com.amazonaws.mobile.client.SignOutOptions).5", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback).4", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.isSignedIn()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.onFailure(java.lang.Exception)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getAWSCredentials()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).20", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInDropInUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).23.run()", "DEL": 0, "INS": 0, "UPD": 6, "MOV": 0, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getIdentityId()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signIn(java.lang.String,java.lang.String,java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.removeUserStateListener(com.amazonaws.mobile.client.UserStateListener)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignUp(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).9", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).7.run()", "DEL": 0, "INS": 2, "UPD": 0, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context).24", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6.end(com.amazonaws.mobile.client.UserStateDetails)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run()", "DEL": 1, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 3}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoauth.AuthUserSession)", "DEL": 0, "INS": 0, "UPD": 4, "MOV": 0, "TOT": 4}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.releaseSignInWait()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}]}, {"spoonFilePath": "AWSMobileClientTest.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.deleteAllUsers(java.lang.String)", "DEL": 1, "INS": 2, "UPD": 8, "MOV": 9, "TOT": 20}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testFederate()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}]}, {"spoonFilePath": "UserStateDetails.java", "spoonMethods": []}, {"spoonFilePath": "GoogleSignInProvider.java", "spoonMethods": []}], "nameRev": "b054ee84d10f5a7ea682c543c2839599e7cbedd2 tags/release_v2.16.12~394", "commitUser": "sunchunqiang", "authoredDateTime": "2019-04-02 10:07:08", "commitGHEventType": "referenced", "commitGitStats": [{"lines": 7, "filePath": "CHANGELOG.md", "insertions": 7, "deletions": 0}, {"lines": 218, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java", "insertions": 182, "deletions": 36}, {"lines": 1, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/UserStateDetails.java", "insertions": 0, "deletions": 1}, {"lines": 4, "filePath": "aws-android-sdk-auth-google/src/main/java/com/amazonaws/mobile/auth/google/GoogleSignInProvider.java", "insertions": 2, "deletions": 2}, {"lines": 43, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTest.java", "insertions": 31, "deletions": 12}], "commitDateTime": "2019-04-02 22:03:38", "spoonStatsSkippedReason": ""}, {"commitMessage": "", "commitParents": [], "commitHash": "64ac4a4e83d5fb2d2df7d6630317277ab82c5bf7", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}], "title": "AWSMobileClient getUserStateDetails: token already federated just fetch credentials - returns error", "spoonStatsSummary": {"spoonMethodsChanged": 0, "DEL": 0.0, "INS": 0.0, "UPD": 0.0, "MOV": 0.0, "TOT": 0.0, "spoonFilesChanged": 0}, "gitStatsSummary": {"lines": 0.0, "insertions": 0.0, "gitFilesChange": 0, "deletions": 0.0}, "closed": "2019-04-06 03:49:30", "statsSkippedReason": "", "body": "**Describe the bug**\r\nDrop in UI fails to refresh token for Google sign-in after the token expires. AWSMobileClient logs \"getUserStateDetails: token already federated just fetch credentials\" then throws an exception shown below.\r\n\r\n**To Reproduce**\r\nApp is using AWSMobileClient.getInstance().showSignIn.  Works correctly for Facebook and Cognito User Pools (username/password) and works for Google sign-in upon initial launch and up until the token expires (1 hour). After the app sits for 1 hour of inactivity, the token is not refreshed and the following exception is returned.  If the app is restarted, AWSMobileClient is able to refresh the token (getUserStateDetails: token already federated just fetch credentials returns successfully and does not return any error).\r\n```\r\n2019-03-21 20:15:34.880 25125-25499/com.buntingsoftware.modlist D/AWSMobileClient: Inspecting user state details\r\n2019-03-21 20:15:34.881 25125-25499/com.buntingsoftware.modlist D/AWSMobileClient: hasFederatedToken: true provider: accounts.google.com\r\n2019-03-21 20:15:34.881 25125-25499/com.buntingsoftware.modlist D/AWSMobileClient: getUserStateDetails: token already federated just fetch credentials\r\n2019-03-21 20:15:35.305 25125-25499/com.buntingsoftware.modlist E/CognitoCachingCredentialsProvider: Failure to get credentials\r\n    com.amazonaws.services.cognitoidentity.model.NotAuthorizedException: Unauthenticated access is not supported for this identity pool. (Service: AmazonCognitoIdentity; Status Code: 400; Error Code: NotAuthorizedException; Request ID: 9bddd725-4c37-11e9-9a2a-09359f43ba93)\r\n        at com.amazonaws.http.AmazonHttpClient.handleErrorResponse(AmazonHttpClient.java:730)\r\n        at com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:405)\r\n        at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:212)\r\n        at com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.invoke(AmazonCognitoIdentityClient.java:1477)\r\n        at com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.getId(AmazonCognitoIdentityClient.java:757)\r\n        at com.amazonaws.auth.AWSAbstractCognitoIdentityProvider.getIdentityId(AWSAbstractCognitoIdentityProvider.java:172)\r\n        at com.amazonaws.mobile.client.AWSMobileClientCognitoIdentityProvider.refresh(AWSMobileClient.java:3395)\r\n        at com.amazonaws.auth.CognitoCredentialsProvider.startSession(CognitoCredentialsProvider.java:678)\r\n        at com.amazonaws.auth.CognitoCredentialsProvider.getCredentials(CognitoCredentialsProvider.java:465)\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.getCredentials(CognitoCachingCredentialsProvider.java:480)\r\n        at com.amazonaws.mobile.client.AWSMobileClient.getUserStateDetails(AWSMobileClient.java:911)\r\n        at com.amazonaws.mobile.client.AWSMobileClient.waitForSignIn(AWSMobileClient.java:838)\r\n        at com.amazonaws.mobile.client.AWSMobileClient.getCredentials(AWSMobileClient.java:356)\r\n        at com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.invoke(AmazonDynamoDBClient.java:5200)\r\n        at com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.query(AmazonDynamoDBClient.java:2163)\r\n        at com.amazonaws.mobileconnectors.dynamodbv2.dynamodbmapper.DynamoDBMapper.queryPage(DynamoDBMapper.java:2489)\r\n        at com.amazonaws.mobileconnectors.dynamodbv2.dynamodbmapper.DynamoDBMapper.queryPage(DynamoDBMapper.java:2464)\r\n        at com.buntingsoftware.modlist.ModListDAOImpl.getModFeed(ModListDAOImpl.java:705)\r\n        at com.buntingsoftware.modlist.modfeed.ModFeedFragment$GetFeedTask.doInBackground(ModFeedFragment.java:344)\r\n        at com.buntingsoftware.modlist.modfeed.ModFeedFragment$GetFeedTask.doInBackground(ModFeedFragment.java:326)\r\n        at android.os.AsyncTask$2.call(AsyncTask.java:304)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n        at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:243)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n        at java.lang.Thread.run(Thread.java:761)\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\n\r\n```\r\n    implementation 'com.amazonaws:aws-android-sdk-core:2.12.5'\r\n    implementation 'com.amazonaws:aws-android-sdk-auth-core:2.12.5@aar'\r\n\r\n    implementation 'com.amazonaws:aws-android-sdk-cognitoauth:2.12.5@aar'\r\n\r\n    implementation 'com.amazonaws:aws-android-sdk-pinpoint:2.12.5'\r\n    implementation 'com.amazonaws:aws-android-sdk-ddb:2.12.5'\r\n    implementation 'com.amazonaws:aws-android-sdk-ddb-mapper:2.12.5'\r\n    implementation('com.amazonaws:aws-android-sdk-mobile-client:2.12.5@aar') { transitive = true }\r\n    implementation('com.amazonaws:aws-android-sdk-auth-userpools:2.12.5@aar') { transitive = true }\r\n\r\n\r\n    implementation 'com.android.support:support-v4:28.0.0'\r\n    implementation('com.amazonaws:aws-android-sdk-auth-facebook:2.12.5@aar') { transitive = true }\r\n\r\n    implementation 'com.android.support:support-v4:28.0.0'\r\n    implementation('com.amazonaws:aws-android-sdk-auth-google:2.12.5@aar') { transitive = true }\r\n\r\n    implementation 'com.android.support:appcompat-v7:28.0.0'\r\n    implementation('com.amazonaws:aws-android-sdk-auth-ui:2.12.5@aar') { transitive = true }\r\n\r\n    implementation('com.amazonaws:aws-android-sdk-apigateway-core:2.12.5') { transitive = true }\r\n    implementation('com.amazonaws:aws-android-sdk-cognitoidentityprovider:2.12.5') { transitive = true }\r\n```\r\n**Expected behavior**\r\nThe token should refresh successfully. \r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: Any\r\n - Device: Any\r\n - Android Version: Any (minSDK version 23, but running on various, compiled 28)\r\n - Specific to simulators: No\r\n\r\n\r\n", "changesInPackagesGIT": [], "changesInPackagesSPOON": [], "ttf": 15.000277777777777, "numCommits": 0, "url": "https://github.com/aws-amplify/aws-sdk-android/issues/809"}, {"filteredCommitsReason": {"alsoFixesPhrase": 0, "duplicated": 2, "mergeCommitUsed": 0, "moreThanOneParent": 0, "unavailable": 0, "multipleIssueFixes": 1}, "labels": ["AWSMobileClient", "Bug"], "user": "HayTran94", "filteredCommits": [], "commits": {"254e91bdc9838dd48cdd089fdc42451245769edf": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "7d0b3a77d47735c4a38968b078383a80e6d772d4": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "b054ee84d10f5a7ea682c543c2839599e7cbedd2": {"commitUser": "sunchunqiang", "commitGHEventType": "referenced"}}, "created": "2019-03-18 10:17:14", "commitsDetails": [{"commitMessage": "", "commitParents": [], "commitHash": "254e91bdc9838dd48cdd089fdc42451245769edf", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "Update federatedSignIn to immediately contact service; refresh Google/Facebook from drop-in UI\n\nUpdated `federatedSignIn()` method to contact the service immediately to validate tokens. The `signIn()` method will also attempt to federated immediately when applicable. See [issue #800](https://github.com/aws-amplify/aws-sdk-android/issues/800)\nFix Google or Facebook refresh when using the drop-in UI. See [issue #809](https://github.com/aws-amplify/aws-sdk-android/issues/809), [issue #700](https://github.com/aws-amplify/aws-sdk-android/issues/700)\nAnnotated methods that are designed to be called from UI thread or from a background thread with @AnyThread and @WorkerThread, respectively.\n", "commitParents": ["45e71599b6f3f14c359f96f820db21a1c0f5e27f"], "commitHash": "7d0b3a77d47735c4a38968b078383a80e6d772d4", "commitSpoonAstDiffStats": [{"spoonFilePath": "AWSMobileClient.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6.run().1.run()", "DEL": 0, "INS": 0, "UPD": 5, "MOV": 7, "TOT": 12}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.util.Map,com.amazonaws.mobile.client.Callback).15", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getAWSCredentials(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.verifyUserAttribute(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._initialize(android.content.Context,com.amazonaws.mobile.config.AWSConfiguration,com.amazonaws.mobile.client.Callback).2.run()", "DEL": 12, "INS": 12, "UPD": 1, "MOV": 0, "TOT": 25}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._forgotPassword(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmVerifyUserAttribute(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signOut()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.updateUserAttributes(java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._resendSignUp(java.lang.String,com.amazonaws.mobile.client.Callback).10", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.handleAuthResponse(android.content.Intent)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context,com.amazonaws.mobile.config.AWSConfiguration,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._initialize(android.content.Context,com.amazonaws.mobile.config.AWSConfiguration,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.resendSignUp(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.currentUserState(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.getMFACode(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.MultiFactorAuthenticationContinuation)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run().1.onFailure(java.lang.Exception)", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.currentUserState()", "DEL": 0, "INS": 1, "UPD": 2, "MOV": 3, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback).4.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserSession,com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoDevice)", "DEL": 1, "INS": 0, "UPD": 5, "MOV": 0, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmUpdateUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 6, "TOT": 7}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmUpdateUserAttribute(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getUserAttributes(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.lang.String,com.amazonaws.mobile.client.Callback).14", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._changePassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).13", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInDropInUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).23", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback).18.run()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 2, "TOT": 3}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getUserAttributes(com.amazonaws.mobile.client.Callback).16.run()", "DEL": 1, "INS": 0, "UPD": 0, "MOV": 1, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 4, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmForgotPassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback).17", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInDropInUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUserAttributes()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.getAuthenticationDetails(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationContinuation,java.lang.String)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUsername()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmForgotPassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getUserAttributes(com.amazonaws.mobile.client.Callback).16", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run().1.onResult(com.amazonaws.mobile.client.internal.oauth2.AuthorizeResponse).1.onResult(com.amazonaws.mobile.client.internal.oauth2.OAuth2Tokens)", "DEL": 0, "INS": 0, "UPD": 4, "MOV": 1, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.addUserStateListener(com.amazonaws.mobile.client.UserStateListener)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getTokens()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._changePassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignUp(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmForgotPassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).12", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run()", "DEL": 0, "INS": 0, "UPD": 5, "MOV": 0, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoauth.AuthUserSession).2.run()", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).19", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback).17.run()", "DEL": 0, "INS": 0, "UPD": 0, "MOV": 1, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.resendSignUp(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.amazonaws.mobile.client.Callback).8", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).19.run()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 1, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._resendSignUp(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signOut(com.amazonaws.mobile.client.SignOutOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 4, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6.run()", "DEL": 3, "INS": 0, "UPD": 2, "MOV": 4, "TOT": 9}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.authenticationChallenge(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.ChallengeContinuation)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run().1.onResult(com.amazonaws.mobile.client.internal.oauth2.AuthorizeResponse).1.onResult(com.amazonaws.mobile.client.internal.oauth2.OAuth2Tokens).1.onError(java.lang.Exception)", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 2, "TOT": 4}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getTokens(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._forgotPassword(java.lang.String,com.amazonaws.mobile.client.Callback).11", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.changePassword(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignUp(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.forgotPassword(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run()", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback).18", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUserAttributes(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmVerifyUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 2, "UPD": 0, "MOV": 6, "TOT": 8}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run().1.onResult(com.amazonaws.mobile.client.internal.oauth2.AuthorizeResponse).1.onResult(com.amazonaws.mobile.client.internal.oauth2.OAuth2Tokens).1.onResult(com.amazonaws.mobile.client.UserStateDetails)", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 3, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.forgotPassword(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUserStateDetails(boolean)", "DEL": 0, "INS": 4, "UPD": 1, "MOV": 0, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback).4.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserSession,com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoDevice).1.onResult(com.amazonaws.mobile.client.UserStateDetails)", "DEL": 0, "INS": 0, "UPD": 0, "MOV": 1, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignUp(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signOut(com.amazonaws.mobile.client.SignOutOptions).5.run()", "DEL": 0, "INS": 0, "UPD": 5, "MOV": 0, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signOut(com.amazonaws.mobile.client.SignOutOptions)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getDeviceOperations()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context,com.amazonaws.mobile.client.AWSStartupHandler).25", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback).18.run()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmForgotPassword(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.changePassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signOut(com.amazonaws.mobile.client.SignOutOptions).5", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback).4", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.isSignedIn()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.onFailure(java.lang.Exception)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getAWSCredentials()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).20", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInDropInUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).23.run()", "DEL": 0, "INS": 0, "UPD": 6, "MOV": 0, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getIdentityId()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signIn(java.lang.String,java.lang.String,java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.removeUserStateListener(com.amazonaws.mobile.client.UserStateListener)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignUp(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).9", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).7.run()", "DEL": 0, "INS": 2, "UPD": 0, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context).24", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6.end(com.amazonaws.mobile.client.UserStateDetails)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run()", "DEL": 1, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 3}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoauth.AuthUserSession)", "DEL": 0, "INS": 0, "UPD": 4, "MOV": 0, "TOT": 4}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.releaseSignInWait()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}]}, {"spoonFilePath": "AWSMobileClientTest.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.deleteAllUsers(java.lang.String)", "DEL": 1, "INS": 2, "UPD": 8, "MOV": 9, "TOT": 20}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testFederate()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}]}, {"spoonFilePath": "UserStateDetails.java", "spoonMethods": []}, {"spoonFilePath": "GoogleSignInProvider.java", "spoonMethods": []}], "nameRev": "7d0b3a77d47735c4a38968b078383a80e6d772d4 tags/release_v2.16.12~378^2~14", "commitUser": "minbi", "authoredDateTime": "2019-04-02 10:07:08", "commitGHEventType": "referenced", "commitGitStats": [{"lines": 7, "filePath": "CHANGELOG.md", "insertions": 7, "deletions": 0}, {"lines": 218, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java", "insertions": 182, "deletions": 36}, {"lines": 1, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/UserStateDetails.java", "insertions": 0, "deletions": 1}, {"lines": 4, "filePath": "aws-android-sdk-auth-google/src/main/java/com/amazonaws/mobile/auth/google/GoogleSignInProvider.java", "insertions": 2, "deletions": 2}, {"lines": 43, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTest.java", "insertions": 31, "deletions": 12}], "commitDateTime": "2019-04-02 12:24:03", "spoonStatsSkippedReason": ""}, {"commitMessage": "Update federatedSignIn to immediately contact service; refresh Google/Facebook from drop-in UI\n\nUpdated `federatedSignIn()` method to contact the service immediately to validate tokens. The `signIn()` method will also attempt to federated immediately when applicable. See [issue #800](https://github.com/aws-amplify/aws-sdk-android/issues/800)\nFix Google or Facebook refresh when using the drop-in UI. See [issue #809](https://github.com/aws-amplify/aws-sdk-android/issues/809), [issue #700](https://github.com/aws-amplify/aws-sdk-android/issues/700)\nAnnotated methods that are designed to be called from UI thread or from a background thread with @AnyThread and @WorkerThread, respectively.\n", "commitParents": ["1385b0489a80df04c2f6f7fe997f336c804e76c3"], "commitHash": "b054ee84d10f5a7ea682c543c2839599e7cbedd2", "commitSpoonAstDiffStats": [{"spoonFilePath": "AWSMobileClient.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6.run().1.run()", "DEL": 0, "INS": 0, "UPD": 5, "MOV": 7, "TOT": 12}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.util.Map,com.amazonaws.mobile.client.Callback).15", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getAWSCredentials(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.verifyUserAttribute(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._initialize(android.content.Context,com.amazonaws.mobile.config.AWSConfiguration,com.amazonaws.mobile.client.Callback).2.run()", "DEL": 12, "INS": 12, "UPD": 1, "MOV": 0, "TOT": 25}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._forgotPassword(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmVerifyUserAttribute(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signOut()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.updateUserAttributes(java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._resendSignUp(java.lang.String,com.amazonaws.mobile.client.Callback).10", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.handleAuthResponse(android.content.Intent)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context,com.amazonaws.mobile.config.AWSConfiguration,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._initialize(android.content.Context,com.amazonaws.mobile.config.AWSConfiguration,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.resendSignUp(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.currentUserState(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.getMFACode(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.MultiFactorAuthenticationContinuation)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run().1.onFailure(java.lang.Exception)", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.currentUserState()", "DEL": 0, "INS": 1, "UPD": 2, "MOV": 3, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback).4.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserSession,com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoDevice)", "DEL": 1, "INS": 0, "UPD": 5, "MOV": 0, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmUpdateUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 6, "TOT": 7}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmUpdateUserAttribute(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getUserAttributes(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.lang.String,com.amazonaws.mobile.client.Callback).14", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._changePassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).13", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInDropInUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).23", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback).18.run()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getUserAttributes(com.amazonaws.mobile.client.Callback).16.run()", "DEL": 1, "INS": 0, "UPD": 0, "MOV": 1, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 4, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmForgotPassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback).17", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInDropInUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUserAttributes()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.getAuthenticationDetails(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationContinuation,java.lang.String)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUsername()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmForgotPassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getUserAttributes(com.amazonaws.mobile.client.Callback).16", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run().1.onResult(com.amazonaws.mobile.client.internal.oauth2.AuthorizeResponse).1.onResult(com.amazonaws.mobile.client.internal.oauth2.OAuth2Tokens)", "DEL": 0, "INS": 0, "UPD": 4, "MOV": 1, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.addUserStateListener(com.amazonaws.mobile.client.UserStateListener)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getTokens()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._changePassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignUp(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmForgotPassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).12", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run()", "DEL": 0, "INS": 0, "UPD": 5, "MOV": 0, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoauth.AuthUserSession).2.run()", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).19", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback).17.run()", "DEL": 0, "INS": 0, "UPD": 0, "MOV": 1, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.resendSignUp(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.amazonaws.mobile.client.Callback).8", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).19.run()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 2, "TOT": 3}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._resendSignUp(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signOut(com.amazonaws.mobile.client.SignOutOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 4, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6.run()", "DEL": 3, "INS": 0, "UPD": 2, "MOV": 4, "TOT": 9}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.authenticationChallenge(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.ChallengeContinuation)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run().1.onResult(com.amazonaws.mobile.client.internal.oauth2.AuthorizeResponse).1.onResult(com.amazonaws.mobile.client.internal.oauth2.OAuth2Tokens).1.onError(java.lang.Exception)", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 2, "TOT": 4}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getTokens(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._forgotPassword(java.lang.String,com.amazonaws.mobile.client.Callback).11", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.changePassword(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignUp(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.forgotPassword(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run()", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback).18", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUserAttributes(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmVerifyUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 2, "UPD": 0, "MOV": 6, "TOT": 8}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run().1.onResult(com.amazonaws.mobile.client.internal.oauth2.AuthorizeResponse).1.onResult(com.amazonaws.mobile.client.internal.oauth2.OAuth2Tokens).1.onResult(com.amazonaws.mobile.client.UserStateDetails)", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 3, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.forgotPassword(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUserStateDetails(boolean)", "DEL": 0, "INS": 4, "UPD": 1, "MOV": 0, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback).4.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserSession,com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoDevice).1.onResult(com.amazonaws.mobile.client.UserStateDetails)", "DEL": 0, "INS": 0, "UPD": 0, "MOV": 1, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignUp(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signOut(com.amazonaws.mobile.client.SignOutOptions).5.run()", "DEL": 0, "INS": 0, "UPD": 5, "MOV": 0, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signOut(com.amazonaws.mobile.client.SignOutOptions)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getDeviceOperations()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context,com.amazonaws.mobile.client.AWSStartupHandler).25", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback).18.run()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmForgotPassword(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.changePassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signOut(com.amazonaws.mobile.client.SignOutOptions).5", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback).4", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.isSignedIn()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.onFailure(java.lang.Exception)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getAWSCredentials()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).20", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInDropInUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).23.run()", "DEL": 0, "INS": 0, "UPD": 6, "MOV": 0, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getIdentityId()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signIn(java.lang.String,java.lang.String,java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.removeUserStateListener(com.amazonaws.mobile.client.UserStateListener)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignUp(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).9", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).7.run()", "DEL": 0, "INS": 2, "UPD": 0, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context).24", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6.end(com.amazonaws.mobile.client.UserStateDetails)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run()", "DEL": 1, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 3}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoauth.AuthUserSession)", "DEL": 0, "INS": 0, "UPD": 4, "MOV": 0, "TOT": 4}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.releaseSignInWait()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}]}, {"spoonFilePath": "AWSMobileClientTest.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.deleteAllUsers(java.lang.String)", "DEL": 1, "INS": 2, "UPD": 8, "MOV": 9, "TOT": 20}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testFederate()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}]}, {"spoonFilePath": "UserStateDetails.java", "spoonMethods": []}, {"spoonFilePath": "GoogleSignInProvider.java", "spoonMethods": []}], "nameRev": "b054ee84d10f5a7ea682c543c2839599e7cbedd2 tags/release_v2.16.12~394", "commitUser": "sunchunqiang", "authoredDateTime": "2019-04-02 10:07:08", "commitGHEventType": "referenced", "commitGitStats": [{"lines": 7, "filePath": "CHANGELOG.md", "insertions": 7, "deletions": 0}, {"lines": 218, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java", "insertions": 182, "deletions": 36}, {"lines": 1, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/UserStateDetails.java", "insertions": 0, "deletions": 1}, {"lines": 4, "filePath": "aws-android-sdk-auth-google/src/main/java/com/amazonaws/mobile/auth/google/GoogleSignInProvider.java", "insertions": 2, "deletions": 2}, {"lines": 43, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTest.java", "insertions": 31, "deletions": 12}], "commitDateTime": "2019-04-02 22:03:38", "spoonStatsSkippedReason": ""}], "title": "AWSMobileClient federated sign in facebook always return onResult even though give wrong token", "spoonStatsSummary": {"spoonMethodsChanged": 0, "DEL": 0.0, "INS": 0.0, "UPD": 0.0, "MOV": 0.0, "TOT": 0.0, "spoonFilesChanged": 0}, "gitStatsSummary": {"lines": 0.0, "insertions": 0.0, "gitFilesChange": 0, "deletions": 0.0}, "closed": "2019-04-04 19:37:57", "statsSkippedReason": "", "body": "**Describe the bug**\r\nEven though give wrong token, but the callback of federatedSignIn method using facebook token always return onResult with UserState is SIGNED_IN. After that, the log print stack trace with invalid token.\r\n\r\n**To Reproduce**\r\n```\r\nAWSMobileClient.getInstance().federatedSignIn(IdentityProvider.FACEBOOK.toString(),\r\n                        \"123454634\",\r\n                        new Callback<UserStateDetails>() {\r\n                            @Override\r\n                            public void onResult(UserStateDetails result) {\r\n\r\n                                Log.d(TAG, \"onResult: \" + result.getUserState());\r\n                            }\r\n\r\n                            @Override\r\n                            public void onError(Exception e) {\r\n                                e.printStackTrace();\r\n                                Log.d(TAG, \"onError: \" + e);\r\n                            }\r\n                        });\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\nAWSMobileClient\r\n\r\n**Expected behavior**\r\nReturn SIGNED_OUT_FEDERATED_TOKENS_INVALID for UserState or onError should called.\r\n\r\n**Screenshots**\r\n<img width=\"1187\" alt=\"Screen Shot 2019-03-18 at 5 15 15 PM\" src=\"https://user-images.githubusercontent.com/39950210/54523250-a3e88e00-49a1-11e9-86cb-ec59f5e144f5.png\">\r\n\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.12.0+\r\n - Device: Motorola Z Play\r\n - Android Version: 8.0.0\r\n", "changesInPackagesGIT": [], "changesInPackagesSPOON": [], "ttf": 17.00027777777778, "numCommits": 0, "url": "https://github.com/aws-amplify/aws-sdk-android/issues/800"}, {"filteredCommitsReason": {"alsoFixesPhrase": 0, "duplicated": 2, "mergeCommitUsed": 0, "moreThanOneParent": 0, "unavailable": 0, "multipleIssueFixes": 0}, "labels": ["Bug", "Core", "Needs Info from Requester", "closing-soon-if-no-response"], "user": "kkflf", "filteredCommits": ["9b32f39adef5b85c030aae6ad5e9af84103e28e4"], "commits": {"9b32f39adef5b85c030aae6ad5e9af84103e28e4": {"commitUser": "sunchunqiang", "commitGHEventType": "referenced"}, "e405b48ca239e40a8c050b59d2d20a1688ebbcbf": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "8dc62653b132a6c9d7ba1c089244695dbb2db480": {"commitUser": "minbi", "commitGHEventType": "referenced"}}, "created": "2019-03-17 21:31:43", "commitsDetails": [{"commitMessage": "Fix eu-north-1 region support #797\n", "commitParents": ["0c6a2d163aaa3cc5ee76616f34d3b2cc14b6f1e1"], "commitHash": "9b32f39adef5b85c030aae6ad5e9af84103e28e4", "commitSpoonAstDiffStats": [{"spoonFilePath": "RegionTest.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.regions.RegionTest.testEUNorth1()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}]}, {"spoonFilePath": "RegionDefaults.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.regions.RegionDefaults.getRegions()", "DEL": 0, "INS": 16, "UPD": 0, "MOV": 0, "TOT": 16}]}], "nameRev": "9b32f39adef5b85c030aae6ad5e9af84103e28e4 tags/release_v2.16.12~405", "commitUser": "sunchunqiang", "authoredDateTime": "2019-03-27 10:27:41", "commitGHEventType": "referenced", "commitGitStats": [{"lines": 7, "filePath": "CHANGELOG.md", "insertions": 7, "deletions": 0}, {"lines": 14, "filePath": "aws-android-sdk-core/src/test/java/com/amazonaws/regions/RegionTest.java", "insertions": 13, "deletions": 1}, {"lines": 21, "filePath": "aws-android-sdk-core/src/main/java/com/amazonaws/regions/RegionDefaults.java", "insertions": 20, "deletions": 1}], "commitDateTime": "2019-04-02 00:36:09", "spoonStatsSkippedReason": ""}, {"commitMessage": "", "commitParents": [], "commitHash": "e405b48ca239e40a8c050b59d2d20a1688ebbcbf", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "Fix eu-north-1 region support #797\n", "commitParents": ["e42f495be5de9af0f87f6e94b571621ad7224509"], "commitHash": "8dc62653b132a6c9d7ba1c089244695dbb2db480", "commitSpoonAstDiffStats": [{"spoonFilePath": "RegionTest.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.regions.RegionTest.testEUNorth1()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}]}, {"spoonFilePath": "RegionDefaults.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.regions.RegionDefaults.getRegions()", "DEL": 0, "INS": 16, "UPD": 0, "MOV": 0, "TOT": 16}]}], "nameRev": "8dc62653b132a6c9d7ba1c089244695dbb2db480 tags/release_v2.16.12~378^2~25", "commitUser": "minbi", "authoredDateTime": "2019-03-27 10:27:41", "commitGHEventType": "referenced", "commitGitStats": [{"lines": 7, "filePath": "CHANGELOG.md", "insertions": 7, "deletions": 0}, {"lines": 14, "filePath": "aws-android-sdk-core/src/test/java/com/amazonaws/regions/RegionTest.java", "insertions": 13, "deletions": 1}, {"lines": 21, "filePath": "aws-android-sdk-core/src/main/java/com/amazonaws/regions/RegionDefaults.java", "insertions": 20, "deletions": 1}], "commitDateTime": "2019-03-27 10:33:52", "spoonStatsSkippedReason": ""}], "title": "Region object for Stockholm - eu_north_1 is missing.", "spoonStatsSummary": {"spoonMethodsChanged": 1, "DEL": 0.0, "INS": 16.0, "UPD": 0.0, "MOV": 0.0, "TOT": 16.0, "spoonFilesChanged": 1}, "gitStatsSummary": {"lines": 21.0, "insertions": 20.0, "gitFilesChange": 1, "deletions": 1.0}, "closed": "2019-04-12 17:45:00", "statsSkippedReason": "", "body": "**Describe the bug**\r\nI am trying to use the new Stockholm region (eu_north_1) with S3 in Android. I can use the Regions.EU_NORTH_1 enum, but I cannot retrieve any Region object based on this enum.\r\n\r\nThis is the regions available in `RegionUtils.jav List<Region> regions`:\r\nregions = {ArrayList@6445}  size = 18\r\n 0 = {Region@6447} \"ap-northeast-1\"\r\n 1 = {Region@6448} \"ap-northeast-2\"\r\n 2 = {Region@6449} \"ap-south-1\"\r\n 3 = {Region@6450} \"ap-southeast-1\"\r\n 4 = {Region@6451} \"ap-southeast-2\"\r\n 5 = {Region@6452} \"ca-central-1\"\r\n 6 = {Region@6453} \"eu-central-1\"\r\n 7 = {Region@6454} \"eu-west-1\"\r\n 8 = {Region@6455} \"eu-west-2\"\r\n 9 = {Region@6456} \"eu-west-3\"\r\n 10 = {Region@6457} \"sa-east-1\"\r\n 11 = {Region@6458} \"us-east-1\"\r\n 12 = {Region@6459} \"us-east-2\"\r\n 13 = {Region@6460} \"us-west-1\"\r\n 14 = {Region@6461} \"us-west-2\"\r\n 15 = {Region@6462} \"cn-north-1\"\r\n 16 = {Region@6463} \"cn-northwest-1\"\r\n 17 = {Region@6464} \"us-gov-west-1\"\r\n\r\nThere are no eu-north-1 on the above list.\r\n\r\nI am using com.amazonaws:aws-android-sdk-s3:2.12.5 and com.amazonaws:aws-android-sdk-core:2.12.5.\r\n\r\n**To Reproduce**\r\n```\r\n// I can create an Regions object based on the region string. This will return Regions.EU_NORTH_1:\r\n`Regions regions = Regions.fromName(\"eu_north_1\");`\r\n\r\n// I can not get a Region object based on the Regions object. This is returning null.\r\n`Region region = Region.getRegion(regions);`\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\nS3\r\n\r\n**Expected behavior**\r\nI would expect to be able to retrieve a Region object for eu_north_1.\r\n\r\n**Environment Information (please complete the following information):**\r\nimplementation 'com.amazonaws:aws-android-sdk-s3:2.12.5'\r\nimplementation 'com.amazonaws:aws-android-sdk-core:2.12.5'\r\nminSdkVersion 26\r\ntargetSdkVersion 28\r\nbuildToolsVersion '28.0.3'\r\n", "changesInPackagesGIT": ["aws-android-sdk-core/src/main/java/com/amazonaws/regions"], "changesInPackagesSPOON": ["com.amazonaws.regions.RegionDefaults.getRegions()"], "ttf": 25.00027777777778, "numCommits": 1, "url": "https://github.com/aws-amplify/aws-sdk-android/issues/797"}, {"labels": ["Bug", "Core", "closing-soon-if-no-response"], "closed": "2019-04-13 01:45:01", "body": "**Describe the bug**\r\nGetting error while uploading any file from Android 7.1.1\r\n\r\n\r\n**Which AWS service(s) are affected?** - S3\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Logs**\r\n019-03-14 13:44:37.645 18186-18517/? E/UploadTask: Error encountered during multi-part upload: 9 due to Log tag \"RepeatableFileInputStream\" exceeds limit of 23 characters\r\n    \r\n    java.lang.IllegalArgumentException: Log tag \"RepeatableFileInputStream\" exceeds limit of 23 characters\r\n    \r\n        at android.util.Log.isLoggable(Native Method)\r\n        at com.amazonaws.logging.AndroidLog.a(AndroidLog.java:40)\r\n        at com.amazonaws.services.s3.internal.RepeatableFileInputStream.mark(RepeatableFileInputStream.java:105)\r\n        at com.amazonaws.internal.SdkFilterInputStream.mark(SdkFilterInputStream.java:97)\r\n        at com.amazonaws.util.LengthCheckInputStream.mark(LengthCheckInputStream.java:107)\r\n        at com.amazonaws.internal.SdkFilterInputStream.mark(SdkFilterInputStream.java:97)\r\n        at com.amazonaws.http.AmazonHttpClient.b(AmazonHttpClient.java:306)\r\n        at com.amazonaws.http.AmazonHttpClient.a(AmazonHttpClient.java:212)\r\n        at com.amazonaws.services.s3.AmazonS3Client.a(AmazonS3Client.java:4659)\r\n        at com.amazonaws.services.s3.AmazonS3Client.a(AmazonS3Client.java:1752)\r\n        at com.amazonaws.mobileconnectors.s3.transferutility.UploadTask.b(UploadTask.java:221)\r\n        at com.amazonaws.mobileconnectors.s3.transferutility.UploadTask.call(UploadTask.java:15099)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n        at java.lang.Thread.run(Thread.java:761)\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.8.4\r\n - Android Version: [e.g. Nougat 7.1.1]\r\n - Specific to simulators: No\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "commits": {}, "title": "Upload Fails with error Log tag \"RepeatableFileInputStream\" exceeds limit of 23 characters", "created": "2019-03-14 08:30:21", "user": "samyakjain", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/787", "commitsDetails": [], "ttf": 29.00027777777778}, {"labels": ["Bug", "Core", "Needs Info from Requester"], "closed": "2019-03-13 01:04:31", "body": "**Describe the bug**\r\nSince 2.12.3 version, i can't initialize CognitoCachingCredentialsProvider using constructor `public CognitoCachingCredentialsProvider(Context context, String identityPoolId, Regions region)`\r\n\r\nI obtain the next error from catch block in initialize(Context context) method:\r\n\r\n> E/CognitoCachingCredentialsProvider: Error in initializing the CognitoCachingCredentialsProvider. java.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.String\r\n\r\n\r\nAnd later:\r\n\r\n> java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.String com.amazonaws.internal.keyvaluestore.AWSKeyValueStore.get(java.lang.String)' on a null object reference\r\n> at com.amazonaws.auth.CognitoCachingCredentialsProvider.getCachedIdentityId(CognitoCachingCredentialsProvider.java:574)\r\n> \r\n> \r\n\r\nwhen execute `credentialsProvider.getCachedIdentityId()` with previously instantiate CognitoCachingCredentialsProvider.\r\n\r\n**To Reproduce**\r\nJust try to instantiate CognitoCachingCredentialsProvider.\r\n```\r\nString COGNITO_POOL_ID = \"us-east-2:_________\"; // unauthenticated pool with AWS IoTManager permissions.\r\nRegions MY_REGION = Regions.US_EAST_2;\r\n\r\nnew CognitoCachingCredentialsProvider(\r\n                getApplicationContext(),\r\n                COGNITO_POOL_ID,\r\n                MY_REGION\r\n        );\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\n\r\ncognitoidentityprovider\r\n\r\n**Expected behavior**\r\nI expect to be able to instantiate CognitoCachingCredentialsProvider.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.12.3\r\n - Device: Real device, Xiaomi Redmi 5 Plus\r\n - Android Version: 8.1.0 API 27\r\n - Specific to simulators: No", "commits": {}, "title": "Error in initializing the CognitoCachingCredentialsProvider introduced in 2.12.3", "created": "2019-03-11 18:33:42", "user": "agalfioni", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/780", "commitsDetails": [], "ttf": 1.0002777777777778}, {"labels": ["Bug", "Needs Info from Requester", "Pinpoint", "closing-soon-if-no-response"], "closed": "2019-03-24 21:15:27", "body": "**Describe the bug**\r\n```\r\nFatal Exception: android.database.sqlite.SQLiteDatabaseLockedException: database is locked (code 5 SQLITE_BUSY[5])\r\n      at android.database.sqlite.SQLiteConnection.nativeExecuteForChangedRowCount(SQLiteConnection.java)\r\n       at android.database.sqlite.SQLiteConnection.executeForChangedRowCount(SQLiteConnection.java:946)\r\n       at android.database.sqlite.SQLiteSession.executeForChangedRowCount(SQLiteSession.java:754)\r\n       at android.database.sqlite.SQLiteStatement.executeUpdateDelete(SQLiteStatement.java:64)\r\n       at android.database.sqlite.SQLiteDatabase.delete(SQLiteDatabase.java:2049)\r\n       at com.amazonaws.mobileconnectors.pinpoint.internal.event.PinpointDBBase.delete(PinpointDBBase.java:219)\r\n       at com.amazonaws.mobileconnectors.pinpoint.internal.event.PinpointDBUtil.deleteEvent(PinpointDBUtil.java:112)\r\n       at com.amazonaws.mobileconnectors.pinpoint.internal.event.EventRecorder.processEvents(EventRecorder.java:322)\r\n       at com.amazonaws.mobileconnectors.pinpoint.internal.event.EventRecorder$1.run(EventRecorder.java:240)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n       at java.lang.Thread.run(Thread.java:764)\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\ncom.amazonaws:aws-android-sdk-pinpoint:2.12.2\r\n\r\n**Expected behavior**\r\nNo crash\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.12.2\r\n - Device: SM-G960F\r\n - Android Version: 9\r\n - Specific to simulators: No\r\n\r\n**Additional context**\r\nAn app are sending a lot of events for performance analytics.", "commits": {}, "title": "SQLiteDatabaseLockedException while submiting events", "created": "2019-03-11 07:56:49", "user": "SergeiVasilenko", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/778", "commitsDetails": [], "ttf": 13.000277777777777}, {"filteredCommitsReason": {"alsoFixesPhrase": 0, "duplicated": 1, "mergeCommitUsed": 0, "moreThanOneParent": 0, "unavailable": 0, "multipleIssueFixes": 1}, "labels": ["Bug", "S3"], "user": "hfcheng", "filteredCommits": [], "commits": {"d25030d08397480cf6f36864eef02e1b61f26795": {"commitUser": "kvasukib", "commitGHEventType": "referenced"}, "69edfda2ed8ea878f50fc88447d1670d6888a9c3": {"commitUser": "kvasukib", "commitGHEventType": "referenced"}}, "created": "2019-03-11 03:27:12", "commitsDetails": [{"commitMessage": "", "commitParents": [], "commitHash": "d25030d08397480cf6f36864eef02e1b61f26795", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "kvasukib", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "[S3] Fix ConcurrentModificationException in pauseAllTransfersDueToNetworkInterruption #777 (#1044)\n\n", "commitParents": ["838e0cd9a044ed55ac576e1fb04984e008f4fd1b"], "commitHash": "69edfda2ed8ea878f50fc88447d1670d6888a9c3", "commitSpoonAstDiffStats": [{"spoonFilePath": "S3ClientReference.java", "spoonMethods": []}, {"spoonFilePath": "TransferStatusUpdater.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobileconnectors.s3.transferutility.TransferStatusUpdater", "DEL": 1, "INS": 1, "UPD": 1, "MOV": 0, "TOT": 3}, {"spoonMethodName": "com.amazonaws.mobileconnectors.s3.transferutility.TransferStatusUpdater.throwError(int,java.lang.Exception).3", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.s3.transferutility.TransferStatusUpdater.updateProgress(int,long,long,boolean)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.s3.transferutility.TransferStatusUpdater.throwError(int,java.lang.Exception)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.s3.transferutility.TransferStatusUpdater.updateState(int,com.amazonaws.mobileconnectors.s3.transferutility.TransferState).1", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.s3.transferutility.TransferStatusUpdater.updateProgress(int,long,long,boolean).2", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.s3.transferutility.TransferStatusUpdater.updateState(int,com.amazonaws.mobileconnectors.s3.transferutility.TransferState)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}]}], "nameRev": "69edfda2ed8ea878f50fc88447d1670d6888a9c3 tags/release_v2.16.12~268", "commitUser": "kvasukib", "authoredDateTime": "2019-06-20 15:43:51", "commitGHEventType": "referenced", "commitGitStats": [{"lines": 7, "filePath": "CHANGELOG.md", "insertions": 7, "deletions": 0}, {"lines": 7, "filePath": "aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferStatusUpdater.java", "insertions": 4, "deletions": 3}, {"lines": 4, "filePath": "aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/S3ClientReference.java", "insertions": 2, "deletions": 2}], "commitDateTime": "2019-06-20 15:43:51", "spoonStatsSkippedReason": ""}], "title": "ConcurrentModificationException in pauseAllTransfersDueToNetworkInterruption with SDK 2.11.1", "spoonStatsSummary": {"spoonMethodsChanged": 0, "DEL": 0.0, "INS": 0.0, "UPD": 0.0, "MOV": 0.0, "TOT": 0.0, "spoonFilesChanged": 0}, "gitStatsSummary": {"lines": 0.0, "insertions": 0.0, "gitFilesChange": 0, "deletions": 0.0}, "closed": "2019-08-02 16:46:08", "statsSkippedReason": "", "body": "**Describe the bug**\r\nWe are encountering rare ConcurrentModificationException in pauseAllTransfersDueToNetworkInterruption added in SDK version 2.11.1.\r\n\r\n```\r\njava.util.HashMap$HashIterator.nextEntry\r\njava.util.HashMap$ValueIterator.next\r\njava.util.Collections$UnmodifiableCollection$1.next\r\ncom.amazonaws.mobileconnectors.s3.transferutility.TransferNetworkLossHandler.pauseAllTransfersDueToNetworkInterruption\r\ncom.amazonaws.mobileconnectors.s3.transferutility.TransferNetworkLossHandler.access$100\r\ncom.amazonaws.mobileconnectors.s3.transferutility.TransferNetworkLossHandler$1.run\r\njava.lang.Thread.run\u00a0(Thread.java:761)\r\n```\r\n\r\n**To Reproduce**\r\nIt looks like the issue is happening when the network is getting interrupted but the app is submitting a new upload request at the exact same time.\r\n\r\n**Which AWS service(s) are affected?**\r\nAmazon S3\r\n\r\n**Expected behavior**\r\nThe exception should not happen\r\n\r\n**Screenshots**\r\nN/A\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.11.1\r\n - Device: Actual devices\r\n - Android Version: All Android versions\r\n - Specific to simulators: No\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "changesInPackagesGIT": [], "changesInPackagesSPOON": [], "ttf": 144.00027777777777, "numCommits": 0, "url": "https://github.com/aws-amplify/aws-sdk-android/issues/777"}, {"filteredCommitsReason": {"alsoFixesPhrase": 0, "duplicated": 0, "mergeCommitUsed": 0, "moreThanOneParent": 0, "unavailable": 0, "multipleIssueFixes": 1}, "labels": ["Bug", "Needs Info from Requester", "Pinpoint", "closing-soon-if-no-response"], "user": "abdullahmehmood", "filteredCommits": [], "commits": {"6a4245200748585eaa2f8678954f9f9c86aa216e": {"commitUser": "minbi", "commitGHEventType": "referenced"}}, "created": "2019-03-08 14:02:06", "commitsDetails": [{"commitMessage": "[Pinpoint] Fix submitEvents for offline case #773; fix notification image (#776)\n\nMake notificationImage a local variable to avoid persisting the image across push notifications/campaigns.", "commitParents": ["6405df54654318169140d742b2dec729890797b2"], "commitHash": "6a4245200748585eaa2f8678954f9f9c86aa216e", "commitSpoonAstDiffStats": [{"spoonFilePath": "EventRecorderTest.java", "spoonMethods": []}, {"spoonFilePath": "SubmitEventsIntegrationTest.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobileconnectors.pinpoint.analytics.SubmitEventsIntegrationTest", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}]}, {"spoonFilePath": "EventRecorder.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobileconnectors.pinpoint.internal.event.EventRecorder.processEventsResponse(org.json.JSONArray,com.amazonaws.mobileconnectors.pinpoint.targeting.endpointProfile.EndpointProfile,com.amazonaws.services.pinpoint.model.PutEventsResult,java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.pinpoint.internal.event.EventRecorder.getBatchOfEvents(android.database.Cursor,java.util.HashMap)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.pinpoint.internal.event.EventRecorder.submitEventsAndEndpoint(org.json.JSONArray,java.util.HashMap,com.amazonaws.mobileconnectors.pinpoint.targeting.endpointProfile.EndpointProfile)", "DEL": 9, "INS": 8, "UPD": 10, "MOV": 26, "TOT": 53}, {"spoonMethodName": "com.amazonaws.mobileconnectors.pinpoint.internal.event.EventRecorder.submitEventsAndEndpoint(org.json.JSONArray,java.util.HashMap)", "DEL": 1, "INS": 1, "UPD": 4, "MOV": 4, "TOT": 10}, {"spoonMethodName": "com.amazonaws.mobileconnectors.pinpoint.internal.event.EventRecorder", "DEL": 2, "INS": 0, "UPD": 0, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobileconnectors.pinpoint.internal.event.EventRecorder.processEventsResponse(org.json.JSONArray,com.amazonaws.mobileconnectors.pinpoint.targeting.endpointProfile.EndpointProfile,com.amazonaws.services.pinpoint.model.PutEventsResult,java.util.HashMap,java.util.Set,java.util.Set)", "DEL": 5, "INS": 0, "UPD": 1, "MOV": 1, "TOT": 7}, {"spoonMethodName": "com.amazonaws.mobileconnectors.pinpoint.internal.event.EventRecorder.addAllEventIdsToSet(org.json.JSONArray,java.util.Set)", "DEL": 1, "INS": 0, "UPD": 2, "MOV": 4, "TOT": 7}, {"spoonMethodName": "com.amazonaws.mobileconnectors.pinpoint.internal.event.EventRecorder.processEvents()", "DEL": 11, "INS": 0, "UPD": 1, "MOV": 1, "TOT": 13}]}, {"spoonFilePath": "NotificationClientBase.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobileconnectors.pinpoint.targeting.notification.NotificationClientBase.createNotification(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent)", "DEL": 3, "INS": 4, "UPD": 0, "MOV": 0, "TOT": 7}, {"spoonMethodName": "com.amazonaws.mobileconnectors.pinpoint.targeting.notification.NotificationClientBase", "DEL": 1, "INS": 0, "UPD": 0, "MOV": 0, "TOT": 1}]}], "nameRev": "6a4245200748585eaa2f8678954f9f9c86aa216e tags/release_v2.16.12~365", "commitUser": "minbi", "authoredDateTime": "2019-04-04 21:20:07", "commitGHEventType": "referenced", "commitGitStats": [{"lines": 217, "filePath": "aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/internal/event/EventRecorder.java", "insertions": 124, "deletions": 93}, {"lines": 49, "filePath": "aws-android-sdk-pinpoint-test/build.gradle", "insertions": 49, "deletions": 0}, {"lines": 222, "filePath": "aws-android-sdk-pinpoint-test/src/androidTest/java/com/amazonaws/mobileconnectors/pinpoint/analytics/SubmitEventsIntegrationTest.java", "insertions": 222, "deletions": 0}, {"lines": 6, "filePath": "aws-android-sdk-pinpoint-test/src/main/AndroidManifest.xml", "insertions": 6, "deletions": 0}, {"lines": 4, "filePath": "settings.gradle", "insertions": 2, "deletions": 2}, {"lines": 1, "filePath": "aws-android-sdk-pinpoint-test/.gitignore", "insertions": 1, "deletions": 0}, {"lines": 4, "filePath": "CHANGELOG.md", "insertions": 4, "deletions": 0}, {"lines": 21, "filePath": "aws-android-sdk-pinpoint-test/proguard-rules.pro", "insertions": 21, "deletions": 0}, {"lines": 3, "filePath": "aws-android-sdk-pinpoint-test/src/main/res/values/strings.xml", "insertions": 3, "deletions": 0}, {"lines": 3, "filePath": "aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/NotificationClientBase.java", "insertions": 2, "deletions": 1}, {"lines": 9, "filePath": "aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/internal/event/EventRecorderTest.java", "insertions": 1, "deletions": 8}], "commitDateTime": "2019-04-04 21:20:07", "spoonStatsSkippedReason": ""}], "title": "Submit Events is not working properly", "spoonStatsSummary": {"spoonMethodsChanged": 0, "DEL": 0, "INS": 0, "UPD": 0, "MOV": 0, "TOT": 0, "spoonFilesChanged": 0}, "gitStatsSummary": {"lines": 0, "insertions": 0, "gitFilesChange": 0, "deletions": 0}, "closed": "2019-04-29 16:47:34", "statsSkippedReason": "", "body": "**Describe the bug**\r\nAfter Investigation I have found that the sdk is not storing the offline data, when device is offline and then if we call the submit event method just after the record event then crash occurs and because of this crash it is unable to store the records in the DB. When I check the awspinpint.db file its empty.\r\n\r\nSo, I have to add the check network availability whenever I call the submit method. If we don't do this then our data is lost.\r\n\r\n**To Reproduce**\r\nDisconnect the device from Internet and then record and submit events then check the db file. Or again connect the device to internet it will not send the previous recorded data.\r\n```\r\nYour code\r\nSame like in the documentation:\r\nhttps://aws-amplify.github.io/docs/android/analytics#custom-events\r\n\r\npublic void logEvent() {\r\n   final AnalyticsEvent event =\r\n       pinpointManager.getAnalyticsClient().createEvent(\"EventName\")\r\n           .withAttribute(\"DemoAttribute1\", \"DemoAttributeValue1\")\r\n           .withAttribute(\"DemoAttribute2\", \"DemoAttributeValue2\")\r\n           .withMetric(\"DemoMetric1\", Math.random());\r\n   pinpointManager.getAnalyticsClient().recordEvent(event);\r\n   pinpointManager.getAnalyticsClient().submitEvents();\r\n}\r\n```\r\n**Expected behavior**\r\nSDK should handle the submitEvent crash method when device is offline and also record the events in DB properly.\r\n\r\n\r\n", "changesInPackagesGIT": [], "changesInPackagesSPOON": [], "ttf": 52.000277777777775, "numCommits": 0, "url": "https://github.com/aws-amplify/aws-sdk-android/issues/773"}, {"labels": ["Awaiting Release", "Bug", "Cognito"], "closed": "2019-03-06 22:15:14", "body": "**Describe the bug**\r\nRegression introduced in CognitoUser in commit of 2019-02-22.\r\n\r\nRegression results in consistent \"Authentication failed due to an internal error: PASSWORD_VERIFIER challenge encountered not at the start of authentication flow\" error message being returned during password reset workflow.\r\n\r\nThis regression was introduced by the removal of the return statement at line 2365 of CognitoUser which results in the startWithUserSrpAuth method continuing to handleChallenge when it previously did not.", "commits": {}, "title": "Regression in Reset Password Workflow introduced in 2.12.1", "created": "2019-03-06 21:58:52", "user": "tw-john", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/769", "commitsDetails": [], "ttf": 0.0002777777777777778}, {"filteredCommitsReason": {"alsoFixesPhrase": 0, "duplicated": 6, "mergeCommitUsed": 0, "moreThanOneParent": 0, "unavailable": 0, "multipleIssueFixes": 2}, "labels": ["AWSMobileClient", "Bug", "Needs Info from Requester"], "user": "BillBunting", "filteredCommits": [], "commits": {"39c40490d167b26ea70fc4557e432e38ebddd81f": {"commitUser": "kvasukib", "commitGHEventType": "referenced"}, "606f7746543fd22c8154edcf5870aa02e54ef6a8": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "75d9268c6babf92b2047857dde1b913bc75fa0f9": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "54875b77660a9e67aac1a5a92ccb8137380e9117": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "3d685f271466697d6a4c2b859d9ca920047f5380": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "cc5e1309f2759005abf672bd3c40dbf119f2a554": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "4f9444ba2fdee85de3922d96beb8ac78afb5ec03": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "fdef7d3366fb89f0ee32ed9abf951c3c84322891": {"commitUser": "minbi", "commitGHEventType": "referenced"}}, "created": "2019-02-25 06:00:15", "commitsDetails": [{"commitMessage": "Staging release 2.12.5 (#793)\n\n* Secure information stored in SharedPreferences\r\n\r\n* Lower aws-android-sdk-core-test compile and target sdk version to 27\r\n\r\n* Add a symlink to android-23.jar for core\r\n\r\n* Add a gradle task that creates a symlink to android-23.jar for AWS Core\r\n\r\n* Fix the gradle task that creates symbolic link to android-23.jar\r\n\r\n* Change config.yml to setup android-23\r\n\r\n* Enable core, cognitoidentityprovider and cognitoauth integration tests on CircleCI\r\n\r\n* Enable core, cognitoidentityprovider and cognitoauth integration tests on CircleCI\r\n\r\n* Fix pom.xml\r\n\r\n* Improve exception handling in AWSKeyValueStore\r\n\r\n* [2.12.3] Bump the patch version of 2.12.z\r\n\r\n* Update 2.12.3 CHANGELOG\r\n\r\n* Add the missing bucket prefixes to CleanupBucketIntegrationTests\r\n\r\n* Fix a bug where migrating expirationDate in CognitoCachingCredentialsProvider crashes\r\n\r\n* [2.12.4] Update changelog and bump version\r\n\r\n* Annotate code specific to API Level 23 and above in AWSKeyValueStore\r\n\r\n* Added API to accept key-value pairs which are appended to the connection username (#765)\r\n\r\nThe connection username is used as user metadata by the service for the purpose of metrics calculation.\r\n\r\n* build android sdk with android-10 (#782)\r\n\r\n* Add sign out options\r\n\r\n* [MobileClient] Cleanup javadocs and remove unnecessary try..catch blocks\r\n\r\n* [MobileClient] Add developer authenticated identities to federatedSignIn fixes #577\r\n\r\n* [MobileClient] Add test for developer authenticated idenities federatedSignIn\r\n\r\n* [MobileClient] Persist identity id for developer authenticated identities\r\n\r\n* [MobileClient] Add AWSMobileClient as client usage tracker in user agent\r\n\r\n* [MobileClient] Add device operations; Add error message to ReturningRunnable\r\n\r\n* [MobileClient] Add global sign-out functionality\r\n\r\n* [MobileClient] Add custom role arn to settings in federated sign-in persistence\r\n\r\n* [MobileClient] Add forgot password test; Fix sign out globally test\r\n\r\n* [MobileClient] [Userpools] [CognitoAuth] Add HostedUI and OAuth 2.0 code grant flow support\r\n\r\n[MobileClient]\r\nAdd HostedUI and OAuth 2.0 code grant flow support\r\n\r\n[Userpools]\r\nFix threading issues reported in issue #722\r\n\r\n[CognitoAuth]\r\nAdded methods to reset AuthHandler and get session without launching UI\r\nFix erroneous user cancelled when redirecting back to app fixes #328\r\n\r\n* [MobileClient] Fix multiple adds of SignInProvider to provider list fixes #766\r\n\r\n* [MobileClient] Fix git merge issues\r\n\r\n* [MobileClient] Fix integration tests for new configuration\r\n\r\n* [CognitoAuth] Fix NPE when ASF feature turned off\r\n\r\n* [MobileClient] Finalize APIs before release, add persistence flag to OAuth 2.0 and HostedUI features\r\n\r\n* [AuthSDKs] Update maven repositories in pom to maven.google.com\r\n\r\n* [Core] Fix NPE when setting persistence in AWSKeyValueStore after initialization\r\n\r\n* [MobileClient] Ignore manual tests in automation\r\n\r\n* [MobileClient] Ignore drop-in UI test due to timeout; Default OAuth 2.0 client to persist\r\n\r\n* Fix the transition between persistence enabled and disabled in AWSKeyValueStore\r\n\r\n* Enable core, cognitoidentityprovider and cognitoauth integration tests on CircleCI\r\n\r\n* Update changelog for 2.12.5; Add mobile client; Remove IoT metrics\r\n\r\n* Skip reserved keynames (#791)\r\n\r\n* Skip reserved keynames\r\n\r\n* Add log when reserved key names are encountered\r\n\r\n* Bump version 2.12.5 (#792)\r\n", "commitParents": ["50311c38f9bd3d85a84e41ab7c32164ea100bd07"], "commitHash": "39c40490d167b26ea70fc4557e432e38ebddd81f", "commitSpoonAstDiffStats": [], "nameRev": "39c40490d167b26ea70fc4557e432e38ebddd81f tags/release_v2.16.12~418^2", "commitUser": "kvasukib", "authoredDateTime": "2019-03-14 12:33:55", "commitGHEventType": "referenced", "commitGitStats": [{"lines": 4, "filePath": "aws-android-sdk-translate/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 52, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/internal/oauth2/OAuth2Tokens.java", "insertions": 52, "deletions": 0}, {"lines": 4, "filePath": "aws-android-sdk-comprehend/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 16, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/internal/oauth2/AuthorizeResponse.java", "insertions": 16, "deletions": 0}, {"lines": 13, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/IdentityProvider.java", "insertions": 12, "deletions": 1}, {"lines": 107, "filePath": "aws-android-sdk-core-test/src/androidTest/java/com/amazonaws/internal/keyvaluestore/AWSKeyStoreIntegrationTest.java", "insertions": 107, "deletions": 0}, {"lines": 6, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientOfflineTest.java", "insertions": 3, "deletions": 3}, {"lines": 659, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/internal/oauth2/OAuth2Client.java", "insertions": 659, "deletions": 0}, {"lines": 4, "filePath": "aws-android-sdk-ses/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 8, "filePath": "aws-android-sdk-ddb-mapper/pom.xml", "insertions": 4, "deletions": 4}, {"lines": 2, "filePath": "aws-android-sdk-core/src/main/resources/fabric/com.amazonaws.aws-android-sdk-core.properties", "insertions": 1, "deletions": 1}, {"lines": 41, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/results/Device.java", "insertions": 41, "deletions": 0}, {"lines": 2, "filePath": "aws-android-sdk-mobile-client/src/main/AndroidManifest.xml", "insertions": 1, "deletions": 1}, {"lines": 28, "filePath": "aws-android-sdk-core/src/main/java/com/amazonaws/internal/keyvaluestore/AWSKeyValueStore.java", "insertions": 17, "deletions": 11}, {"lines": 4, "filePath": "aws-android-sdk-ddb/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 10, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/SignInUIOptions.java", "insertions": 10, "deletions": 0}, {"lines": 5, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-anydpi-v26/ic_launcher.xml", "insertions": 5, "deletions": 0}, {"lines": 29, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTestBase.java", "insertions": 28, "deletions": 1}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-mdpi/ic_launcher.png", "insertions": 0, "deletions": 0}, {"lines": 3, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/values/strings.xml", "insertions": 3, "deletions": 0}, {"lines": 288, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/DeviceOperations.java", "insertions": 288, "deletions": 0}, {"lines": 2, "filePath": "aws-android-sdk-cognito/src/main/resources/fabric/com.amazonaws.aws-android-sdk-cognito.properties", "insertions": 1, "deletions": 1}, {"lines": 103, "filePath": "aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUser.java", "insertions": 90, "deletions": 13}, {"lines": 21, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/results/ListDevicesResult.java", "insertions": 21, "deletions": 0}, {"lines": 2, "filePath": "aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/MqttManagerIntegrationTest.java", "insertions": 1, "deletions": 1}, {"lines": 4, "filePath": "aws-android-sdk-transcribe/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 2, "filePath": "aws-android-sdk-core/pom.xml", "insertions": 1, "deletions": 1}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-hdpi/ic_launcher.png", "insertions": 0, "deletions": 0}, {"lines": 4, "filePath": "aws-android-sdk-kinesis/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 4, "filePath": "aws-android-sdk-iot/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 4, "filePath": "aws-android-sdk-sdb/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xhdpi/ic_launcher.png", "insertions": 0, "deletions": 0}, {"lines": 27, "filePath": ".idea/modules.xml", "insertions": 26, "deletions": 1}, {"lines": 4, "filePath": "aws-android-sdk-elb/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 8, "filePath": "aws-android-sdk-auth-facebook/pom.xml", "insertions": 4, "deletions": 4}, {"lines": 5, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/drawable/ic_launcher_round.xml", "insertions": 5, "deletions": 0}, {"lines": 70, "filePath": ".circleci/config.yml", "insertions": 70, "deletions": 0}, {"lines": 40, "filePath": "aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/AuthClient.java", "insertions": 36, "deletions": 4}, {"lines": 27, "filePath": "aws-android-sdk-mobile-client/src/androidTest/AndroidManifest.xml", "insertions": 25, "deletions": 2}, {"lines": 5, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/drawable/ic_launcher.xml", "insertions": 5, "deletions": 0}, {"lines": 11, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/values/styles.xml", "insertions": 11, "deletions": 0}, {"lines": 173, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientOAuth2Test.java", "insertions": 173, "deletions": 0}, {"lines": 6, "filePath": "aws-android-sdk-sns/pom.xml", "insertions": 3, "deletions": 3}, {"lines": 4, "filePath": "aws-android-sdk-kinesisvideo-archivedmedia/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 2, "filePath": "aws-android-sdk-core/src/test/java/com/amazonaws/util/VersionInfoUtilsTest.java", "insertions": 1, "deletions": 1}, {"lines": 4, "filePath": "aws-android-sdk-autoscaling/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xxxhdpi/ic_launcher_round.png", "insertions": 0, "deletions": 0}, {"lines": 2, "filePath": "aws-android-sdk-core/src/main/java/com/amazonaws/util/VersionInfoUtils.java", "insertions": 1, "deletions": 1}, {"lines": 4, "filePath": "aws-android-sdk-kinesisvideo/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 5, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-anydpi-v26/ic_launcher_round.xml", "insertions": 5, "deletions": 0}, {"lines": 193, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientUITest.java", "insertions": 193, "deletions": 0}, {"lines": 4, "filePath": "aws-android-sdk-apigateway-core/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 4, "filePath": "aws-android-sdk-rekognition/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 4, "filePath": "aws-android-sdk-auth-core/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 34, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/drawable-v24/ic_launcher_foreground.xml", "insertions": 34, "deletions": 0}, {"lines": 18, "filePath": "CHANGELOG.md", "insertions": 18, "deletions": 0}, {"lines": 2, "filePath": "pom.xml", "insertions": 1, "deletions": 1}, {"lines": 70, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/SignOutOptions.java", "insertions": 70, "deletions": 0}, {"lines": 4, "filePath": "aws-android-sdk-sqs/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 4, "filePath": "aws-android-sdk-pinpoint/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xxxhdpi/ic_launcher.png", "insertions": 0, "deletions": 0}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-mdpi/ic_launcher_round.png", "insertions": 0, "deletions": 0}, {"lines": 6, "filePath": "aws-android-sdk-ddb-document/pom.xml", "insertions": 3, "deletions": 3}, {"lines": 38, "filePath": "aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManager.java", "insertions": 36, "deletions": 2}, {"lines": 44, "filePath": "CircleciScripts/replace_android10.py", "insertions": 44, "deletions": 0}, {"lines": 55, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/internal/ReturningRunnable.java", "insertions": 55, "deletions": 0}, {"lines": 26, "filePath": "aws-android-sdk-mobile-client/build.gradle", "insertions": 25, "deletions": 1}, {"lines": 14, "filePath": "aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/util/LocalDataManager.java", "insertions": 13, "deletions": 1}, {"lines": 4, "filePath": "aws-android-sdk-lambda/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 6, "filePath": "aws-android-sdk-s3/pom.xml", "insertions": 3, "deletions": 3}, {"lines": 6, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/values/colors.xml", "insertions": 6, "deletions": 0}, {"lines": 6, "filePath": "aws-android-sdk-cognito/pom.xml", "insertions": 3, "deletions": 3}, {"lines": 4, "filePath": "aws-android-sdk-mobileanalytics/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 10, "filePath": "aws-android-sdk-auth-userpools/pom.xml", "insertions": 5, "deletions": 5}, {"lines": 25, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/internal/oauth2/OAuth2Exception.java", "insertions": 25, "deletions": 0}, {"lines": 4, "filePath": "aws-android-sdk-ec2/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-hdpi/ic_launcher_round.png", "insertions": 0, "deletions": 0}, {"lines": 170, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/drawable/ic_launcher_background.xml", "insertions": 170, "deletions": 0}, {"lines": 73, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientUITestActivity.java", "insertions": 73, "deletions": 0}, {"lines": 1730, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java", "insertions": 1326, "deletions": 404}, {"lines": 43, "filePath": "aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/Auth.java", "insertions": 41, "deletions": 2}, {"lines": 12, "filePath": "aws-android-sdk-auth-google/pom.xml", "insertions": 4, "deletions": 8}, {"lines": 4, "filePath": "aws-android-sdk-lex/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 26, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/layout/activity_awsmobileclient_ui_test.xml", "insertions": 26, "deletions": 0}, {"lines": 4, "filePath": "aws-android-sdk-polly/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xxhdpi/ic_launcher.png", "insertions": 0, "deletions": 0}, {"lines": 4, "filePath": "aws-android-sdk-kms/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xxhdpi/ic_launcher_round.png", "insertions": 0, "deletions": 0}, {"lines": 17, "filePath": "aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManagerTest.java", "insertions": 14, "deletions": 3}, {"lines": 14, "filePath": "aws-android-sdk-auth-ui/pom.xml", "insertions": 7, "deletions": 7}, {"lines": 111, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/HostedUIOptions.java", "insertions": 111, "deletions": 0}, {"lines": 6, "filePath": "aws-android-sdk-cognitoidentityprovider/pom.xml", "insertions": 3, "deletions": 3}, {"lines": 10, "filePath": "aws-android-sdk-cognitoauth/pom.xml", "insertions": 5, "deletions": 5}, {"lines": 341, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTest.java", "insertions": 308, "deletions": 33}, {"lines": 4, "filePath": "aws-android-sdk-machinelearning/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 26, "filePath": "aws-android-sdk-mobile-client/pom.xml", "insertions": 17, "deletions": 9}, {"lines": 4, "filePath": "aws-android-sdk-logs/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 4, "filePath": "aws-android-sdk-cloudwatch/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xhdpi/ic_launcher_round.png", "insertions": 0, "deletions": 0}, {"lines": 53, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/FederatedSignInOptions.java", "insertions": 53, "deletions": 0}], "commitDateTime": "2019-03-14 12:33:55", "spoonStatsSkippedReason": "tooManyFiles"}, {"commitMessage": "", "commitParents": [], "commitHash": "606f7746543fd22c8154edcf5870aa02e54ef6a8", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "[MobileClient] [Userpools] [CognitoAuth] Add HostedUI and OAuth 2.0 code grant flow support\n\n[MobileClient]\nAdd HostedUI and OAuth 2.0 code grant flow support\n\n[Userpools]\nFix threading issues reported in issue #722\n\n[CognitoAuth]\nAdded methods to reset AuthHandler and get session without launching UI\nFix erroneous user cancelled when redirecting back to app fixes #328\n", "commitParents": ["df32165f4413dd64bf2e3a85c869144e6a551f75"], "commitHash": "75d9268c6babf92b2047857dde1b913bc75fa0f9", "commitSpoonAstDiffStats": [], "nameRev": "75d9268c6babf92b2047857dde1b913bc75fa0f9 tags/release_v2.16.12~434", "commitUser": "minbi", "authoredDateTime": "2019-03-06 11:03:03", "commitGHEventType": "referenced", "commitGitStats": [{"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-hdpi/ic_launcher.png", "insertions": 0, "deletions": 0}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xxxhdpi/ic_launcher.png", "insertions": 0, "deletions": 0}, {"lines": 52, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/internal/oauth2/OAuth2Tokens.java", "insertions": 52, "deletions": 0}, {"lines": 170, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/drawable/ic_launcher_background.xml", "insertions": 170, "deletions": 0}, {"lines": 5, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-anydpi-v26/ic_launcher_round.xml", "insertions": 5, "deletions": 0}, {"lines": 34, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/drawable-v24/ic_launcher_foreground.xml", "insertions": 34, "deletions": 0}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-hdpi/ic_launcher_round.png", "insertions": 0, "deletions": 0}, {"lines": 6, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/{DeviceList.java => results/ListDevicesResult.java}", "insertions": 3, "deletions": 3}, {"lines": 31, "filePath": "aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/Auth.java", "insertions": 30, "deletions": 1}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xhdpi/ic_launcher.png", "insertions": 0, "deletions": 0}, {"lines": 643, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/internal/oauth2/OAuth2Client.java", "insertions": 643, "deletions": 0}, {"lines": 3, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/values/strings.xml", "insertions": 3, "deletions": 0}, {"lines": 12, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/{ => results}/Device.java", "insertions": 6, "deletions": 6}, {"lines": 189, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientUITest.java", "insertions": 189, "deletions": 0}, {"lines": 73, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientUITestActivity.java", "insertions": 73, "deletions": 0}, {"lines": 5, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/drawable/ic_launcher_round.xml", "insertions": 5, "deletions": 0}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-mdpi/ic_launcher_round.png", "insertions": 0, "deletions": 0}, {"lines": 18, "filePath": "aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/AuthClient.java", "insertions": 15, "deletions": 3}, {"lines": 5, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-anydpi-v26/ic_launcher.xml", "insertions": 5, "deletions": 0}, {"lines": 6, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/values/colors.xml", "insertions": 6, "deletions": 0}, {"lines": 2, "filePath": "aws-android-sdk-mobile-client/src/main/AndroidManifest.xml", "insertions": 1, "deletions": 1}, {"lines": 27, "filePath": "aws-android-sdk-mobile-client/src/androidTest/AndroidManifest.xml", "insertions": 25, "deletions": 2}, {"lines": 5, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/drawable/ic_launcher.xml", "insertions": 5, "deletions": 0}, {"lines": 11, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/values/styles.xml", "insertions": 11, "deletions": 0}, {"lines": 10, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/SignInUIOptions.java", "insertions": 10, "deletions": 0}, {"lines": 172, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientOAuth2Test.java", "insertions": 172, "deletions": 0}, {"lines": 26, "filePath": "aws-android-sdk-mobile-client/build.gradle", "insertions": 25, "deletions": 1}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xxhdpi/ic_launcher_round.png", "insertions": 0, "deletions": 0}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-mdpi/ic_launcher.png", "insertions": 0, "deletions": 0}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xxhdpi/ic_launcher.png", "insertions": 0, "deletions": 0}, {"lines": 769, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java", "insertions": 734, "deletions": 35}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xxxhdpi/ic_launcher_round.png", "insertions": 0, "deletions": 0}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xhdpi/ic_launcher_round.png", "insertions": 0, "deletions": 0}, {"lines": 39, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/DeviceOperations.java", "insertions": 20, "deletions": 19}, {"lines": 111, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/HostedUIOptions.java", "insertions": 111, "deletions": 0}, {"lines": 103, "filePath": "aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUser.java", "insertions": 90, "deletions": 13}, {"lines": 8, "filePath": "aws-android-sdk-mobile-client/pom.xml", "insertions": 8, "deletions": 0}, {"lines": 26, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/layout/activity_awsmobileclient_ui_test.xml", "insertions": 26, "deletions": 0}, {"lines": 25, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/internal/oauth2/OAuth2Exception.java", "insertions": 25, "deletions": 0}, {"lines": 16, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/internal/oauth2/AuthorizeResponse.java", "insertions": 16, "deletions": 0}, {"lines": 15, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTest.java", "insertions": 8, "deletions": 7}, {"lines": 10, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/FederatedSignInOptions.java", "insertions": 5, "deletions": 5}], "commitDateTime": "2019-03-14 08:45:34", "spoonStatsSkippedReason": "tooManyChanges"}, {"commitMessage": "", "commitParents": [], "commitHash": "54875b77660a9e67aac1a5a92ccb8137380e9117", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "", "commitParents": [], "commitHash": "3d685f271466697d6a4c2b859d9ca920047f5380", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "", "commitParents": [], "commitHash": "cc5e1309f2759005abf672bd3c40dbf119f2a554", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "", "commitParents": [], "commitHash": "4f9444ba2fdee85de3922d96beb8ac78afb5ec03", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "", "commitParents": [], "commitHash": "fdef7d3366fb89f0ee32ed9abf951c3c84322891", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}], "title": "AWSMobileClient.getInstance().showSignIn() Crash in 2.12.1 upon submit: Can't create handler inside thread that has not called Looper.prepare()", "spoonStatsSummary": {}, "gitStatsSummary": {"lines": 0.0, "insertions": 0.0, "gitFilesChange": 0, "deletions": 0.0}, "closed": "2019-03-15 20:28:07", "statsSkippedReason": "", "body": "**Describe the bug**\r\nI have an app running in 2.12.0.  The app displays the SignInUI successfully and it works, signing in the user and also displaying errors when appropriate. After upgrade to 2.12.1, the app will now crash when the sign-in UI Sign In button is selected.  No other code changed in the app. Reverting back to 2.12.0 resolves the problem. \r\n\r\nThe exception for use case, user does not provide any input an selects the Sign In button.\r\n```\r\n2019-02-25 00:43:15.025 2239-2293/com.buntingsoftware.modlist E/CognitoUserPoolsSignInProvider: Failed to login.\r\n    com.amazonaws.services.cognitoidentityprovider.model.InvalidParameterException: Missing required parameter USERNAME (Service: AmazonCognitoIdentityProvider; Status Code: 400; Error Code: InvalidParameterException; Request ID: 3d005900-38c0-11e9-89c6-1da46b80413b)\r\n        at com.amazonaws.http.AmazonHttpClient.handleErrorResponse(AmazonHttpClient.java:730)\r\n        at com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:405)\r\n        at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:212)\r\n        at com.amazonaws.services.cognitoidentityprovider.AmazonCognitoIdentityProviderClient.invoke(AmazonCognitoIdentityProviderClient.java:5953)\r\n        at com.amazonaws.services.cognitoidentityprovider.AmazonCognitoIdentityProviderClient.initiateAuth(AmazonCognitoIdentityProviderClient.java:4127)\r\n        at com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser$23.run(CognitoUser.java:2352)\r\n        at com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser$6$1.run(CognitoUser.java:782)\r\n        at java.lang.Thread.run(Thread.java:761)\r\n    \r\n    \r\n    --------- beginning of crash\r\n2019-02-25 00:43:15.027 2239-2293/com.buntingsoftware.modlist E/AndroidRuntime: FATAL EXCEPTION: Thread-13\r\n    Process: com.buntingsoftware.modlist, PID: 2239\r\n    java.lang.RuntimeException: Can't create handler inside thread that has not called Looper.prepare()\r\n        at android.os.Handler.<init>(Handler.java:200)\r\n        at android.os.Handler.<init>(Handler.java:114)\r\n        at android.app.Dialog.<init>(Dialog.java:151)\r\n        at android.app.AlertDialog.<init>(AlertDialog.java:200)\r\n        at android.app.AlertDialog$Builder.create(AlertDialog.java:1103)\r\n        at android.app.AlertDialog$Builder.show(AlertDialog.java:1130)\r\n        at com.amazonaws.mobile.auth.core.internal.util.ViewHelper.showDialog(ViewHelper.java:46)\r\n        at com.amazonaws.mobile.auth.userpools.CognitoUserPoolsSignInProvider$4.onFailure(CognitoUserPoolsSignInProvider.java:363)\r\n        at com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser$23.run(CognitoUser.java:2381)\r\n        at com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser$6$1.run(CognitoUser.java:782)\r\n        at java.lang.Thread.run(Thread.java:761)\r\n```\r\n\r\n**To Reproduce**\r\nA code sample or steps:\r\n\r\ninitialize AWS then show the sign in as follows: \r\n\r\n```\r\n    private void showSignIn() {\r\n        Log.d(TAG, \"showSignIn()\");\r\n\r\n        runOnUiThread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n\r\n                AWSMobileClient.getInstance().showSignIn(\r\n                        MainActivity.this,\r\n                        SignInUIOptions.builder()\r\n                                .nextActivity(MainActivity.class)\r\n                                .logo(R.drawable.ic_modlist_aws_signin_icon)\r\n                                .backgroundColor(Color.parseColor(\"#7FA7BC\"))\r\n                                .canCancel(false)\r\n                                .build(),\r\n                        new Callback<UserStateDetails>() {\r\n                            @Override\r\n                            public void onResult(UserStateDetails result) {\r\n                                Log.d(TAG, \"showSignIn() onResult() result: userState: \" + result.getUserState());\r\n                                switch (result.getUserState()) {\r\n                                    case SIGNED_IN:\r\n                                        Log.d(TAG, \"showSignIn() callback: SIGNED_IN logged in!\");\r\n                                        initializeAndLoadData();\r\n                                        break;\r\n                                    case SIGNED_OUT:\r\n                                        Log.d(TAG, \"showSignIn() callback onResult: SIGNED_OUT \");\r\n                                        initializeAWSMobileClient();\r\n                                        break;\r\n                                    case SIGNED_OUT_FEDERATED_TOKENS_INVALID:\r\n                                        Log.d(TAG, \"showSignIn() callback onResult: SIGNED_OUT_FEDERATED_TOKENS_INVALID\");\r\n                                        initializeAWSMobileClient();\r\n                                        break;\r\n                                    case SIGNED_OUT_USER_POOLS_TOKENS_INVALID:\r\n                                        Log.d(TAG, \"showSignIn() callback onResult: SIGNED_OUT_USER_POOLS_TOKENS_INVALID\");\r\n                                        initializeAWSMobileClient();\r\n                                        break;\r\n                                    case GUEST:\r\n                                        Log.d(TAG, \"showSignIn() callback onResult: GUEST\");\r\n                                        initializeAWSMobileClient();\r\n                                        break;\r\n                                    case UNKNOWN:\r\n                                        Log.d(TAG, \"showSignIn() callback onResult: UNKNOWN\");\r\n                                        initializeAWSMobileClient();\r\n                                        break;\r\n                                    default:\r\n                                        Log.d(TAG, \"showSignIn() callback onResult: default; Should not be possible.\");\r\n                                        initializeAWSMobileClient();\r\n                                        break;\r\n                                }\r\n                            }\r\n\r\n                            @Override\r\n                            public void onError(Exception e) {\r\n                                Log.e(TAG, \"showSignIn().onError: \", e);\r\n                            }\r\n                        }\r\n                );\r\n            }});\r\n    }\r\n```\r\n\r\n```\r\napply plugin: 'com.android.application'\r\n\r\nandroid {\r\n    compileSdkVersion 27\r\n    defaultConfig {\r\n        applicationId \"com.buntingsoftware.modlist\"\r\n        minSdkVersion 23\r\n        targetSdkVersion 27\r\n        versionCode 58\r\n        versionName \"1.16.2\"\r\n        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables.useSupportLibrary = true\r\n        multiDexEnabled = true\r\n    }\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    productFlavors {\r\n    }\r\n\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        jcenter()\r\n        maven { url \"https://maven.google.com\" }\r\n        maven { url \"https://jitpack.io\" }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(include: ['*.jar'], dir: 'libs')\r\n    implementation 'com.android.support.constraint:constraint-layout:1.1.3'\r\n    implementation 'com.android.support:appcompat-v7:27.1.1'\r\n    implementation 'com.android.support:design:27.1.1'\r\n    implementation 'com.android.support:support-vector-drawable:27.1.1'\r\n    implementation 'com.android.support:recyclerview-v7:27.1.1'\r\n    implementation 'com.android.support:support-v4:27.1.1'\r\n    implementation 'com.android.support:cardview-v7:27.1.1'\r\n    implementation 'com.android.support:gridlayout-v7:27.1.1'\r\n    implementation 'com.android.support:customtabs:27.1.1'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'com.android.support.test:runner:1.0.2'\r\n    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'\r\n    implementation 'com.android.support:multidex:1.0.3'\r\n//\r\n//    implementation 'com.amazonaws:aws-android-sdk-core:2.12.0'\r\n//    implementation 'com.amazonaws:aws-android-sdk-auth-core:2.12.0@aar'\r\n//    implementation 'com.amazonaws:aws-android-sdk-pinpoint:2.12.0'\r\n//    implementation 'com.amazonaws:aws-android-sdk-ddb:2.12.0'\r\n//    implementation 'com.amazonaws:aws-android-sdk-ddb-mapper:2.12.0'\r\n//    implementation('com.amazonaws:aws-android-sdk-mobile-client:2.12.0@aar') { transitive = true }\r\n//    implementation('com.amazonaws:aws-android-sdk-auth-userpools:2.12.0@aar') { transitive = true }\r\n//\r\n//    implementation('com.amazonaws:aws-android-sdk-auth-ui:2.12.0@aar') { transitive = true }\r\n//    implementation('com.amazonaws:aws-android-sdk-auth-facebook:2.12.0@aar') { transitive = true }\r\n//    implementation('com.amazonaws:aws-android-sdk-auth-google:2.12.0@aar') { transitive = true }\r\n//    implementation('com.amazonaws:aws-android-sdk-apigateway-core:2.12.0') { transitive = true }\r\n//    implementation('com.amazonaws:aws-android-sdk-cognitoidentityprovider:2.12.0') {\r\n//        transitive = true\r\n//    }\r\n\r\n\r\n    implementation 'com.amazonaws:aws-android-sdk-core:2.12.1'\r\n    implementation 'com.amazonaws:aws-android-sdk-auth-core:2.12.1@aar'\r\n    implementation 'com.amazonaws:aws-android-sdk-pinpoint:2.12.1'\r\n    implementation 'com.amazonaws:aws-android-sdk-ddb:2.12.1'\r\n    implementation 'com.amazonaws:aws-android-sdk-ddb-mapper:2.12.1'\r\n    implementation('com.amazonaws:aws-android-sdk-mobile-client:2.12.1@aar') { transitive = true }\r\n    implementation('com.amazonaws:aws-android-sdk-auth-userpools:2.12.1@aar') { transitive = true }\r\n\r\n    implementation('com.amazonaws:aws-android-sdk-auth-ui:2.12.1@aar') { transitive = true }\r\n    implementation('com.amazonaws:aws-android-sdk-auth-facebook:2.12.1@aar') { transitive = true }\r\n    implementation('com.amazonaws:aws-android-sdk-auth-google:2.12.1@aar') { transitive = true }\r\n    implementation('com.amazonaws:aws-android-sdk-apigateway-core:2.12.1') { transitive = true }\r\n    implementation('com.amazonaws:aws-android-sdk-cognitoidentityprovider:2.12.1') {\r\n        transitive = true\r\n    }\r\n\r\n\r\n    // Added per Pinpoint Push Notifications documentation:\r\n    // https://docs.aws.amazon.com/aws-mobile/latest/developerguide/add-aws-mobile-push-notifications.html\r\n    implementation 'com.google.android.gms:play-services-auth:16.0+'\r\n    implementation 'com.google.firebase:firebase-core:16.0.+'\r\n    implementation 'com.google.firebase:firebase-messaging:17.3.4'\r\n\r\n}\r\n\r\n// Added per Pinpoint Push Notifications documentation:\r\n// https://docs.aws.amazon.com/aws-mobile/latest/developerguide/add-aws-mobile-push-notifications.html\r\napply plugin: 'com.google.gms.google-services'\r\n```\r\n**Which AWS service(s) are affected?**\r\nCognito User Pool sign in with AWSMobileClient.getInstance().showSignIn()\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.12.1\r\n - Device: Samsung SMJ72VPP (device) or Simulator Pixel 2\r\n - Android Version: 7.0 API 24 or 9.0 API 28\r\n - Specific to simulators: No\r\n\r\n**Additional context**\r\nThe only change I made in my app was to change the AWS version to 2.12.1\r\n\r\n", "changesInPackagesGIT": [], "ttf": 18.00027777777778, "numCommits": 0, "url": "https://github.com/aws-amplify/aws-sdk-android/issues/722"}, {"labels": ["Bug", "Needs Info from Requester", "S3", "closing-soon-if-no-response"], "closed": "2019-06-27 20:26:40", "body": "**Describe the bug**\r\n```\r\nAttempt to invoke virtual method 'int java.lang.String.length()' on a null object reference\r\n at com.amazonaws.util.BinaryUtils.fromHex(BinaryUtils.java:64)\r\n```\r\n**x-amz-request-id**\r\n 27DBF521DFDAFAF9\r\n\r\n**x-amz-id-2**: QT2WH/C8fp1G2ClBNIYZBBaqEr7y79qStDGAmsS7dWYkm8000w9uuLTlNePXXt8JHtonNKmLnn4=\r\n\r\n*AmazonS3Client.putObject*\r\n```\r\n            final byte[] serverSideHash = BinaryUtils.fromHex(returnedMetadata.getETag());\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\ns3 \r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 2.11.0\r\n\r\n", "commits": {}, "title": "[S3] AmazonS3Client putObject throws NPE due to ETag being null in the returned object metadata", "created": "2019-02-21 10:42:38", "user": "awc", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/717", "commitsDetails": [], "ttf": 126.00027777777778}, {"labels": ["AWSMobileClient", "Bug", "Needs Info from Requester"], "closed": "2019-02-23 03:10:09", "body": "**Describe the bug**\r\nUse AWSMobileClient to change password, it always return onError even if new password is applied (changing password is success). In this case, the received exception is null object.\r\n\r\n**To Reproduce**\r\n```\r\nAWSMobileClient.getInstance().changePassword(oldPassword, proposedPassword, new Callback<Void>() {\r\n            @Override\r\n            public void onResult(Void result) {\r\n                // Never be called, even if changing password is success.\r\n            }\r\n            @Override\r\n            public void onError(Exception e) {\r\n               // Always called, even if change password is success.\r\n            }\r\n        });\r\n\r\n```\r\n**Which AWS service(s) are affected?**\r\nAWSMobileClient\r\n\r\n**Expected behavior**\r\nWhen changing password is success, onResult should be called properly.\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version:  2.12.0\r\n - Device: Motorola Z Play (XT1635-02)\r\n - Android Version: 8.0.0\r\n", "commits": {}, "title": "AWSMobileClient change password always return onError even if change password result is success.", "created": "2019-02-21 04:44:09", "user": "HayTran94", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/716", "commitsDetails": [], "ttf": 1.0002777777777778}, {"labels": ["Bug", "KinesisVideo", "Needs Info from Requester", "closing-soon-if-no-response"], "closed": "2019-08-09 14:27:40", "body": "**Unable to get a stream to work.**\r\nWhen I run the [AmazonKinesisVideoDemoApp](https://github.com/awslabs/aws-sdk-android-samples/tree/master/AmazonKinesisVideoDemoApp) I am unable to get the stream to show up on the Amazon Kinesis Video Streams Console page.\r\n\r\n**To Reproduce**\r\nA code sample or steps:\r\n\r\n- clone https://github.com/awslabs/aws-sdk-android-samples/tree/master/AmazonKinesisVideoDemoApp\r\n- modify lines 6,7, 16,17,18 & 19 on `AmazonKinesisVideoDemoApp/src/main/res/raw/awsconfiguration.json`\r\n- modify line 16 on `AmazonKinesisVideoDemoApp/src/main/java/com/amazonaws/kinesisvideo/demoapp/KinesisVideoDemoApp.java`\r\n- replace line 169 on `AmazonKinesisVideoDemoApp/src/main/java/com/amazonaws/kinesisvideo/demoapp/fragment/StreamConfigurationFragment.java` from \r\n`                      .withNalAdaptationFlags(StreamInfo.NalAdaptationFlags.NAL_ADAPTATION_ANNEXB_CPD_AND_FRAME_NALS)\r\n` to \r\n`                        .withNalAdaptationFlags(StreamInfo.NalAdaptationFlags.NAL_ADAPTATION_ANNEXB_CPD_NALS)` -- this was required to prevent the error `Failed to put a frame into the stream`\r\n- Updated the KEY_STREAM_NAME in the `AmazonKinesisVideoDemoApp/src/main/java/com/amazonaws/kinesisvideo/demoapp/fragment/StreamingFragment.java` to match the stream `demo-stream` that I am using\r\n\r\n\r\n**Which AWS service(s) are affected?**\r\naws-sdk-android-samples/AmazonKinesisDemoApp\r\n\r\n**Expected behavior**\r\n- Log in, set the `Stream Name` to `demo-stream`, then select `Stream`\r\n- I expect the stream to show up here: https://console.aws.amazon.com/kinesisvideo/streams/streamName/demo-stream?region=us-east-1\r\n\r\n**Screenshots**\r\nThe error image when looking at the console\r\n![image](https://user-images.githubusercontent.com/2779689/52884989-51fbe080-3135-11e9-8df2-2f2a028eeaea.png)\r\n\r\nNow I notice there is an issue with the timestamp, but I didn't modify any code so I'm not sure if that is what might be causing the issue.\r\n\r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: \r\nhttps://github.com/awslabs/aws-sdk-android-samples/commit/2d700d6f8180e7ea59df199f069ee74942422860\r\n - Device: Pixel 3 XL\r\n - Android Version: 9\r\n - Specific to simulators: No\r\n\r\n\r\nWhat do I need to do to get a stream to work from Android? ", "commits": {}, "title": "Unable to get android kinesis to stream to the console", "created": "2019-02-15 21:23:47", "user": "thebehera", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/707", "commitsDetails": [], "ttf": 174.00027777777777}, {"filteredCommitsReason": {"alsoFixesPhrase": 0, "duplicated": 2, "mergeCommitUsed": 0, "moreThanOneParent": 0, "unavailable": 0, "multipleIssueFixes": 1}, "labels": ["AWSMobileClient", "Bug", "Needs Info from Requester"], "user": "BillBunting", "filteredCommits": [], "commits": {"254e91bdc9838dd48cdd089fdc42451245769edf": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "7d0b3a77d47735c4a38968b078383a80e6d772d4": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "b054ee84d10f5a7ea682c543c2839599e7cbedd2": {"commitUser": "sunchunqiang", "commitGHEventType": "referenced"}}, "created": "2019-02-14 16:55:11", "commitsDetails": [{"commitMessage": "", "commitParents": [], "commitHash": "254e91bdc9838dd48cdd089fdc42451245769edf", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "Update federatedSignIn to immediately contact service; refresh Google/Facebook from drop-in UI\n\nUpdated `federatedSignIn()` method to contact the service immediately to validate tokens. The `signIn()` method will also attempt to federated immediately when applicable. See [issue #800](https://github.com/aws-amplify/aws-sdk-android/issues/800)\nFix Google or Facebook refresh when using the drop-in UI. See [issue #809](https://github.com/aws-amplify/aws-sdk-android/issues/809), [issue #700](https://github.com/aws-amplify/aws-sdk-android/issues/700)\nAnnotated methods that are designed to be called from UI thread or from a background thread with @AnyThread and @WorkerThread, respectively.\n", "commitParents": ["45e71599b6f3f14c359f96f820db21a1c0f5e27f"], "commitHash": "7d0b3a77d47735c4a38968b078383a80e6d772d4", "commitSpoonAstDiffStats": [{"spoonFilePath": "AWSMobileClient.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6.run().1.run()", "DEL": 0, "INS": 0, "UPD": 5, "MOV": 7, "TOT": 12}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.util.Map,com.amazonaws.mobile.client.Callback).15", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getAWSCredentials(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.verifyUserAttribute(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._initialize(android.content.Context,com.amazonaws.mobile.config.AWSConfiguration,com.amazonaws.mobile.client.Callback).2.run()", "DEL": 12, "INS": 12, "UPD": 1, "MOV": 0, "TOT": 25}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._forgotPassword(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmVerifyUserAttribute(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signOut()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.updateUserAttributes(java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._resendSignUp(java.lang.String,com.amazonaws.mobile.client.Callback).10", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.handleAuthResponse(android.content.Intent)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context,com.amazonaws.mobile.config.AWSConfiguration,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._initialize(android.content.Context,com.amazonaws.mobile.config.AWSConfiguration,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.resendSignUp(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.currentUserState(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.getMFACode(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.MultiFactorAuthenticationContinuation)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run().1.onFailure(java.lang.Exception)", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.currentUserState()", "DEL": 0, "INS": 1, "UPD": 2, "MOV": 3, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback).4.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserSession,com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoDevice)", "DEL": 1, "INS": 0, "UPD": 5, "MOV": 0, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmUpdateUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 6, "TOT": 7}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmUpdateUserAttribute(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getUserAttributes(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.lang.String,com.amazonaws.mobile.client.Callback).14", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._changePassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).13", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInDropInUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).23", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback).18.run()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getUserAttributes(com.amazonaws.mobile.client.Callback).16.run()", "DEL": 1, "INS": 0, "UPD": 0, "MOV": 1, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 4, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmForgotPassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback).17", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInDropInUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUserAttributes()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.getAuthenticationDetails(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationContinuation,java.lang.String)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUsername()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmForgotPassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getUserAttributes(com.amazonaws.mobile.client.Callback).16", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run().1.onResult(com.amazonaws.mobile.client.internal.oauth2.AuthorizeResponse).1.onResult(com.amazonaws.mobile.client.internal.oauth2.OAuth2Tokens)", "DEL": 0, "INS": 0, "UPD": 4, "MOV": 1, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.addUserStateListener(com.amazonaws.mobile.client.UserStateListener)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getTokens()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._changePassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignUp(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmForgotPassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).12", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run()", "DEL": 0, "INS": 0, "UPD": 5, "MOV": 0, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoauth.AuthUserSession).2.run()", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).19", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback).17.run()", "DEL": 0, "INS": 0, "UPD": 0, "MOV": 1, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.resendSignUp(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.amazonaws.mobile.client.Callback).8", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).19.run()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 2, "TOT": 3}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._resendSignUp(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signOut(com.amazonaws.mobile.client.SignOutOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 4, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6.run()", "DEL": 3, "INS": 0, "UPD": 2, "MOV": 4, "TOT": 9}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.authenticationChallenge(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.ChallengeContinuation)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run().1.onResult(com.amazonaws.mobile.client.internal.oauth2.AuthorizeResponse).1.onResult(com.amazonaws.mobile.client.internal.oauth2.OAuth2Tokens).1.onError(java.lang.Exception)", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 2, "TOT": 4}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getTokens(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._forgotPassword(java.lang.String,com.amazonaws.mobile.client.Callback).11", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.changePassword(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignUp(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.forgotPassword(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run()", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback).18", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUserAttributes(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmVerifyUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 2, "UPD": 0, "MOV": 6, "TOT": 8}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run().1.onResult(com.amazonaws.mobile.client.internal.oauth2.AuthorizeResponse).1.onResult(com.amazonaws.mobile.client.internal.oauth2.OAuth2Tokens).1.onResult(com.amazonaws.mobile.client.UserStateDetails)", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 3, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.forgotPassword(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUserStateDetails(boolean)", "DEL": 0, "INS": 4, "UPD": 1, "MOV": 0, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback).4.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserSession,com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoDevice).1.onResult(com.amazonaws.mobile.client.UserStateDetails)", "DEL": 0, "INS": 0, "UPD": 0, "MOV": 1, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignUp(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signOut(com.amazonaws.mobile.client.SignOutOptions).5.run()", "DEL": 0, "INS": 0, "UPD": 5, "MOV": 0, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signOut(com.amazonaws.mobile.client.SignOutOptions)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getDeviceOperations()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context,com.amazonaws.mobile.client.AWSStartupHandler).25", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback).18.run()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmForgotPassword(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.changePassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signOut(com.amazonaws.mobile.client.SignOutOptions).5", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback).4", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.isSignedIn()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.onFailure(java.lang.Exception)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getAWSCredentials()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).20", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInDropInUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).23.run()", "DEL": 0, "INS": 0, "UPD": 6, "MOV": 0, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getIdentityId()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signIn(java.lang.String,java.lang.String,java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.removeUserStateListener(com.amazonaws.mobile.client.UserStateListener)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignUp(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).9", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).7.run()", "DEL": 0, "INS": 2, "UPD": 0, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context).24", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6.end(com.amazonaws.mobile.client.UserStateDetails)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run()", "DEL": 1, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 3}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoauth.AuthUserSession)", "DEL": 0, "INS": 0, "UPD": 4, "MOV": 0, "TOT": 4}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.releaseSignInWait()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}]}, {"spoonFilePath": "AWSMobileClientTest.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.deleteAllUsers(java.lang.String)", "DEL": 1, "INS": 2, "UPD": 8, "MOV": 9, "TOT": 20}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testFederate()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}]}, {"spoonFilePath": "UserStateDetails.java", "spoonMethods": []}, {"spoonFilePath": "GoogleSignInProvider.java", "spoonMethods": []}], "nameRev": "7d0b3a77d47735c4a38968b078383a80e6d772d4 tags/release_v2.16.12~378^2~14", "commitUser": "minbi", "authoredDateTime": "2019-04-02 10:07:08", "commitGHEventType": "referenced", "commitGitStats": [{"lines": 7, "filePath": "CHANGELOG.md", "insertions": 7, "deletions": 0}, {"lines": 218, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java", "insertions": 182, "deletions": 36}, {"lines": 1, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/UserStateDetails.java", "insertions": 0, "deletions": 1}, {"lines": 4, "filePath": "aws-android-sdk-auth-google/src/main/java/com/amazonaws/mobile/auth/google/GoogleSignInProvider.java", "insertions": 2, "deletions": 2}, {"lines": 43, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTest.java", "insertions": 31, "deletions": 12}], "commitDateTime": "2019-04-02 12:24:03", "spoonStatsSkippedReason": ""}, {"commitMessage": "Update federatedSignIn to immediately contact service; refresh Google/Facebook from drop-in UI\n\nUpdated `federatedSignIn()` method to contact the service immediately to validate tokens. The `signIn()` method will also attempt to federated immediately when applicable. See [issue #800](https://github.com/aws-amplify/aws-sdk-android/issues/800)\nFix Google or Facebook refresh when using the drop-in UI. See [issue #809](https://github.com/aws-amplify/aws-sdk-android/issues/809), [issue #700](https://github.com/aws-amplify/aws-sdk-android/issues/700)\nAnnotated methods that are designed to be called from UI thread or from a background thread with @AnyThread and @WorkerThread, respectively.\n", "commitParents": ["1385b0489a80df04c2f6f7fe997f336c804e76c3"], "commitHash": "b054ee84d10f5a7ea682c543c2839599e7cbedd2", "commitSpoonAstDiffStats": [{"spoonFilePath": "AWSMobileClient.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6.run().1.run()", "DEL": 0, "INS": 0, "UPD": 5, "MOV": 7, "TOT": 12}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.util.Map,com.amazonaws.mobile.client.Callback).15", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getAWSCredentials(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.verifyUserAttribute(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._initialize(android.content.Context,com.amazonaws.mobile.config.AWSConfiguration,com.amazonaws.mobile.client.Callback).2.run()", "DEL": 12, "INS": 12, "UPD": 1, "MOV": 0, "TOT": 25}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._forgotPassword(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmVerifyUserAttribute(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signOut()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.updateUserAttributes(java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._resendSignUp(java.lang.String,com.amazonaws.mobile.client.Callback).10", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.handleAuthResponse(android.content.Intent)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context,com.amazonaws.mobile.config.AWSConfiguration,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._initialize(android.content.Context,com.amazonaws.mobile.config.AWSConfiguration,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.resendSignUp(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.currentUserState(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.getMFACode(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.MultiFactorAuthenticationContinuation)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run().1.onFailure(java.lang.Exception)", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.currentUserState()", "DEL": 0, "INS": 1, "UPD": 2, "MOV": 3, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback).4.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserSession,com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoDevice)", "DEL": 1, "INS": 0, "UPD": 5, "MOV": 0, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmUpdateUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 6, "TOT": 7}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmUpdateUserAttribute(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getUserAttributes(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.lang.String,com.amazonaws.mobile.client.Callback).14", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._changePassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).13", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInDropInUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).23", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback).18.run()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getUserAttributes(com.amazonaws.mobile.client.Callback).16.run()", "DEL": 1, "INS": 0, "UPD": 0, "MOV": 1, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 4, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmForgotPassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback).17", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInDropInUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUserAttributes()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.getAuthenticationDetails(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationContinuation,java.lang.String)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUsername()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmForgotPassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getUserAttributes(com.amazonaws.mobile.client.Callback).16", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run().1.onResult(com.amazonaws.mobile.client.internal.oauth2.AuthorizeResponse).1.onResult(com.amazonaws.mobile.client.internal.oauth2.OAuth2Tokens)", "DEL": 0, "INS": 0, "UPD": 4, "MOV": 1, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.addUserStateListener(com.amazonaws.mobile.client.UserStateListener)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getTokens()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._changePassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignUp(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmForgotPassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).12", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run()", "DEL": 0, "INS": 0, "UPD": 5, "MOV": 0, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 5, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoauth.AuthUserSession).2.run()", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).19", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignIn(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback).17.run()", "DEL": 0, "INS": 0, "UPD": 0, "MOV": 1, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.resendSignUp(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.amazonaws.mobile.client.Callback).8", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).19.run()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 2, "TOT": 3}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._resendSignUp(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signOut(com.amazonaws.mobile.client.SignOutOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignIn(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 4, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6.run()", "DEL": 3, "INS": 0, "UPD": 2, "MOV": 4, "TOT": 9}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.authenticationChallenge(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.ChallengeContinuation)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run().1.onResult(com.amazonaws.mobile.client.internal.oauth2.AuthorizeResponse).1.onResult(com.amazonaws.mobile.client.internal.oauth2.OAuth2Tokens).1.onError(java.lang.Exception)", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 2, "TOT": 4}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getTokens(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._forgotPassword(java.lang.String,com.amazonaws.mobile.client.Callback).11", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.changePassword(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignUp(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.forgotPassword(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run()", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback).18", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUserAttributes(com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmVerifyUserAttribute(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 2, "UPD": 0, "MOV": 6, "TOT": 8}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInOAuth2UI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).21.run().1.onResult(com.amazonaws.mobile.client.internal.oauth2.AuthorizeResponse).1.onResult(com.amazonaws.mobile.client.internal.oauth2.OAuth2Tokens).1.onResult(com.amazonaws.mobile.client.UserStateDetails)", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 3, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.forgotPassword(java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getUserStateDetails(boolean)", "DEL": 0, "INS": 4, "UPD": 1, "MOV": 0, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback).4.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserSession,com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoDevice).1.onResult(com.amazonaws.mobile.client.UserStateDetails)", "DEL": 0, "INS": 0, "UPD": 0, "MOV": 1, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmSignUp(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signOut(com.amazonaws.mobile.client.SignOutOptions).5.run()", "DEL": 0, "INS": 0, "UPD": 5, "MOV": 0, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signOut(com.amazonaws.mobile.client.SignOutOptions)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getDeviceOperations()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context,com.amazonaws.mobile.client.AWSStartupHandler).25", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._updateUserAttributes(java.util.Map,com.amazonaws.mobile.client.Callback).18.run()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.confirmForgotPassword(java.lang.String,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.changePassword(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signUp(java.lang.String,java.lang.String,java.util.Map,java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signOut(com.amazonaws.mobile.client.SignOutOptions).5", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback).4", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.isSignedIn()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._getTokens(com.amazonaws.mobile.client.Callback,boolean).7.run().2.onFailure(java.lang.Exception)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getAWSCredentials()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).20", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInDropInUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).23.run()", "DEL": 0, "INS": 0, "UPD": 6, "MOV": 0, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.getIdentityId()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.signIn(java.lang.String,java.lang.String,java.util.Map)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.removeUserStateListener(com.amazonaws.mobile.client.UserStateListener)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._confirmSignUp(java.lang.String,java.lang.String,com.amazonaws.mobile.client.Callback).9", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).7.run()", "DEL": 0, "INS": 2, "UPD": 0, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.initialize(android.content.Context).24", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._federatedSignIn(java.lang.String,java.lang.String,com.amazonaws.mobile.client.FederatedSignInOptions,com.amazonaws.mobile.client.Callback,boolean).6.end(com.amazonaws.mobile.client.UserStateDetails)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._signIn(java.lang.String,java.lang.String,java.util.Map,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.verifyUserAttribute(java.lang.String,com.amazonaws.mobile.client.Callback)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.showSignIn(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run()", "DEL": 1, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 3}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient._showSignInHostedUI(android.app.Activity,com.amazonaws.mobile.client.SignInUIOptions,com.amazonaws.mobile.client.Callback).22.run().1.onSuccess(com.amazonaws.mobileconnectors.cognitoauth.AuthUserSession)", "DEL": 0, "INS": 0, "UPD": 4, "MOV": 0, "TOT": 4}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClient.releaseSignInWait()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}]}, {"spoonFilePath": "AWSMobileClientTest.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.deleteAllUsers(java.lang.String)", "DEL": 1, "INS": 2, "UPD": 8, "MOV": 9, "TOT": 20}, {"spoonMethodName": "com.amazonaws.mobile.client.AWSMobileClientTest.testFederate()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}]}, {"spoonFilePath": "UserStateDetails.java", "spoonMethods": []}, {"spoonFilePath": "GoogleSignInProvider.java", "spoonMethods": []}], "nameRev": "b054ee84d10f5a7ea682c543c2839599e7cbedd2 tags/release_v2.16.12~394", "commitUser": "sunchunqiang", "authoredDateTime": "2019-04-02 10:07:08", "commitGHEventType": "referenced", "commitGitStats": [{"lines": 7, "filePath": "CHANGELOG.md", "insertions": 7, "deletions": 0}, {"lines": 218, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java", "insertions": 182, "deletions": 36}, {"lines": 1, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/UserStateDetails.java", "insertions": 0, "deletions": 1}, {"lines": 4, "filePath": "aws-android-sdk-auth-google/src/main/java/com/amazonaws/mobile/auth/google/GoogleSignInProvider.java", "insertions": 2, "deletions": 2}, {"lines": 43, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTest.java", "insertions": 31, "deletions": 12}], "commitDateTime": "2019-04-02 22:03:38", "spoonStatsSkippedReason": ""}], "title": "For Google Federated Signin: AWSMobileClient.getInstance().initialize returns userState SIGNED_IN but AWSMobileClient.getInstance().getIdentityId() is null", "spoonStatsSummary": {"spoonMethodsChanged": 0, "DEL": 0.0, "INS": 0.0, "UPD": 0.0, "MOV": 0.0, "TOT": 0.0, "spoonFilesChanged": 0}, "gitStatsSummary": {"lines": 0.0, "insertions": 0.0, "gitFilesChange": 0, "deletions": 0.0}, "closed": "2019-04-08 21:00:25", "statsSkippedReason": "", "body": "**Describe the bug**\r\nFor Google sign-in, AWSMobileClient.getInstance().initialize returns SIGNED_IN but AWSMobileClient.getInstance().getIdentityId() == null \r\n\r\nThis is related to a larger issue I am trying to resolve. Facebook federated sign-in via AWSMobileClient.getInstance().showSignIn works perfectly. But, Google does not. \r\n\r\nWith Google, if a user signs out then attempts to sign in again, the sign-in will fail. AWSMobileClient may not refresh the token. After a token expires, it is not refreshed. AWSMobileClient should be refreshing the token automatically?  Details below.\r\n\r\n**To Reproduce**\r\n\r\nSign-in by selecting the \"Sign in with Google\"  button on the AWSMobileClient.getInstance().showSignIn view. The first time, this will work. Then, call AWSMobileClient.getInstance().signOut() followed by AWSMobileClient.getInstance().showSignIn. The second time, the sign-in claims to succeed but the identityId is returned as null.  \r\n\r\nWhat is the proper way or location to get the identityId by calling AWSMobileClient.getInstance().getIdentityId() ?\r\n\r\nI suspect this may be a bug related to not refreshing the token properly for Google federated sign-in.  Calling sign-out in the app has a similar effect as waiting for the token to expire.  Both cases result in a call to AWSMobileClient.getInstance().getIdentityId() returning null. However, Facebook federated sign-in does not have this problem. \r\n\r\nA code sample or steps:\r\n```\r\nAWSMobileClient.getInstance().initialize(getApplicationContext(), new Callback<UserStateDetails>() {\r\n\r\n                    @Override\r\n                    public void onResult(UserStateDetails userStateDetails) {\r\n                        Log.d(TAG, \"initializeAWSMobileClient() AWSMobileClient.getInstance().initialize() : userState: \" + userStateDetails.getUserState());\r\n\r\n                        registerUserStateListener();\r\n\r\n                        switch (userStateDetails.getUserState()) {\r\n                            case SIGNED_IN:\r\n                                Log.d(TAG, \"initializeAWSMobileClient() AWSMobileClient.getInstance().initialize(): userState: logged in!\");\r\n                                if (AWSMobileClient.getInstance().getIdentityId() == null) {\r\n// THIS IS A BUG OR  ? \r\n                                    Log.e(TAG, \"initializeAWSMobileClient(): AWSMobileClient.getInstance().getIdentityId() == null.\");\r\n                                    AWSMobileClient.getInstance().signOut();\r\n                                    initializeAWSMobileClient();\r\n                                } else {\r\n                                    initializeAndLoadData();\r\n                                }\r\n                                break;\r\n                            case SIGNED_OUT:\r\n                                Log.d(TAG, \"initializeAWSMobileClient() AWSMobileClient.getInstance().initialize(): userState: signed out!\");\r\n                                showSignIn();\r\n                                break;\r\n                            default:\r\n                                Log.e(TAG, \"initializeAWSMobileClient() AWSMobileClient.getInstance().initialize(): userState: case default!\");\r\n                                showSignIn();\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(Exception e) {\r\n                        Log.e(TAG, \"AWSMobileClient.getInstance().initialize() : Initialization error.\", e);\r\n                        AWSMobileClient.getInstance().signOut();\r\n                    }\r\n                }\r\n        );\r\n    }\r\n```\r\nand the showSignIn() is contained in this method:\r\n\r\n```\r\n    private void showSignIn() {\r\n        Log.d(TAG, \"showSignIn()\");\r\n\r\n        AWSMobileClient.getInstance().showSignIn(\r\n                MainActivity.this,\r\n                SignInUIOptions.builder()\r\n                        .nextActivity(MainActivity.class)\r\n                        .logo(R.drawable.ic_modlist_aws_signin_icon)\r\n                        .backgroundColor(Color.parseColor(\"#7FA7BC\"))\r\n                        .canCancel(false)\r\n                        .build(),\r\n                new Callback<UserStateDetails>() {\r\n                    @Override\r\n                    public void onResult(UserStateDetails result) {\r\n                        Log.d(TAG, \"showSignIn() onResult() result: userState: \" + result.getUserState());\r\n                        switch (result.getUserState()){\r\n                            case SIGNED_IN:\r\n                                Log.d(TAG, \"showSignIn() callback: SIGNED_IN logged in!\");\r\n                                initializeAndLoadData();\r\n                                break;\r\n                            case SIGNED_OUT:\r\n                                Log.d(TAG, \"showSignIn() callback onResult: SIGNED_OUT \");\r\n                                initializeAWSMobileClient();\r\n                                break;\r\n                            case SIGNED_OUT_FEDERATED_TOKENS_INVALID:\r\n                                Log.d(TAG, \"showSignIn() callback onResult: SIGNED_OUT_FEDERATED_TOKENS_INVALID\");\r\n                                initializeAWSMobileClient();\r\n                                break;\r\n                            case SIGNED_OUT_USER_POOLS_TOKENS_INVALID:\r\n                                Log.d(TAG, \"showSignIn() callback onResult: SIGNED_OUT_USER_POOLS_TOKENS_INVALID\");\r\n                                initializeAWSMobileClient();\r\n                                break;\r\n                            case GUEST:\r\n                                Log.d(TAG, \"showSignIn() callback onResult: GUEST\");\r\n                                initializeAWSMobileClient();\r\n                                break;\r\n                            case UNKNOWN:\r\n                                Log.d(TAG, \"showSignIn() callback onResult: UNKNOWN\");\r\n                                initializeAWSMobileClient();\r\n                                break;\r\n                            default:\r\n                                Log.d(TAG, \"showSignIn() callback onResult: default; Should not be possible.\");\r\n                                initializeAWSMobileClient();\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(Exception e) {\r\n                        Log.e(TAG, \"showSignIn().onError: \", e);\r\n                    }\r\n                }\r\n        );\r\n    }\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\n```\r\n    implementation 'com.amazonaws:aws-android-sdk-core:2.12.0'\r\n    implementation 'com.amazonaws:aws-android-sdk-auth-core:2.12.0@aar'\r\n    implementation('com.amazonaws:aws-android-sdk-mobile-client:2.12.0@aar') { transitive = true }\r\n    implementation('com.amazonaws:aws-android-sdk-auth-userpools:2.12.0@aar') { transitive = true }\r\n\r\n    implementation('com.amazonaws:aws-android-sdk-auth-ui:2.12.0@aar') { transitive = true }\r\n    implementation('com.amazonaws:aws-android-sdk-auth-facebook:2.12.0@aar') { transitive = true }\r\n    implementation('com.amazonaws:aws-android-sdk-auth-google:2.12.0@aar') { transitive = true }\r\n    implementation('com.amazonaws:aws-android-sdk-cognitoidentityprovider:2.12.0') {\r\n        transitive = true\r\n    }\r\n```\r\n\r\n**Expected behavior**\r\nI would expect after a successful sign in for getIdentityId() to return the identity id. \r\n\r\n**Environment Information (please complete the following information):**\r\n - AWS Android SDK Version: 27\r\n\r\nandroid {\r\n```\r\n    compileSdkVersion 27 (or 28)\r\n    defaultConfig {\r\n        minSdkVersion 23\r\n        targetSdkVersion 27\r\n        multiDexEnabled = true\r\n```\r\n\r\n - Device: Simulator or device\r\n\r\n - Android Version: various\r\n - Specific to simulators: No\r\n\r\n\r\n", "changesInPackagesGIT": [], "changesInPackagesSPOON": [], "ttf": 53.000277777777775, "numCommits": 0, "url": "https://github.com/aws-amplify/aws-sdk-android/issues/700"}, {"labels": ["Bug", "Cognito", "Needs Info from Requester", "closing-soon-if-no-response"], "closed": "2019-05-09 21:02:51", "body": "1) Facing issue when signing up with new user on social sign up using federated identities. When user create a new facebook/google user on web page on custom tab using aws congito auth library, the sdk do not register new user instead return \"Invalid Grant\" Error. Please note that user is created on facebook but not with aws cause of the error.\r\n\r\n2) If user put app in background or switch to another app, custom tab is close. Due to which sign up process is incomplete. A case i encounter is when user view verification code of google on message app and when come back to login page to enter it, it was closed so unable to sign up every time. \r\n\r\n3) Sign Up with new facebook user, login on facebook with it using custom tab, error returns \"Invaild request\"\r\n\r\nTesting it on latest android device with sdk version 2.6.20.", "commits": {}, "title": "Getting Invalid Grant Error Social Sign Up ", "created": "2019-02-11 12:56:14", "user": "faizanmirza", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/695", "commitsDetails": [], "ttf": 87.00027777777778}, {"labels": ["Bug", "Cognito", "closing-soon-if-no-response"], "closed": "2020-04-11 03:11:42", "body": "**State your question**\r\nIn our android application, the user logged-in at `2019, Jan 28 13:37:55 UTC`. In less than 24 hours, at `2019, Jan 29 08:21:20 UTC` the application received a user state change with state: `SIGNED_OUT_USER_POOLS_TOKENS_INVALID`\r\nBefore these 2 events the app performed authenticated actions (using AWSMobileClient.getInstance() as credentials provider) with such AWS services:\r\n- AppSync\r\n- DynamoDB\r\n- S3\r\n\r\nInitially, we created cognito user pool with default settings, e.g. app clients had default refresh token expiration time set to 30 days. Afterwards, to prevent expiration of credentials (which is the requirement of the app), we set refresh token expiration time to 3650 days (almost 10 years).\r\nNote: log in happened after the refresh token lifetime was changed to 3650 days for app clients.\r\n\r\n**Questions:**\r\n1) Why could the application get logged out if refresh token lifetime was changed to 10 years?\r\n2) Do the changes of refresh token lifetime take effect after the Cognito user pool is created?\r\n\r\n**Which AWS Services are you utilizing?**\r\nCognito, DynamoDB, Lambda, AppSync, S3\r\n\r\n**Environment(please complete the following information):**\r\nSDK Version: 2.10.1\r\n\r\n**Device Information (please complete the following information):**\r\n - Device: [Samsung SM-J710FN, Xiaomi Mi5s]\r\n - Android Version: [7.0, 8.0]\r\n", "commits": {}, "title": "Refresh token expired earlier than it should on android application", "created": "2019-01-29 15:32:35", "user": "andrey-chorniy", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/679", "commitsDetails": [], "ttf": 437.0002777777778}, {"labels": ["Bug", "Cognito"], "closed": "2019-04-04 19:42:44", "body": "**Describe the bug**\r\nHi!. Every time in my crashlytics appear OutOfMemoryError  in com.amazonaws.mobileconnectors.cognito.internal.storage.SQLiteLocalStorage.cursorToDatasetMetadata (SQLiteLocalStorage.java:350) method. What could cause a bug?\r\n\r\n![image](https://user-images.githubusercontent.com/7173595/51741641-2dfe2f80-20a0-11e9-9aac-854905504cbf.png)\r\nI'm using\r\n```\r\n\"com.amazonaws:aws-android-sdk-core:2.6.14\"\r\n\"com.amazonaws:aws-android-sdk-cognito:2.6.14\"\r\n\"com.amazonaws:aws-android-sdk-ddb:2.6.14\"\r\n\"com.amazonaws:aws-android-sdk-ddb-mapper:2.6.14\"\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\ncom.amazonaws.mobileconnectors.cognito.internal.storage.SQLiteLocalStorage\r\n\r\n**Device Information (please complete the following information):**\r\n - Device: Redmi Note 4,Redmi Note 5,Redmi Note 4 Pro,MI 5s Plus,Galaxy S5,LG G4,\r\nGalaxy J5(2016), Galaxy S8, Galaxy A3(2016),Ulefone S8 Pro,Blackview BV6000,Galaxy S8  Y5 2017\r\n - Android Version: 6-8\r\n\r\n", "commits": {}, "title": "Cognito Sync - OutOfMemoryError ", "created": "2019-01-25 11:12:35", "user": "EnterPrayz", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/675", "commitsDetails": [], "ttf": 69.00027777777778}, {"filteredCommitsReason": {"alsoFixesPhrase": 0, "duplicated": 6, "mergeCommitUsed": 0, "moreThanOneParent": 0, "unavailable": 0, "multipleIssueFixes": 0}, "labels": ["Awaiting Release", "Bug", "Cognito"], "user": "mehmetkemalbayer", "filteredCommits": ["a0b7e6359fda55f98672d08c7baece77552d3f98"], "commits": {"828a1e47f252d85f2bafc9efb3e6c5da1079dd43": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "68f29f0c034d8a1605ef1d83aa8d055859bc9b05": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "fbc5c5b1a88568d178677c4c2788e7776ffed30b": {"commitUser": "sunchunqiang", "commitGHEventType": "referenced"}, "cc372b8a863df5975a616ddbc745bddf4d52612f": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "a0b7e6359fda55f98672d08c7baece77552d3f98": {"commitUser": "minbi", "commitGHEventType": "closed"}, "a1c1c2ca52c8899ed69d8e11a712d55a55035f9e": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "0a1cb695ed9b0656b6fb0d0afa4fd519ee388eb7": {"commitUser": "minbi", "commitGHEventType": "referenced"}}, "created": "2019-01-21 15:59:37", "commitsDetails": [{"commitMessage": "", "commitParents": [], "commitHash": "828a1e47f252d85f2bafc9efb3e6c5da1079dd43", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "", "commitParents": [], "commitHash": "68f29f0c034d8a1605ef1d83aa8d055859bc9b05", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "", "commitParents": [], "commitHash": "fbc5c5b1a88568d178677c4c2788e7776ffed30b", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "sunchunqiang", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "", "commitParents": [], "commitHash": "cc372b8a863df5975a616ddbc745bddf4d52612f", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "[Userpools] Fix network calls to run in background when specified fixes #668\n", "commitParents": ["1e3d95e688a4719cee00d239299a0b1078c957a8"], "commitHash": "a0b7e6359fda55f98672d08c7baece77552d3f98", "commitSpoonAstDiffStats": [{"spoonFilePath": "CognitoUserPool.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserPool.signUpInternal(java.lang.String,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserAttributes,java.util.Map)", "DEL": 8, "INS": 1, "UPD": 0, "MOV": 9, "TOT": 18}]}, {"spoonFilePath": "CognitoUser.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.getDetailsInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GetDetailsHandler)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 3, "TOT": 4}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.startWithUserSrpAuth(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).24.run()", "DEL": 0, "INS": 0, "UPD": 0, "MOV": 2, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.getDetailsInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GetDetailsHandler).8.run()", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 6, "TOT": 8}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.getAttributeVerificationCodeInBackground(java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.VerificationHandler).9.run()", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 6, "TOT": 8}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).33", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.startWithUserPasswordAuth(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).37.run()", "DEL": 0, "INS": 0, "UPD": 0, "MOV": 2, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.startWithUserSrpAuth(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean)", "DEL": 5, "INS": 1, "UPD": 5, "MOV": 15, "TOT": 26}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).34", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).28", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.associateSoftwareTokenInBackground(java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.RegisterMfaHandler).11", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.verifySoftwareTokenInBackground(java.lang.String,java.lang.String,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.RegisterMfaHandler)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.respondToChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeRequest,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean)", "DEL": 0, "INS": 0, "UPD": 3, "MOV": 0, "TOT": 3}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.InitiateAuthResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).36", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.initiateUserAuthentication(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).6", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.globalSignOutInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 4, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.startWithCustomAuth(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean)", "DEL": 3, "INS": 1, "UPD": 5, "MOV": 14, "TOT": 23}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.listDevicesInBackground(int,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.DevicesHandler).40", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.startWithUserSrpAuth(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).22.run()", "DEL": 0, "INS": 0, "UPD": 0, "MOV": 5, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.startWithCustomAuth(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).25.run()", "DEL": 0, "INS": 0, "UPD": 0, "MOV": 2, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).31", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.changePasswordInBackground(java.lang.String,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 3, "TOT": 4}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.changePasswordInBackground(java.lang.String,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).7", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.getAttributeVerificationCodeInBackground(java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.VerificationHandler)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 4, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.verifyAttributeInBackground(java.lang.String,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).10.run()", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 6, "TOT": 8}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.deleteAttributesInBackground(java.util.List,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 1, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.changePasswordInBackground(java.lang.String,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).7.run()", "DEL": 0, "INS": 0, "UPD": 3, "MOV": 6, "TOT": 9}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.globalSignOutInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).15", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).29", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.setUserSettingsInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserSettings,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 1, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.deleteAttributesInBackground(java.util.List,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).14", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.setUserMfaSettingsInBackground(java.util.List,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).18.run()", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.globalSignOutInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).15.run().1.run()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.InitiateAuthResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.associateSoftwareTokenInBackground(java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.RegisterMfaHandler)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.deviceSrpAuthentication(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).39", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.deviceSrpAuthentication(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).38", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.associateSoftwareTokenInBackground(java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.RegisterMfaHandler).11.run()", "DEL": 0, "INS": 0, "UPD": 5, "MOV": 1, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.updateAttributesInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserAttributes,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.UpdateAttributesHandler).13.run()", "DEL": 0, "INS": 0, "UPD": 3, "MOV": 1, "TOT": 4}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.initiateUserAuthentication(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean)", "DEL": 0, "INS": 1, "UPD": 2, "MOV": 1, "TOT": 4}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).35", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.deleteUserInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler)", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 5, "TOT": 7}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.startWithUserPasswordAuth(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean)", "DEL": 2, "INS": 1, "UPD": 2, "MOV": 6, "TOT": 11}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.globalSignOutInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).15.run()", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 6, "TOT": 8}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.startWithUserSrpAuth(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).23.run()", "DEL": 0, "INS": 6, "UPD": 0, "MOV": 2, "TOT": 8}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.setUserMfaSettingsInBackground(java.util.List,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 1, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.startWithCustomAuth(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).24.run()", "DEL": 0, "INS": 4, "UPD": 0, "MOV": 0, "TOT": 4}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.deleteAttributesInBackground(java.util.List,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).14.run()", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 5, "TOT": 7}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.verifySoftwareTokenInBackground(java.lang.String,java.lang.String,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.RegisterMfaHandler).12", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.getDetailsInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GetDetailsHandler).8", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.resendConfirmationCodeInternal()", "DEL": 4, "INS": 1, "UPD": 0, "MOV": 3, "TOT": 8}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.updateAttributesInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserAttributes,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.UpdateAttributesHandler)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).30", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.respondToChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeRequest,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).21", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.respondToChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeRequest,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).20", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.setUserSettingsInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserSettings,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).17.run()", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.confirmSignUpInternal(java.lang.String,boolean)", "DEL": 2, "INS": 2, "UPD": 5, "MOV": 16, "TOT": 25}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).27", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.listDevicesInBackground(int,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.DevicesHandler).40.run()", "DEL": 0, "INS": 0, "UPD": 3, "MOV": 0, "TOT": 3}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.verifyAttributeInBackground(java.lang.String,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).11.run()", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.updateAttributesInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserAttributes,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.UpdateAttributesHandler).13", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).26", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.verifyAttributeInBackground(java.lang.String,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).10", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.respondToChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeRequest,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).19", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.startWithUserPasswordAuth(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).36.run()", "DEL": 0, "INS": 2, "UPD": 0, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.deviceSrpAuthentication(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean)", "DEL": 0, "INS": 0, "UPD": 2, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.listDevicesInBackground(int,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.DevicesHandler)", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.getAttributeVerificationCodeInBackground(java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.VerificationHandler).9", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean)", "DEL": 0, "INS": 0, "UPD": 9, "MOV": 2, "TOT": 11}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.verifyAttributeInBackground(java.lang.String,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler)", "DEL": 0, "INS": 1, "UPD": 1, "MOV": 4, "TOT": 6}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.deleteUserInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).16", "DEL": 0, "INS": 0, "UPD": 1, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.verifySoftwareTokenInBackground(java.lang.String,java.lang.String,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.RegisterMfaHandler).12.run()", "DEL": 0, "INS": 0, "UPD": 4, "MOV": 1, "TOT": 5}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.deleteUserInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).16.run()", "DEL": 0, "INS": 0, "UPD": 3, "MOV": 6, "TOT": 9}]}], "nameRev": "a0b7e6359fda55f98672d08c7baece77552d3f98 tags/release_v2.16.12~504", "commitUser": "minbi", "authoredDateTime": "2019-02-14 16:26:00", "commitGHEventType": "closed", "commitGitStats": [{"lines": 16, "filePath": "aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserPool.java", "insertions": 8, "deletions": 8}, {"lines": 213, "filePath": "aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUser.java", "insertions": 114, "deletions": 99}], "commitDateTime": "2019-02-14 17:35:13", "spoonStatsSkippedReason": ""}, {"commitMessage": "", "commitParents": [], "commitHash": "a1c1c2ca52c8899ed69d8e11a712d55a55035f9e", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "", "commitParents": [], "commitHash": "0a1cb695ed9b0656b6fb0d0afa4fd519ee388eb7", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}], "title": "RunInBackground flag does not work", "spoonStatsSummary": {"spoonMethodsChanged": 73, "DEL": 24.0, "INS": 22.0, "UPD": 110.0, "MOV": 149.0, "TOT": 305.0, "spoonFilesChanged": 2}, "gitStatsSummary": {"lines": 229.0, "insertions": 122.0, "gitFilesChange": 2, "deletions": 107.0}, "closed": "2019-02-15 01:35:15", "statsSkippedReason": "", "body": "Why does runinbackground get network in main thread error on android?\r\n**Which AWS Services are you utilizing?**\r\nAWS Cognito user.initiateUserAuthentication\r\n**Provide code snippets (if applicable)**\r\n    \r\n```\r\nAuthenticationDetails authenticationDetails = new AuthenticationDetails(phoneNumber, new HashMap<String, String>(), new HashMap<String, String>());\r\n                String secretHash = CognitoSecretHash.getSecretHash(phoneNumber, clientId, clientSecret);\r\n                authenticationDetails.setAuthenticationParameter(CognitoServiceConstants.AUTH_PARAM_USERNAME, phoneNumber);\r\n                authenticationDetails.setAuthenticationParameter(CognitoServiceConstants.AUTH_PARAM_SECRET_HASH, secretHash);\r\n\r\n        user.initiateUserAuthentication(authenticationDetails, new AuthenticationHandler() {\r\n            @Override\r\n            public void onSuccess(CognitoUserSession userSession, CognitoDevice newDevice) {\r\n                Log.d(TAG, \"Success\");\r\n            }\r\n\r\n            @Override\r\n            public void getAuthenticationDetails(AuthenticationContinuation authenticationContinuation, String userId) {\r\n                Log.d(TAG, \"details\");\r\n            }\r\n\r\n            @Override\r\n            public void getMFACode(MultiFactorAuthenticationContinuation continuation) {\r\n                Log.d(TAG, \"mfa\");\r\n            }\r\n\r\n            @Override\r\n            public void authenticationChallenge(ChallengeContinuation continuation) {\r\n                Intent intent = new Intent(context, LoginSmsActivity.class);\r\n                context.startActivity(intent);\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Exception exception) {\r\n                Log.d(TAG, \"Failure\");\r\n            }\r\n        }, true).run();\r\n```\r\n**Environment(please complete the following information):**\r\naws-android-sdk-auth-userpools:2.6.+@aar'\r\n\r\n**Device Information (please complete the following information):**\r\nNexus 6 API 24\r\n\r\n", "changesInPackagesGIT": ["aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider"], "changesInPackagesSPOON": ["com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.getDetailsInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GetDetailsHandler)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.startWithUserSrpAuth(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).24.run()", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.getDetailsInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GetDetailsHandler).8.run()", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserPool.signUpInternal(java.lang.String,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserAttributes,java.util.Map)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.getAttributeVerificationCodeInBackground(java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.VerificationHandler).9.run()", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).33", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.startWithUserPasswordAuth(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).37.run()", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.startWithUserSrpAuth(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.resendConfirmationCodeInternal()", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.associateSoftwareTokenInBackground(java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.RegisterMfaHandler).11", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.verifySoftwareTokenInBackground(java.lang.String,java.lang.String,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.RegisterMfaHandler)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.respondToChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeRequest,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.InitiateAuthResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).36", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.initiateUserAuthentication(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).6", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.globalSignOutInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.startWithCustomAuth(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.deleteAttributesInBackground(java.util.List,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).14", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.updateAttributesInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserAttributes,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.UpdateAttributesHandler).13.run()", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.startWithCustomAuth(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).25.run()", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).31", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.changePasswordInBackground(java.lang.String,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.changePasswordInBackground(java.lang.String,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).7", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.getAttributeVerificationCodeInBackground(java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.VerificationHandler)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.startWithUserSrpAuth(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).22.run()", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).30", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.verifyAttributeInBackground(java.lang.String,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).10.run()", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.deleteAttributesInBackground(java.util.List,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.changePasswordInBackground(java.lang.String,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).7.run()", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.globalSignOutInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).15", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).29", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.listDevicesInBackground(int,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.DevicesHandler).40", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.setUserMfaSettingsInBackground(java.util.List,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).18.run()", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.globalSignOutInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).15.run().1.run()", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.InitiateAuthResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.deleteUserInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.listDevicesInBackground(int,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.DevicesHandler)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.deviceSrpAuthentication(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).38", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.associateSoftwareTokenInBackground(java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.RegisterMfaHandler).11.run()", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).28", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.initiateUserAuthentication(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.respondToChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeRequest,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).21", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).35", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.associateSoftwareTokenInBackground(java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.RegisterMfaHandler)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.startWithUserPasswordAuth(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.globalSignOutInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).15.run()", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.startWithUserSrpAuth(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).23.run()", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.setUserSettingsInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserSettings,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.startWithCustomAuth(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).24.run()", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.deleteAttributesInBackground(java.util.List,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).14.run()", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.verifySoftwareTokenInBackground(java.lang.String,java.lang.String,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.RegisterMfaHandler).12", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.getDetailsInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GetDetailsHandler).8", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.updateAttributesInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserAttributes,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.UpdateAttributesHandler)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.listDevicesInBackground(int,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.DevicesHandler).40.run()", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.setUserMfaSettingsInBackground(java.util.List,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.respondToChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeRequest,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).20", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.setUserSettingsInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserSettings,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).17.run()", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.confirmSignUpInternal(java.lang.String,boolean)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.respondToChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeRequest,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).19", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).27", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.verifyAttributeInBackground(java.lang.String,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).11.run()", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.updateAttributesInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserAttributes,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.UpdateAttributesHandler).13", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).26", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.verifyAttributeInBackground(java.lang.String,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).10", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).34", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.startWithUserPasswordAuth(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).36.run()", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.deviceSrpAuthentication(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.deviceSrpAuthentication(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean).39", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.getAttributeVerificationCodeInBackground(java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.VerificationHandler).9", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.handleChallenge(com.amazonaws.services.cognitoidentityprovider.model.RespondToAuthChallengeResult,com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler,boolean)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.verifyAttributeInBackground(java.lang.String,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler)", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.deleteUserInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).16", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.verifySoftwareTokenInBackground(java.lang.String,java.lang.String,java.lang.String,com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.RegisterMfaHandler).12.run()", "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.deleteUserInBackground(com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.GenericHandler).16.run()"], "ttf": 24.00027777777778, "numCommits": 1, "url": "https://github.com/aws-amplify/aws-sdk-android/issues/668"}, {"labels": ["Bug", "Needs Info from Requester", "S3", "closing-soon-if-no-response"], "closed": "2019-02-27 06:08:55", "body": "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Which AWS service(s) are affected?**\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Environment(please complete the following information):**\r\n - SDK Version:def aws_version = \"2.11.+\"\r\n\r\n**Device Information (please complete the following information):**\r\n - Device: Samsung SM -J701F\r\n - Android Version: 7.1\r\n - Specific to simulators:\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "commits": {}, "title": "TransferUtility video uploading percent above 100 % ", "created": "2019-01-21 09:49:48", "user": "mukeshdadarwal", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/667", "commitsDetails": [], "ttf": 36.000277777777775}, {"labels": ["Bug", "Cognito", "Needs Info from Requester", "closing-soon-if-no-response"], "closed": "2019-02-15 00:20:48", "body": "**Describe the bug**\r\nWhen initiating a custom auth without `clientSecret` I have this error:\r\n\r\n```\r\nW/System.err: com.amazonaws.mobileconnectors.cognitoidentityprovider.exceptions.CognitoParameterInvalidException: user ID cannot be null\r\n        at com.amazonaws.mobileconnectors.cognitoidentityprovider.util.CognitoSecretHash.getSecretHash(CognitoSecretHash.java:45)\r\nW/System.err:     at com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.initiateCustomAuthRequest(CognitoUser.java:2760)\r\n        at com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.startWithCustomAuth(CognitoUser.java:2383)\r\n        at com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.initiateUserAuthentication(CognitoUser.java:775)\r\n        at com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationContinuation$1.run(AuthenticationContinuation.java:100)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n```\r\n\r\n**To Reproduce**\r\n\r\n\r\n\r\n```\r\nval alias = \"...\"\r\nuserPoool.getUser(alias).getSessionInBackground(object: AuthenticationHandler {\r\n            override fun onSuccess(userSession: CognitoUserSession?, newDevice: CognitoDevice?) {\r\n            }\r\n\r\n            override fun onFailure(exception: Exception?) {\r\n                exception?.printStackTrace()\r\n            }\r\n\r\n            override fun getAuthenticationDetails(authenticationContinuation: AuthenticationContinuation?, userId: String?) {\r\n                val details = AuthenticationDetails(userId, mapOf(\r\n                        CognitoServiceConstants.AUTH_PARAM_USERNAME to userId\r\n                ), null)\r\n                authenticationContinuation?.setAuthenticationDetails(details)\r\n                authenticationContinuation?.continueTask()\r\n            }\r\n\r\n            override fun authenticationChallenge(continuation: ChallengeContinuation?) {\r\n                TODO(\"not implemented\") //To change body of created functions use File | Settings | File Templates.\r\n            }\r\n\r\n            override fun getMFACode(continuation: MultiFactorAuthenticationContinuation?) {\r\n                TODO(\"not implemented\") //To change body of created functions use File | Settings | File Templates.\r\n            }\r\n        })\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\n\r\nCognito\r\n\r\n**Expected behavior**\r\n\r\nShould not raised and exception, internalUsername must be updated with the parameters\r\n\r\n**Environment(please complete the following information):**\r\n - SDK Version: 2.9", "commits": {}, "title": "Missing `updateInternalUsername` call in `initiateCustomAuthRequest`", "created": "2019-01-16 11:01:25", "user": "dbathily", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/657", "commitsDetails": [], "ttf": 29.00027777777778}, {"labels": ["APIGateway", "Bug"], "closed": "2019-01-16 06:59:39", "body": "I am using API gateway generated SDK to call APIs on android client. The API is working all fine on some devices which are running on android API Level 28 (OnePlus 6, 6T) but on phones with lower versions API Level 27 and earlier it is throwing Gson deserialise error.\r\n\r\nhere is the API response model \r\n\r\n\r\n```\r\npackage com.model;\r\n \r\nimport java.util.*;\r\nimport com.model.ResponseModelInfoItem;\r\n \r\npublic class ResponseModel {\r\n    @com.google.gson.annotations.SerializedName(\"info\")\r\n    private List<ResponseModelInfoItem> info = null;\r\n \r\n    /**\r\n     * Gets info\r\n     *\r\n     * @return info\r\n     **/\r\n    public List<ResponseModelInfoItem> getInfo() {\r\n        return info;\r\n    }\r\n \r\n    /**\r\n     * Sets the value of info.\r\n     *\r\n     * @param info the new value\r\n     */\r\n    public void setInfo(List<ResponseModelInfoItem> info) {\r\n        this.info = info;\r\n    }\r\n \r\n}\r\n```\r\n\r\n\r\nfurther, the ResponseModelInfoItem in the above model is given here\r\n```\r\npackage com.model;\r\n \r\nimport java.math.BigDecimal;\r\nimport java.util.*;\r\nimport com.model.ResponseModelInfoItemPostItem;\r\n \r\npublic class ResponseModelInfoItem {\r\n    @com.google.gson.annotations.SerializedName(\"userId\")\r\n    private String userId = null;\r\n    @com.google.gson.annotations.SerializedName(\"displayName\")\r\n    private String displayName = null;\r\n    @com.google.gson.annotations.SerializedName(\"dpurl\")\r\n    private String dpurl = null;\r\n    @com.google.gson.annotations.SerializedName(\"numberOfSDS\")\r\n    private BigDecimal numberOfSDS = null;\r\n    @com.google.gson.annotations.SerializedName(\"numberOfSfmfsd\")\r\n    private BigDecimal numberOfSfmfsd = null;\r\n    @com.google.gson.annotations.SerializedName(\"userApp\")\r\n    private BigDecimal userApp= null;\r\n    @com.google.gson.annotations.SerializedName(\"talkStatus\")\r\n    private Boolean talkStatus = null;\r\n    @com.google.gson.annotations.SerializedName(\"post\")\r\n    private List<ResponseModelInfoItemPostItem> post = null;\r\n \r\n    /**\r\n     * Gets userId\r\n     *\r\n     * @return userId\r\n     **/\r\n    public String getUserId() {\r\n        return userId;\r\n    }\r\n \r\n    /**\r\n     * Sets the value of userId.\r\n     *\r\n//goes down further\r\n```\r\n\r\n\r\nwhen run, I get the following error\r\n\r\n```\r\n01-13 14:43:45.666 31784-31884/com.ls.com/E/AndroidRuntime: FATAL EXCEPTION: AsyncTask #4\r\n    Process: com.loopstalk.app, PID: 31784\r\n    java.lang.RuntimeException: An error occurred while executing doInBackground()\r\n        at android.os.AsyncTask$3.done(AsyncTask.java:353)\r\n        at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:383)\r\n        at java.util.concurrent.FutureTask.setException(FutureTask.java:252)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:271)\r\n        at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:245)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n     Caused by: java.lang.StackOverflowError: stack size 1037KB\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n01-13 14:43:45.668 31784-31789/com.loopstalk.app I/zygote64: Compiler allocated 8MB to compile void android.view.ViewRootImpl.performTraversals()\r\n01-13 14:43:45.670 31784-31884/com.loopstalk.app E/AndroidRuntime:     at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n01-13 14:43:45.675 31784-31884/com.loopstalk.app E/AndroidRuntime:     at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n01-13 14:43:45.681 31784-31884/com.loopstalk.app E/AndroidRuntime:     at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n01-13 14:43:45.687 31784-31884/com.loopstalk.app E/AndroidRuntime:     at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n01-13 14:43:45.693 31784-31884/com.loopstalk.app E/AndroidRuntime:     at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n01-13 14:43:45.697 31784-31884/com.loopstalk.app E/AndroidRuntime:     at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n01-13 14:43:45.701 31784-31884/com.loopstalk.app E/AndroidRuntime:     at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n01-13 14:43:45.703 31784-31884/com.loopstalk.app E/AndroidRuntime:     at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n01-13 14:43:45.706 31784-31884/com.loopstalk.app E/AndroidRuntime:     at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n01-13 14:43:45.708 31784-31884/com.loopstalk.app E/AndroidRuntime:     at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n01-13 14:43:45.711 31784-31884/com.loopstalk.app E/AndroidRuntime:     at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n01-13 14:43:45.713 619-619/? I/SurfaceFlinger: FPS: 48\r\n01-13 14:43:45.714 31784-31884/com.loopstalk.app E/AndroidRuntime:     at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:197)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n        at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:198)\r\n        at com.google.gson.internal.$Gson$Types$WildcardTypeImpl.equals($Gson$Types.java:567)\r\n01-13 14:43:45.717 31784-31884/com.loopstalk.app E/AndroidRuntime:     at java.util.Arrays.equals(Arrays.java:2757)\r\n        at com.google.gson.internal.$Gson$Types.equals($Gson$Types.java:179)\r\n        at com.google.gson.reflect.TypeToken.equals(TypeToken.java:285)\r\n        at java.util.HashMap$TreeNode.find(HashMap.java:1863)\r\n        at java.util.HashMap$TreeNode.find(HashMap.java:1873)\r\n        at java.util.HashMap$TreeNode.find(HashMap.java:1873)\r\n        at java.util.HashMap$TreeNode.getTreeNode(HashMap.java:1885)\r\n        at java.util.HashMap.getNode(HashMap.java:575)\r\n        at java.util.HashMap.get(HashMap.java:556)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:413)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n01-13 14:43:45.718 31784-31884/com.loopstalk.app E/AndroidRuntime:     at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n01-13 14:43:45.748 31784-31884/com.loopstalk.app I/chatty: uid=10257(com.loopstalk.app) AsyncTask #4 identical 23 lines\r\n01-13 14:43:45.748 31784-31884/com.loopstalk.app E/AndroidRuntime:     at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n01-13 14:43:45.749 31784-31884/com.loopstalk.app E/AndroidRuntime:     at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.CollectionTypeAdapterFactory.create(CollectionTypeAdapterFactory.java:53)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.CollectionTypeAdapterFactory.create(CollectionTypeAdapterFactory.java:53)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.Gson.fromJson(Gson.java:886)\r\n        at com.google.gson.Gson.fromJson(Gson.java:852)\r\n        at com.amazonaws.mobileconnectors.apigateway.ApiClientHandler.handleResponse(ApiClientHandler.java:282)\r\n        at com.amazonaws.mobileconnectors.apigateway.ApiClientHandler.invoke(ApiClientHandler.java:111)\r\n        at java.lang.reflect.Proxy.invoke(Proxy.java:913)\r\n        at $Proxy6.updatedeviceidPost(Unknown Source)\r\n        at com.loopstalk.app.LoadingPage$3.doInBackground(LoadingPage.java:154)\r\n        at com.loopstalk.app.LoadingPage$3.doInBackground(LoadingPage.java:145)\r\n        at android.os.AsyncTask$2.call(AsyncTask.java:333)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        \t... 4 more\r\n```", "commits": {}, "title": "AWS API Gateway generate SDK throws GSON.fromJSON error in android", "created": "2019-01-14 15:57:54", "user": "Linger-ing", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/647", "commitsDetails": [], "ttf": 1.0002777777777778}, {"labels": ["Bug", "Cognito"], "closed": "2019-02-04 18:59:32", "body": "https://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_UnlinkIdentity.html\r\nWe found UnlinkIdentity function in doc, but can not find it on current aws android sdk ( v2.10.1 ) \r\n\r\nOnly found it before 2.2.0...but we want to implement the latest version.\r\nhttps://abi-laboratory.pro/?view=compat_report&lang=java&l=aws-android-sdk-core&v1=2.1.10&v2=2.2.0&obj=a5bf7&kind=bin#Removed", "commits": {}, "title": "Where is UnlinkIdentity function?", "created": "2019-01-12 02:44:46", "user": "KateLeeCandy", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/645", "commitsDetails": [], "ttf": 23.00027777777778}, {"labels": ["AWSMobileClient", "Bug", "Documentation"], "closed": "2019-04-03 02:16:16", "body": "Hello,\r\n\r\nI encountered a situation that, it is not a bug, rather it is a documentation/naming issue in my opinion.\r\nThe `showSignIn` function from `AWSMobileClient` is blocking the UI and fails to load the sign in screen.\r\n\r\n**Reason why I encountered this**\r\nSince I already registered listeners on user's state changes, I did not need to have a callback to run when user finished signing in.\r\nBecause I previously used the other methods available, that did not block the UI, I tried this one with the following signature.\r\n```Java\r\npublic UserStateDetails showSignIn(final Activity callingActivity) throws Exception\r\n```\r\n\r\n**What I suggest**\r\n* Providing such a method, that does not require a callback, since we already registered listeners on the user's state.\r\n* Naming of existing method could change to something easier to understand the behaviour (since it is rather different than the other overloads.\r\n\r\nThank you", "commits": {}, "title": "AWSMobileClient showSignIn is blocking android UI", "created": "2018-12-27 20:07:43", "user": "CriPstian", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/628", "commitsDetails": [], "ttf": 96.00027777777778}, {"labels": ["Bug", "IoT"], "closed": "2018-12-17 19:54:56", "body": "**Describe the bug**\r\nThe app couldn't reconnect to the Amazon after the connection come back again in the version 2.8.+\r\nbut it is working fine with the older version 2.7.+\r\n**Which AWS service(s) are affected?**\r\nI am using Android Pub/Sub example.\r\n\r\n**Environment(please complete the following information):**\r\n - SDK Version: [2.8.+]\r\n\r\n**Device Information (please complete the following information):**\r\n - Real Device and Emulator with API 17 and 22\r\n", "commits": {}, "title": "AutoReconnecting is not working", "created": "2018-12-17 16:09:12", "user": "Akefhabbal", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/620", "commitsDetails": [], "ttf": 0.0002777777777777778}, {"labels": ["Bug", "Needs Info from Requester", "S3"], "closed": "2019-02-12 17:38:36", "body": "**Describe the bug**\r\nIn my app I have started an upload, then manually terminated the app, then reopened the app. In the `onResult` callback from `initialize` I can see there is 1 transfer in the list provided by `getTransfersWithType(UPLOAD)` and its state is `IN_PROGRESS`. I then call `resumeAllWithType(UPLOAD);`. I wait a long while then rerun the app and I see the transfer is still provided in the list of upload transfers and it has the same status. I expected it to resume and upload since I have a good internet connection, and no longer be included in the list of transfers on the next run. \r\n\r\nI was following along the SDK guide to implement resuming support. Perhaps I am missing something though. Currently I am not seeing any logs of state change, progress, or errors upon resuming the transfers. I am assuming though I need to set transfer listeners for these right (to monitor upload progress and state changes), or are they preserved from the previous session? Seems something else is wrong, even without listeners I would think it would upload upon resume.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Start to upload a file\r\n2. Force close the app from the recent apps screen before the upload completes\r\n3. Rerun the app, triggering `resumeAllWithType(UPLOAD)`\r\n4. Wait a long while giving it sufficient time to upload the file\r\n5. Rerun the app and examine `getTransfersWithType(UPLOAD)`\r\n\r\n**Which AWS service(s) are affected?**\r\nS3 TransferUtility\r\n\r\n**Expected behavior**\r\nThe transfer should have been resumed, successfully uploaded, and thus it shouldn't be in the list of transfers upon running again\r\n\r\n**Environment:**\r\n - SDK Version: 2.9.0\r\n\r\n**Device Information:**\r\n - Device: Google Pixel\r\n - Android Version: 7.1.2\r\n - Specific to simulators: No\r\n\r\n**Code:**\r\nTo initialize and resume transfers in the startup activity's `onCreate`:\r\n```\r\n        AWSMobileClient.getInstance().initialize(getApplicationContext(), new Callback<UserStateDetails>() {\r\n            @Override\r\n            public void onResult(UserStateDetails result) {\r\n                Log.d(TAG, \"AWSMobileClient initialized. User State is \" + result.getUserState());\r\n\r\n                TransferUtility transferUtility =\r\n                        TransferUtility.builder()\r\n                                .context(getApplicationContext())\r\n                                .awsConfiguration(AWSMobileClient.getInstance().getConfiguration())\r\n                                .s3Client(new AmazonS3Client(AWSMobileClient.getInstance()))\r\n                                .build();\r\n\r\n                List<TransferObserver> observerList = transferUtility.getTransfersWithType(UPLOAD);\r\n                //TODO: Need to set listeners?\r\n\r\n                Log.d(TAG, \"Upload transfers count: \" + observerList.size());\r\n                Log.d(TAG, \"Upload transfers: \" + observerList.toString());\r\n\r\n                transferUtility.resumeAllWithType(UPLOAD);\r\n            }\r\n\r\n            @Override\r\n            public void onError(Exception e) {\r\n                Log.e(TAG, \"Initialization error.\", e);\r\n            }\r\n        });\r\n\r\n        getApplicationContext().startService(new Intent(getApplicationContext(), TransferService.class));\r\n```\r\n\r\nTo upload the file:\r\n```\r\n        TransferUtility transferUtility =\r\n                TransferUtility.builder()\r\n                        .context(context.getApplicationContext())\r\n                        .awsConfiguration(AWSMobileClient.getInstance().getConfiguration())\r\n                        .s3Client(new AmazonS3Client(AWSMobileClient.getInstance()))\r\n                        .build();\r\n\r\n        final String filename = \"image_\" + randomAlphaNumeric(10) + \".jpg\";\r\n\r\n        File file = scaleImage(uri, context.getCacheDir().getPath() + File.separator + filename);\r\n\r\n        TransferObserver transferObserver = transferUtility.upload(\"bucketname\", filename, file);\r\n        transferObserver.setTransferListener(new TransferListener() {\r\n            @Override\r\n            public void onStateChanged(int id, TransferState state) {\r\n                Log.d(TAG, \"Upload state changed to \" + state);\r\n            }\r\n\r\n            @Override\r\n            public void onProgressChanged(int id, long bytesCurrent, long bytesTotal) {\r\n                float percentDonef = ((float) bytesCurrent / (float) bytesTotal) * 100;\r\n                int percentDone = (int)percentDonef;\r\n\r\n                Log.d(TAG, \"ID:\" + id + \" bytesCurrent: \" + bytesCurrent\r\n                        + \" bytesTotal: \" + bytesTotal + \" \" + percentDone + \"%\");\r\n            }\r\n\r\n            @Override\r\n            public void onError(int id, Exception ex) {\r\n                Log.e(TAG, ex);\r\n            }\r\n        });\r\n```\r\n\r\n**Logs:**\r\n```\r\nUpload transfers count: 1\r\nUpload transfers: [TransferObserver{id=1, bucket='bucketname', key='image_jdvx8ewITz.jpg', bytesTotal=34094, bytesTransferred=0, transferState=IN_PROGRESS, filePath='/data/user/0/com.x.x/cache/image_jdvx8ewITz.jpg'}]```", "commits": {}, "title": "S3 TransferUtility: Transfers don't seem to resume after termination, are always included in list", "created": "2018-12-14 23:22:49", "user": "hipwelljo", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/618", "commitsDetails": [], "ttf": 59.000277777777775}, {"labels": ["Bug", "S3", "closing-soon-if-no-response"], "closed": "2019-01-25 04:05:34", "body": "**Is your feature request related to a problem? Please describe.**\r\nAndroid Oreo+ has background restrictions, starting the transfer service from an app in background is not possible. Thus the service should be promoted within few seconds to foreground in order to continue running or the system will kill it.\r\n\r\n**Describe the solution you'd like**\r\nThe transfer service must provides a way to promote it to foreground\r\n\r\n**Describe alternatives you've considered**\r\nI am going to extend transfer service\r\n\r\n**Additional context**\r\nNA\r\n", "commits": {}, "title": "TransferService foreground promotion", "created": "2018-12-11 19:28:51", "user": "pedrovarela86", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/613", "commitsDetails": [], "ttf": 44.000277777777775}, {"labels": ["Bug", "Cognito", "closing-soon-if-no-response"], "closed": "2019-01-25 04:05:28", "body": "I'm getting this crash from `UrlHttpClient `, lne 162 on my Crashalytics\r\n\r\n```\r\nFatal Exception: java.lang.ArrayIndexOutOfBoundsException: length=0; index=0\r\n       at com.android.okhttp.internal.Util.rjil_playstore_download_case(Util.java:309)\r\n       at com.android.okhttp.HostResolver$1.getAllByName(HostResolver.java:31)\r\n       at com.android.okhttp.internal.http.RouteSelector.resetNextInetSocketAddress(RouteSelector.java:232)\r\n       at com.android.okhttp.internal.http.RouteSelector.next(RouteSelector.java:124)\r\n       at com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:310)\r\n       at com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:249)\r\n       at com.android.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:397)\r\n       at com.android.okhttp.internal.http.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:118)\r\n       at com.android.okhttp.internal.http.HttpURLConnectionImpl.getOutputStream(HttpURLConnectionImpl.java:229)\r\n       at com.android.okhttp.internal.http.DelegatingHttpsURLConnection.getOutputStream(DelegatingHttpsURLConnection.java:218)\r\n       at com.android.okhttp.internal.http.HttpsURLConnectionImpl.getOutputStream(HttpsURLConnectionImpl.java:25)\r\n       at com.amazonaws.http.UrlHttpClient.writeContentToConnection(SourceFile:162)\r\n       at com.amazonaws.http.UrlHttpClient.execute(SourceFile:75)\r\n       at com.amazonaws.http.AmazonHttpClient.executeHelper(SourceFile:371)\r\n       at com.amazonaws.http.AmazonHttpClient.execute(SourceFile:212)\r\n       at com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.invoke(SourceFile:566)\r\n       at com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.getOpenIdToken(SourceFile:510)\r\n       at com.amazonaws.auth.AWSAbstractCognitoIdentityProvider.getToken(SourceFile:198)\r\n       at com.amazonaws.auth.AWSAbstractCognitoIdentityProvider.refresh(SourceFile:316)\r\n       at com.amazonaws.auth.AWSBasicCognitoIdentityProvider.refresh(SourceFile:77)\r\n       at com.amazonaws.mobile.auth.core.IdentityManager$AWSRefreshingCognitoIdentityProvider.refresh(SourceFile:184)\r\n       at com.amazonaws.auth.CognitoCredentialsProvider.startSession(SourceFile:678)\r\n       at com.amazonaws.auth.CognitoCredentialsProvider.getCredentials(SourceFile:465)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.getCredentials(SourceFile:485)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.getCredentials(SourceFile:77)\r\n       at com.amazonaws.services.pinpoint.AmazonPinpointClient.invoke(SourceFile:3872)\r\n       at com.amazonaws.services.pinpoint.AmazonPinpointClient.updateEndpoint(SourceFile:3630)\r\n       at com.amazonaws.mobileconnectors.pinpoint.targeting.TargetingClient$1.run(SourceFile:198)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n       at java.lang.Thread.run(Thread.java:818)\r\n```\r\n\r\nI'm using Aws Pinpoint version 2.7.3 right now.", "commits": {}, "title": "Getting a crash in version 2.7.3 of aws pinpoint", "created": "2018-12-07 05:44:45", "user": "Pinaki93", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/604", "commitsDetails": [], "ttf": 48.000277777777775}, {"labels": ["Bug", "S3"], "closed": "2019-01-18 00:37:49", "body": "**Describe the bug**\r\nThe AWS S3 SDK is doing IO operation on the main thread which is reported by strict mode\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Use the S3 SDK\r\n          'client': \"com.amazonaws:aws-android-sdk-mobile-client:2.8.5\",\r\n          's3': \"com.amazonaws:aws-android-sdk-s3:2.8.5\"\r\n2. Enable Strict mode\r\n3. Upload successfully a file\r\n3. Check logcat\r\n4. See warning:\r\n```\r\nStrictMode: StrictMode policy violation; ~duration=9 ms: android.os.StrictMode$StrictModeDiskWriteViolation: policy=65599 violation=1\r\n        at android.os.StrictMode$AndroidBlockGuardPolicy.onWriteToDisk(StrictMode.java:1386)\r\n        at android.database.sqlite.SQLiteConnection.applyBlockGuardPolicy(SQLiteConnection.java:1044)\r\n        at android.database.sqlite.SQLiteConnection.executeForChangedRowCount(SQLiteConnection.java:732)\r\n        at android.database.sqlite.SQLiteSession.executeForChangedRowCount(SQLiteSession.java:754)\r\n        at android.database.sqlite.SQLiteStatement.executeUpdateDelete(SQLiteStatement.java:64)\r\n        at android.database.sqlite.SQLiteDatabase.delete(SQLiteDatabase.java:1576)\r\n        at com.amazonaws.mobileconnectors.s3.transferutility.TransferDBBase.delete(TransferDBBase.java:226)\r\n        at com.amazonaws.mobileconnectors.s3.transferutility.TransferDBUtil.deleteTransferRecords(TransferDBUtil.java:517)\r\n        at com.amazonaws.mobileconnectors.s3.transferutility.TransferStatusUpdater.removeTransferRecordFromDB(TransferStatusUpdater.java:155)\r\n        at com.amazonaws.mobileconnectors.s3.transferutility.TransferStatusUpdater$1.run(TransferStatusUpdater.java:220)\r\n        at android.os.Handler.handleCallback(Handler.java:790)\r\n        at android.os.Handler.dispatchMessage(Handler.java:99)\r\n        at android.os.Looper.loop(Looper.java:164)\r\n        at android.app.ActivityThread.main(ActivityThread.java:6494)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\nAws S3 SDK\r\n**Expected behavior**\r\nNo warning using strictmode\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Environment(please complete the following information):**\r\n - SDK Version:\r\n          'client': \"com.amazonaws:aws-android-sdk-mobile-client:2.8.5\",\r\n          's3': \"com.amazonaws:aws-android-sdk-s3:2.8.5\"\r\n\r\n", "commits": {}, "title": "Aws S3 StrictMode policy violation", "created": "2018-12-07 02:42:55", "user": "niqo01", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/603", "commitsDetails": [], "ttf": 41.000277777777775}, {"labels": ["Bug", "Duplicate", "S3"], "closed": "2019-01-02 20:22:02", "body": "**Describe the bug**\r\n\r\nI use the SDK like : \r\n        TransferObserver transferObserver = transferUtility.download(\r\n                GlobalVariables.getInstance().bucket,\r\n                name,\r\n                file\r\n        );\r\n        transferObserver.setTransferListener(new MyEvent());\r\n\r\n\r\nI have a issu with a file like \"+ et \u00e9_resize.png\"\r\n\r\nIt works with a file like : \"1 et 1_resize.png\"\r\n\r\nThere is a bug in the SDK Android with some chars.\r\n\r\n**Environment(please complete the following information):**\r\n - SDK Version: 2.8.4\r\n\r\n", "commits": {}, "title": "S3 Download fail special chars", "created": "2018-12-04 10:36:06", "user": "mvievardassystem", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/597", "commitsDetails": [], "ttf": 29.00027777777778}, {"labels": ["Bug", "Pinpoint"], "closed": "2019-02-01 12:29:13", "body": "**Describe the bug**\r\npinpointManager?.targetingClient?.updateEndpointProfile() crashes \r\n\r\n**To Reproduce**\r\nAfter creating a Pinpoint manager, I try to update targetingClient and saw a crash log in Android Studio log console\r\n\r\n**Which AWS service(s) are affected?**\r\n\r\nPinpoint\r\n\r\n**Expected behavior**\r\nNo error log\r\n\r\n**Environment(please complete the following information):**\r\n - SDK Version: 2.8.4\r\n\r\n**Device Information (please complete the following information):**\r\n - Device: Pixel XL/Android 9, Samung SM-G920/Android 7\r\n\r\nI didn't test on other devices yet\r\n\r\n**Additional context**\r\nHere is the logs:\r\n\r\n`2018-11-22 11:52:31.214 8829-10584/net.tandem E/TargetingClient: AmazonServiceException occurred during endpoint update:\r\n    com.amazonaws.services.pinpoint.model.BadRequestException: Country should be 2 character ISO 3166-1 Alpha-2 or Alpha-3 codes or UN M.49 numeric-3 area code (Service: AmazonPinpoint; Status Code: 400; Error Code: BadRequestException; Request ID: 39a7b932-ee44-11e8-9b8d-6552bb36863b)\r\n        at com.amazonaws.http.AmazonHttpClient.handleErrorResponse(AmazonHttpClient.java:730)\r\n        at com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:405)\r\n        at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:212)\r\n        at com.amazonaws.services.pinpoint.AmazonPinpointClient.invoke(AmazonPinpointClient.java:3885)\r\n        at com.amazonaws.services.pinpoint.AmazonPinpointClient.updateEndpoint(AmazonPinpointClient.java:3630)\r\n        at com.amazonaws.mobileconnectors.pinpoint.targeting.TargetingClient$1.run(TargetingClient.java:198)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n        at java.lang.Thread.run(Thread.java:762)\r\n`", "commits": {}, "title": "[Pinpoint] updateEndpointProfile() throws BadRequestException for the locale information sent by the SDK", "created": "2018-11-22 10:53:51", "user": "baole", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/589", "commitsDetails": [], "ttf": 71.00027777777778}, {"labels": ["AWSMobileClient", "Bug", "Needs Info from Requester", "Pinpoint"], "closed": "2018-12-17 16:35:11", "body": "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Put the mobile offline\r\n2. open the app and initialise the Pinpoint service\r\n3. sometimes the app crash with this log:\r\n\r\n```\r\nFatal Exception: java.lang.RuntimeException: Failed to get credentials from Cognito Identity\r\n       at com.amazonaws.mobile.client.AWSMobileClient.getCredentials(AWSMobileClient.java:265)\r\n       at com.amazonaws.services.pinpoint.AmazonPinpointClient.invoke(AmazonPinpointClient.java:3872)\r\n       at com.amazonaws.services.pinpoint.AmazonPinpointClient.updateEndpoint(AmazonPinpointClient.java:3630)\r\n       at com.amazonaws.mobileconnectors.pinpoint.targeting.TargetingClient$1.run(TargetingClient.java:198)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n       at java.lang.Thread.run(Thread.java:761)`\r\n\r\n\r\nCaused by com.amazonaws.AmazonClientException: Unable to execute HTTP request: Unable to resolve host \"cognito-identity.us-east-1.amazonaws.com\": No address associated with hostname\r\n       at com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:441)\r\n       at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:212)\r\n       at com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.invoke(AmazonCognitoIdentityClient.java:566)\r\n       at com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.getCredentialsForIdentity(AmazonCognitoIdentityClient.java:389)\r\n       at com.amazonaws.auth.CognitoCredentialsProvider.populateCredentialsWithCognito(CognitoCredentialsProvider.java:782)\r\n       at com.amazonaws.auth.CognitoCredentialsProvider.startSession(CognitoCredentialsProvider.java:694)\r\n       at com.amazonaws.auth.CognitoCredentialsProvider.getCredentials(CognitoCredentialsProvider.java:465)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.getCredentials(CognitoCachingCredentialsProvider.java:485)\r\n       at com.amazonaws.mobile.client.AWSMobileClient.getCredentials(AWSMobileClient.java:259)\r\n       at com.amazonaws.services.pinpoint.AmazonPinpointClient.invoke(AmazonPinpointClient.java:3872)\r\n       at com.amazonaws.services.pinpoint.AmazonPinpointClient.updateEndpoint(AmazonPinpointClient.java:3630)\r\n       at com.amazonaws.mobileconnectors.pinpoint.targeting.TargetingClient$1.run(TargetingClient.java:198)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n       at java.lang.Thread.run(Thread.java:761)`\r\n\r\nCaused by java.net.UnknownHostException: Unable to resolve host \"cognito-identity.us-east-1.amazonaws.com\": No address associated with hostname\r\n       at java.net.Inet6AddressImpl.lookupHostByName(Inet6AddressImpl.java:95)\r\n       at java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:74)\r\n       at java.net.InetAddress.getAllByName(InetAddress.java:752)\r\n       at com.android.okhttp.internal.Network$1.resolveInetAddresses(Network.java:29)\r\n       at com.android.okhttp.internal.http.RouteSelector.resetNextInetSocketAddress(RouteSelector.java:187)\r\n       at com.android.okhttp.internal.http.RouteSelector.nextProxy(RouteSelector.java:156)\r\n       at com.android.okhttp.internal.http.RouteSelector.next(RouteSelector.java:98)\r\n       at com.android.okhttp.internal.http.HttpEngine.createNextConnection(HttpEngine.java:345)\r\n       at com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:328)\r\n       at com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:246)\r\n       at com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:457)\r\n       at com.android.okhttp.internal.huc.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:126)\r\n       at com.android.okhttp.internal.huc.HttpURLConnectionImpl.getOutputStream(HttpURLConnectionImpl.java:257)\r\n       at com.android.okhttp.internal.huc.DelegatingHttpsURLConnection.getOutputStream(DelegatingHttpsURLConnection.java:218)\r\n       at com.android.okhttp.internal.huc.HttpsURLConnectionImpl.getOutputStream(HttpsURLConnectionImpl.java)\r\n       at com.amazonaws.http.UrlHttpClient.writeContentToConnection(UrlHttpClient.java:162)\r\n       at com.amazonaws.http.UrlHttpClient.execute(UrlHttpClient.java:75)\r\n       at com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:371)\r\n       at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:212)\r\n       at com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.invoke(AmazonCognitoIdentityClient.java:566)\r\n       at com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.getCredentialsForIdentity(AmazonCognitoIdentityClient.java:389)\r\n       at com.amazonaws.auth.CognitoCredentialsProvider.populateCredentialsWithCognito(CognitoCredentialsProvider.java:782)\r\n       at com.amazonaws.auth.CognitoCredentialsProvider.startSession(CognitoCredentialsProvider.java:694)\r\n       at com.amazonaws.auth.CognitoCredentialsProvider.getCredentials(CognitoCredentialsProvider.java:465)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.getCredentials(CognitoCachingCredentialsProvider.java:485)\r\n       at com.amazonaws.mobile.client.AWSMobileClient.getCredentials(AWSMobileClient.java:259)\r\n       at com.amazonaws.services.pinpoint.AmazonPinpointClient.invoke(AmazonPinpointClient.java:3872)\r\n       at com.amazonaws.services.pinpoint.AmazonPinpointClient.updateEndpoint(AmazonPinpointClient.java:3630)\r\n       at com.amazonaws.mobileconnectors.pinpoint.targeting.TargetingClient$1.run(TargetingClient.java:198)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n       at java.lang.Thread.run(Thread.java:761)\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\nAWSPinpoint\r\n\r\n**Expected behavior**\r\nthe app should not crash\r\n\r\n**Environment(please complete the following information):**\r\n - SDK Version: 2.8.2\r\n\r\n**Device Information (please complete the following information):**\r\n - Device: Tested with Nexus9 and OnePlus 5T\r\n - Android Version: 7.1 .1 and 8.1\r\n", "commits": {}, "title": "Offline Pinpoint initialisation crash the app", "created": "2018-11-21 16:14:50", "user": "GiovanniVisentiniST", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/588", "commitsDetails": [], "ttf": 26.00027777777778}, {"labels": ["AWSMobileClient", "Bug", "Cognito", "Needs Info from Requester"], "closed": "2018-12-07 14:18:21", "body": "**State your question**\r\nWhen sign up a new user to no appclient secret configured userpool,  i get the exception snippets below.\r\n\r\nApp client secret is allowed in Android sdk, but the  \r\nCognitoUserPool(Context context, AWSConfiguration awsConfiguration) constructor read key AppClientSecret will always opt with empty string if AppClientSecret not set in configuration.json.\r\n\r\n**Which AWS Services are you utilizing?**\r\n\r\ncom.amazonaws.mobile.client.AWSMobileClient\r\n\r\n**Provide code snippets (if applicable)**\r\n```\r\n11-21 17:40:43.568 24637-26276/com.softchef.androidlab D/LoginFragment$onActivit: java.lang.IllegalArgumentException: key.length == 0\r\n        at javax.crypto.spec.SecretKeySpec.<init>(SecretKeySpec.java:62)\r\n        at com.amazonaws.mobileconnectors.cognitoidentityprovider.util.CognitoSecretHash.getSecretHash(CognitoSecretHash.java:57)\r\n        at com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserPool.signUpInternal(CognitoUserPool.java:416)\r\n        at com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserPool.signUp(CognitoUserPool.java:378)\r\n        at com.amazonaws.mobile.client.AWSMobileClient$7.run(AWSMobileClient.java:1093)\r\n        at com.amazonaws.mobile.client.internal.InternalCallback$1.run(InternalCallback.java:101)\r\n        at java.lang.Thread.run(Thread.java:818)\r\n```\r\nAnd i manual setup the aws configuration.json file with: \r\n```\r\n{\r\n  \"IdentityManager\": {\r\n    \"Default\": {}\r\n  },\r\n  \"CredentialsProvider\": {\r\n    \"CognitoIdentity\": {\r\n      \"Default\": {\r\n        \"PoolId\": \"ap-southeast-1:xxxxxxxxxxxxxxxxxxxxx\",\r\n        \"Region\": \"ap-southeast-1\"\r\n      }\r\n    }\r\n  },\r\n  \"CognitoUserPool\": {\r\n    \"Default\": {\r\n      \"PoolId\": \"ap-southeast-1_xxxxxxx\",\r\n      \"AppClientId\": \"xxxxxxxxxxx\",\r\n      \"Region\": \"ap-southeast-1\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\r\n**Environment(please complete the following information):**\r\n - SDK Version: 2.8.2\r\n\r\n**Device Information (please complete the following information):**\r\n - Device: Samsung Note 4\r\n - Android Version: 6.0.1\r\n - Specific to simulators:\r\n\r\nIf you need help with understanding how to implement something in particular then we suggest that you first look into our [developer guide](https://docs.aws.amazon.com/aws-mobile/latest/developerguide/aws-mobile-android-and-iOS.html). You can also simplify your process of creating an application, as well as the associated backend setup by using the [Amplify CLI](https://aws-amplify.github.io/media/get_started). \r\n", "commits": {}, "title": "AWSMobileClient signUp action for new users is not allowed when no app client secret is configured userpool", "created": "2018-11-21 09:56:48", "user": "scdplzop", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/587", "commitsDetails": [], "ttf": 16.00027777777778}, {"labels": ["Bug", "Cognito", "Needs Info from Requester"], "closed": "2018-12-11 17:43:40", "body": "**Describe the bug**\r\nThere is a mismatch between two variable names inside of the two associated files:\r\naws-sdk-android/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/ForceChangePasswordView.java\r\nand\r\naws-sdk-android/aws-android-sdk-auth-userpools/src/main/res/layout/activity_force_change_password.xml\r\n\r\nThe following mismatch is present, causing runtime crash:\r\nactivity_force_change_password.xml in line 37:\r\nandroid:id=\"@+id/**force_change_password_form**\" \r\nForceChangePasswordView.java in line 133:\r\nforgotPassForm = (FormView) findViewById(R.id.**forgot_password_form**);\r\n\r\nThe second mismatch is the following:\r\nactivity_force_change_password.xml in line 50:\r\nandroid:id=\"@+id/**force_change_password_button**\"\r\nForceChangePasswordView.java in line 142:\r\nconfirmButton = (Button) findViewById(R.id.**forgot_password_button**);\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1.  Create new user in Cognito, or set state of user to FORCE_CHANGE_PASSWORD\r\n2.  Login with temporary password, so that the AuthUI attempts to use the code path for force change password.\r\n3.  Unhandled runtime crash of the app.\r\n\r\n**Which AWS service(s) are affected?**\r\nAWS Cognito - client side, not server\r\nAWS AuthUI\r\n\r\n**Expected behavior**\r\nUser should be redirected to the page asking for a new password to be set.  \r\n\r\n**Environment(please complete the following information):**\r\n - SDK Version: 2.7.6 - 8.0.3\r\n\r\n**Device Information (please complete the following information):**\r\n - Device: Samsung Galaxy S7\r\n - Android Version: Nougat 7.1.2\r\n\r\n**Additional context**\r\nThis is currently fixed via manually editing the xml files to match the UI fields requested in the Java files above.\r\n", "commits": {}, "title": "AuthUI ForceChangePasswordView Form Name Mismatch", "created": "2018-11-21 03:11:37", "user": "dennisunderwood", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/586", "commitsDetails": [], "ttf": 20.00027777777778}, {"labels": ["Bug", "IoT", "Needs Info from Requester"], "closed": "2018-12-17 16:36:33", "body": "**Describe the bug**\r\nFrom release 2.8.1 onwards the `AWSIotMqttManager` is no longer able to successfully reconnect after losing it's connection.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Succesfully connect the `AWSIotMqttManager` with AWS with `autoReconnect` enabled and amount\r\n2. Temporarily break the internet connection (either by disabling the device's WiFi connection or moving out of range of the access point.\r\n3. The `AWSIotMqttManager` enters a state in which it periodically tries to reconnect \r\n4. Reestablish the internet connection\r\n5. The `AWSIotMqttManager` keeps attempting to reconnect and each attempt fails\r\n\r\n**Which AWS service(s) are affected?**\r\nIoT\r\n\r\n**Expected behavior**\r\nAfter reestablishing the internet connection the `AWSIotMqttManager` should be able to successfully reconnect. \r\n\r\n**Screenshots**\r\nNot applicable\r\n\r\n**Environment(please complete the following information):**\r\n - SDK Version: 2.8.1 and higher (tested up to 2.8.3)\r\n\r\n**Device Information (please complete the following information):**\r\n - Device: Samsung Galaxy Tab Active2 (SM-t397U)\r\n - Android Version: 7.1.1 API 25\r\n - Specific to simulators: No\r\n\r\n**Additional context**\r\nI tested all releases from 2.7.5 upwards. This bug seems to have originated in release 2.8.1 since all older releases don't have this problem, while all newer versions do. However no possible cause is mentioned in the release notes.\r\n\r\nI'm aware of this issue: https://github.com/aws-amplify/aws-sdk-android/issues/394. However since the problem only occurs on another newer release it seems to me to be a different issue.\r\n", "commits": {}, "title": "AWSIotMqttManager no longer able to reconnect", "created": "2018-11-20 12:55:44", "user": "rvp-thunderbuild", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/584", "commitsDetails": [], "ttf": 27.00027777777778}, {"filteredCommitsReason": {"alsoFixesPhrase": 0, "duplicated": 2, "mergeCommitUsed": 0, "moreThanOneParent": 0, "unavailable": 0, "multipleIssueFixes": 0}, "labels": ["Bug", "Cognito", "Needs Info from Requester"], "user": "sagardvora", "filteredCommits": ["93e0551ab1055d03875620a98a72cc7f1c0240e6"], "commits": {"93e0551ab1055d03875620a98a72cc7f1c0240e6": {"commitUser": "minbi", "commitGHEventType": "closed"}, "a393992fc586bba4cfa87afdfaf3eb0f520a361a": {"commitUser": "sunchunqiang", "commitGHEventType": "referenced"}, "764472330034d890363cbf28beddef9a44562777": {"commitUser": "minbi", "commitGHEventType": "referenced"}}, "created": "2018-11-20 12:28:58", "commitsDetails": [{"commitMessage": "Fix cognito userpools username null in custom auth flow fixes #583\n", "commitParents": ["90266af7e6d469645df103446964284b90050c63"], "commitHash": "93e0551ab1055d03875620a98a72cc7f1c0240e6", "commitSpoonAstDiffStats": [{"spoonFilePath": "CognitoUser.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.initiateCustomAuthRequest(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails)", "DEL": 1, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 2}]}], "nameRev": "93e0551ab1055d03875620a98a72cc7f1c0240e6 tags/release_v2.16.12~520", "commitUser": "minbi", "authoredDateTime": "2019-01-24 13:10:25", "commitGHEventType": "closed", "commitGitStats": [{"lines": 2, "filePath": "aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUser.java", "insertions": 1, "deletions": 1}], "commitDateTime": "2019-01-31 09:12:00", "spoonStatsSkippedReason": ""}, {"commitMessage": "", "commitParents": [], "commitHash": "764472330034d890363cbf28beddef9a44562777", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "", "commitParents": [], "commitHash": "a393992fc586bba4cfa87afdfaf3eb0f520a361a", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "sunchunqiang", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}], "title": "Authentication failed due to an internal error for challenge \"PASSWORD_VERIFIER\"", "spoonStatsSummary": {"spoonMethodsChanged": 1, "DEL": 1.0, "INS": 1.0, "UPD": 0.0, "MOV": 0.0, "TOT": 2.0, "spoonFilesChanged": 1}, "gitStatsSummary": {"lines": 2.0, "insertions": 1.0, "gitFilesChange": 1, "deletions": 1.0}, "closed": "2019-02-18 17:45:23", "statsSkippedReason": "", "body": "**Describe the bug**\r\nI am implementing aws cognito user pool using custom auth for multi factor authentication.\r\nI have set the authentication type as CUSTOM_AUTH and custom challenge as SRP_A. which in response gives another challenge as PASSWORD_VERIFIER and the procedure fails.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\nCode for authentication using CUSTOM_AUTH \r\n``` java\r\nMap<String, String> authParameters = new HashMap<>();\r\n        authParameters.put(CognitoServiceConstants.AUTH_PARAM_USERNAME, this.username);\r\n        authParameters.put(CognitoServiceConstants.AUTH_PARAM_PASSWORD, password);\r\n        authParameters.put(CognitoServiceConstants.AUTH_PARAM_SRP_A, new AuthenticationHelper(this.username).getA().toString(16));\r\n\r\n        AuthenticationDetails authenticationDetails = new AuthenticationDetails(this.username, authParameters, null);\r\n        authenticationDetails.setAuthenticationType(CognitoServiceConstants.AUTH_TYPE_INIT_CUSTOM_AUTH);\r\n        authenticationDetails.setCustomChallenge(CognitoServiceConstants.AUTH_PARAM_SRP_A);\r\n        continuation.setAuthenticationDetails(authenticationDetails);\r\n\r\n        continuation.continueTask();\r\n```\r\n\r\nwhich gives callback in \r\n```java\r\n  AuthenticationHandler authenticationHandler = new AuthenticationHandler() {\r\n       @Override\r\n        public void onFailure(Exception e) {\r\n         .... //exception message ->  Authentication failed due to an internal error\r\n        }\r\n}\r\n```\r\n\r\n**Which AWS service(s) are affected?**\r\nCognito User Pool Authentication MFA\r\n\r\n\r\n**Environment(please complete the following information):**\r\n - SDK Version: [e.g. 2.8.+]\r\n\r\n**Additional context**\r\nMFA is activated on backend server.\r\n", "changesInPackagesGIT": ["aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider"], "changesInPackagesSPOON": ["com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.initiateCustomAuthRequest(com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails)"], "ttf": 90.00027777777778, "numCommits": 1, "url": "https://github.com/aws-amplify/aws-sdk-android/issues/583"}, {"labels": ["Bug", "IoT", "Needs Info from Requester"], "closed": "2018-11-21 02:00:46", "body": "**Describe the bug**\r\n\r\nWhen I use the endpoint like \"xxxxx.ats.iot.cn-north-1.amazonaws.com.cn\", the callback always output status = Reconnecting.\r\n\r\nThen I found out the cause of this problem, just like I found this problem([Update AwsIotEndpointUtility.java #580](https://github.com/aws-amplify/aws-sdk-android/pull/580)).\r\n\r\nstep 1. \r\n```\r\ncom.amazonaws.mobileconnectors.iot.AwsIotEndpointUtility.java#getAccountPrefixFromEndpont\r\n```\r\n```java\r\n    static String getAccountPrefixFromEndpont(String endpoint) {\r\n// endpoint = \"abc123.ats.iot.cn-north-1.amazonaws.com.cn\"\r\n        String endpointWithoutPort = stripPort(endpoint);\r\n        validateIotEndpoint(endpointWithoutPort);\r\n// return \"abc123\" instead of \"abc123.ats\".\r\n        return splitEndpoint(endpointWithoutPort)[ENDPOINT_PREFIX_OFFSET];\r\n    }\r\n```\r\nstep 2. \r\n```\r\ncom.amazonaws.mobileconnectors.iot.AWSIotMqttManager.java#Line:728\r\n```\r\n```java\r\nfinal String endpoint = String.format(\"%s.iot.%s.%s:443\", accountEndpointPrefix, region.getName(),\r\n                        region.getDomain());\r\n// endpoint = \"abc123.iot.cn-north-1.amazonaws.com.cn\" instead of \"abc123.ats.iot.cn-north-1.amazonaws.com.cn\" \r\n```\r\n\r\nSo, Why not use endpoints directly, you just need to validate its format using regular expressions.\r\n\r\n**Which AWS service(s) are affected?**\r\nIoT\r\n", "commits": {}, "title": "Iot endpoint is incorrect when using weksocket connect in China.", "created": "2018-11-20 10:01:59", "user": "brandonbai", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/582", "commitsDetails": [], "ttf": 0.0002777777777777778}, {"labels": ["Bug", "IoT", "Needs Info from Requester", "closing-soon-if-no-response"], "closed": "2018-12-02 20:58:31", "body": "```java\r\njava.lang.ArrayIndexOutOfBoundsException: length=1442; regionStart=-1; regionLength=1443\r\n\tat com.android.org.conscrypt.util.ArrayUtils.checkOffsetAndCount(ArrayUtils.java:34)\r\n\tat com.android.org.conscrypt.OpenSSLSocketImpl$SSLInputStream.read(OpenSSLSocketImpl.java:691)\r\n\tat org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketFrame.<init>(WebSocketFrame.java:169)\r\n\tat org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketReceiver.run(WebSocketReceiver.java:98)\r\n\tat java.lang.Thread.run(Thread.java:818)\r\n```\r\n\r\ncom.amazonaws:aws-android-sdk-iot\r\n - SDK Version: [e.g. 2.6.28]\r\n\r\n**Device Information (please complete the following information):**\r\nSUPPORTED_64_BIT_ABIS=[Ljava.lang.String;@b17e422\r\nversionCode=77\r\nBOARD=xmen\r\nBOOTLOADER=unknown\r\ndevicesId=ba2edc61731a394e\r\nTYPE=user\r\nID=MHC19J\r\nTIME=1528270472000\r\nBRAND=Xiaomi\r\nTAG=Build\r\nSERIAL=14074680091842\r\nHARDWARE=amlogic\r\nSUPPORTED_ABIS=[Ljava.lang.String;@4faaeb3\r\nCPU_ABI=armeabi-v7a\r\nRADIO=unknown\r\nIS_DEBUGGABLE=false\r\nMANUFACTURER=xiaomi\r\nSUPPORTED_32_BIT_ABIS=[Ljava.lang.String;@3e1dded\r\nTAGS=release-keys\r\nCPU_ABI2=armeabi\r\nUNKNOWN=unknown\r\nUSER=jenkins\r\nFINGERPRINT=Xiaomi/xmen/xmen:6.0.1/MHC19J/514:user/release-keys\r\nHOST=c3-mitv-bsp-build02.bj\r\nPRODUCT=xmen\r\nversionName=3.1.6\r\nDISPLAY=8.6.6.514\r\nMODEL=MiTV4A\r\nDEVICE=xmen\r\n\r\nOccasional problem\r\n", "commits": {}, "title": "java.lang.ArrayIndexOutOfBoundsException: length=1442; regionStart=-1; regionLength=1443", "created": "2018-11-09 10:05:17", "user": "zhouxuemeng1988", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/570", "commitsDetails": [], "ttf": 23.00027777777778}, {"labels": ["Bug", "Documentation", "Kinesis", "closing-soon-if-no-response"], "closed": "2018-11-05 16:42:30", "body": "\r\nHey there,\r\n\r\ni'm looking for com.amazonaws.services.kinesis.AmazonKinesisClient in javadoc but, apparently, there isn't any references about kinesis services [there](https://aws.github.io/aws-sdk-android/docs/reference//).\r\nHowever for Kinesis Video there is.\r\n\r\nIs there another place to see Kinesis reference?\r\n\r\n\r\n**Which AWS service(s) are affected?**\r\nAmazon Kinesis\r\n\r\n\r\n", "commits": {}, "title": "Javadoc for Amazon Kinesis", "created": "2018-10-30 20:19:59", "user": "fabiopimentel", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/560", "commitsDetails": [], "ttf": 5.000277777777778}, {"labels": ["Bug", "IoT", "Needs Info from Requester"], "closed": "2018-12-31 18:24:30", "body": "Hey there,\r\nusing com.amazonaws:aws-android-sdk-iot:2.7.6 to connect to my service, is crashing my app.\r\n\r\nFull stack is below, but basically I see that this call:\r\n\r\nhttps://github.com/aws/aws-sdk-android/blob/master/aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManager.java#L720\r\n\r\nrunning in an anonymous thread will not catch AmazonClientException.\r\n\r\nOff course, no matter how I call it, this will always crash.\r\n\r\n```\r\n    fun load()\r\n    {\r\n        // MQTT client IDs are required to be unique per AWS IoT account.\r\n        clientId = MiscUtil.getAndroidId()\r\n\r\n        topic = \"xyz123\"\r\n\r\n        // Initialize the AWS Cognito credentials provider\r\n        credentialsProvider = CognitoCachingCredentialsProvider(App.app, COGNITO_POOL_ID, IOT_REGION)\r\n\r\n        // MQTT Client\r\n        mqttManager = AWSIotMqttManager(clientId, IOT_ENDPOINT)\r\n    }\r\n\r\n```\r\n\r\nAbove method is called under a try/catch, not depicted above.\r\n\r\nCan we fix this?\r\n\r\nFull stack follow:\r\n```\r\ncom.amazonaws.AmazonClientException: Unable to execute HTTP request: Unable to resolve host \"cognito-identity.us-west-2.amazonaws.com\": No address associated with hostname\r\n\tat com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:441)\r\n\tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:212)\r\n\tat com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.invoke(AmazonCognitoIdentityClient.java:566)\r\n\tat com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.getCredentialsForIdentity(AmazonCognitoIdentityClient.java:389)\r\n\tat com.amazonaws.auth.CognitoCredentialsProvider.populateCredentialsWithCognito(CognitoCredentialsProvider.java:782)\r\n\tat com.amazonaws.auth.CognitoCredentialsProvider.startSession(CognitoCredentialsProvider.java:694)\r\n\tat com.amazonaws.auth.CognitoCredentialsProvider.getCredentials(CognitoCredentialsProvider.java:465)\r\n\tat com.amazonaws.auth.CognitoCachingCredentialsProvider.getCredentials(CognitoCachingCredentialsProvider.java:485)\r\n\tat com.amazonaws.auth.CognitoCachingCredentialsProvider.getCredentials(CognitoCachingCredentialsProvider.java:77)\r\n\tat com.amazonaws.mobileconnectors.iot.AWSIotMqttManager$1.run(AWSIotMqttManager.java:720)\r\n\tat java.lang.Thread.run(Thread.java:761)\r\nCaused by: java.net.UnknownHostException: Unable to resolve host \"cognito-identity.us-west-2.amazonaws.com\": No address associated with hostname\r\n\tat java.net.Inet6AddressImpl.lookupHostByName(Inet6AddressImpl.java:95)\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:74)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:757)\r\n\tat com.android.okhttp.internal.Network$1.resolveInetAddresses(Network.java:29)\r\n\tat com.android.okhttp.internal.http.RouteSelector.resetNextInetSocketAddress(RouteSelector.java:187)\r\n\tat com.android.okhttp.internal.http.RouteSelector.nextProxy(RouteSelector.java:156)\r\n\tat com.android.okhttp.internal.http.RouteSelector.next(RouteSelector.java:98)\r\n\tat com.android.okhttp.internal.http.HttpEngine.createNextConnection(HttpEngine.java:372)\r\n\tat com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:355)\r\n\tat com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:273)\r\n\tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:474)\r\n\tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:126)\r\n\tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.getOutputStream(HttpURLConnectionImpl.java:257)\r\n\tat com.android.okhttp.internal.huc.DelegatingHttpsURLConnection.getOutputStream(DelegatingHttpsURLConnection.java:218)\r\n\tat com.android.okhttp.internal.huc.HttpsURLConnectionImpl.getOutputStream(HttpsURLConnectionImpl.java)\r\n\tat com.amazonaws.http.UrlHttpClient.writeContentToConnection(UrlHttpClient.java:162)\r\n\tat com.amazonaws.http.UrlHttpClient.execute(UrlHttpClient.java:75)\r\n\tat com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:371)\r\n\t... 10 more\r\njava.net.UnknownHostException: Unable to resolve host \"cognito-identity.us-west-2.amazonaws.com\": No address associated with hostname\r\n\tat java.net.Inet6AddressImpl.lookupHostByName(Inet6AddressImpl.java:95)\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:74)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:757)\r\n\tat com.android.okhttp.internal.Network$1.resolveInetAddresses(Network.java:29)\r\n\tat com.android.okhttp.internal.http.RouteSelector.resetNextInetSocketAddress(RouteSelector.java:187)\r\n\tat com.android.okhttp.internal.http.RouteSelector.nextProxy(RouteSelector.java:156)\r\n\tat com.android.okhttp.internal.http.RouteSelector.next(RouteSelector.java:98)\r\n\tat com.android.okhttp.internal.http.HttpEngine.createNextConnection(HttpEngine.java:372)\r\n\tat com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:355)\r\n\tat com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:273)\r\n\tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:474)\r\n\tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:126)\r\n\tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.getOutputStream(HttpURLConnectionImpl.java:257)\r\n\tat com.android.okhttp.internal.huc.DelegatingHttpsURLConnection.getOutputStream(DelegatingHttpsURLConnection.java:218)\r\n\tat com.android.okhttp.internal.huc.HttpsURLConnectionImpl.getOutputStream(HttpsURLConnectionImpl.java)\r\n\tat com.amazonaws.http.UrlHttpClient.writeContentToConnection(UrlHttpClient.java:162)\r\n\tat com.amazonaws.http.UrlHttpClient.execute(UrlHttpClient.java:75)\r\n\tat com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:371)\r\n\tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:212)\r\n\tat com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.invoke(AmazonCognitoIdentityClient.java:566)\r\n\tat com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.getCredentialsForIdentity(AmazonCognitoIdentityClient.java:389)\r\n\tat com.amazonaws.auth.CognitoCredentialsProvider.populateCredentialsWithCognito(CognitoCredentialsProvider.java:782)\r\n\tat com.amazonaws.auth.CognitoCredentialsProvider.startSession(CognitoCredentialsProvider.java:694)\r\n\tat com.amazonaws.auth.CognitoCredentialsProvider.getCredentials(CognitoCredentialsProvider.java:465)\r\n\tat com.amazonaws.auth.CognitoCachingCredentialsProvider.getCredentials(CognitoCachingCredentialsProvider.java:485)\r\n\tat com.amazonaws.auth.CognitoCachingCredentialsProvider.getCredentials(CognitoCachingCredentialsProvider.java:77)\r\n\tat com.amazonaws.mobileconnectors.iot.AWSIotMqttManager$1.run(AWSIotMqttManager.java:720)\r\n\tat java.lang.Thread.run(Thread.java:761)\r\n```", "commits": {}, "title": "AmazonClientException crashes app on bad network", "created": "2018-10-25 16:50:09", "user": "NightOwlCoder", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/556", "commitsDetails": [], "ttf": 67.00027777777778}, {"labels": ["Bug", "Core", "Needs Info from Requester"], "closed": "2018-10-24 10:02:21", "body": "**State your question**\r\nThe version 2.7.6 is not published on Maven and I cannot use it. When it gonna be fixed?\r\nThanks.\r\n\r\n**Which AWS Services are you utilizing?**\r\nCore and S3\r\n\r\n**Environment(please complete the following information):**\r\n - SDK Version: 2.7.6 (Not available on Maven Repository)", "commits": {}, "title": "Could not find version 2.7.6.", "created": "2018-10-23 14:38:37", "user": "ppamorim", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/554", "commitsDetails": [], "ttf": 0.0002777777777777778}, {"labels": ["Bug", "S3"], "closed": "2018-10-22 18:27:56", "body": "**Describe the bug**\r\n\r\nWhen using the SDK URLEncoder.encode is called 2 times\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Call a put object request with an object such as abc@123.xml\r\n2. The object is uploaded as abc%40123.xml\r\n\r\n**Which AWS service(s) are affected?**\r\n\r\nS3\r\n\r\n**Expected behavior**\r\n\r\nThe object should be uploaded as abc@123.xml\r\n\r\n**Environment(please complete the following information):**\r\n - SDK Version: 2.7.5\r\n\r\n**Device Information (please complete the following information):**\r\n - Device: Pixel 2\r\n - Android Version: 9\r\n - Specific to simulators: No\r\n\r\n**Additional context**\r\n\r\nThe AmazonS3Client.resolveRequestEndpoint method uses S3HttpUtils.urlEncode to encode the key which calls URLEncoder.encode.\r\n\r\nThen the AmazonS3Client.invoke method will call the HttpRequestFactory.createHttpRequest which calls HttpUtils.appendUri which ends up calling URLEncoder.encode in HttpUtils.urlEncode.", "commits": {}, "title": "S3 keys are encoded 2 times in putObject requests", "created": "2018-10-22 18:25:37", "user": "Huolju", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/552", "commitsDetails": [], "ttf": 0.0002777777777777778}, {"labels": ["Bug", "Cognito", "Needs Info from Requester", "closing-soon-if-no-response"], "closed": "2018-10-31 01:07:10", "body": "**Describe the bug**\r\nThe UserPools SignUpActivity does not show the keyboard for Username when the SignUpView is displayed\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to Sign-in UI \r\n2. Click on \"Create New Account\"\r\n3. Observe \"Enter your information to sign up. screen appears.\r\n4. Observe, cursor in Username field and no keyboard \r\n\r\n**Which AWS service(s) are affected?**\r\naws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/\r\n\r\n**Expected behavior**\r\nThe keyboard should appear when the user touches inside the Username field or when the activity is initially displayed.\r\n\r\n**Environment(please complete the following information):**\r\n - SDK Version: Any including 24, 25, 26, and 27.\r\n\r\n**Device Information (please complete the following information):**\r\n - Device: Pixel 2 API 27 in Simulator (or others)\r\n - Android Version: Any > 7.0\r\n - Specific to simulators: No, simulator and device.\r\n\r\n**Additional context**\r\nThe user must click into any other field (password or given name, etc) and the keyboard will appear. They can then return to enter the username as a workaround. \r\n", "commits": {}, "title": "UserPools  SignUpActivity, Username field, no keyboard displayed", "created": "2018-10-18 17:16:34", "user": "BillBunting", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/550", "commitsDetails": [], "ttf": 12.000277777777777}, {"labels": ["Bug", "Needs Info from Requester", "S3"], "closed": "2018-11-05 17:27:08", "body": "Hi I followed the S3TransferUtilitySample to upload the sample. But it is throwing com.amazonaws.services.s3.model.AmazonS3Exception: Access Denied (Service: Amazon S3; Status Code: 403; Error Code: AccessDenied; Request ID:------.\r\n\r\nI integrated the same in IOS app also. their it is working fine. I am using the same POOL_ID, BUCKET_REGION and BUCKET_NAME for android also.\r\n\r\nCould you guys help me on this.", "commits": {}, "title": "Upload throwing Access Denied due to key name containing special characters", "created": "2018-10-17 20:10:30", "user": "desokroshan", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/548", "commitsDetails": [], "ttf": 18.00027777777778}, {"labels": ["Bug", "KinesisVideo", "Needs Info from Requester", "closing-soon-if-no-response"], "closed": "2019-03-05 21:17:09", "body": "**State your question**\r\nHi,\r\nI am using Kinesis Video for live as well as on demand video playback in an android application. One thing i am stuck on now is getting wrong orientation while playing the video url.\r\n\r\n**Which AWS Services are you utilizing?**\r\nKinesis\r\n**Provide code snippets (if applicable)**\r\n\r\n```java\r\nAndroidCameraMediaSourceConfiguration.builder()\r\n.withCameraId(String.valueOf(cameraId))\r\n.withEncodingMimeType(\"video/avc\")\r\n.withHorizontalResolution(320)\r\n.withVerticalResolution(240)\r\n.withCameraFacing(1)\r\n.withIsEncoderHardwareAccelerated(true)\r\n.withFrameRate(FRAMERATE_20)\r\n.withRetentionPeriodInHours(RETENTION_PERIOD_48_HOURS)\r\n.withEncodingBitRate(BITRATE_384_KBPS)\r\n.withCameraOrientation(0)\r\n.withNalAdaptationFlags(StreamInfo.NalAdaptationFlags.NAL_ADAPTATION_ANNEXB_CPD_AND_FRAME_NALS)\r\n.withIsAbsoluteTimecode(false));\r\n```\r\n\r\nAbove is the configuration for media. Please help!\r\n", "commits": {}, "title": "Wrong video orientation in Kinesis Stream", "created": "2018-10-15 17:33:25", "user": "desokroshan", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/544", "commitsDetails": [], "ttf": 141.00027777777777}, {"labels": ["Bug", "Needs Info from Requester", "S3", "closing-soon-if-no-response"], "closed": "2018-11-07 04:55:37", "body": "**Describe the bug**\r\n\r\nit seems the first time generatePresignedUrl will get something like \r\nhttps://bucket.s3.amazonaws.com/file?AWSAccessKeyId=accesskey&Expires=yyyy&Signature=xxxxxxx\r\n\r\nand after a little time, it will return \r\n\r\nhttps://bucket.s3.amazonaws.com/file?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20181013T025706Z&X-Amz-SignedHeaders=host&X-Amz-Expires=299&X-Amz-Credential=mmmmmmmmm&X-Amz-Signature=nnnnnnnnnnnnn\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create the client use:\r\n```\r\n                val credential = BasicAWSCredentials(\"awsAccessKeyId\", \"awsSecretAccessKey\")\r\n                val config = ClientConfiguration().withSocketTimeout(20000)\r\n                        .withEnableGzip(true)\r\n                m_S3Client = AmazonS3Client(credential, config)\r\n```\r\n2. upload something (optional)\r\n2. ``m_S3Client.generatePresignedUrl(bucketname, file, timeout)`` to sign anything. \r\n3. check the signed url. \r\n5. upload something else, sign the url again. \r\n\r\n**Which AWS service(s) are affected?**\r\nS3\r\n\r\n**Expected behavior**\r\nuse version 4 return the correct signed url. \r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Environment(please complete the following information):**\r\n - SDK Version: 2.7.5\r\n\r\n**Device Information (please complete the following information):**\r\n - Device: Samsung S6 Edge\r\n - Android Version: not official 9.0\r\n - Specific to simulators:\r\n\r\n**Additional context**\r\n<img width=\"1031\" alt=\"screen shot 2018-10-12 at 11 17 03 pm\" src=\"https://user-images.githubusercontent.com/785571/46900754-4346a980-ce75-11e8-86ab-aff74452e77f.png\">\r\nI see the source code and maybe it is because the client didn't setup the bucket region and there is no bucketRegionCache so region is empty and code jump into v2 sign. \r\nthe next time run,  the bucketRegionCache has been setup some where so after that it start use v4 sign. \r\n\r\n", "commits": {}, "title": "first time call generatePresignedUrl seem not use v4 sign", "created": "2018-10-13 03:19:39", "user": "jchbh-duplicate", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/542", "commitsDetails": [], "ttf": 25.00027777777778}, {"labels": ["Bug", "Needs Info from Requester", "S3", "closing-soon-if-no-response"], "closed": "2019-08-30 04:06:12", "body": "**Describe the bug**\r\nObject tagging is not set when uploading files with size > 5MB\r\n\r\nWhen file size is > 5MB there is only a `x-amz-meta-x-amz-tagging` metadata header set with actual tagging content\r\n\r\nWhen file size is < 5MB, the tagging is correctly set but the wrong `x-amz-meta-x-amz-tagging` header is still set in addition to tagging\r\n\r\n**To Reproduce**\r\nFor multipart upload:\r\n1. Build ObjectMetadata with `addUserMetadata(\"x-amz-tagging\", \"key=value\")`\r\n2. Upload file with size > 5MB using `TransferUtility.upload(bucket, key, file, objectMetadata)`\r\n3. Check object properties on S3 AWS console\r\n4. No tagging on object properties, only a `x-amz-meta-x-amz-tagging` header\r\n\r\nFor single part upload:\r\n1. Build ObjectMetadata with `addUserMetadata(\"x-amz-tagging\", \"key=value\")`\r\n2. Upload file with size < 5MB using `TransferUtility.upload(bucket, key, file, objectMetadata)`\r\n3. Check object properties on S3 AWS console\r\n4. Tagging with key/value correctly set, but wrong `x-amz-meta-x-amz-tagging` header also present\r\n\r\n**Expected behavior**\r\nThere should be no `x-amz-meta-x-amz-tagging` header in any case, and tagging should be set for multipart upload\r\n\r\n**Environment:**\r\n - SDK Version: 2.7.4\r\n\r\n**Device Information (please complete the following information):**\r\n - Android Version: 7.1.1 API 25\r\n\r\n", "commits": {}, "title": "S3 TransferUtility : incorrect support for object tagging on single/multipart upload", "created": "2018-10-11 14:28:08", "user": "fdelaporte", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/541", "commitsDetails": [], "ttf": 322.0002777777778}, {"labels": ["Bug", "Kinesis"], "closed": "2018-09-27 22:17:56", "body": "### To help us solve your problem better, please answer the following list of questions.\r\n\r\n* What service are you using?\r\nAWS Kinesis\r\n\r\n* In what version of SDK are you facing the problem?\r\n2.3.x\r\n\r\n* Is the issue limited to Simulators / Actual Devices?\r\nActual devices\r\n\r\n* Can your problem be resolved if you bump to a higher version of SDK?\r\nNo, the issue is present in the latest version of the SDK as well.\r\n\r\n* Is this problem related to specific Android/OS version?\r\nNo.\r\n\r\n* Can you give us steps to reproduce with a minimal, complete, and verifiable example? Please include any specific network conditions that might be required to reproduce the problem.\r\nNot applicable\r\n\r\n* Please include a stacktrace if applicable.\r\nNot applicable\r\n\r\n--------------------------------------------------\r\n\r\nIn the current implementation of KinesisRecorder, when a partition key is not explicitly specified in the KinesisRecorderConfig, the [same randomly-generated partition key is set to all records within a batch of records](https://github.com/aws/aws-sdk-android/blob/1d492dc7d8ad37a14596ddc337ba1a0733ec1182/aws-android-sdk-kinesis/src/main/java/com/amazonaws/mobileconnectors/kinesis/kinesisrecorder/KinesisStreamRecordSender.java#L80). This is leading to the records not being distributed equally among the shards, and also increased throttling of write requests to the stream with the 'WriteprovisionedThroughputExceeded' exception. The implementation should be changed to generate a random partition key for each record.\r\n\r\nIf you need help with understanding how to implement something in particular then we suggest that you first look into our [developer guide](https://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/). You can also simplify your process of creating an application by using [Mobile Hub](https://console.aws.amazon.com/mobilehub/home#/). ", "commits": {}, "title": "[Kinesis Streams] Partition key is not different for records within a single batch.", "created": "2018-09-21 05:38:40", "user": "GingerNinja23", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/533", "commitsDetails": [], "ttf": 6.000277777777778}, {"labels": ["Bug", "Needs Info from Requester", "S3", "closing-soon-if-no-response"], "closed": "2018-11-20 20:29:00", "body": "* What service are you using?\r\nTransfer utility upload.\r\n\r\n* In what version of SDK are you facing the problem?\r\ncom.amazonaws:aws-android-sdk-s3:2.6.30\r\n\r\n* Is the issue limited to Simulators / Actual Devices?\r\nActual device: Sony G3412 \r\n\r\n* Can your problem be resolved if you bump to a higher version of SDK?\r\nNo\r\n\r\n* Is this problem related to specific Android/OS version?\r\nI see it on Android 8.\r\n\r\n* Can you give us steps to reproduce with a minimal, complete, and verifiable example? Please include any specific network conditions that might be required to reproduce the problem.\r\n-- Switch ON Airplane Mode\r\n-- Start upload\r\n-- Switch Airplane Mode OFF\r\n\r\n* Please include a stack trace if applicable.\r\n```\r\ncom.amazonaws.AmazonClientException: Unable to execute HTTP request: Unable to resolve host \"s3.eu-central-1.amazonaws.com\": No address associated with hostname\r\n    \tat com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:441) ~[na:0.0]\r\n    \tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:212) ~[na:0.0]\r\n    \tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:4659) ~[na:0.0]\r\n    \tat com.amazonaws.services.s3.AmazonS3Client.putObject(AmazonS3Client.java:1752) ~[na:0.0]\r\n    \tat com.amazonaws.mobileconnectors.s3.transferutility.UploadTask.uploadSinglePartAndWaitForCompletion(UploadTask.java:219) ~[na:0.0]\r\n    \tat com.amazonaws.mobileconnectors.s3.transferutility.UploadTask.call(UploadTask.java:93) ~[na:0.0]\r\n    \tat com.amazonaws.mobileconnectors.s3.transferutility.UploadTask.call(UploadTask.java:49) ~[na:0.0]\r\n    \tat java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:0.0]\r\n    \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162) ~[na:0.0]\r\n    \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636) ~[na:0.0]\r\n    \tat java.lang.Thread.run(Thread.java:764) ~[na:0.0]\r\n    Caused by: java.net.UnknownHostException: Unable to resolve host \"s3.eu-central-1.amazonaws.com\": No address associated with hostname\r\n    \tat java.net.Inet6AddressImpl.lookupHostByName(Inet6AddressImpl.java:111) ~[na:0.0]\r\n    \tat java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:90) ~[na:0.0]\r\n    \tat java.net.InetAddress.getAllByName(InetAddress.java:792) ~[na:0.0]\r\n    \tat com.android.okhttp.Dns$1.lookup(Dns.java:39) ~[na:0.0]\r\n    \tat com.android.okhttp.internal.http.RouteSelector.resetNextInetSocketAddress(RouteSelector.java:175) ~[na:0.0]\r\n    \tat com.android.okhttp.internal.http.RouteSelector.nextProxy(RouteSelector.java:141) ~[na:0.0]\r\n    \tat com.android.okhttp.internal.http.RouteSelector.next(RouteSelector.java:83) ~[na:0.0]\r\n    \tat com.android.okhttp.internal.http.StreamAllocation.findConnection(StreamAllocation.java:174) ~[na:0.0]\r\n    \tat com.android.okhttp.internal.http.StreamAllocation.findHealthyConnection(StreamAllocation.java:126) ~[na:0.0]\r\n    \tat com.android.okhttp.internal.http.StreamAllocation.newStream(StreamAllocation.java:95) ~[na:0.0]\r\n    \tat com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:301) ~[na:0.0]\r\n    \tat com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:244) ~[na:0.0]\r\n    \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:473) ~[na:0.0]\r\n    \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:127) ~[na:0.0]\r\n    \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.getOutputStream(HttpURLConnectionImpl.java:262) ~[na:0.0]\r\n    \tat com.android.okhttp.internal.huc.DelegatingHttpsURLConnection.getOutputStream(DelegatingHttpsURLConnection.java:218) ~[na:0.0]\r\n    \tat com.android.okhttp.internal.huc.HttpsURLConnectionImpl.getOutputStream(Unknown Source:0) ~[na:0.0]\r\n    \tat com.amazonaws.http.UrlHttpClient.writeContentToConnection(UrlHttpClient.java:162) ~[na:0.0]\r\n    \tat com.amazonaws.http.UrlHttpClient.execute(UrlHttpClient.java:75) ~[na:0.0]\r\n    \tat com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:371) ~[na:0.0]\r\n```\r\n\r\nIt seems to me that you try to connect too early when the network is not ready yet.", "commits": {}, "title": "Transfer utility doesn't resume upload after network enable if started without connection on Android 8", "created": "2018-09-12 05:34:35", "user": "FilenkovMaxim", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/528", "commitsDetails": [], "ttf": 69.00027777777778}, {"labels": ["Bug", "Needs Info from Requester", "S3"], "closed": "2019-01-25 06:53:56", "body": "### To help us solve your problem better, please answer the following list of questions.\r\n\r\n* What service are you using?\r\nAWS S3\r\n* In what version of SDK are you facing the problem?\r\n2.6.30\r\n* Is the issue limited to Simulators / Actual Devices?\r\nno\r\n* Can your problem be resolved if you bump to a higher version of SDK?\r\nno\r\n* Is this problem related to specific Android/OS version?\r\nno\r\n* Can you give us steps to reproduce with a minimal, complete, and verifiable example? Please include any specific network conditions that might be required to reproduce the problem.\r\nUpload a file with key name \"abc@def.com\" using TransferUtility.\r\nWith sdk version 2.2.18, the key name appears correctly as \"abc@def.com\" on s3.\r\nWith sdk version 2.6.30, the key name becomes \"abc%40def.com\" on s3.\r\n\r\n* Please include a stacktrace if applicable.\r\n\r\n\r\nI want the key name not get automatically url encoded. Is staying in lower sdk version the only way to accomplish? However, I have to bump to 2.6.30 due to API level 28 Apache Commons Logging issue. Please help. \r\nIf you need help with understanding how to implement something in particular then we suggest that you first look into our [developer guide](https://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/). You can also simplify your process of creating an application by using [Mobile Hub](https://console.aws.amazon.com/mobilehub/home#/). ", "commits": {}, "title": "[S3][TransferUtility] Key names with special characters are not supported", "created": "2018-09-10 02:49:41", "user": "rickymohk", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/526", "commitsDetails": [], "ttf": 137.00027777777777}, {"labels": ["Bug"], "closed": "2018-09-07 17:36:57", "body": "### To help us solve your problem better, please answer the following list of questions.\r\n\r\n* What service are you using?\r\nGCM services since we will aim to use fire-base but need a quick solution for now.\r\n* In what version of SDK are you facing the problem?\r\nSdk Version 26\r\n* Is the issue limited to Simulators / Actual Devices?\r\nthe issue is limited to Oreo devices\r\n* Can your problem be resolved if you bump to a higher version of SDK?\r\nit was working on low SDK version but due to store restriction they aim to make the SDK 26 or higher in order to upload an apk to store\r\n* Is this problem related to specific Android/OS version?\r\nthe issue related to android 8.0 and higher\r\n* Can you give us steps to reproduce with a minimal, complete, and verifiable example? Please include any specific network conditions that might be required to reproduce the problem.\r\n\r\njava.lang.RuntimeException: \r\n  at android.app.ActivityThread.handleReceiver (ActivityThread.java:3397)\r\n  at android.app.ActivityThread.-wrap18 (Unknown Source)\r\n  at android.app.ActivityThread$H.handleMessage (ActivityThread.java:1780)\r\n  at android.os.Handler.dispatchMessage (Handler.java:105)\r\n  at android.os.Looper.loop (Looper.java:164)\r\n  at android.app.ActivityThread.main (ActivityThread.java:6938)\r\n  at java.lang.reflect.Method.invoke (Native Method)\r\n  at com.android.internal.os.Zygote$MethodAndArgsCaller.run (Zygote.java:327)\r\n  at com.android.internal.os.ZygoteInit.main (ZygoteInit.java:1374)\r\nCaused by: java.lang.IllegalStateException: \r\n  at android.app.ContextImpl.startServiceCommon (ContextImpl.java:1538)\r\n  at android.app.ContextImpl.startService (ContextImpl.java:1484)\r\n  at android.content.ContextWrapper.startService (ContextWrapper.java:663)\r\n  at android.content.ContextWrapper.startService (ContextWrapper.java:663)\r\n  at android.support.v4.content.WakefulBroadcastReceiver.startWakefulService (SourceFile:89)\r\n  at com.google.android.gms.gcm.GcmReceiver.zzf (Unknown Source:22)\r\n  at com.google.android.gms.gcm.GcmReceiver.zze (Unknown Source)\r\n  at com.google.android.gms.gcm.GcmReceiver.onReceive (Unknown Source:98)\r\n  at android.app.ActivityThread.handleReceiver (ActivityThread.java:3390)\r\n\r\n* Please include a stacktrace if applicable.\r\n\r\nIf you need help with understanding how to implement something in particular then we suggest that you first look into our [developer guide](https://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/). You can also simplify your process of creating an application by using [Mobile Hub](https://console.aws.amazon.com/mobilehub/home#/). \r\n\r\nPlease i need a fix permanently till i switch to FCM \r\n\r\nRegards", "commits": {}, "title": "android GCM on Oreo devices crash issue ", "created": "2018-09-05 08:15:47", "user": "Anonymous123456789123", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/525", "commitsDetails": [], "ttf": 2.000277777777778}, {"labels": ["Bug"], "closed": "2018-08-31 00:31:32", "body": "### To help us solve your problem better, please answer the following list of questions.\r\n\r\n* What service are you using?\r\naws-android-sdk-iot\r\n* In what version of SDK are you facing the problem?\r\n2.6.28\r\n* Is the issue limited to Simulators / Actual Devices?\r\nNo\r\n* Can your problem be resolved if you bump to a higher version of SDK?\r\nNo, highest at the moment.\r\n* Is this problem related to specific Android/OS version?\r\nNo\r\n* Can you give us steps to reproduce with a minimal, complete, and verifiable example? Please include any specific network conditions that might be required to reproduce the problem.\r\nMethod 'setMaxAutoReconnectAttepts' is declared in the file: 'aws-sdk-android/aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManager.java'\r\n\r\nShould be named 'setMaxAutoReconnectAttempts'.\r\n\r\n* Please include a stacktrace if applicable.\r\n-\r\nIf you need help with understanding how to implement something in particular then we suggest that you first look into our [developer guide](https://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/). You can also simplify your process of creating an application by using [Mobile Hub](https://console.aws.amazon.com/mobilehub/home#/). ", "commits": {}, "title": "Method typo 'setMaxAutoReconnectAttepts'", "created": "2018-08-29 11:23:22", "user": "spmvanmierlo", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/518", "commitsDetails": [], "ttf": 1.0002777777777778}, {"labels": ["AWSMobileClient", "Bug", "Documentation", "Needs Info from Requester"], "closed": "2018-11-20 19:12:06", "body": "\r\n\r\n### To help us solve your problem better, please answer the following list of questions.\r\n\r\n* What service are you using?\r\n```\r\n    implementation 'com.amazonaws:aws-android-sdk-mobile-client:2.6.15'\r\n    implementation 'com.amazonaws:aws-android-sdk-iot:2.6.15'\r\n    implementation 'com.amazonaws:aws-android-sdk-s3:2.6.18'\r\n    implementation 'com.amazonaws:aws-android-sdk-cognito:2.6.18'\r\n```\r\n\r\n* In what version of SDK are you facing the problem?\r\n (see above)\r\n\r\n* Is the issue limited to Simulators / Actual Devices?\r\n (api issue)\r\n\r\n* Can your problem be resolved if you bump to a higher version of SDK?\r\n (none available)\r\n\r\n* Is this problem related to specific Android/OS version?\r\nNo.\r\n\r\n* Can you give us steps to reproduce with a minimal, complete, and verifiable example? Please include any specific network conditions that might be required to reproduce the problem.\r\n\r\n\r\n```\r\n            Log.i(TAG,\"initializing AWS Mobile Client\");\r\n            AWSMobileClient.getInstance().initialize(this, new AWSStartupHandler() {\r\n                @Override\r\n                public void onComplete(AWSStartupResult awsStartupResult) {\r\n                     Log.i(TAG,\"completed\"); // this callback _NEVER_ gets triggered, why?  \r\n                                                              // There's no error condition?\r\n                }\r\n            }));\r\n```\r\n* Please include a stacktrace if applicable.\r\nNo stacktrace. The code fails silently, which is worse.\r\n\r\n", "commits": {}, "title": "API design: AWSStartupHandler is in dire need of an onError() callback", "created": "2018-07-22 06:47:28", "user": "Kumfert", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/501", "commitsDetails": [], "ttf": 121.00027777777778}, {"labels": ["Awaiting Release", "Bug", "Cognito", "Needs Info from Requester"], "closed": "2018-10-27 13:28:32", "body": "### To help us solve your problem better, please answer the following list of questions.\r\n\r\n* What service are you using?\r\nAWS Cognito\r\n\r\nHello,\r\nwe are currently using a Cognito User Pool for authenticating our Application Users. All works fine, until I found \"issue\" with Deleting account. So, if user deletes account, then creates a new one with same email and then try to login he encounter error.\r\n\r\nHere is the code:\r\n\r\n```\r\nCognitoManager.getPool().getUser(email).getSessionInBackground(authenticationHandler);\r\n\r\nAuthenticationHandler authenticationHandler = new AuthenticationHandler() {\r\n        @Override\r\n        public void onSuccess(CognitoUserSession cognitoUserSession, CognitoDevice device) {\r\n            LogUtils.log(\"login onSuccess\");\r\n            readProfile(email);\r\n        }\r\n\r\n        @Override\r\n        public void onFailure(Exception e) {\r\n            LogUtils.log(\"login onFailure: \"+e);\r\n        }\r\n\r\n        @Override\r\n        public void getAuthenticationDetails(AuthenticationContinuation authenticationContinuation, String username) {\r\n            AuthenticationDetails authenticationDetails = new AuthenticationDetails(email, password, null);\r\n            authenticationContinuation.setAuthenticationDetails(authenticationDetails);\r\n            authenticationContinuation.continueTask();\r\n        }\r\n\r\n        @Override\r\n        public void getMFACode(MultiFactorAuthenticationContinuation multiFactorAuthenticationContinuation) {}\r\n\r\n        @Override\r\n        public void authenticationChallenge(ChallengeContinuation continuation) {}\r\n    };\r\n\r\n\r\nprivate void readProfile(String email) {\r\n        CognitoManager.getPool().getUser(email).getDetailsInBackground(new GetDetailsHandler() {\r\n            @Override\r\n            public void onSuccess(CognitoUserDetails cognitoUserDetails) {\r\n                LogUtils.log(\"readProfile onSuccess\");\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Exception exception) {\r\n                LogUtils.log(\"readProfile onFailure: \"+exception.getMessage());\r\n            }\r\n        });\r\n    }\r\n```\r\nAnd output:\r\n```\r\nlogin onSuccess\r\nreadProfile onFailure: User does not exist. (Service: AmazonCognitoIdentityProvider; Status Code: 400; Error Code: UserNotFoundException; Request ID: 1ad1629f-7f93-11e8-8739-17803fb06cd7)\r\n```\r\nSo, getSessionInBackground() works ok but getDetailsInBackground() produces error. It doesn't work until user uninstalls application, then it works. I suppose, I should do some sort of refresh of User Pool details for my user programmatically and I will appreciate your help with this.\r\n", "commits": {}, "title": "Delete, create then login error", "created": "2018-07-06 08:41:29", "user": "andrey-fadeev", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/491", "commitsDetails": [], "ttf": 113.00027777777778}, {"labels": ["Bug", "Cognito"], "closed": "2019-04-10 14:57:43", "body": "### Problem.\r\n`CognitoUser.getSession` initiated with \"USER_PASSWORD\" authentication type does not send secret hash with the in auth request which leads to: \"NotAuthorizedException: Unable to verify secret hash for client\" \r\n\r\n### To help us solve your problem better, please answer the following list of questions.\r\n\r\n* What service are you using?\r\n\r\nCognito\r\n\r\n* In what version of SDK are you facing the problem?\r\n\r\naws-android-sdk-cognitoauth:2.6.23\r\n\r\n* Is the issue limited to Simulators / Actual Devices?\r\n\r\nAny\r\n\r\n* Can your problem be resolved if you bump to a higher version of SDK?\r\n\r\nThere is no higher SDK version at the moment\r\n\r\n* Is this problem related to specific Android/OS version?\r\n\r\nNo\r\n\r\n* Can you give us steps to reproduce with a minimal, complete, and verifiable example? Please include any specific network conditions that might be required to reproduce the problem.\r\n\r\nI tracked problem down to: `CognitoUser.initiateUserPasswordAuthRequest`, it doesn't add `SECRET_HASH` parameter to the auth request.\r\n\r\nReproduce:\r\nCall `CognitoUser.getSession(...)` with such a code in the `AuthenticationHandler`:\r\n```\r\n        @Override\r\n        public void getAuthenticationDetails(AuthenticationContinuation authenticationContinuation, String username)\r\n        {\r\n            AuthenticationDetails authDetails = new AuthenticationDetails(username, password, null);\r\n            authDetails.setAuthenticationType(CognitoServiceConstants.CHLG_TYPE_USER_PASSWORD);\r\n            authenticationContinuation.setAuthenticationDetails(authDetails);\r\n            authenticationContinuation.continueTask();\r\n        }\r\n```\r\nAuth request will be sent without \"SECRET_HASH\" property set, which leads to \"...NotAuthorizedException: Unable to verify secret hash for client...\" exception.\r\n\r\n\r\n* Please include a stacktrace if applicable.\r\n\r\n```\r\ncom.amazonaws.services.cognitoidentityprovider.model.NotAuthorizedException: Unable to verify secret hash for client iDontWantToShareClint (Service: AmazonCognitoIdentityProvider; Status Code: 400; Error Code: NotAuthorizedException; Request ID: 1616d336-7d20-11e8-aa2a-79a1678c9988)\r\n      at com.amazonaws.http.AmazonHttpClient.handleErrorResponse(AmazonHttpClient.java:730)\r\n      at com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:405)\r\n      at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:212)\r\n      at com.amazonaws.services.cognitoidentityprovider.AmazonCognitoIdentityProviderClient.invoke(AmazonCognitoIdentityProviderClient.java:5200)\r\n      at com.amazonaws.services.cognitoidentityprovider.AmazonCognitoIdentityProviderClient.initiateAuth(AmazonCognitoIdentityProviderClient.java:3580)\r\n      at com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.startWithUserPasswordAuth(CognitoUser.java:2571)\r\n      at com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.initiateUserAuthentication(CognitoUser.java:773)\r\n      at com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationContinuation.continueTask(AuthenticationContinuation.java:115)\r\n      at com.shutterfly.android.commons.usersession.providers.CognitoAuthentication$LoginHandler.getAuthenticationDetails(CognitoAuthentication.java:192)\r\n      at com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.getSession(CognitoUser.java:744)\r\n      at com.shutterfly.android.commons.usersession.providers.CognitoAuthentication.login(CognitoAuthentication.java:86)\r\n      at com.shutterfly.android.commons.usersession.AuthDataManager.loginSync(AuthDataManager.java:574)\r\n      at com.shutterfly.android.commons.usersession.AuthDataManager.lambda$login$1$AuthDataManager(AuthDataManager.java:532)\r\n      at com.shutterfly.android.commons.usersession.AuthDataManager$$Lambda$1.run(Unknown Source:24)\r\n      at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)\r\n      at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n      at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)\r\n      at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n      at java.lang.Thread.run(Thread.java:764)\r\n```\r\n\r\nIf you need help with understanding how to implement something in particular then we suggest that you first look into our [developer guide](https://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/). You can also simplify your process of creating an application by using [Mobile Hub](https://console.aws.amazon.com/mobilehub/home#/). ", "commits": {}, "title": "Cognito: Unable to verify secret hash for client", "created": "2018-07-01 11:37:11", "user": "maff91", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/484", "commitsDetails": [], "ttf": 283.0002777777778}, {"labels": ["Bug", "Cognito", "Needs Info from Requester"], "closed": "2018-11-20 19:11:57", "body": "\r\nI am using  'com.amazonaws:aws-android-sdk-cognitoidentityprovider:2.6.20' for my application.I am facing this problem in Sdk 26 Samsung s8.When app is in background after one hour if i want to hit my api using CognitoAuth.getCurrentSession().getIdToken().getJWTToken() it doesnot refresh and i got 401.", "commits": {}, "title": "Cognito Userpools token refresh fails to refresh", "created": "2018-06-04 15:39:48", "user": "ramdeep16", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/472", "commitsDetails": [], "ttf": 169.00027777777777}, {"labels": ["Bug", "Needs Info from Requester", "S3", "closing-soon-if-no-response"], "closed": "2018-10-26 16:38:05", "body": "* What service are you using?\r\n\r\nAWS S3 (with Client-side encryption)\r\n\r\n* In what version of SDK are you facing the problem?\r\n\r\nLatest\r\n\r\n* Is the issue limited to Simulators / Actual Devices?\r\n\r\nBoth\r\n\r\n* Can your problem be resolved if you bump to a higher version of SDK?\r\n\r\nNo\r\n\r\n* Is this problem related to specific Android/OS version?\r\n\r\nYes, latest code available on master branch on AOSP, as defined here: https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html\r\n\r\n* Can you give us steps to reproduce with a minimal, complete, and verifiable example? Please include any specific network conditions that might be required to reproduce the problem.\r\n\r\nAny attempt to use S3 with client-side encryption will trigger this issue. The problem is because CryptoRuntime.java in AWS Android SDK (https://github.com/aws/aws-sdk-android/blob/8d91ac8014c3b2643fd92560f890c58d11fbe069/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/internal/crypto/CryptoRuntime.java#L31) specifically requesting \"BC\" from Security.getProvider() and due to the change introduced on master branch on AOSP its producing warning for now (or may produce error later); refer to the example below (algorithm of course could be different depending which one is used but the idea should be clear):\r\n \r\n******** DEPRECATED FUNCTIONALITY ********\r\n* The implementation of the Cipher.AES/GCM/NoPadding algorithm from\r\n* the BC provider is deprecated in this version of Android.\r\n* It will be removed in a future version of Android and your\r\n* application will no longer be able to request it.  Please see\r\n* https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html\r\n* for more details.\r\n \r\nRelevant Google commit: https://android-review.googlesource.com/c/platform/libcore/+/510257/3/ojluni/src/main/java/sun/security/jca/Providers.java#536\r\n\r\n* Please include a stacktrace if applicable.\r\n\r\nNo stacktrace, just a message in logcat system log so far.", "commits": {}, "title": "Change CryptoRuntime.java to stop using \"BC\"(BouncyCastle) explicitly.", "created": "2018-05-29 20:58:57", "user": "NikolayAtSony", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/470", "commitsDetails": [], "ttf": 149.00027777777777}, {"labels": ["Bug", "Cognito", "Needs Info from Requester", "closing-soon-if-no-response"], "closed": "2018-10-31 01:06:48", "body": "## Improve the \"Sign Up UI error handling flow\"\r\n\r\n### What service are you using?\r\n#### I created a project on the Amazon Mobile Hub and then added the following sdks to my project (all at version 2.6.+@aar)\r\n* aws-android-sdk-mobile-client\r\n* aws-android-sdk-auth-userpools\r\n* aws-android-sdk-auth-ui\r\n\r\nWhat I experienced:\r\n* Observe the \"Sign-In\" page (with buttons: \"Sign In\", \"Create New Account\" and \"Forgot Password?\")\r\n* Press \"Create New Account\"\r\n* Observe the \"Sign Up\" page, enter all details (enter a password that will fail validation) and press the \"Sign Up\" button\r\n* UI goes back to the initial \"Sign-In\" page and a dialog with error message is shown (Password did not conform with policy: Password must have uppercase characters)\r\n\r\nThis means the user has to press \"Create New Account\" again and fill in all the details again.\r\n\r\nIt would be better if the error dialog was just shown on the \"Sign Up\" page, let the user correct their mistake and press \"Sign Up\" button again.", "commits": {}, "title": "Show signup error without clearing signup fields - Improve the \"Sign Up\" error handling flow", "created": "2018-05-18 01:16:19", "user": "anje89", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/460", "commitsDetails": [], "ttf": 165.00027777777777}, {"labels": ["Bug", "Feature Request", "Lambda"], "closed": "2018-09-04 23:25:33", "body": "### To help us solve your problem better, please answer the following list of questions.\r\n\r\n* What service are you using?\r\nLambda\r\n\r\n* In what version of SDK are you facing the problem?\r\n2.6.19\r\n\r\n* Is the issue limited to Simulators / Actual Devices?\r\nAll devices\r\n\r\n* Can your problem be resolved if you bump to a higher version of SDK?\r\nNo\r\n\r\n* Is this problem related to specific Android/OS version?\r\nNo\r\n\r\n* Can you give us steps to reproduce with a minimal, complete, and verifiable example? Please include any specific network conditions that might be required to reproduce the problem.\r\n\r\nLambdaInvocationHandler.java has the following piece of code:\r\n\r\n```\r\n.....\r\n        // If the log type is other than 'None', force to be RequestResponse.\r\n        if (!LogType.None.equals(lambdaFunction.logType())) {\r\n            invokeRequest.setInvocationType(InvocationType.RequestResponse);\r\n        } else {\r\n            invokeRequest.setInvocationType(lambdaFunction.invocationType());\r\n        }\r\n.....\r\n```\r\n\r\nThe condition always evaluates to true and hence specifying Event/DryRun invocationType in the annotation have no effect.\r\n\r\nThere is a lint warning that indicates the above problem as well:\r\n'equals()' between objects of inconvertible types 'LogType' and 'String'\r\n\r\nYou can also check it easily that `LogType.None.equals(\"None\")` evaluates to false due to the above.\r\n\r\nWhen request and HTTP client logging are enabled, we can clearly see that the `X-Amz-Invocation-Type` header is always set to `RequestResponse` even if we have the annotation set correctly as `@LambdaFunction(invocationType = \"Event\")`\r\n\r\n* Please include a stacktrace if applicable.\r\n\r\nIf you need help with understanding how to implement something in particular then we suggest that you first look into our [developer guide](https://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/). You can also simplify your process of creating an application by using [Mobile Hub](https://console.aws.amazon.com/mobilehub/home#/). ", "commits": {}, "title": "Lambda Invocation Type is always \"RequestResponse\"", "created": "2018-05-15 17:28:59", "user": "v360", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/459", "commitsDetails": [], "ttf": 112.00027777777778}, {"labels": ["Bug", "IoT", "Needs Info from Requester", "closing-soon-if-no-response"], "closed": "2019-01-17 21:42:37", "body": "### To help us solve your problem better, please answer the following list of questions.\r\n\r\n* What service are you using?\r\nAWS IOT\r\n* In what version of SDK are you facing the problem?\r\n2.6.14 and 2.6.19\r\n* Is the issue limited to Simulators / Actual Devices?\r\nActual Devices\r\n* Can your problem be resolved if you bump to a higher version of SDK?\r\nPartly \r\n* Is this problem related to specific Android/OS version?\r\nNo\r\n* Can you give us steps to reproduce with a minimal, complete, and verifiable example? Please include any specific network conditions that might be required to reproduce the problem.\r\n\r\nThe app is sending data on each second.\r\nAfter an hour of work the SDK loses connection and keeps trying to reconnect, but never succeed\r\non v2.6.14, today I have changed to v2.6.19 and connection appears after 3 min and 184 attempts. \r\nThis happens only when the device is connected through WiFi.\r\nMy devices are 2m away from the router and there is internet on the WiFi connection for sure.\r\nAt this point if I turn off the Wifi on the device, then the SDK connects immediately trough the Mobile Internet. Turning on WiFi leads to same reconnecting issue, if I turn off the Mobile net. \r\nAfter a few hours the SDK connects trough WiFi like there was never a problem(this was with v2.6.14\r\ntoday on v2.6.19 reconnects in 3min).\r\nHappens on Nexus 5x(8.1.0) and Samsung S8+(8.0)\r\n\r\n* Please include a stacktrace if applicable.\r\n05-15 12:08:43.090 I/AWSIotMqttManager: metrics collection is enabled, username: ?SDK=Android&Version=2.6.19\r\n05-15 12:08:43.091 I/AWSIotMqttManager: resetting reconnect attempt and retry time\r\n05-15 12:08:43.664 W/AWSIotMqttManager: onFailure: connection failed.\r\n05-15 12:08:43.665 I/AWSIotMqttManager: schedule Reconnect attempt 0 of -1 in 1 seconds.\r\n05-15 12:08:44.668 I/AWSIotMqttManager: attempting to reconnect to mqtt broker\r\n05-15 12:08:44.723 W/AWSIotMqttManager: Reconnect failed \r\n05-15 12:08:44.723 I/AWSIotMqttManager: schedule Reconnect attempt 1 of -1 in 1 seconds.\r\n05-15 12:08:45.726 I/AWSIotMqttManager: attempting to reconnect to mqtt broker\r\n05-15 12:08:45.886 W/AWSIotMqttManager: Reconnect failed \r\n05-15 12:08:45.887 I/AWSIotMqttManager: schedule Reconnect attempt 2 of -1 in 1 seconds.\r\n05-15 12:08:46.892 I/AWSIotMqttManager: attempting to reconnect to mqtt broker\r\n05-15 12:08:46.930 W/AWSIotMqttManager: Reconnect failed \r\n05-15 12:08:46.931 I/AWSIotMqttManager: schedule Reconnect attempt 3 of -1 in 1 seconds.\r\n05-15 12:08:47.935 I/AWSIotMqttManager: attempting to reconnect to mqtt broker\r\n05-15 12:08:47.991 W/AWSIotMqttManager: Reconnect failed \r\n**_Here I disable WiFi_**\r\n05-15 12:08:51.098 I/AWSIotMqttManager: attempting to reconnect to mqtt broker\r\n05-15 12:08:52.859 I/AWSIotMqttManager: Reconnect successful\r\n05-15 12:08:52.860 I/AWSIotMqttManager: Auto-resubscribe is enabled. Resubscribing to previous topics.\r\n05-15 12:08:53.359 I/AWSIotMqttManager: delivery is complete\r\n05-15 12:08:53.955 I/AWSIotMqttManager: message arrived on topic: notifications/353626078661282\r\n**_Here I enable WiFi(so far so good, because the connection continue on 3G I guess)_**\r\n05-15 12:10:15.742 I/AWSIotMqttManager: message arrived on topic: notifications/353626078661282\r\n   -- Some work--\r\n**_Here I disable Mobile net_**\r\n05-15 12:10:17.046 W/AWSIotMqttManager: connection is Lost\r\n05-15 12:10:17.051 I/AWSIotMqttManager: resetting reconnect attempt and retry time\r\n05-15 12:10:17.056 I/AWSIotMqttManager: schedule Reconnect attempt 0 of -1 in 1 seconds.\r\n05-15 12:10:18.064 I/AWSIotMqttManager: attempting to reconnect to mqtt broker\r\n05-15 12:10:18.237 W/AWSIotMqttManager: Reconnect failed \r\n05-15 12:10:18.239 I/AWSIotMqttManager: schedule Reconnect attempt 1 of -1 in 1 seconds.\r\n05-15 12:10:19.243 I/AWSIotMqttManager: attempting to reconnect to mqtt broker\r\n05-15 12:10:19.278 W/AWSIotMqttManager: Reconnect failed \r\n**_After 184  attempts is Reconnected successful, this wasn't even happening before, probably\r\nbecause I was using 2.6.14 and today switched to 2.6.19_**\r\n05-15 12:13:36.531 W/AWSIotMqttManager: Reconnect failed \r\n05-15 12:13:36.534 I/AWSIotMqttManager: schedule Reconnect attempt 184 of -1 in 1 seconds.\r\n05-15 12:13:37.541 I/AWSIotMqttManager: attempting to reconnect to mqtt broker\r\n05-15 12:13:38.750 I/AWSIotMqttManager: Reconnect successful\r\n05-15 12:13:38.751 I/AWSIotMqttManager: Auto-resubscribe is enabled. Resubscribing to previous topics.\r\n05-15 12:13:40.881 I/AWSIotMqttManager: delivery is complete\r\n\r\nHere are my configurations:\r\n            mqttManager = new AWSIotMqttManager(clientId, AWSConstants.CLIENT_ENDPOINT);\r\n            mqttManager.setDrainingInterval(1000L);//send offline msg if was queued in last 1000 mills\r\n            mqttManager.setAutoReconnect(true);//default\r\n            mqttManager.setAutoResubscribe(true);//default\r\n            mqttManager.setMaxAutoReconnectAttepts(-1);//forever\r\n            mqttManager.setReconnectRetryLimits(1, 1);//check to reconnect each second\r\n\r\nIf you need help with understanding how to implement something in particular then we suggest that you first look into our [developer guide](https://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/). You can also simplify your process of creating an application by using [Mobile Hub](https://console.aws.amazon.com/mobilehub/home#/). ", "commits": {}, "title": "AWS IOT connectivity issues on WiFi", "created": "2018-05-15 09:39:57", "user": "2math", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/458", "commitsDetails": [], "ttf": 247.00027777777777}, {"labels": ["Bug", "CloudWatch"], "closed": "2018-05-11 21:43:38", "body": "When i ve tried to send logs from Android client to Cloudwatch i ve received next error: \r\n\r\ncom.amazonaws.AmazonServiceException: Credential should be scoped to correct service: 'logs'.  (Service: AmazonCloudWatchLogs; Status Code: 400; Error Code: InvalidSignatureException;\r\n\r\ni m using aws-android-sdk-logs library. \r\nClient has access and secret key, i ve setted correct region...\r\nWhat i m doing wrong ?", "commits": {}, "title": "aws-android-sdk-logs error", "created": "2018-04-25 12:59:14", "user": "eashevchenko", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/453", "commitsDetails": [], "ttf": 16.00027777777778}, {"labels": ["Bug", "IoT", "Needs Info from Requester", "closing-soon-if-no-response"], "closed": "2019-01-17 21:42:18", "body": "### To help us solve your problem better, please answer the following list of questions.\r\n\r\n* What service are you using?\r\nIot\r\n* In what version of SDK are you facing the problem?\r\ncom.amazonaws:aws-android-sdk-iot:2.6.18\r\n\r\n* Is the issue limited to Simulators / Actual Devices?\r\nNo\r\n\r\n* Can your problem be resolved if you bump to a higher version of SDK?\r\nNo\r\n\r\n* Is this problem related to specific Android/OS version?\r\nNo\r\n\r\n* Can you give us steps to reproduce with a minimal, complete, and verifiable example? Please include any specific network conditions that might be required to reproduce the problem.\r\nAWSIotMqttManager.publishString(java.lang.String str, java.lang.String topic, AWSIotMqttQos qos, AWSIotMqttMessageDeliveryCallback cb, java.lang.Object userData) looks not work.\r\n\r\nIf I use publishString(java.lang.String str, java.lang.String topic, AWSIotMqttQos qos), it works well, but if I use publishString with userData, after this line executed, AWS iot connection will be reset, then re-connection will be triggered.\r\n\r\nCloud watch log as below:\r\n2018-04-18 09:04:34.911 TRACEID:6d0d4b78-849a-e61a-5d30-2e4609a1fb55 PRINCIPALID:1608872cd55dcf70ac96bdd510904c462fa228b6e4ba068720f72fb84ff6cb8d [ERROR] EVENT:PublishEvent TOPICNAME:test/responseSomething MESSAGE:PublishIn Status: CLIENT_ERROR\r\n2018-04-18 09:04:34.911 TRACEID:6d0d4b78-849a-e61a-5d30-2e4609a1fb55 PRINCIPALID:1608872cd55dcf70ac96bdd510904c462fa228b6e4ba068720f72fb84ff6cb8d [INFO] EVENT:PublishEvent MESSAGE: IpAddress: 58.213.63.58 SourcePort: 46802\r\n2018-04-18 09:04:34.919 TRACEID:5496fb81-a636-df2b-e4ea-6e0884e0cf1d PRINCIPALID:1608872cd55dcf70ac96bdd510904c462fa228b6e4ba068720f72fb84ff6cb8d [INFO] EVENT:MQTT Client Disconnect MESSAGE:Disconnect Status: SUCCESS\r\n2018-04-18 09:04:34.919 TRACEID:5496fb81-a636-df2b-e4ea-6e0884e0cf1d PRINCIPALID:1608872cd55dcf70ac96bdd510904c462fa228b6e4ba068720f72fb84ff6cb8d [INFO] EVENT:MQTT Client Disconnect MESSAGE: IpAddress: 58.213.63.58 SourcePort: 46802\r\n\r\n* Please include a stacktrace if applicable.\r\n\r\nIf you need help with understanding how to implement something in particular then we suggest that you first look into our [developer guide](https://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/). You can also simplify your process of creating an application by using [Mobile Hub](https://console.aws.amazon.com/mobilehub/home#/). ", "commits": {}, "title": "Use AWSIotMqttManager.publishString with callback looks not work", "created": "2018-04-21 03:29:38", "user": "pwa16000", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/449", "commitsDetails": [], "ttf": 271.0002777777778}, {"labels": ["Bug", "Needs Info from Requester", "S3", "closing-soon-if-no-response"], "closed": "2018-10-22 18:10:46", "body": "### To help us solve your problem better, please answer the following list of questions.\r\n\r\n* s3\r\n\r\n* In what version of SDK are you facing the problem?\r\n\r\naws-android-sdk-s3:2.6.15\r\n\r\n* Oreo Device specifically Google Pixel\r\n\r\n* Can your problem be resolved if you bump to a higher version of SDK? No\r\n\r\n* Is this problem related to specific Android/OS version? Maybe\r\n\r\n* Can you give us steps to reproduce with a minimal, complete, and verifiable example? Please include any specific network conditions that might be required to reproduce the problem.\r\n\r\nUpload 100 images to s3 bucket\r\n", "commits": {}, "title": "Warning A connection to https://******s3.us-west-2.amazonaws.com/ was leaked. Did you forget to close a response body?", "created": "2018-03-14 07:24:47", "user": "noamsegv", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/423", "commitsDetails": [], "ttf": 222.00027777777777}, {"labels": ["Bug", "Needs Info from Requester", "S3", "closing-soon-if-no-response"], "closed": "2018-10-26 16:42:13", "body": " I uploaded file with the key name is `1184*2112*IMG_27_02_2018_07_29_1956.jpg`  but it converted the '*' symbol to %2A that why it is display 1184%2A2112%2AIMG_27_02_2018_07_29_1956.jpg so i am not able to access this.\r\n\r\nI am using 2.6.14 version sdk.\r\n\r\n", "commits": {}, "title": "key name change 2.614 version", "created": "2018-02-28 09:59:01", "user": "chandreshandroid", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/416", "commitsDetails": [], "ttf": 240.00027777777777}, {"labels": ["Bug", "Needs Info from Requester", "Pinpoint", "closing-soon-if-no-response"], "closed": "2018-11-07 04:55:36", "body": "### To help us solve your problem better, please answer the following list of questions.\r\n\r\n* What service are you using?\r\nPinpoint\r\n\r\n* In what version of SDK are you facing the problem?\r\n2.6.15\r\n\r\n* Is the issue limited to Simulators / Actual Devices?\r\nActual Device - 4.1.1\r\n\r\n* Can your problem be resolved if you bump to a higher version of SDK?\r\n2.6.15 is the current latest\r\n\r\n* Is this problem related to specific Android/OS version?\r\nYes - seems like this is a known issue with devices before Kitkat (search for stack trace below)\r\n\r\n* Can you give us steps to reproduce with a minimal, complete, and verifiable example? Please include any specific network conditions that might be required to reproduce the problem.\r\nSend a direct message to a 4.1.1 device after Pinpoint push notification integration (FCM)\r\n\r\n* Please include a stacktrace if applicable.\r\n```\r\njava.lang.IllegalArgumentException: Can't use FLAG_RECEIVER_BOOT_UPGRADE here\r\n    at android.os.Parcel.readException(Parcel.java:1429)\r\n    at android.os.Parcel.readException(Parcel.java:1379)\r\n    at android.app.ActivityManagerProxy.getIntentSender(ActivityManagerNative.java:2955)\r\n    at android.app.PendingIntent.getBroadcast(PendingIntent.java:369)\r\n    at com.amazonaws.mobileconnectors.pinpoint.targeting.notification.GCMNotificationClient.createOpenAppPendingIntent(GCMNotificationClient.java:53)\r\n    at com.amazonaws.mobileconnectors.pinpoint.targeting.notification.NotificationClientBase.displayNotification(NotificationClientBase.java:694)\r\n    at com.amazonaws.mobileconnectors.pinpoint.targeting.notification.NotificationClientBase.handleCampaignPush(NotificationClientBase.java:873)\r\n    at com.amazonaws.mobileconnectors.pinpoint.targeting.notification.NotificationClient.handleFCMCampaignPush(NotificationClient.java:174)\r\n    at com.vastra360.V360Creator.firebase.fcm.MyFirebaseMessagingService.a(MyFirebaseMessagingService.java:16)\r\n    at com.google.firebase.messaging.FirebaseMessagingService.b(Unknown Source)\r\n    at com.google.firebase.iid.e.run(Unknown Source)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)\r\n    at java.lang.Thread.run(Thread.java:856)\r\n```\r\nIf you need help with understanding how to implement something in particular then we suggest that you first look into our [developer guide](https://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/). You can also simplify your process of creating an application by using [Mobile Hub](https://console.aws.amazon.com/mobilehub/home#/). ", "commits": {}, "title": "Crash in Pinpoint NotificationClient using FCM", "created": "2018-02-19 11:03:46", "user": "v360", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/412", "commitsDetails": [], "ttf": 260.0002777777778}, {"labels": ["Bug", "Needs Info from Requester", "S3", "closing-soon-if-no-response"], "closed": "2019-02-27 06:08:57", "body": "I am using S3 service\r\nThis is my code implementation\r\n```\r\nprivate void uploadFileToS3(String bucket, final String upload_file_name, final File file, final String imageWidth, final String imageHeight, final Boolean async) {\r\n\r\n        String key = \"KEY\";\r\n        String secret = \"SECRET\";\r\n        BasicAWSCredentials credentials = new BasicAWSCredentials(key, secret);\r\n        AmazonS3Client s3 = new AmazonS3Client(credentials);\r\n        s3.setRegion(Region.getRegion(Regions.AP_SOUTHEAST_1));\r\n        TransferUtility transferUtility = new TransferUtility(s3, this);\r\n\r\n        observer = transferUtility.upload(bucket, upload_file_name, file);\r\n\r\n        // only on async we will show dialog\r\n        final CustomBottomSheetDialog dialog = new CustomBottomSheetDialog(mainActivity, R.layout.sync_image_progress_loader, false);\r\n\r\n        observer.setTransferListener(new TransferListener() {\r\n            @Override\r\n            public void onStateChanged(int id, TransferState state) {\r\n                if (state == TransferState.IN_PROGRESS) {\r\n                    if (!async)\r\n                        dialog.show();\r\n                } else if(state == TransferState.COMPLETED) {\r\n                    if (!async)\r\n                        dialog.dismiss();\r\n                    imageCallbackInterface.imageUploadCompleted(file, upload_file_name, imageWidth, imageHeight);\r\n                } else  if (state ==  TransferState.FAILED) {\r\n                    if (!async)\r\n                        dialog.dismiss();\r\n                    toast(\"Failed to Upload Image, Try Again.\", Toast.LENGTH_SHORT);\r\n                } else if (state == TransferState.CANCELED) {\r\n                    if (!async)\r\n                        dialog.dismiss();\r\n                    toast(\"Upload Cancelled\", Toast.LENGTH_LONG);\r\n                } else if(state == TransferState.WAITING_FOR_NETWORK) {\r\n                    if (!async)\r\n                        dialog.dismiss();\r\n                    toast(\"NO INTERNET ACCESS\", Toast.LENGTH_SHORT);\r\n                    observer.cleanTransferListener();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onProgressChanged(int id, long bytesCurrent, long bytesTotal) {\r\n                Log.d(\"bytescurrent, bytestotal\", String.valueOf(bytesCurrent)+\",\"+String.valueOf(bytesTotal));\r\n                Integer percentage = (int) (((float)(bytesCurrent)/(float)bytesTotal)*100);\r\n                Log.d(\"percentage\", String.valueOf(percentage));\r\n                ((TextView) dialog.bottom_sheet_dialog.findViewById(R.id.sync_image_progress_value)).setText(String.valueOf(percentage) + \"%\");\r\n            }\r\n\r\n            @Override\r\n            public void onError(int id, Exception ex) {\r\n                log(ex.getMessage());\r\n            }\r\n        });\r\n\r\n    }\r\n```\r\nFile is succesfully uploaded to s3 but observer onProgressChanged listener is returning same bytesCurrent and bytesTotal every time when onProgressChanged called.", "commits": {}, "title": "S3 TransferUtility : TransferListener onProgressChanged gets invoked more than once", "created": "2018-02-07 17:41:10", "user": "amankumarjain", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/406", "commitsDetails": [], "ttf": 384.0002777777778}, {"labels": ["Bug", "S3"], "closed": "2018-10-19 16:22:52", "body": "https://github.com/aws/aws-sdk-android/blob/67d34accb74ce4ae66d87a1a4dbd5ced3bec5322/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferUtility.java#L761\r\n\r\nAndroid rules for background services have changed, the above line is causing our application to crash irrecoverably.\r\nSee the android migration guide for reference: https://developer.android.com/about/versions/oreo/background.html#migration", "commits": {}, "title": "Using startService for a background event is causing crashes in Android O", "created": "2018-01-23 12:11:22", "user": "linusmartensson", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/400", "commitsDetails": [], "ttf": 269.0002777777778}, {"labels": ["Bug", "IoT", "Needs Info from Requester"], "closed": "2019-01-18 15:54:16", "body": "### To help us solve your problem better, please answer the following list of questions.\r\n\r\n* What service are you using?\r\n   AWS IOT\r\n* In what version of SDK are you facing the problem?\r\n   2.6.12\r\n* Is the issue limited to Simulators / Actual Devices?\r\n   Actual Device\r\n* Can your problem be resolved if you bump to a higher version of SDK?\r\n No\r\n* Is this problem related to specific Android/OS version?\r\n  Now 5.0.2 and 4.4.4\r\n* Can you give us steps to reproduce with a minimal, complete, and verifiable example? Please include any specific network conditions that might be required to reproduce the problem.\r\n\r\nI'm following AndroidPubSubWebSocket sample code. Status is constantly reconnecting.\r\n\r\n```\r\nmqttManager.connect(credentialsProvider, AWSIotMqttClientStatusCallback { status, throwable ->\r\n                runOnUiThread {\r\n                    if (status == AWSIotMqttClientStatus.Connecting) {\r\n                        log(\"Connecting...\")\r\n                    } else if (status == AWSIotMqttClientStatus.Connected) {\r\n                        log(\"Connected\")\r\n                    } else if (status == AWSIotMqttClientStatus.Reconnecting) {\r\n                        if (throwable != null) {\r\n                            log(\"Connection error.\")\r\n                        }\r\n                        log(\"Reconnecting\")\r\n                    } else if (status == AWSIotMqttClientStatus.ConnectionLost) {\r\n                        if (throwable != null) {\r\n                            log(\"Connection error.\")\r\n                            throwable.printStackTrace()\r\n                        }\r\n                        log(\"Disconnected\")\r\n                    } else {\r\n                        log(\"Disconnected\")\r\n                    }\r\n                }\r\n            })\r\n\r\n```\r\n\r\n\r\n* Please include a stacktrace if applicable.\r\n\r\nMainActivity : Connecting...\r\nAWSIotMqttManager: onFailure: connection failed.\r\nAWSIotMqttManager: schedule Reconnect attempt 0 of 10 in 4 seconds.\r\nMainActivity : Reconnecting\r\nAWSIotMqttManager: attempting to reconnect to mqtt broker\r\nAWSIotMqttManager: Reconnect failed\r\nAWSIotMqttManager: schedule Reconnect attempt 1 of 10 in 8 seconds.\r\nMainActivity : Reconnecting\r\nAWSIotMqttManager: attempting to reconnect to mqtt broker\r\nAWSIotMqttManager: Reconnect failed\r\nAWSIotMqttManager: schedule Reconnect attempt 2 of 10 in 16 seconds.\r\nMainActivity : Reconnecting...\r\n\r\n  ", "commits": {}, "title": "AWS IOT Reconnecting Issue ", "created": "2018-01-09 07:10:11", "user": "yusufonderd", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/394", "commitsDetails": [], "ttf": 374.0002777777778}, {"labels": ["Bug", "Duplicate", "S3"], "closed": "2019-01-02 20:21:46", "body": "# Summary\r\n\r\n* What service are you using?\r\n  - [aws-android-sdk-s3](https://github.com/aws/aws-sdk-android/tree/master/aws-android-sdk-s3)\r\n  - [aws-android-sdk-cognito](https://github.com/aws/aws-sdk-android/tree/master/aws-android-sdk-cognito)\r\n\r\n* In what version of SDK are you facing the problem?\r\n  - `com.amazonaws:aws-android-sdk-cognito:2.4.+`\r\n  - `com.amazonaws:aws-android-sdk-s3:2.4.+`\r\n\r\n* Is the issue limited to Simulators / Actual Devices?\r\n  - Both\r\n\r\n* Can your problem be resolved if you bump to a higher version of SDK?\r\n   - No.\r\n   - **But, It does not happen in `com.amazonaws:aws-android-sdk-s3:2.3.+`**\r\n   - It seems to have occurred when fixing [this bug](https://github.com/aws/aws-sdk-android/blob/master/CHANGELOG.md#bug-fixes-12).(Amazon S3: fixed an issue which caused resource path to be incorrectly encoded.See AWS Forum Post)\r\n\r\n# Test File\r\n\r\n[\u305f\u3099\u304f\u3066\u3093\u3042\u308a\u30d5\u30a1\u30a4\u30eb.jpeg.zip](https://github.com/aws/aws-sdk-android/files/1425748/jpeg.zip)\r\n\r\n![image](https://user-images.githubusercontent.com/3356758/32151660-fafaa912-bd61-11e7-8da8-5e3a2c0cbcd5.png)\r\n\r\n```\r\nAccess Denied (Service: Amazon S3; Status Code: 403; Error Code: AccessDenied\r\n```", "commits": {}, "title": "Unable to download UTF-8-MAC file at aws-android-sdk-s3", "created": "2017-10-30 02:05:53", "user": "TakkuMattsu", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/360", "commitsDetails": [], "ttf": 429.0002777777778}, {"labels": ["Bug", "Cognito", "Needs Info from Requester"], "closed": "2018-11-20 19:11:10", "body": "* What service are you using?\r\nCognito\r\n\r\n* In what version of SDK are you facing the problem?\r\nI have seen the issue with version 2.3.9 and 2.6.2.\r\n\r\n* Is the issue limited to Simulators / Actual Devices?\r\nActual Device.\r\n\r\n* Can your problem be resolved if you bump to a higher version of SDK?\r\nNo.\r\n\r\n* Is this problem related to specific Android/OS version?\r\nSeen on Both Android and iOS.\r\n\r\n* Can you give us steps to reproduce with a minimal, complete, and verifiable example? Please include any specific network conditions that might be required to reproduce the problem.\r\n\r\n1.\tAfter launching the application for the first time, the user logs in from the Sign-In activity. (Note: uses Cognito for authentication)\r\n2.\tAfter a successful login, the user runs the app throughout the day without any issues.\r\n3.\tClose/minimize the application for the night.\r\n4.\tLaunch the application the next day which results in application going to the Sign-In page.\r\n\r\nStacktrace after launching the app the next day:\r\n```\r\n09-19 10:24:12.176 31543-31625/ D/CognitoCachingCredentialsProvider: Loading credentials from SharedPreferences\r\n09-19 10:24:12.177 31543-31625/D/CognitoCachingCredentialsProvider: No valid credentials found in SharedPreferences\r\n09-19 10:24:15.831 31543-31646/D/CognitoCachingCredentialsProvider: Loading credentials from SharedPreferences\r\n09-19 10:24:15.831 31543-31646/D/CognitoCachingCredentialsProvider: No valid credentials found in SharedPreferences\r\n09-19 10:24:16.817 31543-31646/E/CognitoCachingCredentialsProvider: Failure to get credentials\r\n    com.amazonaws.services.cognitoidentity.model.NotAuthorizedException: Unauthenticated access is not supported for this identity pool. (Service: AmazonCognitoIdentity; Status Code: 400; Error Code: NotAuthorizedException; Request ID: 38584547-9d46-11e7-852c-7b9b46e911e1)\r\n        at com.amazonaws.http.AmazonHttpClient.handleErrorResponse(AmazonHttpClient.java:720)\r\n        at com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:394)\r\n        at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:200)\r\n        at com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.invoke(AmazonCognitoIdentityClient.java:558)\r\n        at com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.getId(AmazonCognitoIdentityClient.java:444)\r\n        at com.amazonaws.auth.AWSAbstractCognitoIdentityProvider.getIdentityId(AWSAbstractCognitoIdentityProvider.java:172)\r\n        at com.amazonaws.auth.AWSEnhancedCognitoIdentityProvider.refresh(AWSEnhancedCognitoIdentityProvider.java:76)\r\n        at com.amazonaws.auth.CognitoCredentialsProvider.startSession(CognitoCredentialsProvider.java:601)\r\n        at com.amazonaws.auth.CognitoCredentialsProvider.getCredentials(CognitoCredentialsProvider.java:388)\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.getCredentials(CognitoCachingCredentialsProvider.java:442)\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.getCredentials(CognitoCachingCredentialsProvider.java:76)\r\n        at com.amazonaws.mobileconnectors.iot.AWSIotMqttManager$1.run(AWSIotMqttManager.java:669)\r\n        at java.lang.Thread.run(Thread.java:761)\r\n09-19 10:24:16.817 31543-31646/D/CognitoCachingCredentialsProvider: Identity id is changed\r\n09-19 10:24:16.817 31543-31646/D/CognitoCachingCredentialsProvider: Saving identity id to SharedPreferences\r\n09-19 10:24:16.822 31543-31646/D/CognitoCachingCredentialsProvider: Clearing credentials from SharedPreferences\r\n09-19 10:24:16.824 31543-31543/E/NetworkUtil: requestFailure(): AmazonServiceException - errorMessageDisplay - Unauthenticated access is not supported for this identity pool.\r\n09-19 10:24:16.833 31543-31543/D/DeviceProvider: Mqtt manager disconnected\r\n09-19 10:24:16.880 31543-31648/D/CognitoCachingCredentialsProvider: Loading credentials from SharedPreferences\r\n09-19 10:24:16.880 31543-31648/D/CognitoCachingCredentialsProvider: No valid credentials found in SharedPreferences\r\n09-19 10:24:16.882 31543-31646/E/AndroidRuntime: FATAL EXCEPTION: Thread-9\r\n   Process:, PID: 31543\r\n   com.amazonaws.services.cognitoidentity.model.NotAuthorizedException: Unauthenticated access is not supported for this identity pool. (Service: AmazonCognitoIdentity; Status Code: 400; Error Code: NotAuthorizedException; Request ID: 3866eb8e-9d46-11e7-88ea-278be8950570)\r\n       at com.amazonaws.http.AmazonHttpClient.handleErrorResponse(AmazonHttpClient.java:720)\r\n       at com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:394)\r\n       at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:200)\r\n       at com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.invoke(AmazonCognitoIdentityClient.java:558)\r\n       at com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.getId(AmazonCognitoIdentityClient.java:444)\r\n       at com.amazonaws.auth.AWSAbstractCognitoIdentityProvider.getIdentityId(AWSAbstractCognitoIdentityProvider.java:172)\r\n       at com.amazonaws.auth.AWSEnhancedCognitoIdentityProvider.refresh(AWSEnhancedCognitoIdentityProvider.java:76)\r\n       at com.amazonaws.auth.CognitoCredentialsProvider.startSession(CognitoCredentialsProvider.java:601)\r\n       at com.amazonaws.auth.CognitoCredentialsProvider.getCredentials(CognitoCredentialsProvider.java:388)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.getCredentials(CognitoCachingCredentialsProvider.java:456)\r\n       at com.amazonaws.auth.CognitoCachingCredentialsProvider.getCredentials(CognitoCachingCredentialsProvider.java:76)\r\n       at com.amazonaws.mobileconnectors.iot.AWSIotMqttManager$1.run(AWSIotMqttManager.java:669)\r\n       at java.lang.Thread.run(Thread.java:761)\r\n09-19 10:24:17.046 31543-31648/E/CognitoCachingCredentialsProvider: Failure to get credentials\r\n    com.amazonaws.services.cognitoidentity.model.NotAuthorizedException: Unauthenticated access is not supported for this identity pool. (Service: AmazonCognitoIdentity; Status Code: 400; Error Code: NotAuthorizedException; Request ID: 386fc4d9-9d46-11e7-a72f-59c0b4272704)\r\n        at com.amazonaws.http.AmazonHttpClient.handleErrorResponse(AmazonHttpClient.java:720)\r\n        at com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:394)\r\n        at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:200)\r\n        at com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.invoke(AmazonCognitoIdentityClient.java:558)\r\n        at com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.getId(AmazonCognitoIdentityClient.java:444)\r\n        at com.amazonaws.auth.AWSAbstractCognitoIdentityProvider.getIdentityId(AWSAbstractCognitoIdentityProvider.java:172)\r\n        at com.amazonaws.auth.AWSEnhancedCognitoIdentityProvider.refresh(AWSEnhancedCognitoIdentityProvider.java:76)\r\n        at com.amazonaws.auth.CognitoCredentialsProvider.startSession(CognitoCredentialsProvider.java:601)\r\n        at com.amazonaws.auth.CognitoCredentialsProvider.getCredentials(CognitoCredentialsProvider.java:388)\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.getCredentials(CognitoCachingCredentialsProvider.java:442)\r\n        at com.amazonaws.auth.CognitoCachingCredentialsProvider.getCredentials(CognitoCachingCredentialsProvider.java:76)\r\n        at com.amazonaws.mobileconnectors.apigateway.ApiClientHandler.buildRequest(ApiClientHandler.java:185)\r\n        at com.amazonaws.mobileconnectors.apigateway.ApiClientHandler.createHttpRequest(ApiClientHandler.java:116)\r\n        at com.amazonaws.mobileconnectors.apigateway.ApiClientHandler.invoke(ApiClientHandler.java:94)\r\n        at java.lang.reflect.Proxy.invoke(Proxy.java:813)\r\n        at $Proxy1.v1LocationsGet(Unknown Source)\r\n        at com.rwc.networklibrary.providers.location.LocationProvider$2.run(LocationProvider.java:86)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n        at java.lang.Thread.run(Thread.java:761)\r\n        at com.rwc.networklibrary.util.NetworkUtil$1$1.run(NetworkUtil.java:37)\r\n09-19 10:24:17.046 31543-31648/D/CognitoCachingCredentialsProvider: Identity id is changed\r\n09-19 10:24:17.046 31543-31648/D/CognitoCachingCredentialsProvider: Saving identity id to SharedPreferences\r\n09-19 10:24:17.046 31543-31648/D/CognitoCachingCredentialsProvider: Clearing credentials from SharedPreferences\r\n09-19 10:24:17.106 31543-31647/D/CognitoCachingCredentialsProvider: Clearing credentials from SharedPreferences\r\n09-19 10:24:17.106 31543-31648/W/System.err: com.amazonaws.mobileconnectors.apigateway.ApiClientException: Unauthenticated access is not supported for this identity pool. (Service: AmazonCognitoIdentity; Status Code: 400; Error Code: NotAuthorizedException; Request ID: 38885651-9d46-11e7-8223-035e47f21c10) (Service: null; Status Code: 0; Error Code: null; Request ID: null)\r\n09-19 10:24:17.108 31543-31543/D/CognitoCachingCredentialsProvider: Clearing credentials from SharedPreferences\r\n09-19 10:24:17.109 31543-31543/D/CognitoCachingCredentialsProvider: Identity id is changed\r\n09-19 10:24:17.109 31543-31543/D/CognitoCachingCredentialsProvider: Saving identity id to SharedPreferences\r\n09-19 10:24:17.110 31543-31543/D/CognitoCachingCredentialsProvider: Clearing credentials from SharedPreferences\r\n09-19 10:24:17.112 31543-31647/D/CognitoCachingCredentialsProvider: Clearing credentials from SharedPreferences\r\n09-19 10:24:17.113 31543-31647/D/CognitoCachingCredentialsProvider: Identity id is changed\r\n09-19 10:24:17.113 31543-31647/D/CognitoCachingCredentialsProvider: Saving identity id to SharedPreferences\r\n09-19 10:24:17.113 31543-31647/D/CognitoCachingCredentialsProvider: Clearing credentials from SharedPreferences\r\n09-19 10:24:17.114 31543-31647/D/CognitoCachingCredentialsProvider: Clearing credentials from SharedPreferences\r\n09-19 10:24:17.114 31543-31647/D/CognitoCachingCredentialsProvider: Clearing credentials from SharedPreferences\r\n```", "commits": {}, "title": "Cognito - NotAuthorizedException forcing users to Sign-In", "created": "2017-09-22 19:00:39", "user": "sunilRWC", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/347", "commitsDetails": [], "ttf": 424.0002777777778}, {"labels": ["Bug", "IoT"], "closed": "2018-05-15 20:08:05", "body": "I solved this bug, see the attached pull request.\r\n\r\n* What service are you using?\r\n**aws-android-sdk-iot**\r\n\r\n* In what version of SDK are you facing the problem?\r\n**2.2.22(but with newer version too, the problem persist)** \r\n\r\n* Is the issue limited to Simulators / Actual Devices?\r\n**No**\r\n\r\n* Can your problem be resolved if you bump to a higher version of SDK?\r\n**No, but I resolved using a `ConcurrentHashMap`, please see the attached pull request** \r\n\r\n* Is this problem related to specific Android/OS version?\r\n**No**\r\n\r\n* Can you give us steps to reproduce with a minimal, complete, and verifiable example? Please include any specific network conditions that might be required to reproduce the problem.\r\n**The problem is related to the concurrent access to the `topicListeners`. I am facing this problem when a thread subscribes a new topic and, in the meanwhile, another thread is informing about the arrival of a new message.**\r\n\r\n* Please include a stacktrace if applicable.\r\n\r\n```\r\nMqttException (0) - java.util.ConcurrentModificationException\r\n    at org.eclipse.paho.client.mqttv3.internal.CommsCallback.run(CommsCallback.java:197)\r\n    at java.lang.Thread.run(Thread.java:761)\r\nCaused by: java.util.ConcurrentModificationException\r\n    at java.util.LinkedHashMap$LinkedHashIterator.nextEntry(LinkedHashMap.java:411)\r\n    at java.util.LinkedHashMap$KeyIterator.next(LinkedHashMap.java:422)\r\n    at com.########.android.app.AwsClient$2$4.onMessageArrived(AwsClient.java:248)\r\n    at com.amazonaws.mobileconnectors.iot.AWSIotMqttManager$6.messageArrived(AWSIotMqttManager.java:1233)\r\n    at org.eclipse.paho.client.mqttv3.internal.CommsCallback.deliverMessage(CommsCallback.java:475)\r\n    at org.eclipse.paho.client.mqttv3.internal.CommsCallback.handleMessage(CommsCallback.java:379)\r\n    at org.eclipse.paho.client.mqttv3.internal.CommsCallback.run(CommsCallback.java:183)\r\n\t... 1 more\r\n```", "commits": {}, "title": "ConcurrentModificationException of the HashMap topicListeners in aws-android-sdk-iot", "created": "2017-08-15 16:09:22", "user": "claudiopastorini", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/329", "commitsDetails": [], "ttf": 273.0002777777778}, {"filteredCommitsReason": {"alsoFixesPhrase": 0, "duplicated": 6, "mergeCommitUsed": 0, "moreThanOneParent": 0, "unavailable": 0, "multipleIssueFixes": 3}, "labels": ["Bug", "Cognito", "Needs Info from Requester", "closing-soon-if-no-response"], "user": "kyarosh", "filteredCommits": [], "commits": {"39c40490d167b26ea70fc4557e432e38ebddd81f": {"commitUser": "kvasukib", "commitGHEventType": "closed"}, "606f7746543fd22c8154edcf5870aa02e54ef6a8": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "75d9268c6babf92b2047857dde1b913bc75fa0f9": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "54875b77660a9e67aac1a5a92ccb8137380e9117": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "d940bf03ea518b35c60438d3cf8f3421a73cfb7d": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "cc5e1309f2759005abf672bd3c40dbf119f2a554": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "9ea6328079ae1d6e9e38ac37b7935266b2615a7e": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "6c5f9135e897e21ff17b0de9966d72f9a168a189": {"commitUser": "minbi", "commitGHEventType": "referenced"}, "fdef7d3366fb89f0ee32ed9abf951c3c84322891": {"commitUser": "minbi", "commitGHEventType": "referenced"}}, "created": "2017-08-11 04:02:00", "commitsDetails": [{"commitMessage": "Staging release 2.12.5 (#793)\n\n* Secure information stored in SharedPreferences\r\n\r\n* Lower aws-android-sdk-core-test compile and target sdk version to 27\r\n\r\n* Add a symlink to android-23.jar for core\r\n\r\n* Add a gradle task that creates a symlink to android-23.jar for AWS Core\r\n\r\n* Fix the gradle task that creates symbolic link to android-23.jar\r\n\r\n* Change config.yml to setup android-23\r\n\r\n* Enable core, cognitoidentityprovider and cognitoauth integration tests on CircleCI\r\n\r\n* Enable core, cognitoidentityprovider and cognitoauth integration tests on CircleCI\r\n\r\n* Fix pom.xml\r\n\r\n* Improve exception handling in AWSKeyValueStore\r\n\r\n* [2.12.3] Bump the patch version of 2.12.z\r\n\r\n* Update 2.12.3 CHANGELOG\r\n\r\n* Add the missing bucket prefixes to CleanupBucketIntegrationTests\r\n\r\n* Fix a bug where migrating expirationDate in CognitoCachingCredentialsProvider crashes\r\n\r\n* [2.12.4] Update changelog and bump version\r\n\r\n* Annotate code specific to API Level 23 and above in AWSKeyValueStore\r\n\r\n* Added API to accept key-value pairs which are appended to the connection username (#765)\r\n\r\nThe connection username is used as user metadata by the service for the purpose of metrics calculation.\r\n\r\n* build android sdk with android-10 (#782)\r\n\r\n* Add sign out options\r\n\r\n* [MobileClient] Cleanup javadocs and remove unnecessary try..catch blocks\r\n\r\n* [MobileClient] Add developer authenticated identities to federatedSignIn fixes #577\r\n\r\n* [MobileClient] Add test for developer authenticated idenities federatedSignIn\r\n\r\n* [MobileClient] Persist identity id for developer authenticated identities\r\n\r\n* [MobileClient] Add AWSMobileClient as client usage tracker in user agent\r\n\r\n* [MobileClient] Add device operations; Add error message to ReturningRunnable\r\n\r\n* [MobileClient] Add global sign-out functionality\r\n\r\n* [MobileClient] Add custom role arn to settings in federated sign-in persistence\r\n\r\n* [MobileClient] Add forgot password test; Fix sign out globally test\r\n\r\n* [MobileClient] [Userpools] [CognitoAuth] Add HostedUI and OAuth 2.0 code grant flow support\r\n\r\n[MobileClient]\r\nAdd HostedUI and OAuth 2.0 code grant flow support\r\n\r\n[Userpools]\r\nFix threading issues reported in issue #722\r\n\r\n[CognitoAuth]\r\nAdded methods to reset AuthHandler and get session without launching UI\r\nFix erroneous user cancelled when redirecting back to app fixes #328\r\n\r\n* [MobileClient] Fix multiple adds of SignInProvider to provider list fixes #766\r\n\r\n* [MobileClient] Fix git merge issues\r\n\r\n* [MobileClient] Fix integration tests for new configuration\r\n\r\n* [CognitoAuth] Fix NPE when ASF feature turned off\r\n\r\n* [MobileClient] Finalize APIs before release, add persistence flag to OAuth 2.0 and HostedUI features\r\n\r\n* [AuthSDKs] Update maven repositories in pom to maven.google.com\r\n\r\n* [Core] Fix NPE when setting persistence in AWSKeyValueStore after initialization\r\n\r\n* [MobileClient] Ignore manual tests in automation\r\n\r\n* [MobileClient] Ignore drop-in UI test due to timeout; Default OAuth 2.0 client to persist\r\n\r\n* Fix the transition between persistence enabled and disabled in AWSKeyValueStore\r\n\r\n* Enable core, cognitoidentityprovider and cognitoauth integration tests on CircleCI\r\n\r\n* Update changelog for 2.12.5; Add mobile client; Remove IoT metrics\r\n\r\n* Skip reserved keynames (#791)\r\n\r\n* Skip reserved keynames\r\n\r\n* Add log when reserved key names are encountered\r\n\r\n* Bump version 2.12.5 (#792)\r\n", "commitParents": ["50311c38f9bd3d85a84e41ab7c32164ea100bd07"], "commitHash": "39c40490d167b26ea70fc4557e432e38ebddd81f", "commitSpoonAstDiffStats": [], "nameRev": "39c40490d167b26ea70fc4557e432e38ebddd81f tags/release_v2.16.12~418^2", "commitUser": "kvasukib", "authoredDateTime": "2019-03-14 12:33:55", "commitGHEventType": "closed", "commitGitStats": [{"lines": 4, "filePath": "aws-android-sdk-translate/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 52, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/internal/oauth2/OAuth2Tokens.java", "insertions": 52, "deletions": 0}, {"lines": 4, "filePath": "aws-android-sdk-comprehend/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 16, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/internal/oauth2/AuthorizeResponse.java", "insertions": 16, "deletions": 0}, {"lines": 13, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/IdentityProvider.java", "insertions": 12, "deletions": 1}, {"lines": 107, "filePath": "aws-android-sdk-core-test/src/androidTest/java/com/amazonaws/internal/keyvaluestore/AWSKeyStoreIntegrationTest.java", "insertions": 107, "deletions": 0}, {"lines": 6, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientOfflineTest.java", "insertions": 3, "deletions": 3}, {"lines": 659, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/internal/oauth2/OAuth2Client.java", "insertions": 659, "deletions": 0}, {"lines": 4, "filePath": "aws-android-sdk-ses/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 8, "filePath": "aws-android-sdk-ddb-mapper/pom.xml", "insertions": 4, "deletions": 4}, {"lines": 2, "filePath": "aws-android-sdk-core/src/main/resources/fabric/com.amazonaws.aws-android-sdk-core.properties", "insertions": 1, "deletions": 1}, {"lines": 41, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/results/Device.java", "insertions": 41, "deletions": 0}, {"lines": 2, "filePath": "aws-android-sdk-mobile-client/src/main/AndroidManifest.xml", "insertions": 1, "deletions": 1}, {"lines": 28, "filePath": "aws-android-sdk-core/src/main/java/com/amazonaws/internal/keyvaluestore/AWSKeyValueStore.java", "insertions": 17, "deletions": 11}, {"lines": 4, "filePath": "aws-android-sdk-ddb/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 10, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/SignInUIOptions.java", "insertions": 10, "deletions": 0}, {"lines": 5, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-anydpi-v26/ic_launcher.xml", "insertions": 5, "deletions": 0}, {"lines": 29, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTestBase.java", "insertions": 28, "deletions": 1}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-mdpi/ic_launcher.png", "insertions": 0, "deletions": 0}, {"lines": 3, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/values/strings.xml", "insertions": 3, "deletions": 0}, {"lines": 288, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/DeviceOperations.java", "insertions": 288, "deletions": 0}, {"lines": 2, "filePath": "aws-android-sdk-cognito/src/main/resources/fabric/com.amazonaws.aws-android-sdk-cognito.properties", "insertions": 1, "deletions": 1}, {"lines": 103, "filePath": "aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUser.java", "insertions": 90, "deletions": 13}, {"lines": 21, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/results/ListDevicesResult.java", "insertions": 21, "deletions": 0}, {"lines": 2, "filePath": "aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/MqttManagerIntegrationTest.java", "insertions": 1, "deletions": 1}, {"lines": 4, "filePath": "aws-android-sdk-transcribe/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 2, "filePath": "aws-android-sdk-core/pom.xml", "insertions": 1, "deletions": 1}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-hdpi/ic_launcher.png", "insertions": 0, "deletions": 0}, {"lines": 4, "filePath": "aws-android-sdk-kinesis/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 4, "filePath": "aws-android-sdk-iot/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 4, "filePath": "aws-android-sdk-sdb/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xhdpi/ic_launcher.png", "insertions": 0, "deletions": 0}, {"lines": 27, "filePath": ".idea/modules.xml", "insertions": 26, "deletions": 1}, {"lines": 4, "filePath": "aws-android-sdk-elb/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 8, "filePath": "aws-android-sdk-auth-facebook/pom.xml", "insertions": 4, "deletions": 4}, {"lines": 5, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/drawable/ic_launcher_round.xml", "insertions": 5, "deletions": 0}, {"lines": 70, "filePath": ".circleci/config.yml", "insertions": 70, "deletions": 0}, {"lines": 40, "filePath": "aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/AuthClient.java", "insertions": 36, "deletions": 4}, {"lines": 27, "filePath": "aws-android-sdk-mobile-client/src/androidTest/AndroidManifest.xml", "insertions": 25, "deletions": 2}, {"lines": 5, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/drawable/ic_launcher.xml", "insertions": 5, "deletions": 0}, {"lines": 11, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/values/styles.xml", "insertions": 11, "deletions": 0}, {"lines": 173, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientOAuth2Test.java", "insertions": 173, "deletions": 0}, {"lines": 6, "filePath": "aws-android-sdk-sns/pom.xml", "insertions": 3, "deletions": 3}, {"lines": 4, "filePath": "aws-android-sdk-kinesisvideo-archivedmedia/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 2, "filePath": "aws-android-sdk-core/src/test/java/com/amazonaws/util/VersionInfoUtilsTest.java", "insertions": 1, "deletions": 1}, {"lines": 4, "filePath": "aws-android-sdk-autoscaling/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xxxhdpi/ic_launcher_round.png", "insertions": 0, "deletions": 0}, {"lines": 2, "filePath": "aws-android-sdk-core/src/main/java/com/amazonaws/util/VersionInfoUtils.java", "insertions": 1, "deletions": 1}, {"lines": 4, "filePath": "aws-android-sdk-kinesisvideo/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 5, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-anydpi-v26/ic_launcher_round.xml", "insertions": 5, "deletions": 0}, {"lines": 193, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientUITest.java", "insertions": 193, "deletions": 0}, {"lines": 4, "filePath": "aws-android-sdk-apigateway-core/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 4, "filePath": "aws-android-sdk-rekognition/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 4, "filePath": "aws-android-sdk-auth-core/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 34, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/drawable-v24/ic_launcher_foreground.xml", "insertions": 34, "deletions": 0}, {"lines": 18, "filePath": "CHANGELOG.md", "insertions": 18, "deletions": 0}, {"lines": 2, "filePath": "pom.xml", "insertions": 1, "deletions": 1}, {"lines": 70, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/SignOutOptions.java", "insertions": 70, "deletions": 0}, {"lines": 4, "filePath": "aws-android-sdk-sqs/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 4, "filePath": "aws-android-sdk-pinpoint/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xxxhdpi/ic_launcher.png", "insertions": 0, "deletions": 0}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-mdpi/ic_launcher_round.png", "insertions": 0, "deletions": 0}, {"lines": 6, "filePath": "aws-android-sdk-ddb-document/pom.xml", "insertions": 3, "deletions": 3}, {"lines": 38, "filePath": "aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManager.java", "insertions": 36, "deletions": 2}, {"lines": 44, "filePath": "CircleciScripts/replace_android10.py", "insertions": 44, "deletions": 0}, {"lines": 55, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/internal/ReturningRunnable.java", "insertions": 55, "deletions": 0}, {"lines": 26, "filePath": "aws-android-sdk-mobile-client/build.gradle", "insertions": 25, "deletions": 1}, {"lines": 14, "filePath": "aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/util/LocalDataManager.java", "insertions": 13, "deletions": 1}, {"lines": 4, "filePath": "aws-android-sdk-lambda/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 6, "filePath": "aws-android-sdk-s3/pom.xml", "insertions": 3, "deletions": 3}, {"lines": 6, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/values/colors.xml", "insertions": 6, "deletions": 0}, {"lines": 6, "filePath": "aws-android-sdk-cognito/pom.xml", "insertions": 3, "deletions": 3}, {"lines": 4, "filePath": "aws-android-sdk-mobileanalytics/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 10, "filePath": "aws-android-sdk-auth-userpools/pom.xml", "insertions": 5, "deletions": 5}, {"lines": 25, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/internal/oauth2/OAuth2Exception.java", "insertions": 25, "deletions": 0}, {"lines": 4, "filePath": "aws-android-sdk-ec2/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-hdpi/ic_launcher_round.png", "insertions": 0, "deletions": 0}, {"lines": 170, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/drawable/ic_launcher_background.xml", "insertions": 170, "deletions": 0}, {"lines": 73, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientUITestActivity.java", "insertions": 73, "deletions": 0}, {"lines": 1730, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java", "insertions": 1326, "deletions": 404}, {"lines": 43, "filePath": "aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/Auth.java", "insertions": 41, "deletions": 2}, {"lines": 12, "filePath": "aws-android-sdk-auth-google/pom.xml", "insertions": 4, "deletions": 8}, {"lines": 4, "filePath": "aws-android-sdk-lex/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 26, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/layout/activity_awsmobileclient_ui_test.xml", "insertions": 26, "deletions": 0}, {"lines": 4, "filePath": "aws-android-sdk-polly/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xxhdpi/ic_launcher.png", "insertions": 0, "deletions": 0}, {"lines": 4, "filePath": "aws-android-sdk-kms/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xxhdpi/ic_launcher_round.png", "insertions": 0, "deletions": 0}, {"lines": 17, "filePath": "aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManagerTest.java", "insertions": 14, "deletions": 3}, {"lines": 14, "filePath": "aws-android-sdk-auth-ui/pom.xml", "insertions": 7, "deletions": 7}, {"lines": 111, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/HostedUIOptions.java", "insertions": 111, "deletions": 0}, {"lines": 6, "filePath": "aws-android-sdk-cognitoidentityprovider/pom.xml", "insertions": 3, "deletions": 3}, {"lines": 10, "filePath": "aws-android-sdk-cognitoauth/pom.xml", "insertions": 5, "deletions": 5}, {"lines": 341, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTest.java", "insertions": 308, "deletions": 33}, {"lines": 4, "filePath": "aws-android-sdk-machinelearning/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 26, "filePath": "aws-android-sdk-mobile-client/pom.xml", "insertions": 17, "deletions": 9}, {"lines": 4, "filePath": "aws-android-sdk-logs/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 4, "filePath": "aws-android-sdk-cloudwatch/pom.xml", "insertions": 2, "deletions": 2}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xhdpi/ic_launcher_round.png", "insertions": 0, "deletions": 0}, {"lines": 53, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/FederatedSignInOptions.java", "insertions": 53, "deletions": 0}], "commitDateTime": "2019-03-14 12:33:55", "spoonStatsSkippedReason": "tooManyFiles"}, {"commitMessage": "", "commitParents": [], "commitHash": "606f7746543fd22c8154edcf5870aa02e54ef6a8", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "[MobileClient] [Userpools] [CognitoAuth] Add HostedUI and OAuth 2.0 code grant flow support\n\n[MobileClient]\nAdd HostedUI and OAuth 2.0 code grant flow support\n\n[Userpools]\nFix threading issues reported in issue #722\n\n[CognitoAuth]\nAdded methods to reset AuthHandler and get session without launching UI\nFix erroneous user cancelled when redirecting back to app fixes #328\n", "commitParents": ["df32165f4413dd64bf2e3a85c869144e6a551f75"], "commitHash": "75d9268c6babf92b2047857dde1b913bc75fa0f9", "commitSpoonAstDiffStats": [], "nameRev": "75d9268c6babf92b2047857dde1b913bc75fa0f9 tags/release_v2.16.12~434", "commitUser": "minbi", "authoredDateTime": "2019-03-06 11:03:03", "commitGHEventType": "referenced", "commitGitStats": [{"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-hdpi/ic_launcher.png", "insertions": 0, "deletions": 0}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xxxhdpi/ic_launcher.png", "insertions": 0, "deletions": 0}, {"lines": 52, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/internal/oauth2/OAuth2Tokens.java", "insertions": 52, "deletions": 0}, {"lines": 170, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/drawable/ic_launcher_background.xml", "insertions": 170, "deletions": 0}, {"lines": 5, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-anydpi-v26/ic_launcher_round.xml", "insertions": 5, "deletions": 0}, {"lines": 34, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/drawable-v24/ic_launcher_foreground.xml", "insertions": 34, "deletions": 0}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-hdpi/ic_launcher_round.png", "insertions": 0, "deletions": 0}, {"lines": 6, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/{DeviceList.java => results/ListDevicesResult.java}", "insertions": 3, "deletions": 3}, {"lines": 31, "filePath": "aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/Auth.java", "insertions": 30, "deletions": 1}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xhdpi/ic_launcher.png", "insertions": 0, "deletions": 0}, {"lines": 643, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/internal/oauth2/OAuth2Client.java", "insertions": 643, "deletions": 0}, {"lines": 3, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/values/strings.xml", "insertions": 3, "deletions": 0}, {"lines": 12, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/{ => results}/Device.java", "insertions": 6, "deletions": 6}, {"lines": 189, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientUITest.java", "insertions": 189, "deletions": 0}, {"lines": 73, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientUITestActivity.java", "insertions": 73, "deletions": 0}, {"lines": 5, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/drawable/ic_launcher_round.xml", "insertions": 5, "deletions": 0}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-mdpi/ic_launcher_round.png", "insertions": 0, "deletions": 0}, {"lines": 18, "filePath": "aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/AuthClient.java", "insertions": 15, "deletions": 3}, {"lines": 5, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-anydpi-v26/ic_launcher.xml", "insertions": 5, "deletions": 0}, {"lines": 6, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/values/colors.xml", "insertions": 6, "deletions": 0}, {"lines": 2, "filePath": "aws-android-sdk-mobile-client/src/main/AndroidManifest.xml", "insertions": 1, "deletions": 1}, {"lines": 27, "filePath": "aws-android-sdk-mobile-client/src/androidTest/AndroidManifest.xml", "insertions": 25, "deletions": 2}, {"lines": 5, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/drawable/ic_launcher.xml", "insertions": 5, "deletions": 0}, {"lines": 11, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/values/styles.xml", "insertions": 11, "deletions": 0}, {"lines": 10, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/SignInUIOptions.java", "insertions": 10, "deletions": 0}, {"lines": 172, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientOAuth2Test.java", "insertions": 172, "deletions": 0}, {"lines": 26, "filePath": "aws-android-sdk-mobile-client/build.gradle", "insertions": 25, "deletions": 1}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xxhdpi/ic_launcher_round.png", "insertions": 0, "deletions": 0}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-mdpi/ic_launcher.png", "insertions": 0, "deletions": 0}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xxhdpi/ic_launcher.png", "insertions": 0, "deletions": 0}, {"lines": 769, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java", "insertions": 734, "deletions": 35}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xxxhdpi/ic_launcher_round.png", "insertions": 0, "deletions": 0}, {"lines": 0, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/mipmap-xhdpi/ic_launcher_round.png", "insertions": 0, "deletions": 0}, {"lines": 39, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/DeviceOperations.java", "insertions": 20, "deletions": 19}, {"lines": 111, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/HostedUIOptions.java", "insertions": 111, "deletions": 0}, {"lines": 103, "filePath": "aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUser.java", "insertions": 90, "deletions": 13}, {"lines": 8, "filePath": "aws-android-sdk-mobile-client/pom.xml", "insertions": 8, "deletions": 0}, {"lines": 26, "filePath": "aws-android-sdk-mobile-client/src/androidTest/res/layout/activity_awsmobileclient_ui_test.xml", "insertions": 26, "deletions": 0}, {"lines": 25, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/internal/oauth2/OAuth2Exception.java", "insertions": 25, "deletions": 0}, {"lines": 16, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/internal/oauth2/AuthorizeResponse.java", "insertions": 16, "deletions": 0}, {"lines": 15, "filePath": "aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTest.java", "insertions": 8, "deletions": 7}, {"lines": 10, "filePath": "aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/FederatedSignInOptions.java", "insertions": 5, "deletions": 5}], "commitDateTime": "2019-03-14 08:45:34", "spoonStatsSkippedReason": "tooManyChanges"}, {"commitMessage": "", "commitParents": [], "commitHash": "54875b77660a9e67aac1a5a92ccb8137380e9117", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "", "commitParents": [], "commitHash": "d940bf03ea518b35c60438d3cf8f3421a73cfb7d", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "", "commitParents": [], "commitHash": "cc5e1309f2759005abf672bd3c40dbf119f2a554", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "", "commitParents": [], "commitHash": "9ea6328079ae1d6e9e38ac37b7935266b2615a7e", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}, {"commitMessage": "[CognitoAuth] Fix erroneous user cancelled error when redirecting back to app #328, #871\n", "commitParents": ["b15f54008d100736ae1c9820a4003ae07b5e50fa"], "commitHash": "6c5f9135e897e21ff17b0de9966d72f9a168a189", "commitSpoonAstDiffStats": [{"spoonFilePath": "LocalDataManager.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoauth.util.LocalDataManager.hasReceivedRedirect(com.amazonaws.internal.keyvaluestore.AWSKeyValueStore,android.content.Context,java.lang.String)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoauth.util.LocalDataManager.cacheHasReceivedRedirect(com.amazonaws.internal.keyvaluestore.AWSKeyValueStore,android.content.Context,java.lang.String,boolean)", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}]}, {"spoonFilePath": "AuthClient.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoauth.AuthClient", "DEL": 1, "INS": 0, "UPD": 0, "MOV": 0, "TOT": 1}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoauth.AuthClient.getTokens(android.net.Uri)", "DEL": 1, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoauth.AuthClient.launchCustomTabs(android.net.Uri)", "DEL": 1, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 2}, {"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoauth.AuthClient.1.onNavigationEvent(int,android.os.Bundle)", "DEL": 3, "INS": 4, "UPD": 0, "MOV": 0, "TOT": 7}]}, {"spoonFilePath": "ClientConstants.java", "spoonMethods": [{"spoonMethodName": "com.amazonaws.mobileconnectors.cognitoauth.util.ClientConstants", "DEL": 0, "INS": 1, "UPD": 0, "MOV": 0, "TOT": 1}]}], "nameRev": "6c5f9135e897e21ff17b0de9966d72f9a168a189 tags/release_v2.16.12~354", "commitUser": "minbi", "authoredDateTime": "2019-04-11 13:37:29", "commitGHEventType": "referenced", "commitGitStats": [{"lines": 5, "filePath": "CHANGELOG.md", "insertions": 5, "deletions": 0}, {"lines": 13, "filePath": "aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/AuthClient.java", "insertions": 7, "deletions": 6}, {"lines": 31, "filePath": "aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/util/LocalDataManager.java", "insertions": 31, "deletions": 0}, {"lines": 1, "filePath": "aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/util/ClientConstants.java", "insertions": 1, "deletions": 0}], "commitDateTime": "2019-04-11 14:27:55", "spoonStatsSkippedReason": ""}, {"commitMessage": "", "commitParents": [], "commitHash": "fdef7d3366fb89f0ee32ed9abf951c3c84322891", "commitSpoonAstDiffStats": [], "nameRev": "", "commitUser": "minbi", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "spoonStatsSkippedReason": ""}], "title": "cognitoauth: Erroneous \"user cancelled\" AuthNavigationException Thrown by AuthClient", "spoonStatsSummary": {"spoonMethodsChanged": 0, "DEL": 0.0, "INS": 0.0, "UPD": 0.0, "MOV": 0.0, "TOT": 0.0, "spoonFilesChanged": 0}, "gitStatsSummary": {"lines": 0.0, "insertions": 0.0, "gitFilesChange": 0, "deletions": 0.0}, "closed": "2019-04-25 16:09:42", "statsSkippedReason": "", "body": "### To help us solve your problem better, please answer the following list of questions.\r\n\r\n* What service are you using?\r\n  * Cognito\r\n\r\n* In what version of SDK are you facing the problem?\r\n  * 2.4.7\r\n\r\n* Is the issue limited to Simulators / Actual Devices?\r\n  * Occurs on both\r\n\r\n* Can your problem be resolved if you bump to a higher version of SDK?\r\n  * No; using highest\r\n\r\n* Is this problem related to specific Android/OS version?\r\n  * No\r\n\r\n* Can you give us steps to reproduce with a minimal, complete, and verifiable example? Please include any specific network conditions that might be required to reproduce the problem.\r\n  1. Clone and build the [AmazonCognitoAuthDemo](https://github.com/awslabs/aws-sdk-android-samples/tree/master/AmazonCognitoAuthDemo) project from [aws-sdk-android-samples](https://github.com/awslabs/aws-sdk-android-samples)\r\n  2. Update the values in the project's strings.xml\r\n  3. In com.amazonaws.cognito.android.samples.authdemo.MainActivity, add logic to callback.onFailure() that logs the message and stack trace of the Exception that is passed to the method in logcat\r\n  4. Build, run, and monitor logcat\r\n  5. After signing in, when the custom Chrome tab closes, the error is thrown\r\n\r\n* Please include a stacktrace if applicable.\r\n```\r\ncom.amazonaws.mobileconnectors.cognitoauth.exceptions.AuthNavigationException: user cancelled\r\n   at com.amazonaws.mobileconnectors.cognitoauth.AuthClient$4.onNavigationEvent(AuthClient.java:559)\r\n   at android.support.customtabs.CustomTabsClient$2.onNavigationEvent(CustomTabsClient.java:189)\r\n   at android.support.customtabs.ICustomTabsCallback$Stub.onTransact(ICustomTabsCallback.java:61)\r\n   at android.os.Binder.execTransact(Binder.java:565)\r\n```\r\n\r\n* General description of the issue:\r\n  * As a part of the AuthClient class, the SDK [implements the onNavigationEvent()](https://github.com/aws/aws-sdk-android/blob/master/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/AuthClient.java#L551) to monitor the Chrome custom tab that is used to facilitate authentication. If the event received equals ClientConstants.CHROME_NAVIGATION_CANCELLED ([which is set to 6](https://github.com/aws/aws-sdk-android/blob/master/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/util/ClientConstants.java#L31)), an instance of AuthNavigationException with the message \"user cancelled\" is passed back to the onFailure() method of the callback set for the AuthClient class.\r\n  * However, according to [the documentation on Android's CustomTabsCallback](https://developer.android.com/reference/android/support/customtabs/CustomTabsCallback.html#TAB_HIDDEN), an event with the value of 6 is thrown on the TAB_HIDDEN event.\r\n  * As a result, the \"user cancelled\" exception is not only thrown when a user closes/cancels the Chrome custom tab, but also under many other circumstances when the tab becomes hidden, including when the tab becomes hidden after successful authentication.", "changesInPackagesGIT": [], "changesInPackagesSPOON": [], "ttf": 622.0002777777778, "numCommits": 0, "url": "https://github.com/aws-amplify/aws-sdk-android/issues/328"}, {"labels": ["Bug", "Duplicate", "S3"], "closed": "2019-01-02 20:21:38", "body": "After #310 fixed, the version 2.4.5 resolve the space problem but not the general problem. If I write a special char into key string the upload doesn't work well.\r\nThe problem is not only for space, but for all special chars.\r\nFor example you can use \"\ud83d\ude02\" as key\r\nUsually in the key I write the file name so every characters is admitted. With the 2.3.9 version I can do this\r\n\r\nThanks", "commits": {}, "title": "The specified key does not exist after 2.3.9", "created": "2017-07-19 06:57:25", "user": "maxbax", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/321", "commitsDetails": [], "ttf": 532.0002777777778}, {"labels": ["Bug"], "closed": "2017-07-06 20:30:07", "body": "After version 2.4.1 (I think for this forum question https://forums.aws.amazon.com/thread.jspa?threadID=252898) our upload system doesn't work. It works until 2.3.9 sdk Android library version.\r\nThe problem is that upload function encodes key and we can't download the file in the future. \r\n\r\nIf in the key we use spaces or other encodeble chars (in the key we specify the file name), the library during upload encodes the key and the saves the file with chars encoded.\r\n\r\nFor example if we pass the key \"File Test 123.pdf\" to the upload function we receive the next effects in the bucket:\r\n\r\n- with 2.3.9 version \"File Test 123.pdf\" file saved\r\n- with 2.4.1 or later \"File%20Test%20123.pdf\" file saved\r\n\r\nWhen I try to use url with that key (something like this https://....s3.amazonaws.com/u/0/....../File%20Test%20123.pdf?Signature=....) I can download the first file, but I receive an \"The specified key does not exist\" error with the second. \r\n\r\nI think the key have to remains the same as I passed to the upload function and so I aspected to find in the bucket the file with that alias\r\n\r\nThanks,\r\nMax", "commits": {}, "title": "The specified key does not exist after 2.3.9", "created": "2017-06-09 09:36:53", "user": "maxbax", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/310", "commitsDetails": [], "ttf": 27.00027777777778}, {"labels": ["Bug", "IoT"], "closed": "2019-05-28 17:41:50", "body": "* What service are you using?\r\nAmazon IoT\r\n\r\n* In what version of SDK are you facing the problem?\r\n2.4.2\r\n\r\n* Is the issue limited to Simulators / Actual Devices?\r\nHappens on both simulators and actual devices\r\n\r\n* Can your problem be resolved if you bump to a higher version of SDK?\r\nNo\r\n\r\n* Is this problem related to specific Android/OS version?\r\nNo\r\n\r\n* Can you give us steps to reproduce with a minimal, complete, and verifiable example? Please include any specific network conditions that might be required to reproduce the problem.\r\n\r\n1. Call `AWSIotMqttManager.connect(credentialsProvider, callback)`.\r\n2. Then call `AWSIotMqttManager.disconnect()`.\r\n3. If the error happens then subsequent `connect()` calls fail with the \"Client is currently disconnecting\" error.\r\n\r\nAfter some relatively large period of time (> 1 minute) calling connect seems to start working again.\r\n\r\n```\r\nClient is currently disconnecting (32102)\r\nat org.eclipse.paho.client.mqttv3.MqttAsyncClient.connect(MqttAsyncClient.java:536)\r\nat com.amazonaws.mobileconnectors.iot.AWSIotMqttManager.mqttConnect(AWSIotMqttManager.java:729)\r\nat com.amazonaws.mobileconnectors.iot.AWSIotMqttManager.access$900(AWSIotMqttManager.java:59)\r\nat com.amazonaws.mobileconnectors.iot.AWSIotMqttManager$1.run(AWSIotMqttManager.java:692)\r\nat java.lang.Thread.run(Thread.java:818)\r\n```", "commits": {}, "title": "IoT MQTT Client stuck disconnecting", "created": "2017-04-27 07:16:12", "user": "AngusMorton", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/292", "commitsDetails": [], "ttf": 761.0002777777778}, {"labels": ["Bug"], "closed": "2017-05-18 01:34:05", "body": "Using AWSIotClient.setRegion() breaks the endpoint URL. When trying to set the region to us-west-2 the resulting endpoint becomes https://execute-api.us-west-2.amazonaws.com which doesn't work. Changing the endpoint to https://iot.us-west-2.amazonaws.com works.  Alternatively, changing serviceName to iot before calling setRegion and back to execute-api afterwards works as well.", "commits": {}, "title": "Iot Android Mobile SDK - AWSIotClient.setRegion Broken", "created": "2017-04-21 21:12:50", "user": "ckerkhoff", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/290", "commitsDetails": [], "ttf": 26.00027777777778}, {"labels": ["Bug", "S3"], "closed": "2018-03-08 19:02:10", "body": "### To help us solve your problem better, please answer the following list of questions.\r\n\r\n* What service are you using?\r\nS3 - aws-android-sdk-s3\r\n\r\n* In what version of SDK are you facing the problem?\r\naws-android-sdk-s3 version 2.3.9\r\n\r\n\r\n* Is the issue limited to Simulators / Actual Devices?\r\nActual Devices\r\n\r\n* Can your problem be resolved if you bump to a higher version of SDK?\r\nI am using the latest library\r\n\r\n* Is this problem related to specific Android/OS version?\r\nI am using Android Lollipop 5.1\r\n\r\n\r\n* Can you give us steps to reproduce with a minimal, complete, and verifiable example? Please include any specific network conditions that might be required to reproduce the problem.\r\nI've posted this issue on aws forums but realized that this is probably a better avenue to see if there is a resolution.  https://forums.aws.amazon.com/thread.jspa?threadID=251655&tstart=0\r\n\r\nI upload several files per day in my android app. After a while I get CursorWindow is full errors as seen below. I am using 2.3.9 and supposedly this error is fixed.  I added more logging to my application and see that I am around transferId 200,000 for some users which I assume to be 200,000 transfers? I went through the documentation and TransferService code. I believe that loadTransfersFromDB() in TransferService.java is causing the CursorWindow error. This is because of querying for all transfer types -> dbUtil.queryAllTransfersWithType(TransferType.ANY);\r\n\r\nWhen querying all types, it also picks up Completed transfers. I thought the removeCompletedTransfers() method in TransferService would delete the records but it does not. There is also no documentation I could find that states the completed transfer records are retained in the database.  I assumed completed transfers would be automatically erased :(.  Is there a purge function I can call to purge the entire database of transfer records? or should I call transferUtility.deleteTransferRecord() for each transfer id up until 200,000 that is in an end state (Complete, Failed, Canceled or Unknown)? If possible I think there needs to be documentation somewhere to state to delete transfers after reaching an end state or a fix in place to actually delete the completed transfer records if it makes sense or fix the query to limit the number of records returned or possibly another resolution.\r\n\r\nWhat is the best way to fix this issue for the time being? I do not need to keep track historically of completed transfers.\r\n\r\n\r\nSample Code:\r\n`\r\npublic void doUpload(final File file, String key){\r\n        TransferUtility transferUtility = application.getTransferUtility();\r\n        \r\n        TransferObserver transferObserver = null;\r\n        try {\r\n\r\n            transferObserver = transferUtility.upload(BUCKET, key, file);\r\n            Log.d(TAG, \"transferId:\" + transferObserver.getId() + \", key:\" + transferObserver.getKey() + \", file:\" + file.getName() + \", starting to upload\");\r\n\r\n            FileUploadTransferListener transferListener = new FileUploadTransferListener();\r\n            transferObserver.setTransferListener(transferListener);\r\n\r\n            int waitTime = 0;\r\n            int sleepTime = 10000; //10 seconds\r\n            int timeLimit = 3 * 60 * 1000; //3 min\r\n            while (!FINAL_TRANSFER_STATES.contains(transferListener.getCurrentState()) && waitTime < timeLimit) {\r\n                Log.d(TAG, \"Uploading file - key:\" + transferObserver.getKey() + \", state:\"+ transferListener.getCurrentState() + \", transferId:\" + transferObserver.getId());\r\n                Thread.sleep(sleepTime);\r\n                waitTime = waitTime + sleepTime;\r\n            }\r\n\r\n            if (TransferState.COMPLETED.equals(transferListener.getCurrentState())) {\r\n                Log.i(TAG, \"Upload successfully completed, local file being deleted. transferId:\" + transferObserver.getId() + \", key:\" + transferObserver.getKey());\r\n                file.delete();\r\n            }\r\n\r\n            if (transferListener.getCurrentState() == null) {\r\n                boolean result = transferUtility.cancel(transferObserver.getId());\r\n                Log.w(TAG, \"transferId:\" + transferObserver.getId() + \", TransferListener state is null(\" + transferListener.getCurrentState() +\r\n                        \"), TransferObserver state:\" + transferObserver.getState() + \". Canceled upload for transferId with result:\" + result);\r\n            }\r\n\r\n            if (waitTime >= timeLimit) {\r\n                Log.w(TAG, \"Upload time too long. transferId:\" + transferObserver.getId());\r\n            }\r\n\r\n            Log.d(TAG, \"transferId:\" + transferObserver.getId() + \" upload process complete with status: \" + transferListener.getCurrentState());\r\n        } catch (Exception e) {\r\n            Log.e(TAG, \"Unable to upload and cleanup file. transferObserver - \" + transferObserver, e);\r\n        } finally {\r\n            if (transferObserver != null) {\r\n                transferObserver.cleanTransferListener();\r\n            }\r\n        }\r\n    }\r\n\r\n`\r\n\r\n* Please include a stacktrace if applicable.\r\nLog Output:\r\n03-15 22:10:40.775 6909 21595 W CursorWindow: Window is full: requested allocation 67 bytes, free space 9 bytes, window size 2097152 bytes\r\n03-15 22:10:41.601 6909 21595 W CursorWindow: Window is full: requested allocation 67 bytes, free space 9 bytes, window size 2097152 bytes\r\n03-15 22:10:42.432 6909 21595 W CursorWindow: Window is full: requested allocation 408 bytes, free space 205 bytes, window size 2097152 bytes\r\n03-15 22:10:43.304 6909 21595 W CursorWindow: Window is full: requested allocation 408 bytes, free space 205 bytes, window size 2097152 bytes\r\n03-15 22:10:44.156 6909 21595 W CursorWindow: Window is full: requested allocation 408 bytes, free space 205 bytes, window size 2097152 bytes\r\n03-15 22:10:45.015 6909 21595 W CursorWindow: Window is full: requested allocation 408 bytes, free space 205 bytes, window size 2097152 bytes\r\n03-15 22:10:45.881 6909 21595 W CursorWindow: Window is full: requested allocation 408 bytes, free space 205 bytes, window size 2097152 bytes\r\n03-15 22:10:46.758 6909 21595 W CursorWindow: Window is full: requested allocation 408 bytes, free space 205 bytes, window size 2097152 bytes\r\n03-15 22:10:47.643 6909 21595 W CursorWindow: Window is full: requested allocation 408 bytes, free space 205 bytes, window size 2097152 bytes\r\n03-15 22:10:48.537 6909 21595 W CursorWindow: Window is full: requested allocation 408 bytes, free space 205 bytes, window size 2097152 bytes\r\n03-15 22:10:49.442 6909 21595 W CursorWindow: Window is full: requested allocation 67 bytes, free space 9 bytes, window size 2097152 bytes\r\n03-15 22:10:50.354 6909 21595 W CursorWindow: Window is full: requested allocation 408 bytes, free space 228 bytes, window size 2097152 bytes\r\n03-15 22:10:51.275 6909 21595 W CursorWindow: Window is full: requested allocation 408 bytes, free space 205 bytes, window size 2097152 bytes\r\n03-15 22:10:52.206 6909 21595 W CursorWindow: Window is full: requested allocation 408 bytes, free space 205 bytes, window size 2097152 bytes\r\n03-15 22:10:53.143 6909 21595 W CursorWindow: Window is full: requested allocation 408 bytes, free space 205 bytes, window size 2097152 bytes\r\n03-15 22:10:54.087 6909 21595 W CursorWindow: Window is full: requested allocation 408 bytes, free space 205 bytes, window size 2097152 bytes\r\n03-15 22:10:55.041 6909 21595 W CursorWindow: Window is full: requested allocation 408 bytes, free space 205 bytes, window size 2097152 bytes\r\n03-15 22:10:56.005 6909 21595 W CursorWindow: Window is full: requested allocation 408 bytes, free space 205 bytes, window size 2097152 bytes\r\n03-15 22:10:56.980 6909 21595 W CursorWindow: Window is full: requested allocation 408 bytes, free space 205 bytes, window size 2097152 bytes\r\n03-15 22:10:57.961 6909 21595 W CursorWindow: Window is full: requested allocation 408 bytes, free space 205 bytes, window size 2097152 bytes\r\n03-15 22:10:58.950 6909 21595 W CursorWindow: Window is full: requested allocation 408 bytes, free space 205 bytes, window size 2097152 bytes\r\n03-15 22:10:59.944 6909 21595 W CursorWindow: Window is full: requested allocation 408 bytes, free space 205 bytes, window size 2097152 bytes\r\n03-15 22:11:00.959 6909 21595 W CursorWindow: Window is full: requested allocation 408 bytes, free space 205 bytes, window size 2097152 bytes\r\n03-15 22:11:01.975 6909 21595 W CursorWindow: Window is full: requested allocation 408 bytes, free space 80 bytes, window size 2097152 bytes\r\n03-15 22:11:02.981 6909 21595 D TransferService: 0 transfers are loaded from database\r\n03-15 22:11:02.982 6909 21595 D TransferService: Stop self\r\n\r\n\r\nIf you need help with understanding how to implement something in particular then we suggest that you first look into our [developer guide](https://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/). You can also simplify your process of creating an application by using [Mobile Hub](https://console.aws.amazon.com/mobilehub/home#/). ", "commits": {}, "title": "S3 Android Mobile SDK - Cursor Window Full", "created": "2017-03-20 21:06:55", "user": "idhira", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/267", "commitsDetails": [], "ttf": 352.0002777777778}, {"labels": ["Bug"], "closed": "2017-03-22 06:06:02", "body": "* What service are you using?\r\n\r\nAPI Gateway(Generated API Client)\r\n\r\n* In what version of SDK are you facing the problem?\r\n\r\n2.3.8\r\n\r\n* Is the issue limited to Simulators / Actual Devices?\r\n\r\nNot limited.\r\n\r\n* Can your problem be resolved if you bump to a higher version of SDK?\r\n\r\nNo.\r\n\r\n* Is this problem related to specific Android/OS version?\r\n\r\nAFAIK, 4.4 and 7.0.\r\n\r\n\r\nHere is the cause of the problem.\r\nhttps://github.com/aws/aws-sdk-android/blob/1cdab8ab8da4675ebdd6f9d616a4c8f69236cc56/aws-android-sdk-apigateway-core/src/main/java/com/amazonaws/mobileconnectors/apigateway/ApiClientHandler.java#L208\r\n\r\nThis code throws NPE when `arg` is `null`.\r\n\r\nI think the query parameter should not provide to the get parameter when it is null.", "commits": {}, "title": "API Gateway: throws NPE when query parameter is null", "created": "2017-02-23 08:22:50", "user": "kubode", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/258", "commitsDetails": [], "ttf": 26.00027777777778}, {"labels": ["Bug", "S3", "closing-soon-if-no-response"], "closed": "2018-04-18 08:23:15", "body": "* What service are you using?\r\nservice: transferUtility upload service\r\n\r\n\r\n* In what version of SDK are you facing the problem?\r\nSDK version: com.amazonaws:aws-android-sdk-s3:2.3.9\r\n\r\n* Is the issue limited to Simulators / Actual Devices?\r\nsimulated or actual device: Actual device, LG Gpad 8.0\r\n\r\n* Can your problem be resolved if you bump to a higher version of SDK?\r\nalready latest\r\n\r\n* Is this problem related to specific Android/OS version?\r\nno\r\n\r\n* Can you give us steps to reproduce with a minimal, complete, and verifiable example? Please include any specific network conditions that might be required to reproduce the problem.\r\n\r\nDue to network issues sometimes the upload fails and it gets into a failed state. If I resume the upload and re-attach the same listener to the upload observer the bytesCurrent can exceed bytesTotal when the progress changes. \r\n\r\n ", "commits": {}, "title": "S3 transferUtility observer progress tracking issue", "created": "2017-02-22 19:20:08", "user": "haogodent2", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/257", "commitsDetails": [], "ttf": 419.0002777777778}, {"labels": ["APIGateway", "Bug", "Needs Info from Requester", "closing-soon-if-no-response"], "closed": "2019-01-25 05:41:22", "body": "### To help us solve your problem better, please answer the following list of questions.\r\n\r\n* What service are you using?\r\nAWS API Gateway \r\n* In what version of SDK are you facing the problem?\r\nv2.3.9\r\n* Is the issue limited to Simulators / Actual Devices?\r\nTested on an actual android device only\r\n* Can your problem be resolved if you bump to a higher version of SDK?\r\nNo\r\n\r\n* Is this problem related to specific Android/OS version?\r\nAndroid\r\n\r\n* Can you give us steps to reproduce with a minimal, complete, and verifiable example? Please include any specific network conditions that might be required to reproduce the problem.\r\n\r\n* Please include a stacktrace if applicable.\r\n```\r\ngetProfilePost: something went wrong see cloudwatch logscom.amazonaws.mobileconnectors.apigateway.ApiClientException: {\"message\":\"Signature expired: 20170212T175938Z is now earlier than 20170215T145534Z (20170215T150034Z - 5 min.)\"}\r\n                                                                         (Service: TimeFirstClient; Status Code: 403; Error Code: null; Request ID: 8073bbc5-f38f-11e6-a616-b9eddabf1a00)\r\n\r\n```\r\nIf you need help with understanding how to implement something in particular then we suggest that you first look into our [developer guide](https://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/). You can also simplify your process of creating an application by using [Mobile Hub](https://console.aws.amazon.com/mobilehub/home#/). \r\n\r\n**My Problem**\r\nMy API Client Gateway calls keeps on failing when my device time is more or less than 5 min of the AWS Server time. I don't have any problems when calling other AWS Services except for the generated API Gateway Client SDK. Do I need to handle this on my own? If so can you point me to the right direction.\r\n\r\nI was thinking of parsing the error message to get the server time and the device time then i'll get the time offset then set that as the SDK's global time offset. Is this the right solution or is there a better way to handle the clock skew error when using the generated API Gateway Client SDK?", "commits": {}, "title": "Handling ApiClientException:Signature Expired for generated AWS API Gateway Client", "created": "2017-02-15 15:22:10", "user": "escdev-je", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/253", "commitsDetails": [], "ttf": 708.0002777777778}, {"labels": ["Bug", "Kinesis", "Needs Info from Requester", "closing-soon-if-no-response"], "closed": "2018-11-14 22:19:44", "body": "I am investigating a crash caused by `NullPointerException` coming from `KinesisRecorder.submitAllRecords()`. SDK version is 2.3.3, we are using core and Kinesis libraries, devices: from 4.x to 6.x (maybe 7.x too).\r\n\r\nHere's the stack trace:\r\n```\r\njava.lang.NullPointerException: file == null\r\nat java.io.FileOutputStream.<init>(FileOutputStream.java:85)\r\nat com.amazonaws.mobileconnectors.kinesis.kinesisrecorder.FileManager.newOutputStream(FileManager.java:115)\r\nat com.amazonaws.mobileconnectors.kinesis.kinesisrecorder.FileRecordStore.tryInitializeWriter(FileRecordStore.java:119)\r\nat com.amazonaws.mobileconnectors.kinesis.kinesisrecorder.FileRecordStore.put(FileRecordStore.java:78)\r\nat com.amazonaws.mobileconnectors.kinesis.kinesisrecorder.AbstractKinesisRecorder.saveRecord(AbstractKinesisRecorder.java:97)\r\nat com.amazonaws.mobileconnectors.kinesis.kinesisrecorder.KinesisRecorder.saveRecord(KinesisRecorder.java:236)\r\nat com.amazonaws.mobileconnectors.kinesis.kinesisrecorder.AbstractKinesisRecorder.submitAllRecords(AbstractKinesisRecorder.java:153)\r\n```\r\nIt's inconsistent, but some projects also have a call to `KinesisRecorder.submitAllRecords()` in a different thread.\r\n```\r\nlibcore.io.Posix.getaddrinfo(Native Method)\r\nlibcore.io.ForwardingOs.getaddrinfo(ForwardingOs.java:61)\r\njava.net.InetAddress.lookupHostByName(InetAddress.java:412)\r\njava.net.InetAddress.getAllByNameImpl(InetAddress.java:236)\r\njava.net.InetAddress.getAllByName(InetAddress.java:214)\r\ncom.android.okhttp.internal.Dns$1.getAllByName(Dns.java:28)\r\ncom.android.okhttp.internal.http.RouteSelector.resetNextInetSocketAddress(RouteSelector.java:216)\r\ncom.android.okhttp.internal.http.RouteSelector.next(RouteSelector.java:122)\r\ncom.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:292)\r\ncom.android.okhttp.internal.http.HttpEngine.sendSocketRequest(HttpEngine.java:255)\r\ncom.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:206)\r\ncom.android.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:345)\r\ncom.android.okhttp.internal.http.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:89)\r\ncom.android.okhttp.internal.http.HttpURLConnectionImpl.getOutputStream(HttpURLConnectionImpl.java:197)\r\ncom.android.okhttp.internal.http.HttpsURLConnectionImpl.getOutputStream(HttpsURLConnectionImpl.java:254)\r\ncom.amazonaws.http.UrlHttpClient.writeContentToConnection(UrlHttpClient.java:128)\r\ncom.amazonaws.http.UrlHttpClient.execute(UrlHttpClient.java:65)\r\ncom.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:356)\r\ncom.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:199)\r\ncom.amazonaws.services.kinesis.AmazonKinesisClient.invoke(AmazonKinesisClient.java:2775)\r\ncom.amazonaws.services.kinesis.AmazonKinesisClient.putRecords(AmazonKinesisClient.java:1451)\r\ncom.amazonaws.mobileconnectors.kinesis.kinesisrecorder.KinesisStreamRecordSender.sendBatch(KinesisStreamRecordSender.java:71)\r\ncom.amazonaws.mobileconnectors.kinesis.kinesisrecorder.AbstractKinesisRecorder.submitAllRecords(AbstractKinesisRecorder.java:138)\r\n...\r\n```\r\nI was unable to reproduce this issue, so I don't know if updating to 2.3.8 would fix the problem. However, I've been able to crash application with the following code in SDK 2.3.3 and 2.3.8:\r\n```\r\n// Initialization\r\nkinesis = new KinesisRecorder(context.getDir(\"somedir\", 0), region, cognito);\r\n\r\n// Later\r\nfor (int i = 0; i < 10; i++) {\r\n    new Thread(String.format(\"writer-%d\", i)) {\r\n        @Override\r\n        public void run() {\r\n            for (; ; ) {\r\n                byte[] bytes = new byte[1024];\r\n                kinesis.saveRecord(bytes, STREAM_NAME);\r\n\r\n                try {\r\n                    mKinesis.submitAllRecords();\r\n                } catch (AmazonClientException e) {\r\n                    // Whatever\r\n                }\r\n                try {\r\n                    Thread.sleep(100L);\r\n                } catch (InterruptedException e) {\r\n                    throw propagate(e);\r\n                }\r\n                kinesis.submitAllRecords();\r\n            }\r\n        }\r\n    }.start();\r\n}\r\n```\r\nThis is under assumption that `KinesisRecorder` does not properly synchronize calls. I don't know if it is the same problem. This code crashes when device is offline. Stack trace is missing though...\r\n", "commits": {}, "title": "NullPointerException in KinesisRecorder.submitAllRecords()", "created": "2017-01-31 20:50:06", "user": "hayohayo", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/249", "commitsDetails": [], "ttf": 652.0002777777778}, {"labels": ["Bug"], "closed": "2017-02-03 18:11:21", "body": "https://github.com/aws/aws-sdk-android/blob/5637df98513e458dd09cecdf7e5b28c603e2842c/aws-android-sdk-lex/src/main/java/com/amazonaws/mobileconnectors/lex/interactionkit/InteractionClient.java#L598\r\n\r\nis missing toString() so this expression never evaluates to true. the other conditions have toString.", "commits": {}, "title": "Android InteractionClient missing a toString ", "created": "2017-01-17 15:09:12", "user": "snbaker", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/245", "commitsDetails": [], "ttf": 17.00027777777778}, {"labels": ["Bug", "Needs Info from Requester", "S3", "closing-soon-if-no-response"], "closed": "2018-10-26 16:39:15", "body": "This is the same issue as #162 which was closed.\r\n\r\nWe faced the same issue. Looking at the TransferUtility code this could happen when the device is low on storage, or for some other reason SQLiteDatabase.insert() fails.\r\n\r\nTransferUtility.[download()](https://github.com/aws/aws-sdk-android/blob/master/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferUtility.java#L130) or upload() try to insert a transfer record via:\r\n```\r\ndbUtil.insertSingleTransferRecord()\r\n```\r\nwhich eventually write to the underlying SQLiteDB via SQLiteDatabase.insert(). This call can return -1 as the row ID on failure, which is saved in the URI path leading to a URI of form (see [link](https://github.com/aws/aws-sdk-android/blob/master/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferDBBase.java#L111)):\r\n\r\ncontent://com.example/transfers/-1", "commits": {}, "title": "Fatal Exception: java.lang.IllegalArgumentException: Unknown URI: content://com.example/transfers/-1", "created": "2017-01-06 16:55:03", "user": "kwatra", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/239", "commitsDetails": [], "ttf": 657.0002777777778}, {"labels": ["Bug"], "closed": "2017-10-18 23:20:47", "body": "Hello, I experienced crash implementing forgot password feature.\nLooks like that on the second step, where I have to enter confirmation code with a new password\nForgotPasswordContinuation lead to CognitoUser.confirmPasswordInBackground that at the moment\ncatches only AmazonServiceException.\n\nIn my case I got AmazonClientException (so it crashes inside SDK). The way I got this: switch-off internet before second step and continue.\ncallstack:\n\n```\nFatal Exception: com.amazonaws.AmazonClientException\nUnable to execute HTTP request: Unable to resolve host \"cognito-idp.us-east-1.amazonaws.com\": No address associated with hostname\n\ncom.amazonaws.http.AmazonHttpClient.executeHelper (AmazonHttpClient.java:424)\ncom.amazonaws.http.AmazonHttpClient.execute (AmazonHttpClient.java:199)\ncom.amazonaws.services.cognitoidentityprovider.AmazonCognitoIdentityProviderClient.invoke (AmazonCognitoIdentityProviderClient.java:1918)\ncom.amazonaws.services.cognitoidentityprovider.AmazonCognitoIdentityProviderClient.confirmForgotPassword (AmazonCognitoIdentityProviderClient.java:637)\ncom.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.confirmPasswordInternal (CognitoUser.java:524)\ncom.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.access$000 (CognitoUser.java:103)\ncom.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser$4.run (CognitoUser.java:465)\njava.lang.Thread.run (Thread.java:841)\nCaused by java.net.UnknownHostException\njava.net.InetAddress.lookupHostByName (InetAddress.java:394)\nlibcore.net.http.HttpsURLConnectionImpl.getOutputStream (HttpsURLConnectionImpl.java:281)\ncom.amazonaws.http.UrlHttpClient.writeContentToConnection (UrlHttpClient.java:128)\ncom.amazonaws.http.UrlHttpClient.execute (UrlHttpClient.java:65)\ncom.amazonaws.http.AmazonHttpClient.executeHelper (AmazonHttpClient.java:356)\ncom.amazonaws.http.AmazonHttpClient.execute (AmazonHttpClient.java:199)\ncom.amazonaws.services.cognitoidentityprovider.AmazonCognitoIdentityProviderClient.invoke (AmazonCognitoIdentityProviderClient.java:1918)\ncom.amazonaws.services.cognitoidentityprovider.AmazonCognitoIdentityProviderClient.confirmForgotPassword (AmazonCognitoIdentityProviderClient.java:637)\ncom.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.confirmPasswordInternal (CognitoUser.java:524)\ncom.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser.access$000 (CognitoUser.java:103)\ncom.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser$4.run (CognitoUser.java:465)\njava.lang.Thread.run (Thread.java:841)\n```\n", "commits": {}, "title": "AmazonClientException on CognitoIdentityProvider/CognitoUser.confirmPasswordInBackground", "created": "2016-08-31 07:31:57", "user": "Knight704", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/191", "commitsDetails": [], "ttf": 413.0002777777778}, {"labels": ["Bug"], "closed": "2016-09-09 02:38:39", "body": "[Re-Open an issue like https://github.com/aws/aws-sdk-android/issues/129.]\n\nThe documentation says that AWS SDK supports Android API 10+, but two classes (https://github.com/aws/aws-sdk-android/search?utf8=\u2713&q=StandardCharsets) uses **StandardCharset** that is only available from 19 (http://developer.android.com/reference/java/nio/charset/StandardCharsets.html)\n\nThe solution is replace _StandardCharsets.UTF_8_ with _Charset.forName(\"UTF-8\")_.\n\nThank you\n", "commits": {}, "title": "NoClassDefFoundError on StandardCharsets for API 18 and below", "created": "2016-08-25 07:43:47", "user": "adelpuva", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/190", "commitsDetails": [], "ttf": 14.000277777777777}, {"labels": ["Bug"], "closed": "2016-10-07 05:20:33", "body": "It would be great to know what changed. Thank you!\n", "commits": {}, "title": "Update changelog to version 2.3", "created": "2016-08-07 00:07:10", "user": "yairkukielka", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/185", "commitsDetails": [], "ttf": 61.000277777777775}, {"labels": ["Bug", "Kinesis"], "closed": "2017-10-05 21:37:51", "body": "I found this loop after my Kinesis cache file was corrupted after my application stopped unexpectedly (crash or shut down). The next time I called KinesisFirehoseRecorder.submitAllRecords(), it get stuck in this infinite loop where it calls iterator.peek(), tries to parse the data, catches an exception, calls continue, calls iterator.peek(), etc. \n\n```\nwhile (iterator.hasNext() && count < maxCount && size < maxSize) {\n        String line = iterator.peek();\n        if (line == null || line.isEmpty()) {\n            continue;\n        }\n        // parse a line. Skip in case of corrupted data\n        try {\n            frp.parse(line);\n        } catch (Exception e) {\n            Log.w(TAG, \"Failed to read line. Skip.\", e);\n            continue;\n        }...\n```\n", "commits": {}, "title": "Infinite Loop in AbstractKinesisRecorder.nextBatch(..)", "created": "2016-07-28 21:46:59", "user": "markrebhan", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/182", "commitsDetails": [], "ttf": 433.0002777777778}, {"labels": ["Bug"], "closed": "2016-07-27 23:32:57", "body": "Version 2.2.21 has changed all these constructors that my app uses.\nI suspect this shouldn't be done on a patch version? at least a minor release?\nAWS Documentation recommends the usage of `2.+` in the `build.gradle` file but due to this change I had to force my `build.gradle` to `2.2.21` to avoid breaking my builds.\n\nAll the methods bellow now give this error:\n\n```\nError:(59, 34) error: constructor Content in class Content cannot be applied to given types;\nrequired: no arguments\nfound: String\nreason: actual and formal argument lists differ in length\n```\n\nMy code: All lines are invalid with `2.2.21`\n\n```\nContent subjectContent = new Content(title);\nBody messageBody = new Body(new Content(body));\nMessage feedbackMessage = new Message(subjectContent, messageBody);\nDestination destination = new Destination().withToAddresses(emailTo);\nSendEmailRequest request = new SendEmailRequest(emailFrom, destination, feedbackMessage);\n```\n", "commits": {}, "title": "\"error: constructor Content in class Content\" for release 2.2.21", "created": "2016-07-22 20:47:21", "user": "jamescoggan", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/179", "commitsDetails": [], "ttf": 5.000277777777778}, {"labels": ["Bug"], "closed": "2016-05-11 05:58:21", "body": "Hi!\nThe documentation says that AWS SDK supports Android API 10+, but two classes (https://github.com/aws/aws-sdk-android/search?utf8=\u2713&q=StandardCharsets)  uses **StandardCharset** that is only available from 19 (http://developer.android.com/reference/java/nio/charset/StandardCharsets.html)\n", "commits": {}, "title": "NoClassDefFoundError on StandardCharsets for API 18 and below", "created": "2016-05-10 09:02:17", "user": "adelpuva", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/129", "commitsDetails": [], "ttf": 0.0002777777777777778}, {"labels": ["Bug", "Usage Question"], "closed": "2016-05-13 14:53:56", "body": "Every once in a while when I upload a file to S3 via TransferUtility, the TransferObserver's onStateChanged is not called at all, even though onProgressChanged indicates that the upload has been completed. This is usually accompanied by an error log indicating a time out, which looking at the code suggests should just trigger a retry.\n\nExample of last few logs:\n- onProgressChanged() gets called with params: id: 7, bytesCurrent: 15220736, bytesTotal: 15244198\n- This is followed after a few seconds with the following log:\n\n```\nI/AmazonHttpClient: Unable to execute HTTP request: Read timed out\n  java.net.SocketTimeoutException: Read timed out\n  at com.android.org.conscrypt.NativeCrypto.SSL_read(Native Method)\n  at com.android.org.conscrypt.OpenSSLSocketImpl$SSLInputStream.read(OpenSSLSocketImpl.java:705)\n  at com.android.okhttp.okio.Okio$2.read(Okio.java:135)\n  at com.android.okhttp.okio.AsyncTimeout$2.read(AsyncTimeout.java:211)\n  at com.android.okhttp.okio.RealBufferedSource.indexOf(RealBufferedSource.java:306)\n  at com.android.okhttp.okio.RealBufferedSource.indexOf(RealBufferedSource.java:300)\n  at com.android.okhttp.okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:196)\n  at com.android.okhttp.internal.http.HttpConnection.readResponse(HttpConnection.java:191)\n  at com.android.okhttp.internal.http.HttpTransport.readResponseHeaders(HttpTransport.java:80)\n  at com.android.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:904)\n  at com.android.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:788)\n  at com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:443)\n  at com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:388)\n  at com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponseMessage(HttpURLConnectionImpl.java:497)\n  at com.android.okhttp.internal.huc.DelegatingHttpsURLConnection.getResponseMessage(DelegatingHttpsURLConnection.java:109)\n  at com.android.okhttp.internal.huc.HttpsURLConnectionImpl.getResponseMessage(HttpsURLConnectionImpl.java)\n  at com.amazonaws.http.UrlHttpClient.createHttpResponse(UrlHttpClient.java:72)\n  at com.amazonaws.http.UrlHttpClient.execute(UrlHttpClient.java:66)\n  at com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:360)\n  at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:199)\n  at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:4221)\n  at com.amazonaws.services.s3.AmazonS3Client.uploadPart(AmazonS3Client.java:3312)\n  at com.amazonaws.mobileconnectors.s3.transferutility.UploadPartTask.call(UploadPartTask.java:48)\n  at com.amazonaws.mobileconnectors.s3.transferutility.UploadPartTask.call(UploadPartTask.java:28)\n  at java.util.concurrent.FutureTask.run(FutureTask.java:237)\n  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\n  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\nat java.lang.Thread.run(Thread.java:818)\n```\n- This is almost instantaneously (few ms) followed by\n  onProgressChanged call with params: id: 7, bytesCurrent: 15244198, bytesTotal: 15244198\n- After that there is complete silence and onStateChanged is never called.\n\nFew notes:\n- This usually happens the first time I do an upload after a fresh start of TransferService. This suggests something similar to issue #94.\n- I am on sdk version 2.2.14 on Nexus 5X running 6.0.1.\n", "commits": {}, "title": "S3 TransferUtility onStateChanged not called although onProgressChanged indicates completed upload", "created": "2016-04-18 17:15:19", "user": "kwatra", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/120", "commitsDetails": [], "ttf": 24.00027777777778}, {"labels": ["Bug"], "closed": "2016-04-19 22:52:00", "body": "```\nFatal Exception: java.lang.NullPointerException\n       at com.amazonaws.mobileconnectors.s3.transferutility.TransferService.execCommand(TransferService.java:287)\n       at com.amazonaws.mobileconnectors.s3.transferutility.TransferService$UpdateHandler.handleMessage(TransferService.java:224)\n       at android.os.Handler.dispatchMessage(Handler.java:110)\n       at android.os.Looper.loop(Looper.java:193)\n       at android.os.HandlerThread.run(HandlerThread.java:61)\n```\n\nSee all details here:\nhttp://crashes.to/s/84e42fce62c\n", "commits": {}, "title": "NPE in TransferService after update to 2.2.14", "created": "2016-04-07 18:54:12", "user": "niqo01", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/118", "commitsDetails": [], "ttf": 12.000277777777777}, {"labels": ["Bug", "Usage Question"], "closed": "2016-04-19 22:51:50", "body": "Hi, I am not entirely sure if this problem is in the SDK or my code? I upgraded to 2.2.14. \nCould you help make a judgement?\n\nI do want to point out though this problem doesn't occur under stable WiFi network (I have already tested it under WiFi for more than 24 hrs taking tens of thousands photos without glitch). \n\nIt happens frequently under 4G network (the single is weak, on and off from time to time). The crash hit me at least four times over the past 24hrs. \n\nThank you!\n\n> java.lang.NullPointerException: Attempt to invoke virtual method 'boolean com.amazonaws.mobileconnectors.s3.transferutility.TransferService$NetworkInfoReceiver.isNetworkConnected()' on a null object reference\n>   at com.amazonaws.mobileconnectors.s3.transferutility.TransferService.execCommand(TransferService.java:287)\n>   at com.amazonaws.mobileconnectors.s3.transferutility.TransferService$UpdateHandler.handleMessage(TransferService.java:224)\n>   at android.os.Handler.dispatchMessage(Handler.java:102)\n>   at android.os.Looper.loop(Looper.java:135)\n>   at android.os.HandlerThread.run(HandlerThread.java:61)\n", "commits": {}, "title": "NetworkInfoReceiver.isNetworkConnected() on a null object reference", "created": "2016-04-03 13:03:41", "user": "ripplearc", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/117", "commitsDetails": [], "ttf": 16.00027777777778}, {"labels": ["Bug"], "closed": "2016-03-31 20:05:23", "body": "To whom it may concern,\n\nI use the SDK version 2.2.13\n\nAfter a long period of non-stop running (more than 48 hrs and the S3TransferUtility uploads 1 photo per minute on average), the exception came out of nowhere. Apparently I failed to catch this exception which caused the crash of the app (this following exception was shown by setting DefaultUncaughtExceptionHandler )\n\nWhat is this exception? How to fix it? Or at least where to catch this exception so that the app would not crash?\n\nThank you!\n\n`java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@3a5f74be rejected from java.util.concurrent.ThreadPoolExecutor@392ac91f[Shutting down, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 106]\n    at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2011)\n    at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793)\n    at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339)\n    at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:103)\n    at com.amazonaws.mobileconnectors.s3.transferutility.TransferThreadPool.submitTask(TransferThreadPool.java:46)\n    at com.amazonaws.mobileconnectors.s3.transferutility.TransferRecord.start(TransferRecord.java:160)\n    at com.amazonaws.mobileconnectors.s3.transferutility.TransferService.execCommand(TransferService.java:284)\n    at com.amazonaws.mobileconnectors.s3.transferutility.TransferService$UpdateHandler.handleMessage(TransferService.java:220)\n    at android.os.Handler.dispatchMessage(Handler.java:102)\n    at android.os.Looper.loop(Looper.java:155)\n    at android.os.HandlerThread.run(HandlerThread.java:61)`\n", "commits": {}, "title": "java.util.concurrent.RejectedExecutionException", "created": "2016-03-16 11:46:17", "user": "ripplearc", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/113", "commitsDetails": [], "ttf": 15.000277777777777}, {"labels": ["Bug"], "closed": "2016-12-14 21:05:26", "body": "EventStoreException while getSessionClient().pauseSession() leading to app crash.\nSDK: 'com.amazonaws:aws-android-sdk-mobileanalytics:2.2.12'\n\njava.lang.RuntimeException: Unable to pause activity {XXXActivity}: com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.delivery.EventStoreException: Unable to open session file writer\n    at android.app.ActivityThread.performPauseActivity(ActivityThread.java:2906)\n    at android.app.ActivityThread.performPauseActivity(ActivityThread.java:2862)\n    at android.app.ActivityThread.handlePauseActivity(ActivityThread.java:2840)\n    at android.app.ActivityThread.access$900(ActivityThread.java:143)\n    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1258)\n    at android.os.Handler.dispatchMessage(Handler.java:99)\n    at android.os.Looper.loop(Looper.java:137)\n    at android.app.ActivityThread.main(ActivityThread.java:4960)\n    at java.lang.reflect.Method.invokeNative(Native Method)\n    at java.lang.reflect.Method.invoke(Method.java:511)\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1038)\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:805)\n    at dalvik.system.NativeStart.main(Native Method)\nCaused by: com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.delivery.EventStoreException: Unable to open session file writer\n    at com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.session.FileSessionStore.tryInitializeWriter(FileSessionStore.java:100)\n    at com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.session.FileSessionStore.storeSession(FileSessionStore.java:70)\n    at com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.session.client.SessionClientState.executePause(SessionClientState.java:107)\n    at com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.session.client.ActiveSessionState.pause(ActiveSessionState.java:48)\n    at com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.session.client.DefaultSessionClient.pauseSession(DefaultSessionClient.java:92)\n\nCaused by: java.io.FileNotFoundException: /XXX/app_119f9c4fe2a347158f8eb5694564f123515d6767-01b7-49e5-8273-c8d11b0f331d/sessions/sessionFile: open failed: ENOENT (No such file or directory)\n    at libcore.io.IoBridge.open(IoBridge.java:416)\n    at java.io.FileOutputStream.<init>(FileOutputStream.java:88)\n    at com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.core.system.DefaultFileManager.newOutputStream(DefaultFileManager.java:123)\n    at com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.session.FileSessionStore.tryInitializeWriter(FileSessionStore.java:96)\n    ... 21 more\nCaused by: libcore.io.ErrnoException: open failed: ENOENT (No such file or directory)\n    at libcore.io.Posix.open(Native Method)\n    at libcore.io.BlockGuardOs.open(BlockGuardOs.java:110)\n    at libcore.io.IoBridge.open(IoBridge.java:400)\n", "commits": {}, "title": "AWS-Mobile Analytics", "created": "2016-03-07 11:26:25", "user": "bdipak", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/110", "commitsDetails": [], "ttf": 282.0002777777778}, {"labels": ["Bug"], "closed": "2016-03-01 04:48:59", "body": "Sometimes my application crashes with this exception:\n\nFATAL EXCEPTION: main\n                                                                          java.util.ConcurrentModificationException\n                                                                              at java.util.LinkedList$LinkIterator.next(LinkedList.java:124)\n                                                                              at com.amazonaws.mobileconnectors.s3.transferutility.TransferStatusUpdater$3.run(TransferStatusUpdater.java:248)\n                                                                              at android.os.Handler.handleCallback(Handler.java:730)\n                                                                              at android.os.Handler.dispatchMessage(Handler.java:92)\n                                                                              at android.os.Looper.loop(Looper.java:137)\n                                                                              at android.app.ActivityThread.main(ActivityThread.java:5136)\n                                                                              at java.lang.reflect.Method.invokeNative(Native Method)\n                                                                              at java.lang.reflect.Method.invoke(Method.java:525)\n                                                                              at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:760)\n                                                                              at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:576)\n                                                                              at dalvik.system.NativeStart.main(Native Method)\n\nProbably this is due to the fact that in the onError I call both \n        observer.cleanTransferListener();\n        transferUtility.deleteTransferRecord(observer.getId());\n", "commits": {}, "title": "ConcurrentModificationException", "created": "2016-02-23 09:31:28", "user": "erikvdvelden", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/103", "commitsDetails": [], "ttf": 6.000277777777778}, {"labels": ["Bug"], "closed": "2016-03-01 04:49:29", "body": "I am facing canonicalization problem while using aws-android-sdk-lambda from Android phone.While function call it somehow uses phone's language, btw it is Turkish, so I get SigningKeyDoesntMatchException. If I change phone language to English, it reaches aws correctly. As you can see \"x-amz-\u00e4\u00b1nvocation-type\" string is corrupted, it should be like \"x-amz-invocation-type\".\nAs a solution I tried to change phone language to English programmatically before function call, but I need a permanent solution.\nThank you for your time.\n\n`AWS Lambda Function Error: The request signature we calculated does not match the signature you provided. Check your AWS Secret Access Key and signing method. Consult the service documentation for details.\n    The Canonical String for this request should have been\n    'POST\n    /2015-03-31/functions/hello-world/invocations\n    host:lambda.us-east-1.amazonaws.com\n    x-amz-date:20160212T202327Z\n    x-amz-security-token:AQoDYXdzEDUasAUPOOgG8GoFx4+VFVfVJyO11PET8Qw3PST5zbuVwe7+zksE985yw/TuEU8ICVw40qKF0J5ASKoih5vcYBxxksfACX5Um7kLWgHaqVh40rsYCaq4hXObJ9wZqrKx0W9FxfhcSH1mKpIRmZ9o46e6RC7Y2APpz3vT1ZRjxyBe3yHKyNMBSQja5lzBWtTo785FKig41jbBrmXJtAiCNqan1x5aKwqJ/mi3MwO/SWb6lnjgtMcdNXm0O3PF8QKGn3k2okVdf1uh/Yd3RYKSH75KV8uHyRMjV5LS/E1jetae96/j+KEtCkbG86TXaAeh9NCWoGsAD4kspjW+9F5PL+jLsunkMZ25REQdiuw06WCaWbo+T1BV2RFu1el8xB4E1BL4aXqpJNQRmkk/3TWvU5Vbmn+Z86jQ6xY/O+0T3tNzr6gXNcCQcmSL7VgO7haoHptZRuBPsB1RFfggQkc+h0oImAS+dbl6DS82bhHudLIim0A7stN1LyuQDVho1OXSyrp1STCqqKFr04Cx998HUPuQem0JSZu7rAw4Pf6uD0fOE8YALtCPgjGpBCg6hfFwVLdIsVMbrJh941vKCsXO3FmkFK8P6bbhkKSqlJ0nx+q7eC6R8ufVGQwkt2RLkKc6rIgnyfFUbXPsFsPAvsJKvmQpqCBJslVTNdr6G6PeR7WVc5gJq5T4BYz8NxIGHOvA0IJrDGCFo+GZWUrBCdPTVlO5ceB/4szRw2NYPJaer9szUkCRYW/R/R0QR9wr2hxSSfeH9PZKkO1ZXTpvSFC3lsoVnEzbHuTJU9MP5q4U274pCdvTr0xX9QAN9PrhdIFsjyhATAHIocDtSvhc5U6I+H3Efnvc4WulI8JcAd3FbceJD7VdYE7BGzKWAYAw8aBI4rli0RKh5sZXUhFn0QQLrzqZ6RrOINDu+LUF\n    x-amz-target:AWSLambda.Invoke\n    x-amz-\u00e4\u00b1nvocation-type:\n    host;x-amz-date;x-amz-security-token;x-amz-target;x-amz-\u00e4\u00b1nvocation-type\n    be9ba4e61f0079a705bfbf17c9e09abe670f22e18d56f8e83f1d7487101fe072'\n    The String-to-Sign should have been\n    'AWS4-HMAC-SHA256\n    20160212T202327Z\n    20160212/us-east-1/lambda/aws4_request\n    f5f0f3589e8c8e2acc91246da3c979fdb5e8e823983c5ffe86dccbab9e228c11'\n    (Service: AWSLambda; Status Code: 403; Error Code: InvalidSignatureException; Request ID: 7a7d9b57-d1c6-11e5-9e3b-a59637a66ac7)\n`\n", "commits": {}, "title": "AWS Lambda canonicalization error for Turkish language", "created": "2016-02-12 21:43:27", "user": "nactusem", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/96", "commitsDetails": [], "ttf": 17.00027777777778}, {"labels": ["Bug"], "closed": "2016-02-01 08:55:36", "body": "Hi,\n\nFirst my problem/case.\n\nI have my own custom service which uses your SDK (basically TransferUtility). All works fine when I have internet connection. The whole fun begins when:\n- my service was killed\n  -  when I loose network connection the transfer doesn't want to start (sometimes it works  but more often it seems to stuck : the records have RESUMED_WAITING and then when I run the app/my service (btw.I  start my service during app launch) the records have status WAITING and nothing is uploaded\n\nAlso, for first case when my service was killed. I wanted to force it the upload agin. However, I don't see how I can do this. I tried to use resume but the state has to be PASUED, so first I run pause method which doesn't do the trick for me as it is setting PENDING_PAUSE and won't change to PAUSE so I can't resume it. How I can force, notify the TransferUtility or it's service to start uploading once again.\n\nI am writing in a small rush so if I don't put enough information, just let me know. I will try to put more light on it then.\n\nThanks in advance for help.\n", "commits": {}, "title": "Upload stuck : how I can force to start uploading", "created": "2015-12-11 13:51:54", "user": "polok", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/81", "commitsDetails": [], "ttf": 51.000277777777775}, {"labels": ["Bug"], "closed": "2015-12-07 20:02:51", "body": "The SDK does not have any support for dealing with 400's and 500's coming from the API. I'm reading the source-code for iOS and Android, and it looks like this SDK just isn't even trying. iOS and JS both have support for this, is this a requested feature on Android? Throwing exceptions seems like the opposite of what we want here. ApiClientHandler.handleResponse() is the problematic bit. Even the sample code at http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-generate-sdk.html shows that the other two support this feature. Has this been requested before?\n", "commits": {}, "title": "No support for errors from the API", "created": "2015-12-01 20:08:15", "user": "ataormina-rmn", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/77", "commitsDetails": [], "ttf": 5.000277777777778}, {"labels": ["Bug", "Usage Question"], "closed": "2016-01-08 00:08:20", "body": "I noticed that on flaky connections TransferUtility uploads sometimes were stalling forever.\n\nI've managed to reproduce the issue by doing the following:\n1. Begin an upload with TransferUtility\n2. Turn wifi off for an extended period of time (5-10 minutes)\n3. Turn wifi back on\n\nDuring the time that wifi is off, the transfer remains in the `WAITING_FOR_NETWORK` state indefinitely, as expected. However, on turning wifi back on (and confirming connectivity in other apps, etc), the transfer does not resume as expected.\n\nI've also noticed this behavior (transfer stuck waiting eternally) on flaky networks, which is why I began investigating it in the first place. The transfer is never resumed -- I left one waiting for several days, actually, and it didn't ever resume.\n", "commits": {}, "title": "TransferUtility hangs in WAITING_FOR_NETWORK", "created": "2015-10-20 01:30:04", "user": "corbt", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/70", "commitsDetails": [], "ttf": 79.00027777777778}, {"labels": ["Bug"], "closed": "2015-08-10 00:04:15", "body": "Hi there,\n\nOverall the new S3 Transfer Utility seems great!\nI'm currently trying to upgrade our application to make use of the new API, but it seems the threading was not correctly implemented. I'm getting the following error when I try to upload a file : \n`Can't create handler inside thread that has not called Looper.prepare()`\n\nIt comes from the Handler() creation here :\nhttps://github.com/aws/aws-sdk-android/blob/master/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferObserver.java#L161\n\nStacktrace : \n\n```\nandroid.os.Handler.<init>(Handler.java:197)\nandroid.os.Handler.<init>(Handler.java:111)\ncom.amazonaws.mobileconnectors.s3.transferutility.TransferObserver$TransferContentObserver.<init>(TransferObserver.java:161)\ncom.amazonaws.mobileconnectors.s3.transferutility.TransferObserver.<init>(TransferObserver.java:66)\ncom.amazonaws.mobileconnectors.s3.transferutility.TransferUtility.upload(TransferUtility.java:161)\ncom.neurodesign.utils.amazonws.AWSBridge.asyncS3Upload(AWSBridge.java:158)\ncom.neurodesign.utils.amazonws.AWSBridge.s3Upload(AWSBridge.java:132)\ncom.neurodesign.utils.s3PhotoUploader.S3PhotoUploadJob.onRun(S3PhotoUploadJob.java:74)\ncom.path.android.jobqueue.Job.safeRun(Job.java:189)\ncom.path.android.jobqueue.JobHolder.safeRun(JobHolder.java:91)\ncom.path.android.jobqueue.executor.JobConsumerExecutor$JobConsumer.run(JobConsumerExecutor.java:306)\njava.lang.Thread.run(Thread.java:856)\n```\n", "commits": {}, "title": "Looper not initialized in new S3 TransferUtility", "created": "2015-07-27 14:37:30", "user": "neurolab", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/51", "commitsDetails": [], "ttf": 13.000277777777777}, {"labels": ["Bug", "Usage Question"], "closed": "2015-07-13 20:03:09", "body": "We're currently trying to integrate Cognito using developer authenticated identities using the following example:\nhttps://mobile.awsblog.com/post/Tx3E3NJURV1LNV1/Integrating-Amazon-Cognito-using-developer-authenticated-identities-An-end-to-en\n\nWe can successfully receive data from Cognito after authentication, but the problem is that when we restart the application, SDK resets the identity to null for some reason and we need to perform authentication process once again (add an entry to logins hashmap, request token, etc).\n\nIt seems like sdk has correct sessionCredentials during the same launch when authentication happened, but loses them on restart. saveCredentials method in CognitoCachingCredentialsProvider is not being called, so I assume credentials are not cached or something like that. I don't know if sessionCredentials are to be obtained from SharedPreferences at all times so I'm not sure this is what causes the problem.\n\nWe have tried to use developer authenticated identities in CognitoSyncDemo project from aws-sdk-android-samples and it behaves the same way when implemented there.\n\nThanks!\n", "commits": {}, "title": "Authentication resets after restart when using developer auth provider", "created": "2015-06-24 15:06:30", "user": "imilka", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/48", "commitsDetails": [], "ttf": 19.00027777777778}, {"labels": ["Bug"], "closed": "2015-07-01 19:21:06", "body": "I am trying to upload item from Android client to China bucket. It is ~20 seconds video (~50mb) with hight resolution.  It is separated in multiple chunks and each of them successfully uploaded: \n- I receive ProgressEvent.PART_COMPLETED_EVENT_CODE for all of them\n- I track how much bytes are transfered and it fully reach the size of the video\n\nWhen I receive the last ProgressEvent.PART_COMPLETED_EVENT_CODE SDK stops send any events codes -- looks like it done his job. I checked the data on the server but got an error \"NoSuchKey\"\n\nObserved behaviour: \nSDK doesn't return ProgressEvent.COMPLETED_EVENT_CODE. Amazon via web request returns \"NoSuchKey\" error  \n\nExpected behaviour: \nSDK returns ProgressEvent.COMPLETED_EVENT_CODE. Amazon via web request returns uploaded video. \n\nEnvironment:\nNexus 5, Android 5.1\nAWS SDK 2.2.2\nRegion \"cn-north-1\"  \n", "commits": {}, "title": "SDK doesn't upload .mp4 correctly in multiple parts ", "created": "2015-06-19 04:38:58", "user": "Gelassen", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/46", "commitsDetails": [], "ttf": 12.000277777777777}, {"labels": ["Bug"], "closed": "2015-07-22 23:28:40", "body": "Hi there,\n\nFor Low level api:\nI am using low level api for multipart upload .When i kill the app and try to resume upload it doesnot resume instead it restarts .When i try resume the upload i am getting different upload id for same key and bucket.\nWhen tried to store the upload id obtain when i start upload and try to used that upload id first time upload resumed but it did not complete.I got following error exception:\n06-11 16:55:51.374  22136-22388/com.sharez D/UploadObjectMPU\ufe55 Error !!! :: One or more of the specified parts could not be found.  The part may not have been uploaded, or the specified entity tag may not match the part's entity tag. (Service: Amazon S3; Status Code: 400; Error Code: InvalidPart; Request ID: 264F4CFFAE836648)\n\nSecond time:\nUpload did not resume and i got following error:\n06-12 11:09:39.108    7160-7222/com.sharez D/UploadObjectMPU\ufe55 Error !!! :: The specified upload does not exist. The upload ID may be invalid, or the upload may have been aborted or completed. (Service: Amazon S3; Status Code: 404; Error Code: NoSuchUpload; Request ID: AAD7BBFAB6F5402B)\n\n.Following is the code used.\n\n/**\n     \\* This method is useful to resume update\n     \\* \n     \\* @param pInitResponse\n     \\* @param pS3Client\n     \\* @param pPartETags\n     \\* @return\n     */\n    private int retrievePartDetails(\n            InitiateMultipartUploadResult pInitResponse,\n            AmazonS3Client pS3Client, List<PartETag> pPartETags) {\n        // for new upload this upload id may be null or empty for paused upload\n        // this has some values\n        String  lUploadId =pInitResponse.getUploadId();\n        Log.d(TAG, \"retrievePartDetails():   uploadId = \" + lUploadId);\n        ListPartsRequest lPartsRequest = new ListPartsRequest(mBucketName,\n                mKeyName, lUploadId);\n        PartListing lListing = pS3Client.listParts(lPartsRequest);\n        List<PartSummary> lList = lListing.getParts();\n\n```\n    for (PartSummary lPartSummary : lList) {\n        PartETag lPartETag = new PartETag(lPartSummary.getPartNumber(),\n                lPartSummary.getETag());\n        pPartETags.add(lPartETag);\n    }\n\n    return (lList.size() < 1) ? 1 : lList.get(lList.size() - 1)\n            .getPartNumber() + 1;\n}\n```\n\n/**\n     \\* get a upload request\n     \\* \n\n```\n * \n * @return\n */\n```\n\nprivate InitiateMultipartUploadRequest getUploadRequest() {\n\n```\n    return new InitiateMultipartUploadRequest(mBucketName, mKeyName);\n    // return new InitiateMultipartUploadRequest(mBucketName, mKeyName);\n}\n\n\n/**\n * Intiate mutipart request\n * \n * @param pS3LowLevelUploadTask\n * @param pFile\n */\n```\n\nprivate void initateMutipartRequest(\n            S3LowLevelUploadTask pS3LowLevelUploadTask, File pFile) {\n        // Create a list of UploadPartResponse objects. You get one of these\n        // for each part upload.\n        List<PartETag> lPartETags = new ArrayList<PartETag>();\n        try {\n\n```\n        mInitResponse = mS3Client\n                .initiateMultipartUpload(getUploadRequest());\n\n        // required for resume\n        int lStartPart = retrievePartDetails(mInitResponse, mS3Client,\n                lPartETags);\n        Log.d(TAG, \"lStartPart = \" + lStartPart);\n\n        long lFilePosition = (lStartPart - 1) * mPartSize;\n        Log.d(TAG, \"filePosition = \" + lFilePosition);\n        // show default progress for multipart upload\n\n\n        for (int i = lStartPart; lFilePosition < mFileSize; i++) {\n\n\n            // Last part can be less than 5 MB. Adjust part size.\n            mPartSize = Math.min(mPartSize, (mFileSize - lFilePosition));\n\n            // Create request to upload a part.\n            mUploadRequest = new UploadPartRequest()\n                    .withBucketName(mBucketName).withKey(mKeyName)\n                    .withUploadId(mInitResponse.getUploadId())\n                    .withPartNumber(i).withFileOffset(lFilePosition)\n                    .withFile(pFile).withPartSize(mPartSize)\n                    .withGeneralProgressListener(this);\n\n            // Upload part and add response to our list.\n            lPartETags.add(mS3Client.uploadPart(mUploadRequest)\n                    .getPartETag());\n            lFilePosition += mPartSize;\n            // request update percentage to UI\n\n            pS3LowLevelUploadTask.updateProgress(getPercentageUpload(\n                    mFileSize, lFilePosition));\n            Log.d(TAG, \"filePosition = \" + lFilePosition);\n\n        }\n\n\n\n\n\n            perfromComplete(mInitResponse, lPartETags, mS3Client);\n\n\n\n\n\n    } catch (AbortedException lAse) {\n        lAse.printStackTrace();\n    } catch (Exception e) {\n        Log.d(TAG, \"Error !!! :: \" + e.getMessage());\n        e.printStackTrace();\n\n    }\n\n}\n```\n\n/**\n     \\* Mark file has been successfully uploaded\n     \\* \n     \\* @param pInitResponse\n     \\* @param pPartETags\n     \\* @param pS3Client\n     \\* @param pS3LowLevelUploadTask\n     */\n    private void perfromComplete(InitiateMultipartUploadResult pInitResponse,\n            List<PartETag> pPartETags, AmazonS3Client pS3Client) {\n        CompleteMultipartUploadRequest compRequest = new CompleteMultipartUploadRequest(\n                mBucketName, mKeyName, pInitResponse.getUploadId(), pPartETags);\n        pS3Client.completeMultipartUpload(compRequest);\n\n```\n}\n```\n\nFor high level api:\n\n/*_To save transfer state_/\npublic void saveTransferState(PersistableTransfer persistableTransfer, String fileName) {\n  // Create a new file to store the information.\n  File f = new File(fileName);\n  if( !f.exists() ) f.createNewFile();\n  FileOutputStream fos = new FileOutputStream(f);\n  // Serialize the persistable transfer to the file.\n  persistableTransfer.serialize(fos);\n  fos.close();  \n}\n\nPutObjectRequest putRequest = new PutObjectRequest(BUCKET_NAME, mKey,file);\n// Upload a file to Amazon S3.\ntransferManager.upload(putRequest, new S3ProgressListener() {\n  ExecutorService executor = Executors.newFixedThreadPool(1);\n  @Override\n  public void onPersistableTransfer(final PersistableTransfer persistableTransfer) {\n        executor.submit(new Runnable() {\n          @Override\n          public void run() {\n              saveTransferState(persistableTransfer, \u201cresume-upload\u201d);\n          }\n        });\n    }\n});\n\nFor resuming upload:\n\nString fileName = \"resume-upload\";\nFile f = new File (fileName);\nif(f.exists()) {\n  FileInputStream fis = new FileInputStream(f); \n  // Deserialize PersistableUpload information from disk. \n  PersistableUpload persistableUpload = PersistableTransfer.deserializeFrom(fis); \n  // Call resumeUpload with PersistableUpload. \n mUpload =  transferManager.resumeUpload(persistableUpload); \ntry {\n\n```\n        if (mUpload != null) {\n\n            mUpload.addProgressListener(this);\n\n            mUpload.waitForCompletion();\n\n        }\n    }\n\n    catch (AmazonServiceException e) {\n\n        e.printStackTrace();\n\n    } catch (AmazonClientException e) {\n\n        e.printStackTrace();\n\n    } catch (InterruptedException e) {\n\n        e.printStackTrace();\n\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n}\n```\n\n  fis.close();\n}\n", "commits": {}, "title": "Upload does not resume using  aws-android-sdk-2.2.3-s3", "created": "2015-06-12 05:13:53", "user": "surajnavkudkarpersonal", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/44", "commitsDetails": [], "ttf": 40.000277777777775}, {"labels": ["Bug"], "closed": "2015-04-09 19:22:35", "body": "The request handler definition files are missing. I can find the \"request.handler\" files in the official releases at http://aws.amazon.com/mobile/sdk/, but they do not appear in a fresh build from the Github repository.\n", "commits": {}, "title": "Missing \"request.handlers\"", "created": "2015-03-12 14:38:11", "user": "rossimo", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/36", "commitsDetails": [], "ttf": 28.00027777777778}, {"labels": ["Bug"], "closed": "2015-07-13 20:01:55", "body": "so. I can't resume download.\n", "commits": {}, "title": "S3 PersistableDownload is not contain range data.", "created": "2015-03-10 12:37:48", "user": "smallwood69", "url": "https://github.com/aws-amplify/aws-sdk-android/issues/35", "commitsDetails": [], "ttf": 125.00027777777778}], "bugLabels": ["Bug"], "projectName": "aws-amplify/aws-sdk-android", "captureTime": "Sat Jul  4 14:18:35 2020"}