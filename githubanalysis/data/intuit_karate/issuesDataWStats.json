{"projectName": "intuit/karate", "bugLabels": ["bug"], "captureTime": "Sat Jul  4 16:59:11 2020", "issues": [{"title": "[ui] drag and drop not working as expected", "body": "as reported here: https://stackoverflow.com/q/60637144/143475", "url": "https://github.com/intuit/karate/issues/1075", "user": "ptrthomas", "labels": ["bug", "help wanted"], "created": "2020-03-11 15:30:15", "closed": "2020-05-03 06:15:04", "commits": {}, "ttf": 52.000277777777775, "commitsDetails": []}, {"title": "ConcurrentModificationException when running testKarateToJson", "body": "Stacktrace:\r\n```\r\njava.lang.RuntimeException: javascript evaluation failed: karate.toJson(sp, true), null\r\n    at com.intuit.karate.ScriptTest.testKarateToJson(ScriptTest.java:1713)\r\nCaused by: java.util.ConcurrentModificationException\r\n    at com.intuit.karate.ScriptTest.testKarateToJson(ScriptTest.java:1713)\r\n```\r\nIt looks like this is due to `JsonUtils.removeKeysWithNullValues` \r\n\r\nThe implementation is as following \r\n```\r\n 215             for (Map.Entry<String, Object> entry : map.entrySet()) {\r\n 216                 Object v = entry.getValue();\r\n 217                 if (v == null) {\r\n 218                     map.remove(entry.getKey());\r\n 219                 } else {\r\n 220                     removeKeysWithNullValues(v);\r\n 221                 }\r\n 222             }\r\n```\r\nHere line 215 is iterating on the map while line 218 remove items from the map. Thus the CME is thrown.  A possible fix is to copy/clone the entry set or key and use the copy to iterate. \r\n\r\nLet me know how you think about this.\r\n\r\n", "url": "https://github.com/intuit/karate/issues/1047", "user": "contextshuffling", "labels": ["bug", "fixed"], "created": "2020-02-11 17:24:29", "closed": "2020-02-16 09:40:17", "commits": {"5394b4fdc0b2943958ec75e20e6573ca0c84c7bf": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "5394b4fdc0b2943958ec75e20e6573ca0c84c7bf", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["4f60ad691db9dbf173528d79a215e049334a01ba"], "nameRev": "5394b4fdc0b2943958ec75e20e6573ca0c84c7bf tags/v0.9.5^2~8", "commitMessage": "defensive coding for #1047\n", "commitDateTime": "2020-02-12 08:25:47", "authoredDateTime": "2020-02-12 08:25:47", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/JsonUtils.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JsonUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.JsonUtils.removeKeysWithNullValues(java.lang.Object)", "TOT": 4, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5394b4fdc0b2943958ec75e20e6573ca0c84c7bf"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 1, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.JsonUtils.removeKeysWithNullValues(java.lang.Object)"]}, {"title": "NPE while reading from Db", "body": "Please run the sample which creates an in memory H2 DB with a table called Person. While retrieving the data prints successfully, using it in Examples throws NPE.\r\n\r\nmvn clean test\r\n[demo.zip](https://github.com/intuit/karate/files/4176477/demo.zip)\r\n\r\nMicrosoft Windows [Version 10.0.18362.592]\r\n(c) 2019 Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Users\\arvinlml\\Sources\\Repo\\demo>\\apache-maven\\3.6.3\\bin\\mvn test clean\r\n[INFO] Scanning for projects...\r\n[INFO]\r\n[INFO] ------------------------------< NPE:demo >------------------------------\r\n[INFO] Building demo 0.0.1-SNAPSHOT\r\n[INFO] --------------------------------[ jar ]---------------------------------\r\n[INFO]\r\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ demo ---\r\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\r\n[INFO] Copying 0 resource\r\n[INFO]\r\n[INFO] --- maven-compiler-plugin:3.6.0:compile (default-compile) @ demo ---\r\n[INFO] Changes detected - recompiling the module!\r\n[INFO] Compiling 1 source file to C:\\Users\\arvinlml\\Sources\\Repo\\demo\\target\\classes\r\n[INFO]\r\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ demo ---\r\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\r\n[INFO] Copying 2 resources\r\n[INFO]\r\n[INFO] --- maven-compiler-plugin:3.6.0:testCompile (default-testCompile) @ demo ---\r\n[INFO] Changes detected - recompiling the module!\r\n[INFO] Compiling 1 source file to C:\\Users\\arvinlml\\Sources\\Repo\\demo\\target\\test-classes\r\n[INFO]\r\n[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ demo ---\r\n[INFO] Surefire report directory: C:\\Users\\arvinlml\\Sources\\Repo\\demo\\target\\surefire-reports\r\n\r\n-------------------------------------------------------\r\n T E S T S\r\n-------------------------------------------------------\r\nRunning demo.TestRunner\r\n23:11:16.232 [main] DEBUG com.jayway.jsonpath.internal.path.CompiledPath - Evaluating path: $\r\n23:11:16.342 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Loaded JDBC driver: org.h2.Driver\r\n23:11:16.361 [main] INFO demo.DbUtils - init jdbc template: jdbc:h2:mem:test;DB_CLOSE_DELAY=-1\r\n23:11:16.361 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:h2:mem:test;DB_CLOSE_DELAY=-1]\r\nH2 In-Memory Database inserted through Statement\r\nId 1 Name Anju\r\nId 2 Name Sonia\r\nId 3 Name Asha\r\nId 4 Name null\r\n23:11:16.744 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate - Executing SQL query [SELECT * FROM PERSON]\r\n23:11:16.764 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource\r\n23:11:16.764 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:h2:mem:test;DB_CLOSE_DELAY=-1]\r\n23:11:16.788 [main] DEBUG com.jayway.jsonpath.internal.path.CompiledPath - Evaluating path: $\r\n23:11:16.793 [main] INFO com.intuit.karate - [print] [\r\n  {\r\n    \"ID\": 1,\r\n    \"NAME\": \"Anju\"\r\n  },\r\n  {\r\n    \"ID\": 2,\r\n    \"NAME\": \"Sonia\"\r\n  },\r\n  {\r\n    \"ID\": 3,\r\n    \"NAME\": \"Asha\"\r\n  },\r\n  {\r\n    \"ID\": 4,\r\n    \"NAME\": null\r\n  }\r\n]\r\n\r\nTests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 2.697 sec <<< FAILURE!\r\ndemo.TestRunner  Time elapsed: 2.695 sec  <<< ERROR!\r\njava.lang.NullPointerException\r\n        at java.lang.String.replace(String.java:2240)\r\n        at com.intuit.karate.core.Scenario.replace(Scenario.java:98)\r\n        at com.intuit.karate.core.Feature.lambda$getScenarioExecutionUnits$0(Feature.java:106)\r\n        at java.util.Map.forEach(Map.java:630)\r\n        at com.intuit.karate.core.Feature.getScenarioExecutionUnits(Feature.java:104)\r\n        at com.intuit.karate.core.FeatureExecutionUnit.init(FeatureExecutionUnit.java:55)\r\n        at com.intuit.karate.junit4.FeatureInfo.<init>(FeatureInfo.java:75)\r\n        at com.intuit.karate.junit4.Karate.describeChild(Karate.java:116)\r\n        at com.intuit.karate.junit4.Karate.describeChild(Karate.java:56)\r\n        at org.junit.runners.ParentRunner.getDescription(ParentRunner.java:352)\r\n        at org.junit.runners.ParentRunner.run(ParentRunner.java:359)\r\n        at com.intuit.karate.junit4.Karate.run(Karate.java:133)\r\n        at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)\r\n        at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)\r\n        at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)\r\n        at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)\r\n        at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)\r\n        at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)\r\n        at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)\r\n\r\n\r\nResults :\r\n\r\nTests in error:\r\n  demo.TestRunner\r\n\r\nTests run: 1, Failures: 0, Errors: 1, Skipped: 0\r\n\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  10.780 s\r\n[INFO] Finished at: 2020-02-08T23:11:17-05:00\r\n[INFO] ------------------------------------------------------------------------\r\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.12.4:test (default-test) on project demo: There are test failures.\r\n[ERROR]\r\n[ERROR] Please refer to C:\\Users\\arvinlml\\Sources\\Repo\\demo\\target\\surefire-reports for the individual test results.\r\n[ERROR] -> [Help 1]\r\n[ERROR]\r\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\r\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\r\n[ERROR]\r\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\r\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\r\n\r\nC:\\Users\\arvinlml\\Sources\\Repo\\demo>", "url": "https://github.com/intuit/karate/issues/1045", "user": "arvinlml", "labels": ["bug", "fixed"], "created": "2020-02-09 04:12:26", "closed": "2020-02-16 09:40:28", "commits": {"18480f1a4d668748bba8fab7a5fcfac221e9658e": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "18480f1a4d668748bba8fab7a5fcfac221e9658e", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["7bdd1a595d1cd5f02a7b14d904ddc847fee6e9ff"], "nameRev": "18480f1a4d668748bba8fab7a5fcfac221e9658e tags/v0.9.5^2~13", "commitMessage": "null in dynamic scenario outline cell causes npe #1045\n", "commitDateTime": "2020-02-09 20:58:23", "authoredDateTime": "2020-02-09 20:58:23", "commitGitStats": [{"filePath": "README.md", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/Scenario.java", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Scenario.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.Scenario.replace(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["18480f1a4d668748bba8fab7a5fcfac221e9658e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 0, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/core"], "changesInPackagesSPOON": ["com.intuit.karate.core.Scenario.replace(java.lang.String,java.lang.String)"]}, {"title": "configure headers does not update request-builder - so gatling name-resolver fails", "body": "currently `configure headers` is processed separately and does not update the `HttpRequestBuilder`\r\n\r\nthis means routines (e.g. hooks. gatling name-resolver) that look for specific header values will miss these headers.\r\n", "url": "https://github.com/intuit/karate/issues/1025", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2020-01-18 05:01:41", "closed": "2020-02-16 09:41:01", "commits": {"dac24dc040972e59c2456416860ac7a094f86596": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 29.00027777777778, "commitsDetails": [{"commitHash": "dac24dc040972e59c2456416860ac7a094f86596", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["88b891865572e4336f9285672dde5c0baaad65be"], "nameRev": "dac24dc040972e59c2456416860ac7a094f86596 tags/v0.9.5^2~39", "commitMessage": "configure header / cookies now reflect in http-request-builder #1025\n", "commitDateTime": "2020-01-18 10:24:26", "authoredDateTime": "2020-01-18 10:24:26", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/http/HttpClient.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "karate-core/src/main/java/com/intuit/karate/http/HttpRequestBuilder.java", "insertions": 13, "deletions": 0, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpClient.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpClient.invoke(com.intuit.karate.http.HttpRequestBuilder,com.intuit.karate.core.ScenarioContext)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.http.HttpClient.buildRequestInternal(com.intuit.karate.http.HttpRequestBuilder,com.intuit.karate.core.ScenarioContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpRequestBuilder.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpRequestBuilder.setHeader(java.lang.String,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dac24dc040972e59c2456416860ac7a094f86596"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 16, "deletions": 1, "lines": 17, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/http"], "changesInPackagesSPOON": ["com.intuit.karate.http.HttpClient.invoke(com.intuit.karate.http.HttpRequestBuilder,com.intuit.karate.core.ScenarioContext)", "com.intuit.karate.http.HttpClient.buildRequestInternal(com.intuit.karate.http.HttpRequestBuilder,com.intuit.karate.core.ScenarioContext)", "com.intuit.karate.http.HttpRequestBuilder.setHeader(java.lang.String,java.lang.Object)"]}, {"title": "Race condition when starting multiple threads", "body": "When running UI testing in parallel with -T 2, I sometimes experience the following error:\r\n\r\n04:58:01.736 [main] INFO  com.intuit.karate.Main - Karate version: 0.9.5.RC5\r\n04:58:02.109 [main] INFO  com.intuit.karate.Main - deleted directory: target\r\n04:58:03.456 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env=acc \r\n04:58:03.463 [ForkJoinPool-1-worker-0] INFO  com.intuit.karate - karate.env=acc \r\n04:58:03.484 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...\r\n04:58:03.672 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate.shell.Command - found / verified free local port: 4444\r\n04:58:03.674 [ForkJoinPool-1-worker-0] DEBUG com.intuit.karate.shell.Command - found / verified free local port: 4444\r\n04:58:03.675 [geckodriver_1579147083667] DEBUG com.intuit.karate.driver.geckodriver_1579147083667 - command: [geckodriver, --port=4444]\r\n04:58:03.679 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate.driver.geckodriver_1579147083667 - poll attempt #0 for port to be ready - localhost:4444\r\n04:58:03.679 [ForkJoinPool-1-worker-0] DEBUG com.intuit.karate.driver.geckodriver_1579147083667 - poll attempt #0 for port to be ready - localhost:4444\r\n04:58:03.687 [geckodriver_1579147083667] DEBUG com.intuit.karate.driver.geckodriver_1579147083667 - command: [geckodriver, --port=4444]\r\n04:58:03.743 [geckodriver_1579147083667] DEBUG com.intuit.karate.driver.geckodriver_1579147083667 - geckodriver: error: Only one usage of each socket address (protocol/network address/port) is normally permitted. (os error 10048)\r\n04:58:03.745 [geckodriver_1579147083667] DEBUG com.intuit.karate.driver.geckodriver_1579147083667 - geckodriver 0.26.0 (e9783a644016 2019-10-10 13:38 +0000) \r\n...\r\n\r\nAs you can see both threads detect that port 4444 is free.\r\n\r\nThis will fail one of the two scenarios with a somewhat hard to diagnose error:\r\n\r\ncommon.feature:7 - driver config / start failed: java.net.URISyntaxException: Illegal character in path at index 30: http://localhost:4444/session/[], options: {type=geckodriver, target=null} \r\n\r\nMy guess is that: https://github.com/intuit/karate/blob/ded55bbe9d59fc4dcef6f3386ae7bdcecdbdb88a/karate-core/src/main/java/com/intuit/karate/shell/Command.java#L89 needs to synchronized.", "url": "https://github.com/intuit/karate/issues/1022", "user": "paaco", "labels": ["bug", "fixed"], "created": "2020-01-16 07:24:54", "closed": "2020-02-16 09:41:11", "commits": {}, "ttf": 31.00027777777778, "commitsDetails": []}, {"title": "Postman converter does not support requests without bodies", "body": "Example Postman v2.1 export:\r\n\r\n```json\r\n{\r\n  \"info\": {\r\n    \"_postman_id\": \"c58ce879-6c89-4219-8f9c-14de849c5301\",\r\n    \"name\": \"sample\",\r\n    \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\r\n  },\r\n  \"item\": [\r\n    {\r\n      \"name\": \"http://localhost:8080/v1/hello\",\r\n      \"request\": {\r\n        \"method\": \"GET\",\r\n        \"header\": [\r\n          {\r\n            \"key\": \"accept\",\r\n            \"value\": \"*/*\"\r\n          },\r\n          {\r\n            \"key\": \"accept-encoding\",\r\n            \"value\": \"gzip, deflate\"\r\n          },\r\n          {\r\n            \"key\": \"connection\",\r\n            \"value\": \"keep-alive\"\r\n          },\r\n          {\r\n            \"key\": \"host\",\r\n            \"value\": \"localhost:8080\"\r\n          },\r\n          {\r\n            \"key\": \"user-agent\",\r\n            \"value\": \"HTTPie/1.0.3\"\r\n          }\r\n        ],\r\n        \"url\": {\r\n          \"raw\": \"http://localhost:8080/v1/hello\",\r\n          \"protocol\": \"http\",\r\n          \"host\": [\r\n            \"localhost\"\r\n          ],\r\n          \"port\": \"8080\",\r\n          \"path\": [\r\n            \"v1\",\r\n            \"hello\"\r\n          ]\r\n        }\r\n      },\r\n      \"response\": []\r\n    }\r\n  ],\r\n  \"protocolProfileBehavior\": {}\r\n}\r\n```\r\n\r\nAn NPE is thrown here: https://github.com/intuit/karate/blob/master/karate-core/src/main/java/com/intuit/karate/formats/postman/PostmanUtils.java#L101", "url": "https://github.com/intuit/karate/issues/1004", "user": "Celeo", "labels": ["bug", "fixed"], "created": "2019-12-19 21:55:55", "closed": "2019-12-22 07:27:52", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "[0.9.5.RC5] Log not appearing in HTML report for dynamic scenario outline", "body": "When Feature file run with 500+ iterations, from 501th iteration onwards the doc string in cucumber report  will not apprear. But when the same feature file is run with all the iterations in feature file the report will have all the doc string required.\r\n\r\nThe feature file is as below, also alttached all the required files .\r\n\r\n**Feature File** \r\nFeature: Missing Doc String in report with iterations over 500\r\n\r\n@test\r\nScenario Outline: Data\t\r\n\t* print Text\r\n    Examples:    \r\n    |read('TextData.csv')|\r\n\r\nThis Zip file has Test Runner, POM, TextData.csv, Sample Report in which doc string is missing @501 iteration, rest all iterations has doc string.\r\n[bug.zip](https://github.com/intuit/karate/files/3982423/bug.zip)\r\n\r\nKindly look into this issue and let me know if you need any further informations.\r\n\r\n\r\n", "url": "https://github.com/intuit/karate/issues/1003", "user": "sujayn105", "labels": ["bug", "fixed"], "created": "2019-12-19 08:29:16", "closed": "2020-02-16 09:41:46", "commits": {"11165fd24e02743ed5ef71edd7173bc129f66358": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 59.000277777777775, "commitsDetails": [{"commitHash": "11165fd24e02743ed5ef71edd7173bc129f66358", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["3bf5beae36ed089d85ee35e1db4011e1328e5b0f"], "nameRev": "11165fd24e02743ed5ef71edd7173bc129f66358 tags/v0.9.5^2~55", "commitMessage": "log collection for dynamic scenario outline #1003\n", "commitDateTime": "2019-12-20 19:09:05", "authoredDateTime": "2019-12-20 19:09:05", "commitGitStats": [{"filePath": "README.md", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/Logger.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/ScenarioContext.java", "insertions": 10, "deletions": 3, "lines": 13}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/ScenarioExecutionUnit.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "karate-core/src/main/java/com/intuit/karate/debug/DebugThread.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/DriverOptions.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/android/AndroidDriver.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/chrome/Chrome.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/chrome/ChromeWebDriver.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/edge/EdgeDevToolsDriver.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/edge/MicrosoftWebDriver.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/firefox/GeckoWebDriver.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/ios/IosDriver.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/safari/SafariWebDriver.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/windows/WinAppDriver.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/job/JobExecutor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/shell/Command.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Logger.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Logger", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Logger.setLogAppender(com.intuit.karate.LogAppender)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Logger.getLogAppender()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Logger.append(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Logger.formatAndAppend(java.lang.String,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScenarioContext.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.ScenarioContext", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.core.ScenarioContext.setLogger(com.intuit.karate.Logger)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScenarioExecutionUnit.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.ScenarioExecutionUnit.setAppender(com.intuit.karate.LogAppender)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.core.ScenarioExecutionUnit.init()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DebugThread.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.debug.DebugThread.beforeScenario(com.intuit.karate.core.Scenario,com.intuit.karate.core.ScenarioContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.debug.DebugThread.afterScenario(com.intuit.karate.core.ScenarioResult,com.intuit.karate.core.ScenarioContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DriverOptions.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.DriverOptions", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AndroidDriver.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.android.AndroidDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Chrome.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.chrome.Chrome.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ChromeWebDriver.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.chrome.ChromeWebDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EdgeDevToolsDriver.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.edge.EdgeDevToolsDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MicrosoftWebDriver.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.edge.MicrosoftWebDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GeckoWebDriver.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.firefox.GeckoWebDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IosDriver.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.ios.IosDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SafariWebDriver.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.safari.SafariWebDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WinAppDriver.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.windows.WinAppDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JobExecutor.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.job.JobExecutor", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Command.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.shell.Command", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["11165fd24e02743ed5ef71edd7173bc129f66358"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 37, "deletions": 30, "lines": 67, "gitFilesChange": 16}, "spoonStatsSummary": {"TOT": 30, "UPD": 25, "INS": 2, "MOV": 0, "DEL": 3, "spoonFilesChanged": 16, "spoonMethodsChanged": 23}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/driver/edge", "karate-core/src/main/java/com/intuit/karate/driver/android", "karate-core/src/main/java/com/intuit/karate/job", "karate-core/src/main/java/com/intuit/karate/driver", "karate-core/src/main/java/com/intuit/karate/debug", "karate-core/src/main/java/com/intuit/karate/driver/windows", "karate-core/src/main/java/com/intuit/karate/driver/safari", "karate-core/src/main/java/com/intuit/karate/driver/ios", "karate-core/src/main/java/com/intuit/karate/driver/chrome", "karate-core/src/main/java/com/intuit/karate/core", "karate-core/src/main/java/com/intuit/karate", "karate-core/src/main/java/com/intuit/karate/driver/firefox", "karate-core/src/main/java/com/intuit/karate/shell"], "changesInPackagesSPOON": ["com.intuit.karate.core.ScenarioContext", "com.intuit.karate.job.JobExecutor", "com.intuit.karate.Logger", "com.intuit.karate.Logger.getLogAppender()", "com.intuit.karate.debug.DebugThread.afterScenario(com.intuit.karate.core.ScenarioResult,com.intuit.karate.core.ScenarioContext)", "com.intuit.karate.driver.windows.WinAppDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "com.intuit.karate.core.ScenarioExecutionUnit.setAppender(com.intuit.karate.LogAppender)", "com.intuit.karate.core.ScenarioExecutionUnit.init()", "com.intuit.karate.debug.DebugThread.beforeScenario(com.intuit.karate.core.Scenario,com.intuit.karate.core.ScenarioContext)", "com.intuit.karate.Logger.formatAndAppend(java.lang.String,java.lang.Object[])", "com.intuit.karate.core.ScenarioContext.setLogger(com.intuit.karate.Logger)", "com.intuit.karate.driver.safari.SafariWebDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "com.intuit.karate.driver.chrome.ChromeWebDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "com.intuit.karate.Logger.setLogAppender(com.intuit.karate.LogAppender)", "com.intuit.karate.driver.chrome.Chrome.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "com.intuit.karate.driver.firefox.GeckoWebDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "com.intuit.karate.shell.Command", "com.intuit.karate.driver.android.AndroidDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "com.intuit.karate.driver.edge.EdgeDevToolsDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "com.intuit.karate.driver.ios.IosDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "com.intuit.karate.driver.DriverOptions", "com.intuit.karate.driver.edge.MicrosoftWebDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "com.intuit.karate.Logger.append(java.lang.String)"]}, {"title": "multipart-file is not sent correctly when retrying", "body": "### What's occurred?\r\n- `Content-Length` is different among HTTP requests in `retry`. (please refer logs below)\r\n- From SUT side, seems multipart-file is not sent correctly when retrying.\r\n\r\n1st request:\r\n```\r\n11:21:07.475 [main] DEBUG com.intuit.karate - request:\r\n1 > POST http://127.0.0.1:8080/files\r\n1 > Accept-Encoding: gzip,deflate\r\n1 > Connection: Keep-Alive\r\n1 > Content-Length: 6900\r\n1 > Content-Type: multipart/form-data; boundary=qLIkMvpp9P5si91hYrhG_r4bYyzz8k\r\n1 > Host: 127.0.0.1:8080\r\n1 > User-Agent: Apache-HttpClient/4.5.3 (Java/1.8.0_192)\r\n```\r\n\r\n2nd request:\r\n```\r\n11:21:07.512 [main] DEBUG com.intuit.karate - retry condition not satisfied: responseStatus == 201\r\n11:21:07.512 [main] DEBUG com.intuit.karate - sleeping before retry #1\r\n11:21:10.518 [main] DEBUG com.intuit.karate - request:\r\n2 > POST http://127.0.0.1:8080/files\r\n2 > Accept-Encoding: gzip,deflate\r\n2 > Connection: Keep-Alive\r\n2 > Content-Length: 392\r\n2 > Content-Type: multipart/form-data; boundary=2l1ScrvdtQMXwwCL6iQXevXGG233th6x\r\n2 > Host: 127.0.0.1:8080\r\n2 > User-Agent: Apache-HttpClient/4.5.3 (Java/1.8.0_192)\r\n```\r\n\r\n3rd request:\r\n```\r\n11:21:10.527 [main] DEBUG com.intuit.karate - retry condition not satisfied: responseStatus == 201\r\n11:21:10.527 [main] DEBUG com.intuit.karate - sleeping before retry #2\r\n11:21:13.532 [main] DEBUG com.intuit.karate - request:\r\n3 > POST http://127.0.0.1:8080/files\r\n3 > Accept-Encoding: gzip,deflate\r\n3 > Connection: Keep-Alive\r\n3 > Content-Length: 407\r\n3 > Content-Type: multipart/form-data; boundary=H3_2pZDfJxEINPqdQyByhNbSkd3WHhiQumRbj\r\n3 > Host: 127.0.0.1:8080\r\n3 > User-Agent: Apache-HttpClient/4.5.3 (Java/1.8.0_192)\r\n```\r\n\r\n### How to reproduce\r\nWe can test with modifying `upload.feature` in karate-demo.\r\nr.f. [my example](https://github.com/IsaoTakahashi/karate/commit/1a3ab7ebec4ed6100870104a33fe2ba833156a0b)\r\n\r\n### Expectation\r\n`retry` sends same HTTP request with multipart-file.\r\n\r\n### Investigation and Hypothesis\r\n(Sorry I couldn't confirm actually because don't know how to set up Karate development environment)\r\n- `multipart-file` data is received and set to `HttpEntity` as `InputStream` for building HTTP Request.\r\n- Once data in the stream was read, cannot be read again when retrying.\r\n- Thus, 2nd and further retried requests cannot send file data and `Content-Length` is shorter than 1st.", "url": "https://github.com/intuit/karate/issues/999", "user": "IsaoTakahashi", "labels": ["bug", "fixed"], "created": "2019-12-13 03:46:36", "closed": "2020-02-16 09:41:56", "commits": {"1ca3232b7d02589218d3736623b5dd3d590144c9": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 65.00027777777778, "commitsDetails": [{"commitHash": "1ca3232b7d02589218d3736623b5dd3d590144c9", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["415ce506d0357b1d6bc87ca61811dc3aa5818598"], "nameRev": "1ca3232b7d02589218d3736623b5dd3d590144c9 tags/v0.9.5^2~60", "commitMessage": "multipart streams will be re-readable for retry until #999\n", "commitDateTime": "2019-12-15 19:24:05", "authoredDateTime": "2019-12-15 19:24:05", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/core/ScenarioContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/http/HttpClient.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "karate-demo/src/test/java/demo/upload/UploadRetryRunner.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "karate-demo/src/test/java/demo/upload/upload-retry.feature", "insertions": 21, "deletions": 0, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ScenarioContext.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.ScenarioContext.getRequest()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpClient.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpClient.buildRequestInternal(com.intuit.karate.http.HttpRequestBuilder,com.intuit.karate.core.ScenarioContext)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "UploadRetryRunner.java", "spoonMethods": [{"spoonMethodName": "demo.upload.UploadRetryRunner", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1ca3232b7d02589218d3736623b5dd3d590144c9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 1, "lines": 10, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 7, "UPD": 1, "INS": 3, "MOV": 3, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/core", "karate-core/src/main/java/com/intuit/karate/http"], "changesInPackagesSPOON": ["com.intuit.karate.http.HttpClient.buildRequestInternal(com.intuit.karate.http.HttpRequestBuilder,com.intuit.karate.core.ScenarioContext)", "demo.upload.UploadRetryRunner", "com.intuit.karate.core.ScenarioContext.getRequest()"]}, {"title": "Wildcard locator with index doesn't work", "body": "When using a wildcard locator for UI Test Automation that contains an index, like ``{^button:2}Item`` to select the second <button> node with \"Item\" in its text Karate generates an incorrect xpath and fails to select any node.\r\n\r\nI've verified this with both Firefox 68.3.0esr and Chrome via the karate-chrome Docker image.\r\n\r\nPlease see the attached example.\r\n\r\n[karate-bug-wildcard.zip](https://github.com/intuit/karate/files/3954418/karate-bug-wildcard.zip)\r\n", "url": "https://github.com/intuit/karate/issues/993", "user": "paaco", "labels": ["bug", "fixed"], "created": "2019-12-12 07:37:20", "closed": "2020-02-16 09:42:23", "commits": {"1f7855357bd9f7d0beb2bbddf4cd772e1e7d65b8": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "c7b7522c33343c6844baf4b99f19c6f09c8b7b80": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 66.00027777777778, "commitsDetails": [{"commitHash": "1f7855357bd9f7d0beb2bbddf4cd772e1e7d65b8", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["000fcf6e1888c1f158ba85cdc68839ad41b8af78"], "nameRev": "1f7855357bd9f7d0beb2bbddf4cd772e1e7d65b8 tags/v0.9.5^2~63", "commitMessage": "better xpath for wildcard with index #993\n", "commitDateTime": "2019-12-12 13:35:51", "authoredDateTime": "2019-12-12 13:35:51", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/driver/DriverOptions.java", "insertions": 10, "deletions": 4, "lines": 14}, {"filePath": "karate-demo/src/test/java/driver/core/page-02.html", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "karate-demo/src/test/java/driver/core/test-01.feature", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "karate-demo/src/test/java/driver/core/test-04.feature", "insertions": 18, "deletions": 7, "lines": 25}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DriverOptions.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.DriverOptions.preProcessWildCard(java.lang.String)", "TOT": 14, "UPD": 2, "INS": 4, "MOV": 6, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.driver.DriverOptions.selector(java.lang.String)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "c7b7522c33343c6844baf4b99f19c6f09c8b7b80", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["1f7855357bd9f7d0beb2bbddf4cd772e1e7d65b8"], "nameRev": "c7b7522c33343c6844baf4b99f19c6f09c8b7b80 tags/v0.9.5^2~62", "commitMessage": "of all the times you commit without testing #993\n", "commitDateTime": "2019-12-12 13:42:26", "authoredDateTime": "2019-12-12 13:42:26", "commitGitStats": [{"filePath": "karate-core/src/test/java/com/intuit/karate/driver/DriverOptionsTest.java", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DriverOptionsTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.DriverOptionsTest.testPreProcess()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1f7855357bd9f7d0beb2bbddf4cd772e1e7d65b8", "c7b7522c33343c6844baf4b99f19c6f09c8b7b80"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 4, "lines": 14, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 20, "UPD": 2, "INS": 6, "MOV": 9, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/driver"], "changesInPackagesSPOON": ["com.intuit.karate.driver.DriverOptions.preProcessWildCard(java.lang.String)", "com.intuit.karate.driver.DriverOptions.selector(java.lang.String)"]}, {"title": "fuzzy array combined with regex fails when backslash is involved", "body": "refer discussion https://stackoverflow.com/q/59241235/143475\r\n\r\n```cucumber\r\n* def foo = ['123']\r\n* match foo == '#[] #regex \\\\d+'\r\n```\r\n\r\nthis should work - but fails currently", "url": "https://github.com/intuit/karate/issues/988", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2019-12-09 03:39:35", "closed": "2020-02-16 09:42:59", "commits": {"193f5bce8378dc8b94798517fb9243c92a0646fc": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 69.00027777777778, "commitsDetails": [{"commitHash": "193f5bce8378dc8b94798517fb9243c92a0646fc", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["deda89bd48ef5f063b325e55fcd2035ce9dbfee3"], "nameRev": "193f5bce8378dc8b94798517fb9243c92a0646fc tags/v0.9.5^2~68", "commitMessage": "edge case for regex combined with array fuzzy #988\n", "commitDateTime": "2019-12-09 09:15:09", "authoredDateTime": "2019-12-09 09:15:09", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/schema-like.feature", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.matchStringOrPattern(char,java.lang.String,com.intuit.karate.core.MatchType,java.lang.Object,java.lang.Object,com.intuit.karate.ScriptValue,java.lang.String,com.intuit.karate.core.ScenarioContext)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["193f5bce8378dc8b94798517fb9243c92a0646fc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 0, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.Script.matchStringOrPattern(char,java.lang.String,com.intuit.karate.core.MatchType,java.lang.Object,java.lang.Object,com.intuit.karate.ScriptValue,java.lang.String,com.intuit.karate.core.ScenarioContext)"]}, {"title": "Recommended best-practice to call JS function which is not at root level not working", "body": "Hi,\r\nHere is code to reproduce an issue [https://github.com/jdafda/karate-api-test-bug](https://github.com/jdafda/karate-api-test-bug)\r\n\r\nCode worked with **0.9.2** but not with **0.9.3, 0.9.4, 0.9.5.RC4**\r\n\r\nSame issue observed while using karate.toMap function which is available in 9.5.RC4", "url": "https://github.com/intuit/karate/issues/982", "user": "jdafda", "labels": ["bug", "fixed"], "created": "2019-12-02 20:24:06", "closed": "2020-02-16 09:43:12", "commits": {"0a011d876aaae9663acd89049c8460eabbd919e7": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 75.00027777777778, "commitsDetails": [{"commitHash": "0a011d876aaae9663acd89049c8460eabbd919e7", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["34ae1bee2cc3a2c5d531747a7547fd7bd65d5904"], "nameRev": "0a011d876aaae9663acd89049c8460eabbd919e7 tags/v0.9.5^2~76", "commitMessage": "dynamic scenario outline pre-scenario vars deep-copy was losing js functions #982\n", "commitDateTime": "2019-12-03 15:17:21", "authoredDateTime": "2019-12-03 15:17:21", "commitGitStats": [{"filePath": "README.md", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "karate-core/README.md", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "karate-core/src/main/java/com/intuit/karate/ScriptValue.java", "insertions": 26, "deletions": 17, "lines": 43}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/outline-dynamic.feature", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "karate-junit4/src/test/java/karate-config.js", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "karate-junit4/src/test/java/utils.feature", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ScriptValue.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptValue.copy(boolean)", "TOT": 11, "UPD": 4, "INS": 4, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.ScriptValue", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptValue.retainRootKeyValuesWhichAreFunctions(java.util.Map,java.util.Map,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0a011d876aaae9663acd89049c8460eabbd919e7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 26, "deletions": 17, "lines": 43, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 18, "UPD": 5, "INS": 5, "MOV": 7, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.ScriptValue", "com.intuit.karate.ScriptValue.copy(boolean)", "com.intuit.karate.ScriptValue.retainRootKeyValuesWhichAreFunctions(java.util.Map,java.util.Map,boolean)"]}, {"title": "Calling karate.abort() in the Background gives a Nullpointer-exception", "body": "Hi,\r\n\r\nBecause I don't want some featuers running on some environments I saw your comment here: https://stackoverflow.com/questions/54308190/karate-how-to-run-a-specific-scenario-only-in-one-environment\r\n\r\nSo I created this feature-file:\r\n```\r\nFeature: karate-abort\r\n\r\n  Background:\r\n    * print 'Before the eval'\r\n    * eval if (karate.env == 'accp') karate.abort()\r\n    * print 'After the eval'\r\n\r\n  Scenario: test interaction\r\n    * print 'In the scenario'\r\n```\r\nI need to use karate.abort() in the Background, because we're generating tokens etc. before each scenario which can't be done on this environment.\r\n\r\nBut this leads this Nullpointer exception:\r\n\r\n> java.lang.NullPointerException\r\n>         at com.intuit.karate.core.Step.getDebugInfo(Step.java:46)\r\n>         at com.intuit.karate.core.ScenarioExecutionUnit.execute(ScenarioExecutionUnit.java:202)\r\n>         at com.intuit.karate.core.ScenarioExecutionUnit.run(ScenarioExecutionUnit.java:239)\r\n>         at com.intuit.karate.core.FeatureExecutionUnit.run(FeatureExecutionUnit.java:164)\r\n>         at com.intuit.karate.core.FeatureExecutionUnit.run(FeatureExecutionUnit.java:73)\r\n>         at com.intuit.karate.junit4.Karate.runChild(Karate.java:125)\r\n>         at com.intuit.karate.junit4.Karate.runChild(Karate.java:56)\r\n>         at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n>         at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n>         at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n>         at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n>         at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n>         at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\r\n>         at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n>         at com.intuit.karate.junit4.Karate.run(Karate.java:133)\r\n>         at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)\r\n>         at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)\r\n>         at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)\r\n>         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n>         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n>         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n>         at java.lang.reflect.Method.invoke(Method.java:498)\r\n>         at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)\r\n>         at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)\r\n>         at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)\r\n>         at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)\r\n>         at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)\r\n> \r\n\r\nIt looks like that the Nullpointer is only in the getDebugInfo()-method.\r\nIs there a workaround to have this behavior without the Nullpointer?", "url": "https://github.com/intuit/karate/issues/970", "user": "gerben86", "labels": ["bug", "fixed"], "created": "2019-11-22 08:14:14", "closed": "2020-02-16 09:43:25", "commits": {"c9b56d6e9d94ac640c344534c1d0302e3d093645": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 86.00027777777778, "commitsDetails": [{"commitHash": "c9b56d6e9d94ac640c344534c1d0302e3d093645", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["0d5cff99bc4eeda1a22ac73499ffee38ad29187d"], "nameRev": "c9b56d6e9d94ac640c344534c1d0302e3d093645 tags/v0.9.5^2~78", "commitMessage": "fix for #970 and replace #973\n", "commitDateTime": "2019-11-23 14:03:03", "authoredDateTime": "2019-11-23 14:03:03", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/core/Step.java", "insertions": 23, "deletions": 24, "lines": 47}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Step.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.Step.getDebugInfo()", "TOT": 8, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 4}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Need to keep driver alive from qutting after any called feature", "body": "Currently, if we initialize a driver in a feature and call another feature in it, once the called feature is executed it is quitting the parent feature's driver instance.\r\n\r\n```\r\nFeature: browser automation\r\n\r\nBackground:\r\n  * configure driver = { type: 'geckodriver', showDriverLog: true }\r\n\r\nScenario: try to login to github\r\n  Given driver 'https://google.com'\r\n  And input(\"input[name=q]\", 'karate dsl')\r\n  When submit().click(\"input[name=btnI]\")\r\n  Then match driver.url == 'https://github.com/intuit/karate'\r\n  * def callUsers = call read(\"users.feature\")\r\n  * def bytes = driver.screenshot()\r\n  * karate.embed(bytes, 'image/png')\r\n```\r\n\r\nin the above example after `users.feature` it is observed that driver instance is quitting and usage of `driver` will give an error.\r\n\r\n\r\n[KarateApiAndWeb.zip](https://github.com/intuit/karate/files/3866146/KarateApiAndWeb.zip)\r\n\r\n", "url": "https://github.com/intuit/karate/issues/969", "user": "babusekaran", "labels": ["bug", "fixed"], "created": "2019-11-19 21:21:25", "closed": "2020-02-16 09:43:37", "commits": {"b09cc725882f4aea73759964853da35444517460": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 88.00027777777778, "commitsDetails": [{"commitHash": "b09cc725882f4aea73759964853da35444517460", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["6e2e2244c84574916d539c460616ef89ad25da95"], "nameRev": "b09cc725882f4aea73759964853da35444517460 tags/v0.9.5^2~73", "commitMessage": "dont auto-close driver in called scenarios #969\n", "commitDateTime": "2019-12-07 09:53:03", "authoredDateTime": "2019-12-07 09:53:03", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/core/ScenarioContext.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ScenarioContext.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.ScenarioContext.stop(com.intuit.karate.core.StepResult)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b09cc725882f4aea73759964853da35444517460"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/core"], "changesInPackagesSPOON": ["com.intuit.karate.core.ScenarioContext.stop(com.intuit.karate.core.StepResult)"]}, {"title": "Exceptions in async task executors of the parallel runner are not propagated so that the karate tests idle forever", "body": "# Summary\r\nThe parallel runner instantiates a `CountDownLatch` with the number of features, runs a task that executes the feature in an async task executor and counts down this `CountDownLatch` as soon as this is done. If an exceptions happens in one of the the async tasks, these are not propagated or displayed and also the `CountDownLatch` will not be counted down. So the main thread waits forever without displaying any information to the user.\r\n\r\n# What happened\r\nToday I spent a few hours finding the cause of the karate tests running forever and not displaying anything.\r\nThe first issue that we encountered after step debugging was that the Nashorn (JavaScript engine) was throwing an exception that was never displayed during execution.\r\nThe second issue that we encountered after this time step debugging in a docker container was that the `FileLogAppender` was throwing an exception because the reports folder was not writable in a docker container. Also this was not displayed during execution.\r\nBoth issues would have been spotted much faster if these exceptions would be propagated and made visible to the user.\r\n\r\n# Example project\r\nI appended an example of an gradle/kotlin project where I use the parallel runner in the main application and writing the report relative to `target/surefire-reports`. When executing this locally, it will work and run the feature. But when building a docker image with Jib out of it, this path is not writable and the test will run forever without displaying any message.\r\nSteps:\r\n1.  Download the attached [karate-issue-sample-project.zip](https://github.com/intuit/karate/files/3852627/karate-issue-sample-project.zip) and extract it\r\n2. `cd karate-issue-sample-project`\r\n3. `./gradlew run` -> this will execute the feature successful\r\n4. `./gradlew jibDockerBuild` -> this will build a docker container with the name `karate-issue-sample-project`\r\n5. `docker run karate-issue-sample-project:latest` -> this will run the previously created container and will show that we have no output and that this runs forever\r\n\r\nTo demonstrate that it can work in a docker container, please edit `src/main/kotlin/KarateApplication.kt` and change the report dir to the tmp directory, according to the description in the code comments. Repeating step 4 and 5 will that show that it works if the directory is writable.\r\n\r\n# Expectation\r\n\r\nI would expect exceptions that occur during execution of Karate tests to be displayed to the user, at least optionally. If that is not possible, it should be ensured that the corresponding `CountDownLatches` are also decreased when Scenarios or Features conclude with an exception, e.g. by moving the `countDown()` calls to `finally` blocks.", "url": "https://github.com/intuit/karate/issues/967", "user": "hpuac", "labels": ["bug", "fixed"], "created": "2019-11-18 09:43:54", "closed": "2020-02-16 09:43:55", "commits": {"0fbe1970952966de035538872178a1499eb083dd": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 90.00027777777778, "commitsDetails": [{"commitHash": "0fbe1970952966de035538872178a1499eb083dd", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["0a011d876aaae9663acd89049c8460eabbd919e7"], "nameRev": "0fbe1970952966de035538872178a1499eb083dd tags/v0.9.5^2~75", "commitMessage": "error handling for #967\n", "commitDateTime": "2019-12-06 14:05:09", "authoredDateTime": "2019-12-06 14:05:09", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Runner.java", "insertions": 13, "deletions": 8, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Runner.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Runner.onFeatureDone(com.intuit.karate.Results,com.intuit.karate.core.ExecutionContext,java.lang.String,int,int)", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 5, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0fbe1970952966de035538872178a1499eb083dd"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 8, "lines": 21, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 0, "INS": 1, "MOV": 5, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.Runner.onFeatureDone(com.intuit.karate.Results,com.intuit.karate.core.ExecutionContext,java.lang.String,int,int)"]}, {"title": "Scenarios with quotes in title will be skiped in intellij test result overview", "body": "The following feature:\r\n```\r\nFeature: Issue..\r\n  \r\n  Scenario: First 'scenario' with single quotes in title\r\n    * print 1\r\n\r\n  Scenario: Second 'scenario' with single quotes in title\r\n    * print 1 + 1\r\n\r\n  Scenario: First scenario without quotes in title\r\n    * print 1 + 1 + 1\r\n```\r\nWill result in the following test result view when running directly via intellij idea:\r\n\r\n![image](https://user-images.githubusercontent.com/13017110/68314932-513a1e80-00b7-11ea-8195-8c4e3f06d824.png)\r\n\r\nRemoving the single quotes from the scenario titles above fixes that.\r\n\r\nJust to be sure..\r\n\r\n```\r\nFeature: Issue..\r\n\r\n  Scenario: First scenario with single quotes in title\r\n    * print 1\r\n\r\n  Scenario: Second scenario with single quotes in title\r\n    * print 1 + 1\r\n\r\n  Scenario: First scenario without quotes in title\r\n    * print 1 + 1 + 1\r\n```\r\nResults in:\r\n![image](https://user-images.githubusercontent.com/13017110/68315048-7fb7f980-00b7-11ea-84e2-35c75d56f25f.png)\r\n\r\nPS: Tested with `0.9.5.RC3`", "url": "https://github.com/intuit/karate/issues/954", "user": "peterquiel", "labels": ["bug", "fixed"], "created": "2019-11-06 16:05:43", "closed": "2020-02-16 09:44:18", "commits": {"8f52b28ddda9bb96b655823455576abfdc25e2d5": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "8119b540cb5cde896832a4669728f99ea464156d": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 101.00027777777778, "commitsDetails": [{"commitHash": "8f52b28ddda9bb96b655823455576abfdc25e2d5", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["7b0f3a28d0adcbce70e270f896ee5a5ba3f3fe63"], "nameRev": "8f52b28ddda9bb96b655823455576abfdc25e2d5 tags/v0.9.5^2~86^2", "commitMessage": "escape intellij magic log strings #954\n", "commitDateTime": "2019-11-07 08:59:03", "authoredDateTime": "2019-11-07 08:59:03", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/cli/CliExecutionHook.java", "insertions": 5, "deletions": 5, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CliExecutionHook.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.cli.CliExecutionHook.beforeScenario(com.intuit.karate.core.Scenario,com.intuit.karate.core.ScenarioContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.cli.CliExecutionHook.afterScenario(com.intuit.karate.core.ScenarioResult,com.intuit.karate.core.ScenarioContext)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.cli.CliExecutionHook.beforeFeature(com.intuit.karate.core.Feature,com.intuit.karate.core.ExecutionContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.cli.CliExecutionHook.afterFeature(com.intuit.karate.core.FeatureResult,com.intuit.karate.core.ExecutionContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "8119b540cb5cde896832a4669728f99ea464156d", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["7b0f3a28d0adcbce70e270f896ee5a5ba3f3fe63"], "nameRev": "8119b540cb5cde896832a4669728f99ea464156d tags/v0.9.5^2~87", "commitMessage": "escape intellij magic log strings #954\n", "commitDateTime": "2019-11-07 09:14:06", "authoredDateTime": "2019-11-07 09:14:06", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/cli/CliExecutionHook.java", "insertions": 5, "deletions": 5, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CliExecutionHook.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.cli.CliExecutionHook.beforeScenario(com.intuit.karate.core.Scenario,com.intuit.karate.core.ScenarioContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.cli.CliExecutionHook.afterScenario(com.intuit.karate.core.ScenarioResult,com.intuit.karate.core.ScenarioContext)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.cli.CliExecutionHook.beforeFeature(com.intuit.karate.core.Feature,com.intuit.karate.core.ExecutionContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.cli.CliExecutionHook.afterFeature(com.intuit.karate.core.FeatureResult,com.intuit.karate.core.ExecutionContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8f52b28ddda9bb96b655823455576abfdc25e2d5"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 5, "lines": 10, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 10, "UPD": 0, "INS": 5, "MOV": 5, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/cli"], "changesInPackagesSPOON": ["com.intuit.karate.cli.CliExecutionHook.afterScenario(com.intuit.karate.core.ScenarioResult,com.intuit.karate.core.ScenarioContext)", "com.intuit.karate.cli.CliExecutionHook.beforeFeature(com.intuit.karate.core.Feature,com.intuit.karate.core.ExecutionContext)", "com.intuit.karate.cli.CliExecutionHook.beforeScenario(com.intuit.karate.core.Scenario,com.intuit.karate.core.ScenarioContext)", "com.intuit.karate.cli.CliExecutionHook.afterFeature(com.intuit.karate.core.FeatureResult,com.intuit.karate.core.ExecutionContext)"]}, {"title": "NoClassDefFoundError: IllegalName with karate-gatling 0.9.5.RC3", "body": "I have a series of tests that run fine currently on karate 0.9.4. I have a requirement to modify them to use a certificate, and have found that 0.9.5 RC3 allows me to do that successfully.\r\n\r\nUnfortunately, what no longer works on 0.9.5 RC3 is karate-gatling. The error I get is this:\r\n```\r\nUncaught error from thread [GatlingSystem-akka.actor.default-dispatcher-5]: Uncaught error from thread [GatlingSystem-akka.actor.default-dispatcher-4Uncaught error from thread [GatlingSystem-akka.actor.default-dispatcher-2]: IllegalName: com.intuit.karate.gatling.KarateAction$$Lambda$390/0x000000080149ac40AccAccess, shutting down JVM since 'akka.jvm-exit-on-fatal-error' is enabled forIllegalName: com.intuit.karate.gatling.KarateAction$$Lambda$390/0x000000080149ac40AccAccess, shutting down JVM since 'akka.jvm-exit-on-fatal-error' is enabled for ActorSystem[ ActorSystem[GatlingSystem]\r\n]: IllegalName: com.intuit.karate.gatling.KarateAction$$Lambda$390/0x000000080149ac40AccAccess, shutting down JVM since 'akka.jvm-exit-on-fatal-error' is enabled for ActorSystem[GatlingSystem]\r\nGatlingSystem]\r\njava.lang.NoClassDefFoundError: IllegalName: com.intuit.karate.gatling.KarateAction$$Lambda$390/0x000000080149ac40AccAccess\r\n        at java.base/java.lang.ClassLoader.preDefineClass(ClassLoader.java:889)\r\n        at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1014)\r\n        at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:877)\r\n        at net.minidev.asm.DynamicClassLoader.defineClass(DynamicClassLoader.java:86)\r\n        at net.minidev.asm.BeansAccessBuilder.bulid(BeansAccessBuilder.java:313)\r\n        at net.minidev.asm.BeansAccess.get(BeansAccess.java:111)\r\n        at net.minidev.json.reader.BeansWriterASM.writeJSONString(BeansWriterASM.java:17)\r\n        at net.minidev.json.JSONValue.writeJSONString(JSONValue.java:586)\r\n        at net.minidev.json.reader.JsonWriter.writeJSONKV(JsonWriter.java:392)\r\n        at net.minidev.json.reader.JsonWriter$7.writeJSONString(JsonWriter.java:145)\r\n        at net.minidev.json.reader.JsonWriter$7.writeJSONString(JsonWriter.java:1)\r\n        at net.minidev.json.JSONValue.writeJSONString(JSONValue.java:586)\r\n        at net.minidev.json.reader.JsonWriter.writeJSONKV(JsonWriter.java:392)\r\n        at net.minidev.json.reader.JsonWriter$7.writeJSONString(JsonWriter.java:145)\r\n        at net.minidev.json.reader.JsonWriter$7.writeJSONString(JsonWriter.java:1)\r\n        at net.minidev.json.JSONObject.writeJSON(JSONObject.java:186)\r\n        at net.minidev.json.JSONObject.toJSONString(JSONObject.java:74)\r\n        at com.jayway.jsonpath.spi.json.JsonSmartJsonProvider.toJson(JsonSmartJsonProvider.java:83)\r\n        at com.jayway.jsonpath.internal.JsonContext.jsonString(JsonContext.java:71)\r\n        at com.intuit.karate.ScriptValue.copy(ScriptValue.java:212)\r\n        at com.intuit.karate.ScriptValueMap.lambda$copy$0(ScriptValueMap.java:72)\r\n        at java.base/java.util.HashMap.forEach(HashMap.java:1333)\r\n        at com.intuit.karate.ScriptValueMap.copy(ScriptValueMap.java:72)\r\n        at com.intuit.karate.core.ScenarioContext.<init>(ScenarioContext.java:393)\r\n        at com.intuit.karate.core.ScenarioContext.copy(ScenarioContext.java:373)\r\n        at com.intuit.karate.core.ScenarioExecutionUnit.<init>(ScenarioExecutionUnit.java:89)\r\n        at com.intuit.karate.core.Feature.getScenarioExecutionUnits(Feature.java:128)\r\n        at com.intuit.karate.core.FeatureExecutionUnit.init(FeatureExecutionUnit.java:75)\r\n        at com.intuit.karate.core.FeatureExecutionUnit.run(FeatureExecutionUnit.java:91)\r\n        at com.intuit.karate.gatling.KarateActor$$anonfun$receive$1.applyOrElse(KarateAction.scala:26)\r\n        at akka.actor.Actor.aroundReceive(Actor.scala:517)\r\n        at akka.actor.Actor.aroundReceive$(Actor.scala:515)\r\n        at com.intuit.karate.gatling.KarateActor.aroundReceive(KarateAction.scala:23)\r\n        at akka.actor.ActorCell.receiveMessage(ActorCell.scala:588)\r\n        at akka.actor.ActorCell.invoke(ActorCell.scala:557)\r\n        at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:258)\r\n        at akka.dispatch.Mailbox.run(Mailbox.scala:225)\r\n        at akka.dispatch.Mailbox.exec(Mailbox.scala:235)\r\n        at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)\r\n        at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)\r\n        at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)\r\n        at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)\r\n```\r\nAny help or advice on what to do about this would be appreciated.", "url": "https://github.com/intuit/karate/issues/936", "user": "chadccollins", "labels": ["bug", "fixed"], "created": "2019-10-23 22:40:02", "closed": "2020-02-16 09:44:40", "commits": {"7d7e8db17339da2ce3f7d180591a9651c82d9510": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 115.00027777777778, "commitsDetails": [{"commitHash": "7d7e8db17339da2ce3f7d180591a9651c82d9510", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["06acbae8ae605a34624bcb6196e7ff5b249bf752"], "nameRev": "7d7e8db17339da2ce3f7d180591a9651c82d9510 tags/v0.9.5^2~90", "commitMessage": "fix gatling value copy edge case ref #936\n", "commitDateTime": "2019-10-25 10:01:08", "authoredDateTime": "2019-10-25 10:01:08", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/ScriptValueMap.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ScriptValueMap.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptValueMap.copy(boolean)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7d7e8db17339da2ce3f7d180591a9651c82d9510"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 1, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.ScriptValueMap.copy(boolean)"]}, {"title": "Support browser using proxy for UI automation", "body": "totally missed this ! propose adding a `proxy` key to the `configure driver`\r\n\r\ngood issue for potential `hacktoberfest` contributors !\r\n\r\nyou will need to support this for both the native Chrome and the WebDriver paths. really don't know about mobile, but assume it is not needed\r\n", "url": "https://github.com/intuit/karate/issues/924", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2019-10-17 03:19:33", "closed": "2020-02-16 09:19:10", "commits": {"0aeefb6e77191084d2a731e01d03e09738d35d10": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}, "db6b06bf6062742821895d9e13501cae35b80efd": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "4fbf704c4f8aad6459e3c4ed113a17be04e83f36": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "4dc0dfa0563c5196fcf86c2433aecec98437352b": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "805bd4a7265395c0a04ed5f81352f59847912402": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "088fcc955460a52b12e31ce2bd5bd3f4bf4c60d7": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "8d8894dda465f958b4be85cdb899c615704905ab": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 122.00027777777778, "commitsDetails": [{"commitHash": "0aeefb6e77191084d2a731e01d03e09738d35d10", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["f2b00f4004a84706baf557454b83d120106528dd"], "nameRev": "0aeefb6e77191084d2a731e01d03e09738d35d10 tags/v0.9.5^2~71", "commitMessage": "attempt to fix #924 but doesnt seem to work\n", "commitDateTime": "2019-12-07 14:09:59", "authoredDateTime": "2019-12-07 14:09:59", "commitGitStats": [{"filePath": "karate-core/README.md", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/DriverOptions.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/chrome/ChromeWebDriver.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/edge/MicrosoftWebDriver.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/firefox/GeckoWebDriver.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/safari/SafariWebDriver.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-netty/src/test/java/com/intuit/karate/ProxyServerRunner.java", "insertions": 18, "deletions": 0, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DriverOptions.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.DriverOptions", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.driver.DriverOptions.getCapabilities(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.driver.DriverOptions.getCapabilities()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ChromeWebDriver.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.chrome.ChromeWebDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MicrosoftWebDriver.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.edge.MicrosoftWebDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "GeckoWebDriver.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.firefox.GeckoWebDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SafariWebDriver.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.safari.SafariWebDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ProxyServerRunner.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ProxyServerRunner", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "db6b06bf6062742821895d9e13501cae35b80efd", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["513e8c21d730c582de806685f72e681cf7257da7"], "nameRev": "db6b06bf6062742821895d9e13501cae35b80efd tags/v0.9.5^2~32", "commitMessage": "simplify w3c webdriver capabilties #924\nso the user can specify whatever is needed and we keep the karare side simple\nthis makes sense as there are so many options, eg saas / remote drivers\n", "commitDateTime": "2020-01-28 16:56:29", "authoredDateTime": "2020-01-28 16:56:29", "commitGitStats": [{"filePath": ".github/CONTRIBUTING.md", "insertions": 9, "deletions": 7, "lines": 16}, {"filePath": "README.md", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "karate-core/README.md", "insertions": 15, "deletions": 5, "lines": 20}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/DriverOptions.java", "insertions": 8, "deletions": 18, "lines": 26}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DriverOptions.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.DriverOptions", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.driver.DriverOptions.getCapabilities(java.lang.String)", "TOT": 11, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 5}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "4fbf704c4f8aad6459e3c4ed113a17be04e83f36", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["db6b06bf6062742821895d9e13501cae35b80efd"], "nameRev": "4fbf704c4f8aad6459e3c4ed113a17be04e83f36 tags/v0.9.5^2~31", "commitMessage": "improve upon prev commit #924\n", "commitDateTime": "2020-01-28 16:58:10", "authoredDateTime": "2020-01-28 16:58:10", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/driver/DriverOptions.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DriverOptions.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.DriverOptions.getCapabilities(java.lang.String)", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 5, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "4dc0dfa0563c5196fcf86c2433aecec98437352b", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["4fbf704c4f8aad6459e3c4ed113a17be04e83f36"], "nameRev": "4dc0dfa0563c5196fcf86c2433aecec98437352b tags/v0.9.5^2~30", "commitMessage": "improve edit upon prev commit #924\n", "commitDateTime": "2020-01-28 16:58:35", "authoredDateTime": "2020-01-28 16:58:35", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/driver/DriverOptions.java", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DriverOptions.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}, {"commitHash": "805bd4a7265395c0a04ed5f81352f59847912402", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["4dc0dfa0563c5196fcf86c2433aecec98437352b"], "nameRev": "805bd4a7265395c0a04ed5f81352f59847912402 tags/v0.9.5^2~29", "commitMessage": "update w3c capabilities handling #924\nalso updated chrome-web-driver to be w3c compliant for latest chrome version\nsome new problems with safari, will defer\n", "commitDateTime": "2020-01-28 18:57:17", "authoredDateTime": "2020-01-28 18:57:17", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/driver/DriverOptions.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/chrome/ChromeWebDriver.java", "insertions": 0, "deletions": 34, "lines": 34}, {"filePath": "karate-demo/src/test/java/driver/core/test-01.feature", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "karate-demo/src/test/java/driver/core/test-04.feature", "insertions": 10, "deletions": 6, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DriverOptions.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.DriverOptions.getCapabilities(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ChromeWebDriver.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.chrome.ChromeWebDriver.getElementKey()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.driver.chrome.ChromeWebDriver.getJsonForInput(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.driver.chrome.ChromeWebDriver.getJsonForHandle(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.driver.chrome.ChromeWebDriver.getJsonForFrame(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.driver.chrome.ChromeWebDriver.switchFrame(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "088fcc955460a52b12e31ce2bd5bd3f4bf4c60d7", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["805bd4a7265395c0a04ed5f81352f59847912402"], "nameRev": "088fcc955460a52b12e31ce2bd5bd3f4bf4c60d7 tags/v0.9.5^2~28", "commitMessage": "always use w3c driver capabilities alwaysMatch  #924\n", "commitDateTime": "2020-01-28 20:10:32", "authoredDateTime": "2020-01-28 20:10:32", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/driver/DriverOptions.java", "insertions": 9, "deletions": 7, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DriverOptions.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.DriverOptions.getCapabilities(java.lang.String)", "TOT": 21, "UPD": 8, "INS": 5, "MOV": 5, "DEL": 3}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "8d8894dda465f958b4be85cdb899c615704905ab", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["ba49bcd7c3e81ebcda7b5129d7cab2827212ddd1"], "nameRev": "8d8894dda465f958b4be85cdb899c615704905ab tags/v0.9.5^2~23", "commitMessage": "confirmed to work with aws device farm and selenium grid standalone\nalso changes to what was discussed in #924\nso now it is [webDriverSession] and not [webDriverCapabilities] so user has full control over the\nwebdriver POST to /session payload - which will take care of any remote / saas situation\nand quirks of implementations like selenium grid\nintroduced [httpConfig] key and now you can configure the http client e.g. readTimeout which is\nneeded for aws as it can take a long time for a device / browser desktop to be provisioned\nsee readme edits for details\n", "commitDateTime": "2020-01-30 20:24:33", "authoredDateTime": "2020-01-30 20:24:33", "commitGitStats": [{"filePath": "karate-core/README.md", "insertions": 27, "deletions": 5, "lines": 32}, {"filePath": "karate-core/src/main/java/com/intuit/karate/Http.java", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "karate-core/src/main/java/com/intuit/karate/Match.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/DriverOptions.java", "insertions": 40, "deletions": 23, "lines": 63}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/android/AndroidDriver.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/chrome/Chrome.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/chrome/ChromeWebDriver.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/edge/EdgeDevToolsDriver.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/edge/MicrosoftWebDriver.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/firefox/GeckoWebDriver.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/ios/IosDriver.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/safari/SafariWebDriver.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/windows/WinAppDriver.java", "insertions": 2, "deletions": 3, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Http.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Http.forUrl(com.intuit.karate.LogAppender,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Http", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Http.config(java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Http.url(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Match.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Match.config(java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DriverOptions.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.DriverOptions", "TOT": 5, "UPD": 3, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.driver.DriverOptions.getCapabilities(java.lang.String)", "TOT": 16, "UPD": 8, "INS": 0, "MOV": 6, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.driver.DriverOptions.getCapabilities()", "TOT": 6, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.driver.DriverOptions.getHttp()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.driver.DriverOptions.getUrlBase()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.driver.DriverOptions.startProcess()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.driver.DriverOptions.getSession(java.lang.String)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.driver.DriverOptions.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.driver.DriverOptions.getWebDriverSessionPayload()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AndroidDriver.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.android.AndroidDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 3}]}, {"spoonFilePath": "Chrome.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.chrome.Chrome.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 3}]}, {"spoonFilePath": "ChromeWebDriver.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.chrome.ChromeWebDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 3}]}, {"spoonFilePath": "EdgeDevToolsDriver.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.edge.EdgeDevToolsDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "MicrosoftWebDriver.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.edge.MicrosoftWebDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 3}]}, {"spoonFilePath": "GeckoWebDriver.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.firefox.GeckoWebDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 3}]}, {"spoonFilePath": "IosDriver.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.ios.IosDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 3}]}, {"spoonFilePath": "SafariWebDriver.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.safari.SafariWebDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 3}]}, {"spoonFilePath": "WinAppDriver.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.driver.windows.WinAppDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 3}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0aeefb6e77191084d2a731e01d03e09738d35d10", "db6b06bf6062742821895d9e13501cae35b80efd", "4fbf704c4f8aad6459e3c4ed113a17be04e83f36", "4dc0dfa0563c5196fcf86c2433aecec98437352b", "805bd4a7265395c0a04ed5f81352f59847912402", "088fcc955460a52b12e31ce2bd5bd3f4bf4c60d7", "8d8894dda465f958b4be85cdb899c615704905ab"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 7, "gitStatsSummary": {"insertions": 131, "deletions": 121, "lines": 252, "gitFilesChange": 12}, "spoonStatsSummary": {"TOT": 156.0, "UPD": 32.0, "INS": 46.0, "MOV": 29.0, "DEL": 49.0, "spoonFilesChanged": 13, "spoonMethodsChanged": 29}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/driver", "karate-core/src/main/java/com/intuit/karate/driver/chrome", "karate-core/src/main/java/com/intuit/karate/driver/edge", "karate-core/src/main/java/com/intuit/karate/driver/firefox", "karate-core/src/main/java/com/intuit/karate/driver/safari", "karate-core/src/main/java/com/intuit/karate", "karate-core/src/main/java/com/intuit/karate/driver/windows", "karate-core/src/main/java/com/intuit/karate/driver/ios", "karate-core/src/main/java/com/intuit/karate/driver/android"], "changesInPackagesSPOON": ["com.intuit.karate.driver.DriverOptions.getCapabilities(java.lang.String)", "com.intuit.karate.driver.DriverOptions", "com.intuit.karate.driver.edge.MicrosoftWebDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "com.intuit.karate.driver.chrome.ChromeWebDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "com.intuit.karate.driver.DriverOptions.getCapabilities()", "com.intuit.karate.driver.firefox.GeckoWebDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "com.intuit.karate.driver.safari.SafariWebDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "com.intuit.karate.driver.DriverOptions.getSession(java.lang.String)", "com.intuit.karate.driver.chrome.Chrome.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "com.intuit.karate.driver.ios.IosDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "com.intuit.karate.driver.DriverOptions.getUrlBase()", "com.intuit.karate.driver.chrome.ChromeWebDriver.getElementKey()", "com.intuit.karate.driver.chrome.ChromeWebDriver.getJsonForInput(java.lang.String)", "com.intuit.karate.Http", "com.intuit.karate.driver.windows.WinAppDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "com.intuit.karate.driver.chrome.ChromeWebDriver.getJsonForFrame(java.lang.String)", "com.intuit.karate.ProxyServerRunner", "com.intuit.karate.Http.url(java.lang.String)", "com.intuit.karate.driver.edge.EdgeDevToolsDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "com.intuit.karate.driver.chrome.ChromeWebDriver.getJsonForHandle(java.lang.String)", "com.intuit.karate.driver.DriverOptions.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "com.intuit.karate.driver.DriverOptions.getWebDriverSessionPayload()", "com.intuit.karate.driver.DriverOptions.getHttp()", "com.intuit.karate.Http.config(java.util.Map)", "com.intuit.karate.Http.forUrl(com.intuit.karate.LogAppender,java.lang.String)", "com.intuit.karate.Match.config(java.util.Map)", "com.intuit.karate.driver.chrome.ChromeWebDriver.switchFrame(java.lang.String)", "com.intuit.karate.driver.android.AndroidDriver.start(com.intuit.karate.core.ScenarioContext,java.util.Map,com.intuit.karate.LogAppender)", "com.intuit.karate.driver.DriverOptions.startProcess()"]}, {"title": "Add default Chrome executable path for Linux", "body": "It seems like `com.intuit.karate.driver.chrome.Chrome#start` only checks for default paths for _Windows_ and _Mac_.\r\n\r\n1) Is that worth to add a `DEFAULT_PATH_LINUX` pointing to `/usr/bin/google-chrome`?\r\n\r\n2) Also it seems that I'm not able to instantiate `Chrome` passing **both** `linux path` and chrome `options` map.\r\n\r\nIf yes, I could do that (also wanted to check if is there any other related places to add default paths for Linux).", "url": "https://github.com/intuit/karate/issues/923", "user": "rodrigocprates", "labels": ["bug", "fixed", "hacktoberfest"], "created": "2019-10-16 19:17:10", "closed": "2020-02-16 09:44:53", "commits": {}, "ttf": 122.00027777777778, "commitsDetails": []}, {"title": "match != fails with two integers", "body": "A scenario consisting solely of:\r\n\r\n`Then match 456 != 123`\r\n\r\nFails with:\r\n\r\n`testingEquals.feature:8 - path: $, actual: 456, NOT expected: 123, reason: equal`\r\n\r\nUsing 0.9.4. Using `assert` instead of `match` works as expected, but I don't see why `match !=` wouldn't work here based on its section of the documentation.", "url": "https://github.com/intuit/karate/issues/917", "user": "ewexlerr", "labels": ["bug", "fixed", "hacktoberfest"], "created": "2019-10-09 17:38:32", "closed": "2020-02-16 09:45:10", "commits": {}, "ttf": 129.00027777777777, "commitsDetails": []}, {"title": "lowerCaseResponseHeaders should only convert keys not all values", "body": "as oer discussion here: https://stackoverflow.com/q/58014021/143475", "url": "https://github.com/intuit/karate/issues/900", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2019-09-19 16:51:09", "closed": "2020-02-16 09:45:54", "commits": {}, "ttf": 149.00027777777777, "commitsDetails": []}, {"title": "Issue: called feature doesn't have driver variable or its functions", "body": "`driver` variable is not available for called feature.\r\n\r\n**main feature**\r\n\r\n```\r\nGiven driver 'https://google.com'\r\n* def search = call read(\"classpath:reuse/search.feature\")\r\n```\r\n\r\nhere `driver <URL>` will initialize driver variable.\r\n\r\n**called feature**\r\n\r\n`And driver.input('input[name=q]', 'karate dsl')`\r\n\r\nthe same `driver` variable is not available in called feature leaving `ReferenceError: \"driver\" is not defined in <eval>`\r\n\r\n[KarateDriverTest.zip](https://github.com/intuit/karate/files/3627887/KarateDriverTest.zip)\r\n\r\n\r\n\r\n", "url": "https://github.com/intuit/karate/issues/899", "user": "babusekaran", "labels": ["bug"], "created": "2019-09-18 18:39:45", "closed": "2019-09-19 01:20:02", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Twice the number of scenarios are displaying in the console and reports when specifying a fully qualified classpath in karate.options", "body": "[triple-slash.zip](https://github.com/intuit/karate/files/3495070/triple-slash.zip)\r\n\r\nrepro steps\r\n\r\nreferencing the attached project run the following command. (assuming the folder \"git\" is at the root of your drive).\r\n\r\nOn linux/mac\r\ngradle clean test -b \"/Git/triple-slash/build.gradle\" -Dtest=KarateRunner -Dkarate.options=\"classpath:Git/triple-slash/src/test/java/org/company/tests\"\r\n\r\non windows\r\ngradle clean test -b \"c:\\Git\\triple-slash\\build.gradle\" -Dtest=KarateRunner -Dkarate.options=\"classpath:c:\\Git\\triple-slash\\src\\test\\java\\org\\company\\tests\"\r\n\r\nexpected\r\nthere are 3 feature files below the given classpath in the gradle command\r\neach file will run 6 tests for a total of 6 x 3 = 18 tests/scenarios\r\nthe console output and reports should both show 18 scenarios\r\n\r\nactual\r\nthe console output shows 36 scenarios\r\nthe timeline report shows 36 scenarios\r\nsometimes the cucumber reports will show 36 scenarios\r\n\r\ntwice the number of scenarios are shown when specifying a fully qualified classpath path in karate.options.  the duplicated scenarios are interesting.  they are prefixed with a triple slash /// and their result has no impact on for example the cucumber report under /cucumber-html-reports.", "url": "https://github.com/intuit/karate/issues/861", "user": "kirksl", "labels": ["bug", "fixed"], "created": "2019-08-13 02:41:16", "closed": "2020-02-16 09:46:34", "commits": {"869bd84ee7d8610ae88e6147044e1a81b0edfefd": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 187.00027777777777, "commitsDetails": [{"commitHash": "869bd84ee7d8610ae88e6147044e1a81b0edfefd", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["2294c33f3507e6366ad90659fd21b47715265e96"], "nameRev": "869bd84ee7d8610ae88e6147044e1a81b0edfefd tags/v0.9.5^2~216", "commitMessage": "tweak file scanning routine to detect absolute paths and de-dup #861\n", "commitDateTime": "2019-08-16 21:51:28", "authoredDateTime": "2019-08-16 21:51:28", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/FileUtils.java", "insertions": 18, "deletions": 2, "lines": 20}, {"filePath": "karate-core/src/test/java/com/intuit/karate/FileUtilsTest.java", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FileUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.FileUtils.collectFeatureFiles(java.net.URL,java.lang.String,java.util.List)", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 5, "DEL": 0}]}, {"spoonFilePath": "FileUtilsTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.FileUtilsTest.testGetClasspathAbsolute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["869bd84ee7d8610ae88e6147044e1a81b0edfefd"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 18, "deletions": 2, "lines": 20, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8, "UPD": 0, "INS": 3, "MOV": 5, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.FileUtils.collectFeatureFiles(java.net.URL,java.lang.String,java.util.List)"]}, {"title": "Tests freeze due to too many files (Linux/Bamboo)", "body": "Hey Peter, I work in a project that currently has over 850 Scenarios across around 100 files, where most of them call a cached login scenario (checks if auth token exists, otherwise call uncached login) and many of them have internal calls to generic versions of the API under test.\r\n\r\nWe're currently having issues where at some point when running through Bamboo (Linux), the amount of opened files skyrocket and just freezes the process.\r\n\r\nFrom some digging around it seems to be happening at the Runner.parallel method (JUnit 4, I believe), and the amount of files opened is over 1100 in the environment.\r\n\r\nIs it possible to check if there is a way to close whatever file (or input stream) after a scenario or feature file is completed?\r\n\r\nIf this is needed, I'll try creating a template project with this many scenarios.\r\n\r\nThanks in advance.", "url": "https://github.com/intuit/karate/issues/860", "user": "Gokuroro", "labels": ["bug", "fixed"], "created": "2019-08-13 01:09:57", "closed": "2020-02-16 09:46:45", "commits": {"3956a2dab9efa6240bd6a0f3804f75d43fed2e6f": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 187.00027777777777, "commitsDetails": [{"commitHash": "3956a2dab9efa6240bd6a0f3804f75d43fed2e6f", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["486c470ad261081197632536d4dffc0e67dc7aa6"], "nameRev": "3956a2dab9efa6240bd6a0f3804f75d43fed2e6f tags/v0.9.5^2~220", "commitMessage": "revamp of logging to use threadlocal as proposed in #860\nthis really simplifies things, we no longer create hundreds of files, in hindsight a bad design\nbut it evolved out of the knee-jerk fix for the initial oom problem - see ticket for details\nmostly sure that even ui and the driver log + called feature driver inheritance works\nthere may be some breaks, but should be found relatively quickly over the next week\n", "commitDateTime": "2019-08-15 23:24:07", "authoredDateTime": "2019-08-15 23:24:07", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Http.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "karate-core/src/main/java/com/intuit/karate/Logger.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/Match.java", "insertions": 5, "deletions": 8, "lines": 13}, {"filePath": "karate-core/src/main/java/com/intuit/karate/StepActions.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/ExecutionContext.java", "insertions": 1, "deletions": 12, "lines": 13}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/Feature.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/FeatureBackend.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/FeatureExecutionUnit.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/ScenarioContext.java", "insertions": 18, "deletions": 19, "lines": 37}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/ScenarioExecutionUnit.java", "insertions": 29, "deletions": 42, "lines": 71}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/DevToolsDriver.java", "insertions": 1, "deletions": 10, "lines": 11}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/Driver.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/DriverOptions.java", "insertions": 22, "deletions": 16, "lines": 38}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/WebDriver.java", "insertions": 1, "deletions": 8, "lines": 9}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/android/AndroidDriver.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/chrome/Chrome.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/chrome/ChromeWebDriver.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/edge/EdgeDevToolsDriver.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/edge/MicrosoftWebDriver.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/firefox/GeckoWebDriver.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/ios/IosDriver.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/safari/SafariWebDriver.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "karate-core/src/main/java/com/intuit/karate/driver/windows/WinAppDriver.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "karate-core/src/main/java/com/intuit/karate/shell/Command.java", "insertions": 8, "deletions": 4, "lines": 12}, {"filePath": "karate-core/src/main/java/com/intuit/karate/shell/FileLogAppender.java", "insertions": 6, "deletions": 10, "lines": 16}, {"filePath": "karate-junit4/src/main/java/com/intuit/karate/junit4/FeatureInfo.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/http/JavaHttpTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/selenium/SampleRunner.java", "insertions": 0, "deletions": 15, "lines": 15}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/selenium/sample.feature", "insertions": 0, "deletions": 78, "lines": 78}, {"filePath": "karate-junit5/src/main/java/com/intuit/karate/junit5/FeatureNode.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-ui/src/main/java/com/intuit/karate/ui/AppSession.java", "insertions": 9, "deletions": 4, "lines": 13}, {"filePath": "karate-ui/src/main/java/com/intuit/karate/ui/LogPanel.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "karate-ui/src/main/java/com/intuit/karate/ui/ScenarioPanel.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "karate-ui/src/main/java/com/intuit/karate/ui/StepPanel.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "karate-ui/src/main/java/com/intuit/karate/ui/TextAreaLogAppender.java", "insertions": 6, "deletions": 10, "lines": 16}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["3956a2dab9efa6240bd6a0f3804f75d43fed2e6f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 166, "deletions": 207, "lines": 373, "gitFilesChange": 32}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/shell", "karate-core/src/main/java/com/intuit/karate/core", "karate-ui/src/main/java/com/intuit/karate/ui", "karate-core/src/main/java/com/intuit/karate/driver/firefox", "karate-junit4/src/main/java/com/intuit/karate/junit4", "karate-core/src/main/java/com/intuit/karate/driver/edge", "karate-core/src/main/java/com/intuit/karate/driver/chrome", "karate-core/src/main/java/com/intuit/karate/driver/ios", "karate-core/src/main/java/com/intuit/karate", "karate-core/src/main/java/com/intuit/karate/driver", "karate-core/src/main/java/com/intuit/karate/driver/android", "karate-junit5/src/main/java/com/intuit/karate/junit5", "karate-core/src/main/java/com/intuit/karate/driver/safari", "karate-core/src/main/java/com/intuit/karate/driver/windows"]}, {"title": "Match xml regex doesn't work (0.9.4)", "body": "This doesn't work in 0.9.4\r\n\r\nFeature: Test xml match\r\n  Scenario: Test xml match boolean regex\r\n    * def aXml =\r\n    \"\"\"\r\n      < root >\r\n        < name >Jhon< /name >\r\n        < active >false< /active >\r\n        < age >30< /age >\r\n      < /root >\r\n\r\n    \"\"\"\r\n   * match aXml //active == '#regex (false|true)'\r\n\r\nError:\r\nxmlMatch.feature:13 - syntax error, expected '==' for match\r\n\r\nWas working in 0.8.0.  (I'm trying to upgrade my projects from 0.8.0 to 0.9.4\r\n\r\nRegards,\r\nPrashant", "url": "https://github.com/intuit/karate/issues/847", "user": "pshrm", "labels": ["bug", "fixed"], "created": "2019-07-29 09:18:12", "closed": "2020-02-16 09:47:05", "commits": {"d820986338b695be4cd6d4665b053b31b936fed1": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 202.00027777777777, "commitsDetails": [{"commitHash": "d820986338b695be4cd6d4665b053b31b936fed1", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["713e3087369b1a51cb66e6984e43c60f2935cb60"], "nameRev": "d820986338b695be4cd6d4665b053b31b936fed1 tags/v0.9.5^2~266", "commitMessage": "match step parser handle xpath and paren on rhs #847\n", "commitDateTime": "2019-07-29 06:43:42", "authoredDateTime": "2019-07-29 06:43:42", "commitGitStats": [{"filePath": "karate-core/README.md", "insertions": 46, "deletions": 48, "lines": 94}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/MatchStep.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "karate-core/src/test/java/com/intuit/karate/{ => core}/MatchStepTest.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MatchStep.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.MatchStep", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MatchStepTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.MatchStepTest.test(java.lang.String,com.intuit.karate.core.MatchType,java.lang.String,java.lang.String,java.lang.String)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.MatchStepTest.testMatchStep()", "TOT": 30, "UPD": 30, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.core.MatchStepTest.testMatchStep()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d820986338b695be4cd6d4665b053b31b936fed1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/core"], "changesInPackagesSPOON": ["com.intuit.karate.core.MatchStep"]}, {"title": "Gatling karateFeature seems to be blocking", "body": "We are seeing some unexpected behaviour when running long-lasting user simulation scenarios with karate-gatling. \r\n\r\nWith karate, we have defined a user scenario where a user logs in, waits a few seconds, navigates, waits again, opens a document, spends some time reading, etc etc. The scenario takes about 2minutes and works as expected. However, the load model does not work as expected when defining more than 8 concurrent users. For example, when using atOnceUsers(20), we would expect a straight line up, a steady line of 20 active users during 2 minutes, and then a straight line down to zero users. The test should not take much more than 2 minutes. \r\nHowever, we get the following behaviour:\r\n![image](https://user-images.githubusercontent.com/7383853/61879284-096dfd80-aef3-11e9-9e55-453bc6fffc68.png)\r\nAs you can see, the 20 scenarios are started at the same time, but only 8 of them are executed in parallel. Also, the test takes about 6 minutes. \r\n\r\nThis lead to our conclusion that when using karate-gatling, the number of concurrent scenarios seem to be limited by the clients logical cpus. \r\n\r\nWe have tried with a simple Scala scenario, and then everyting works as expected and the scenario is executing in parallel for all users:\r\n![image](https://user-images.githubusercontent.com/7383853/61880293-ea706b00-aef4-11e9-98f9-31d16ecab143.png)\r\n\r\nWe copied our setup from https://github.com/ptrthomas/karate-gatling-demo, only the scenario feature files and feeders are different. \r\n\r\nAny ideas on this? We certainly hope it can be fixed, we very happy with the readable and reusable way our performance test is setup now with karate features. \r\n\r\n", "url": "https://github.com/intuit/karate/issues/845", "user": "gvermoen", "labels": ["bug", "fixed"], "created": "2019-07-25 14:00:00", "closed": "2020-02-16 09:47:16", "commits": {"8b3952e6d45f308aae38f0340e34faf276ecf124": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "315127ccbfc8139734bd8f7c1a89f005b3f9fad4": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 205.00027777777777, "commitsDetails": [{"commitHash": "8b3952e6d45f308aae38f0340e34faf276ecf124", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["fc2e47f99d1351bafc9dbefd360ea9531fb3bbf4"], "nameRev": "8b3952e6d45f308aae38f0340e34faf276ecf124 tags/v0.9.5^2~268", "commitMessage": "gatling pause now on actor not thread for #845\nsee #564 for some context, this was attempted earlier but removed when the scenario execution\nparallel implementation was faulty which should no longer be the case\n", "commitDateTime": "2019-07-28 09:03:48", "authoredDateTime": "2019-07-28 09:03:48", "commitGitStats": [{"filePath": "karate-gatling/README.md", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "karate-gatling/src/main/scala/com/intuit/karate/gatling/KarateAction.scala", "insertions": 23, "deletions": 7, "lines": 30}, {"filePath": "karate-gatling/src/test/scala/mock/CatsSimulation.scala", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "315127ccbfc8139734bd8f7c1a89f005b3f9fad4", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["126c6e2347860cf4e4333893de649417489656e1"], "nameRev": "315127ccbfc8139734bd8f7c1a89f005b3f9fad4 tags/v0.9.5^2~263", "commitMessage": "improve exported gatling pause function to take non-integer arg #845\n", "commitDateTime": "2019-07-30 11:56:06", "authoredDateTime": "2019-07-30 11:56:06", "commitGitStats": [{"filePath": "karate-gatling/src/main/scala/com/intuit/karate/gatling/KarateAction.scala", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["315127ccbfc8139734bd8f7c1a89f005b3f9fad4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-gatling/src/main/scala/com/intuit/karate/gatling/KarateAction.scala"]}, {"title": "`mvn test` doesn't run tests", "body": "Hi all,\r\n\r\nI'm having trouble executing Karate tests using Maven.\r\nAny help is welcome ;)\r\n\r\n# Steps  to reproduce : \r\n\r\n## Create a new project using `archetype`\r\n\r\n```\r\nmvn archetype:generate \\\r\n-DarchetypeGroupId=com.intuit.karate \\\r\n-DarchetypeArtifactId=karate-archetype \\\r\n-DarchetypeVersion=0.9.4 \\\r\n-DgroupId=com.mycompany \\\r\n-DartifactId=myproject\r\n```\r\n## Run tests\r\n\r\n```\r\n$ cd myproject\r\n$ mvn test\r\n```\r\n# Expected\r\nTests are compiled, then run.\r\n\r\n# Actual\r\nTests are compiled, but never run. The folder `target/surefire-reports` doesn't exist.\r\n\r\nHere is the `mvn test` output : \r\n\r\n```\r\n[INFO] Scanning for projects...\r\n[INFO] \r\n[INFO] ----------------------< com.mycompany:myproject >-----------------------\r\n[INFO] Building myproject 1.0-SNAPSHOT\r\n[INFO] --------------------------------[ jar ]---------------------------------\r\n[INFO] \r\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ myproject ---\r\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\r\n[INFO] skip non existing resourceDirectory /tmp/karate/myproject/src/main/resources\r\n[INFO] \r\n[INFO] --- maven-compiler-plugin:3.6.0:compile (default-compile) @ myproject ---\r\n[INFO] Nothing to compile - all classes are up to date\r\n[INFO] \r\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ myproject ---\r\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\r\n[INFO] Copying 3 resources\r\n[INFO] \r\n[INFO] --- maven-compiler-plugin:3.6.0:testCompile (default-testCompile) @ myproject ---\r\n[INFO] Changes detected - recompiling the module!\r\n[INFO] Compiling 2 source files to /tmp/karate/myproject/target/test-classes\r\n[INFO] \r\n[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ myproject ---\r\n[INFO] Surefire report directory: /tmp/karate/myproject/target/surefire-reports\r\n\r\n-------------------------------------------------------\r\n T E S T S\r\n-------------------------------------------------------\r\n\r\nResults :\r\n\r\nTests run: 0, Failures: 0, Errors: 0, Skipped: 0\r\n\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD SUCCESS\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  1.486 s\r\n[INFO] Finished at: 2019-07-09T11:18:47+02:00\r\n[INFO] ------------------------------------------------------------------------\r\n```\r\n\r\n# About my environment \r\n\r\n```\r\n$ mvn --version\r\nApache Maven 3.6.1 (NON-CANONICAL_2019-05-22T16:10:23+02:00_root; 2019-05-22T16:10:23+02:00)\r\nMaven home: /opt/maven\r\nJava version: 1.8.0_222, vendor: Oracle Corporation, runtime: /usr/lib/jvm/java-8-openjdk/jre\r\nDefault locale: fr_FR, platform encoding: UTF-8\r\nOS name: \"linux\", version: \"5.1.15-arch1-1-arch\", arch: \"amd64\", family: \"unix\"\r\n```\r\n\r\n\r\nThanks :)\r\n", "url": "https://github.com/intuit/karate/issues/823", "user": "Chralu", "labels": ["bug", "fixed"], "created": "2019-07-09 09:36:39", "closed": "2020-02-16 09:48:14", "commits": {}, "ttf": 222.00027777777777, "commitsDetails": []}, {"title": "WebSocketOptions doesn't use the provided \"headers\" map", "body": "Based on the following code:\r\n\r\n````\r\npublic WebSocketOptions(String url, Map<String, Object> options) {\r\n        this.uri = URI.create(url);\r\n        ssl = \"wss\".equalsIgnoreCase(uri.getScheme());\r\n        port = uri.getPort() == -1 ? (ssl ? 443 : 80) : uri.getPort();\r\n        if (options != null) {\r\n            subProtocol = (String) options.get(\"subProtocol\");\r\n            Integer temp = (Integer) options.get(\"maxPayloadSize\");\r\n            if (temp != null) {\r\n                maxPayloadSize = temp;\r\n            }\r\n        }\r\n    }\r\n````\r\n\r\nThe \"headers\" map is not used anywhere as opposed to the docs https://github.com/intuit/karate#websocket", "url": "https://github.com/intuit/karate/issues/818", "user": "khanguyen88", "labels": ["bug", "fixed"], "created": "2019-07-05 13:56:41", "closed": "2019-07-06 02:47:20", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Empty string as response causes JSON assertions to pass", "body": "From discussion here: https://stackoverflow.com/q/56784911/143475\r\n\r\nExample, this passes:\r\n\r\n```cucumber\r\n* def response = ''\r\nThen match $.orgId == '#present'\r\n```", "url": "https://github.com/intuit/karate/issues/814", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2019-06-27 09:32:12", "closed": "2019-07-06 02:47:27", "commits": {"77c2ad75a2ea21c7a0cbe75f09283b807cd4bae8": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "77c2ad75a2ea21c7a0cbe75f09283b807cd4bae8", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["8ae782fa7328f7c9fd65df0912a41dce4fb22b36"], "nameRev": "77c2ad75a2ea21c7a0cbe75f09283b807cd4bae8 tags/v0.9.4~9", "commitMessage": "fix edge case for match empty string with json-path #814\n", "commitDateTime": "2019-06-27 15:01:40", "authoredDateTime": "2019-06-27 15:01:40", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "karate-core/src/test/java/com/intuit/karate/ScriptTest.java", "insertions": 8, "deletions": 1, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.matchScriptValue(com.intuit.karate.core.MatchType,com.intuit.karate.ScriptValue,java.lang.String,java.lang.String,com.intuit.karate.core.ScenarioContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScriptTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptTest.testJsonPathWhenActualIsEmptyString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["77c2ad75a2ea21c7a0cbe75f09283b807cd4bae8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 0, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.Script.matchScriptValue(com.intuit.karate.core.MatchType,com.intuit.karate.ScriptValue,java.lang.String,java.lang.String,com.intuit.karate.core.ScenarioContext)"]}, {"title": "0.9.3 Breaking Change to File Loading", "body": "### Problem\r\n\r\nThere was a breaking change (undocumented afaik) that exists when loading files into local scope. I tested this with both YAML and JSON and was able to replicate across both formats.\r\n\r\n```\r\n  Scenario: Load the yaml file directly into local scope - works in 0.9.2, doesnt work in 0.9.3\r\n\r\n    * call read ('constants.yaml')\r\n    * match foo == 'bar'\r\n\r\n\r\n  Scenario: Load the yaml file into a variable - works in both versions\r\n\r\n    * def constants = read('constants.yaml')\r\n    * match constants.foo == 'bar'\r\n```\r\n\r\n### How to Replicate\r\n\r\nRun the sample project (attached) and all tests will pass. Change the karate version in the pom file to 0.9.3 and two of the 4 tests will fail.\r\n\r\n[testproj.zip](https://github.com/intuit/karate/files/3302707/testproj.zip)\r\n", "url": "https://github.com/intuit/karate/issues/807", "user": "bbchristians", "labels": ["bug", "fixed"], "created": "2019-06-18 17:23:31", "closed": "2019-07-06 02:48:08", "commits": {"f75a881d372f01088244163017abdfbb3961508c": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 17.00027777777778, "commitsDetails": [{"commitHash": "f75a881d372f01088244163017abdfbb3961508c", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["0ec1febaee171967b730af5e9df2cd8799cfb26d"], "nameRev": "f75a881d372f01088244163017abdfbb3961508c tags/v0.9.4~26", "commitMessage": "java lambda functions now first-class data type #807\n", "commitDateTime": "2019-06-19 13:03:15", "authoredDateTime": "2019-06-19 13:03:15", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 26, "deletions": 12, "lines": 38}, {"filePath": "karate-core/src/main/java/com/intuit/karate/ScriptValue.java", "insertions": 15, "deletions": 4, "lines": 19}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/ScriptBridge.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/{ReadFromRelativePathRunner.java => ReadRunner.java}", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/cat.json", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/read-from-relative-path.feature", "insertions": 0, "deletions": 9, "lines": 9}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/read.feature", "insertions": 23, "deletions": 0, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.evalFunctionCall(jdk.nashorn.api.scripting.ScriptObjectMirror,java.lang.Object,com.intuit.karate.core.ScenarioContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Script.call(java.lang.String,java.lang.String,com.intuit.karate.core.ScenarioContext,boolean)", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Script.toXmlDoc(com.intuit.karate.ScriptValue,com.intuit.karate.core.ScenarioContext)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.Script.toJsonDoc(com.intuit.karate.ScriptValue,com.intuit.karate.core.ScenarioContext)", "TOT": 7, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.Script.evalJavaFunctionCall(java.util.function.Function,java.lang.Object,com.intuit.karate.core.ScenarioContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScriptValue.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptValue.isUnknownType()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptValue.invokeFunction(com.intuit.karate.core.ScenarioContext,java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptValue.copy(boolean)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptValue.isJson()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptValue.Type", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptValue.getTypeAsShortString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptValue", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "ScriptBridge.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.ScriptBridge.listen(long,jdk.nashorn.api.scripting.ScriptObjectMirror)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.core.ScriptBridge.call(java.lang.String,java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReadRunner.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.demos.ReadFromRelativePathRunner", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f75a881d372f01088244163017abdfbb3961508c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 43, "deletions": 18, "lines": 61, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 33, "UPD": 12, "INS": 12, "MOV": 6, "DEL": 3, "spoonFilesChanged": 4, "spoonMethodsChanged": 15}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate", "karate-core/src/main/java/com/intuit/karate/core"], "changesInPackagesSPOON": ["com.intuit.karate.ScriptValue.copy(boolean)", "com.intuit.karate.ScriptValue.isUnknownType()", "com.intuit.karate.Script.toXmlDoc(com.intuit.karate.ScriptValue,com.intuit.karate.core.ScenarioContext)", "com.intuit.karate.Script.toJsonDoc(com.intuit.karate.ScriptValue,com.intuit.karate.core.ScenarioContext)", "com.intuit.karate.ScriptValue.invokeFunction(com.intuit.karate.core.ScenarioContext,java.lang.Object)", "com.intuit.karate.junit4.demos.ReadFromRelativePathRunner", "com.intuit.karate.Script.evalJavaFunctionCall(java.util.function.Function,java.lang.Object,com.intuit.karate.core.ScenarioContext)", "com.intuit.karate.ScriptValue.getTypeAsShortString()", "com.intuit.karate.ScriptValue.Type", "com.intuit.karate.core.ScriptBridge.listen(long,jdk.nashorn.api.scripting.ScriptObjectMirror)", "com.intuit.karate.Script.evalFunctionCall(jdk.nashorn.api.scripting.ScriptObjectMirror,java.lang.Object,com.intuit.karate.core.ScenarioContext)", "com.intuit.karate.ScriptValue", "com.intuit.karate.Script.call(java.lang.String,java.lang.String,com.intuit.karate.core.ScenarioContext,boolean)", "com.intuit.karate.core.ScriptBridge.call(java.lang.String,java.lang.Object)", "com.intuit.karate.ScriptValue.isJson()"]}, {"title": "configure proxy edge case JSONArray not convert-able to Nashorn ScriptObjectMirror", "body": "as reported here: https://stackoverflow.com/q/56555491/143475", "url": "https://github.com/intuit/karate/issues/802", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2019-06-12 08:36:04", "closed": "2019-07-06 02:48:27", "commits": {"b31c60757744fbaa0489bb00dcccdbabe08445a8": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 23.00027777777778, "commitsDetails": [{"commitHash": "b31c60757744fbaa0489bb00dcccdbabe08445a8", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["b3603d257d5235a66d32b41a37c47cedf750c3e6"], "nameRev": "b31c60757744fbaa0489bb00dcccdbabe08445a8 tags/v0.9.4~33", "commitMessage": "fix for karate.configure proxy #802\n", "commitDateTime": "2019-06-12 13:59:07", "authoredDateTime": "2019-06-12 13:59:07", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Config.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/config/karate-config-custom.js", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/dev.feature", "insertions": 0, "deletions": 4, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Config.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Config.configure(java.lang.String,com.intuit.karate.ScriptValue)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b31c60757744fbaa0489bb00dcccdbabe08445a8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 4, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.Config.configure(java.lang.String,com.intuit.karate.ScriptValue)"]}, {"title": "multipart/form-data endpoint success from REST client but fails in Karate tests", "body": "The stack overflow discussion is here:\r\n\r\n[Stackoverflow discussion](https://stackoverflow.com/questions/55640639/karate-how-to-test-multipart-form-data-endpoint)\r\n\r\nA mimimal, complete and verifiable example project may be found here:\r\n[mimimal, complete and verifiable example](https://github.com/jesimone57/multipart-form-api-example)\r\n\r\nTo reproduce follow README instructions to clone and build project.  You can use any REST client such are ARC or Postman to verify the /document endpoint works correctly.  An ARC screen  shot is included. Note: the stack overflow page has a Postman screenshot.  Both requests will post a request which returns status 200 when server is running.\r\n\r\nIf you run the KarateTest then 4 hello world tests will pass but both file-upload tests will fail demonstrating the problem.  I have tried well over a dozen variations of the karate test but can't get it to pass.  I have included a karate test specifying classpath to the CSV file as suggested in stackoverflow page.  That fails as well.\r\n\r\nYour help is greatly appreciated.", "url": "https://github.com/intuit/karate/issues/797", "user": "jesimone57", "labels": ["bug", "fixed", "hacktoberfest"], "created": "2019-06-05 19:10:59", "closed": "2020-02-16 09:48:28", "commits": {"f161121b7ef7bb4f80a5e8d471fd4a6ab94fee62": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "09c83753d30f814403a0b7ebddb7555ca2246a5f": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 255.00027777777777, "commitsDetails": [{"commitHash": "f161121b7ef7bb4f80a5e8d471fd4a6ab94fee62", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["37b77498f9ff3f1c269cd27220bc53768929f04b"], "nameRev": "f161121b7ef7bb4f80a5e8d471fd4a6ab94fee62 tags/v0.9.3~9", "commitMessage": "improve logging for #797\n", "commitDateTime": "2019-06-06 08:49:11", "authoredDateTime": "2019-06-06 08:49:11", "commitGitStats": [{"filePath": "karate-mock-servlet/src/main/java/com/intuit/karate/mock/servlet/MockHttpClient.java", "insertions": 6, "deletions": 1, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockHttpClient.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.mock.servlet.MockHttpClient.makeHttpRequest(com.intuit.karate.http.HttpBody,com.intuit.karate.core.ScenarioContext)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "09c83753d30f814403a0b7ebddb7555ca2246a5f", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["8a080bfe8b5a9bb03a5748d07dbeb4727e5a96fd", "bb3ed916d750106122b58f172a8d4c896f1bb021"], "nameRev": "09c83753d30f814403a0b7ebddb7555ca2246a5f tags/v0.9.5^2~107", "commitMessage": "Merge pull request #914 from Nishant-sehgal/develop\n\nmultipart/form-data works via REST client but fails in Karate tests #797", "commitDateTime": "2019-10-04 13:38:54", "authoredDateTime": "2019-10-04 13:38:54", "commitGitStats": [{"filePath": "karate-mock-servlet/src/main/java/com/intuit/karate/mock/servlet/MockMultiPart.java", "insertions": 8, "deletions": 4, "lines": 12}, {"filePath": "karate-mock-servlet/src/test/java/com/intuit/karate/mock/servlet/test/MockMultiPartTest.java", "insertions": 48, "deletions": 0, "lines": 48}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockMultiPart.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.mock.servlet.MockMultiPart.getHeader(java.lang.String)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "MockMultiPartTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.mock.servlet.test.MockMultiPartTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f161121b7ef7bb4f80a5e8d471fd4a6ab94fee62"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 1, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-mock-servlet/src/main/java/com/intuit/karate/mock/servlet"], "changesInPackagesSPOON": ["com.intuit.karate.mock.servlet.MockHttpClient.makeHttpRequest(com.intuit.karate.http.HttpBody,com.intuit.karate.core.ScenarioContext)"]}, {"title": "Arguments to karate.call pollute namespace of subsequent calls", "body": "I think I found a regression from 0.9.2 (compared to 0.9.3.RC2) which was probably introduced by the fix in #722. It seems that (maybe only some) calls can pollute the namespace of the subsequent calls. In this case I found, the arguments passed to one karate.call are then also visible in any subsequent karate.call.\r\n\r\nI have prepared a reproducing example:\r\n[scopebug.zip](https://github.com/intuit/karate/files/3252370/scopebug.zip)\r\n\r\nLet me know if you need any more info!\r\n", "url": "https://github.com/intuit/karate/issues/795", "user": "kkris", "labels": ["bug", "fixed"], "created": "2019-06-04 12:41:38", "closed": "2019-06-10 01:42:17", "commits": {"e38b70105419dc0587d3c6289695c67917ab892b": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "e9fb599916383bf25f0b65b856ca3b4d6632a387": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "f6ba70582f677f245fa4803a239cb92a35dab3f1": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "e38b70105419dc0587d3c6289695c67917ab892b", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["bba3e12a99fd740cc8fc93bb8473af551f1952f0"], "nameRev": "e38b70105419dc0587d3c6289695c67917ab892b tags/v0.9.3~15", "commitMessage": "use only root context in thread-local #722 #795\n", "commitDateTime": "2019-06-04 18:28:45", "authoredDateTime": "2019-06-04 18:28:45", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/core/ScriptBridge.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ScriptBridge.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.ScriptBridge", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "e9fb599916383bf25f0b65b856ca3b4d6632a387", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["e38b70105419dc0587d3c6289695c67917ab892b"], "nameRev": "e9fb599916383bf25f0b65b856ca3b4d6632a387 tags/v0.9.3~14", "commitMessage": "second attempt ref #795\n", "commitDateTime": "2019-06-04 20:25:17", "authoredDateTime": "2019-06-04 20:25:17", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/CallContext.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "karate-core/src/main/java/com/intuit/karate/Match.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/ScriptBridge.java", "insertions": 4, "deletions": 6, "lines": 10}, {"filePath": "karate-junit4/src/test/java/child.feature", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/config/config-dir.feature", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/config/karate-config-custom.js", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallContext.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.CallContext.forCall(com.intuit.karate.core.Feature,com.intuit.karate.core.ScenarioContext,java.util.Map,int,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.CallContext.forAsync(com.intuit.karate.core.Feature,java.util.Collection,java.util.Map,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.CallContext", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.CallContext.forCall(com.intuit.karate.core.Feature,com.intuit.karate.core.ScenarioContext,java.util.Map,int,boolean,com.intuit.karate.core.ScenarioContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Match.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Match", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.evalFeatureCall(com.intuit.karate.core.Feature,java.lang.Object,com.intuit.karate.core.ScenarioContext,boolean,com.intuit.karate.core.ScenarioContext)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Script.call(java.lang.String,java.lang.String,com.intuit.karate.core.ScenarioContext,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScriptBridge.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.ScriptBridge", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.core.ScriptBridge.call(java.lang.String,java.lang.Object)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "f6ba70582f677f245fa4803a239cb92a35dab3f1", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["e3d4473045c0e7f733e90283bf75d65ccaf3f80c"], "nameRev": "f6ba70582f677f245fa4803a239cb92a35dab3f1 tags/v0.9.3~12", "commitMessage": "final edit for #795\n", "commitDateTime": "2019-06-05 12:13:55", "authoredDateTime": "2019-06-05 12:13:55", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.evalFeatureCall(com.intuit.karate.CallContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e9fb599916383bf25f0b65b856ca3b4d6632a387", "f6ba70582f677f245fa4803a239cb92a35dab3f1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 19, "deletions": 18, "lines": 37, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 19, "UPD": 4, "INS": 9, "MOV": 3, "DEL": 3, "spoonFilesChanged": 4, "spoonMethodsChanged": 10}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate", "karate-core/src/main/java/com/intuit/karate/core"], "changesInPackagesSPOON": ["com.intuit.karate.Script.evalFeatureCall(com.intuit.karate.core.Feature,java.lang.Object,com.intuit.karate.core.ScenarioContext,boolean,com.intuit.karate.core.ScenarioContext)", "com.intuit.karate.Script.evalFeatureCall(com.intuit.karate.CallContext)", "com.intuit.karate.CallContext", "com.intuit.karate.core.ScriptBridge.call(java.lang.String,java.lang.Object)", "com.intuit.karate.CallContext.forAsync(com.intuit.karate.core.Feature,java.util.Collection,java.util.Map,boolean)", "com.intuit.karate.Match", "com.intuit.karate.Script.call(java.lang.String,java.lang.String,com.intuit.karate.core.ScenarioContext,boolean)", "com.intuit.karate.CallContext.forCall(com.intuit.karate.core.Feature,com.intuit.karate.core.ScenarioContext,java.util.Map,int,boolean,com.intuit.karate.core.ScenarioContext)", "com.intuit.karate.core.ScriptBridge", "com.intuit.karate.CallContext.forCall(com.intuit.karate.core.Feature,com.intuit.karate.core.ScenarioContext,java.util.Map,int,boolean)"]}, {"title": "long pending JS to JSON conversion issue - nested arrays become maps", "body": "a very annoying issue that has been around since the beginning, but fortunately only affects a relatively rare case when JSON is constructed on the JavaScript side (typically in an `eval` or JS `function`) and where there are nested arrays, they become JSON with keys like `0`, `1`, `2`, etc. just figured out a possible fix. opening this issue to track, and this could be a breaking change for some teams\r\n\r\ndetails: https://stackoverflow.com/a/54256766/143475", "url": "https://github.com/intuit/karate/issues/787", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2019-05-25 03:42:55", "closed": "2019-06-10 01:42:27", "commits": {"38ad21199c4bd28c45bc1ab5f43845d30264d5d4": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "0549e9d7a78e8b1f361770c9b278c4a07eeee0a2": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "e128bd65a2d0553a5628ba7f5b08a73f50374ee7": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "7df25db9b89c60c6f5956e80303a0777d9f47ca3": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "23526b6e8be8196c5124ac22bdbada934576b586": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 15.000277777777777, "commitsDetails": [{"commitHash": "38ad21199c4bd28c45bc1ab5f43845d30264d5d4", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["80729d5a42e72abc97d319249c4fb43832348638"], "nameRev": "38ad21199c4bd28c45bc1ab5f43845d30264d5d4 tags/v0.9.3~25", "commitMessage": "first part of addressing #787\nthe next commit will attempt a cleanup of enums and simplifying script-value\n", "commitDateTime": "2019-05-25 09:30:43", "authoredDateTime": "2019-05-25 09:30:43", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/ScriptValue.java", "insertions": 32, "deletions": 18, "lines": 50}, {"filePath": "karate-core/src/test/java/com/intuit/karate/ScriptTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature", "insertions": 2, "deletions": 6, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ScriptValue.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptValue", "TOT": 11, "UPD": 0, "INS": 2, "MOV": 7, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.ScriptValue.convertFromNashorn(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScriptTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptTest.testJsonCyclicReferences()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "0549e9d7a78e8b1f361770c9b278c4a07eeee0a2", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["38ad21199c4bd28c45bc1ab5f43845d30264d5d4"], "nameRev": "0549e9d7a78e8b1f361770c9b278c4a07eeee0a2 tags/v0.9.3~24", "commitMessage": "cleanup for #787 looking good\nsimplified script-value greatly and reduced dependency on nashorn a little more\nslight performance optimization for checking if list or map for json\n", "commitDateTime": "2019-05-25 10:03:44", "authoredDateTime": "2019-05-25 10:03:44", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 1, "deletions": 16, "lines": 17}, {"filePath": "karate-core/src/main/java/com/intuit/karate/ScriptValue.java", "insertions": 30, "deletions": 70, "lines": 100}, {"filePath": "karate-core/src/main/java/com/intuit/karate/validator/ArrayValidator.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "karate-core/src/main/java/com/intuit/karate/validator/ObjectValidator.java", "insertions": 4, "deletions": 5, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.matchJsonOrObject(com.intuit.karate.core.MatchType,com.intuit.karate.ScriptValue,java.lang.String,java.lang.String,com.intuit.karate.core.ScenarioContext)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "com.intuit.karate.Script.call(java.lang.String,java.lang.String,com.intuit.karate.core.ScenarioContext,boolean)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 4}]}, {"spoonFilePath": "ScriptValue.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptValue.getAsMap()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.ScriptValue.Type", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.ScriptValue.getTypeAsShortString()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.ScriptValue.isListLike()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.ScriptValue.getAsList()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.ScriptValue.isJsonLike()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.ScriptValue.copy(boolean)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.ScriptValue.getAsJsonDocument()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.ScriptValue.isMapLike()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.ScriptValue.getAsPrettyString()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.ScriptValue.toLowerCase()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.ScriptValue.getAsString()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.ScriptValue.convertFromNashorn(java.lang.Object)", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.ScriptValue", "TOT": 12, "UPD": 0, "INS": 9, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "ArrayValidator.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.validator.ArrayValidator.validate(com.intuit.karate.ScriptValue)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ObjectValidator.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.validator.ObjectValidator.validate(com.intuit.karate.ScriptValue)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "e128bd65a2d0553a5628ba7f5b08a73f50374ee7", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["0549e9d7a78e8b1f361770c9b278c4a07eeee0a2"], "nameRev": "e128bd65a2d0553a5628ba7f5b08a73f50374ee7 tags/v0.9.3~23", "commitMessage": "improve old code that can be optimized #787\n", "commitDateTime": "2019-05-25 10:15:21", "authoredDateTime": "2019-05-25 10:15:21", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/validator/ArrayValidator.java", "insertions": 1, "deletions": 14, "lines": 15}, {"filePath": "karate-core/src/main/java/com/intuit/karate/validator/ObjectValidator.java", "insertions": 1, "deletions": 14, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ArrayValidator.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.validator.ArrayValidator.validate(com.intuit.karate.ScriptValue)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "ObjectValidator.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.validator.ObjectValidator.validate(com.intuit.karate.ScriptValue)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "7df25db9b89c60c6f5956e80303a0777d9f47ca3", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["26db4b9237493a4c7a2e93c95dbfbf4d14bb9b0b"], "nameRev": "7df25db9b89c60c6f5956e80303a0777d9f47ca3 tags/v0.9.3~18", "commitMessage": "for #787 ensure that non-js references are preserved\nwhen converting json originating from js engine into karate native map / list data\nthis is only for the top-level specifically to allow karate-config.js to supply java types\ninto the variables context as well as js functions\n", "commitDateTime": "2019-06-02 14:14:29", "authoredDateTime": "2019-06-02 14:14:29", "commitGitStats": [{"filePath": "README.md", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/ScriptValue.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/config/Greeter.java", "insertions": 19, "deletions": 0, "lines": 19}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/config/config-dir.feature", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/config/karate-config-custom.js", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ScriptValue.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptValue", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Greeter.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.config.Greeter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "23526b6e8be8196c5124ac22bdbada934576b586", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["2ad2c4aac900d2ef378441302a90cfda22349711"], "nameRev": "23526b6e8be8196c5124ac22bdbada934576b586 tags/v0.9.5~5", "commitMessage": "added example related to #787\nyou CAN nest JS functions if you structure them via a re-usable feature\n", "commitDateTime": "2019-07-08 04:21:02", "authoredDateTime": "2019-07-08 04:21:02", "commitGitStats": [{"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/config/config-dir.feature", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/config/karate-config-custom.js", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/config/utils.feature", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "karate-netty/README.md", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["38ad21199c4bd28c45bc1ab5f43845d30264d5d4", "0549e9d7a78e8b1f361770c9b278c4a07eeee0a2", "e128bd65a2d0553a5628ba7f5b08a73f50374ee7", "7df25db9b89c60c6f5956e80303a0777d9f47ca3", "23526b6e8be8196c5124ac22bdbada934576b586"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 4, "gitStatsSummary": {"insertions": 77, "deletions": 144, "lines": 221, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 78.0, "UPD": 1.0, "INS": 18.0, "MOV": 24.0, "DEL": 35.0, "spoonFilesChanged": 5, "spoonMethodsChanged": 19}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate", "karate-core/src/main/java/com/intuit/karate/validator"], "changesInPackagesSPOON": ["com.intuit.karate.ScriptValue", "com.intuit.karate.validator.ObjectValidator.validate(com.intuit.karate.ScriptValue)", "com.intuit.karate.validator.ArrayValidator.validate(com.intuit.karate.ScriptValue)", "com.intuit.karate.ScriptValue.convertFromNashorn(java.lang.Object)", "com.intuit.karate.ScriptValue.getAsMap()", "com.intuit.karate.ScriptValue.isListLike()", "com.intuit.karate.ScriptValue.Type", "com.intuit.karate.Script.call(java.lang.String,java.lang.String,com.intuit.karate.core.ScenarioContext,boolean)", "com.intuit.karate.ScriptValue.isMapLike()", "com.intuit.karate.ScriptValue.getTypeAsShortString()", "com.intuit.karate.ScriptValue.getAsList()", "com.intuit.karate.ScriptValue.getAsString()", "com.intuit.karate.ScriptValue.getAsPrettyString()", "com.intuit.karate.junit4.config.Greeter", "com.intuit.karate.Script.matchJsonOrObject(com.intuit.karate.core.MatchType,com.intuit.karate.ScriptValue,java.lang.String,java.lang.String,com.intuit.karate.core.ScenarioContext)", "com.intuit.karate.ScriptValue.getAsJsonDocument()", "com.intuit.karate.ScriptValue.copy(boolean)", "com.intuit.karate.ScriptValue.isJsonLike()", "com.intuit.karate.ScriptValue.toLowerCase()"]}, {"title": "background callonce read causes scenarios to share variables", "body": "Failing test case here:\r\n\r\nhttps://github.com/ericdriggs/karate-callonce-bug/blob/master/src/test/java/callonce-bug.feature\r\n\r\nExpected:\r\n* variables created by previous scenario remain undefined when another scenario starts\r\n\r\nActual\r\n* variables still have previous values when start new scenario\r\n\r\nManually verified the following work correctly: karate.callSingle, callonce for a function variable", "url": "https://github.com/intuit/karate/issues/779", "user": "ericdriggs", "labels": ["bug", "fixed"], "created": "2019-05-17 17:26:38", "closed": "2019-06-10 01:43:01", "commits": {"2c7d58e478767a4a5632df0fb31935c20edd1b37": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "8382e115b7ba45b2fd9d274482c727bce52abcae": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "1ec60aa418b5aeeca69f70f4015ae0e0ef47692d": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 23.00027777777778, "commitsDetails": [{"commitHash": "2c7d58e478767a4a5632df0fb31935c20edd1b37", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["d20356af65be34b1946a5e7d437027934d5ea8c0"], "nameRev": "2c7d58e478767a4a5632df0fb31935c20edd1b37 tags/v0.9.3~46", "commitMessage": "callonce leaks scenario variables #779\n", "commitDateTime": "2019-05-17 23:34:18", "authoredDateTime": "2019-05-17 23:34:18", "commitGitStats": [{"filePath": "README.md", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "karate-core/src/main/java/com/intuit/karate/ScriptValue.java", "insertions": 15, "deletions": 4, "lines": 19}, {"filePath": "karate-core/src/main/java/com/intuit/karate/ScriptValueMap.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/http/HttpRequestBuilder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/CallonceGlobalRunner.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/{CallOnceHelper.java => CallonceHelper.java}", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/{CallOnceRunner.java => CallonceRunner.java}", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/called-noop.feature", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/callonce-global.feature", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/{call-once.feature => callonce.feature}", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/scenario-variable-scope.feature", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.callWithCache(java.lang.String,java.lang.String,com.intuit.karate.core.ScenarioContext,boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.Script.assign(com.intuit.karate.AssignType,java.lang.String,java.lang.String,com.intuit.karate.core.ScenarioContext,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScriptValue.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptValue.copy()", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.ScriptValue.copy(boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScriptValueMap.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptValueMap.copy(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpRequestBuilder.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpRequestBuilder.copy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CallonceGlobalRunner.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.demos.CallonceGlobalRunner", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CallonceHelper.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.demos.CallOnceHelper", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CallonceRunner.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.demos.CallOnceRunner", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "8382e115b7ba45b2fd9d274482c727bce52abcae", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["2c7d58e478767a4a5632df0fb31935c20edd1b37"], "nameRev": "8382e115b7ba45b2fd9d274482c727bce52abcae tags/v0.9.3~45", "commitMessage": "adjusting / more safe for #779\n", "commitDateTime": "2019-05-18 07:05:03", "authoredDateTime": "2019-05-18 07:05:03", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 15, "deletions": 16, "lines": 31}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.callWithCache(java.lang.String,java.lang.String,com.intuit.karate.core.ScenarioContext,boolean)", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 2}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "1ec60aa418b5aeeca69f70f4015ae0e0ef47692d", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["b6d10c40d8da9a194c115930e39209ffd455fec8"], "nameRev": "1ec60aa418b5aeeca69f70f4015ae0e0ef47692d tags/v0.9.3~42", "commitMessage": "fixing build because of not thinking through #779\n", "commitDateTime": "2019-05-18 13:47:52", "authoredDateTime": "2019-05-18 13:47:52", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 14, "deletions": 10, "lines": 24}, {"filePath": "karate-demo/src/test/java/demo/headers/call-updates-config.feature", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "karate-demo/src/test/java/demo/outline/dynamic-csv.feature", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.callWithCache(java.lang.String,java.lang.String,com.intuit.karate.core.ScenarioContext,boolean)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2c7d58e478767a4a5632df0fb31935c20edd1b37", "8382e115b7ba45b2fd9d274482c727bce52abcae", "1ec60aa418b5aeeca69f70f4015ae0e0ef47692d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 50, "deletions": 34, "lines": 84, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 29, "UPD": 5, "INS": 12, "MOV": 8, "DEL": 4, "spoonFilesChanged": 7, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate", "karate-core/src/main/java/com/intuit/karate/http"], "changesInPackagesSPOON": ["com.intuit.karate.Script.callWithCache(java.lang.String,java.lang.String,com.intuit.karate.core.ScenarioContext,boolean)", "com.intuit.karate.ScriptValueMap.copy(boolean)", "com.intuit.karate.http.HttpRequestBuilder.copy()", "com.intuit.karate.junit4.demos.CallonceGlobalRunner", "com.intuit.karate.ScriptValue.copy(boolean)", "com.intuit.karate.junit4.demos.CallOnceHelper", "com.intuit.karate.ScriptValue.copy()", "com.intuit.karate.Script.assign(com.intuit.karate.AssignType,java.lang.String,java.lang.String,com.intuit.karate.core.ScenarioContext,boolean)", "com.intuit.karate.junit4.demos.CallOnceRunner"]}, {"title": "karate.options scenario name not honored when using suite / parallel runner", "body": "the `--name` option works for IDE (IntelliJ) but nowhere else. it should be honored when running something like `mvn test -Dkarate.options=\"classpath:myfeature.feature --name ^first$\"`", "url": "https://github.com/intuit/karate/issues/773", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2019-05-13 13:28:07", "closed": "2019-06-10 01:43:32", "commits": {"6634ec3792663c90bfc4f7f33390483a99216993": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "7cbbc932edfcd51ee7c1ad981a1ea4c1c66e9d03": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 27.00027777777778, "commitsDetails": [{"commitHash": "6634ec3792663c90bfc4f7f33390483a99216993", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["42d6724f7280164377927daf74817624076fc30c"], "nameRev": "6634ec3792663c90bfc4f7f33390483a99216993 tags/v0.9.3~56", "commitMessage": "name command-line option should work for junit / parallel suite runner #773\n", "commitDateTime": "2019-05-13 19:00:42", "authoredDateTime": "2019-05-13 19:00:42", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Runner.java", "insertions": 9, "deletions": 6, "lines": 15}, {"filePath": "karate-core/src/main/java/com/intuit/karate/cucumber/CucumberRunner.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "karate-core/src/test/java/com/intuit/karate/core/ScenarioHookTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "karate-junit4/src/main/java/com/intuit/karate/junit4/Karate.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "karate-junit5/src/main/java/com/intuit/karate/junit5/Karate.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Runner.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Runner.parallel(java.util.List,java.util.List,java.lang.String,java.util.Collection,int,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Runner.parallel(java.lang.String,java.util.List,java.lang.String,java.util.Collection,int,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Runner.parallel(java.lang.Class,int,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Runner.parallel(java.util.List,java.util.List,int,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Runner.parallel(java.lang.String,java.util.List,int,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CucumberRunner.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.cucumber.CucumberRunner.parallel(java.util.List,java.util.List,java.util.Collection,int,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.cucumber.CucumberRunner.parallel(java.lang.String,java.util.List,java.util.Collection,int,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScenarioHookTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.ScenarioHookTest.testStopIfScenarioHasNoTags()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.core.ScenarioHookTest.testHookForExamplesWithTags()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Karate.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit5.Karate.iterator()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "7cbbc932edfcd51ee7c1ad981a1ea4c1c66e9d03", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["2478e801fe921e308db356ec9143ad6152223f31"], "nameRev": "7cbbc932edfcd51ee7c1ad981a1ea4c1c66e9d03 tags/v0.9.3~51", "commitMessage": "run scenario by name added to standalone jar #773\nalso was able to add custom classpath addition to standalone\nwhich will be very useful if you want to use classpath or experiment on maven structure projects\n", "commitDateTime": "2019-05-14 18:43:40", "authoredDateTime": "2019-05-14 18:43:40", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/FileUtils.java", "insertions": 13, "deletions": 2, "lines": 15}, {"filePath": "karate-netty/README.md", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "karate-netty/src/main/java/com/intuit/karate/netty/Main.java", "insertions": 17, "deletions": 1, "lines": 18}, {"filePath": "karate-netty/src/test/java/com/intuit/karate/netty/MainTestRunner.java", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "karate-netty/src/test/java/com/intuit/karate/netty/test-cp.feature", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "karate-netty/src/test/java/com/intuit/karate/netty/test-cp2.json", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "karate-netty/src/test/java/test-cp1.json", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FileUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.FileUtils.addToClasspath(java.io.File)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Main.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.netty.Main", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.netty.Main.call()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MainTestRunner.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.netty.MainTestRunner.testScenarioName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.netty.MainTestRunner.testScenarioLine()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6634ec3792663c90bfc4f7f33390483a99216993", "7cbbc932edfcd51ee7c1ad981a1ea4c1c66e9d03"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 43, "deletions": 11, "lines": 54, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 16, "UPD": 0, "INS": 16, "MOV": 0, "DEL": 0, "spoonFilesChanged": 5, "spoonMethodsChanged": 11}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-junit5/src/main/java/com/intuit/karate/junit5", "karate-core/src/main/java/com/intuit/karate/cucumber", "karate-junit4/src/main/java/com/intuit/karate/junit4", "karate-core/src/main/java/com/intuit/karate", "karate-netty/src/main/java/com/intuit/karate/netty"], "changesInPackagesSPOON": ["com.intuit.karate.Runner.parallel(java.lang.String,java.util.List,int,java.lang.String)", "com.intuit.karate.netty.Main.call()", "com.intuit.karate.Runner.parallel(java.lang.String,java.util.List,java.lang.String,java.util.Collection,int,java.lang.String)", "com.intuit.karate.Runner.parallel(java.util.List,java.util.List,int,java.lang.String)", "com.intuit.karate.netty.Main", "com.intuit.karate.cucumber.CucumberRunner.parallel(java.lang.String,java.util.List,java.util.Collection,int,java.lang.String)", "com.intuit.karate.junit5.Karate.iterator()", "com.intuit.karate.cucumber.CucumberRunner.parallel(java.util.List,java.util.List,java.util.Collection,int,java.lang.String)", "com.intuit.karate.Runner.parallel(java.lang.Class,int,java.lang.String)", "com.intuit.karate.Runner.parallel(java.util.List,java.util.List,java.lang.String,java.util.Collection,int,java.lang.String)", "com.intuit.karate.FileUtils.addToClasspath(java.io.File)"]}, {"title": "ssl cert trustAll value type should be boolean and not string", "body": "found by @aleruz refer discussion here: https://github.com/intuit/karate/issues/193#issuecomment-491701243", "url": "https://github.com/intuit/karate/issues/772", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2019-05-13 08:09:22", "closed": "2019-06-10 01:43:44", "commits": {"42d6724f7280164377927daf74817624076fc30c": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 27.00027777777778, "commitsDetails": [{"commitHash": "42d6724f7280164377927daf74817624076fc30c", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["f2d7db0531f5c0eb2e6aaafb8beac2dc3c1f852e"], "nameRev": "42d6724f7280164377927daf74817624076fc30c tags/v0.9.3~57", "commitMessage": "use proper type for json value unpacked manually #772\n", "commitDateTime": "2019-05-13 13:27:59", "authoredDateTime": "2019-05-13 13:27:59", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Config.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Config.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Config.configure(java.lang.String,com.intuit.karate.ScriptValue)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["42d6724f7280164377927daf74817624076fc30c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.Config.configure(java.lang.String,com.intuit.karate.ScriptValue)"]}, {"title": "http request failed: null when using \"path\" keyword with url pointing to localhost", "body": "When setting the url to localhost or 127.0.0.1 and using the \"path\", the request fails with error \"http request failed: null\"\r\n\r\nI tried getting help on StackOverflow first (https://stackoverflow.com/questions/56006685/getting-error-http-request-failed-null-when-using-path-in-karate), but I couldn't get any satisfactory responses.\r\n\r\nThis error can be reproduced in the [attached project](https://github.com/intuit/karate/files/3149328/myproject.zip).", "url": "https://github.com/intuit/karate/issues/760", "user": "gruutak", "labels": ["bug", "fixed"], "created": "2019-05-06 18:29:40", "closed": "2019-06-10 01:44:10", "commits": {"f79bb9ca07c363609b3f88d4ccf1f230c288d96a": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 34.000277777777775, "commitsDetails": [{"commitHash": "f79bb9ca07c363609b3f88d4ccf1f230c288d96a", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["d82aa6b76800162fc467a03e360daed28743f179"], "nameRev": "f79bb9ca07c363609b3f88d4ccf1f230c288d96a tags/v0.9.3~68", "commitMessage": "npe in apache http client routine #760\n", "commitDateTime": "2019-05-07 05:56:26", "authoredDateTime": "2019-05-07 05:56:26", "commitGitStats": [{"filePath": "karate-apache/src/main/java/com/intuit/karate/http/apache/ApacheHttpClient.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "karate-core/src/main/java/com/intuit/karate/shell/FileLogAppender.java", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ApacheHttpClient.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpClient.buildPath(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FileLogAppender.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f79bb9ca07c363609b3f88d4ccf1f230c288d96a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 2, "lines": 6, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-apache/src/main/java/com/intuit/karate/http/apache", "karate-core/src/main/java/com/intuit/karate/shell"], "changesInPackagesSPOON": ["com.intuit.karate.http.apache.ApacheHttpClient.buildPath(java.lang.String)"]}, {"title": "Issue with Karate in an application packaged by Spring Boot", "body": "Hi @ptrthomas, I'm back with more issues with classpath, Spring Boot, and JAR (or bootJAR in this case).\r\n\r\nI have a dummy project [here](https://github.com/celcius112/karate-spring), which is a Spring Boot application that launches a single runner class (`com.karate.karatespring.feature.Runner.java`) on startup, using the JUnit 5 test factory. This runner class will simply launch the feature file `Feature.feature` that asserts on a boolean initialized in `karate-config.js`. \r\n\r\nProblems arise when I launch the JAR. The feature file is found 45 times by `FileUtils.scanForFeatureFiles`, and as such is launched 45 times (which is a bit too much). Also, the `karate-config.js` file is not found on the classpath, with the exception `skipping bootstrap configuration: could not find or read file: classpath:karate-config.js`.\r\n\r\nI found these issues by migrating from version 0.8.x to version 0.9.x. \r\n\r\nThank you for your time, and thank you for your work on Karate.\r\n\r\n", "url": "https://github.com/intuit/karate/issues/751", "user": "celcius112", "labels": ["bug"], "created": "2019-04-26 16:48:59", "closed": "2019-11-16 04:59:50", "commits": {"fcf194041a7f454bf71bebcecea05ce653cfd068": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "9b1ff7253ed63cfb09308e631fc1ddb475718387": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 203.00027777777777, "commitsDetails": [{"commitHash": "fcf194041a7f454bf71bebcecea05ce653cfd068", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["2e55fae5525dd836f0e30f26f964eca22b46dde1"], "nameRev": "fcf194041a7f454bf71bebcecea05ce653cfd068 tags/v0.9.5^2~176", "commitMessage": "get build to work on windows and clean up\nthis breaks #751 but needs investigation / reopen\n", "commitDateTime": "2019-08-29 23:51:56", "authoredDateTime": "2019-08-29 23:51:56", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/FileUtils.java", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "karate-core/src/main/java/com/intuit/karate/Resource.java", "insertions": 17, "deletions": 17, "lines": 34}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/FeatureContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/FeatureParser.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "karate-core/src/test/java/com/intuit/karate/shell/CommandTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/files/BootJarLoadingTest.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FileUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.FileUtils.getPathFor(java.net.URL,java.lang.String)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.FileUtils.getPathContaining(java.lang.Class)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.FileUtils.fromRelativeClassPath(java.lang.String,java.lang.ClassLoader)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.FileUtils.toRelativeClassPath(java.nio.file.Path,java.lang.ClassLoader)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.FileUtils.collectFeatureFiles(java.net.URL,java.lang.String,java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.FileUtils.toResource(java.lang.String,com.intuit.karate.core.ScenarioContext)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Resource.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Resource", "TOT": 36, "UPD": 8, "INS": 3, "MOV": 17, "DEL": 8}, {"spoonMethodName": "com.intuit.karate.Resource.getStream()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "FeatureContext.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.FeatureContext", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "FeatureParser.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.FeatureParser.parse(java.io.File)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "CommandTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.shell.CommandTest.testCommandReturn()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "BootJarLoadingTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.files.BootJarLoadingTest.testRunningFromBootJar()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.junit4.files.BootJarLoadingTest.SpringBootResource", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "9b1ff7253ed63cfb09308e631fc1ddb475718387", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["fcf194041a7f454bf71bebcecea05ce653cfd068"], "nameRev": "9b1ff7253ed63cfb09308e631fc1ddb475718387 tags/v0.9.5^2~175", "commitMessage": "refactor / cleanup to prev commit ref #751\n", "commitDateTime": "2019-08-29 11:39:03", "authoredDateTime": "2019-08-29 11:39:03", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/core/FeatureParser.java", "insertions": 1, "deletions": 3, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FeatureParser.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.FeatureParser.parse(java.io.File)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fcf194041a7f454bf71bebcecea05ce653cfd068", "9b1ff7253ed63cfb09308e631fc1ddb475718387"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 29, "deletions": 30, "lines": 59, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 57, "UPD": 18, "INS": 6, "MOV": 20, "DEL": 13, "spoonFilesChanged": 4, "spoonMethodsChanged": 10}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/core", "karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.core.FeatureParser.parse(java.io.File)", "com.intuit.karate.FileUtils.fromRelativeClassPath(java.lang.String,java.lang.ClassLoader)", "com.intuit.karate.FileUtils.toRelativeClassPath(java.nio.file.Path,java.lang.ClassLoader)", "com.intuit.karate.FileUtils.collectFeatureFiles(java.net.URL,java.lang.String,java.util.List)", "com.intuit.karate.Resource", "com.intuit.karate.FileUtils.getPathFor(java.net.URL,java.lang.String)", "com.intuit.karate.FileUtils.toResource(java.lang.String,com.intuit.karate.core.ScenarioContext)", "com.intuit.karate.Resource.getStream()", "com.intuit.karate.FileUtils.getPathContaining(java.lang.Class)", "com.intuit.karate.core.FeatureContext"]}, {"title": "Dynamic XPaths with count() fail with karate.xmlPath() ", "body": "I am trying to invoke dynamic XPaths in Karate v0.9.2 via the Scripting API, karate.xmlPath().\r\n\r\nMy basic XPath queries for retrieving XML elements (Nodes, NodeLists, Attributes etc) work,\r\nBUT queries attempting to retrieve non-Node/non-NodeList elements fail.\r\n\r\nFor example:\r\n\r\n- **Numerical** values associated with XPath count() queries\r\n- String values associated with the text inside elements\r\n\r\n**Actual result:**\r\n In the case of the count() queries a typical error generated is of the form:\r\n\r\ncom.intuit.karate.exception.KarateException: users.feature:51 - javascript evaluation failed: karate.xmlPath(testUsers,xpathQuery), javax.xml.xpath.XPathExpressionException: com.sun.org.apache.xpath.internal.XPathException: **Can not convert #NUMBER to a NodeList!**\r\n\tat \u273d.* def userCount = karate.xmlPath(testUsers,xpathQuery) (users.feature:51)\r\n\r\n**Expected Result:** \r\nI would expect that the dynamic scripting XPath  API could return not just NodeList results but also simple/primitive values (eg, Integer/Double, String, Boolean).\r\n\r\n----\r\nThe attached project exercise such a scenario with a simple XML dataset.\r\n\r\n- GitHub sample project: \r\n  - https://github.com/mhavilah/karateDynamicXPath.git\r\n  - git@github.com:mhavilah/karateDynamicXPath.git\r\n\r\n- Related Stack Overflow:\r\nhttps://stackoverflow.com/questions/55743105/how-to-invoke-dynamic-xpaths-with-count-in-karate", "url": "https://github.com/intuit/karate/issues/747", "user": "mhavilah", "labels": ["bug", "fixed"], "created": "2019-04-23 14:44:19", "closed": "2019-06-10 01:44:44", "commits": {"193da44c9e6232a2608b1efa9d85b8614a8289d5": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 47.000277777777775, "commitsDetails": [{"commitHash": "193da44c9e6232a2608b1efa9d85b8614a8289d5", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["57bc0c9347d2db8ad75ae2b90e170f1279256493"], "nameRev": "193da44c9e6232a2608b1efa9d85b8614a8289d5 tags/v0.9.3~84", "commitMessage": "script bridge for dynamic xml-path unified #747\n", "commitDateTime": "2019-04-23 20:31:14", "authoredDateTime": "2019-04-23 20:31:14", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/core/ScriptBridge.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/xml/xml.feature", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ScriptBridge.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.ScriptBridge.xmlPath(java.lang.Object,java.lang.String)", "TOT": 10, "UPD": 5, "INS": 1, "MOV": 1, "DEL": 3}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["193da44c9e6232a2608b1efa9d85b8614a8289d5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 6, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 10, "UPD": 5, "INS": 1, "MOV": 1, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/core"], "changesInPackagesSPOON": ["com.intuit.karate.core.ScriptBridge.xmlPath(java.lang.Object,java.lang.String)"]}, {"title": "match keyword works incorrectly when '##null' is used in json", "body": "Match keyword seems to work incorrectly when there is a '##null' in the json.\r\n\r\nExample 1:\r\nThe match step in this example seem to work correctly ie fails with the message actual value has 1 more key than expected.\r\n```\r\n    * def expected = {\"a\":1,\"b\":2}\r\n    * def actual = {\"a\":1,\"b\":2,\"d\":3}\r\n    * match actual == expected\r\n```\r\nExample 2:\r\nThe match step in this example passes whereas it should have failed with the same message as above:\r\n```\r\n    * def expected = {\"a\":1,\"b\":2,\"c\":\"##null\"}\r\n    * def actual = {\"a\":1,\"b\":2,\"d\":3}\r\n    * match actual == expected\r\n```\r\n\r\nKarate version 0.9.2", "url": "https://github.com/intuit/karate/issues/745", "user": "vidz2", "labels": ["bug", "fixed"], "created": "2019-04-23 00:42:26", "closed": "2019-06-10 01:44:51", "commits": {"57bc0c9347d2db8ad75ae2b90e170f1279256493": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "44b1e0e2cac5a043b17f75ce799e2a3f42fb9fb6": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 48.000277777777775, "commitsDetails": [{"commitHash": "57bc0c9347d2db8ad75ae2b90e170f1279256493", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["522db437e2624e803518eddd77d5a0c22e297e74"], "nameRev": "57bc0c9347d2db8ad75ae2b90e170f1279256493 tags/v0.9.3~85", "commitMessage": "subtle logic issue in match #745\n", "commitDateTime": "2019-04-23 11:17:54", "authoredDateTime": "2019-04-23 11:17:54", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 38, "deletions": 32, "lines": 70}, {"filePath": "karate-core/src/test/java/com/intuit/karate/ScriptTest.java", "insertions": 13, "deletions": 6, "lines": 19}, {"filePath": "karate-demo/src/test/java/demo/search/dynamic-params.feature", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.matchNestedObject(char,java.lang.String,com.intuit.karate.core.MatchType,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,com.intuit.karate.core.ScenarioContext)", "TOT": 16, "UPD": 3, "INS": 7, "MOV": 2, "DEL": 4}, {"spoonMethodName": "com.intuit.karate.Script.evalKarateExpressionForMatch(java.lang.String,com.intuit.karate.core.ScenarioContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.Script.evalKarateExpression(java.lang.String,com.intuit.karate.core.ScenarioContext)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.Script.evalKarateExpression(java.lang.String,com.intuit.karate.core.ScenarioContext,boolean)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 4}, {"spoonMethodName": "com.intuit.karate.Script.evalJsonEmbeddedExpressions(com.jayway.jsonpath.DocumentContext,com.intuit.karate.core.ScenarioContext,boolean)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.Script.evalJsonEmbeddedExpressions(java.lang.String,java.lang.Object,com.intuit.karate.core.ScenarioContext,com.jayway.jsonpath.DocumentContext,boolean)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 4}, {"spoonMethodName": "com.intuit.karate.Script.evalXmlEmbeddedExpressions(org.w3c.dom.Node,com.intuit.karate.core.ScenarioContext,boolean)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 4}, {"spoonMethodName": "com.intuit.karate.Script.assign(com.intuit.karate.AssignType,java.lang.String,java.lang.String,com.intuit.karate.core.ScenarioContext,boolean)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ScriptTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptTest.testEvalXmlEmbeddedExpressions()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testEvalXmlEmbeddedExpressionsInAttributes()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testEvalJsonEmbeddedExpressions()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testEvalEmbeddedExpressionsWithJsonPath()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testOptionalAndUnMatchedActualKeys()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "44b1e0e2cac5a043b17f75ce799e2a3f42fb9fb6", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["3e0b1ebc1fb61040808bcf31f6ce8342bb2171f8"], "nameRev": "44b1e0e2cac5a043b17f75ce799e2a3f42fb9fb6 tags/v0.9.3~48", "commitMessage": "extra tests related to #745\n", "commitDateTime": "2019-05-16 18:53:52", "authoredDateTime": "2019-05-16 18:53:52", "commitGitStats": [{"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/outline.feature", "insertions": 12, "deletions": 1, "lines": 13}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["57bc0c9347d2db8ad75ae2b90e170f1279256493", "44b1e0e2cac5a043b17f75ce799e2a3f42fb9fb6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 38, "deletions": 32, "lines": 70, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 37.0, "UPD": 3.0, "INS": 7.0, "MOV": 6.0, "DEL": 21.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.Script.evalJsonEmbeddedExpressions(com.jayway.jsonpath.DocumentContext,com.intuit.karate.core.ScenarioContext,boolean)", "com.intuit.karate.Script.evalXmlEmbeddedExpressions(org.w3c.dom.Node,com.intuit.karate.core.ScenarioContext,boolean)", "com.intuit.karate.Script.evalKarateExpression(java.lang.String,com.intuit.karate.core.ScenarioContext,boolean)", "com.intuit.karate.Script.evalJsonEmbeddedExpressions(java.lang.String,java.lang.Object,com.intuit.karate.core.ScenarioContext,com.jayway.jsonpath.DocumentContext,boolean)", "com.intuit.karate.Script.evalKarateExpressionForMatch(java.lang.String,com.intuit.karate.core.ScenarioContext)", "com.intuit.karate.Script.evalKarateExpression(java.lang.String,com.intuit.karate.core.ScenarioContext)", "com.intuit.karate.Script.matchNestedObject(char,java.lang.String,com.intuit.karate.core.MatchType,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,com.intuit.karate.core.ScenarioContext)", "com.intuit.karate.Script.assign(com.intuit.karate.AssignType,java.lang.String,java.lang.String,com.intuit.karate.core.ScenarioContext,boolean)"]}, {"title": "Parallel test runner hangs when running errored scenario.", "body": "Recently we converted out karate project to use the parallel runner demo'd here: [https://github.com/intuit/karate/blob/master/karate-demo/src/test/java/demo/DemoTestParallel.java](url)\r\n\r\nSome of our tests do not compile correctly (an errored scenario) but are tagged as ignored which should not affect the test run.\r\n\r\nAfter looking at numerous threads online regarding running parallel tests, log4j and surefire-reports none of the solutions presented worked. The following contains the steps to reproduce:\r\n\r\nCreate a project using the quick start guide:\r\n```\r\nmvn archetype:generate -DarchetypeGroupId=com.intuit.karate -DarchetypeArtifactId=karate-archetype -DarchetypeVersion=0.9.2 -DgroupId=com.mycompany -DartifactId=myproject\r\n```\r\n\r\nModify the 'ExamplesTest.java' file to contain the parallel runner:\r\n```\r\npackage examples;\r\n\r\nimport com.intuit.karate.KarateOptions;\r\nimport com.intuit.karate.Results;\r\nimport com.intuit.karate.Runner;\r\nimport static org.junit.Assert.*;\r\nimport org.junit.Test;\r\n\r\n@KarateOptions(tags = {\"~@ignore\"})\r\npublic class ExamplesTest {\r\n    \r\n    @Test\r\n    public void testParallel() {\r\n        Results results = Runner.parallel(getClass(), 5, \"target/surefire-reports\");\r\n        assertTrue(results.getErrorMessages(), results.getFailCount() == 0);\r\n    }\r\n    \r\n}\r\n```\r\n\r\nModify the 'users.feature' file to not compile correctly (Changed to scenario outline and provided a commented out value for the examples):\r\n```\r\nFeature: sample karate test script    \r\n    If you are using Eclipse, install the free Cucumber-Eclipse plugin from\r\n    https://cucumber.io/cucumber-eclipse/\r\n    Then you will see syntax-coloring for this file. But best of all,\r\n    you will be able to right-click within this file and [Run As -> Cucumber Feature].\r\n    If you see warnings like \"does not have a matching glue code\",\r\n    go to the Eclipse preferences, find the 'Cucumber User Settings'\r\n    and enter the following Root Package Name: com.intuit.karate    \r\n    Refer to the Cucumber-Eclipse wiki for more: http://bit.ly/2mDaXeV\r\n\r\nBackground:\r\n* url 'https://jsonplaceholder.typicode.com'\r\n\r\nScenario: get all users and then get the first user by id\r\n\r\nGiven path 'users'\r\nWhen method get\r\nThen status 200\r\n\r\n* def first = response[0]\r\n\r\nGiven path 'users', first.id\r\nWhen method get\r\nThen status 200\r\n\r\nScenario Outline: create a user and then get it by id\r\n\r\n* def user =\r\n\"\"\"\r\n{\r\n  \"name\": \"Test User\",\r\n  \"username\": \"testuser\",\r\n  \"email\": \"test@user.com\",\r\n  \"address\": {\r\n    \"street\": \"Has No Name\",\r\n    \"suite\": \"Apt. 123\",\r\n    \"city\": \"Electri\",\r\n    \"zipcode\": \"54321-6789\"\r\n  }\r\n}\r\n\"\"\"\r\n\r\nGiven url 'https://jsonplaceholder.typicode.com/users/' + <header>\r\nAnd request user\r\nWhen method post\r\nThen status 201\r\n\r\n* def id = response.id\r\n* print 'created id is: ' + id\r\n\r\nGiven path id\r\n# When method get\r\n# Then status 200\r\n# And match response contains user\r\n\r\nExamples:\r\n| header |\r\n#| Value  |\r\n```\r\n\r\nExecute 'mvn test'\r\n\r\nThe test runner now hangs indefinitely. I think the behavior shouldn't be to hang but should be to output the errored message that is causing it to hang.\r\n\r\nI have also attached a zipped project that was created following the process above.\r\n[myproject.zip](https://github.com/intuit/karate/files/3094559/myproject.zip)", "url": "https://github.com/intuit/karate/issues/741", "user": "Marcus-Smallman", "labels": ["bug", "fixed"], "created": "2019-04-18 13:24:27", "closed": "2019-06-10 01:45:16", "commits": {"41e9d0cf24a2c9fb357b629a6358ae527ce5d694": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 52.000277777777775, "commitsDetails": [{"commitHash": "41e9d0cf24a2c9fb357b629a6358ae527ce5d694", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["48b656fec423bbb7125cbb3cb57829dd733e1289"], "nameRev": "41e9d0cf24a2c9fb357b629a6358ae527ce5d694 tags/v0.9.3~88", "commitMessage": "handle dynamic expression eval failure #741\n", "commitDateTime": "2019-04-22 17:45:02", "authoredDateTime": "2019-04-22 17:45:02", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/core/Feature.java", "insertions": 35, "deletions": 27, "lines": 62}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/FeatureExecutionUnit.java", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Feature.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.Feature.getScenarioExecutionUnits(com.intuit.karate.core.ExecutionContext,com.intuit.karate.Logger)", "TOT": 22, "UPD": 0, "INS": 4, "MOV": 16, "DEL": 2}]}, {"spoonFilePath": "FeatureExecutionUnit.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["41e9d0cf24a2c9fb357b629a6358ae527ce5d694"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 35, "deletions": 28, "lines": 63, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 22, "UPD": 0, "INS": 4, "MOV": 16, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/core"], "changesInPackagesSPOON": ["com.intuit.karate.core.Feature.getScenarioExecutionUnits(com.intuit.karate.core.ExecutionContext,com.intuit.karate.Logger)"]}, {"title": "Support functions with a name for Java 11 & 12", "body": "In Nashorn Java 11 for some reason functions with a name are considered invalid.\r\n\r\nRefer this Stack Overflow thread: https://stackoverflow.com/a/54554226/143475\r\n\r\nWe have a fix for this that was developed for the `graal` branch: https://github.com/intuit/karate/commit/7cc24d03d1ea705ea7eee51303883c501f53cc69#diff-9e2ac7fbf82c12b0fe45b5b64b3711c2R206", "url": "https://github.com/intuit/karate/issues/724", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2019-04-04 14:12:03", "closed": "2019-06-10 01:46:13", "commits": {"5916e69c21d2add703319e10da8d091c7c375b18": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 66.00027777777778, "commitsDetails": [{"commitHash": "5916e69c21d2add703319e10da8d091c7c375b18", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["1c4c38b357d344387f4b0956d7bf61877dad9504"], "nameRev": "5916e69c21d2add703319e10da8d091c7c375b18 tags/v0.9.3~97", "commitMessage": "remove js function name if present #724\n", "commitDateTime": "2019-04-04 20:16:57", "authoredDateTime": "2019-04-04 20:16:57", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/FileUtils.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "karate-core/src/main/java/com/intuit/karate/ScriptBindings.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "karate-core/src/main/java/com/intuit/karate/StringUtils.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "karate-core/src/test/java/com/intuit/karate/ScriptTest.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "karate-core/src/test/java/com/intuit/karate/StringUtilsTest.java", "insertions": 20, "deletions": 10, "lines": 30}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FileUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.FileUtils.readFile(java.lang.String,com.intuit.karate.core.ScenarioContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.isJavaScriptFunction(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ScriptBindings.java", "spoonMethods": []}, {"spoonFilePath": "StringUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.StringUtils", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.StringUtils.isJavaScriptFunction(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.StringUtils.fixJavaScriptFunction(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScriptTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptTest.testParsingTextType()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "StringUtilsTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.StringUtilsTest.testJsFunction()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5916e69c21d2add703319e10da8d091c7c375b18"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 18, "deletions": 5, "lines": 23, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 1, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.FileUtils.readFile(java.lang.String,com.intuit.karate.core.ScenarioContext)", "com.intuit.karate.StringUtils.isJavaScriptFunction(java.lang.String)", "com.intuit.karate.StringUtils.fixJavaScriptFunction(java.lang.String)", "com.intuit.karate.StringUtils", "com.intuit.karate.Script.isJavaScriptFunction(java.lang.String)"]}, {"title": "Contains Only edge case when LHS is complex JsonPath with == involved", "body": "```cucumber\r\n  * def response =\r\n  \"\"\"\r\n  {\r\n    addOns: [\r\n      {\r\n        addOnOfferID: \"20000970\",\r\n        entitlementStateChangeReason: \"RESUBSCRIBE\",\r\n        nextRecurringChargeDate: null\r\n      }\r\n    ]\r\n  }\r\n  \"\"\"\r\n  * def toAddOnOfferIDs = ['20000970']\r\n  * match $.addOns[?(@.entitlementStateChangeReason=='RESUBSCRIBE')].addOnOfferID contains only toAddOnOfferIDs\r\n```", "url": "https://github.com/intuit/karate/issues/716", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2019-04-02 05:14:16", "closed": "2019-06-10 01:47:06", "commits": {"c54d7781705454c15e3dee75e21c13b643687bb5": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 68.00027777777778, "commitsDetails": [{"commitHash": "c54d7781705454c15e3dee75e21c13b643687bb5", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["366b5e22a1fb89b21ee998aff885bfcc8497486f"], "nameRev": "c54d7781705454c15e3dee75e21c13b643687bb5 tags/v0.9.3~103", "commitMessage": "improve match step parsing #716\n", "commitDateTime": "2019-04-02 10:43:20", "authoredDateTime": "2019-04-02 10:43:20", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/core/MatchStep.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "karate-core/src/test/java/com/intuit/karate/MatchStepTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "karate-demo/src/test/java/driver/core/test-01.feature", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MatchStep.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.MatchStep", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MatchStepTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.MatchStepTest.testMatchStep()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c54d7781705454c15e3dee75e21c13b643687bb5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/core"], "changesInPackagesSPOON": ["com.intuit.karate.core.MatchStep"]}, {"title": "Combination of parallel scenarios that call the same feature mixes logs in HTML report", "body": "Just reported at work. Related to #629 - but we may have not taken called features into account. And currently the plain-text log for a called feature uses the name of the feature without a thread / caller indicator.", "url": "https://github.com/intuit/karate/issues/715", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2019-04-02 05:06:09", "closed": "2019-06-10 01:47:13", "commits": {"cc24b372cb8c27549ac3918584851446e6888314": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 68.00027777777778, "commitsDetails": [{"commitHash": "cc24b372cb8c27549ac3918584851446e6888314", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["c54d7781705454c15e3dee75e21c13b643687bb5"], "nameRev": "cc24b372cb8c27549ac3918584851446e6888314 tags/v0.9.3~102", "commitMessage": "this should address #715\ncalled feature log appender save files are now made unique to avoid collisions\n", "commitDateTime": "2019-04-02 11:26:50", "authoredDateTime": "2019-04-02 11:26:50", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/core/ScenarioExecutionUnit.java", "insertions": 9, "deletions": 1, "lines": 10}, {"filePath": "karate-demo/src/test/java/demo/callfeature/call-feature.feature", "insertions": 52, "deletions": 52, "lines": 104}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ScenarioExecutionUnit.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.ScenarioExecutionUnit", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cc24b372cb8c27549ac3918584851446e6888314"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 1, "lines": 10, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/core"], "changesInPackagesSPOON": ["com.intuit.karate.core.ScenarioExecutionUnit"]}, {"title": "copy command does not make a deep copy of json", "body": "I am trying to reuse results from calls to verify multiple responses against a history API. I am unable to reuse the responses returned from calls due to deep Map references.\r\n\r\nI would expect the following to pass:\r\n\r\n```\r\nFeature: dev\r\n\r\n  @one\r\n  Scenario: one\r\n    * def root = { name: { name: 'inner' } }\r\n\r\n  Scenario: two\r\n    * def temp = call read('dev.feature@one')\r\n    * def a = temp.root\r\n    * copy b = a\r\n    * set b.name.name = \"copy\"\r\n    * match b.name.name == \"copy\"\r\n    * match a.name.name == \"inner\"\r\n\r\n```\r\n\r\nbut it fails with:\r\n\r\n> dev.feature:13 - path: $.name.name, actual: 'copy', expected: 'inner', reason: not equal\r\n\r\nThis is a follow up to [this stackoverflow question](https://stackoverflow.com/questions/55377162/how-to-make-a-copy-of-the-result-of-a-call/55377608?noredirect=1#comment97481644_55377608)", "url": "https://github.com/intuit/karate/issues/708", "user": "viperx77", "labels": ["bug", "fixed"], "created": "2019-03-28 18:18:44", "closed": "2019-06-10 01:47:22", "commits": {"f3be9d85b053bbc7b07bbdc11c333d692b9d3d06": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 73.00027777777778, "commitsDetails": [{"commitHash": "f3be9d85b053bbc7b07bbdc11c333d692b9d3d06", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["c736f564a82101e3e821d7acc38b0a6e931aeb13"], "nameRev": "f3be9d85b053bbc7b07bbdc11c333d692b9d3d06 tags/v0.9.3~79", "commitMessage": "deep clone now works for call results and java collections ref #708\n", "commitDateTime": "2019-05-04 11:44:47", "authoredDateTime": "2019-05-04 11:44:47", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/ScriptValue.java", "insertions": 6, "deletions": 10, "lines": 16}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/copy-called-nested.feature", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/copy-caller.feature", "insertions": 9, "deletions": 1, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ScriptValue.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptValue.copy()", "TOT": 11, "UPD": 4, "INS": 1, "MOV": 1, "DEL": 5}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f3be9d85b053bbc7b07bbdc11c333d692b9d3d06"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 10, "lines": 16, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 11, "UPD": 4, "INS": 1, "MOV": 1, "DEL": 5, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.ScriptValue.copy()"]}, {"title": "Do not use Lenient SSL if custom cert is specified", "body": "Following this problem : https://stackoverflow.com/q/55354081/10791639 , a solution already discussed in https://github.com/intuit/karate/issues/385 was found.\r\n\r\nIt should be possible to either use SSLConnectionSocketFactory or LenientSslConnectionSocketFactory depending on the situation.", "url": "https://github.com/intuit/karate/issues/703", "user": "MercierAdrien", "labels": ["bug", "fixed"], "created": "2019-03-26 15:54:35", "closed": "2019-06-10 01:47:31", "commits": {"366b5e22a1fb89b21ee998aff885bfcc8497486f": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 75.00027777777778, "commitsDetails": [{"commitHash": "366b5e22a1fb89b21ee998aff885bfcc8497486f", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["7d93837b6d77d1c89ab947327585459641a0bbb8", "e775c8920e2fd188ad2d82975b4548a775c8c77e"], "nameRev": "366b5e22a1fb89b21ee998aff885bfcc8497486f tags/v0.9.3~104", "commitMessage": "Merge pull request #706 from MercierAdrien/develop\n\nDon't use Lenient SSL if custom cert is specified #703", "commitDateTime": "2019-03-27 09:14:50", "authoredDateTime": "2019-03-27 09:14:50", "commitGitStats": [{"filePath": "karate-apache/src/main/java/com/intuit/karate/http/apache/ApacheHttpClient.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "karate-apache/src/main/java/org/apache/http/conn/ssl/LenientSslConnectionSocketFactory.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ApacheHttpClient.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpClient.configure(com.intuit.karate.Config,com.intuit.karate.core.ScenarioContext)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "LenientSslConnectionSocketFactory.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "The word \"contains\" appearing on r.h.s. of a expected match string confuses parser", "body": "**To reproduce:**\r\n\r\nScenario: Test fruit basket\r\n  * def json = {label: \"Fruit basket contains Apple and Mangoes\"}\r\n  * match json.label == \"Fruit basket contains Apple and Mangoes\"\r\n\r\n**Error message:**\r\njavascript evaluation failed: Apple and Mangoes\", <eval>:1:18 Missing close quote\r\nApple and Mangoes\"\r\n                  ^ in <eval> at line number 1 at column number 18", "url": "https://github.com/intuit/karate/issues/696", "user": "Niroshan28", "labels": ["bug", "fixed"], "created": "2019-03-15 13:54:48", "closed": "2019-03-25 01:35:57", "commits": {"7bbcfde0a6ba4706d6b5b951e6b2b0cd6a4e48f8": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "13955ac31155f2a3db92946ca82f70290b12d00b": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "7bbcfde0a6ba4706d6b5b951e6b2b0cd6a4e48f8", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["ed1b0a20b64d67e1d3853997c891a497aa85d348"], "nameRev": "7bbcfde0a6ba4706d6b5b951e6b2b0cd6a4e48f8 tags/v0.9.2~5", "commitMessage": "fix for match step parser #696\n", "commitDateTime": "2019-03-15 19:52:57", "authoredDateTime": "2019-03-15 19:52:57", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/core/MatchStep.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "karate-core/src/test/java/com/intuit/karate/MatchStepTest.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MatchStep.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.MatchStep", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MatchStepTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.MatchStepTest.testMatchStep()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "13955ac31155f2a3db92946ca82f70290b12d00b", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["7bbcfde0a6ba4706d6b5b951e6b2b0cd6a4e48f8"], "nameRev": "13955ac31155f2a3db92946ca82f70290b12d00b tags/v0.9.2~4", "commitMessage": "fix for match step parser #696 prev commit was a fail\n", "commitDateTime": "2019-03-15 19:56:00", "authoredDateTime": "2019-03-15 19:56:00", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/core/MatchStep.java", "insertions": 4, "deletions": 1, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MatchStep.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.MatchStep", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7bbcfde0a6ba4706d6b5b951e6b2b0cd6a4e48f8", "13955ac31155f2a3db92946ca82f70290b12d00b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 6, "deletions": 2, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 1, "INS": 3, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/core"], "changesInPackagesSPOON": ["com.intuit.karate.core.MatchStep"]}, {"title": "V 0.9.1 Dynamic Scenario Outline : Reports does not log few details", "body": "In Version 0.9.1 when we use a dynamic scenario outline with examples reading data from either a csv [dynamic-csv.feature](https://github.com/intuit/karate/blob/master/karate-demo/src/test/java/demo/outline/dynamic-csv.feature) or from a json array [dynamic.feature](https://github.com/intuit/karate/blob/master/karate-demo/src/test/java/demo/outline/dynamic.feature) in the reports the following are missing\r\n\r\n1.  After the method post/get it doesnot log the details\r\n2. \"# print response\" (doesnot print the response) - The print statement doesnot seem to print the value in the variable just the variable name appears in the report\r\n\r\n\r\nTo Reproduce\r\n\r\n1. Add  \"*print response\" to the features [dynamic.feature](https://github.com/intuit/karate/blob/master/karate-demo/src/test/java/demo/outline/dynamic.feature) and [dynamic-csv.feature](https://github.com/intuit/karate/blob/master/karate-demo/src/test/java/demo/outline/dynamic-csv.feature) from karate-demo project.\r\n2. After running the tests in the cucumber reports the following are missing (See attached screenshot below)\r\n-  After the method post/get It does not log the details.\r\n- \"* print response\" (doesnot print the response) - The print statement does not seem to print the value in the variable just the variable name appears in the report\r\n![report](https://user-images.githubusercontent.com/42075044/53936809-24211080-40d1-11e9-824b-cc5c13ab2441.png)\r\n\r\nAttaching a sample screenshot of the reports from the karate-demo project of a scenario outline with examples [examples,feature](https://github.com/intuit/karate/blob/master/karate-demo/src/test/java/demo/outline/examples.feature) where these are getting logged\r\n\r\n![examples](https://user-images.githubusercontent.com/42075044/53937139-33548e00-40d2-11e9-9f0d-41d944b6d2e8.png)\r\n\r\n\r\n\r\n", "url": "https://github.com/intuit/karate/issues/691", "user": "ajsdecode", "labels": ["bug", "fixed"], "created": "2019-03-07 06:50:08", "closed": "2019-03-25 01:39:04", "commits": {}, "ttf": 17.00027777777778, "commitsDetails": []}, {"title": "FileUtils.getAllClassPathUrls doesn't return JARs on classpath for JDK9+", "body": "In JDK9+, the system classloader is replaced with a new AppClassLoader that doesn't extend from URLClassLoader.\r\n\r\nFileUtils.getAllClassPathUrls only checks if the classloader is an instance of URLClassLoader and doesn't have another way of getting urls for JARs that are on the classpath if it isn't.\r\n\r\nAs getAllClassPathUrls is used by scanForFeatureFiles, it seems to mean that trying to reuse feature files in other jars currently can't be done when using JDK9+.", "url": "https://github.com/intuit/karate/issues/687", "user": "tellisnz", "labels": ["bug", "fixed"], "created": "2019-03-05 13:15:41", "closed": "2019-03-25 01:38:43", "commits": {}, "ttf": 19.00027777777778, "commitsDetails": []}, {"title": "Tests hang forever if server is not started", "body": "Hi,\r\n\r\nIf i don't start the server, the tests never end (or maybe i did not wait for a very long timeout).\r\n\r\nKarata version is 0.9.1.\r\n```\r\nkarate.configure('connectTimeout', 5000);\r\nkarate.configure('readTimeout', 5000);\r\n```\r\n\r\nlogs:\r\n```\r\njava.net.ConnectException: Connection refused (Connection refused)\r\n14:03:05.710 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - javascript function call failed:\r\nSignIn.feature:12 -\r\njava.net.ConnectException: Connection refused (Connection refused)\r\n14:03:05.710 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - failed function body: function() {\r\n```\r\n\r\nI tried with karate-apache and karate-jersey, same behavior.\r\n\r\n\r\n", "url": "https://github.com/intuit/karate/issues/686", "user": "Michenux", "labels": ["bug", "fixed"], "created": "2019-02-27 13:06:56", "closed": "2019-03-25 01:38:32", "commits": {"290ff7bafc3c5dadcb82abfc3ed09d256a0affb8": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "3e85bead019dda62b5670734b0caba046a785c6e": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 25.00027777777778, "commitsDetails": [{"commitHash": "290ff7bafc3c5dadcb82abfc3ed09d256a0affb8", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["fec11528b32facdce41034f899fd2f8f68259c16"], "nameRev": "290ff7bafc3c5dadcb82abfc3ed09d256a0affb8 tags/v0.9.2~14", "commitMessage": "fix to edge case of karate-config failure\nand dynamic scenario / parallel=false causes runner latch to not countdown and thus hang ref #686\n", "commitDateTime": "2019-02-27 20:54:54", "authoredDateTime": "2019-02-27 20:54:54", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/core/Feature.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/FeatureExecutionUnit.java", "insertions": 65, "deletions": 60, "lines": 125}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/ScenarioExecutionUnit.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Feature.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.Feature.getScenarioExecutionUnits(com.intuit.karate.core.ExecutionContext,com.intuit.karate.Logger)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "FeatureExecutionUnit.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.FeatureExecutionUnit.run()", "TOT": 9, "UPD": 0, "INS": 1, "MOV": 8, "DEL": 0}]}, {"spoonFilePath": "ScenarioExecutionUnit.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.ScenarioExecutionUnit.getContext()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "3e85bead019dda62b5670734b0caba046a785c6e", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["f1fa7a3d794b88f13ee5a4e61ec0a93d0becfe9a"], "nameRev": "3e85bead019dda62b5670734b0caba046a785c6e tags/v0.9.2~8", "commitMessage": "fixed parallel runner to check for #686\n", "commitDateTime": "2019-03-09 18:58:29", "authoredDateTime": "2019-03-09 18:58:29", "commitGitStats": [{"filePath": "karate-demo/src/test/java/demo/encoding/EncodingParallelRunner.java", "insertions": 22, "deletions": 1, "lines": 23}, {"filePath": "karate-demo/src/test/java/demo/encoding/EncodingRunner.java", "insertions": 1, "deletions": 20, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncodingParallelRunner.java", "spoonMethods": [{"spoonMethodName": "demo.encoding.EncodingParallelRunner", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "demo.encoding.EncodingParallelRunner.beforeClass()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "demo.encoding.EncodingParallelRunner.testParallel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EncodingRunner.java", "spoonMethods": [{"spoonMethodName": "demo.encoding.EncodingRunner.beforeClass()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "demo.encoding.EncodingRunner.testParallel()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "demo.encoding.EncodingRunner", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["290ff7bafc3c5dadcb82abfc3ed09d256a0affb8", "3e85bead019dda62b5670734b0caba046a785c6e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 70, "deletions": 64, "lines": 134, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 20, "UPD": 0, "INS": 7, "MOV": 10, "DEL": 3, "spoonFilesChanged": 5, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/core"], "changesInPackagesSPOON": ["demo.encoding.EncodingRunner.testParallel()", "com.intuit.karate.core.ScenarioExecutionUnit.getContext()", "com.intuit.karate.core.FeatureExecutionUnit.run()", "demo.encoding.EncodingParallelRunner.beforeClass()", "demo.encoding.EncodingParallelRunner", "com.intuit.karate.core.Feature.getScenarioExecutionUnits(com.intuit.karate.core.ExecutionContext,com.intuit.karate.Logger)", "demo.encoding.EncodingRunner.beforeClass()", "demo.encoding.EncodingParallelRunner.testParallel()", "demo.encoding.EncodingRunner"]}, {"title": "the word \"any\" appearing on r.h.s. of a match confuses parser", "body": "from: https://stackoverflow.com/q/54658120/143475\r\n\r\nto replicate:\r\n\r\n```cucumber\r\n* def response = { foo: 'a any b' }\r\n* match response contains { foo: 'a any b' }\r\n```", "url": "https://github.com/intuit/karate/issues/678", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2019-02-13 05:15:05", "closed": "2019-03-25 01:38:25", "commits": {"6e76fc50bd6a20177b0e9f5dc8a67d67874df907": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 39.000277777777775, "commitsDetails": [{"commitHash": "6e76fc50bd6a20177b0e9f5dc8a67d67874df907", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["19ed9f035bfe8ddeb0e6fb0f821c1b2822b569b5"], "nameRev": "6e76fc50bd6a20177b0e9f5dc8a67d67874df907 tags/v0.9.2~17", "commitMessage": "fix for match step parser #678\n", "commitDateTime": "2019-02-16 19:00:34", "authoredDateTime": "2019-02-16 19:00:34", "commitGitStats": [{"filePath": "README.md", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/MatchStep.java", "insertions": 13, "deletions": 14, "lines": 27}, {"filePath": "karate-core/src/test/java/com/intuit/karate/MatchStepTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "karate-demo/README.md", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "karate-demo/src/test/java/demo/headers/call-updates-config.feature", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "karate-demo/src/test/java/demo/outline/dynamic-csv.feature", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MatchStep.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.MatchStep", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 2}]}, {"spoonFilePath": "MatchStepTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.MatchStepTest.testMatchStep()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6e76fc50bd6a20177b0e9f5dc8a67d67874df907"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 14, "lines": 27, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/core"], "changesInPackagesSPOON": ["com.intuit.karate.core.MatchStep"]}, {"title": "http log in html report not correct for dynamic scenario outline", "body": "#472 works as expected, but the log appender seems to be the same instance for all scenarios, and in the HTML report appears only in the last scenario or something like that. needs fixing and an opportunity to re-factor the execution-units  a little more\r\n", "url": "https://github.com/intuit/karate/issues/660", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2019-01-24 03:10:48", "closed": "2019-03-25 01:37:31", "commits": {"053e696bf28f9da8143854577c042f6cb542a33c": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 59.000277777777775, "commitsDetails": [{"commitHash": "053e696bf28f9da8143854577c042f6cb542a33c", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["e3eb193023a695a092c672e59484d6ad468013bd"], "nameRev": "053e696bf28f9da8143854577c042f6cb542a33c tags/v0.9.2~40", "commitMessage": "fixed log vanishing for dynamic scenario outline #660\n", "commitDateTime": "2019-01-24 15:04:19", "authoredDateTime": "2019-01-24 15:04:19", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/core/Feature.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/FeatureContext.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/ScenarioContext.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/ScenarioExecutionUnit.java", "insertions": 8, "deletions": 9, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Feature.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.Feature.getScenarioExecutionUnits(com.intuit.karate.core.ExecutionContext)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "FeatureContext.java", "spoonMethods": []}, {"spoonFilePath": "ScenarioContext.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.ScenarioContext.copy(com.intuit.karate.core.ScenarioInfo)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.core.ScenarioContext.copy()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.core.ScenarioContext", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.core.ScenarioContext.copy(com.intuit.karate.core.ScenarioInfo,com.intuit.karate.Logger)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScenarioExecutionUnit.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.ScenarioExecutionUnit", "TOT": 15, "UPD": 5, "INS": 1, "MOV": 7, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["053e696bf28f9da8143854577c042f6cb542a33c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 15, "deletions": 19, "lines": 34, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 26, "UPD": 8, "INS": 5, "MOV": 7, "DEL": 6, "spoonFilesChanged": 3, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/core"], "changesInPackagesSPOON": ["com.intuit.karate.core.ScenarioContext.copy()", "com.intuit.karate.core.ScenarioContext", "com.intuit.karate.core.ScenarioContext.copy(com.intuit.karate.core.ScenarioInfo,com.intuit.karate.Logger)", "com.intuit.karate.core.ScenarioExecutionUnit", "com.intuit.karate.core.ScenarioContext.copy(com.intuit.karate.core.ScenarioInfo)", "com.intuit.karate.core.Feature.getScenarioExecutionUnits(com.intuit.karate.core.ExecutionContext)"]}, {"title": "log textarea in ui broken in 0.9.1", "body": "yep the scenario parallel logging of #629 resulted in this\r\n", "url": "https://github.com/intuit/karate/issues/659", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2019-01-24 03:07:15", "closed": "2019-03-25 01:37:25", "commits": {"45f346f3c22574c519201b3f1de04033a9bcdbfa": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 59.000277777777775, "commitsDetails": [{"commitHash": "45f346f3c22574c519201b3f1de04033a9bcdbfa", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["053e696bf28f9da8143854577c042f6cb542a33c"], "nameRev": "45f346f3c22574c519201b3f1de04033a9bcdbfa tags/v0.9.2~39", "commitMessage": "fixed log text area appender for ui #659\n", "commitDateTime": "2019-01-24 15:19:01", "authoredDateTime": "2019-01-24 15:19:01", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/core/Feature.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/FeatureExecutionUnit.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/ScenarioExecutionUnit.java", "insertions": 11, "deletions": 5, "lines": 16}, {"filePath": "karate-core/src/main/java/com/intuit/karate/ui/AppSession.java", "insertions": 4, "deletions": 8, "lines": 12}, {"filePath": "karate-junit4/src/main/java/com/intuit/karate/junit4/FeatureInfo.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Feature.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.Feature.getScenarioExecutionUnits(com.intuit.karate.core.ExecutionContext,com.intuit.karate.Logger)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FeatureExecutionUnit.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.FeatureExecutionUnit.init(com.intuit.karate.Logger)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.core.FeatureExecutionUnit.run()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScenarioExecutionUnit.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.ScenarioExecutionUnit", "TOT": 14, "UPD": 0, "INS": 7, "MOV": 3, "DEL": 4}]}, {"spoonFilePath": "AppSession.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ui.AppSession.getLogger()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.ui.AppSession", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "FeatureInfo.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.FeatureInfo", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["45f346f3c22574c519201b3f1de04033a9bcdbfa"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 26, "deletions": 22, "lines": 48, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 26, "UPD": 0, "INS": 16, "MOV": 5, "DEL": 5, "spoonFilesChanged": 5, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/ui", "karate-junit4/src/main/java/com/intuit/karate/junit4", "karate-core/src/main/java/com/intuit/karate/core"], "changesInPackagesSPOON": ["com.intuit.karate.junit4.FeatureInfo", "com.intuit.karate.core.ScenarioExecutionUnit", "com.intuit.karate.ui.AppSession.getLogger()", "com.intuit.karate.core.FeatureExecutionUnit.run()", "com.intuit.karate.ui.AppSession", "com.intuit.karate.core.Feature.getScenarioExecutionUnits(com.intuit.karate.core.ExecutionContext,com.intuit.karate.Logger)", "com.intuit.karate.core.FeatureExecutionUnit.init(com.intuit.karate.Logger)"]}, {"title": "Exception in thread \u201cmain\u201d java.lang.StackOverflowError in v.0.9.1", "body": "When I'm trying to run *.feature file or a single scenario with \"right-click\" (IntelliJ Idea), I've always received an exception:\r\n``\r\nException in thread \"main\" java.lang.StackOverflowError\r\n    at java.util.HashMap.<init>(HashMap.java:457)\r\n    at java.util.LinkedHashMap.<init>(LinkedHashMap.java:347)\r\n    at java.util.HashSet.<init>(HashSet.java:162)\r\n    at java.util.LinkedHashSet.<init>(LinkedHashSet.java:154)\r\n    at jdk.nashorn.internal.runtime.ScriptObject$KeyIterator.init(ScriptObject.java:2467)\r\n    at jdk.nashorn.internal.runtime.ScriptObject$ScriptObjectIterator.hasNext(ScriptObject.java:2441)\r\n    at jdk.nashorn.api.scripting.ScriptObjectMirror$13.call(ScriptObjectMirror.java:368)\r\n    at jdk.nashorn.api.scripting.ScriptObjectMirror$13.call(ScriptObjectMirror.java:363)\r\n    at jdk.nashorn.api.scripting.ScriptObjectMirror.inGlobal(ScriptObjectMirror.java:858)\r\n    at jdk.nashorn.api.scripting.ScriptObjectMirror.entrySet(ScriptObjectMirror.java:363)\r\n    at net.minidev.json.reader.JsonWriter$7.writeJSONString(JsonWriter.java:135)\r\n    at net.minidev.json.reader.JsonWriter$7.writeJSONString(JsonWriter.java:128)\r\n    at com.intuit.karate.JsonUtils$NashornObjectJsonWriter.writeJSONString(JsonUtils.java:77)\r\n    at com.intuit.karate.JsonUtils$NashornObjectJsonWriter.writeJSONString(JsonUtils.java:67)\r\n...\r\n``\r\n\r\nSame scenario works fine if I run with TestRunner.java. Looks like that problem is in IJ cucumber plugin. Maybe someone has a solution or workaround for this issue.\r\n\r\nI'm using karate 0.9.1, cucumber for Java plugin: v183.4284.148, Idea 2018.3.3\r\n\r\n[myproject.zip](https://github.com/intuit/karate/files/2789135/myproject.zip)\r\n\r\n", "url": "https://github.com/intuit/karate/issues/658", "user": "R0manL", "labels": ["bug", "fixed"], "created": "2019-01-23 21:02:46", "closed": "2019-03-25 01:37:18", "commits": {"ececc21ba68fda98c0886f3ce2d66533c7d14844": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 60.000277777777775, "commitsDetails": [{"commitHash": "ececc21ba68fda98c0886f3ce2d66533c7d14844", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["1416de6898be49e90af9f6eb2758818f676c4421"], "nameRev": "ececc21ba68fda98c0886f3ce2d66533c7d14844 tags/v0.9.2~35", "commitMessage": "handle cyclic references in call arg json html output #658\n", "commitDateTime": "2019-01-27 13:25:35", "authoredDateTime": "2019-01-27 13:25:35", "commitGitStats": [{"filePath": "README.md", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "karate-core/src/main/java/com/intuit/karate/JsonUtils.java", "insertions": 41, "deletions": 3, "lines": 44}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/FeatureResult.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "karate-core/src/test/java/com/intuit/karate/ScriptTest.java", "insertions": 12, "deletions": 1, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JsonUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.JsonUtils.removeCyclicReferences(java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.JsonUtils.recurseCyclic(int,java.lang.Object,java.util.Set)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FeatureResult.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.FeatureResult.getCallArgPretty()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ScriptTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptTest.testJsonCyclicReferences()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ececc21ba68fda98c0886f3ce2d66533c7d14844"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 43, "deletions": 4, "lines": 47, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/core", "karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.JsonUtils.recurseCyclic(int,java.lang.Object,java.util.Set)", "com.intuit.karate.JsonUtils.removeCyclicReferences(java.util.Map)", "com.intuit.karate.core.FeatureResult.getCallArgPretty()"]}, {"title": "javafx on java 11", "body": "Can not build intuit/karate on java 11.\r\n\r\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.6.0:testCompile (default-testCompile) on project karate-junit4: Compilation failure\r\n[ERROR] /home/dev/projects/karate/karate/karate-junit4/src/test/java/com/intuit/karate/junit4/demos/UiRunner.java:[14,12] cannot access javafx.application.Application\r\n[ERROR]   class file for javafx.application.Application not found", "url": "https://github.com/intuit/karate/issues/656", "user": "shiluka", "labels": ["bug", "fixed"], "created": "2019-01-23 08:28:12", "closed": "2019-03-25 01:36:46", "commits": {"e3eb193023a695a092c672e59484d6ad468013bd": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 60.000277777777775, "commitsDetails": [{"commitHash": "e3eb193023a695a092c672e59484d6ad468013bd", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["b05a2101b188a700c4c41b95cfd1ca09fde26c4e", "723f650992b04a96a2dac8c9e8c8039693f20fd4"], "nameRev": "e3eb193023a695a092c672e59484d6ad468013bd tags/v0.9.2~41", "commitMessage": "Merge pull request #657 from shiluka/develop_#656\n\nadded dependency javafx-controls for java 11 #656", "commitDateTime": "2019-01-23 18:26:57", "authoredDateTime": "2019-01-23 18:26:57", "commitGitStats": [{"filePath": "pom.xml", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "karate.tagValues can be wrong when running scenarios in parallel", "body": "I have observed that if you have multiple scenarios in a feature and you run the scenarios in parallel then you can (quite reliably) get a wrong karate.tagValues in your scenario.\r\n\r\nI have attached a minimal project where this issue can be reproduced: [paralleltags.zip](https://github.com/intuit/karate/files/2782951/paralleltags.zip).\r\n\r\nIf you execute the SequentialRunner then all tests pass as expected, but with the ParallelRunner they don't. Sometimes tests run fine with the ParallelRunner, so I suspect there is a race condition somewhere.\r\n\r\nPlease let me know should you need any more information.\r\n", "url": "https://github.com/intuit/karate/issues/655", "user": "kkris", "labels": ["bug", "fixed"], "created": "2019-01-22 13:32:12", "closed": "2019-03-25 01:37:08", "commits": {"d5070d5c9f84899f428ccf45b0c03c500f399d68": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "b05a2101b188a700c4c41b95cfd1ca09fde26c4e": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 61.000277777777775, "commitsDetails": [{"commitHash": "d5070d5c9f84899f428ccf45b0c03c500f399d68", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["a416c94c8c44a2294e5471048353856f61cefe15"], "nameRev": "d5070d5c9f84899f428ccf45b0c03c500f399d68 tags/v0.9.2~43", "commitMessage": "fix race condition for scenario context init #655\n", "commitDateTime": "2019-01-22 19:32:14", "authoredDateTime": "2019-01-22 19:32:14", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/CallContext.java", "insertions": 0, "deletions": 21, "lines": 21}, {"filePath": "karate-core/src/main/java/com/intuit/karate/Match.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/StepActions.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/FeatureBackend.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/FeatureExecutionUnit.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/Scenario.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/ScenarioContext.java", "insertions": 11, "deletions": 4, "lines": 15}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/ScenarioExecutionUnit.java", "insertions": 2, "deletions": 9, "lines": 11}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/Tags.java", "insertions": 9, "deletions": 2, "lines": 11}, {"filePath": "karate-core/src/test/java/com/intuit/karate/ConfigTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/test/java/com/intuit/karate/ScriptTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "karate-core/src/test/java/com/intuit/karate/core/MandatoryTagHook.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "karate-core/src/test/java/com/intuit/karate/http/HttpClientTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallContext.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.CallContext", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.CallContext.getTags()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.CallContext.setTags(com.intuit.karate.core.Tags)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.CallContext.setScenarioInfo(com.intuit.karate.core.ScenarioInfo)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.CallContext.getScenarioInfo()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Match.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Match", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StepActions.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.StepActions", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FeatureBackend.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.FeatureBackend", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FeatureExecutionUnit.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.FeatureExecutionUnit.run()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Scenario.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.Scenario", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.core.Scenario.getTagsEffective()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScenarioContext.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.ScenarioContext", "TOT": 16, "UPD": 4, "INS": 2, "MOV": 6, "DEL": 4}]}, {"spoonFilePath": "ScenarioExecutionUnit.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.ScenarioExecutionUnit", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.core.ScenarioExecutionUnit.init()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 3}]}, {"spoonFilePath": "Tags.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.Tags.merge(java.util.List[])", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.core.Tags", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.core.Tags.getTagsOriginal()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConfigTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ConfigTest.testSettingVariableViaKarateConfig()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScriptTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptTest.getContext()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testKarateEnvAccessFromScript()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MandatoryTagHook.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.MandatoryTagHook.beforeScenario(com.intuit.karate.core.Scenario,com.intuit.karate.core.ScenarioContext)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HttpClientTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpClientTest.getContext()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "b05a2101b188a700c4c41b95cfd1ca09fde26c4e", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["d5070d5c9f84899f428ccf45b0c03c500f399d68"], "nameRev": "b05a2101b188a700c4c41b95cfd1ca09fde26c4e tags/v0.9.2~42", "commitMessage": "improved impl for prev commit #655\n", "commitDateTime": "2019-01-22 19:46:45", "authoredDateTime": "2019-01-22 19:46:45", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/core/Tags.java", "insertions": 12, "deletions": 6, "lines": 18}, {"filePath": "karate-core/src/test/java/com/intuit/karate/core/MandatoryTagHook.java", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Tags.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.Tags", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.core.Tags.getTagsOriginal()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.core.Tags.iterator()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MandatoryTagHook.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.MandatoryTagHook.beforeScenario(com.intuit.karate.core.Scenario,com.intuit.karate.core.ScenarioContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d5070d5c9f84899f428ccf45b0c03c500f399d68", "b05a2101b188a700c4c41b95cfd1ca09fde26c4e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 42, "deletions": 50, "lines": 92, "gitFilesChange": 9}, "spoonStatsSummary": {"TOT": 54, "UPD": 13, "INS": 15, "MOV": 7, "DEL": 19, "spoonFilesChanged": 10, "spoonMethodsChanged": 19}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/core", "karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.core.MandatoryTagHook.beforeScenario(com.intuit.karate.core.Scenario,com.intuit.karate.core.ScenarioContext)", "com.intuit.karate.core.Tags.getTagsOriginal()", "com.intuit.karate.core.Tags", "com.intuit.karate.CallContext.setTags(com.intuit.karate.core.Tags)", "com.intuit.karate.core.FeatureExecutionUnit.run()", "com.intuit.karate.Match", "com.intuit.karate.CallContext.getTags()", "com.intuit.karate.StepActions", "com.intuit.karate.CallContext", "com.intuit.karate.core.Tags.iterator()", "com.intuit.karate.core.Tags.merge(java.util.List[])", "com.intuit.karate.core.Scenario.getTagsEffective()", "com.intuit.karate.core.ScenarioContext", "com.intuit.karate.core.ScenarioExecutionUnit", "com.intuit.karate.core.ScenarioExecutionUnit.init()", "com.intuit.karate.core.FeatureBackend", "com.intuit.karate.CallContext.setScenarioInfo(com.intuit.karate.core.ScenarioInfo)", "com.intuit.karate.core.Scenario", "com.intuit.karate.CallContext.getScenarioInfo()"]}, {"title": "match lhs json-path involving key names with spaces fails", "body": "This is supposed to work:\r\n\r\n```cucumber\r\n* match response.integration.serviceData['Usage Data'][0].Stage == \"Test\"\r\n```\r\n\r\nbut results in:\r\n\r\n```\r\njavascript evaluation failed: response.integration.serviceData['Usage, <eval>:1:39 Missing close quote\r\nresponse.integration.serviceData['Usage\r\n                                       ^ in <eval> at line number 1 at column number 39\r\n```\r\n", "url": "https://github.com/intuit/karate/issues/652", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2019-01-18 13:22:20", "closed": "2019-03-25 01:36:16", "commits": {"3489b008dd7296e61d55672b9ff828826124c4ab": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 65.00027777777778, "commitsDetails": [{"commitHash": "3489b008dd7296e61d55672b9ff828826124c4ab", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["31b461fb730e14f644435761956a23059211e124"], "nameRev": "3489b008dd7296e61d55672b9ff828826124c4ab tags/v0.9.2~48", "commitMessage": "edge case for match expression parser #652\n", "commitDateTime": "2019-01-18 18:52:05", "authoredDateTime": "2019-01-18 18:52:05", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/core/MatchStep.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "karate-core/src/test/java/com/intuit/karate/MatchStepTest.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MatchStep.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.MatchStep", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MatchStepTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.MatchStepTest.testMatchStep()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3489b008dd7296e61d55672b9ff828826124c4ab"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 2, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/core"], "changesInPackagesSPOON": ["com.intuit.karate.core.MatchStep"]}, {"title": "[karate-netty] file download use case corrupts binary file stream", "body": "This will corrupt the bytes:\r\n\r\n```cucumber\r\nScenario: pathMatches('/v1/download')\r\n    * def response = read('test.pdf.zip')\r\n```\r\n\r\nworkaround for 0.9.1:\r\n\r\n```cucumber\r\n    * def responseHeaders = { 'Content-Type': 'application/octet-stream' }\r\n    * bytes response = read('test.pdf.zip')\r\n```", "url": "https://github.com/intuit/karate/issues/649", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2019-01-16 04:05:09", "closed": "2019-03-25 01:36:59", "commits": {"cb3f89f90617db1e556b3ffaf7be986a829d71de": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 67.00027777777778, "commitsDetails": [{"commitHash": "cb3f89f90617db1e556b3ffaf7be986a829d71de", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["d41af445a0dffd78550c9a0202fc33fa2864dfec"], "nameRev": "cb3f89f90617db1e556b3ffaf7be986a829d71de tags/v0.9.2~51", "commitMessage": "fix / simplified netty response handling for binary content #649\n", "commitDateTime": "2019-01-16 09:45:29", "authoredDateTime": "2019-01-16 09:45:29", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/core/FeatureBackend.java", "insertions": 1, "deletions": 5, "lines": 6}, {"filePath": "karate-netty/src/test/java/com/intuit/karate/mock/DownloadRunner.java", "insertions": 29, "deletions": 0, "lines": 29}, {"filePath": "karate-netty/src/test/java/com/intuit/karate/mock/_mock.feature", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "karate-netty/src/test/java/com/intuit/karate/mock/download.feature", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "karate-netty/src/test/java/com/intuit/karate/mock/test.pdf.zip", "insertions": 0, "deletions": 0, "lines": 0}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FeatureBackend.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.FeatureBackend.buildResponse(com.intuit.karate.http.HttpRequest,long)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "DownloadRunner.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.mock.DownloadRunner", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cb3f89f90617db1e556b3ffaf7be986a829d71de"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 5, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/core"], "changesInPackagesSPOON": ["com.intuit.karate.core.FeatureBackend.buildResponse(com.intuit.karate.http.HttpRequest,long)", "com.intuit.karate.mock.DownloadRunner"]}, {"title": "[standalone] issues with relative path resolution for karate-config.js", "body": "refer https://stackoverflow.com/q/54196518/143475\r\n\r\nalso re-uploading ZIP file here in case it gets deleted from SO\r\n[karate-test.zip](https://github.com/intuit/karate/files/2759520/karate-test.zip)\r\n\r\n", "url": "https://github.com/intuit/karate/issues/648", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2019-01-15 12:03:45", "closed": "2019-01-15 12:40:39", "commits": {"d41af445a0dffd78550c9a0202fc33fa2864dfec": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "d41af445a0dffd78550c9a0202fc33fa2864dfec", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["0151adc784ae7f31105c6efe95d17a239c8315ef"], "nameRev": "d41af445a0dffd78550c9a0202fc33fa2864dfec tags/v0.9.2~52", "commitMessage": "path resolution for config for standalone jar #648\n", "commitDateTime": "2019-01-15 17:57:52", "authoredDateTime": "2019-01-15 17:57:52", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/ScriptBindings.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "karate-netty/karate-config.js", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "karate-netty/src/main/java/com/intuit/karate/netty/Main.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "karate-netty/src/test/java/com/intuit/karate/netty/MainWinTestRunner.java", "insertions": 25, "deletions": 1, "lines": 26}, {"filePath": "karate-netty/src/test/java/karate-config.js", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ScriptBindings.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptBindings.readKarateConfigForEnv(boolean,java.lang.String,java.lang.String)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Main.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.netty.Main.call()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MainWinTestRunner.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.netty.MainWinTestRunner.testMain()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.netty.MainWinTestRunner.testMain2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.netty.MainWinTestRunner.testCurrentDirectory1()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.netty.MainWinTestRunner.testCurrentDirectory2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.netty.MainWinTestRunner.testCurrentDirectory3()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d41af445a0dffd78550c9a0202fc33fa2864dfec"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 3, "lines": 8, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 4, "UPD": 3, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-netty/src/main/java/com/intuit/karate/netty", "karate-core/src/main/java/com/intuit/karate", "karate-netty/karate-config.js"], "changesInPackagesSPOON": ["com.intuit.karate.ScriptBindings.readKarateConfigForEnv(boolean,java.lang.String,java.lang.String)", "com.intuit.karate.netty.Main.call()"]}, {"title": "When some http client uses lower case content-length header karate.proceed fails ", "body": "\r\nWhen we try to use karate.proceed functionality with version 0.9.0 https://github.com/intuit/karate/tree/master/karate-netty#karateproceed\r\n\r\nwhen the request has lower case header **content-length** it fails because \r\n\r\nthe proceed method from ScriptBridge class is removing only **Content-Length** header in upper case. \r\n\r\n**request.removeHeader(HttpUtils.HEADER_CONTENT_LENGTH);**\r\n\r\nso in case of  lower case content-length header it doesn't removed from headers so we get exception **org.apache.http.ProtocolException: Content-Length header already present**\r\n\r\nSo, it seems that the headers' names are treated case-sensitively by karate, when they should be case insensitive according to the HTTP spec.\r\n\r\nThanks!\r\n", "url": "https://github.com/intuit/karate/issues/637", "user": "anandaMSM", "labels": ["bug", "fixed"], "created": "2019-01-04 15:02:27", "closed": "2019-01-15 03:34:31", "commits": {"a1b7246fa8aa6840936c43565861c23c8321084b": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 10.000277777777777, "commitsDetails": [{"commitHash": "a1b7246fa8aa6840936c43565861c23c8321084b", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["5b8b4a7ce67ea6d8ee7ef842058fc0dca1c4a044"], "nameRev": "a1b7246fa8aa6840936c43565861c23c8321084b tags/v0.9.1~7", "commitMessage": "header remove in netty routine now case-insensitive #637\n", "commitDateTime": "2019-01-06 23:13:26", "authoredDateTime": "2019-01-06 23:13:26", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/core/ScriptBridge.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/http/HttpRequestBuilder.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "karate-core/src/test/java/com/intuit/karate/http/HttpRequestBuilderTest.java", "insertions": 21, "deletions": 0, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ScriptBridge.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.ScriptBridge.proceed(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpRequestBuilder.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpRequestBuilder.removeHeaderIgnoreCase(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpRequestBuilderTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpRequestBuilderTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a1b7246fa8aa6840936c43565861c23c8321084b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 14, "deletions": 1, "lines": 15, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/core", "karate-core/src/main/java/com/intuit/karate/http"], "changesInPackagesSPOON": ["com.intuit.karate.http.HttpRequestBuilder.removeHeaderIgnoreCase(java.lang.String)", "com.intuit.karate.core.ScriptBridge.proceed(java.lang.String)"]}, {"title": "Migration 0.7.0 to 0.9.0 issue - callonce in Background does not work anymore even when using @parallel=false", "body": "Issue:\r\nScenarios (that should not run in parallel in a feature file since they use common scoped variable defined in Background) fail when upgrading to version 0.9.0 even when using @parallel=false tag\r\n\r\nDescription:\r\nSome of our karate feature files have scenarios that cannot be executed in parallel, but have to be run sequentially in the order of appearance in the feature file. This is due to common scoped variables being updated/read/shared by the scenarios in a feature file.\r\nSo, while the feature files themselves can (and are) run in parallel, the scenarios in the feature files cannot be run in parallel, but have to run sequentially.\r\n\r\nSteps to reproduce:\r\nSee two attached zipped artefacts - \r\n\r\n- myproject-0.7.0.zip - uses karate 0.7.0 - and runs fine\r\n\r\n- myproject-0.9.0.zip - uses karate 0.9.0 - fails\r\n\r\nBoth projects use the same feature file. The one in 0.9.0 version uses @parallel=false tag to force the scenarios to be run sequentially. Still the scoped variable is reset when executing scenario 2.\r\n\r\n[myproject-0.7.0.zip](https://github.com/intuit/karate/files/2715318/myproject-0.7.0.zip)\r\n[myproject-0.9.0.zip](https://github.com/intuit/karate/files/2715319/myproject-0.9.0.zip)\r\n\r\n\r\n\r\n", "url": "https://github.com/intuit/karate/issues/635", "user": "iyogi", "labels": ["bug", "fixed"], "created": "2018-12-28 17:31:30", "closed": "2019-01-15 03:34:12", "commits": {"2939fe61d16766ebd3909dcfa2d076cae5898fb6": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 17.00027777777778, "commitsDetails": [{"commitHash": "2939fe61d16766ebd3909dcfa2d076cae5898fb6", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["68d041ba693c824b0a497de2542a27040623de49"], "nameRev": "2939fe61d16766ebd3909dcfa2d076cae5898fb6 tags/v0.9.1~12", "commitMessage": "not defensive cloning callonce result anymore ref #635\nit is up to users to not clobber the result and looks like some users rely on callonce to maintain\nstate across multiple scenarios within a feature\nnot able to recall now why the clone was introduce, it happened at the time we implemented dynamic scenario outlines\nshould be okay i think, also typically users doing this have to use @parallel=false\n", "commitDateTime": "2018-12-29 12:19:35", "authoredDateTime": "2018-12-29 12:19:35", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/scenario-variable-scope.feature", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.callWithCache(java.lang.String,java.lang.String,com.intuit.karate.core.ScenarioContext,boolean)", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 3}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2939fe61d16766ebd3909dcfa2d076cae5898fb6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 5, "lines": 10, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.Script.callWithCache(java.lang.String,java.lang.String,com.intuit.karate.core.ScenarioContext,boolean)"]}, {"title": "afterScenario not working with latest version (0.9.0)", "body": "I have upgraded the version of a project from 0.7.0.2 to 0.9.0 and the functionality for running afterFeature has stopped working.\r\n\r\nI am configuring it like:\r\n* configure afterFeature = function(){ karate.call('create-user-cleanup.feature'); }\r\n\r\nAm I doing something wrong? There is no failure log but the cleanup feature file is not called.", "url": "https://github.com/intuit/karate/issues/630", "user": "gonditeniz", "labels": ["bug", "fixed"], "created": "2018-12-21 16:41:37", "closed": "2019-01-15 03:35:27", "commits": {"9662a49712b68b55eb3c9653b366132b1e844ffe": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "46fbc9816b161a077ca7d06d035231528978b8c2": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 24.00027777777778, "commitsDetails": [{"commitHash": "9662a49712b68b55eb3c9653b366132b1e844ffe", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["0d0098a0a3c754d79d59b2ede832fa651ef2b275"], "nameRev": "9662a49712b68b55eb3c9653b366132b1e844ffe tags/v0.9.1~9", "commitMessage": "scenario info error was not being set #630\nalso a change from 0.8.0 is that any feature files called via the js api will NOT show up in the report\nimplementation would be too complex and felt not worth it - since hooks are rarely used and do not belong in the flow of the test steps anyway\n", "commitDateTime": "2019-01-03 14:15:37", "authoredDateTime": "2019-01-03 14:15:37", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/core/ScenarioExecutionUnit.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/shell/FileLogAppender.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/FailHookRunner.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/fail-hook-log.feature", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/fail-hook.feature", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ScenarioExecutionUnit.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.ScenarioExecutionUnit.execute(com.intuit.karate.core.Step)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "FileLogAppender.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.shell.FileLogAppender", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.shell.FileLogAppender.append(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.shell.FileLogAppender.close()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FailHookRunner.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.demos.FailHookRunner", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "46fbc9816b161a077ca7d06d035231528978b8c2", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["a1b7246fa8aa6840936c43565861c23c8321084b"], "nameRev": "46fbc9816b161a077ca7d06d035231528978b8c2 tags/v0.9.1~6", "commitMessage": "updated doc in example ref #630\n", "commitDateTime": "2019-01-07 17:46:06", "authoredDateTime": "2019-01-07 17:46:06", "commitGitStats": [{"filePath": "karate-demo/src/test/java/demo/hooks/hooks.feature", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9662a49712b68b55eb3c9653b366132b1e844ffe", "46fbc9816b161a077ca7d06d035231528978b8c2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 0, "lines": 7, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 10.0, "UPD": 0.0, "INS": 7.0, "MOV": 3.0, "DEL": 0.0, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/core", "karate-core/src/main/java/com/intuit/karate/shell"], "changesInPackagesSPOON": ["com.intuit.karate.shell.FileLogAppender", "com.intuit.karate.junit4.demos.FailHookRunner", "com.intuit.karate.core.ScenarioExecutionUnit.execute(com.intuit.karate.core.Step)", "com.intuit.karate.shell.FileLogAppender.close()", "com.intuit.karate.shell.FileLogAppender.append(java.lang.String)"]}, {"title": "Parallel projects : cucumber report display problem", "body": "I managed to reproduce this problem with your skeleton project. You can find it here :\r\nhttps://github.com/MercierAdrien/karateProblem\r\n\r\nWhat exactly is the problem : in target/cucumber-html-reports/report-feature_examples-users-users-feature.html, the http requests and answers, which are supposed to be displayed just under each \"When method {get|post|delete}\", are displayed elsewhere. Sometimes multiple requests are grouped, while elsewhere there will be nothing.\r\nThis is not the case in karate 0.8.0 or with the new tag @parallel=false\r\n", "url": "https://github.com/intuit/karate/issues/629", "user": "MercierAdrien", "labels": ["bug", "fixed"], "created": "2018-12-21 13:02:07", "closed": "2019-01-15 03:35:12", "commits": {"fca36960ee523f51553f539cfb1ee67f084e17f3": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 24.00027777777778, "commitsDetails": [{"commitHash": "fca36960ee523f51553f539cfb1ee67f084e17f3", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["09c835b26dd480d2edfbc4eebdb2f199cd10bf43"], "nameRev": "fca36960ee523f51553f539cfb1ee67f084e17f3 tags/v0.9.1~15", "commitMessage": "fix for report log jumbling issue for parallel  scenarios #629\nthis is a nasty one that requires an immediate release, will request some testing first\nnow we have to open a new log file for each scenario, even though this increases the number of open files\nat run-time, i this is ok as it will be limited to the number of parallel threads * avg no of scenarios per feature\nthis required a mini-overhaul of the logging\n", "commitDateTime": "2018-12-21 20:53:57", "authoredDateTime": "2018-12-21 20:53:57", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Logger.java", "insertions": 9, "deletions": 1, "lines": 10}, {"filePath": "karate-core/src/main/java/com/intuit/karate/Match.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "karate-core/src/main/java/com/intuit/karate/StepActions.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/ExecutionContext.java", "insertions": 22, "deletions": 12, "lines": 34}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/Feature.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/FeatureBackend.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/FeatureContext.java", "insertions": 12, "deletions": 21, "lines": 33}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/FeatureExecutionUnit.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/Scenario.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/ScenarioContext.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/ScenarioExecutionUnit.java", "insertions": 14, "deletions": 4, "lines": 18}, {"filePath": "karate-core/src/main/java/com/intuit/karate/ui/AppSession.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/test/java/com/intuit/karate/ConfigTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/test/java/com/intuit/karate/ScriptTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "karate-core/src/test/java/com/intuit/karate/http/HttpClientTest.java", "insertions": 2, "deletions": 3, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Logger.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Logger.copy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Logger", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Match.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Match", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StepActions.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.StepActions", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ExecutionContext.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.ExecutionContext", "TOT": 42, "UPD": 6, "INS": 4, "MOV": 26, "DEL": 6}, {"spoonMethodName": "com.intuit.karate.core.ExecutionContext.getLogAppender(java.lang.String,com.intuit.karate.Logger)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Feature.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.Feature.getScenarioExecutionUnits(com.intuit.karate.core.ExecutionContext)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 2}]}, {"spoonFilePath": "FeatureBackend.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.FeatureBackend", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FeatureContext.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.FeatureContext.forWorkingDir(java.lang.String,java.io.File,com.intuit.karate.Logger)", "TOT": 10, "UPD": 6, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.core.FeatureContext", "TOT": 11, "UPD": 1, "INS": 0, "MOV": 4, "DEL": 6}, {"spoonMethodName": "com.intuit.karate.core.FeatureContext.forLogger(com.intuit.karate.Logger)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.core.FeatureContext.forWorkingDir(java.lang.String,java.io.File)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "FeatureExecutionUnit.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.FeatureExecutionUnit.run()", "TOT": 8, "UPD": 5, "INS": 1, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "Scenario.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.Scenario.getUniqueId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScenarioContext.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.ScenarioContext", "TOT": 14, "UPD": 0, "INS": 8, "MOV": 0, "DEL": 6}]}, {"spoonFilePath": "ScenarioExecutionUnit.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.ScenarioExecutionUnit.execute(com.intuit.karate.core.Step)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.core.ScenarioExecutionUnit.stop()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.core.ScenarioExecutionUnit", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.core.ScenarioExecutionUnit.init()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AppSession.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ui.AppSession", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ConfigTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ConfigTest.testSettingVariableViaKarateConfig()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScriptTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptTest.getContext()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testKarateEnvAccessFromScript()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpClientTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpClientTest.getContext()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fca36960ee523f51553f539cfb1ee67f084e17f3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 86, "deletions": 56, "lines": 142, "gitFilesChange": 12}, "spoonStatsSummary": {"TOT": 122, "UPD": 21, "INS": 33, "MOV": 41, "DEL": 27, "spoonFilesChanged": 12, "spoonMethodsChanged": 20}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/ui", "karate-core/src/main/java/com/intuit/karate", "karate-core/src/main/java/com/intuit/karate/core"], "changesInPackagesSPOON": ["com.intuit.karate.core.FeatureContext.forLogger(com.intuit.karate.Logger)", "com.intuit.karate.core.ExecutionContext.getLogAppender(java.lang.String,com.intuit.karate.Logger)", "com.intuit.karate.Logger", "com.intuit.karate.Logger.copy()", "com.intuit.karate.Match", "com.intuit.karate.core.FeatureContext", "com.intuit.karate.ui.AppSession", "com.intuit.karate.core.FeatureExecutionUnit.run()", "com.intuit.karate.core.FeatureContext.forWorkingDir(java.lang.String,java.io.File,com.intuit.karate.Logger)", "com.intuit.karate.core.Scenario.getUniqueId()", "com.intuit.karate.core.ScenarioExecutionUnit.init()", "com.intuit.karate.core.FeatureBackend", "com.intuit.karate.core.ScenarioExecutionUnit.execute(com.intuit.karate.core.Step)", "com.intuit.karate.core.ScenarioExecutionUnit", "com.intuit.karate.core.ExecutionContext", "com.intuit.karate.core.ScenarioContext", "com.intuit.karate.core.Feature.getScenarioExecutionUnits(com.intuit.karate.core.ExecutionContext)", "com.intuit.karate.core.FeatureContext.forWorkingDir(java.lang.String,java.io.File)", "com.intuit.karate.core.ScenarioExecutionUnit.stop()", "com.intuit.karate.StepActions"]}, {"title": "investigate #ignore and #notnull and fix docs if needed", "body": "from stack overflow: https://stackoverflow.com/q/53871983/143475\r\n\r\nyes this fails now:\r\n\r\n```cucumber\r\n* def foo = { a: 1 }\r\n* match foo == { a: 1, b: '#ignore' }\r\n```", "url": "https://github.com/intuit/karate/issues/628", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2018-12-21 07:51:12", "closed": "2019-01-15 03:35:02", "commits": {"09c835b26dd480d2edfbc4eebdb2f199cd10bf43": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 24.00027777777778, "commitsDetails": [{"commitHash": "09c835b26dd480d2edfbc4eebdb2f199cd10bf43", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["1974db86a25c0690f50273dea12243405f761c11"], "nameRev": "09c835b26dd480d2edfbc4eebdb2f199cd10bf43 tags/v0.9.1~16", "commitMessage": "regression ! turns out we broke #ignore a little ref #628\n", "commitDateTime": "2018-12-21 13:25:26", "authoredDateTime": "2018-12-21 13:25:26", "commitGitStats": [{"filePath": "README.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "karate-core/src/test/java/com/intuit/karate/ScriptTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/examples.feature", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.matchNestedObject(char,java.lang.String,com.intuit.karate.core.MatchType,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,com.intuit.karate.core.ScenarioContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ScriptTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptTest.testMatchMapObjects()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["09c835b26dd480d2edfbc4eebdb2f199cd10bf43"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 1, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.Script.matchNestedObject(char,java.lang.String,com.intuit.karate.core.MatchType,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,com.intuit.karate.core.ScenarioContext)"]}, {"title": "SSL on Java 11", "body": "\r\nLooks like SSL has issues on Java 11 as per this blog post: https://automationpanda.com/2018/12/10/testing-web-services-with-karate/\r\n\r\nto be honest I haven't gone beyond even Java 8 yet - so this would be an ideal project for someone to get started with contributing.", "url": "https://github.com/intuit/karate/issues/617", "user": "ptrthomas", "labels": ["bug", "help wanted"], "created": "2018-12-10 08:23:48", "closed": "2019-03-11 15:46:33", "commits": {}, "ttf": 91.00027777777778, "commitsDetails": []}, {"title": "Unable to mock application/x-www-form-urlencoded requests with netty", "body": "We are unable to mock the application/x-www-form-urlencoded requests we use for oauth with netty.\r\n\r\nThe error returned is:\r\njava.lang.RuntimeException: javascript evaluation failed: client_secret=MySecret&grant_type=MyGrantType&client_id=MyClientId, <eval>:1:45 Invalid left hand side for assignment\r\nclient_secret=MySecret&grant_type=MyGrantType&client_id=MyClientId\r\n\tat com.intuit.karate.ScriptBindings.eval(ScriptBindings.java:144)\r\n\tat com.intuit.karate.ScriptBindings.updateBindingsAndEval(ScriptBindings.java:134)\r\n\tat com.intuit.karate.ScriptBindings.evalInNashorn(ScriptBindings.java:119)\r\n\tat com.intuit.karate.Script.evalJsExpression(Script.java:371)\r\n\tat com.intuit.karate.Script.evalKarateExpression(Script.java:285)\r\n\tat com.intuit.karate.Script.evalKarateExpression(Script.java:171)\r\n\tat com.intuit.karate.Script.assign(Script.java:601)\r\n\tat com.intuit.karate.Script.assign(Script.java:527)\r\n\tat com.intuit.karate.Match.def(Match.java:98)\r\n\r\nAttached is a project that shows the issue.\r\n\r\n[netty-form-issue.zip](https://github.com/intuit/karate/files/2574883/netty-form-issue.zip)\r\n\r\n", "url": "https://github.com/intuit/karate/issues/592", "user": "brianheazlewood", "labels": ["bug", "fixed"], "created": "2018-11-13 06:42:30", "closed": "2018-12-02 17:21:36", "commits": {}, "ttf": 19.00027777777778, "commitsDetails": []}, {"title": "The keyword 'match' works incorrectly", "body": "Summary:\r\nThe test case is passed when asserting 2 json have different keys.\r\n\r\nDescription:\r\nI asserted this json:\r\n`    {\r\n      \"abc\": \"abc\",\r\n      \"def\": \"def\",\r\n      \"xyz\": \"#ignore\"\r\n    }`\r\nwith\r\n`    {\r\n      \"abc\": \"abc\",\r\n      \"def\": \"def\",\r\n      \"qwer\" : \"qwer\"\r\n    }`\r\n\r\nActual result: The test case is pass although in the first json, it doesn't have \"qwer\" key.\r\nExpected result: The test case should be fail.\r\nGit repo: https://github.com/anhhao1996/karate-bug\r\n\r\nTested version: 0.8.0 of karate-apache\r\n", "url": "https://github.com/intuit/karate/issues/581", "user": "anhhao1996", "labels": ["bug", "fixed"], "created": "2018-11-02 06:41:59", "closed": "2018-12-02 17:21:45", "commits": {"2918eaf50b43b452ed5335bc5801f2100cc08cdb": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 30.00027777777778, "commitsDetails": [{"commitHash": "2918eaf50b43b452ed5335bc5801f2100cc08cdb", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["0ce9182a1992ffe54b261fa1bc1eb083e9be91a5"], "nameRev": "2918eaf50b43b452ed5335bc5801f2100cc08cdb tags/v0.9.0~74", "commitMessage": "fixed edge case in #ignore ref #581\n", "commitDateTime": "2018-11-02 13:56:42", "authoredDateTime": "2018-11-02 13:56:42", "commitGitStats": [{"filePath": "README.md", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "karate-core/src/test/java/com/intuit/karate/ScriptTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/examples.feature", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.matchNestedObject(char,java.lang.String,com.intuit.karate.MatchType,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,com.intuit.karate.core.ScenarioContext)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "ScriptTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptTest.testMatchMapObjects()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2918eaf50b43b452ed5335bc5801f2100cc08cdb"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 3, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.Script.matchNestedObject(char,java.lang.String,com.intuit.karate.MatchType,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,com.intuit.karate.core.ScenarioContext)"]}, {"title": "Cookie Rejected - violates RFC 6265: Set-Cookie's expires must accept this value: Tue, 08 Oct 2019 13:58:33 GMT", "body": "As [RFC 6265](https://tools.ietf.org/html/rfc6265.html#section-4.1) (and it's refferred to [RFC 2616](https://tools.ietf.org/html/rfc2616#section-3.3.1))  said \"Tue, 08 Oct 2019 13:58:33 GMT\" must be accepted as Expires value.\r\n\r\nActual:\r\n\r\n> 16:21:13.149 [main] WARN  o.a.h.c.p.ResponseProcessCookies - Invalid cookie header: \"Set-Cookie: guid=3f0a56cd-4038-4bdf-bca9-d811a2af6bf8; Max-Age=31535999; Expires=Tue, 08 Oct 2019 14:21:03 GMT; Path=/; Domain=.staging.com\". Invalid 'expires' attribute: Tue, 08 Oct 2019 14:21:03 GMT\r\n\r\nExpected:\r\n\r\nAccept Set-Cookie.\r\n\r\nTested version: 0.8.0.1 and 0.9.0.RC3 of karate-apache\r\n\r\nGit repo: https://github.com/shark300/expiresBug", "url": "https://github.com/intuit/karate/issues/552", "user": "shark300", "labels": ["bug", "fixed"], "created": "2018-10-08 14:29:27", "closed": "2018-12-02 17:23:32", "commits": {"a3ece9efa2d3e44aa4a663723f75e821ad11249e": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 55.000277777777775, "commitsDetails": [{"commitHash": "a3ece9efa2d3e44aa4a663723f75e821ad11249e", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["ae3e59b97f783c12b1f1af9c92e98117285599d4"], "nameRev": "a3ece9efa2d3e44aa4a663723f75e821ad11249e tags/v0.9.0~93", "commitMessage": "cookie expires header date format more lenient #552\n", "commitDateTime": "2018-10-27 12:42:47", "authoredDateTime": "2018-10-27 12:42:47", "commitGitStats": [{"filePath": "karate-apache/src/main/java/com/intuit/karate/http/apache/LenientCookieSpec.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LenientCookieSpec.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.apache.LenientCookieSpec", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a3ece9efa2d3e44aa4a663723f75e821ad11249e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 0, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-apache/src/main/java/com/intuit/karate/http/apache"], "changesInPackagesSPOON": ["com.intuit.karate.http.apache.LenientCookieSpec"]}, {"title": "Unrooted tests in Eclipse with v0.9.0.RC3", "body": "After upgrading our project from 0.8.0.1 to 0.9.0.RC3, tests are being grouped under \"Unrooted Tests\" instead of the applicable feature in JUnit result pane.\r\n\r\nIt appears https://github.com/intuit/karate/issues/329 was reintroduced. \r\n\r\n![image](https://user-images.githubusercontent.com/3473004/46148091-4a46a880-c235-11e8-9603-45ca270138db.png)\r\n\r\n", "url": "https://github.com/intuit/karate/issues/542", "user": "ayoolaogunsola", "labels": ["bug", "fixed"], "created": "2018-09-27 13:11:57", "closed": "2018-10-16 05:29:31", "commits": {"75a559de48e7b11d435331583c5834d21eee991a": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 18.00027777777778, "commitsDetails": [{"commitHash": "75a559de48e7b11d435331583c5834d21eee991a", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["94cb17bc105d323c65021d20d3d6ff80c4bcc0d8"], "nameRev": "75a559de48e7b11d435331583c5834d21eee991a tags/v0.9.0~186", "commitMessage": "fix for eclipse junit ui unrooted tests #542\n", "commitDateTime": "2018-09-27 19:39:59", "authoredDateTime": "2018-09-27 19:39:59", "commitGitStats": [{"filePath": "karate-junit4/src/main/java/com/intuit/karate/junit4/Karate.java", "insertions": 12, "deletions": 1, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Karate.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.Karate.describeChild(com.intuit.karate.core.Feature)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.junit4.Karate", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["75a559de48e7b11d435331583c5834d21eee991a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 1, "lines": 13, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8, "UPD": 2, "INS": 5, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-junit4/src/main/java/com/intuit/karate/junit4"], "changesInPackagesSPOON": ["com.intuit.karate.junit4.Karate.describeChild(com.intuit.karate.core.Feature)", "com.intuit.karate.junit4.Karate"]}, {"title": "Unable to add multiple tags to Scenarios", "body": "Hi @ptrthomas \r\n\r\nI've found another issue (I think)\r\nI am unable to add multiple tags to a scenario. I assume this should be possible.\r\n\r\nCode available in: https://github.com/ali-nutmeg/broken-karate\r\n\r\nError: `java.lang.RuntimeException: no viable alternative at input '\\n\\n@one\\n@two'`", "url": "https://github.com/intuit/karate/issues/533", "user": "ali-nutmeg", "labels": ["bug", "fixed"], "created": "2018-09-18 11:45:26", "closed": "2018-10-16 05:29:58", "commits": {"65b1b56e95f0db89ff48df5ee9139072fbe6201a": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 27.00027777777778, "commitsDetails": [{"commitHash": "65b1b56e95f0db89ff48df5ee9139072fbe6201a", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["8ba4dca7a2cff12567d9f55e8d4f34fdff62a0af"], "nameRev": "65b1b56e95f0db89ff48df5ee9139072fbe6201a tags/v0.9.0~136", "commitMessage": "support for multi-line tags #533\n", "commitDateTime": "2018-10-10 10:23:25", "authoredDateTime": "2018-10-10 10:23:25", "commitGitStats": [{"filePath": "karate-core/src/main/antlr4/com/intuit/karate/core/KarateParser.g4", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/FeatureParser.java", "insertions": 26, "deletions": 24, "lines": 50}, {"filePath": "karate-core/src/test/java/com/intuit/karate/core/FeatureParserTest.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "karate-core/src/test/java/com/intuit/karate/core/test-tags-multiline.feature", "insertions": 12, "deletions": 0, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FeatureParser.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.FeatureParser.toTags(int,org.antlr.v4.runtime.tree.TerminalNode)", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.core.FeatureParser.enterFeatureHeader(com.intuit.karate.core.KarateParser$FeatureHeaderContext)", "TOT": 5, "UPD": 3, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.core.FeatureParser.toTags(int,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FeatureParserTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.FeatureParserTest.testTagsMultiline()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["65b1b56e95f0db89ff48df5ee9139072fbe6201a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 30, "deletions": 26, "lines": 56, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 13, "UPD": 6, "INS": 2, "MOV": 5, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/antlr4/com/intuit/karate/core/KarateParser.g4", "karate-core/src/main/java/com/intuit/karate/core"], "changesInPackagesSPOON": ["com.intuit.karate.core.FeatureParser.toTags(int,org.antlr.v4.runtime.tree.TerminalNode)", "com.intuit.karate.core.FeatureParser.enterFeatureHeader(com.intuit.karate.core.KarateParser$FeatureHeaderContext)", "com.intuit.karate.core.FeatureParser.toTags(int,java.util.List)"]}, {"title": "Cucumber options not being honoured", "body": "Related to https://github.com/intuit/karate/issues/529\r\n\r\nWhen running Junit runner from command line using karate version `0.9.0.RC2`, cucumber options are not being honoured.\r\n\r\neg `java -jar -Dcucumber.options=\"--tags ~@ignore\" target/broken-karate-test-jar-with-dependencies.jar`\r\n\r\nCode available in: https://github.com/ali-nutmeg/broken-karate\r\n\r\nThanks.", "url": "https://github.com/intuit/karate/issues/532", "user": "ali-nutmeg", "labels": ["bug", "fixed"], "created": "2018-09-17 12:58:40", "closed": "2018-09-17 13:41:35", "commits": {"e9c6a642b34012d649a6e233d34c2c45f3f7ac29": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e9c6a642b34012d649a6e233d34c2c45f3f7ac29", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["95c724ee40543925e141d2a10e78345787d7108d"], "nameRev": "e9c6a642b34012d649a6e233d34c2c45f3f7ac29 tags/v0.9.0~207", "commitMessage": "missed sys props usage for junit runner ref #532\n", "commitDateTime": "2018-09-17 18:42:14", "authoredDateTime": "2018-09-17 18:42:14", "commitGitStats": [{"filePath": "README.md", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "karate-core/src/main/java/com/intuit/karate/KarateOptions.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/cucumber/CucumberRunner.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-junit4/src/main/java/com/intuit/karate/junit4/Karate.java", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "KarateOptions.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.KarateOptions.parseSystemProperties(java.util.List,java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CucumberRunner.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.cucumber.CucumberRunner.parallel(java.lang.Class,int,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Karate.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.Karate", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e9c6a642b34012d649a6e233d34c2c45f3f7ac29"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 3, "lines": 10, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 5, "UPD": 2, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-junit4/src/main/java/com/intuit/karate/junit4", "karate-core/src/main/java/com/intuit/karate", "karate-core/src/main/java/com/intuit/karate/cucumber"], "changesInPackagesSPOON": ["com.intuit.karate.cucumber.CucumberRunner.parallel(java.lang.Class,int,java.lang.String)", "com.intuit.karate.KarateOptions.parseSystemProperties(java.util.List,java.util.List)", "com.intuit.karate.junit4.Karate"]}, {"title": "karate-0.9.0.RC1.jar cannot read karate-config.js", "body": "Hi, I'm having an issue trying to load `karate-config.js` when running `karate-0.9.0.RC1.jar` which I downloaded from here https://dl.bintray.com/ptrthomas/karate/.\r\n\r\nOS: `Mac OS High Sierra 10.13.6`\r\nJava version: \r\n```\r\njava version \"1.8.0_181\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_181-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.181-b13, mixed mode)\r\n```\r\n\r\nMy directory structure:\r\n```\r\n/Users/beng/notes/karate_test/\r\n  - karate-0.8.0.1.jar\r\n  - karate-0.9.0.RC1.jar\r\n  - karate-config.js\r\n  - foobar.feature\r\n```\r\n\r\n`karate-config.js` looks like this:\r\n```javascript\r\nfunction() {\r\n  return {\"foo\": \"bar\"}\r\n}\r\n```\r\n\r\nI'm running the jar like this:\r\n```bash\r\njava -jar karate-0.9.0.RC1.jar .\r\n```\r\nAlso I tried this:\r\n```bash\r\njava -jar -Dkarate.config.dir=$(pwd) karate-0.9.0.RC1.jar .\r\n```\r\n\r\nThe output is the same in both cases\r\n```\r\n23:48:01.211 [main] INFO  com.intuit.karate.netty.Main - Karate version: 0.9.0\r\n23:48:01.353 [main] INFO  c.i.karate.cucumber.CucumberRunner - Karate version: 0.9.0\r\n23:48:01.848 [pool-1-thread-1] WARN  com.intuit.karate - skipping bootstrap configuration: could not find or read file: file:./karate-config.js\r\n23:48:02.131 [pool-1-thread-1] DEBUG com.intuit.karate - request:\r\n```\r\n\r\nI believe this could be a bug because when I run `karate-0.8.0.1.jar` it seems to load the config file perfectly fine.\r\n```\r\n23:48:44.846 [main] INFO  com.intuit.karate.netty.Main - Karate version: 0.8.0.1\r\n23:48:45.056 [main] INFO  c.i.karate.cucumber.CucumberRunner - Karate version: 0.8.0.1\r\n23:48:45.860 [pool-1-thread-1] DEBUG com.intuit.karate - request:\r\n```\r\n\r\n", "url": "https://github.com/intuit/karate/issues/530", "user": "benjamingorman", "labels": ["bug", "fixed"], "created": "2018-09-14 22:50:32", "closed": "2018-09-20 15:24:36", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Command line running karate throws FileNotFoundException", "body": "Problem: We package a jar file with all the dependencies so that we can run this karate tests on command line via our CI tools.\r\nThis worked in v 0.6.0 but is broken in 0.8.0\r\n\r\nWe're doing this using:\r\n```\r\npublic static void main(String[] args) {\r\n        JUnitCore.main(ExamplesTest.class.getCanonicalName());\r\n    }\r\n```\r\n\r\nCode available in: https://github.com/ali-nutmeg/broken-karate\r\n\r\nSteps to reproduce:\r\n1. run `maven clean install`\r\n2. run `java -jar target/broken-karate-test-jar-with-dependencies.jar`\r\n3. You will see the FileNotFoundException occur\r\n\r\nTo prove that it is broken:\r\n1. In the pom file, change the karate version to 0.6.0 and re-run the steps above\r\n2. You should see that the tests now run.\r\n\r\nI would be interested in a fix to this before I am forced to move to using the standalone karate runner.\r\n\r\nThank you", "url": "https://github.com/intuit/karate/issues/529", "user": "ali-nutmeg", "labels": ["bug", "fixed"], "created": "2018-09-14 15:26:58", "closed": "2018-09-17 13:41:56", "commits": {"c1d1774dee4062cb0b67f86c278ee5db83ed5376": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "c1d1774dee4062cb0b67f86c278ee5db83ed5376", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["d2831ed594ae85b733d82664739d38a8926c45d2"], "nameRev": "c1d1774dee4062cb0b67f86c278ee5db83ed5376 tags/v0.9.0~215", "commitMessage": "junit runner was assuming file, which breaks jar loading ref #529\n", "commitDateTime": "2018-09-15 08:01:39", "authoredDateTime": "2018-09-15 08:01:39", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/FileUtils.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "karate-core/src/main/java/com/intuit/karate/Resource.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "karate-junit4/src/main/java/com/intuit/karate/junit4/Karate.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FileUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.FileUtils.removeFileExtension(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Resource.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Resource.getFileNameWithoutExtension()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Karate.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.Karate.getFeatureName(com.intuit.karate.core.Feature)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c1d1774dee4062cb0b67f86c278ee5db83ed5376"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 14, "deletions": 2, "lines": 16, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 5, "UPD": 2, "INS": 2, "MOV": 1, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate", "karate-junit4/src/main/java/com/intuit/karate/junit4"], "changesInPackagesSPOON": ["com.intuit.karate.Resource.getFileNameWithoutExtension()", "com.intuit.karate.junit4.Karate.getFeatureName(com.intuit.karate.core.Feature)", "com.intuit.karate.FileUtils.removeFileExtension(java.lang.String)"]}, {"title": "HTTP connection reset in FeatureServer with Karate 0.9.0.RC1", "body": "My karate-mini-mocks example works fine with Karate 0.8.0 but fails with 0.9.0.RC1. It's a minimal example using Karate client + server mocks, based on the Karate cats server example.\r\n\r\nTo reproduce, checkout https://github.com/bdelacretaz/karate-mini-mocks, switch to the karate-0.9.0.RC1 branch and run `mvn clean test`.\r\n\r\nI get `org.apache.http.NoHttpResponseException: localhost:<port> failed to respond` when doing that as if the mocked HTTP server did not start, but log does say `c.intuit.karate.netty.FeatureServer - server started`.\r\n\r\nSetting a breakpoint in my `TestBase`class right after the `FeatureServer.start` and trying to connect to the HTTP endpoint of that with my browser I get a \"connection reset\" message in Firefox, and in the terminal messages like\r\n\r\n    11:26:14.743 [main] WARN  com.intuit.karate.junit4.Karate - CucumberOptions annotation not found on class: class client.ClientTest\r\n    11:26:15.337 [main] INFO  com.intuit.karate - backend initialized\r\n    11:26:15.591 [main] INFO  c.intuit.karate.netty.FeatureServer - server started - http://127.0.0.1:52480\r\n    11:26:25.461 [nioEventLoopGroup-3-1] ERROR com.intuit.karate - error, closing connection: null\r\n    11:26:25.468 [nioEventLoopGroup-3-2] ERROR com.intuit.karate - error, closing connection: null\r\n", "url": "https://github.com/intuit/karate/issues/528", "user": "bdelacretaz", "labels": ["bug", "fixed"], "created": "2018-09-14 09:34:28", "closed": "2018-09-17 13:45:08", "commits": {"5be630884da73abaa1ed3c75ae90a665d014a857": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "926cb56d275856be3290f054cb70595dee5836bd": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "5be630884da73abaa1ed3c75ae90a665d014a857", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["65c2d7e61d63a01a6381e99216b4aa245a1da777"], "nameRev": "5be630884da73abaa1ed3c75ae90a665d014a857 tags/v0.9.0~219", "commitMessage": "npe in netty handler ref #528\nwe may need a try-catch in the netty routine, since the npe was siently swallowed somewhere\n", "commitDateTime": "2018-09-14 16:38:25", "authoredDateTime": "2018-09-14 16:38:25", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/core/ExecutionHook.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "karate-core/src/main/java/com/intuit/karate/core/FeatureBackend.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "karate-netty/src/main/java/com/intuit/karate/netty/FeatureServerHandler.java", "insertions": 7, "deletions": 3, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ExecutionHook.java", "spoonMethods": []}, {"spoonFilePath": "FeatureBackend.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.FeatureBackend", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.core.FeatureBackend.handle(com.intuit.karate.ScriptValueMap)", "TOT": 8, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 4}]}, {"spoonFilePath": "FeatureServerHandler.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.netty.FeatureServerHandler.channelRead0(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpRequest)", "TOT": 7, "UPD": 2, "INS": 2, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "926cb56d275856be3290f054cb70595dee5836bd", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["5be630884da73abaa1ed3c75ae90a665d014a857"], "nameRev": "926cb56d275856be3290f054cb70595dee5836bd tags/v0.9.0~218", "commitMessage": "added test to simulate #528 also ensure we get stack-trace\n", "commitDateTime": "2018-09-14 17:59:20", "authoredDateTime": "2018-09-14 17:59:20", "commitGitStats": [{"filePath": "karate-netty/src/main/java/com/intuit/karate/netty/FeatureServerHandler.java", "insertions": 8, "deletions": 3, "lines": 11}, {"filePath": "karate-netty/src/test/java/com/intuit/karate/mock/NoHeadersRunner.java", "insertions": 29, "deletions": 0, "lines": 29}, {"filePath": "karate-netty/src/test/java/com/intuit/karate/mock/_mock.feature", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "karate-netty/src/test/java/com/intuit/karate/mock/no-headers.feature", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FeatureServerHandler.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.netty.FeatureServerHandler.exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.netty.FeatureServerHandler.channelRead0(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpRequest)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "NoHeadersRunner.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.mock.NoHeadersRunner", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5be630884da73abaa1ed3c75ae90a665d014a857", "926cb56d275856be3290f054cb70595dee5836bd"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 23, "deletions": 13, "lines": 36, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 23, "UPD": 2, "INS": 4, "MOV": 10, "DEL": 7, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-netty/src/main/java/com/intuit/karate/netty", "karate-core/src/main/java/com/intuit/karate/core"], "changesInPackagesSPOON": ["com.intuit.karate.netty.FeatureServerHandler.channelRead0(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpRequest)", "com.intuit.karate.core.FeatureBackend.handle(com.intuit.karate.ScriptValueMap)", "com.intuit.karate.netty.FeatureServerHandler.exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)", "com.intuit.karate.core.FeatureBackend", "com.intuit.karate.mock.NoHeadersRunner"]}, {"title": "[standalone] file path to resources / call broken on windows", "body": "from this Stack Overflow post: https://stackoverflow.com/q/52273045/143475\r\n\r\nto all those who are watching this project - I'd really appreciate some help to test the build on windows and the execution of the standalone jar", "url": "https://github.com/intuit/karate/issues/527", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2018-09-12 08:46:54", "closed": "2018-12-02 17:23:53", "commits": {"863dc14cadcef1a15ee4e0be9afacffc74d5bd5f": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 81.00027777777778, "commitsDetails": [{"commitHash": "863dc14cadcef1a15ee4e0be9afacffc74d5bd5f", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["cb92f7d87f82843fdf5264bd1189b4bfeaad8f66"], "nameRev": "863dc14cadcef1a15ee4e0be9afacffc74d5bd5f tags/v0.9.0~195", "commitMessage": "fix for windows paths ref #527", "commitDateTime": "2018-09-22 14:10:42", "authoredDateTime": "2018-09-22 14:10:42", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/FileUtils.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "karate-core/src/main/java/com/intuit/karate/ScriptBindings.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "karate-netty/src/test/java/com/intuit/karate/netty/MainWinTestRunner.java", "insertions": 17, "deletions": 0, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FileUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.FileUtils.toStandardPath(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScriptBindings.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptBindings.readKarateConfigForEnv(boolean,java.lang.String,java.lang.String)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "MainWinTestRunner.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.netty.MainWinTestRunner", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["863dc14cadcef1a15ee4e0be9afacffc74d5bd5f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 4, "lines": 7, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 5, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.ScriptBindings.readKarateConfigForEnv(boolean,java.lang.String,java.lang.String)", "com.intuit.karate.FileUtils.toStandardPath(java.lang.String)"]}, {"title": "content-type header set in configure headers ignored when there is a request-body", "body": "as discovered by this Stack Overflow user: https://stackoverflow.com/q/51956231/143475\r\n\r\nfix identified.", "url": "https://github.com/intuit/karate/issues/510", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2018-08-22 03:32:25", "closed": "2018-12-02 17:25:04", "commits": {"ebe72bde323bb7357c544413407b5a108dc4d258": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 102.00027777777778, "commitsDetails": [{"commitHash": "ebe72bde323bb7357c544413407b5a108dc4d258", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["edeae17011275787d550b83348d7556d85e43e87"], "nameRev": "ebe72bde323bb7357c544413407b5a108dc4d258 tags/v0.9.0~16^2~5", "commitMessage": "content-type if set via configure headers not ignored anymore\nfor requests having a body ref #510\n", "commitDateTime": "2018-08-21 22:34:10", "authoredDateTime": "2018-08-21 22:34:10", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/http/HttpClient.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "karate-demo/src/test/java/demo/headers/content-type.feature", "insertions": 12, "deletions": 0, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpClient.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpClient.buildRequestInternal(com.intuit.karate.http.HttpRequestBuilder,com.intuit.karate.ScriptContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ebe72bde323bb7357c544413407b5a108dc4d258"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 0, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/http"], "changesInPackagesSPOON": ["com.intuit.karate.http.HttpClient.buildRequestInternal(com.intuit.karate.http.HttpRequestBuilder,com.intuit.karate.ScriptContext)"]}, {"title": "Multiple bugs with handling proxy", "body": "Using karate 0.8.0.1 and java 1.8.0_181\r\n1) In karate-config.js, while using karate.configure('proxy'... nonProxyHosts isn't optional, it throw an error if it isn't there. (Can be worked around, by setting an empty nonProxyHosts)\r\n2) in *.feature files, when using  * configure proxy = { uri: 'htt...., we get an error :- net.minidev.json.JSONArray cannot be cast to jdk.nashorn.api.scripting.ScriptObjectMirror I guess this is due to some Java 8 change) (Can be worked around by using config.js file instead)\r\n3) Even after setting proxy as in\r\n` karate.configure('proxy', { uri: 'http://my.proxy.host:8080', username: 'john', password: 'secret' ,nonProxyHosts:['http://example.com'] }`\r\n, the requests don't use proxy auth and I get this message, \r\n```\r\nhttp-outgoing-0 << \"HTTP/1.1 407 Proxy Authentication Required[\\r][\\n]\"\r\n19:41:20.118 [main] DEBUG org.apache.http.wire - http-outgoing-0 << \"Proxy-Authenticate: BASIC realm=\"IAP Authentication - Please enter your internet User Name (firstname.lastname) and Password\"[\\r][\\n]\"\r\n19:41:20.118 [main] DEBUG org.apache.http.wire - http-outgoing-0 << \"Cache-Control: no-cache[\\r][\\n]\"\r\n19:41:20.118 [main] DEBUG org.apache.http.wire - http-outgoing-0 << \"Pragma: no-cache[\\r][\\n]\"\r\n19:41:20.118 [main] DEBUG org.apache.http.wire - http-outgoing-0 << \"Content-Type: text/html; charset=utf-8[\\r][\\n]\"\r\n19:41:20.118 [main] DEBUG org.apache.http.wire - http-outgoing-0 << \"Proxy-Connection: close[\\r][\\n]\"\r\n19:41:20.118 [main] DEBUG org.apache.http.wire - http-outgoing-0 << \"Set-Cookie: BCSI-CS-47157b4b9cccf2e4=2; Path=/[\\r][\\n]\"\r\n19:41:20.118 [main] DEBUG org.apache.http.wire - http-outgoing-0 << \"Connection: close[\\r][\\n]\"\r\n19:41:20.118 [main] DEBUG org.apache.http.wire - http-outgoing-0 << \"Content-Length: 8099[\\r][\\n]\"\r\n19:41:20.118 [main] DEBUG org.apache.http.wire - http-outgoing-0 << \"[\\r][\\n]\"\r\n19:41:20.118 [main] DEBUG org.apache.http.wire - http-outgoing-0 << \"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">[\\r][\\n]\"\r\n19:41:20.118 [main] DEBUG org.apache.http.wire - http-outgoing-0 << \"        <html xmlns=\"http://www.w3.org/1999/xhtml\">[\\r][\\n]\"\r\n19:41:20.118 [main] DEBUG org.apache.http.wire - http-outgoing-0 << \"        <head>[\\r][\\n]\" ...\r\n```", "url": "https://github.com/intuit/karate/issues/502", "user": "yashbhat", "labels": ["bug", "fixed"], "created": "2018-08-16 14:13:13", "closed": "2018-12-02 17:25:32", "commits": {"f80bcea1c7c85784a6b1e9170edcb2663f4eda46": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 108.00027777777778, "commitsDetails": [{"commitHash": "f80bcea1c7c85784a6b1e9170edcb2663f4eda46", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["ee3b4b30d9b5bf23af6bbdebe02378e3a863ed0b"], "nameRev": "f80bcea1c7c85784a6b1e9170edcb2663f4eda46 tags/v0.9.0~69", "commitMessage": "attempt fix for #502\n", "commitDateTime": "2018-11-05 09:37:26", "authoredDateTime": "2018-11-05 09:37:26", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/core/ScenarioContext.java", "insertions": 16, "deletions": 16, "lines": 32}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ScenarioContext.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.core.ScenarioContext.configure(java.lang.String,com.intuit.karate.ScriptValue)", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f80bcea1c7c85784a6b1e9170edcb2663f4eda46"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 16, "deletions": 16, "lines": 32, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/core"], "changesInPackagesSPOON": ["com.intuit.karate.core.ScenarioContext.configure(java.lang.String,com.intuit.karate.ScriptValue)"]}, {"title": "Match each not contains / match contains fails unexpectedly for partial objects", "body": "There appears to be an issue with the JSON array contains / not contains step, when trying to partially match objects.\r\n\r\nGiven the following scenario:\r\n```\r\nFeature: Bug Report\r\n  Scenario: Each not contains\r\n    * def ar = [{a: 1, b: 2}, {a:3, b:4}]\r\n    * match each ar !contains {a:1, b:4}\r\n```\r\nThis fails with:\r\ncom.intuit.karate.exception.KarateException: path: $[0].a, actual: 1, NOT expected: 1, reason: actual value contains expected\r\n\r\nWhile I would expect this to pass.\r\n\r\nOther scenario:\r\n```\r\nFeature: Bug Report\r\n  Scenario: Array contains\r\n    * def ar = [{a: 1, b: 2}, {a:3, b:4}]\r\n    * match ar contains {a:1}\r\n```\r\nThis fails with: \r\ncom.intuit.karate.exception.KarateException: path: $[*], actual: [{\"a\":1,\"b\":2},{\"a\":3,\"b\":4}], expected: {a=1}, reason: actual value does not contain expected\r\n\r\nWhile I would expect this to pass.", "url": "https://github.com/intuit/karate/issues/501", "user": "tomwetjens", "labels": ["bug", "fixed"], "created": "2018-08-16 09:06:05", "closed": "2018-12-02 17:25:43", "commits": {"fb34512ba6f4dd7d20ff52b40e382e5c3db5b7e6": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 108.00027777777778, "commitsDetails": [{"commitHash": "fb34512ba6f4dd7d20ff52b40e382e5c3db5b7e6", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["65340a3f358c38b6f1b02a96ca3c16c495051cd9"], "nameRev": "fb34512ba6f4dd7d20ff52b40e382e5c3db5b7e6 tags/v0.9.0~16^2~8", "commitMessage": "fixed edge case in not-contains, ref #501\n", "commitDateTime": "2018-08-16 12:54:53", "authoredDateTime": "2018-08-16 12:54:53", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 32, "deletions": 19, "lines": 51}, {"filePath": "karate-core/src/test/java/com/intuit/karate/ScriptTest.java", "insertions": 11, "deletions": 2, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.matchNestedObject(char,java.lang.String,com.intuit.karate.MatchType,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,com.intuit.karate.ScriptContext)", "TOT": 18, "UPD": 1, "INS": 6, "MOV": 4, "DEL": 7}, {"spoonMethodName": "com.intuit.karate.Script.matchFailed(com.intuit.karate.MatchType,java.lang.String,java.lang.Object,java.lang.Object,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "ScriptTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptTest.testMatchXmlAttributeErrorReporting()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testMatchJsonArrayErrorReporting()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testMatchJsonObjectPartialNotContains()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fb34512ba6f4dd7d20ff52b40e382e5c3db5b7e6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 32, "deletions": 19, "lines": 51, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 21, "UPD": 1, "INS": 7, "MOV": 6, "DEL": 7, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.Script.matchNestedObject(char,java.lang.String,com.intuit.karate.MatchType,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,com.intuit.karate.ScriptContext)", "com.intuit.karate.Script.matchFailed(com.intuit.karate.MatchType,java.lang.String,java.lang.Object,java.lang.Object,java.lang.String)"]}, {"title": "Content-Length is not automatically sent when sending a file ", "body": "When I send a file over a HTTP request: \r\n```\r\nGiven url 'http://localhost:8180/endpoint'\r\nAnd request read('../resources/too_large_image.jpg')\r\nAnd header Accept = 'application/x-www-form-urlencoded'\r\nWhen method post\r\nThen status 400\r\n\r\n```\r\n I expect that the content length is automatically set with the size of the file ( like curl ), but this is not the case. This would be really nice to have.  ", "url": "https://github.com/intuit/karate/issues/491", "user": "zak905", "labels": ["bug", "fixed"], "created": "2018-08-07 16:42:57", "closed": "2018-12-02 17:25:55", "commits": {"72d56c6efee16260e9cec4ca916f0715b087458b": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "2f6ab659596f56073d6afce290364897457e45f8": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 117.00027777777778, "commitsDetails": [{"commitHash": "72d56c6efee16260e9cec4ca916f0715b087458b", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["39586607dade222a33be608cde1ed80b7bec395f"], "nameRev": "72d56c6efee16260e9cec4ca916f0715b087458b tags/v0.9.0~16^2~11", "commitMessage": "adding regression test for #491\n", "commitDateTime": "2018-08-08 15:53:40", "authoredDateTime": "2018-08-08 15:53:40", "commitGitStats": [{"filePath": "karate-demo/src/test/java/demo/upload/upload-image.feature", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "2f6ab659596f56073d6afce290364897457e45f8", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["e816bc176d8153957456ba9c4958c28d6fadfef5"], "nameRev": "2f6ab659596f56073d6afce290364897457e45f8 tags/v0.9.0~133", "commitMessage": "content-length now will be present for multipart as well #491\n", "commitDateTime": "2018-10-10 15:01:04", "authoredDateTime": "2018-10-10 15:01:04", "commitGitStats": [{"filePath": "karate-apache/src/main/java/com/intuit/karate/http/apache/ApacheHttpUtils.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "karate-core/src/main/java/com/intuit/karate/ScriptValue.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "karate-demo/src/test/java/demo/upload/upload.feature", "insertions": 16, "deletions": 0, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ApacheHttpUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(java.util.List,java.lang.String,java.nio.charset.Charset)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "ScriptValue.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptValue.getAsByteArray()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["72d56c6efee16260e9cec4ca916f0715b087458b", "2f6ab659596f56073d6afce290364897457e45f8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 16, "deletions": 3, "lines": 19, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 4.0, "UPD": 0.0, "INS": 2.0, "MOV": 0.0, "DEL": 2.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate", "karate-apache/src/main/java/com/intuit/karate/http/apache"], "changesInPackagesSPOON": ["com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(java.util.List,java.lang.String,java.nio.charset.Charset)", "com.intuit.karate.ScriptValue.getAsByteArray()"]}, {"title": "Cannot force Content-Type header after form fields apply", "body": "**Example**\r\n\r\n```\r\nFeature: Test\r\n  Background:\r\n    * configure ssl = true\r\n    Given url 'https://httpbin.org'\r\n  Scenario: Bug 1\r\n    Given path '/post'\r\n    * def forms_1 =\r\n    \"\"\"\r\n    {\r\n      test: \"123\"\r\n    }\r\n    \"\"\"\r\n    And form fields forms_1\r\n    #Not working\r\n    * configure headers = { 'Content-Type': 'application/json' }\r\n    #Not working too, Content-Type always 'application/x-www-form-urlencoded'\r\n    And header Content-Type = 'application/json'\r\n    When method POST\r\n    Then status 200\r\n```\r\n\r\n> ", "url": "https://github.com/intuit/karate/issues/488", "user": "ivann7", "labels": ["bug", "fixed"], "created": "2018-08-06 19:39:27", "closed": "2018-12-02 17:26:11", "commits": {"ad4049c78924cffc153ab306af06d4ee7c49c47e": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 117.00027777777778, "commitsDetails": [{"commitHash": "ad4049c78924cffc153ab306af06d4ee7c49c47e", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["a39037c059b1ef49c30dc92cb97575af67a2efbc"], "nameRev": "ad4049c78924cffc153ab306af06d4ee7c49c47e tags/v0.9.0~16^2~14", "commitMessage": "was not possible to over-ride content-type for url-encoded ref #488\n", "commitDateTime": "2018-08-07 09:33:21", "authoredDateTime": "2018-08-07 09:33:21", "commitGitStats": [{"filePath": "karate-apache/src/main/java/com/intuit/karate/http/apache/ApacheHttpUtils.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "karate-core/src/main/java/com/intuit/karate/http/HttpUtils.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "karate-demo/src/test/java/demo/encoding/encoding.feature", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-demo/src/test/java/demo/form/FormRunner.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "karate-demo/src/test/java/demo/form/form.feature", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "karate-demo/src/test/java/demo/headers/content-type.feature", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "karate-jersey/src/main/java/com/intuit/karate/http/jersey/JerseyHttpClient.java", "insertions": 7, "deletions": 10, "lines": 17}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/dev.feature", "insertions": 7, "deletions": 1, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ApacheHttpUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(com.intuit.karate.http.MultiValuedMap,java.lang.String,java.nio.charset.Charset)", "TOT": 6, "UPD": 1, "INS": 4, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HttpUtils.java", "spoonMethods": []}, {"spoonFilePath": "FormRunner.java", "spoonMethods": [{"spoonMethodName": "demo.form.FormRunner", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JerseyHttpClient.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.jersey.JerseyHttpClient.getEntity(com.intuit.karate.http.MultiValuedMap,java.lang.String)", "TOT": 6, "UPD": 1, "INS": 3, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.http.jersey.JerseyHttpClient.getEntity(java.util.List,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ad4049c78924cffc153ab306af06d4ee7c49c47e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 14, "deletions": 14, "lines": 28, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 14, "UPD": 2, "INS": 8, "MOV": 1, "DEL": 3, "spoonFilesChanged": 3, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/http", "karate-apache/src/main/java/com/intuit/karate/http/apache", "karate-jersey/src/main/java/com/intuit/karate/http/jersey"], "changesInPackagesSPOON": ["com.intuit.karate.http.jersey.JerseyHttpClient.getEntity(com.intuit.karate.http.MultiValuedMap,java.lang.String)", "demo.form.FormRunner", "com.intuit.karate.http.jersey.JerseyHttpClient.getEntity(java.util.List,java.lang.String)", "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(com.intuit.karate.http.MultiValuedMap,java.lang.String,java.nio.charset.Charset)"]}, {"title": "configure report = false not working as expected", "body": "logic mistake in reporter routine", "url": "https://github.com/intuit/karate/issues/478", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2018-08-01 03:40:00", "closed": "2018-12-02 17:26:20", "commits": {"d5b5385d87417a5201153bf73390359296c23937": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 123.00027777777778, "commitsDetails": [{"commitHash": "d5b5385d87417a5201153bf73390359296c23937", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["3e3cac395ab45c08786cd5c101bba375084b4252"], "nameRev": "d5b5385d87417a5201153bf73390359296c23937 tags/v0.9.0~16^2~19", "commitMessage": "configure report had no effect #478\n", "commitDateTime": "2018-08-01 09:05:21", "authoredDateTime": "2018-08-01 09:05:21", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/cucumber/KarateReporterBase.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-demo/src/test/java/demo/polling/get.feature", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "KarateReporterBase.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.cucumber.KarateReporterBase.karateStep(gherkin.formatter.model.Step,gherkin.formatter.model.Match,gherkin.formatter.model.Result,com.intuit.karate.CallContext,com.intuit.karate.ScriptContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d5b5385d87417a5201153bf73390359296c23937"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/cucumber"], "changesInPackagesSPOON": ["com.intuit.karate.cucumber.KarateReporterBase.karateStep(gherkin.formatter.model.Step,gherkin.formatter.model.Match,gherkin.formatter.model.Result,com.intuit.karate.CallContext,com.intuit.karate.ScriptContext)"]}, {"title": "parallel-runner - ensure report JSON / XML output files are well-formed", "body": "been reported that intermittently the XML and JSON files are ending up with zero bytes.\r\n\r\nif anyone lands here with this issue - my hunch right now is because your build machine (jenkins in one case I saw) had run out of disk space.\r\n\r\nthis is bad because the typical subsequent step of the cucumber-reports plugin that converts the JSON to HTML breaks badly and fails the entire build.\r\n\r\nTODO double check the routine that saves file and see if we can ensure a flush + close properly\r\nrun a post-save check routine to see if zero bytes and if so - rename the file and log a warning", "url": "https://github.com/intuit/karate/issues/475", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2018-07-30 09:02:21", "closed": "2018-12-02 17:26:28", "commits": {"f92c2732a3928a1d2e64068a27bf7e910aef1ac5": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "3e3cac395ab45c08786cd5c101bba375084b4252": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 125.00027777777778, "commitsDetails": [{"commitHash": "f92c2732a3928a1d2e64068a27bf7e910aef1ac5", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["6e1609469a1ba5d7e54e56481cff565bc8f0513a"], "nameRev": "f92c2732a3928a1d2e64068a27bf7e910aef1ac5 tags/v0.9.0~16^2~21", "commitMessage": "defensive coding to ensure well-formed report json / xml output ref #475\n", "commitDateTime": "2018-07-30 14:48:15", "authoredDateTime": "2018-07-30 14:48:15", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/FileUtils.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "karate-core/src/main/java/com/intuit/karate/cucumber/KarateJunitAndJsonReporter.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "karate-core/src/main/java/com/intuit/karate/cucumber/KarateJunitFormatter.java", "insertions": 4, "deletions": 3, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FileUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.FileUtils.renameFileIfZeroBytes(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "KarateJunitAndJsonReporter.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.cucumber.KarateJunitAndJsonReporter", "TOT": 8, "UPD": 0, "INS": 5, "MOV": 1, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.cucumber.KarateJunitAndJsonReporter.close()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "KarateJunitFormatter.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.cucumber.KarateJunitFormatter.done()", "TOT": 4, "UPD": 3, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "3e3cac395ab45c08786cd5c101bba375084b4252", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["f92c2732a3928a1d2e64068a27bf7e910aef1ac5"], "nameRev": "3e3cac395ab45c08786cd5c101bba375084b4252 tags/v0.9.0~16^2~20", "commitMessage": "adding unit test for #475\n", "commitDateTime": "2018-07-30 18:04:20", "authoredDateTime": "2018-07-30 18:04:20", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/FileUtils.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "karate-core/src/test/java/com/intuit/karate/FileUtilsTest.java", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FileUtils.java", "spoonMethods": []}, {"spoonFilePath": "FileUtilsTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.FileUtilsTest.testRenameZeroLengthFile()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f92c2732a3928a1d2e64068a27bf7e910aef1ac5", "3e3cac395ab45c08786cd5c101bba375084b4252"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 28, "deletions": 5, "lines": 33, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 15, "UPD": 3, "INS": 9, "MOV": 1, "DEL": 2, "spoonFilesChanged": 3, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate", "karate-core/src/main/java/com/intuit/karate/cucumber"], "changesInPackagesSPOON": ["com.intuit.karate.cucumber.KarateJunitAndJsonReporter.close()", "com.intuit.karate.cucumber.KarateJunitFormatter.done()", "com.intuit.karate.cucumber.KarateJunitAndJsonReporter", "com.intuit.karate.FileUtils.renameFileIfZeroBytes(java.lang.String)"]}, {"title": "App.run on version 0.8.0 throws exception in application started", "body": "This issue is not happening in 0.8.0-RC7 . Whenever I switch to 0.8.0 the uI execution starts failing\r\n\r\nFeature has background, scenario, scenario outline\r\n@Test\r\nPublic void appRun(){\r\nApp.run(featurePath,\u201denv\u201d);\r\n}\r\n\r\nStack trace\r\nException in application start method\r\nRuntime exception - \r\nNull pointer exception - \r\nAt ...ui.TextAreaLogAppender.<init>(textarealogappender.java:40)", "url": "https://github.com/intuit/karate/issues/469", "user": "sauravkumar05", "labels": ["bug", "fixed"], "created": "2018-07-24 18:34:59", "closed": "2018-07-25 05:32:58", "commits": {"19264eaac7b3a708a3342012a7366b5da360d389": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "19264eaac7b3a708a3342012a7366b5da360d389", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["d3eb6e9d17adc45ea68cbe3e1dd317409ff6ffcd"], "nameRev": "19264eaac7b3a708a3342012a7366b5da360d389 tags/v0.9.0~318", "commitMessage": "karate ui was broken with logging change ref #469\n", "commitDateTime": "2018-07-25 00:13:18", "authoredDateTime": "2018-07-25 00:13:18", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/ui/AppSession.java", "insertions": 3, "deletions": 7, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AppSession.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ui.AppSession", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.ui.AppSession.runAll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["19264eaac7b3a708a3342012a7366b5da360d389"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 7, "lines": 10, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/ui"], "changesInPackagesSPOON": ["com.intuit.karate.ui.AppSession.runAll()", "com.intuit.karate.ui.AppSession"]}, {"title": "Issues with skipped tests in summary and html report", "body": "I have been using karate for automated tests (starting with 0.6.0, in September 2017) and am very happy with this excellent tool.  I pulled the latest 0.8.0 (for https://github.com/intuit/karate/issues/418) and noticed couple of things that I would like to bring to your notice.  Let me start of by saying this issue is related to `karate.abort()` and related summary/html reports (the undocumented / secret unreleased feature) and can be treated as `enhancement`.  I did look at the open issues and feel this issue was not raised before.\r\n\r\nNow here is the issue I would like to discuss before sending a PR.  For the hypothetical test given below:\r\n```\r\nScenario: test abort\r\n  * def result = call read('some-test.feature')\r\n  // skip tests below if some-test.feature failed for what ever reason\r\n  * def check2Abort = (result.response == 'failed' ? karate.abort() : {} )\r\n  // continue with rest of the steps in this scenario\r\n```\r\nThe two issues are\r\n1. summary shown after the test is executed doesn't show any skipped tests \r\n1. and the cucumber html report doesn't show any skipped tests as well\r\n\r\nPlease note that the steps are actually skipped (as expected), but the report doesn't reflect these skipped steps.  Let me point two one line changes that I was thinking about\r\nChange needed in https://github.com/intuit/karate/blob/master/karate-core/src/main/java/com/intuit/karate/cucumber/KarateHtmlReporter.java#L236 \r\n```\r\nelse if ((StepResult.ABORTED.equals(result.getStatus())) || (Result.SKIPPED.getStatus()\r\n        .equals(result.getStatus()))) {\r\n```\r\nAnd https://github.com/intuit/karate/blob/master/karate-core/src/main/java/com/intuit/karate/cucumber/KarateRuntime.java#L77 need to be modified as\r\n```\r\nResult result = aborted ? Result.SKIPPED : StepResult.PASSED;\r\n```\r\nThis is the first time I was looking at karate source tree (so far I have been a passive user), so please bear with me if I missed the reason for proposed karate.abort() and feel free to shoot down the issue/suggested code change.  \r\n", "url": "https://github.com/intuit/karate/issues/464", "user": "vmchukky", "labels": ["bug", "fixed"], "created": "2018-07-20 05:20:40", "closed": "2018-12-02 17:27:13", "commits": {}, "ttf": 135.00027777777777, "commitsDetails": []}, {"title": "[karate-gatling] last http request in scenario missing from gatling report", "body": "oops, a bit of a miss, but not to worry - fix is identified.", "url": "https://github.com/intuit/karate/issues/460", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2018-07-18 15:48:12", "closed": "2018-09-15 03:18:15", "commits": {"3002f9a4dfd7fcac85a8df88c6977a60b2315e6a": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 58.000277777777775, "commitsDetails": [{"commitHash": "3002f9a4dfd7fcac85a8df88c6977a60b2315e6a", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["05b3f47f3590473329290748f3516dcb3c2d18b2"], "nameRev": "3002f9a4dfd7fcac85a8df88c6977a60b2315e6a tags/v0.9.0~325", "commitMessage": "fix for gatling report missing last scenario http request #460\n", "commitDateTime": "2018-07-18 21:12:20", "authoredDateTime": "2018-07-18 21:12:20", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/cucumber/AsyncScenario.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "karate-gatling/src/test/resources/karate-config.js", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AsyncScenario.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.cucumber.AsyncScenario.submit(java.util.function.Consumer,java.util.function.BiConsumer)", "TOT": 8, "UPD": 1, "INS": 3, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.cucumber.AsyncScenario.afterScenario()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3002f9a4dfd7fcac85a8df88c6977a60b2315e6a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 0, "lines": 10, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 1, "INS": 4, "MOV": 4, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/cucumber"], "changesInPackagesSPOON": ["com.intuit.karate.cucumber.AsyncScenario.submit(java.util.function.Consumer,java.util.function.BiConsumer)", "com.intuit.karate.cucumber.AsyncScenario.afterScenario()"]}, {"title": "can #present and #notpresent work outside of a JSON doc and even for XML", "body": "this fails currently:\r\n```cucumber\r\n* def foo = <bar>baz</bar>\r\n* match foo/ban == '#notpresent'\r\n```\r\nwith the error `assertion failed: path: /ban, actual: null, expected: '#notpresent', reason: actual xpath returned null`\r\n\r\n", "url": "https://github.com/intuit/karate/issues/452", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2018-07-10 02:20:06", "closed": "2018-07-16 05:47:36", "commits": {"d9b4180483d4c5fada2e9871bbf79bd1b44aef75": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "d9b4180483d4c5fada2e9871bbf79bd1b44aef75", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["efa3c1f5a35a46888c3c2d3edfc387cdc841c98f"], "nameRev": "d9b4180483d4c5fada2e9871bbf79bd1b44aef75 tags/v0.8.0~21", "commitMessage": "#present and #notpresent even work against single json-path nodes ref #452\n", "commitDateTime": "2018-07-10 10:34:20", "authoredDateTime": "2018-07-10 10:34:20", "commitGitStats": [{"filePath": "README.md", "insertions": 19, "deletions": 3, "lines": 22}, {"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 38, "deletions": 11, "lines": 49}, {"filePath": "karate-core/src/test/java/com/intuit/karate/ScriptTest.java", "insertions": 109, "deletions": 85, "lines": 194}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/xml/xml.feature", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.evalXmlPathOnVarByName(java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)", "TOT": 13, "UPD": 1, "INS": 5, "MOV": 6, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.Script.matchXml(com.intuit.karate.MatchType,com.intuit.karate.ScriptValue,java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)", "TOT": 7, "UPD": 1, "INS": 4, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.Script.evalXmlPathOnXmlNode(org.w3c.dom.Node,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.Script.matchJsonOrObject(com.intuit.karate.MatchType,com.intuit.karate.ScriptValue,java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "ScriptTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptTest.testMatchXmlEmptyAndNotPresent()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testJsonEmptyAndNotPresent()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d9b4180483d4c5fada2e9871bbf79bd1b44aef75"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 38, "deletions": 11, "lines": 49, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 25, "UPD": 2, "INS": 11, "MOV": 9, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.Script.evalXmlPathOnXmlNode(org.w3c.dom.Node,java.lang.String)", "com.intuit.karate.Script.matchXml(com.intuit.karate.MatchType,com.intuit.karate.ScriptValue,java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)", "com.intuit.karate.Script.evalXmlPathOnVarByName(java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)", "com.intuit.karate.Script.matchJsonOrObject(com.intuit.karate.MatchType,com.intuit.karate.ScriptValue,java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)"]}, {"title": "error import POSTMAN in KarateUI", "body": "Exception in thread \"JavaFX Application Thread\" java.lang.NullPointerException\r\n\tat com.intuit.karate.convert.ConvertUtils.readPostmanJson(ConvertUtils.java:64)\r\n\tat com.intuit.karate.ui.App.lambda$initImportOpenAction$2(App.java:113)\r\n\tat com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)\r\n\tat com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)\r\n\tat com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)\r\n\tat com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)\r\n\tat com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)\r\n\tat com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)\r\n\tat com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)\r\n\tat javafx.event.Event.fireEvent(Event.java:198)\r\n\tat javafx.scene.control.MenuItem.fire(MenuItem.java:462)\r\n\tat com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.doSelect(ContextMenuContent.java:1405)\r\n\tat com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.lambda$createChildren$343(ContextMenuContent.java:1358)\r\n\tat com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)\r\n\tat com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)\r\n\tat com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)\r\n\tat com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)\r\n\tat com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)\r\n\tat com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)\r\n\tat com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)\r\n\tat com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)\r\n\tat com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)\r\n\tat com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)\r\n\tat com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)\r\n\tat com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)\r\n\tat com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)\r\n\tat com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)\r\n\tat com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)\r\n\tat javafx.event.Event.fireEvent(Event.java:198)\r\n\tat javafx.scene.Scene$MouseHandler.process(Scene.java:3757)\r\n\tat javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)\r\n\tat javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)\r\n\tat javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)\r\n\tat com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:380)\r\n\tat com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:294)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$354(GlassViewEventHandler.java:416)\r\n\tat com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)\r\n\tat com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:415)\r\n\tat com.sun.glass.ui.View.handleMouseEvent(View.java:555)\r\n\tat com.sun.glass.ui.View.notifyMouse(View.java:937)\r\n", "url": "https://github.com/intuit/karate/issues/425", "user": "Spiderbezno", "labels": ["bug", "fixed"], "created": "2018-06-19 05:52:45", "closed": "2018-12-02 17:27:55", "commits": {}, "ttf": 166.00027777777777, "commitsDetails": []}, {"title": "Datasets skipped within Scenario Outline of a feature file called from another feature file.", "body": "Here I have a `checker.feature` file which is : \r\n```\r\nFeature: Demo\r\n\r\n  Scenario: Title of your scenario\r\n    * def a = read('checker2.feature')\r\n    * def b = call a\r\n```\r\nIt call another `checker2.feature` file from same package which is : \r\n```\r\n@ignore\r\nFeature: Called feature file\r\n\r\n  Scenario Outline: Title of your scenario outline\r\n    * print <name>\r\n    * print <value>\r\n    * assert <name> == <value>\r\n\r\n    Examples: \r\n      | name  | value |\r\n      | 5     |     5 |\r\n      | 7     |     7 |\r\n      | 10    |     10|\r\n      | 11    |     12|\r\n      |12     |     12|\r\n      |13     |     14|\r\n      |14     |     14|\r\n```\r\n\r\nAs it is visible in `checker2.feature` file that `dataset #4` which is `| 11    |     12|` will fail. The execution of datasets after it is not considered. \r\nCould we have a fix for this?", "url": "https://github.com/intuit/karate/issues/421", "user": "anurag0510", "labels": ["bug", "fixed"], "created": "2018-06-14 10:38:57", "closed": "2018-07-16 05:48:22", "commits": {"f9225027a796b68073c12d95ceb9b8f4bb98311a": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 31.00027777777778, "commitsDetails": [{"commitHash": "f9225027a796b68073c12d95ceb9b8f4bb98311a", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["1816f5e1eb95d549fe7691be8d74cb73ceecd219"], "nameRev": "f9225027a796b68073c12d95ceb9b8f4bb98311a tags/v0.8.0~37", "commitMessage": "called outline examples were not fully iterated on error #421\n", "commitDateTime": "2018-06-14 18:45:37", "authoredDateTime": "2018-06-14 18:45:37", "commitGitStats": [{"filePath": "README.md", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "karate-core/src/main/java/com/intuit/karate/Logger.java", "insertions": 21, "deletions": 54, "lines": 75}, {"filePath": "karate-core/src/main/java/com/intuit/karate/cucumber/AsyncSection.java", "insertions": 37, "deletions": 5, "lines": 42}, {"filePath": "karate-core/src/main/java/com/intuit/karate/cucumber/KarateReporter.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/cucumber/KarateReporterBase.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "karate-demo/src/test/java/demo/callfeature/call-feature.feature", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "karate-demo/src/test/java/demo/callfeature/create-cats-outline.feature", "insertions": 19, "deletions": 0, "lines": 19}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/dev.feature", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/fail-outline.feature", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/fail.feature", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Logger.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Logger", "TOT": 22, "UPD": 12, "INS": 3, "MOV": 4, "DEL": 3}, {"spoonMethodName": "com.intuit.karate.Logger.trace(java.lang.String,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Logger.debug(java.lang.String,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Logger.info(java.lang.String,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Logger.warn(java.lang.String,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Logger.error(java.lang.String,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Logger.append(int,java.lang.String)", "TOT": 8, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 5}, {"spoonMethodName": "com.intuit.karate.Logger.isLevelEnabled(int)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.Logger.renderLevel(int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.Logger.formatAndAppend(int,java.lang.String,java.lang.Object[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AsyncSection.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.cucumber.AsyncSection.submit(java.util.function.Consumer,java.util.function.BiConsumer)", "TOT": 7, "UPD": 0, "INS": 5, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.cucumber.AsyncSection", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "KarateReporter.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.cucumber.exampleBegin(com.intuit.karate.cucumber.ScenarioWrapper,com.intuit.karate.CallContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "KarateReporterBase.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.cucumber.KarateReporterBase.exampleBegin(com.intuit.karate.cucumber.ScenarioWrapper,com.intuit.karate.CallContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f9225027a796b68073c12d95ceb9b8f4bb98311a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 72, "deletions": 59, "lines": 131, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 51, "UPD": 18, "INS": 13, "MOV": 8, "DEL": 12, "spoonFilesChanged": 4, "spoonMethodsChanged": 14}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/cucumber", "karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.Logger.renderLevel(int)", "com.intuit.karate.cucumber.AsyncSection", "com.intuit.karate.Logger.info(java.lang.String,java.lang.Object[])", "com.intuit.karate.Logger.trace(java.lang.String,java.lang.Object[])", "com.intuit.karate.Logger.debug(java.lang.String,java.lang.Object[])", "com.intuit.karate.cucumber.exampleBegin(com.intuit.karate.cucumber.ScenarioWrapper,com.intuit.karate.CallContext)", "com.intuit.karate.Logger.warn(java.lang.String,java.lang.Object[])", "com.intuit.karate.Logger.append(int,java.lang.String)", "com.intuit.karate.Logger.isLevelEnabled(int)", "com.intuit.karate.cucumber.KarateReporterBase.exampleBegin(com.intuit.karate.cucumber.ScenarioWrapper,com.intuit.karate.CallContext)", "com.intuit.karate.Logger.error(java.lang.String,java.lang.Object[])", "com.intuit.karate.Logger.formatAndAppend(int,java.lang.String,java.lang.Object[])", "com.intuit.karate.cucumber.AsyncSection.submit(java.util.function.Consumer,java.util.function.BiConsumer)", "com.intuit.karate.Logger"]}, {"title": "remove does not work on XML attributes", "body": "discovered this via this question on stack overflow ! oops\r\n\r\nhttps://stackoverflow.com/a/50615950/143475", "url": "https://github.com/intuit/karate/issues/407", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2018-05-31 08:17:40", "closed": "2018-07-16 05:49:20", "commits": {"37a316565bf6bba7be0e749b3a8ea25c406c24f1": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 45.000277777777775, "commitsDetails": [{"commitHash": "37a316565bf6bba7be0e749b3a8ea25c406c24f1", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["441c7fba025f4a615beb71a47bd6cfa71b5a2dd6"], "nameRev": "37a316565bf6bba7be0e749b3a8ea25c406c24f1 tags/v0.8.0~54", "commitMessage": "remove had no effect on xml attributes, fixed ref #407\n", "commitDateTime": "2018-05-31 13:39:05", "authoredDateTime": "2018-05-31 13:39:05", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/XmlUtils.java", "insertions": 23, "deletions": 17, "lines": 40}, {"filePath": "karate-core/src/test/java/com/intuit/karate/ScriptTest.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/xml/xml.feature", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "XmlUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.XmlUtils.removeByPath(org.w3c.dom.Document,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "ScriptTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptTest.testDeleteValueOnVariableByPath()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["37a316565bf6bba7be0e749b3a8ea25c406c24f1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 23, "deletions": 17, "lines": 40, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.XmlUtils.removeByPath(org.w3c.dom.Document,java.lang.String)"]}, {"title": "karate : Complex JSON Schema matching", "body": "```\r\nFeature: Complex Schema\r\n  Background:\r\n    * def JSONtobeValidiated =\r\n    \"\"\"\r\n\r\n  {\r\n  \"MyArray\": {\r\n    \"MYinternalDetails\": [\r\n      {\r\n        \"SomeField\": \"dc\",\r\n        \"textfield\": [],\r\n        \"OptionalArray1\": [\r\n          {\r\n            \"Users\": \"Y\",\r\n            \"IsAllowed\": \"Y\"\r\n          },\r\n          {\r\n            \"Users\": \"Y\",\r\n            \"IsAllowed\": \"Y\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"SomeField\": \"cd\",\r\n        \"textfield\": [],\r\n        \"OptionalArray3\": [\r\n          {\r\n            \"Astring\": \"Lazy\",\r\n            \"AnotherString\": \"N\",\r\n            \"textfield\": []\r\n          },\r\n          {\r\n            \"Astring\": \"FREE\",\r\n            \"AnotherString\": \"N\",\r\n            \"textfield\": [\r\n              {\r\n                \"title\": \"Name\",\r\n                \"alertMessage\": \"Please enter valid name.\"\r\n              },\r\n              {\r\n                \"title\": \"Mobile No\",\r\n                \"alertMessage\": \"Please enter mobile no.\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"SomeField\": \"gv\",\r\n        \"textfield\": [\r\n          {\r\n            \"title\": \"First\",\r\n            \"alertMessage\": \"SOme Alert\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"SomeField\": \"rp\",\r\n        \"textfield\": []\r\n      }\r\n    ]\r\n  }\r\n}\"\"\"\r\n\r\n    * def textfield = { title: '#string', alertMessage: '#string' }\r\n    * def OptionalArray1 = { Users: '#string',IsAllowed: '#string' }\r\n    * def OptionalArray3 = { Astring: '#string' ,AnotherString: '#string', textfield: '##[]'  }\r\n\r\n    * def MYinternalDetails =\r\n    \"\"\"\r\n      {\r\n        SomeField: '#string',\r\n        textfield: '##[]',\r\n        OptionalArray1: '##[] OptionalArray1'\r\n        OptionalArray3: '##[] OptionalArray3'\r\n      }\r\n\r\n    \"\"\"\r\n\r\n    * def ValidJsonSchema = { MyArray: { MYinternalDetails: '#[] MYinternalDetails' } }\r\n\r\n  Scenario: These matches works\r\n\r\n    * match JSONtobeValidiated.MyArray.MYinternalDetails == '#[]'\r\n    * match JSONtobeValidiated.MyArray.MYinternalDetails == '#[4]'\r\n    * match JSONtobeValidiated contains  { MyArray: '#ignore' }\r\n    * match JSONtobeValidiated contains { MyArray: { MYinternalDetails: '#ignore' } }\r\n\r\n\r\n\r\n  Scenario: These match doesn't work\r\n    * match JSONtobeValidiated contains { MyArray: { MYinternalDetails: '#[] MYinternalDetails' } }\r\n\r\n  Scenario: These match doesn't work either\r\n\r\n    * match JSONtobeValidiated.MyArray.MYinternalDetails == '#[] MYinternalDetails'\r\n\r\n  Scenario: These match Also doesn't work\r\n\r\n    * match JSONtobeValidiated == ValidJsonSchema\r\n\r\n\r\n\r\n```\r\n\r\n\r\nIn Above Example , Schema matching doesn't seems to be working as expected.  Need to match full JSON schema. \r\n\r\nReference: https://stackoverflow.com/questions/49231115/karate-complex-json-schema-matching\r\n\r\n", "url": "https://github.com/intuit/karate/issues/346", "user": "avyasbms", "labels": ["bug", "fixed"], "created": "2018-03-13 10:47:53", "closed": "2018-07-16 05:50:46", "commits": {"b95d9f03a8d72101d415facc8d55c7478d3971e0": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 124.00027777777778, "commitsDetails": [{"commitHash": "b95d9f03a8d72101d415facc8d55c7478d3971e0", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["9dac6ce99998be04be2e322f062025e9ed52afbd"], "nameRev": "b95d9f03a8d72101d415facc8d55c7478d3971e0 tags/v0.8.0~124", "commitMessage": "fixed bug in match each shortcut routine ref #346\n", "commitDateTime": "2018-03-13 17:02:38", "authoredDateTime": "2018-03-13 17:02:38", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/schema-like.feature", "insertions": 19, "deletions": 0, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.matchJsonOrObject(com.intuit.karate.MatchType,com.intuit.karate.ScriptValue,java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)", "TOT": 15, "UPD": 2, "INS": 1, "MOV": 9, "DEL": 3}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b95d9f03a8d72101d415facc8d55c7478d3971e0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 4, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 15, "UPD": 2, "INS": 1, "MOV": 9, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.Script.matchJsonOrObject(com.intuit.karate.MatchType,com.intuit.karate.ScriptValue,java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)"]}, {"title": "0.7.0 upgrade - nullPointerException when performing request with missing or invalid basic auth credentials", "body": "The following scenario passes on 0.6.2 but fails on 0.7.0\r\n\r\n```\r\n  Scenario: Basic Auth Credentials must be supplied for POST\r\n    Given path '/apath'\r\n    And request\r\n    \"\"\"\r\n      {\r\n        \"foo\": \"bar\"\r\n      }\r\n    \"\"\"\r\n    When method PUT\r\n    Then status 401\r\n    And match response.errors[0].code == \"unauthorized\"\r\n    And match response.errors[0].message == \"Not authorized\"\r\n```\r\n\r\n\r\nI get the response\r\n```\r\n15:56:05.225 [main] DEBUG com.intuit.karate - \r\n1 > PUT SOMEENDPOINT\r\n1 > Accept-Encoding: gzip,deflate\r\n1 > Connection: Keep-Alive\r\n1 > Content-Length: 128\r\n1 > Content-Type: application/json; charset=UTF-81 > Host: SOMEHOST\r\n1 > User-Agent: Apache-HttpClient/4.5.4 (Java/1.8.0_112)\r\n{\"foo\":\"bar\"}\r\n15:56:05.391 [main] ERROR com.intuit.karate - java.lang.NullPointerException, http call failed after 167 milliseconds for URL: SOMEENDPOINT\r\n15:56:05.391 [main] ERROR com.intuit.karate - http request failed: \r\njava.lang.NullPointerException\r\ncom.intuit.karate.exception.KarateException:\r\njava.lang.NullPointerException\r\n  at com.intuit.karate.StepDefs.method(StepDefs.java:364)\r\n  at \u273d.When method PUT(.feature:209)\r\n```\r\nIf I revert back to 0.6.2 it works again!", "url": "https://github.com/intuit/karate/issues/342", "user": "YOU54F", "labels": ["bug", "fixed"], "created": "2018-03-07 16:02:19", "closed": "2018-07-16 05:50:58", "commits": {"9dac6ce99998be04be2e322f062025e9ed52afbd": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 130.00027777777777, "commitsDetails": [{"commitHash": "9dac6ce99998be04be2e322f062025e9ed52afbd", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["83a5814c3cf6c60743c414d9fa5a8c815dbdf64c"], "nameRev": "9dac6ce99998be04be2e322f062025e9ed52afbd tags/v0.8.0~125", "commitMessage": "upgrade apache ref #342\n", "commitDateTime": "2018-03-08 05:12:18", "authoredDateTime": "2018-03-08 05:12:18", "commitGitStats": [{"filePath": "karate-apache/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9dac6ce99998be04be2e322f062025e9ed52afbd"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Karate Embedded Expression not working as expected for xml attribute", "body": "This is : 3_PostData_Request.xml\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<S:Envelope xmlns:S=\"http://www.w3.org/2003/05/soap-envelope\">\r\n    <S:Body>\r\n        <SucceededGetData RequestID=\"#(request_uuid)\">some text</SucceededGetData>\r\n        <MessageDelivered OfferID=\"#(request_uuid)\" />\r\n\r\n    </S:Body>\r\n</S:Envelope>\r\n```\r\n\r\nThis is the scenario file:\r\n```\r\nScenario: test\r\n    * def UUID = function(){ return java.util.UUID.randomUUID() }\r\n    * def request_uuid = call UUID\r\n    * def req = read('classpath:3_PostData_Request.xml')\r\n    * print req\r\n```\r\n\r\nThis is the result:\r\n```\r\n<S:Body>\r\n    <SucceededGetData RequestID=\"ab5bbb38-d462-42f5-afd2-49c47fd59365\">some text</SucceededGetData>\r\n    <MessageDelivered OfferID=\"#(request_uuid)\"/>\r\n  </S:Body>\r\n</S:Envelope>\r\n```\r\n\r\nI would like to know why Karate is able to replace #(request_uuid) for xml element which has some text in it and why not for one without any text. How may I achieve replacement in both the cases seamlessely. I am using karate 0.7.0.1. Thanks !", "url": "https://github.com/intuit/karate/issues/341", "user": "PallaviMistry", "labels": ["bug", "fixed"], "created": "2018-03-07 14:15:48", "closed": "2018-07-16 05:51:10", "commits": {"9560ad9ab44cf45e8a1305b653258a2aa6aa348a": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 130.00027777777777, "commitsDetails": [{"commitHash": "9560ad9ab44cf45e8a1305b653258a2aa6aa348a", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["d83d95af6cbbecb16a1ac08d0b3e94a55d7f28ad"], "nameRev": "9560ad9ab44cf45e8a1305b653258a2aa6aa348a tags/v0.8.0~127", "commitMessage": "fixed xml attribute embedded expression bug ref #341\n", "commitDateTime": "2018-03-07 21:53:41", "authoredDateTime": "2018-03-07 21:53:41", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/xml/xml.feature", "insertions": 49, "deletions": 0, "lines": 49}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.evalXmlEmbeddedExpressions(org.w3c.dom.Node,com.intuit.karate.ScriptContext,boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9560ad9ab44cf45e8a1305b653258a2aa6aa348a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.Script.evalXmlEmbeddedExpressions(org.w3c.dom.Node,com.intuit.karate.ScriptContext,boolean)"]}, {"title": "Unroot senarios.", "body": "I upgraded from karate 6.0 to 7.0 with the required java 8 version and although all senarios pass; they are unrooted. This means that they are not seen as children of a feature to the junit runner. I have done an quick quick investigation and it appears to be related to the new Karate class description handling.\r\n\r\n", "url": "https://github.com/intuit/karate/issues/329", "user": "jbadeau", "labels": ["bug", "fixed"], "created": "2018-02-19 22:05:57", "closed": "2018-07-16 05:51:29", "commits": {"61a63af92844cf750f22e06d755589b1e68e60bd": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "2e9ad2950140d0a8b447d99a0fdf22356d7dc75a": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 146.00027777777777, "commitsDetails": [{"commitHash": "61a63af92844cf750f22e06d755589b1e68e60bd", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["9b3562019ec2549429eff60bce91b777d933c88f"], "nameRev": "61a63af92844cf750f22e06d755589b1e68e60bd tags/v0.8.0~135", "commitMessage": "hopefully fixes eclipse junit viz - ref #329\n", "commitDateTime": "2018-02-21 20:28:25", "authoredDateTime": "2018-02-21 20:28:25", "commitGitStats": [{"filePath": "karate-junit4/src/main/java/com/intuit/karate/junit4/Karate.java", "insertions": 32, "deletions": 51, "lines": 83}, {"filePath": "karate-junit4/src/main/java/com/intuit/karate/junit4/KarateFeatureRunner.java", "insertions": 43, "deletions": 0, "lines": 43}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Karate.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.Karate", "TOT": 25, "UPD": 9, "INS": 5, "MOV": 10, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.junit4.Karate.initReporters()", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.junit4.Karate.runChild(com.intuit.karate.cucumber.KarateFeature,org.junit.runner.notification.RunNotifier)", "TOT": 16, "UPD": 6, "INS": 0, "MOV": 4, "DEL": 6}, {"spoonMethodName": "com.intuit.karate.junit4.Karate.describeChild(com.intuit.karate.cucumber.KarateFeature)", "TOT": 14, "UPD": 6, "INS": 0, "MOV": 7, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.junit4.Karate.runChild(cucumber.runtime.junit.FeatureRunner,org.junit.runner.notification.RunNotifier)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "KarateFeatureRunner.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.KarateFeatureRunner", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "2e9ad2950140d0a8b447d99a0fdf22356d7dc75a", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["61a63af92844cf750f22e06d755589b1e68e60bd"], "nameRev": "2e9ad2950140d0a8b447d99a0fdf22356d7dc75a tags/v0.8.0~134", "commitMessage": "solved reporter log appender issue via lazy init ref #329\nthis was the reason that clunky junit hack was done in 0.7.0 and this should have been the solution\nthe story is when the junit dev mode report was introduced, for some reason the junit tests in the demo would not capture http logs etc\nso some convolution in lazy init of logging system was hacked into junit entry point / karate.class\nwhich I didn't realize broke eclipse junit ui visualization\nanyway I think now things are back where they should have been, *phew*\n", "commitDateTime": "2018-02-21 20:56:49", "authoredDateTime": "2018-02-21 20:56:49", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/cucumber/KarateHtmlReporter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/cucumber/KarateReporterBase.java", "insertions": 10, "deletions": 3, "lines": 13}, {"filePath": "karate-junit4/src/main/java/com/intuit/karate/junit4/Karate.java", "insertions": 7, "deletions": 2, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "KarateHtmlReporter.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.cucumber.KarateHtmlReporter.karateStepProceed(gherkin.formatter.model.Step,gherkin.formatter.model.Match,gherkin.formatter.model.Result,com.intuit.karate.CallContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "KarateReporterBase.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.cucumber.KarateReporterBase", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.cucumber.KarateReporterBase.callBegin(com.intuit.karate.cucumber.FeatureWrapper,com.intuit.karate.CallContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.cucumber.KarateReporterBase.karateStep(gherkin.formatter.model.Step,gherkin.formatter.model.Match,gherkin.formatter.model.Result,com.intuit.karate.CallContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.cucumber.KarateReporterBase.getAppender()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Karate.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.Karate", "TOT": 4, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.junit4.Karate.1.eof()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["61a63af92844cf750f22e06d755589b1e68e60bd", "2e9ad2950140d0a8b447d99a0fdf22356d7dc75a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 93, "deletions": 57, "lines": 150, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 82, "UPD": 28, "INS": 15, "MOV": 27, "DEL": 12, "spoonFilesChanged": 4, "spoonMethodsChanged": 12}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-junit4/src/main/java/com/intuit/karate/junit4", "karate-core/src/main/java/com/intuit/karate/cucumber"], "changesInPackagesSPOON": ["com.intuit.karate.junit4.Karate", "com.intuit.karate.junit4.Karate.runChild(com.intuit.karate.cucumber.KarateFeature,org.junit.runner.notification.RunNotifier)", "com.intuit.karate.cucumber.KarateReporterBase.callBegin(com.intuit.karate.cucumber.FeatureWrapper,com.intuit.karate.CallContext)", "com.intuit.karate.junit4.Karate.describeChild(com.intuit.karate.cucumber.KarateFeature)", "com.intuit.karate.junit4.Karate.initReporters()", "com.intuit.karate.junit4.Karate.runChild(cucumber.runtime.junit.FeatureRunner,org.junit.runner.notification.RunNotifier)", "com.intuit.karate.cucumber.KarateReporterBase.karateStep(gherkin.formatter.model.Step,gherkin.formatter.model.Match,gherkin.formatter.model.Result,com.intuit.karate.CallContext)", "com.intuit.karate.cucumber.KarateHtmlReporter.karateStepProceed(gherkin.formatter.model.Step,gherkin.formatter.model.Match,gherkin.formatter.model.Result,com.intuit.karate.CallContext)", "com.intuit.karate.junit4.Karate.1.eof()", "com.intuit.karate.junit4.KarateFeatureRunner", "com.intuit.karate.cucumber.KarateReporterBase.getAppender()", "com.intuit.karate.cucumber.KarateReporterBase"]}, {"title": "JSON request print replace \"/\" with \"\\/\"", "body": "When I enable logPrettyPrint JSON requestBody containing \"/\" gets replaced with \"\\/\".\r\nI think in https://github.com/intuit/karate/blob/master/karate-core/src/main/java/com/intuit/karate/JsonUtils.java at lline number 178 and 212 `JSONObject.escape(value)`  can be replaced with `JSONValue.escape(key, JSONStyle.LT_COMPRESS)` because JSONObject.escape internally escapes using `JStylerObj.ESCAPE4Web` ", "url": "https://github.com/intuit/karate/issues/326", "user": "RavinderSinghMaan", "labels": ["bug", "fixed"], "created": "2018-02-11 22:10:03", "closed": "2018-02-19 05:01:12", "commits": {"55938ad3535264fcf8f398040869c24efdcdf249": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "55938ad3535264fcf8f398040869c24efdcdf249", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["62bb32498a89f936793d11c16ff831c241705eba"], "nameRev": "55938ad3535264fcf8f398040869c24efdcdf249 tags/v0.7.0~8", "commitMessage": "fixed json pretty print ref #326\n", "commitDateTime": "2018-02-12 09:06:00", "authoredDateTime": "2018-02-12 09:06:00", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/JsonUtils.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/print.feature", "insertions": 7, "deletions": 1, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JsonUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.JsonUtils.recursePretty(java.lang.Object,java.lang.StringBuilder,int,java.util.Set)", "TOT": 4, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["55938ad3535264fcf8f398040869c24efdcdf249"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.JsonUtils.recursePretty(java.lang.Object,java.lang.StringBuilder,int,java.util.Set)"]}, {"title": "Content-Type: PUT java.nio.charset.UnsupportedCharsetException: 1", "body": "I'm trying to do a PUT with the following Content-Type:\r\n\r\nContent-Type : application/vnd.app.test+json;ton-version=1\r\nGetting the following error:\r\n\r\njava.nio.charset.UnsupportedCharsetException: 1\r\n\tat java.nio.charset.Charset.forName(Charset.java:531)\r\n\tat org.apache.http.entity.ContentType.create(ContentType.java:234)\r\n\tat org.apache.http.entity.ContentType.withCharset(ContentType.java:426)\r\n\tat com.intuit.karate.http.apache.ApacheHttpUtils.createContentType(ApacheHttpUtils.java:103)\r\n\tat com.intuit.karate.http.apache.ApacheHttpClient.getEntity(ApacheHttpClient.java:218)\r\n\tat com.intuit.karate.http.apache.ApacheHttpClient.getEntity(ApacheHttpClient.java:77)\r\n\tat com.intuit.karate.http.HttpClient.getEntityInternal(HttpClient.java:93)\r\n\tat com.intuit.karate.http.HttpClient.buildRequestInternal(HttpClient.java:188)\r\n\tat com.intuit.karate.http.HttpClient.invoke(HttpClient.java:207)\r\n\tat com.intuit.karate.StepDefs.method(StepDefs.java:357)\r\n\tat \u273d.When method put...\r\n\r\n**But the same Content-Type was able to do a GET.**\r\n\r\n  Background:\r\n     * Calling common.feature\r\n    * def someData = { Authorization: #(authToken),  **'Content-Type': 'application/vnd.app.test+json;ton-version=1'** }\r\n    * headers someData\r\n\r\nScenario: Create data\r\n    Given path '/data/test/id'\r\n    And request read(jsonData.json)\r\n    When method put\r\n    Then status 201\r\n**This will throw java.nio.charset.UnsupportedCharsetException: 1 exception**\r\n\r\nAlso tried to add headers in the scenario, if i add 'Content-Type'  (single quote ) then its getting adding the Content-Type to the request but also adding the single quotes as well. This will throw unsupported media type error.\r\n\r\nScenario: Create data\r\n    Given path '/data/test/id'\r\n    And request read(jsonData.json)\r\n   And header  'Content-Type' = 'application/vnd.app.test+json;ton-version=1'\r\n   And header Authorization = 'authtoken'\r\n    When method put\r\n    Then status 201\r\nAny help is much appreciated.\r\n", "url": "https://github.com/intuit/karate/issues/314", "user": "g-one", "labels": ["bug", "fixed"], "created": "2018-02-09 07:31:56", "closed": "2018-02-19 05:01:24", "commits": {"5cbed811353dddb3cc652ad2eb702472eceedc2c": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "5cbed811353dddb3cc652ad2eb702472eceedc2c", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["2b6ef24af3763ab582c2f81ca02e9e0a0c2d7d87"], "nameRev": "5cbed811353dddb3cc652ad2eb702472eceedc2c tags/v0.7.0~23", "commitMessage": "fixed apache to use unusual content-type header params ref #314\n", "commitDateTime": "2018-02-09 14:19:24", "authoredDateTime": "2018-02-09 14:19:24", "commitGitStats": [{"filePath": "karate-apache/src/main/java/com/intuit/karate/http/apache/ApacheHttpUtils.java", "insertions": 15, "deletions": 6, "lines": 21}, {"filePath": "karate-core/src/main/java/com/intuit/karate/http/HttpUtils.java", "insertions": 27, "deletions": 11, "lines": 38}, {"filePath": "karate-core/src/test/java/com/intuit/karate/http/HttpUtilsTest.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "karate-demo/src/test/java/demo/headers/content-type.feature", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ApacheHttpUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpUtils.getContentType(java.lang.String,java.nio.charset.Charset)", "TOT": 15, "UPD": 6, "INS": 4, "MOV": 4, "DEL": 1}]}, {"spoonFilePath": "HttpUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpUtils.parseContentTypeCharset(java.lang.String)", "TOT": 36, "UPD": 12, "INS": 2, "MOV": 19, "DEL": 3}, {"spoonMethodName": "com.intuit.karate.http.HttpUtils", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.HttpUtils.parseContentTypeParams(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpUtilsTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpUtilsTest.testParseContentTypeParams()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5cbed811353dddb3cc652ad2eb702472eceedc2c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 42, "deletions": 17, "lines": 59, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 54, "UPD": 18, "INS": 9, "MOV": 23, "DEL": 4, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/http", "karate-apache/src/main/java/com/intuit/karate/http/apache"], "changesInPackagesSPOON": ["com.intuit.karate.http.HttpUtils.parseContentTypeCharset(java.lang.String)", "com.intuit.karate.http.HttpUtils", "com.intuit.karate.http.apache.ApacheHttpUtils.getContentType(java.lang.String,java.nio.charset.Charset)", "com.intuit.karate.http.HttpUtils.parseContentTypeParams(java.lang.String)"]}, {"title": "Request body with special characters not sent correctly", "body": "When sending request with payload \"givenName\": \"oli\u00e0\u00e8\u00f4\u00e7\", karate sends the request as {\"displayName\":\"oli\ufffd\ufffd\ufffd\ufffd\".", "url": "https://github.com/intuit/karate/issues/302", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2018-01-31 04:20:43", "closed": "2018-02-19 05:01:52", "commits": {"4c836f9f468f621d9480394da9267809d97a619d": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "3c1f1916a020ab083810dc7f911b1840e8bf9d12": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "7970925c8cbccb3419f911424f40462b40937c8e": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 19.00027777777778, "commitsDetails": [{"commitHash": "4c836f9f468f621d9480394da9267809d97a619d", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["a793b4dfcc18a2fb1db7cbc6154d318398df8848"], "nameRev": "4c836f9f468f621d9480394da9267809d97a619d tags/v0.7.0~36", "commitMessage": "fix for request encoding when special characters ref #302\n", "commitDateTime": "2018-01-31 09:39:31", "authoredDateTime": "2018-01-31 09:39:31", "commitGitStats": [{"filePath": "karate-apache/src/main/java/com/intuit/karate/http/apache/ApacheHttpUtils.java", "insertions": 8, "deletions": 3, "lines": 11}, {"filePath": "karate-core/src/main/java/com/intuit/karate/http/HttpUtils.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "karate-core/src/test/java/com/intuit/karate/http/HttpUtilsTest.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "karate-demo/src/main/java/com/intuit/karate/demo/controller/EchoController.java", "insertions": 10, "deletions": 1, "lines": 11}, {"filePath": "karate-demo/src/test/java/demo/encoding/encoding.feature", "insertions": 37, "deletions": 0, "lines": 37}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ApacheHttpUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(java.lang.String,java.lang.String)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(com.intuit.karate.http.MultiValuedMap,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(java.util.List,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpUtils.parseContentTypeCharset(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpUtilsTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpUtilsTest.testParseContentTypeCharset()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EchoController.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.demo.controller.EchoController.echo(com.intuit.karate.demo.domain.Message)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "3c1f1916a020ab083810dc7f911b1840e8bf9d12", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["de3dd6ee4b0d770407425c2c1cd5b5bd124abd7b"], "nameRev": "3c1f1916a020ab083810dc7f911b1840e8bf9d12 tags/v0.7.0~28", "commitMessage": "introduced configure charset that defaults to utf-8 ref #302\n", "commitDateTime": "2018-02-05 20:28:37", "authoredDateTime": "2018-02-05 20:28:37", "commitGitStats": [{"filePath": "README.md", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "karate-apache/src/main/java/com/intuit/karate/http/apache/ApacheHttpClient.java", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "karate-apache/src/main/java/com/intuit/karate/http/apache/ApacheHttpUtils.java", "insertions": 49, "deletions": 13, "lines": 62}, {"filePath": "karate-core/src/main/java/com/intuit/karate/ScriptContext.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "karate-core/src/main/java/com/intuit/karate/http/HttpConfig.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "karate-core/src/main/java/com/intuit/karate/http/HttpUtils.java", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "karate-core/src/test/java/com/intuit/karate/http/HttpUtilsTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "karate-demo/src/test/java/demo/encoding/encoding.feature", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "karate-demo/src/test/java/demo/headers/content-type.feature", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-demo/src/test/java/demo/redirect/redirect.feature", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "karate-demo/src/test/java/demo/request/request.feature", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "karate-demo/src/test/java/demo/signin/sign-in.feature", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "karate-jersey/src/main/java/com/intuit/karate/http/jersey/JerseyHttpClient.java", "insertions": 27, "deletions": 9, "lines": 36}, {"filePath": "karate-mock-servlet/src/test/java/demo/MockSpringMvcServletTest.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "karate-netty/README.md", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ApacheHttpClient.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpClient.getEntity(java.io.InputStream,java.lang.String)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 3}, {"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpClient", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpClient.configure(com.intuit.karate.http.HttpConfig,com.intuit.karate.ScriptContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpClient.getEntity(java.util.List,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpClient.getEntity(com.intuit.karate.http.MultiValuedMap,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpClient.getEntity(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ApacheHttpUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(java.lang.String,java.lang.String)", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 3}, {"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(com.intuit.karate.http.MultiValuedMap,java.lang.String)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpUtils.getContentType(java.lang.String,java.nio.charset.Charset)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(java.io.InputStream,java.lang.String,java.nio.charset.Charset)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(java.lang.String,java.lang.String,java.nio.charset.Charset)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(com.intuit.karate.http.MultiValuedMap,java.lang.String,java.nio.charset.Charset)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(java.util.List,java.lang.String,java.nio.charset.Charset)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(java.util.List,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "ScriptContext.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptContext.configure(java.lang.String,com.intuit.karate.ScriptValue)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpConfig.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpConfig", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.HttpConfig.getCharset()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.HttpConfig.setCharset(java.nio.charset.Charset)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpUtils.parseContentTypeCharset(java.lang.String)", "TOT": 7, "UPD": 1, "INS": 3, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "HttpUtilsTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpUtilsTest.testParseContentTypeCharset()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JerseyHttpClient.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.jersey.JerseyHttpClient", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.jersey.JerseyHttpClient.getMediaType(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.jersey.JerseyHttpClient.configure(com.intuit.karate.http.HttpConfig,com.intuit.karate.ScriptContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.jersey.JerseyHttpClient.getEntity(java.util.List,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.jersey.JerseyHttpClient.getEntity(com.intuit.karate.http.MultiValuedMap,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.jersey.JerseyHttpClient.getEntity(java.lang.String,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.jersey.JerseyHttpClient.getEntity(java.io.InputStream,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MockSpringMvcServletTest.java", "spoonMethods": [{"spoonMethodName": "demo.MockSpringMvcServletTest.testSpringBootDemo()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "demo.MockSpringMvcServletTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "7970925c8cbccb3419f911424f40462b40937c8e", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["1b629e5c317873b427f47cfe20624551e937b347"], "nameRev": "7970925c8cbccb3419f911424f40462b40937c8e tags/v0.7.0~4", "commitMessage": "support not sending charset in content-type header add to #302\n", "commitDateTime": "2018-02-14 10:48:23", "authoredDateTime": "2018-02-14 10:48:23", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/ScriptContext.java", "insertions": 33, "deletions": 27, "lines": 60}, {"filePath": "karate-demo/src/test/java/demo/headers/content-type.feature", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "karate-demo/src/test/java/mock/contract/payment-service-proxy.feature", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-demo/src/test/java/mock/proxy/demo-mock-proceed.feature", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-jersey/src/main/java/com/intuit/karate/http/jersey/JerseyHttpClient.java", "insertions": 5, "deletions": 2, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ScriptContext.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptContext.configure(java.lang.String,com.intuit.karate.ScriptValue)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "JerseyHttpClient.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.jersey.JerseyHttpClient.getMediaType(java.lang.String)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.http.jersey.JerseyHttpClient.getEntity(java.util.List,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4c836f9f468f621d9480394da9267809d97a619d", "3c1f1916a020ab083810dc7f911b1840e8bf9d12", "7970925c8cbccb3419f911424f40462b40937c8e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 180, "deletions": 68, "lines": 248, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 76, "UPD": 3, "INS": 42, "MOV": 22, "DEL": 9, "spoonFilesChanged": 7, "spoonMethodsChanged": 27}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/http", "karate-core/src/main/java/com/intuit/karate", "karate-jersey/src/main/java/com/intuit/karate/http/jersey", "karate-apache/src/main/java/com/intuit/karate/http/apache", "karate-demo/src/main/java/com/intuit/karate/demo/controller"], "changesInPackagesSPOON": ["com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(java.lang.String,java.lang.String)", "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(com.intuit.karate.http.MultiValuedMap,java.lang.String)", "com.intuit.karate.http.HttpUtils.parseContentTypeCharset(java.lang.String)", "com.intuit.karate.ScriptContext.configure(java.lang.String,com.intuit.karate.ScriptValue)", "com.intuit.karate.http.jersey.JerseyHttpClient.getEntity(java.util.List,java.lang.String)", "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(java.util.List,java.lang.String)", "com.intuit.karate.http.jersey.JerseyHttpClient.getMediaType(java.lang.String)", "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(java.lang.String,java.lang.String,java.nio.charset.Charset)", "com.intuit.karate.http.apache.ApacheHttpClient", "com.intuit.karate.http.apache.ApacheHttpUtils.getContentType(java.lang.String,java.nio.charset.Charset)", "com.intuit.karate.http.apache.ApacheHttpClient.configure(com.intuit.karate.http.HttpConfig,com.intuit.karate.ScriptContext)", "com.intuit.karate.http.apache.ApacheHttpClient.getEntity(java.util.List,java.lang.String)", "com.intuit.karate.http.HttpConfig", "com.intuit.karate.http.HttpConfig.getCharset()", "com.intuit.karate.http.jersey.JerseyHttpClient.configure(com.intuit.karate.http.HttpConfig,com.intuit.karate.ScriptContext)", "com.intuit.karate.http.HttpConfig.setCharset(java.nio.charset.Charset)", "com.intuit.karate.http.apache.ApacheHttpClient.getEntity(java.lang.String,java.lang.String)", "com.intuit.karate.http.jersey.JerseyHttpClient.getEntity(java.lang.String,java.lang.String)", "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(java.util.List,java.lang.String,java.nio.charset.Charset)", "com.intuit.karate.demo.controller.EchoController.echo(com.intuit.karate.demo.domain.Message)", "com.intuit.karate.http.apache.ApacheHttpClient.getEntity(com.intuit.karate.http.MultiValuedMap,java.lang.String)", "com.intuit.karate.http.jersey.JerseyHttpClient.getEntity(java.io.InputStream,java.lang.String)", "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(java.io.InputStream,java.lang.String,java.nio.charset.Charset)", "com.intuit.karate.http.apache.ApacheHttpClient.getEntity(java.io.InputStream,java.lang.String)", "com.intuit.karate.http.jersey.JerseyHttpClient", "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(com.intuit.karate.http.MultiValuedMap,java.lang.String,java.nio.charset.Charset)", "com.intuit.karate.http.jersey.JerseyHttpClient.getEntity(com.intuit.karate.http.MultiValuedMap,java.lang.String)"]}, {"title": "When using method Get, does not send header Authorization nor Accept-Encoding parameters. Please Help :)", "body": "I'm attempting to execute a simple twitter query with application-only authentication (OAuth2).\r\n(Disclaimer: I began using intuit/Karate yesterday and am very new to everything HTTP protocol)\r\nall relevant code is linked at the bottom of this post.\r\n\r\nThe GenerateBearerToken.feature does it's job as expected:\r\n\r\n1 > POST https://api.twitter.com/oauth2/token\r\n1 > Accept-Encoding: gzip\r\n1 > Authorization: Basic <my base 64 string here>==\r\n1 > Connection: Keep-Alive\r\n1 > Content-Length: 29\r\n1 > Content-Type: application/x-www-form-urlencoded;charset=UTF-8\r\n1 > Host: api.twitter.com\r\n1 > User-Agent: Apache-HttpClient/4.5.3 (Java/1.8.0_131)\r\ngrant_type=client_credentials\r\n\r\nHowever when I Cucumber.runFeature(...) on the SimpleTweetQuery.feature I get this result:\r\n\r\n1 > GET https://api.twitter.com/1.1/search/tweets.json?q=%40IKEAUSA\r\n1 > Accept-Encoding: gzip,deflate\r\n1 > Connection: Keep-Alive\r\n1 > Host: api.twitter.com\r\n1 > User-Agent: Apache-HttpClient/4.5.3 (Java/1.8.0_131)\r\n\r\n*notice the lack of headers despite them being specified in the feature. Also, I find it weird that the default header Accept-Encoding (gzip, deflate) is specified despite the fact that it should be overridden in the feature to only gzip.\r\n\r\n**other behavior I find strange: When I change the SimpleTweetQuery to method post (of course this wont work) the header Authorization and header Accept-Encoding come out just fine in the result.\r\n\r\nSo I'm left wondering is this a bug? Or am I just too novice to realize the mistake that I've made?\r\n\r\nThanks!\r\n\r\nFor reference this is the Twitter Documentation: https://developer.twitter.com/en/docs/basics/authentication/overview/application-only\r\n\r\n[TwitterRunner.java.txt](https://github.com/intuit/karate/files/1672000/TwitterRunner.java.txt)\r\n[SimpleTweetQuery.feature.txt](https://github.com/intuit/karate/files/1671966/SimpleTweetQuery.feature.txt)\r\n[GenerateBearerToken.feature.txt](https://github.com/intuit/karate/files/1671967/GenerateBearerToken.feature.txt)", "url": "https://github.com/intuit/karate/issues/300", "user": "agebhardtsbauer", "labels": ["bug", "fixed"], "created": "2018-01-29 02:47:57", "closed": "2018-02-19 05:04:11", "commits": {"75b47e9bb6ab8fd4a3d3c31442baee70bfd47875": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 21.00027777777778, "commitsDetails": [{"commitHash": "75b47e9bb6ab8fd4a3d3c31442baee70bfd47875", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["2e578380eae3dec2f01fa298c57e2874828c6735"], "nameRev": "75b47e9bb6ab8fd4a3d3c31442baee70bfd47875 tags/v0.7.0~44", "commitMessage": "fixed edge case where headers lost for get form fields ref #300\n", "commitDateTime": "2018-01-29 11:18:20", "authoredDateTime": "2018-01-29 11:18:20", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/http/HttpClient.java", "insertions": 19, "deletions": 12, "lines": 31}, {"filePath": "karate-demo/src/test/java/demo/headers/HeadersFormGetRunner.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "karate-demo/src/test/java/demo/headers/headers-form-get.feature", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "karate-netty/README.md", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpClient.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpClient.buildRequestInternal(com.intuit.karate.http.HttpRequestBuilder,com.intuit.karate.ScriptContext)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "HeadersFormGetRunner.java", "spoonMethods": [{"spoonMethodName": "demo.headers.HeadersFormGetRunner", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["75b47e9bb6ab8fd4a3d3c31442baee70bfd47875"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 19, "deletions": 12, "lines": 31, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 4, "MOV": 3, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/http"], "changesInPackagesSPOON": ["demo.headers.HeadersFormGetRunner", "com.intuit.karate.http.HttpClient.buildRequestInternal(com.intuit.karate.http.HttpRequestBuilder,com.intuit.karate.ScriptContext)"]}, {"title": "Cannot send a request with an empty Content-Type header", "body": "When sending a request with an empty Content-Type in the header request, i.e. Content-Type='', an exception is thrown saying \"MIME type cannot be empty\".", "url": "https://github.com/intuit/karate/issues/298", "user": "AmirAmido", "labels": ["bug", "fixed"], "created": "2018-01-25 11:37:20", "closed": "2018-02-19 05:02:00", "commits": {"b33460c2dad838072e437ff36be0547f3ac6d143": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 24.00027777777778, "commitsDetails": [{"commitHash": "b33460c2dad838072e437ff36be0547f3ac6d143", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["2dd50a48fc8805b73d9e5ef7edaf3b4c89a34004"], "nameRev": "b33460c2dad838072e437ff36be0547f3ac6d143 tags/v0.7.0~53", "commitMessage": "support for arbitrary content-type header but only apache ref #298\n", "commitDateTime": "2018-01-25 17:50:26", "authoredDateTime": "2018-01-25 17:50:26", "commitGitStats": [{"filePath": "karate-apache/src/main/java/com/intuit/karate/http/apache/ApacheHttpClient.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "karate-apache/src/main/java/com/intuit/karate/http/apache/ApacheHttpUtils.java", "insertions": 12, "deletions": 6, "lines": 18}, {"filePath": "karate-core/src/main/java/com/intuit/karate/FileUtils.java", "insertions": 70, "deletions": 60, "lines": 130}, {"filePath": "karate-core/src/main/java/com/intuit/karate/StepDefs.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "karate-demo/src/test/java/demo/headers/ContentTypeRunner.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "karate-demo/src/test/java/demo/{search => headers}/NullHeaderRunner.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "karate-demo/src/test/java/demo/{search/content-type-charset.feature => headers/content-type.feature}", "insertions": 14, "deletions": 4, "lines": 18}, {"filePath": "karate-demo/src/test/java/demo/{search => headers}/null-header.feature", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "karate-demo/src/test/java/demo/search/ContentTypeCharsetRunner.java", "insertions": 0, "deletions": 13, "lines": 13}, {"filePath": "karate-jersey/src/test/java/demo/JerseyHttpClientTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-jersey/src/test/java/ssl/TestService.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "karate-jersey/src/test/java/ssl/ssl-keystore.feature", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "karate-jersey/src/test/java/ssl/ssl-truststore.feature", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "karate-mock-servlet/src/test/java/demo/MockSpringMvcServletTest.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ApacheHttpClient.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpClient.getEntity(java.lang.String,java.lang.String)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpClient.getEntity(java.io.InputStream,java.lang.String)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "ApacheHttpUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpUtils.createContentType(java.lang.String)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(java.util.List,java.lang.String)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(com.intuit.karate.http.MultiValuedMap,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "FileUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.FileUtils.copy(java.io.File,java.io.File)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StepDefs.java", "spoonMethods": []}, {"spoonFilePath": "ContentTypeRunner.java", "spoonMethods": [{"spoonMethodName": "demo.headers.ContentTypeRunner", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NullHeaderRunner.java", "spoonMethods": [{"spoonMethodName": "demo.search.NullHeaderRunner", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ContentTypeCharsetRunner.java", "spoonMethods": [{"spoonMethodName": "demo.search.ContentTypeCharsetRunner", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "JerseyHttpClientTest.java", "spoonMethods": [{"spoonMethodName": "demo.JerseyHttpClientTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestService.java", "spoonMethods": [{"spoonMethodName": "ssl.TestService.TestController.test()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "ssl.TestService.TestController.get()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockSpringMvcServletTest.java", "spoonMethods": [{"spoonMethodName": "demo.MockSpringMvcServletTest.testSpringBootDemo()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b33460c2dad838072e437ff36be0547f3ac6d143"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 87, "deletions": 70, "lines": 157, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 20, "UPD": 4, "INS": 6, "MOV": 6, "DEL": 4, "spoonFilesChanged": 6, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-apache/src/main/java/com/intuit/karate/http/apache", "karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.http.apache.ApacheHttpClient.getEntity(java.lang.String,java.lang.String)", "com.intuit.karate.FileUtils.copy(java.io.File,java.io.File)", "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(java.util.List,java.lang.String)", "com.intuit.karate.http.apache.ApacheHttpClient.getEntity(java.io.InputStream,java.lang.String)", "com.intuit.karate.http.apache.ApacheHttpUtils.createContentType(java.lang.String)", "demo.search.NullHeaderRunner", "demo.headers.ContentTypeRunner", "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(com.intuit.karate.http.MultiValuedMap,java.lang.String)", "demo.search.ContentTypeCharsetRunner"]}, {"title": "NPE when first Scenario is Outline in 0.6.2", "body": "If the first Scenario when running the entire test suite is a \"Scenario Outline\", I get a NPE.  If I put a dummy scenario before the outline (or if another feature file runs first), it works fine.  This is only affecting 0.6.2 (earlier versions, including 0.6.1, work fine).\r\n\r\nDoes not work:\r\n\r\n```\r\nFeature: authenticate failure\r\n\r\n  Background:\r\n\r\n    * url urlBase\r\n\r\n  Scenario Outline: authenticate invalid user with missing or wrong credentials\r\n\r\n    Given path 'auth'\r\n    And request { username: '<username>', password: '<password>' }\r\n    When method post\r\n    Then status 200\r\n    And match response contains { user: '#null', token: '#null', error: '#string' }\r\n\r\n    Examples:\r\n\r\n    | username            | password            |\r\n    | #(username)         | #(password)         | \r\n    | #(username)         | test-wrong-password |\r\n    | test-wrong-username | test-wrong-password |\r\n    | #(username)         | #(password)         | \r\n    |                     |                     |\r\n\r\n```\r\n\r\nI get failed tests and this NPE:\r\n\r\n```\r\njava.lang.NullPointerException\r\n\tat com.intuit.karate.junit4.Karate$1.step(Karate.java:84)\r\n\tat cucumber.runtime.model.StepContainer.format(StepContainer.java:33)\r\n\tat cucumber.runtime.model.CucumberScenarioOutline.formatOutlineScenario(CucumberScenarioOutline.java:52)\r\n\tat cucumber.runtime.junit.ScenarioOutlineRunner.run(ScenarioOutlineRunner.java:52)\r\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)\r\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\r\n\tat com.intuit.karate.junit4.Karate.runChild(Karate.java:118)\r\n\tat com.intuit.karate.junit4.Karate.runChild(Karate.java:33)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat com.intuit.karate.junit4.Karate.run(Karate.java:127)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\n```\r\n\r\nHowever, when I force a simple feature to run before the Outline, it works fine:\r\n\r\n```\r\nFeature: authenticate failure\r\n\r\n  Background:\r\n\r\n    * url urlBase\r\n\r\n  Scenario: dummy scenario before outline\r\n    Given path 'missing'\r\n    When method get\r\n    Then status 404\r\n\r\n  Scenario Outline: authenticate invalid user with missing or wrong credentials\r\n\r\n    Given path 'auth'\r\n    And request { username: '<username>', password: '<password>' }\r\n    When method post\r\n    Then status 200\r\n    And match response contains { user: '#null', token: '#null', error: '#string' }\r\n\r\n    Examples:\r\n\r\n    | username            | password            |\r\n    | #(username)         | #(password)         | \r\n    | #(username)         | test-wrong-password |\r\n    | test-wrong-username | test-wrong-password |\r\n    | #(username)         | #(password)         | \r\n    |                     |                     |\r\n\r\n```\r\n\r\nI am using IntelliJ with a JUnit run configuration.", "url": "https://github.com/intuit/karate/issues/282", "user": "petercuffari", "labels": ["bug", "fixed"], "created": "2018-01-12 16:53:43", "closed": "2018-02-19 05:02:22", "commits": {"a080ccb2a05ff6ca1f50d87c281f19c3cd3df8fc": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 37.000277777777775, "commitsDetails": [{"commitHash": "a080ccb2a05ff6ca1f50d87c281f19c3cd3df8fc", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["9dce63acd43505ef4fae3257071da8d16825635f"], "nameRev": "a080ccb2a05ff6ca1f50d87c281f19c3cd3df8fc tags/v0.7.0~94", "commitMessage": "double checking that feature with scenario outline as first element\nworks ok ref #282\n", "commitDateTime": "2018-01-12 23:45:29", "authoredDateTime": "2018-01-12 23:45:29", "commitGitStats": [{"filePath": "README.md", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "karate-demo/src/test/java/demo/params/params.feature", "insertions": 16, "deletions": 0, "lines": 16}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a080ccb2a05ff6ca1f50d87c281f19c3cd3df8fc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Misleading error message for `!contains` option", "body": "When step is \r\n```\r\nAnd match response !contains { grants : '#array', roles : '#array', firms : '#array' }.\r\n```\r\n\r\nand response includes grants/role/firms array then test fails with message below\r\n\r\n```\r\ncom.intuit.karate.exception.KarateException: path: $.grants, actual: [1,2], expected: '#array', \r\nreason: actual value contains expected\r\n```\r\n\r\nThis is misleading. Should be something like \r\n```\r\ncom.intuit.karate.exception.KarateException: path: $.grants, actual: [1,2], unexpected: '#array',\r\nreason: actual value contains unexpected\r\n```\r\n", "url": "https://github.com/intuit/karate/issues/269", "user": "avpavlov", "labels": ["bug", "fixed"], "created": "2017-12-21 19:06:39", "closed": "2018-02-19 05:02:58", "commits": {"153aec05ab7926386a2ac0a1831a2a2d0910c48c": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}, "9b85eb676fb1d672131f581c078fdf70d0fc3c9c": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 59.000277777777775, "commitsDetails": [{"commitHash": "153aec05ab7926386a2ac0a1831a2a2d0910c48c", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["9062fc5a2fef46447c15e7e8c2ac0230cb4ec28a"], "nameRev": "153aec05ab7926386a2ac0a1831a2a2d0910c48c tags/v0.7.0~174", "commitMessage": "negation match failure error message improved ref #269\n", "commitDateTime": "2017-12-22 08:41:53", "authoredDateTime": "2017-12-22 08:41:53", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 56, "deletions": 42, "lines": 98}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.matchFailed(java.lang.String,java.lang.Object,java.lang.Object,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Script.isNegation(com.intuit.karate.MatchType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Script.matchFailed(com.intuit.karate.MatchType,java.lang.String,java.lang.Object,java.lang.Object,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Script.matchStringOrPattern(char,java.lang.String,com.intuit.karate.MatchType,java.lang.Object,java.lang.Object,com.intuit.karate.ScriptValue,java.lang.String,com.intuit.karate.ScriptContext)", "TOT": 13, "UPD": 0, "INS": 13, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Script.matchPrimitive(com.intuit.karate.MatchType,java.lang.String,java.lang.Object,java.lang.Object)", "TOT": 15, "UPD": 0, "INS": 7, "MOV": 8, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Script.matchJsonOrObject(com.intuit.karate.MatchType,com.intuit.karate.ScriptValue,java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Script.matchNestedObject(char,java.lang.String,com.intuit.karate.MatchType,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,com.intuit.karate.ScriptContext)", "TOT": 28, "UPD": 0, "INS": 17, "MOV": 11, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "9b85eb676fb1d672131f581c078fdf70d0fc3c9c", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["780ae22fa6d38e358ad7e65cd9270a31a4c12662"], "nameRev": "9b85eb676fb1d672131f581c078fdf70d0fc3c9c tags/v0.7.0~170", "commitMessage": "fix missed in prev commit ref #269\n", "commitDateTime": "2017-12-22 19:20:17", "authoredDateTime": "2017-12-22 19:20:17", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.matchNestedObject(char,java.lang.String,com.intuit.karate.MatchType,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,com.intuit.karate.ScriptContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["153aec05ab7926386a2ac0a1831a2a2d0910c48c", "9b85eb676fb1d672131f581c078fdf70d0fc3c9c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 57, "deletions": 43, "lines": 100, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 65, "UPD": 2, "INS": 44, "MOV": 19, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.Script.matchNestedObject(char,java.lang.String,com.intuit.karate.MatchType,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,com.intuit.karate.ScriptContext)", "com.intuit.karate.Script.matchStringOrPattern(char,java.lang.String,com.intuit.karate.MatchType,java.lang.Object,java.lang.Object,com.intuit.karate.ScriptValue,java.lang.String,com.intuit.karate.ScriptContext)", "com.intuit.karate.Script.matchPrimitive(com.intuit.karate.MatchType,java.lang.String,java.lang.Object,java.lang.Object)", "com.intuit.karate.Script.isNegation(com.intuit.karate.MatchType)", "com.intuit.karate.Script.matchFailed(java.lang.String,java.lang.Object,java.lang.Object,java.lang.String)", "com.intuit.karate.Script.matchJsonOrObject(com.intuit.karate.MatchType,com.intuit.karate.ScriptValue,java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)", "com.intuit.karate.Script.matchFailed(com.intuit.karate.MatchType,java.lang.String,java.lang.Object,java.lang.Object,java.lang.String)"]}, {"title": "Invalid response from karate.read inside a js function", "body": "**Java8 and karate 0.6.1 & 0.6.2**\r\n\r\nGiven the test.json file content\r\n\r\n`{ \"foo\":\"bar\"}`\r\n\r\nWhen calling the following function from a feature file\r\n\r\n```\r\nfunction() {\r\n    var test = karate.read('classpath:api/test.json');\r\n    karate.log(test);\r\n    karate.log(JSON.stringify(test));\r\n}\r\n```\r\n\r\nthen the value of test is undefined\r\n\r\nbut if called in a feature like:\r\n\r\n```\r\n* def test = call('classpath:api/test.json')\r\n* print test\r\n```\r\n\r\nthen the value of test is the json structure\r\n\r\nI have tried many combinations but it never reads the json correctly", "url": "https://github.com/intuit/karate/issues/267", "user": "jbadeau", "labels": ["bug", "fixed"], "created": "2017-12-20 16:50:02", "closed": "2018-02-19 05:03:06", "commits": {"26bd0cbdcd02417d35fbe5b17c5e55290ec97403": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 60.000277777777775, "commitsDetails": [{"commitHash": "26bd0cbdcd02417d35fbe5b17c5e55290ec97403", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["8b1cb0fc10720c29e7b65d7579dbf31ff1572265"], "nameRev": "26bd0cbdcd02417d35fbe5b17c5e55290ec97403 tags/v0.7.0~183", "commitMessage": "json read result within js will be map-like - ref #267\n", "commitDateTime": "2017-12-20 23:57:56", "authoredDateTime": "2017-12-20 23:57:56", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/ScriptBridge.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "karate-core/src/test/java/com/intuit/karate/ScriptTest.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "karate-core/src/test/java/test.json", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ScriptBridge.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptBridge.read(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ScriptTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptTest.testJsonReturnedFromJsRead()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testJsonFromJsRead()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["26bd0cbdcd02417d35fbe5b17c5e55290ec97403"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.ScriptBridge.read(java.lang.String)"]}, {"title": "XML with DTD still does not parse correctly", "body": "edited: refer #244 \r\n\r\n```\r\n* def myres =\r\n    \"\"\"\r\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE USER SYSTEM \"http://172.20.17.74:5000/login/dtd\">\r\n<gpOBJECT>\r\n<gpPARAM name=\"coconuts\">666</gpPARAM>\r\n\r\n</gpOBJECT>\r\n    \"\"\"\r\n  * string req = Java.type('com.nhsd.utils.StringUtil').getRes(myres)\r\n  * print req\r\n```\r\nI have the above xml response, and when I just pass it to a java class, just to return the response, it comes out as\r\n[print] {USER=null}", "url": "https://github.com/intuit/karate/issues/260", "user": "AmirGhahrai", "labels": ["bug", "fixed"], "created": "2017-12-08 11:04:36", "closed": "2018-02-19 05:03:29", "commits": {"1e090ac18b5c430a53533d16fbacffc41a267a82": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 72.00027777777778, "commitsDetails": [{"commitHash": "1e090ac18b5c430a53533d16fbacffc41a267a82", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["de2498caa253e49b6ae43da715eb5eb3fea9f8de"], "nameRev": "1e090ac18b5c430a53533d16fbacffc41a267a82 tags/v0.7.0~211", "commitMessage": "xml with dtd now parses correctly ref #260\n", "commitDateTime": "2017-12-08 20:17:34", "authoredDateTime": "2017-12-08 20:17:34", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/XmlUtils.java", "insertions": 22, "deletions": 8, "lines": 30}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/xml/xml.feature", "insertions": 0, "deletions": 3, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "XmlUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.XmlUtils.toXmlDoc(java.lang.String)", "TOT": 9, "UPD": 0, "INS": 1, "MOV": 7, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.XmlUtils.DtdEntityResolver", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.XmlUtils.DtdEntityResolver.resolveEntity(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.XmlUtils.toXmlDoc(java.lang.String).1.resolveEntity(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1e090ac18b5c430a53533d16fbacffc41a267a82"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 22, "deletions": 8, "lines": 30, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 12, "UPD": 0, "INS": 3, "MOV": 8, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.XmlUtils.DtdEntityResolver", "com.intuit.karate.XmlUtils.DtdEntityResolver.resolveEntity(java.lang.String,java.lang.String)", "com.intuit.karate.XmlUtils.toXmlDoc(java.lang.String)", "com.intuit.karate.XmlUtils.toXmlDoc(java.lang.String).1.resolveEntity(java.lang.String,java.lang.String)"]}, {"title": "Malformed JSON response stops test with error", "body": "Reported on StackOverflow: https://stackoverflow.com/q/47699539/143475\r\n\r\nIf the server returns this for example: `{ \"foo\": }`\r\n\r\n```\r\nTests run: 12, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 5.224 sec <<< FAILURE!\r\nWhen method post(Scenario: malformed json response)  Time elapsed: 0.003 sec  <<< ERROR!\r\ncom.jayway.jsonpath.InvalidJsonException: net.minidev.json.parser.ParseException: Unexpected character (}) at position 9.\r\n\tat com.jayway.jsonpath.spi.json.JsonSmartJsonProvider.parse(JsonSmartJsonProvider.java:64)\r\n\tat com.jayway.jsonpath.internal.JsonContext.parse(JsonContext.java:82)\r\n\tat com.jayway.jsonpath.JsonPath.parse(JsonPath.java:596)\r\n\tat com.intuit.karate.JsonUtils.toJsonDoc(JsonUtils.java:88)\r\n\tat com.intuit.karate.StepDefs.method(StepDefs.java:366)\r\n\tat \u273d.When method post(demo/error/error.feature:17)\r\nCaused by: net.minidev.json.parser.ParseException: Unexpected character (}) at position 9.\r\n\tat net.minidev.json.parser.JSONParserBase.readMain(JSONParserBase.java:394)\r\n```\r\n\r\nKarate should be resilient !  This happens for XML but seems to be missed for JSON.", "url": "https://github.com/intuit/karate/issues/259", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2017-12-08 05:32:26", "closed": "2018-02-19 05:03:38", "commits": {"ce8b448653967d6b5a819617d7a19bb5ccfa32f3": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 72.00027777777778, "commitsDetails": [{"commitHash": "ce8b448653967d6b5a819617d7a19bb5ccfa32f3", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["b43b27a41e01f40c98dffc5cb44e090a51b791a5"], "nameRev": "ce8b448653967d6b5a819617d7a19bb5ccfa32f3 tags/v0.7.0~216", "commitMessage": "json parse failures graceful fall-back to string which solves #259\n", "commitDateTime": "2017-12-08 11:05:18", "authoredDateTime": "2017-12-08 11:05:18", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/StepDefs.java", "insertions": 8, "deletions": 4, "lines": 12}, {"filePath": "karate-demo/src/main/java/com/intuit/karate/demo/config/WebSecurityConfig.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "karate-demo/src/main/java/com/intuit/karate/demo/controller/EchoController.java", "insertions": 44, "deletions": 0, "lines": 44}, {"filePath": "karate-demo/src/test/java/demo/error/error.feature", "insertions": 9, "deletions": 1, "lines": 10}, {"filePath": "karate-mock-servlet/src/test/java/demo/MockDemoConfig.java", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "StepDefs.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.StepDefs.method(java.lang.String)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "WebSecurityConfig.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.demo.config.WebSecurityConfig.configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EchoController.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.demo.controller.EchoController", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockDemoConfig.java", "spoonMethods": [{"spoonMethodName": "demo.MockDemoConfig.echoController()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ce8b448653967d6b5a819617d7a19bb5ccfa32f3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 54, "deletions": 5, "lines": 59, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 4, "MOV": 3, "DEL": 0, "spoonFilesChanged": 4, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-demo/src/main/java/com/intuit/karate/demo/config", "karate-demo/src/main/java/com/intuit/karate/demo/controller", "karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.demo.config.WebSecurityConfig.configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)", "com.intuit.karate.demo.controller.EchoController", "com.intuit.karate.StepDefs.method(java.lang.String)", "demo.MockDemoConfig.echoController()"]}, {"title": "non-json non-string fuzzy match does not work", "body": "to replicate:\r\n\r\n```\r\n* def foo = 1\r\n* match foo == '#number'\r\n```\r\n\r\nerror:\r\n```\r\n14:43:04.416 [main] ERROR com.intuit.karate - assertion failed: path: $, actual: 1, expected: '#number', reason: not equal (Integer : String)\r\n```", "url": "https://github.com/intuit/karate/issues/256", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2017-12-07 09:05:52", "closed": "2018-02-19 05:03:56", "commits": {"253bade52078e320bd8c7d95690ee812a14ea2c1": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 73.00027777777778, "commitsDetails": [{"commitHash": "253bade52078e320bd8c7d95690ee812a14ea2c1", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["d6c31e738f95aca7ec16d6d4121cabd7e642c570"], "nameRev": "253bade52078e320bd8c7d95690ee812a14ea2c1 tags/v0.7.0~222", "commitMessage": "non-json non-string fuzzy match which fixes #256\n", "commitDateTime": "2017-12-07 15:32:56", "authoredDateTime": "2017-12-07 15:32:56", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/syntax/syntax.feature", "insertions": 13, "deletions": 0, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.matchJsonOrObject(com.intuit.karate.MatchType,com.intuit.karate.ScriptValue,java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["253bade52078e320bd8c7d95690ee812a14ea2c1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 2, "lines": 9, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.Script.matchJsonOrObject(com.intuit.karate.MatchType,com.intuit.karate.ScriptValue,java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)"]}, {"title": "a custom version string should be supported in the Content-Type header", "body": "as of now we do support charset but if we want to do something like this, at least the apache client doesn't like it:\r\n\r\n`\"Content-Type\" : \"application/json,charset:UTF-8,version:1.2.0\"`", "url": "https://github.com/intuit/karate/issues/255", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2017-12-07 09:02:34", "closed": "2018-02-19 05:04:18", "commits": {"b7c2021a27658cd1961aeb414099b55b89cc0c35": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 73.00027777777778, "commitsDetails": [{"commitHash": "b7c2021a27658cd1961aeb414099b55b89cc0c35", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["b81ded6830df9b0bb626d42f33e2dc8ec6097118"], "nameRev": "b7c2021a27658cd1961aeb414099b55b89cc0c35 tags/v0.7.0~224", "commitMessage": "content type parsing for apache which fixes #255\n", "commitDateTime": "2017-12-07 15:13:09", "authoredDateTime": "2017-12-07 15:13:09", "commitGitStats": [{"filePath": "karate-apache/src/main/java/com/intuit/karate/http/apache/ApacheHttpUtils.java", "insertions": 1, "deletions": 6, "lines": 7}, {"filePath": "karate-core/src/main/java/com/intuit/karate/http/HttpUtils.java", "insertions": 2, "deletions": 13, "lines": 15}, {"filePath": "karate-demo/src/test/java/demo/search/content-type-charset.feature", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ApacheHttpUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpUtils.createContentType(java.lang.String)", "TOT": 8, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 4}]}, {"spoonFilePath": "HttpUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpUtils.splitCharsetIfPresent(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.http.HttpUtils", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b7c2021a27658cd1961aeb414099b55b89cc0c35"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 19, "lines": 22, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 10, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 5, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/http", "karate-apache/src/main/java/com/intuit/karate/http/apache"], "changesInPackagesSPOON": ["com.intuit.karate.http.HttpUtils", "com.intuit.karate.http.HttpUtils.splitCharsetIfPresent(java.lang.String)", "com.intuit.karate.http.apache.ApacheHttpUtils.createContentType(java.lang.String)"]}, {"title": "Cannot Parse/Validate XML if there is a reference to DTD", "body": "I have an XML response which contains \r\n!DOCTYPE USER SYSTEM \"http://127.0.0.1:5000/login/dtd\"\r\n\r\n\r\n\r\nand when I try to parse the XML it complains about DTD not being available.\r\n\r\nKarate should be able to bypass the need for DTD to validate XML response.", "url": "https://github.com/intuit/karate/issues/244", "user": "AmirGhahrai", "labels": ["bug", "fixed"], "created": "2017-11-14 16:48:32", "closed": "2017-12-05 03:27:37", "commits": {"881aa71051a91e5be003942d3af63500b7a47928": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}, "56055c5b2f4125acbebd42651c31ba90ec30e82f": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 20.00027777777778, "commitsDetails": [{"commitHash": "881aa71051a91e5be003942d3af63500b7a47928", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["07fd7ade321505c701cdc1aebb15e977fe3fe026"], "nameRev": "881aa71051a91e5be003942d3af63500b7a47928 tags/v0.6.2~33", "commitMessage": "xml dtd validation disabling which fixes #244\n", "commitDateTime": "2017-11-14 22:24:29", "authoredDateTime": "2017-11-14 22:24:29", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/XmlUtils.java", "insertions": 14, "deletions": 1, "lines": 15}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/dev.feature", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/xml/xml.feature", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.evalXmlEmbeddedExpressions(org.w3c.dom.Node,com.intuit.karate.ScriptContext,boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "XmlUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.XmlUtils.toXmlDoc(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "56055c5b2f4125acbebd42651c31ba90ec30e82f", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["5cadd873653dce918c6d9d15b3d26546ed10cf96"], "nameRev": "56055c5b2f4125acbebd42651c31ba90ec30e82f tags/v0.7.0~228", "commitMessage": "additional test for xml with dtd workaround, refer #244\n", "commitDateTime": "2017-12-05 15:37:07", "authoredDateTime": "2017-12-05 15:37:07", "commitGitStats": [{"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/xml/xml.feature", "insertions": 14, "deletions": 1, "lines": 15}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["881aa71051a91e5be003942d3af63500b7a47928", "56055c5b2f4125acbebd42651c31ba90ec30e82f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 15, "deletions": 2, "lines": 17, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 3.0, "UPD": 0.0, "INS": 2.0, "MOV": 1.0, "DEL": 0.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.Script.evalXmlEmbeddedExpressions(org.w3c.dom.Node,com.intuit.karate.ScriptContext,boolean)", "com.intuit.karate.XmlUtils.toXmlDoc(java.lang.String)"]}, {"title": "built-in variables __arg and __loop not set if using shared-scope", "body": "as found by @virendrachaudhary06 in this comment: https://github.com/intuit/karate/issues/206#issuecomment-340235669\r\n", "url": "https://github.com/intuit/karate/issues/232", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2017-10-29 08:45:15", "closed": "2017-12-05 07:33:10", "commits": {"c71057805d7155ad7f6b64ec3f00165625f5c1f7": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 36.000277777777775, "commitsDetails": [{"commitHash": "c71057805d7155ad7f6b64ec3f00165625f5c1f7", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["5db984d24a0fd43ec249e37139f2d888cd244455"], "nameRev": "c71057805d7155ad7f6b64ec3f00165625f5c1f7 tags/v0.6.2~44", "commitMessage": "__arg and __loop now set for shared scope which fixes #232\n", "commitDateTime": "2017-10-29 03:50:06", "authoredDateTime": "2017-10-29 03:50:06", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/StepDefs.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "karate-core/src/test/java/com/intuit/karate/cucumber/called-shared.feature", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "karate-core/src/test/java/com/intuit/karate/cucumber/called-shared2.feature", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "karate-core/src/test/java/com/intuit/karate/cucumber/caller-shared.feature", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "StepDefs.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.StepDefs", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c71057805d7155ad7f6b64ec3f00165625f5c1f7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 1, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.StepDefs"]}, {"title": "Unable to get response for the services which use wsHttpBinding", "body": "Hi ,\r\nUnable to get the response for the services which use wsHttpBinding.The services which use basicHttpBinding are working fine.\r\n\r\nThe content type for basicHttpbinding services is 'text/xml' but for wsHttpbinding services is 'application/soap+xml'.\r\n\r\n@ptrthomas To help you with what exactly the service looks like and the issue is all about ,please go thru the link below\r\nhttps://github.com/savonrb/savon/issues/391\r\n\r\nPosted the issue on StackOverFlow.\r\nhere is the link\r\nhttps://stackoverflow.com/questions/46951004/wshttpbinding-issue-with-karate-framework\r\n\r\n", "url": "https://github.com/intuit/karate/issues/230", "user": "raveendaranugu", "labels": ["bug"], "created": "2017-10-26 13:19:13", "closed": "2017-10-27 07:57:37", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Cookie Rejected - violates RFC 2109: host minus domain may not contain any dots", "body": "We are getting error Cookie Rejected - violates RFC 2109: host minus domain may not contain any dots. Here are more details:\r\n\r\nQuestion posted on [stackoverflow](https://stackoverflow.com/questions/46896527/karate-cookie-rejected-when-it-contains-special-characters/46916395#46916395): \r\n```\r\nScenario:                  \r\n        * configure ssl = true\r\n        Given url 'https://dvabc-qa.kdc.abc.com'\r\n        Given path 'api/dp/v1/apps/user/login'\r\n        And request {username: \"test@abc.com\", password: \"1234\"}\r\n        When method post\r\n        Then status 200\r\n        * print responseCookies                                          \r\n Request                                                                       \r\n1 > POST https://dvabc-qa.kdc.abc.com/api/dp/v1/apps/user/login\r\n1 > Accept-Encoding: gzip,deflate\r\n1 > Connection: Keep-Alive\r\n1 > Content-Length: 52\r\n1 > Content-Type: application/json\r\n1 > Host: dvabc-qa.abc.com\r\n1 > User-Agent: Apache-HttpClient/4.5.3 (Java/1.8.0_121)\r\n{\"username\":\"test@capone.com\",\"password\":\"test1234\"}                                  Response                                                                        14:48:30.700 [main] WARN  o.a.h.c.p.ResponseProcessCookies - Cookie rejected [X-AUTH-TOKEN=\"eyJ1c2VySW5mbyI6eyJ1c2VyRmlyc3ROYW1lIjoiVGVzdCIsInVzZXJMYXN0TmFtZSI6Ilh0ZXN0IiwidXNlcklEIjoiMTMxMTMx...\", version:1, domain:.abc.com, path:/, expiry:null] Domain attribute \".abc.com\" violates RFC 2109: host minus domain may not contain any dots\r\n14:48:30.704 [main] WARN  o.a.h.c.p.ResponseProcessCookies - Cookie rejected [SSOID=\"test@abc.com\", version:1, domain:.abc.com, path:/, expiry:null] Domain attribute \".abc.com\" violates RFC 2109: host minus domain may not contain any dots\r\n14:48:30.718 [main] DEBUG com.intuit.karate - \r\n1 < 200\r\n1 < CUSTOMER_APP_DATA_REF_KEY: $2a$10$qnUQ.paqXvMEJSmu6G/BhL7d08oOFnSAVmOBVQjec3Umlme\r\n1 < Cache-Control: no-cache, no-store, must-revalidate\r\n1 < Connection: keep-alive\r\n1 < Content-Type: application/json;charset=UTF-8\r\n1 < Date: Mon, 23 Oct 2017 18:48:32 GMT\r\n1 < Expires: Thu, 01 Jan 1970 00:00:00 GMT\r\n1 < Pragma: no-cache\r\n1 < SSOID: test@abc.com\r\n1 < Set-Cookie: [X-AUTH-TOKEN=\"eyJ1c2VySW5joiVGVzdCwTaG93IjpudWxsLCJoYXNEaWFtb25kRGVhbGVyc2hpcHMiOmZhbHNlLCJub25EaWFtb25kRGVhbGVyQWNjZXNzRW5hYmxlZCI6ZmFsc2UsIm1mYVRva2VuIjpmYWxzZSwicmVzcG9uZGVkVG9BbGxUYyInVzZXJuYW1lIjoidGVzdEBjYXBvbmUuY29tIn0=.HzxYTNQGXk8n0HePKBcuk1ND5h6P8z4xvfaoJ5qah94=\"; Version=1; Domain=.abc.com; Path=/; HttpOnly, CUSTOMER_APP_DATA_REF_KEY=$2a$10$qnUQ.paPnsI9gqXvMEJSmu6G/BhL7d08oOFnSAVmOBVQjec3Umlme; Domain=.abc.com; Path=/; HttpOnly, SSOID=\"test@abc.com\"; Version=1; Domain=.abc.com; Path=/; HttpOnly]\r\n1 < Vary: Accept-Encoding,User-Agent\r\n1 < X-AUTH-TOKEN: eyJ1c2VySW5mbyI6eyJ1c2VyRmlyc3ROYW1lIjoiVGVzdCIsInVzZXJMYXN0TmFtZSI6Ilh0ZXN0IiwidOiJ0ZXN0QGNhcG9uZS5jb20iLCJyYW5kb21UZXh0IjpudWxsLCJpbnRlcm5hbFVzZXJFbWFpbCI6bnVsbCwidXNlckRCJqb2JUaXRsZSI6IlNhbGVzIE1hbmFnZXIifSwiYWN0aXZlRGlyZWN0b3J5QWNjb3VudCI6ZmFsc2UsInRjVG9TaG93IjpudWxsLCJoYXNEaWFtb25kRGVhbGVyc2hpcHMiOmZhbHNlLCJub25EaWFtb25kRGVhbGVyQWNjZXNzRW5hYmxlZCI6ZmFsc2UsIm1mYVRva2VuIjpmYWxzZSwicmVzcG9uZGVkVG9BbGxUYyI6ZmFsc2UsInVzZXJuYW1lIjoidGVzdEBjYXBvbmUuY29tIn0=.HzxYTNk1ND5h6P8z4xvfaoJ5qah94=\r\n1 < X-Frame-Options: SAMEORIGIN                                      \r\n14:48:30.719 [main] DEBUG com.intuit.karate - response time in milliseconds: 583\r\n14:48:30.726 [main] INFO  com.intuit.karate - [print]\r\n```", "url": "https://github.com/intuit/karate/issues/229", "user": "saurabhxkapoor", "labels": ["bug", "fixed"], "created": "2017-10-24 17:46:56", "closed": "2017-12-05 07:33:22", "commits": {"5db984d24a0fd43ec249e37139f2d888cd244455": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 41.000277777777775, "commitsDetails": [{"commitHash": "5db984d24a0fd43ec249e37139f2d888cd244455", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["ccb985e217648ecd7610cdeff26c012b0f9f20d2"], "nameRev": "5db984d24a0fd43ec249e37139f2d888cd244455 tags/v0.6.2~45", "commitMessage": "more lenient cookie handling for apache which fixes #229\nalso cookie supports json on the rhs for advanced users\nadded tests, the demo spring boot now uses tomcat legacy cookie handling\n", "commitDateTime": "2017-10-28 11:15:25", "authoredDateTime": "2017-10-28 11:15:25", "commitGitStats": [{"filePath": "karate-apache/src/main/java/com/intuit/karate/http/apache/LenientCookieSpec.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "karate-core/src/main/java/com/intuit/karate/StepDefs.java", "insertions": 37, "deletions": 30, "lines": 67}, {"filePath": "karate-core/src/main/java/com/intuit/karate/http/Cookie.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-demo/src/main/java/com/intuit/karate/demo/config/TomcatConfig.java", "insertions": 61, "deletions": 0, "lines": 61}, {"filePath": "karate-demo/src/main/java/com/intuit/karate/demo/config/WebSecurityConfig.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-demo/src/main/java/com/intuit/karate/demo/controller/SearchController.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "karate-demo/src/test/java/demo/cookies/cookies.feature", "insertions": 14, "deletions": 2, "lines": 16}, {"filePath": "karate-demo/src/test/java/demo/greeting/GreetingStandaloneRunner.java", "insertions": 0, "deletions": 5, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LenientCookieSpec.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.apache.LenientCookieSpec.validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StepDefs.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.StepDefs.cookie(java.lang.String,java.lang.String)", "TOT": 9, "UPD": 2, "INS": 3, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "Cookie.java", "spoonMethods": []}, {"spoonFilePath": "TomcatConfig.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.demo.config.TomcatConfig", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WebSecurityConfig.java", "spoonMethods": []}, {"spoonFilePath": "SearchController.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.demo.controller.SearchController.echoCookies(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GreetingStandaloneRunner.java", "spoonMethods": [{"spoonMethodName": "demo.greeting.GreetingStandaloneRunner.testOnPort8080()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5db984d24a0fd43ec249e37139f2d888cd244455"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 110, "deletions": 32, "lines": 142, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 14, "UPD": 2, "INS": 7, "MOV": 3, "DEL": 2, "spoonFilesChanged": 5, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-demo/src/main/java/com/intuit/karate/demo/controller", "karate-demo/src/main/java/com/intuit/karate/demo/config", "karate-core/src/main/java/com/intuit/karate", "karate-core/src/main/java/com/intuit/karate/http", "karate-apache/src/main/java/com/intuit/karate/http/apache"], "changesInPackagesSPOON": ["com.intuit.karate.demo.controller.SearchController.echoCookies(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "com.intuit.karate.http.apache.LenientCookieSpec.validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)", "com.intuit.karate.demo.config.TomcatConfig", "com.intuit.karate.StepDefs.cookie(java.lang.String,java.lang.String)", "demo.greeting.GreetingStandaloneRunner.testOnPort8080()"]}, {"title": "JSON generated by Javascript code returns Arrays as Objects", "body": "I have a test that needs an array of objects to be generated for which I'm using some simple Javascript. Each object contains several members including one 'types' that's an array of strings however when this JSON is returned to Karate, the arrays are converted into objects where the keys are the array indices and the array values are the values. To best demonstrate this I've attached a minimal example.\r\n\r\n[jsonarrays.zip](https://github.com/intuit/karate/files/1398753/jsonarrays.zip)\r\n\r\nI have put a breakpoint on StepDefs::castToJson() and stepping through, it would seem that when Nashorn has executed the Javascript, it returns the JSON in a JSON type ScriptValue object but the 'types' member is represented by what looks like a map rather than an array...\r\n\r\n![breakpoint](https://user-images.githubusercontent.com/4127192/31776631-f9288d42-b4e3-11e7-8c0a-9a3befa3cd23.png)\r\n\r\nThis then leaves me with a list of objects that look like this:\r\n\r\n[\r\n  {\r\n    \"name\": \"ClientName1\",\r\n    \"location\": \"UK\",\r\n    \"types\": {\r\n      \"0\": \"guest\",\r\n      \"1\": \"user\"\r\n    }\r\n  },\r\n...\r\n]\r\n\r\nI don't seem able to use arrays in JSON if it's being created in an external Javascript function. Is this expected behaviour or am I doing something daft? ", "url": "https://github.com/intuit/karate/issues/225", "user": "duncwebb", "labels": ["bug", "help wanted", "on-hold"], "created": "2017-10-19 14:45:43", "closed": "2018-05-04 15:20:51", "commits": {"0a60b24f226a35b02e894bc9f889191913633748": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 197.00027777777777, "commitsDetails": [{"commitHash": "0a60b24f226a35b02e894bc9f889191913633748", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["b33081010ba317b1c1202c5f553725a85a2d54a5"], "nameRev": "0a60b24f226a35b02e894bc9f889191913633748 tags/v0.7.0~226", "commitMessage": "adding test to capture current erroneous jdk behavior, ref #225\nwhere nashorn seems to convert js arrays into json / map-like object un-necessarily\n", "commitDateTime": "2017-12-06 08:48:12", "authoredDateTime": "2017-12-06 08:48:12", "commitGitStats": [{"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0a60b24f226a35b02e894bc9f889191913633748"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "HTTP JSON response is not recognised as JSON if it begins with a newline", "body": "When the HTTP JSON response begins with a newline, it is not recognised as a valid JSON. Any subsequent matching of JSON fields using the response variable will not work as aspected.\r\n\r\nLooks like JSON Text can begin with a whitespace according to https://tools.ietf.org/html/rfc7159#section-2\r\n\r\nThis is a minor issue, but as Karate DSL works beautifully in handling whitespaces in gneeral, probably it should handle this scenario also.\r\n\r\nAnd thanks for the wonderful work being done on Karate!\r\n\r\n", "url": "https://github.com/intuit/karate/issues/223", "user": "createam", "labels": ["bug", "fixed"], "created": "2017-10-18 12:21:05", "closed": "2017-12-05 07:33:33", "commits": {"4dfd486a8cded45c687b7f89dd81e73131376891": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 47.000277777777775, "commitsDetails": [{"commitHash": "4dfd486a8cded45c687b7f89dd81e73131376891", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["c71057805d7155ad7f6b64ec3f00165625f5c1f7"], "nameRev": "4dfd486a8cded45c687b7f89dd81e73131376891 tags/v0.6.2~43", "commitMessage": "white space in response handled correctly which fixes #223\n", "commitDateTime": "2017-10-31 09:40:16", "authoredDateTime": "2017-10-31 09:40:16", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/StepDefs.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/wiremock/HelloWorldTest.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/wiremock/white-space.feature", "insertions": 14, "deletions": 0, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "StepDefs.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.StepDefs.method(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HelloWorldTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.wiremock.HelloWorldTest.before()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4dfd486a8cded45c687b7f89dd81e73131376891"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.StepDefs.method(java.lang.String)"]}, {"title": "Follow redirects on 302 on POST not working", "body": "I see that the framework now follows redirects with the following directive.\r\n\r\nconfigure followRedirects = true\r\n\r\nBut this works only for GET requests. Does not for POST. Apache http does not follow redirects on 302, as it is how the spec is defined. You need to add the following code to make redirections happen on a POST.\r\n\r\n        CloseableHttpClient client = clientBuilder.setRedirectStrategy(new LaxRedirectStrategy()).build();\r\n\r\n", "url": "https://github.com/intuit/karate/issues/216", "user": "shekarl", "labels": ["bug", "fixed"], "created": "2017-10-13 15:42:25", "closed": "2017-12-05 07:33:40", "commits": {"32744d01bb78c3bb24ad33efc4f424bc0cdcc9a8": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 52.000277777777775, "commitsDetails": [{"commitHash": "32744d01bb78c3bb24ad33efc4f424bc0cdcc9a8", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["02f7a9dde4a67549f28508bb5b22c9bf6894c4a3"], "nameRev": "32744d01bb78c3bb24ad33efc4f424bc0cdcc9a8 tags/v0.6.2~53", "commitMessage": "apache follows post redirects by default which fixes #216\n", "commitDateTime": "2017-10-13 22:28:23", "authoredDateTime": "2017-10-13 22:28:23", "commitGitStats": [{"filePath": "README.md", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "karate-apache/src/main/java/com/intuit/karate/http/apache/ApacheHttpClient.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "karate-demo/src/main/java/com/intuit/karate/demo/config/WebSecurityConfig.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-demo/src/main/java/com/intuit/karate/demo/controller/RedirectController.java", "insertions": 14, "deletions": 4, "lines": 18}, {"filePath": "karate-demo/src/test/java/demo/redirect/redirect.feature", "insertions": 45, "deletions": 12, "lines": 57}, {"filePath": "karate-mock-servlet/src/test/java/demo/MockSpringMvcServletTest.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ApacheHttpClient.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpClient.configure(com.intuit.karate.http.HttpConfig,com.intuit.karate.ScriptContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WebSecurityConfig.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.demo.config.WebSecurityConfig.configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedirectController.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.demo.controller.RedirectController.from(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.demo.controller.RedirectController.fromPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.demo.controller.RedirectController.fromGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockSpringMvcServletTest.java", "spoonMethods": [{"spoonMethodName": "demo.MockSpringMvcServletTest.testSpringBootDemo()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["32744d01bb78c3bb24ad33efc4f424bc0cdcc9a8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 18, "deletions": 5, "lines": 23, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 6, "UPD": 1, "INS": 4, "MOV": 1, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-apache/src/main/java/com/intuit/karate/http/apache", "karate-demo/src/main/java/com/intuit/karate/demo/controller", "karate-demo/src/main/java/com/intuit/karate/demo/config"], "changesInPackagesSPOON": ["com.intuit.karate.demo.controller.RedirectController.from(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "com.intuit.karate.demo.config.WebSecurityConfig.configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)", "com.intuit.karate.http.apache.ApacheHttpClient.configure(com.intuit.karate.http.HttpConfig,com.intuit.karate.ScriptContext)", "com.intuit.karate.demo.controller.RedirectController.fromGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "com.intuit.karate.demo.controller.RedirectController.fromPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"]}, {"title": "Parallel runner logger - java.lang.OutOfMemoryError: Java heap space", "body": "This  was just reported.\r\n\r\n```\r\njava.lang.OutOfMemoryError: Java heap space\r\n    at java.util.Arrays.copyOf(Arrays.java:3332)\r\n    at java.lang.AbstractStringBuilder.expandCapacity(AbstractStringBuilder.java:137)\r\n    at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:121)\r\n    at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:421)\r\n    at java.lang.StringBuilder.append(StringBuilder.java:136)\r\n    at ch.qos.logback.core.pattern.FormattingConverter.write(FormattingConverter.java:39)\r\n    at ch.qos.logback.core.pattern.PatternLayoutBase.writeLoopOnConverters(PatternLayoutBase.java:115)\r\n    at ch.qos.logback.classic.PatternLayout.doLayout(PatternLayout.java:141)\r\n    at ch.qos.logback.classic.PatternLayout.doLayout(PatternLayout.java:39)\r\n    at ch.qos.logback.core.encoder.LayoutWrappingEncoder.encode(LayoutWrappingEncoder.java:115)\r\n    at com.intuit.karate.cucumber.ReporterLogAppender.append(ReporterLogAppender.java:72)\r\n    at com.intuit.karate.cucumber.ReporterLogAppender.append(ReporterLogAppender.java:38)\r\n    at ch.qos.logback.core.AppenderBase.doAppend(AppenderBase.java:82)\r\n    at ch.qos.logback.core.spi.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:51)\r\n    at ch.qos.logback.classic.Logger.appendLoopOnAppenders(Logger.java:270)\r\n    at ch.qos.logback.classic.Logger.callAppenders(Logger.java:257)\r\n    at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:421)\r\n    at ch.qos.logback.classic.Logger.filterAndLog_0_Or3Plus(Logger.java:383)\r\n    at ch.qos.logback.classic.Logger.error(Logger.java:534)\r\n    at com.intuit.karate.cucumber.CucumberUtils.afterStep(CucumberUtils.java:152)\r\n    at com.intuit.karate.cucumber.CucumberUtils.runStep(CucumberUtils.java:126)\r\n    at com.intuit.karate.cucumber.CucumberUtils.runStep(CucumberUtils.java:106)\r\n    at com.intuit.karate.cucumber.CucumberUtils.call(CucumberUtils.java:96)\r\n    at com.intuit.karate.cucumber.CucumberUtils.call(CucumberUtils.java:88)\r\n```", "url": "https://github.com/intuit/karate/issues/198", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2017-09-28 00:49:42", "closed": "2017-10-08 16:49:04", "commits": {"ceed9e69cfa046df642aa339430343d071054769": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 10.000277777777777, "commitsDetails": [{"commitHash": "ceed9e69cfa046df642aa339430343d071054769", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["f800155a1ef29b37ab2fd5d0d413ecbad9fc642d"], "nameRev": "ceed9e69cfa046df642aa339430343d071054769 tags/v0.6.1~24", "commitMessage": "stop variable state dump which fixes #198\nthis was more trouble for people with complaints that log was getting hard to read even though in parallel runner\nand then finding that it blows up with oom in cases where called features have bloated variable state\nif people really need the variable state dump to show up in the parallel report, they have to set log level to TRACE\n", "commitDateTime": "2017-09-28 07:51:23", "authoredDateTime": "2017-09-28 07:51:23", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/cucumber/CucumberUtils.java", "insertions": 10, "deletions": 5, "lines": 15}, {"filePath": "karate-core/src/main/java/com/intuit/karate/cucumber/KarateStats.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CucumberUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.cucumber.CucumberUtils.afterStep(gherkin.formatter.Reporter,gherkin.formatter.model.Step,gherkin.formatter.model.Match,gherkin.formatter.model.Result,java.lang.Throwable,java.lang.String,com.intuit.karate.cucumber.KarateBackend,boolean)", "TOT": 14, "UPD": 6, "INS": 3, "MOV": 5, "DEL": 0}]}, {"spoonFilePath": "KarateStats.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.cucumber.KarateStats.printStats(int)", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ceed9e69cfa046df642aa339430343d071054769"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 5, "lines": 18, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 21, "UPD": 6, "INS": 5, "MOV": 9, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/cucumber"], "changesInPackagesSPOON": ["com.intuit.karate.cucumber.KarateStats.printStats(int)", "com.intuit.karate.cucumber.CucumberUtils.afterStep(gherkin.formatter.Reporter,gherkin.formatter.model.Step,gherkin.formatter.model.Match,gherkin.formatter.model.Result,java.lang.Throwable,java.lang.String,com.intuit.karate.cucumber.KarateBackend,boolean)"]}, {"title": "new ScriptEngineManager().getEngineByName(\"nashorn\") returned null when we tried on Linux", "body": "The problem and potential resolutions are discussed here:\r\nhttps://stackoverflow.com/questions/25332640/getenginebynamenashorn-returns-null\r\n\r\nOur Jenkins slave linux has a java version \"1.8.0_144\" and failed as the nashorn engine was returned in null in the Script.java. Since I don't have a access to the box, I can't try other versions of JDK. In the meanwhile, I am submitting the issue if passing a null for the classloader argument explicitly or directly creating NashornScriptEngineFactory can help the case of 1.8.0_144.     \r\n", "url": "https://github.com/intuit/karate/issues/196", "user": "baechul", "labels": ["bug", "fixed"], "created": "2017-09-27 21:09:31", "closed": "2017-10-05 02:24:28", "commits": {"f800155a1ef29b37ab2fd5d0d413ecbad9fc642d": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "f800155a1ef29b37ab2fd5d0d413ecbad9fc642d", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["cb2980a3810fc8feca9fece377161375193d880a"], "nameRev": "f800155a1ef29b37ab2fd5d0d413ecbad9fc642d tags/v0.6.1~25", "commitMessage": "cleanup of pull request #197 which fixes #196\n", "commitDateTime": "2017-09-28 06:39:03", "authoredDateTime": "2017-09-28 06:39:03", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 0, "deletions": 3, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "karate still not able to disable SSL validation in some cases", "body": "```\r\nCaused by: java.lang.RuntimeException: javax.net.ssl.SSLHandshakeException: java.security.cert.CertificateException: Certificates does not conform to algorithm constraints\r\n```", "url": "https://github.com/intuit/karate/issues/193", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2017-09-26 04:28:21", "closed": "2017-10-08 16:49:04", "commits": {"6cc0846661035fee9fcbb74221a36f6c62b17267": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "6cc0846661035fee9fcbb74221a36f6c62b17267", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["38917db67c2e33386b0a5ac26fe8d74f516307f2"], "nameRev": "6cc0846661035fee9fcbb74221a36f6c62b17267 tags/v0.6.1~30", "commitMessage": "ssl validation bypass which fixes #193\n", "commitDateTime": "2017-09-26 09:48:31", "authoredDateTime": "2017-09-26 09:48:31", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/http/HttpUtils.java", "insertions": 12, "deletions": 28, "lines": 40}, {"filePath": "karate-core/src/main/java/com/intuit/karate/http/LenientTrustManager.java", "insertions": 73, "deletions": 0, "lines": 73}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/dev.feature", "insertions": 15, "deletions": 1, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpUtils.getSslContext(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "LenientTrustManager.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.LenientTrustManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6cc0846661035fee9fcbb74221a36f6c62b17267"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 85, "deletions": 28, "lines": 113, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/http"], "changesInPackagesSPOON": ["com.intuit.karate.http.HttpUtils.getSslContext(java.lang.String)", "com.intuit.karate.http.LenientTrustManager"]}, {"title": "a scenario failure should not stop the whole feature if it has multiple scenarios", "body": "to investigate. karate's custom runner could be missing this", "url": "https://github.com/intuit/karate/issues/179", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2017-09-09 06:26:40", "closed": "2017-09-13 15:31:59", "commits": {"5ec5a308221bfe7d506695bf42cf7f7d679c489c": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "5ec5a308221bfe7d506695bf42cf7f7d679c489c", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["26e062c89b7f52df86c4480e036a2cc529d7ae54"], "nameRev": "5ec5a308221bfe7d506695bf42cf7f7d679c489c tags/v0.6.0~14", "commitMessage": "scenario failures don't abort whole feature which fixes #179\nalso there was a subtle bug on failures crashing the json formatter for that feature, which is hopefully fixed\n", "commitDateTime": "2017-09-10 01:16:09", "authoredDateTime": "2017-09-10 01:16:09", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/cucumber/KarateRuntime.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "karate-core/src/test/java/com/intuit/karate/cucumber/CucumberRunnerTest.java", "insertions": 7, "deletions": 4, "lines": 11}, {"filePath": "karate-core/src/test/java/com/intuit/karate/cucumber/multi-scenario-fail.feature", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "KarateRuntime.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.cucumber.KarateRuntime.disposeBackendWorlds(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.cucumber.KarateRuntime.runStep(java.lang.String,gherkin.formatter.model.Step,gherkin.formatter.Reporter,gherkin.I18n)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CucumberRunnerTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.cucumber.CucumberRunnerTest.testParallel()", "TOT": 12, "UPD": 4, "INS": 3, "MOV": 4, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5ec5a308221bfe7d506695bf42cf7f7d679c489c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 0, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/cucumber"], "changesInPackagesSPOON": ["com.intuit.karate.cucumber.KarateRuntime.runStep(java.lang.String,gherkin.formatter.model.Step,gherkin.formatter.Reporter,gherkin.I18n)", "com.intuit.karate.cucumber.KarateRuntime.disposeBackendWorlds(java.lang.String)"]}, {"title": "Thread leak in parallel execution", "body": "Hello guys!\r\n\r\nI am working with API monitoring / alarm server using Karate.\r\nIt's Spring server that has scheduled method with (CucumberRunner.parallel). And found stacked much of threads.\r\nI had look inside of parallel method, there's no Executors.shutDown();\r\n\r\nthanks!\r\n", "url": "https://github.com/intuit/karate/issues/175", "user": "dohykim", "labels": ["bug", "fixed"], "created": "2017-09-07 07:16:59", "closed": "2017-09-13 15:31:59", "commits": {"d6d19cec0dce3902a68aabaad744c2bb66b52680": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "d6d19cec0dce3902a68aabaad744c2bb66b52680", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["2cfba63fbce110d93b63eeaccd52f2b44e21c8b7"], "nameRev": "d6d19cec0dce3902a68aabaad744c2bb66b52680 tags/v0.6.0~23", "commitMessage": "parallel runner shuts down executor now which fixes #175\nalso tried to improve resiliency of parallel runner to any unforseen exceptions\nusing finally blocks, will also try to print stack-traces as help-fully as possible\n", "commitDateTime": "2017-09-07 18:22:58", "authoredDateTime": "2017-09-07 18:22:58", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/cucumber/CucumberRunner.java", "insertions": 30, "deletions": 29, "lines": 59}, {"filePath": "karate-core/src/main/java/com/intuit/karate/cucumber/KarateStats.java", "insertions": 13, "deletions": 0, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CucumberRunner.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.cucumber.CucumberRunner.parallel(java.lang.Class,int,java.lang.String)", "TOT": 13, "UPD": 0, "INS": 3, "MOV": 8, "DEL": 2}]}, {"spoonFilePath": "KarateStats.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.cucumber.KarateStats", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.cucumber.KarateStats.setFailureReason(java.lang.Throwable)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.cucumber.KarateStats.getFailureReason()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.cucumber.KarateStats.printStats(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d6d19cec0dce3902a68aabaad744c2bb66b52680"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 43, "deletions": 29, "lines": 72, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 17, "UPD": 0, "INS": 7, "MOV": 8, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/cucumber"], "changesInPackagesSPOON": ["com.intuit.karate.cucumber.KarateStats.printStats(int)", "com.intuit.karate.cucumber.CucumberRunner.parallel(java.lang.Class,int,java.lang.String)", "com.intuit.karate.cucumber.KarateStats.getFailureReason()", "com.intuit.karate.cucumber.KarateStats", "com.intuit.karate.cucumber.KarateStats.setFailureReason(java.lang.Throwable)"]}, {"title": "Multi value Params doesn't work with karate-apache dependency", "body": "When using the karate-apache dependency and setting a param with multiple values the request is formatted incorrectly.\r\n\r\nExpecting:\r\n/url?key=value1&key=value2\r\n\r\nActual:\r\n/url?key=value1,value2\r\n\r\nThe karate-jersey dependency correctly formats the request.", "url": "https://github.com/intuit/karate/issues/173", "user": "mattjohnson", "labels": ["bug", "fixed"], "created": "2017-09-06 02:33:28", "closed": "2017-09-13 15:35:19", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "Optional Syntax Interpreted as Literal String for Example Table Values", "body": "Attempting to set a JSON parameter as optional using syntax of `'##()'` for a value in an `Examples` table sends `\"##(value)\"` instead of sending `value`.\r\n```\r\n\"\"\"\r\n{\r\n  \"foo\" : {\r\n    \"timezone\" : \"America/Los_Angeles\",\r\n    \"isPaused\" : '##(<isPaused>)'\r\n  }\r\n}\r\n\"\"\"\r\n```\r\n```\r\n| isPaused |\r\n| true     |\r\n```\r\nAttempts to request:\r\n```\r\n {\r\n     \"timezone\": \"America\\/Los_Angeles\",\r\n      \"isPaused\": \"##(true)\"\r\n}\r\n```", "url": "https://github.com/intuit/karate/issues/163", "user": "NuttBoxer", "labels": ["bug", "fixed"], "created": "2017-08-31 20:42:45", "closed": "2017-09-13 15:31:59", "commits": {"181e03b6215fb85bf68d24e0608ee5619516f029": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "181e03b6215fb85bf68d24e0608ee5619516f029", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["c583852dd50a6f6564787459258617e775e2a9a0"], "nameRev": "181e03b6215fb85bf68d24e0608ee5619516f029 tags/v0.6.0~48", "commitMessage": "eval of optional macro for non-match\nfor non-match needs e.g. embedded expression evaluation, the ## prefix needs to set the value if not null which was not happening. to solve there are 2 paths through the code, one for match, which just removes the ## stuff and another for general eval / assignment situations that need to replace with a new value. replace was not happening properly, which fixes #163\n", "commitDateTime": "2017-09-01 21:16:46", "authoredDateTime": "2017-09-01 21:16:46", "commitGitStats": [{"filePath": "README.md", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "karate-core/src/main/java/com/intuit/karate/JsonUtils.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 30, "deletions": 26, "lines": 56}, {"filePath": "karate-core/src/main/java/com/intuit/karate/StepDefs.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "karate-core/src/test/java/com/intuit/karate/ScriptTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "karate-demo/src/test/java/demo/search/search.feature", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature", "insertions": 9, "deletions": 6, "lines": 15}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/type-conv.feature", "insertions": 19, "deletions": 1, "lines": 20}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/xml-and-xpath.feature", "insertions": 16, "deletions": 19, "lines": 35}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JsonUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.JsonUtils.setValueByPath(com.jayway.jsonpath.DocumentContext,java.lang.String,java.lang.Object,boolean)", "TOT": 5, "UPD": 1, "INS": 3, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.evaluateExpressions(java.util.List,com.intuit.karate.ScriptContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Script.evaluateAndSet(java.lang.String,java.lang.String,java.util.List,com.intuit.karate.ScriptContext)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.Script.matchJsonPath(com.intuit.karate.MatchType,com.intuit.karate.ScriptValue,java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Script.evalJsonEmbeddedExpressions(java.lang.String,java.lang.Object,com.intuit.karate.ScriptContext,com.jayway.jsonpath.DocumentContext)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 3}, {"spoonMethodName": "com.intuit.karate.Script.evalXmlEmbeddedExpressions(org.w3c.dom.Node,com.intuit.karate.ScriptContext)", "TOT": 12, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 6}, {"spoonMethodName": "com.intuit.karate.Script.evalForMatch(java.lang.String,com.intuit.karate.ScriptContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Script.eval(java.lang.String,com.intuit.karate.ScriptContext)", "TOT": 7, "UPD": 0, "INS": 4, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Script.eval(java.lang.String,com.intuit.karate.ScriptContext,boolean,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Script.evalJsonEmbeddedExpressions(com.jayway.jsonpath.DocumentContext,com.intuit.karate.ScriptContext,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Script.evalJsonEmbeddedExpressions(java.lang.String,java.lang.Object,com.intuit.karate.ScriptContext,com.jayway.jsonpath.DocumentContext,boolean)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Script.evalXmlEmbeddedExpressions(org.w3c.dom.Node,com.intuit.karate.ScriptContext,boolean)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Script.assign(com.intuit.karate.AssignType,java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.Script.setTable(java.lang.String,java.lang.String,java.util.List,com.intuit.karate.ScriptContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StepDefs.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.StepDefs.setByPathTable(java.lang.String,java.lang.String,cucumber.api.DataTable)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.StepDefs.table(java.lang.String,cucumber.api.DataTable)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScriptTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptTest.testEvalXmlEmbeddedExpressions()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testEvalXmlEmbeddedExpressionsInAttributes()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testEvalJsonEmbeddedExpressions()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testEvalEmbeddedExpressionsWithJsonPath()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["181e03b6215fb85bf68d24e0608ee5619516f029"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 40, "deletions": 29, "lines": 69, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 52, "UPD": 6, "INS": 23, "MOV": 13, "DEL": 10, "spoonFilesChanged": 3, "spoonMethodsChanged": 16}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.Script.evalJsonEmbeddedExpressions(com.jayway.jsonpath.DocumentContext,com.intuit.karate.ScriptContext,boolean)", "com.intuit.karate.Script.evalForMatch(java.lang.String,com.intuit.karate.ScriptContext)", "com.intuit.karate.Script.matchJsonPath(com.intuit.karate.MatchType,com.intuit.karate.ScriptValue,java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)", "com.intuit.karate.Script.evalJsonEmbeddedExpressions(java.lang.String,java.lang.Object,com.intuit.karate.ScriptContext,com.jayway.jsonpath.DocumentContext,boolean)", "com.intuit.karate.Script.evalXmlEmbeddedExpressions(org.w3c.dom.Node,com.intuit.karate.ScriptContext,boolean)", "com.intuit.karate.Script.evaluateAndSet(java.lang.String,java.lang.String,java.util.List,com.intuit.karate.ScriptContext)", "com.intuit.karate.StepDefs.setByPathTable(java.lang.String,java.lang.String,cucumber.api.DataTable)", "com.intuit.karate.StepDefs.table(java.lang.String,cucumber.api.DataTable)", "com.intuit.karate.Script.eval(java.lang.String,com.intuit.karate.ScriptContext,boolean,boolean)", "com.intuit.karate.Script.evalXmlEmbeddedExpressions(org.w3c.dom.Node,com.intuit.karate.ScriptContext)", "com.intuit.karate.JsonUtils.setValueByPath(com.jayway.jsonpath.DocumentContext,java.lang.String,java.lang.Object,boolean)", "com.intuit.karate.Script.setTable(java.lang.String,java.lang.String,java.util.List,com.intuit.karate.ScriptContext)", "com.intuit.karate.Script.evaluateExpressions(java.util.List,com.intuit.karate.ScriptContext)", "com.intuit.karate.Script.assign(com.intuit.karate.AssignType,java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)", "com.intuit.karate.Script.eval(java.lang.String,com.intuit.karate.ScriptContext)", "com.intuit.karate.Script.evalJsonEmbeddedExpressions(java.lang.String,java.lang.Object,com.intuit.karate.ScriptContext,com.jayway.jsonpath.DocumentContext)"]}, {"title": "Attempting to Send Multiple Optional Fields in JSON Request Body Throws Error", "body": "When attempting the following code in a `Scenario Outline` an exception is thrown.\r\n```\r\n\"\"\"\r\n{\r\n  \"foo\" : {\r\n    \"maxRedemptions\" : \"10\",\r\n    \"maxRedemptionsPerUser\" : '##(<maxRedemptionsPerUser>)',\r\n    \"productUrl\" : \"http://bar.net\",\r\n    \"timezone\" : \"America/Los_Angeles\",\r\n    \"isPaused\" : '##(<isPaused>)'\r\n  }\r\n}\r\n\"\"\"\r\n```\r\n[pool-1-thread-1] ERROR c.i.k.cucumber.KarateJunitFormatter - failed feature: tests.foo.create_reservation\r\njava.util.ConcurrentModificationException: null\r\n\tat java.util.LinkedHashMap$LinkedHashIterator.nextNode(LinkedHashMap.java:711)\r\n\tat java.util.LinkedHashMap$LinkedEntryIterator.next(LinkedHashMap.java:744)\r\n\tat java.util.LinkedHashMap$LinkedEntryIterator.next(LinkedHashMap.java:742)\r\n\tat com.intuit.karate.Script.evalJsonEmbeddedExpressions(Script.java:429)\r\n\tat com.intuit.karate.Script.evalJsonEmbeddedExpressions(Script.java:431)\r\n\tat com.intuit.karate.Script.evalJsonEmbeddedExpressions(Script.java:420)\r\n\tat com.intuit.karate.Script.eval(Script.java:250)\r\n\tat com.intuit.karate.Script.eval(Script.java:182)\r\n\tat com.intuit.karate.StepDefs.request(StepDefs.java:252)\r\n\tat com.intuit.karate.StepDefs.requestDocString(StepDefs.java:247)\r\n\tat \u273d.And request(tests/foo/create_reservation.feature:26)\r\n", "url": "https://github.com/intuit/karate/issues/155", "user": "NuttBoxer", "labels": ["bug", "fixed"], "created": "2017-08-28 22:31:44", "closed": "2017-09-13 15:35:55", "commits": {}, "ttf": 15.000277777777777, "commitsDetails": []}, {"title": "JSON beyond a certain size in response body is returned as a java.io.ByteArrayInputStream when run in Maven instead of a parsed object", "body": "When running tests in IntelliJ using the Cucumber-JVM plugin if a response is received:\r\n```\r\n15:18:26.489 [main] DEBUG com.intuit.karate - \r\n1 < 200\r\n1 < Api-Supported-Versions: 1, 2\r\n1 < Content-Length: 1699\r\n1 < Content-Type: application/json; charset=utf-8\r\n1 < Date: Mon, 21 Aug 2017 14:18:25 GMT\r\n1 < Server: Kestrel\r\n1 < X-Service-Response: \r\n[{\"time\":\"2017-08-21T14:18:26.2004578+00:00\",\"message\":\"Added some entries to the log\",\"id\":\"67c12a9a-7815-4c1d-92e8-c709e6549400\",\"level\":\"Debug\",...}, {...}]\r\n```\r\nThe response object contains a LinkedHashMap that has been created following the parsing of the data. For some tests if the data size in the response exceeds a certain size (around the 128K mark - I've yet to put together a test server to allow me work this out accurately) and the tests have been run via Maven, (e.g. ```mvn test -DargLine=-Dkarate.env=production \"-Dcucumber.options=--plugin junit:target/cucumber-junit.xml  --tags ~@ignore --plugin html:target/cucumber-html\"```), any steps that try to manipulate the response as JSON fail with an error:\r\n\r\n```\r\njava.lang.RuntimeException: cannot run jsonpath on type: [type: INPUT_STREAM, value: java.io.ByteArrayInputStream@79f227a9]\r\n```\r\n\r\nThere are no messages in the logs that I can see that parsing has failed due to lack of JVM memory but that's really one of the other differences I can think of between the two execution environments.", "url": "https://github.com/intuit/karate/issues/144", "user": "duncwebb", "labels": ["bug", "help wanted"], "created": "2017-08-21 14:31:58", "closed": "2017-09-28 03:38:53", "commits": {}, "ttf": 37.000277777777775, "commitsDetails": []}, {"title": "Unicode characters are not encoded as UTF-8 in request body JSON", "body": "Hi! I have a feature file that contains a scenario with a def step that assigns a block of JSON in triple quotes to a variable which is then subsequently used as the request body in a POST op. The source file encoding is UTF-8 and the JSON contains a \u00f6 character (codepoint 0x00F6) which in the source is correctly encoded as 0xC3 0xB6 (confirmed with a hex editor). The file (as recommended by the Unicode spec section 2.6) contains no Byte Order Mark. \r\n\r\n```\r\n  Scenario: Confirm that we handle UTF-8 characters correctly.\r\n    * def someData =\r\n      \"\"\"\r\n      {\r\n        \"firstName\": \"Keyser\",\r\n        \"lastName\": \"S\u00f6ze\",\r\n      }\r\n      \"\"\"\r\n    Given path 'api/v1/villains'\r\n    And request userRecord\r\n    When method post\r\n    Then status 204\r\n```\r\n\r\nPlacing a breakpoint on StepDefs::defDocString() reveals that before the assignment is made, the character has been decoded from the byte sequence 0xC3 0xB6 and stored in an array of chars (essentially unsigned 16 bit integers) with the value 0xF6 (0x00F6, it's codepoint value). \r\n\r\nFrom this point on the character remains in this non-UTF-8 encoded form, including in the http request that's made in the scenario. According to RFC 7159, JSON by default should be encoded in UTF-8. For codepoints represented by longer UTF-8 byte sequences the problem is more pronounced as the UTF-8 encoding is decoded into a char (or potentially two chars) whose upper and lower bytes are sent in an order determined by the architecture and if these fall within the ASCII range silently fail. \r\n\r\nHow can I control the encoding of the request body to ensure correct UTF-8 encoding?", "url": "https://github.com/intuit/karate/issues/141", "user": "duncwebb", "labels": ["bug", "help wanted"], "created": "2017-08-16 13:13:13", "closed": "2017-09-28 03:39:06", "commits": {}, "ttf": 42.000277777777775, "commitsDetails": []}, {"title": "callonce does not have an effect when running via Cucumber IDE right-click in Eclipse and IntelliJ", "body": "Low priority. Needs investigation.\r\n\r\nLooks like the StepDefs zero-arg constructor is called for each Scenario and even each Example in a Scenario Outline. The line `ide running:` shows up in the log.", "url": "https://github.com/intuit/karate/issues/136", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2017-08-11 09:01:12", "closed": "2017-12-05 03:27:37", "commits": {"d810d4695559c47d52bbed6970c22b30162cbeb8": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 115.00027777777778, "commitsDetails": [{"commitHash": "d810d4695559c47d52bbed6970c22b30162cbeb8", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["2abcb3edbc0fc2ca95a00fcc8d96172dfbb21731"], "nameRev": "d810d4695559c47d52bbed6970c22b30162cbeb8 tags/v0.6.2~13", "commitMessage": "callonce now works even for ide runner which fixes #136\n", "commitDateTime": "2017-11-28 20:36:13", "authoredDateTime": "2017-11-28 20:36:13", "commitGitStats": [{"filePath": "README.md", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/StepDefs.java", "insertions": 20, "deletions": 13, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "StepDefs.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.StepDefs.getFeatureEnv()", "TOT": 18, "UPD": 2, "INS": 4, "MOV": 9, "DEL": 3}, {"spoonMethodName": "com.intuit.karate.StepDefs", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d810d4695559c47d52bbed6970c22b30162cbeb8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 20, "deletions": 13, "lines": 33, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 19, "UPD": 2, "INS": 5, "MOV": 9, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.StepDefs", "com.intuit.karate.StepDefs.getFeatureEnv()"]}, {"title": "Invalid string (with special characters) in endpoint giving java.net.URISyntaxException with karate-apache v 0.5", "body": "Invalid strings in endpoint giving java.net.URISyntaxException with karate-apache v 0.5\r\nexample end point of a post req :- http://localhost:8080/XYZ/ABC/\bIll~Formed@RequiredString!/abcc\r\nwith proper headers and post body\r\n\r\nCaused by: java.net.URISyntaxException: Illegal character in path at index : xxx\r\n\r\n\tat java.net.URI$Parser.fail(URI.java:2848)\r\n\tat java.net.URI$Parser.checkChars(URI.java:3021)\r\n\tat java.net.URI$Parser.parseHierarchical(URI.java:3105)\r\n\tat java.net.URI$Parser.parse(URI.java:3053)\r\n\tat java.net.URI.<init>(URI.java:588)\r\n\tat org.apache.http.client.utils.URIBuilder.<init>(URIBuilder.java:80)\r\n\tat com.intuit.karate.http.apache.ApacheHttpClient.buildUrl(ApacheHttpClient.java:134)\r\n\tat com.intuit.karate.http.HttpClient.buildRequestInternal(HttpClient.java:145)\r\n\tat com.intuit.karate.http.HttpClient.invoke(HttpClient.java:214)\r\n\tat com.intuit.karate.StepDefs.method(StepDefs.java:335)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaStepDefinition.execute(JavaStepDefinition.java:38)", "url": "https://github.com/intuit/karate/issues/130", "user": "ravishankars5355", "labels": ["bug", "fixed"], "created": "2017-08-08 05:20:48", "closed": "2017-09-08 05:45:33", "commits": {"578ff95f600b912857a377a40f2be8c245e57f88": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 31.00027777777778, "commitsDetails": [{"commitHash": "578ff95f600b912857a377a40f2be8c245e57f88", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["8cdbfd8fa90bf54b040303cdd24fbc6cf6a9e29b"], "nameRev": "578ff95f600b912857a377a40f2be8c245e57f88 tags/v0.6.0~80", "commitMessage": "added tests for special chars in the url which fixes #130\n", "commitDateTime": "2017-08-13 19:04:28", "authoredDateTime": "2017-08-13 19:04:28", "commitGitStats": [{"filePath": "README.md", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "karate-demo/src/main/java/com/intuit/karate/demo/controller/EncodingController.java", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "karate-demo/src/test/java/demo/encoding/EncodingRunner.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "karate-demo/src/test/java/demo/encoding/encoding.feature", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/wiremock/HelloWorldTest.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/wiremock/url-encoding.feature", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "karate-mock-servlet/src/test/java/demo/MockDemoConfig.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "karate-mock-servlet/src/test/java/demo/MockSpringMvcServletTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncodingController.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.demo.controller.EncodingController", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EncodingRunner.java", "spoonMethods": [{"spoonMethodName": "demo.encoding.EncodingRunner", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HelloWorldTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.wiremock.HelloWorldTest.before()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockDemoConfig.java", "spoonMethods": [{"spoonMethodName": "demo.MockDemoConfig.encodingController()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockSpringMvcServletTest.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["578ff95f600b912857a377a40f2be8c245e57f88"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 43, "deletions": 0, "lines": 43, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-demo/src/main/java/com/intuit/karate/demo/controller"], "changesInPackagesSPOON": ["com.intuit.karate.demo.controller.EncodingController", "demo.MockDemoConfig.encodingController()", "demo.encoding.EncodingRunner"]}, {"title": "Karate-UI doesn't run on Windows 10 with Java 1.8 - error: Internal graphics not initialized yet", "body": "It appears that the static declaration of the default font is the cause here: [App.java line 45](https://github.com/intuit/karate/blob/master/karate-core/src/main/java/com/intuit/karate/ui/App.java#L45)\r\n\r\nRelevant part of the error:\r\n\r\n```\r\njava.lang.ExceptionInInitializerError\r\n<snip>\r\nCaused by: java.lang.RuntimeException: Internal graphics not initialized yet\r\n\tat com.sun.glass.ui.Screen.getScreens(Screen.java:70)\r\n\tat com.sun.glass.ui.Screen.getMainScreen(Screen.java:61)\r\n\tat com.sun.javafx.font.PrismFontFactory.getSystemFontSize(PrismFontFactory.java:1911)\r\n\tat com.sun.javafx.font.PrismFontLoader.getSystemFontSize(PrismFontLoader.java:241)\r\n\tat javafx.scene.text.Font.getDefaultSystemFontSize(Font.java:71)\r\n\tat javafx.scene.text.Font.font(Font.java:147)\r\n\tat javafx.scene.text.Font.font(Font.java:213)\r\n\tat com.intuit.karate.ui.App.<clinit>(App.java:45)\r\n\r\n```", "url": "https://github.com/intuit/karate/issues/126", "user": "ghost", "labels": ["bug", "fixed"], "created": "2017-08-03 23:00:02", "closed": "2017-09-13 15:31:58", "commits": {"bef0aa8e1a90af9cacc9122e003716b28b30711e": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 40.000277777777775, "commitsDetails": [{"commitHash": "bef0aa8e1a90af9cacc9122e003716b28b30711e", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["0a8d51b940876a09943e81dacd30264ece45d22c"], "nameRev": "bef0aa8e1a90af9cacc9122e003716b28b30711e tags/v0.6.0~64", "commitMessage": "don't use static init for javafx font which fixes #126", "commitDateTime": "2017-08-28 15:17:19", "authoredDateTime": "2017-08-28 15:17:19", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/ui/App.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "karate-core/src/main/java/com/intuit/karate/ui/HeaderPanel.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/ui/LogPanel.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/ui/StepPanel.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "App.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ui.App", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.ui.App.getDefaultFont()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HeaderPanel.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ui.HeaderPanel", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "LogPanel.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ui.LogPanel", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "StepPanel.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ui.StepPanel", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bef0aa8e1a90af9cacc9122e003716b28b30711e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 5, "lines": 12, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 12, "UPD": 3, "INS": 4, "MOV": 4, "DEL": 1, "spoonFilesChanged": 4, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/ui"], "changesInPackagesSPOON": ["com.intuit.karate.ui.App.getDefaultFont()", "com.intuit.karate.ui.HeaderPanel", "com.intuit.karate.ui.LogPanel", "com.intuit.karate.ui.StepPanel", "com.intuit.karate.ui.App"]}, {"title": "Cannot use set to change values in a JSON array", "body": "Prior to a request being made in a Given, When, And block, I'm attempting to change an element in a JSON document whose form is roughly this:\r\n\r\n```\r\n[\r\n    { \"id\": \"Some value\", \"name\": \"A\" },\r\n    { \"id\": \"Some other value\", \"name\": \"B\" },\r\n    { \"id\": \"Yet another\", \"name\": \"C\" }\r\n]\r\n```\r\n\r\nI have two steps, one that builds the JSON document using some JavaScript and assigns the return value to a variable eventPayload. The second then attempts to modify the value of one of the \"id\" keys:\r\n\r\n```\r\n* def eventPayload = call read(\"classpath:generateJSONDoc.js\")\r\n* set eventPayload[1].id = \"New value\"\r\n```\r\n\r\nThe problem is that in Script::setValueByPath() in Script.java, the JSON in eventPayload is rejected as it's type is neither JSON nor MAP (it's a JS_ARRAY).\r\n\r\nDoes set() only work on JSON objects? I've tried to use a JSONPath expression to specify the index too but that always returns a JS_ARRAY too.\r\n\r\nI can't help feeling I'm missing something obvious here :)\r\n", "url": "https://github.com/intuit/karate/issues/122", "user": "duncwebb", "labels": ["bug", "fixed"], "created": "2017-08-02 15:05:14", "closed": "2017-09-13 15:31:58", "commits": {"292ace63624ebd65a65101f0be62c876c8a60e78": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 42.000277777777775, "commitsDetails": [{"commitHash": "292ace63624ebd65a65101f0be62c876c8a60e78", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["ae77ee6481ed4f921f8bab9aef2253510186fcb0"], "nameRev": "292ace63624ebd65a65101f0be62c876c8a60e78 tags/v0.6.0~89", "commitMessage": "unified json path for set which fixes #122\n", "commitDateTime": "2017-08-02 22:26:43", "authoredDateTime": "2017-08-02 22:26:43", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 10, "deletions": 22, "lines": 32}, {"filePath": "karate-core/src/main/java/com/intuit/karate/ScriptValue.java", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "karate-core/src/test/java/com/intuit/karate/ScriptTest.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.matchJsonPath(com.intuit.karate.MatchType,com.intuit.karate.ScriptValue,java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)", "TOT": 11, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 9}, {"spoonMethodName": "com.intuit.karate.Script.setValueByPath(java.lang.String,java.lang.String,java.lang.String,boolean,com.intuit.karate.ScriptContext)", "TOT": 14, "UPD": 3, "INS": 4, "MOV": 4, "DEL": 3}]}, {"spoonFilePath": "ScriptValue.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptValue.isJsonLike()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptValue.getAsJsonDocument()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScriptTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptTest.testSetOnJsonArrayCreatedByJavaScript()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["292ace63624ebd65a65101f0be62c876c8a60e78"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 42, "deletions": 22, "lines": 64, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 27, "UPD": 5, "INS": 6, "MOV": 4, "DEL": 12, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.Script.setValueByPath(java.lang.String,java.lang.String,java.lang.String,boolean,com.intuit.karate.ScriptContext)", "com.intuit.karate.Script.matchJsonPath(com.intuit.karate.MatchType,com.intuit.karate.ScriptValue,java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)", "com.intuit.karate.ScriptValue.isJsonLike()", "com.intuit.karate.ScriptValue.getAsJsonDocument()"]}, {"title": "DELETE not allowing request body for Jersey", "body": "```\r\nat com.intuit.karate.http.HttpClient.invoke(HttpClient.java:225)\r\n\tat com.intuit.karate.StepDefs.method(StepDefs.java:335)\r\n\tat \u273d.When method Delete(:10)\r\nCaused by: java.lang.IllegalStateException: Entity must be null for http method DELETE.\r\n\tat org.glassfish.jersey.client.JerseyInvocation.validateHttpMethodAndEntity(JerseyInvocation.java:149)\r\n\tat org.glassfish.jersey.client.JerseyInvocation.<init>(JerseyInvocation.java:105)\r\n\tat org.glassfish.jersey.client.JerseyInvocation.<init>(JerseyInvocation.java:101)\r\n\tat org.glassfish.jersey.client.JerseyInvocation.<init>(JerseyInvocation.java:92)\r\n```", "url": "https://github.com/intuit/karate/issues/121", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2017-08-02 05:27:57", "closed": "2017-09-13 15:31:58", "commits": {"ae77ee6481ed4f921f8bab9aef2253510186fcb0": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 42.000277777777775, "commitsDetails": [{"commitHash": "ae77ee6481ed4f921f8bab9aef2253510186fcb0", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["a6e8b16a3d0d5a951a84e8a99b5bd89090edff16"], "nameRev": "ae77ee6481ed4f921f8bab9aef2253510186fcb0 tags/v0.6.0~90", "commitMessage": "non-null request body supported for jersey http delete which fixes #121\n", "commitDateTime": "2017-08-02 12:50:47", "authoredDateTime": "2017-08-02 12:50:13", "commitGitStats": [{"filePath": "karate-demo/src/main/java/com/intuit/karate/demo/controller/CatsController.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "karate-demo/src/test/java/demo/delete/DeleteRunner.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "karate-demo/src/test/java/demo/delete/delete.feature", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "karate-jersey/src/main/java/com/intuit/karate/http/jersey/JerseyHttpClient.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CatsController.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.demo.controller.CatsController.delete(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.demo.controller.CatsController.deleteWithBody(com.intuit.karate.demo.domain.Cat)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DeleteRunner.java", "spoonMethods": [{"spoonMethodName": "demo.delete.DeleteRunner", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JerseyHttpClient.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.jersey.JerseyHttpClient.configure(com.intuit.karate.http.HttpConfig,com.intuit.karate.ScriptContext)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ae77ee6481ed4f921f8bab9aef2253510186fcb0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 20, "deletions": 0, "lines": 20, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 6, "MOV": 1, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-demo/src/main/java/com/intuit/karate/demo/controller", "karate-jersey/src/main/java/com/intuit/karate/http/jersey"], "changesInPackagesSPOON": ["com.intuit.karate.http.jersey.JerseyHttpClient.configure(com.intuit.karate.http.HttpConfig,com.intuit.karate.ScriptContext)", "demo.delete.DeleteRunner", "com.intuit.karate.demo.controller.CatsController.deleteWithBody(com.intuit.karate.demo.domain.Cat)", "com.intuit.karate.demo.controller.CatsController.delete(int)"]}, {"title": "form fields in a method get should end up in the URL", "body": "POST is ok of course. pretty sure this edge case is not covered. todo investigate.", "url": "https://github.com/intuit/karate/issues/115", "user": "ptrthomas", "labels": ["bug", "fixed"], "created": "2017-07-31 17:39:06", "closed": "2017-09-13 15:31:58", "commits": {"fa5634088cf1637e45c790edfbdce13fc72d4978": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 43.000277777777775, "commitsDetails": [{"commitHash": "fa5634088cf1637e45c790edfbdce13fc72d4978", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["fc44c4540c24f1a64cee8d5cf81d6ff76dacbb61"], "nameRev": "fa5634088cf1637e45c790edfbdce13fc72d4978 tags/v0.6.0~82", "commitMessage": "non-post form-fields will be moved to params which fixes #115\n", "commitDateTime": "2017-08-12 20:44:55", "authoredDateTime": "2017-08-12 20:44:55", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/http/HttpClient.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "karate-demo/src/main/java/com/intuit/karate/demo/controller/SignInController.java", "insertions": 13, "deletions": 3, "lines": 16}, {"filePath": "karate-demo/src/test/java/demo/signin/sign-in.feature", "insertions": 15, "deletions": 8, "lines": 23}, {"filePath": "karate-demo/src/test/java/karate-config.js", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpClient.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpClient.buildRequestInternal(com.intuit.karate.http.HttpRequest,com.intuit.karate.ScriptContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SignInController.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.demo.controller.SignInController.greetingSubmit(com.intuit.karate.demo.domain.SignIn)", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.demo.controller.SignInController.signInPost(com.intuit.karate.demo.domain.SignIn)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.demo.controller.SignInController.getCsrfToken(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.demo.controller.SignInController.signInGet(java.lang.String,java.lang.String)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fa5634088cf1637e45c790edfbdce13fc72d4978"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 19, "deletions": 4, "lines": 23, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 14, "UPD": 1, "INS": 7, "MOV": 6, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-demo/src/main/java/com/intuit/karate/demo/controller", "karate-core/src/main/java/com/intuit/karate/http"], "changesInPackagesSPOON": ["com.intuit.karate.demo.controller.SignInController.greetingSubmit(com.intuit.karate.demo.domain.SignIn)", "com.intuit.karate.demo.controller.SignInController.signInGet(java.lang.String,java.lang.String)", "com.intuit.karate.http.HttpClient.buildRequestInternal(com.intuit.karate.http.HttpRequest,com.intuit.karate.ScriptContext)", "com.intuit.karate.demo.controller.SignInController.getCsrfToken(javax.servlet.http.HttpServletRequest)", "com.intuit.karate.demo.controller.SignInController.signInPost(com.intuit.karate.demo.domain.SignIn)"]}, {"title": "File name is missing when using multipart field for files", "body": "When using `multipart field someName = read('foo/bar.foo')` the resulting HTTP request sets `filename=\"someName\"` instead of the real file name. And there is no way to provide filename. Maybe it would be better to create a separate directive, i.e. `multipart file <name> <path> [<mimeType>]` to allow more control over the request.", "url": "https://github.com/intuit/karate/issues/110", "user": "ghost", "labels": ["bug"], "created": "2017-07-25 10:39:14", "closed": "2017-07-27 02:59:29", "commits": {"6ccf6efe4742bfaa02c7ac31c3faa6a21b6d9b78": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "6ccf6efe4742bfaa02c7ac31c3faa6a21b6d9b78", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["020b976685c8a84d0cbb621548bd2176c26a93c1"], "nameRev": "6ccf6efe4742bfaa02c7ac31c3faa6a21b6d9b78 tags/v0.5.0~9^2~1", "commitMessage": "introduced multipart file syntax which fixes #110\nthe old multipart file if-stream behavior will continue to work, but not ideal\nperhaps it can be deprecated in future\n", "commitDateTime": "2017-07-25 21:51:44", "authoredDateTime": "2017-07-25 21:51:44", "commitGitStats": [{"filePath": "README.md", "insertions": 13, "deletions": 5, "lines": 18}, {"filePath": "karate-apache/src/main/java/com/intuit/karate/http/apache/ApacheHttpUtils.java", "insertions": 17, "deletions": 16, "lines": 33}, {"filePath": "karate-core/src/main/java/com/intuit/karate/ScriptValue.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "karate-core/src/main/java/com/intuit/karate/StepDefs.java", "insertions": 33, "deletions": 1, "lines": 34}, {"filePath": "karate-core/src/main/java/com/intuit/karate/http/HttpClient.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "karate-core/src/main/java/com/intuit/karate/http/HttpRequest.java", "insertions": 22, "deletions": 14, "lines": 36}, {"filePath": "karate-core/src/main/java/com/intuit/karate/http/HttpUtils.java", "insertions": 8, "deletions": 12, "lines": 20}, {"filePath": "karate-core/src/main/java/com/intuit/karate/http/MultiPartItem.java", "insertions": 20, "deletions": 2, "lines": 22}, {"filePath": "karate-demo/src/main/java/com/intuit/karate/demo/controller/UploadController.java", "insertions": 15, "deletions": 8, "lines": 23}, {"filePath": "karate-demo/src/main/java/com/intuit/karate/demo/domain/FileInfo.java", "insertions": 23, "deletions": 7, "lines": 30}, {"filePath": "karate-demo/src/test/java/demo/upload/upload.feature", "insertions": 26, "deletions": 5, "lines": 31}, {"filePath": "karate-jersey/src/main/java/com/intuit/karate/http/jersey/JerseyHttpClient.java", "insertions": 11, "deletions": 21, "lines": 32}, {"filePath": "karate-mock-servlet/src/main/java/com/intuit/karate/mock/servlet/MockMultiPart.java", "insertions": 13, "deletions": 6, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ApacheHttpUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(java.util.List,java.lang.String)", "TOT": 26, "UPD": 3, "INS": 8, "MOV": 11, "DEL": 4}]}, {"spoonFilePath": "ScriptValue.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptValue.getAsStream()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StepDefs.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.StepDefs.asString(java.util.Map,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.StepDefs.multiPartFile(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpClient.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpClient", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.HttpClient.buildRequestInternal(com.intuit.karate.http.HttpRequest,com.intuit.karate.ScriptContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HttpRequest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpRequest.addMultiPartItem(java.lang.String,com.intuit.karate.ScriptValue)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.HttpRequest.addMultiPartItem(com.intuit.karate.http.MultiPartItem)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpUtils.getContentType(com.intuit.karate.ScriptValue)", "TOT": 9, "UPD": 0, "INS": 1, "MOV": 5, "DEL": 3}]}, {"spoonFilePath": "MultiPartItem.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.MultiPartItem", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.MultiPartItem.getFilename()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.MultiPartItem.setFilename(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.MultiPartItem.getContentType()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.MultiPartItem.setContentType(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UploadController.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.demo.controller.UploadController.upload(org.springframework.web.multipart.MultipartFile,java.lang.String)", "TOT": 12, "UPD": 5, "INS": 6, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.demo.controller.UploadController.download(java.lang.String)", "TOT": 6, "UPD": 1, "INS": 3, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.demo.controller.UploadController", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FileInfo.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.demo.domain.FileInfo", "TOT": 13, "UPD": 4, "INS": 7, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.demo.domain.FileInfo.getName()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.demo.domain.FileInfo.getMessage()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.demo.domain.FileInfo.getContentType()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JerseyHttpClient.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.jersey.JerseyHttpClient.getEntity(java.util.List,java.lang.String)", "TOT": 36, "UPD": 16, "INS": 6, "MOV": 12, "DEL": 2}]}, {"spoonFilePath": "MockMultiPart.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.mock.servlet.MockMultiPart", "TOT": 18, "UPD": 3, "INS": 6, "MOV": 5, "DEL": 4}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6ccf6efe4742bfaa02c7ac31c3faa6a21b6d9b78"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 181, "deletions": 94, "lines": 275, "gitFilesChange": 11}, "spoonStatsSummary": {"TOT": 148, "UPD": 40, "INS": 53, "MOV": 36, "DEL": 19, "spoonFilesChanged": 11, "spoonMethodsChanged": 23}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate/http", "karate-core/src/main/java/com/intuit/karate", "karate-demo/src/main/java/com/intuit/karate/demo/controller", "karate-mock-servlet/src/main/java/com/intuit/karate/mock/servlet", "karate-jersey/src/main/java/com/intuit/karate/http/jersey", "karate-apache/src/main/java/com/intuit/karate/http/apache", "karate-demo/src/main/java/com/intuit/karate/demo/domain"], "changesInPackagesSPOON": ["com.intuit.karate.http.MultiPartItem.setContentType(java.lang.String)", "com.intuit.karate.http.MultiPartItem.setFilename(java.lang.String)", "com.intuit.karate.http.MultiPartItem.getContentType()", "com.intuit.karate.demo.domain.FileInfo.getName()", "com.intuit.karate.http.jersey.JerseyHttpClient.getEntity(java.util.List,java.lang.String)", "com.intuit.karate.demo.controller.UploadController.download(java.lang.String)", "com.intuit.karate.http.HttpUtils.getContentType(com.intuit.karate.ScriptValue)", "com.intuit.karate.http.HttpClient", "com.intuit.karate.http.HttpRequest.addMultiPartItem(java.lang.String,com.intuit.karate.ScriptValue)", "com.intuit.karate.StepDefs.asString(java.util.Map,java.lang.String)", "com.intuit.karate.http.apache.ApacheHttpUtils.getEntity(java.util.List,java.lang.String)", "com.intuit.karate.StepDefs.multiPartFile(java.lang.String,java.lang.String)", "com.intuit.karate.demo.domain.FileInfo.getContentType()", "com.intuit.karate.demo.domain.FileInfo.getMessage()", "com.intuit.karate.ScriptValue.getAsStream()", "com.intuit.karate.demo.controller.UploadController", "com.intuit.karate.mock.servlet.MockMultiPart", "com.intuit.karate.http.MultiPartItem.getFilename()", "com.intuit.karate.demo.domain.FileInfo", "com.intuit.karate.http.MultiPartItem", "com.intuit.karate.http.HttpClient.buildRequestInternal(com.intuit.karate.http.HttpRequest,com.intuit.karate.ScriptContext)", "com.intuit.karate.demo.controller.UploadController.upload(org.springframework.web.multipart.MultipartFile,java.lang.String)", "com.intuit.karate.http.HttpRequest.addMultiPartItem(com.intuit.karate.http.MultiPartItem)"]}, {"title": "Issues with auto-cookie handling for karate-apache", "body": "Spotted this today, and opening ticket while I investigate the details.  In some cases when multiple cookies are present in the server response, only one is being passed to the next request.\r\n\r\nIn case you run into this issue, just switch to karate-jersey and you will be fine.  Or you can manually save `cookies` to a var and use that as the argument to `cookies` for all requests that need em.\r\n\r\nWe'll add a regression test to make sure this doesn't surface again.", "url": "https://github.com/intuit/karate/issues/103", "user": "ptrthomas", "labels": ["bug"], "created": "2017-07-10 16:55:12", "closed": "2017-07-27 02:59:28", "commits": {"85fabbf03bfb2f4123a93b140e4838e7feb53aa7": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 16.00027777777778, "commitsDetails": [{"commitHash": "85fabbf03bfb2f4123a93b140e4838e7feb53aa7", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["b8ce1132f44a85f831ffd4af1648a4b9a331bd05"], "nameRev": "85fabbf03bfb2f4123a93b140e4838e7feb53aa7 tags/v0.5.0~63", "commitMessage": "disabled apache client cookie matching which fixes #103\nturns out the apache http client was leaving out cookies with domains ending in .com because of some weird blacklisting rules or what not, won't happen again because we force the match routine check to return true\n", "commitDateTime": "2017-07-11 19:54:11", "authoredDateTime": "2017-07-11 19:54:11", "commitGitStats": [{"filePath": "karate-apache/src/main/java/com/intuit/karate/http/apache/ApacheHttpClient.java", "insertions": 9, "deletions": 1, "lines": 10}, {"filePath": "karate-apache/src/main/java/com/intuit/karate/http/apache/LenientCookieSpec.java", "insertions": 53, "deletions": 0, "lines": 53}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ApacheHttpClient.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpClient.configure(com.intuit.karate.http.HttpConfig,com.intuit.karate.ScriptContext)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpClient.buildCookie(com.intuit.karate.http.Cookie$Cookie)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpClient.makeHttpRequest(org.apache.http.HttpEntity,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LenientCookieSpec.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.apache.LenientCookieSpec", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["85fabbf03bfb2f4123a93b140e4838e7feb53aa7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 62, "deletions": 1, "lines": 63, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 5, "MOV": 2, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-apache/src/main/java/com/intuit/karate/http/apache"], "changesInPackagesSPOON": ["com.intuit.karate.http.apache.ApacheHttpClient.buildCookie(com.intuit.karate.http.Cookie$Cookie)", "com.intuit.karate.http.apache.ApacheHttpClient.makeHttpRequest(org.apache.http.HttpEntity,long)", "com.intuit.karate.http.apache.ApacheHttpClient.configure(com.intuit.karate.http.HttpConfig,com.intuit.karate.ScriptContext)", "com.intuit.karate.http.apache.LenientCookieSpec"]}, {"title": "[question / unexpected behavior] populating XML template in called feature", "body": "We have a reusable feature `my-soap-action.feature` that is being called with a list of arguments from another feature, i.e. looping and passing arguments to a child feature:\r\n\r\n`* def result = call read('./my-soap-action.feature') myJsonArray`\r\n\r\nInside of `my-soap-action.feature`, we call `* def request = read('./my-xml-template.xml')` and execute the soap request.\r\n\r\nI am able to see / print each of the array elements as they are passed as arguments. However, when the request body is created, `com.intuit.karate#evalXmlEmbeddedExpressions` is using the `context` of the call site in the parent feature and not the context of `my-soap-action.feature`. Our template variable is undefined in the parent and the script fails.\r\n\r\nWhat is the proper way to evaluate a template like this? The behavior I was expecting is that the template would be evaluated with the context of the file in which the XML template is read.\r\n\r\nThank you so much, we love this framework! :)", "url": "https://github.com/intuit/karate/issues/75", "user": "jmcelwain", "labels": ["bug"], "created": "2017-05-24 18:46:29", "closed": "2017-05-25 13:50:46", "commits": {"46b15a8ddab53fb823dc8ba149a315363890055a": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "46b15a8ddab53fb823dc8ba149a315363890055a", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["7d64a468c47bdddcd4e3700c446e01f30ea2c726"], "nameRev": "46b15a8ddab53fb823dc8ba149a315363890055a tags/v0.4.1~1", "commitMessage": "file read js function for called feature exec was using parent context - fixed #75\n", "commitDateTime": "2017-05-25 08:55:58", "authoredDateTime": "2017-05-25 08:55:58", "commitGitStats": [{"filePath": "README.md", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "karate-core/src/main/java/com/intuit/karate/ScriptContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/test/java/com/intuit/karate/ScriptTest.java", "insertions": 28, "deletions": 8, "lines": 36}, {"filePath": "karate-core/src/test/java/com/intuit/karate/test-called-embedded-file.feature", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "karate-core/src/test/java/com/intuit/karate/test-called-embedded.feature", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "karate-core/src/test/java/com/intuit/karate/{test.feature => test-called.feature}", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "karate-core/src/test/java/com/intuit/karate/test.json", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "karate-core/src/test/java/com/intuit/karate/test.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ScriptContext.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptContext", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "ScriptTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptTest.testCallingFeatureWithNoArgument()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testCallingFeatureWithVarOverrides()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testCallingFeatureWithVarOverrideFromVariable()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testCallingFeatureWithList()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testCallingFeatureWithJsonCreatedByJavaScript()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testCallingFeatureWithJsonArrayCreatedByJavaScript()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testFromJsKarateCallFeatureWithNoArg()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testFromJsKarateCallFeatureWithJsonArg()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testCallingFeatureThatEvaluatesEmbeddedExpressions()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testCallingFeatureThatEvaluatesEmbeddedExpressionsFromFileRead()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["46b15a8ddab53fb823dc8ba149a315363890055a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.ScriptContext"]}, {"title": "Parameter encoding adds extra + characters to parameter values after upgrading to 0.4.0.1", "body": "For example\r\n```\r\nAnd param someparam = 'a,b'\r\n```\r\n\r\ngets encoded like this in 0.4.0.1:\r\n```\r\nsomeparam=a%2C+b\r\n```\r\nThere is an extra `+`.\r\n\r\nin 0.3.1 this is correctly encoded:\r\n```\r\nsomeparam=a%2Cb\r\n```", "url": "https://github.com/intuit/karate/issues/72", "user": "lhotari", "labels": ["bug"], "created": "2017-05-19 10:25:30", "closed": "2017-05-25 13:50:46", "commits": {"9046558987db0d3dc5db6dcc2bd32820516ccb9a": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "9046558987db0d3dc5db6dcc2bd32820516ccb9a", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["f4b9252f79ba2bb6e261779eb04f8e680ef774b2"], "nameRev": "9046558987db0d3dc5db6dcc2bd32820516ccb9a tags/v0.4.1~5", "commitMessage": "improved csv param handling which fixes #72\n", "commitDateTime": "2017-05-19 19:26:53", "authoredDateTime": "2017-05-19 19:26:53", "commitGitStats": [{"filePath": "README.md", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "karate-apache/src/main/java/com/intuit/karate/http/apache/ApacheHttpClient.java", "insertions": 8, "deletions": 2, "lines": 10}, {"filePath": "karate-core/src/main/java/com/intuit/karate/StepDefs.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "karate-demo/README.md", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/wiremock/HelloWorldTest.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/wiremock/param-commas.feature", "insertions": 36, "deletions": 0, "lines": 36}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ApacheHttpClient.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpClient.buildParam(java.lang.String,java.lang.Object[])", "TOT": 7, "UPD": 1, "INS": 1, "MOV": 4, "DEL": 1}]}, {"spoonFilePath": "StepDefs.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.StepDefs.evalList(java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.StepDefs.params(java.lang.String)", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HelloWorldTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.wiremock.HelloWorldTest.before()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9046558987db0d3dc5db6dcc2bd32820516ccb9a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 4, "lines": 16, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 11, "UPD": 3, "INS": 3, "MOV": 4, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-apache/src/main/java/com/intuit/karate/http/apache", "karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.http.apache.ApacheHttpClient.buildParam(java.lang.String,java.lang.Object[])", "com.intuit.karate.StepDefs.evalList(java.util.List)", "com.intuit.karate.StepDefs.params(java.lang.String)"]}, {"title": "JSON arrays returned by JS functions don't work for match", "body": "This was reported by @basavanag \r\n\r\n```cucumber\r\n* def fun = function(){ return ['foo', 'bar', 'baz'] }\r\n* def json = ['foo', 'bar', 'baz']\r\n# fails\r\n* match json == fun()\r\n```", "url": "https://github.com/intuit/karate/issues/61", "user": "ptrthomas", "labels": ["bug"], "created": "2017-05-07 06:12:10", "closed": "2017-05-07 15:58:02", "commits": {"1d83876ed3bc92ffaabf893a49ab997d869ea2f3": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "1d83876ed3bc92ffaabf893a49ab997d869ea2f3", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["7018c8e195c502400f7318028bc90e3b30d6e859"], "nameRev": "1d83876ed3bc92ffaabf893a49ab997d869ea2f3 tags/v0.4.0~2", "commitMessage": "fixed #61 for js array and match, also some doc improvements\n", "commitDateTime": "2017-05-07 11:34:04", "authoredDateTime": "2017-05-07 11:34:04", "commitGitStats": [{"filePath": "README.md", "insertions": 18, "deletions": 9, "lines": 27}, {"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "karate-core/src/test/java/com/intuit/karate/ScriptTest.java", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "karate-demo/README.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/JsArraysRunner.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.matchJsonPath(com.intuit.karate.MatchType,com.intuit.karate.ScriptValue,java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScriptTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptTest.testMatchJsonObjectReturnedFromJs()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testMatchJsonArrayReturnedFromJs()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JsArraysRunner.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.demos.JsArraysRunner", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1d83876ed3bc92ffaabf893a49ab997d869ea2f3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 1, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.junit4.demos.JsArraysRunner", "com.intuit.karate.Script.matchJsonPath(com.intuit.karate.MatchType,com.intuit.karate.ScriptValue,java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)"]}, {"title": "Response entity throws NPE", "body": "com.intuit.karate.http.apache.ApacheHttpClient.makeHttpRequest(HttpEntity, long) method always expects Response object to have entity and null is not checked. \r\nAs per the HTTP spec, DELETE method entity is optional and when I make a call to DELETE method of an API which has null entity, karate throw null pointer exception.\r\n", "url": "https://github.com/intuit/karate/issues/57", "user": "konyaj", "labels": ["bug"], "created": "2017-05-02 04:24:50", "closed": "2017-05-08 04:34:40", "commits": {"f4b9252f79ba2bb6e261779eb04f8e680ef774b2": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "f4b9252f79ba2bb6e261779eb04f8e680ef774b2", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["98f35824988439f97cbc8550ae4e0993854be49a"], "nameRev": "f4b9252f79ba2bb6e261779eb04f8e680ef774b2 tags/v0.4.1~6", "commitMessage": "defensive null check for response entity which fixes #57\n", "commitDateTime": "2017-05-08 09:56:02", "authoredDateTime": "2017-05-08 09:56:02", "commitGitStats": [{"filePath": "README.md", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "karate-apache/src/main/java/com/intuit/karate/http/apache/ApacheHttpClient.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/wiremock/HelloWorldTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/wiremock/delete.feature", "insertions": 12, "deletions": 4, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ApacheHttpClient.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.apache.ApacheHttpClient.makeHttpRequest(org.apache.http.HttpEntity,long)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "HelloWorldTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.wiremock.HelloWorldTest.before()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f4b9252f79ba2bb6e261779eb04f8e680ef774b2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 2, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-apache/src/main/java/com/intuit/karate/http/apache"], "changesInPackagesSPOON": ["com.intuit.karate.http.apache.ApacheHttpClient.makeHttpRequest(org.apache.http.HttpEntity,long)"]}, {"title": "The Authorization header has duplicate token (NOT being overwritten)", "body": "Hi,\r\nI am setting default value for Authorization header in Background so that I don't end up repeating it in every Scenario. \r\nBut I also had a Scenario in which I need a different value for Authorization header. I was setting it again in the Scenario and it used to overwrite the previous value. This worked great until the recent version v0.3.1 of Karate. In the latest Karate version for some reason it keeps both values (first_value, second_value). \r\nThis results in Authorization error. \r\n\r\n> Feature: Sample \r\n  Background:\r\n    url someServiceUrl\r\n    header Authorization = \"Basic Token_1\"\r\n  \r\n  > Scenario: Override the Authorization header in background\r\n   Given path some_path\r\n   And header Authorization =  \"Basic Token_2\"\r\n\r\nThis results in a request which has Authorization  values as\r\n\"Basic Token_1, Basic Token_2\"\r\n", "url": "https://github.com/intuit/karate/issues/54", "user": "satishautade", "labels": ["bug"], "created": "2017-04-28 03:47:55", "closed": "2017-05-07 15:58:02", "commits": {"de0994b87039019c237781a4f1aa7d66ca6be3d1": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "de0994b87039019c237781a4f1aa7d66ca6be3d1", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["87b7451b52f1f3e5e500dc76bc616262c282d76b"], "nameRev": "de0994b87039019c237781a4f1aa7d66ca6be3d1 tags/v0.4.0~11", "commitMessage": "headers, params, cookies and form-fields can take json\nwhich is useful for dynamic / data-driven permutation kind of testing\nheader, param and form-field keywords support multi-values\nadded demo / examples - and this fixes #54 and fixes #56\n", "commitDateTime": "2017-04-29 14:53:03", "authoredDateTime": "2017-04-29 14:53:03", "commitGitStats": [{"filePath": "karate-apache/src/main/java/com/intuit/karate/http/apache/LoggingUtils.java", "insertions": 9, "deletions": 4, "lines": 13}, {"filePath": "karate-core/src/main/java/com/intuit/karate/ScriptContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/ScriptValue.java", "insertions": 82, "deletions": 20, "lines": 102}, {"filePath": "karate-core/src/main/java/com/intuit/karate/StepDefs.java", "insertions": 115, "deletions": 18, "lines": 133}, {"filePath": "karate-core/src/main/java/com/intuit/karate/http/HttpRequest.java", "insertions": 49, "deletions": 8, "lines": 57}, {"filePath": "karate-demo/src/main/java/com/intuit/karate/demo/controller/HeadersController.java", "insertions": 12, "deletions": 8, "lines": 20}, {"filePath": "karate-demo/src/main/java/com/intuit/karate/demo/controller/SearchController.java", "insertions": 44, "deletions": 0, "lines": 44}, {"filePath": "karate-demo/src/test/java/demo/headers/headers-override.feature", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "karate-demo/src/test/java/demo/headers/headers.feature", "insertions": 28, "deletions": 2, "lines": 30}, {"filePath": "karate-demo/src/test/java/demo/search/SearchRunner.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "karate-demo/src/test/java/demo/search/get-response-param.js", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "karate-demo/src/test/java/demo/search/search.feature", "insertions": 28, "deletions": 0, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LoggingUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.apache.LoggingUtils.logHeaderLine(java.lang.StringBuilder,int,char,java.lang.String,org.apache.http.Header[])", "TOT": 9, "UPD": 0, "INS": 2, "MOV": 5, "DEL": 2}]}, {"spoonFilePath": "ScriptContext.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptContext.configure(java.lang.String,com.intuit.karate.ScriptValue)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScriptValue.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptValue.isListLike()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptValue.getAsList()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptValue.isMapLike()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptValue.getAsMap()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StepDefs.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.StepDefs.param(java.lang.String,java.lang.String)", "TOT": 16, "UPD": 6, "INS": 0, "MOV": 10, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.StepDefs.header(java.lang.String,java.lang.String)", "TOT": 18, "UPD": 6, "INS": 0, "MOV": 11, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.StepDefs.cookie(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.StepDefs.formField(java.lang.String,java.lang.String)", "TOT": 11, "UPD": 8, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.StepDefs.soapAction(java.lang.String)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.StepDefs.path(java.util.List)", "TOT": 7, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.StepDefs.param(java.lang.String,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.StepDefs.evalMapExpr(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.StepDefs.params(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.StepDefs.cookies(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.StepDefs.header(java.lang.String,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.StepDefs.headers(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.StepDefs.formFields(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpRequest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.http.HttpRequest.addHeader(java.lang.String,java.lang.String)", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.HttpRequest.addParam(java.lang.String,java.lang.String)", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.HttpRequest.addCookie(com.intuit.karate.http.Cookie)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.HttpRequest.addFormField(java.lang.String,java.lang.String)", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.HttpRequest.removeHeader(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.HttpRequest.setHeader(java.lang.String,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.HttpRequest.removeParam(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.HttpRequest.setParam(java.lang.String,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.HttpRequest.removeCookie(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.HttpRequest.removeFormField(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.http.HttpRequest.setFormField(java.lang.String,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HeadersController.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.demo.controller.HeadersController.validateToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.demo.controller.HeadersController.validateToken(java.lang.String,java.lang.String[],java.lang.String,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SearchController.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.demo.controller.SearchController", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SearchRunner.java", "spoonMethods": [{"spoonMethodName": "demo.search.SearchRunner", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "PATCH operations do not appear to be supported by Jersey client", "body": "\r\nHey, trying to send a patch request but failing.\r\n\r\nScenario looks like below\r\n\r\nsomeUrl is defined in properties file as 'http://localhost:4000' and the service is running locally.\r\n\r\n```\r\n  Scenario: Test patch method returns an error as it has no params\r\n    Given url someUrl\r\n    And path '/'\r\n    And request '{}'\r\n    When method patch\r\n    Then status 422\r\n ```\r\n\r\nLogs\r\n```\r\n\r\njavax.ws.rs.ProcessingException: java.net.ProtocolException: Invalid HTTP method: PATCH\r\nat org.glassfish.jersey.client.internal.HttpUrlConnector.apply(HttpUrlConnector.java:287)\r\n  at org.glassfish.jersey.client.ClientRuntime.invoke(ClientRuntime.java:252)\r\n  at org.glassfish.jersey.client.JerseyInvocation$1.call(JerseyInvocation.java:684)\r\n  at org.glassfish.jersey.client.JerseyInvocation$1.call(JerseyInvocation.java:681)\r\n  at org.glassfish.jersey.internal.Errors.process(Errors.java:315)\r\n  at org.glassfish.jersey.internal.Errors.process(Errors.java:297)\r\n  at org.glassfish.jersey.internal.Errors.process(Errors.java:228)\r\n  at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:444)\r\n  at org.glassfish.jersey.client.JerseyInvocation.invoke(JerseyInvocation.java:681)\r\n  at org.glassfish.jersey.client.JerseyInvocation$Builder.method(JerseyInvocation.java:437)\r\n  at com.intuit.karate.StepDefs.method(StepDefs.java:313)\r\n  at \u273d.When method PATCH(/Users/mna07/dev/<proj_name>/src/test/java/serviceTests/basket/basketStubTester.feature:20)\r\nCaused by: java.net.ProtocolException: Invalid HTTP method: PATCH\r\n  at java.net.HttpURLConnection.setRequestMethod(HttpURLConnection.java:440)\r\n  at sun.net.www.protocol.http.HttpURLConnection.setRequestMethod(HttpURLConnection.java:552)\r\n  at org.glassfish.jersey.client.internal.HttpUrlConnector._apply(HttpUrlConnector.java:347)\r\n  at org.glassfish.jersey.client.internal.HttpUrlConnector.apply(HttpUrlConnector.java:285)\r\n  at org.glassfish.jersey.client.ClientRuntime.invoke(ClientRuntime.java:252)\r\n  at org.glassfish.jersey.client.JerseyInvocation$1.call(JerseyInvocation.java:684)\r\n  at org.glassfish.jersey.client.JerseyInvocation$1.call(JerseyInvocation.java:681)\r\n  at org.glassfish.jersey.internal.Errors.process(Errors.java:315)\r\n  at org.glassfish.jersey.internal.Errors.process(Errors.java:297)\r\n  at org.glassfish.jersey.internal.Errors.process(Errors.java:228)\r\n  at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:444)\r\n  at org.glassfish.jersey.client.JerseyInvocation.invoke(JerseyInvocation.java:681)\r\n  at org.glassfish.jersey.client.JerseyInvocation$Builder.method(JerseyInvocation.java:437)\r\n  at com.intuit.karate.StepDefs.method(StepDefs.java:313)\r\n  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n  at java.lang.reflect.Method.invoke(Method.java:498)\r\n  at cucumber.runtime.Utils$1.call(Utils.java:40)\r\n  at cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n  at cucumber.runtime.Utils.invoke(Utils.java:34)\r\n  at cucumber.runtime.java.JavaStepDefinition.execute(JavaStepDefinition.java:38)\r\n  at cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)\r\n  at cucumber.runtime.Runtime.runStep(Runtime.java:300)\r\n  at cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\r\n  at cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\r\n  at cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)\r\n  at cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n  at cucumber.runtime.Runtime.run(Runtime.java:122)\r\n  at cucumber.api.cli.Main.run(Main.java:36)\r\n  at cucumber.api.cli.Main.main(Main.java:18)\r\n```\r\n\r\nIt looks like there is no listed PATCH method in the below file\r\n\r\n```\r\n/Users/mna07/.m2/repository/org/glassfish/jersey/core/jersey-client/2.25/jersey-client-2.25-sources.jar!/org/glassfish/jersey/client/JerseyInvocation.java\r\n```\r\n\r\nand after some searching, its not supported :(\r\n\r\nhttps://stackoverflow.com/questions/17897171/how-to-have-a-patch-annotation-for-jax-rs\r\n\r\nSorry if this has been asked before!\r\n", "url": "https://github.com/intuit/karate/issues/35", "user": "YOU54F", "labels": ["bug"], "created": "2017-04-06 12:37:42", "closed": "2017-04-06 13:25:49", "commits": {"dc6dcf2a05c5bb470470f442701e0f51ca6ef666": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "dc6dcf2a05c5bb470470f442701e0f51ca6ef666", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["cbe18ab000930a4afdb76198f2eb680ce1b378bd"], "nameRev": "dc6dcf2a05c5bb470470f442701e0f51ca6ef666 tags/v0.3.0~9", "commitMessage": "workaround for jersey client http patch method which fixes #35\n", "commitDateTime": "2017-04-06 18:36:54", "authoredDateTime": "2017-04-06 18:36:54", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/StepDefs.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/wiremock/HelloWorldTest.java", "insertions": 9, "deletions": 7, "lines": 16}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/wiremock/patch.feature", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "StepDefs.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.StepDefs.makeHttpRequest(javax.ws.rs.client.Invocation$Builder,java.lang.String,javax.ws.rs.client.Entity)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HelloWorldTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.wiremock.HelloWorldTest.before()", "TOT": 9, "UPD": 4, "INS": 1, "MOV": 2, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dc6dcf2a05c5bb470470f442701e0f51ca6ef666"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 0, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.StepDefs.makeHttpRequest(javax.ws.rs.client.Invocation$Builder,java.lang.String,javax.ws.rs.client.Entity)"]}, {"title": "Response streams containing negative bytes are corrupted by StepDefs.unprepare()", "body": "The _StepDefs.unprepare_ method starts by converting the input stream to a String. This is a problem for response streams that contain negative signed bytes, because the default String conversion doesn't handle this case correctly.\r\n\r\n![screen shot 2017-04-05 at 11 11 57 am](https://cloud.githubusercontent.com/assets/20446946/24720077/c18bd602-19f0-11e7-86a9-9e8d27500206.png)\r\n", "url": "https://github.com/intuit/karate/issues/33", "user": "ambertests", "labels": ["bug"], "created": "2017-04-05 18:16:21", "closed": "2017-04-06 13:26:24", "commits": {"de2553f06415de3b586c9347a0e38a8af4c6a305": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "de2553f06415de3b586c9347a0e38a8af4c6a305", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["fc9f9622d8f0b9eec270a7cbe7572c02c634f88f", "e4fb055cb55a10be0786978ea7c2874deec29930"], "nameRev": "de2553f06415de3b586c9347a0e38a8af4c6a305 tags/v0.3.0~14", "commitMessage": "Merge pull request #34 from ambertests/amber-karate-develop\n\nFix for Issue #33 (potential corruption of response byte stream)", "commitDateTime": "2017-04-06 08:25:41", "authoredDateTime": "2017-04-06 08:25:41", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/StepDefs.java", "insertions": 27, "deletions": 8, "lines": 35}, {"filePath": "karate-junit4/pom.xml", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/wiremock/HelloWorldTest.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/wiremock/binary.feature", "insertions": 19, "deletions": 0, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "StepDefs.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.StepDefs.unprepare()", "TOT": 10, "UPD": 7, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.StepDefs.getRawResponse()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HelloWorldTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.wiremock.HelloWorldTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.junit4.wiremock.HelloWorldTest.before()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "java.lang.NullPointerException when using xpath count() function", "body": "Trying to count the records on path /response/records/record as part of validation.  Given a step using xpath count function like:\r\n\r\nAnd match count(/response/records/record) contains '1'\r\n\r\nThere is a NullPointerException:\r\n\r\njava.lang.NullPointerException\r\n\tat com.intuit.karate.Script.matchNamed(Script.java:436)\r\n\tat com.intuit.karate.StepDefs.matchNamed(StepDefs.java:497)\r\n\tat com.intuit.karate.StepDefs.matchContains(StepDefs.java:493)\r\n\tat \u273d.And match count(/response/records/record) contains '1'(test/uc/uctest.feature:44)\r\n\r\nWhen I use the source XML from my response and use xpath evaluator at http://www.freeformatter.com/xpath-tester.html I get the expected '1' result on evaluation of the same xpath expression.\r\n", "url": "https://github.com/intuit/karate/issues/30", "user": "jk-helpsys", "labels": ["bug"], "created": "2017-03-31 19:40:09", "closed": "2017-04-03 16:20:44", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": " call-feature demo throws file not found error", "body": "Every time I try to the call-feature demo or use similar setup on my project I get an error that file 'create-two-cats.feature' does not exist. \r\n\r\nDo I need to make any changes before running call-feature demo file?", "url": "https://github.com/intuit/karate/issues/29", "user": "keyjm", "labels": ["bug"], "created": "2017-03-31 00:45:18", "closed": "2017-04-03 14:44:42", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Creating new project from archetype creates example test class with \"junit\" dependency. Should be \"junit4\"", "body": "Creating new project from archetype creates example test class with \"junit\" dependency. Should be \"junit4\"", "url": "https://github.com/intuit/karate/issues/22", "user": "karthikvellur", "labels": ["bug"], "created": "2017-03-02 11:21:15", "closed": "2017-03-02 13:58:45", "commits": {"2bdd7feabf4b8caa7f5d1be207b18473d024cae2": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "2bdd7feabf4b8caa7f5d1be207b18473d024cae2", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["843e26b1c1c9bb4ee6459087d9b639b8f5e16f21"], "nameRev": "2bdd7feabf4b8caa7f5d1be207b18473d024cae2 tags/v0.2.2~2", "commitMessage": "fixed typo in archetype sample package name, actually revamped whole example as well which fixes #22\n", "commitDateTime": "2017-03-02 18:41:57", "authoredDateTime": "2017-03-02 18:41:57", "commitGitStats": [{"filePath": "README.md", "insertions": 35, "deletions": 28, "lines": 63}, {"filePath": "karate-archetype/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-archetype/src/main/resources/archetype-resources/src/test/java/animals/cats/CatsTest.java", "insertions": 0, "deletions": 9, "lines": 9}, {"filePath": "karate-archetype/src/main/resources/archetype-resources/src/test/java/animals/cats/cats-post.feature", "insertions": 0, "deletions": 13, "lines": 13}, {"filePath": "karate-archetype/src/main/resources/archetype-resources/src/test/java/examples/users/UsersTest.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "karate-archetype/src/main/resources/archetype-resources/src/test/java/examples/users/users.feature", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "karate-core/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-junit4/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/UsersTest.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/users.feature", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "karate-testng/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pom.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CatsTest.java", "spoonMethods": [{"spoonMethodName": "animals.cats.CatsTest", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "UsersTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.demos.UsersTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2bdd7feabf4b8caa7f5d1be207b18473d024cae2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Karate does not read js files if specified in a file path", "body": "Karate does not read js files if specified in a file path. Throws a runtime exception. \r\n\r\nFor example: a/b/c/test.js cannot be read", "url": "https://github.com/intuit/karate/issues/21", "user": "karthikvellur", "labels": ["bug"], "created": "2017-03-02 03:43:12", "closed": "2017-03-02 13:58:45", "commits": {"cf0685251281bab5a4084c38771107433379c7c0": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "cf0685251281bab5a4084c38771107433379c7c0", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["2bdd7feabf4b8caa7f5d1be207b18473d024cae2"], "nameRev": "cf0685251281bab5a4084c38771107433379c7c0 tags/v0.2.2~1", "commitMessage": "improved regex matching of script eval, which fixes #21\n", "commitDateTime": "2017-03-02 19:15:59", "authoredDateTime": "2017-03-02 19:15:59", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "karate-core/src/test/java/com/intuit/karate/ScriptTest.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/ReadFromRelativePathTest.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/demos/read-from-relative-path.feature", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "karate-junit4/src/test/java/com/intuit/karate/junit4/syntax/for-demos.js", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.isVariableAndJsonPath(java.lang.String)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 2}, {"spoonMethodName": "com.intuit.karate.Script.isVariableAndXmlPath(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.Script", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "ScriptTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptTest.testParsingTextType()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReadFromRelativePathTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.junit4.demos.ReadFromRelativePathTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cf0685251281bab5a4084c38771107433379c7c0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 3, "lines": 10, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 11, "UPD": 0, "INS": 5, "MOV": 2, "DEL": 4, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.Script.isVariableAndXmlPath(java.lang.String)", "com.intuit.karate.Script", "com.intuit.karate.Script.isVariableAndJsonPath(java.lang.String)"]}, {"title": "Remove dependency on json.org maven artifact - open-source license issue", "body": "Details here: https://github.com/skyscreamer/JSONassert/issues/44 \r\n\r\nThis will be easy, the only thing the org.json artifact is doing at the moment is XML --> JSON conversion.", "url": "https://github.com/intuit/karate/issues/17", "user": "ptrthomas", "labels": ["bug"], "created": "2017-02-25 05:51:26", "closed": "2017-02-25 10:01:42", "commits": {"2ddee788153e8d643c7e7cc68a2ce3a6855170fb": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "2ddee788153e8d643c7e7cc68a2ce3a6855170fb", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["0bc64c29bec6b8bfe31efd4ac26a9bfeb23fb330"], "nameRev": "2ddee788153e8d643c7e7cc68a2ce3a6855170fb tags/v0.2.1~6", "commitMessage": "removed dependency on json.org and bad oss license by implementing xml to json conversion, all tests pass ! which fixes #17\n", "commitDateTime": "2017-02-25 15:24:49", "authoredDateTime": "2017-02-25 15:24:49", "commitGitStats": [{"filePath": "karate-core/pom.xml", "insertions": 1, "deletions": 7, "lines": 8}, {"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 15, "deletions": 2, "lines": 17}, {"filePath": "karate-core/src/main/java/com/intuit/karate/XmlUtils.java", "insertions": 46, "deletions": 13, "lines": 59}, {"filePath": "karate-core/src/test/java/com/intuit/karate/ScriptTest.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "karate-core/src/test/java/com/intuit/karate/XmlUtilsTest.java", "insertions": 8, "deletions": 8, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.matchNestedObject(char,java.lang.String,com.intuit.karate.MatchType,java.lang.Object,java.lang.Object,com.intuit.karate.ScriptContext)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "XmlUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.XmlUtils.toJsonString(org.w3c.dom.Node)", "TOT": 10, "UPD": 3, "INS": 0, "MOV": 6, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.XmlUtils.toJsonDoc(org.w3c.dom.Node)", "TOT": 6, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.XmlUtils.toMap(org.w3c.dom.Node)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "ScriptTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptTest.testMatchXmlRepeatedElements()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testMatchXmlPath()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "XmlUtilsTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.XmlUtilsTest.testConvertingToMap()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.XmlUtilsTest.testComplexConversionToMap()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.XmlUtilsTest.testRepeatedXmlElementsToMap()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.XmlUtilsTest.testAnotherXpath()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2ddee788153e8d643c7e7cc68a2ce3a6855170fb"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 61, "deletions": 15, "lines": 76, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 27, "UPD": 5, "INS": 5, "MOV": 14, "DEL": 3, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.XmlUtils.toJsonString(org.w3c.dom.Node)", "com.intuit.karate.Script.matchNestedObject(char,java.lang.String,com.intuit.karate.MatchType,java.lang.Object,java.lang.Object,com.intuit.karate.ScriptContext)", "com.intuit.karate.XmlUtils.toJsonDoc(org.w3c.dom.Node)", "com.intuit.karate.XmlUtils.toMap(org.w3c.dom.Node)"]}, {"title": "Json path on java List types not working", "body": "```cucumber\r\n* def json = { foo: [{ bar: 1}, {bar: 2}, {bar: 3}]}\r\n* def list = json.foo\r\n* match list[0].bar == 1\r\n```\r\nFails with:\r\n```\r\njava.lang.RuntimeException: not json, cannot do json path for value: [type: LIST, value: [{\"bar\":1},{\"bar\":2},{\"bar\":3}]], path: $[0].bar\r\n\tat com.intuit.karate.Script.matchJsonPath(Script.java:497)\r\n```", "url": "https://github.com/intuit/karate/issues/9", "user": "ptrthomas", "labels": ["bug"], "created": "2017-02-23 06:25:28", "closed": "2017-02-23 07:01:54", "commits": {"08e88b59b8f75810e68a3b44fe157ed4d5ebddc2": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}, "b6c451cb57dae10380f57e860d5dd3d3b1f0ed60": {"commitGHEventType": "referenced", "commitUser": "ptrthomas"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "08e88b59b8f75810e68a3b44fe157ed4d5ebddc2", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["5a1f5b86091d474991ac1f26ab3c0e8ad813bd43"], "nameRev": "08e88b59b8f75810e68a3b44fe157ed4d5ebddc2 tags/v0.1.6~2", "commitMessage": "json path against an array was not working, fixed #9\n", "commitDateTime": "2017-02-23 12:24:52", "authoredDateTime": "2017-02-23 12:24:52", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 12, "deletions": 5, "lines": 17}, {"filePath": "karate-core/src/test/java/com/intuit/karate/ScriptTest.java", "insertions": 23, "deletions": 1, "lines": 24}, {"filePath": "karate-core/src/test/java/com/intuit/karate/syntax/syntax.feature", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.matchJsonPath(com.intuit.karate.MatchType,com.intuit.karate.ScriptValue,java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScriptTest.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptTest.testAssignJsonChunkAndUse()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testMatchJsonPathThatReturnsList()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.ScriptTest.testAssignJsonChunkListAndUse()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "b6c451cb57dae10380f57e860d5dd3d3b1f0ed60", "commitGHEventType": "referenced", "commitUser": "ptrthomas", "commitParents": ["08e88b59b8f75810e68a3b44fe157ed4d5ebddc2"], "nameRev": "b6c451cb57dae10380f57e860d5dd3d3b1f0ed60 tags/v0.1.6~1", "commitMessage": "one more json list missed in previous fix, fixes #9\n", "commitDateTime": "2017-02-23 12:51:17", "authoredDateTime": "2017-02-23 12:51:17", "commitGitStats": [{"filePath": "karate-core/src/main/java/com/intuit/karate/Script.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "karate-core/src/test/java/com/intuit/karate/syntax/agencies.json", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "karate-core/src/test/java/com/intuit/karate/syntax/syntax.feature", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Script.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.Script.evalJsonPathOnVarByName(java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["08e88b59b8f75810e68a3b44fe157ed4d5ebddc2", "b6c451cb57dae10380f57e860d5dd3d3b1f0ed60"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 16, "deletions": 5, "lines": 21, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["karate-core/src/main/java/com/intuit/karate"], "changesInPackagesSPOON": ["com.intuit.karate.Script.evalJsonPathOnVarByName(java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)", "com.intuit.karate.Script.matchJsonPath(com.intuit.karate.MatchType,com.intuit.karate.ScriptValue,java.lang.String,java.lang.String,com.intuit.karate.ScriptContext)"]}, {"title": "\"When method post\" throws NullPointerException", "body": "This works fine\r\n\r\n```\r\nFeature: Intelligence\r\n\r\n  Scenario: Creates a new model\r\n\r\n    Given url urlBase + '/model'\r\n    When method get\r\n    Then status 200\r\n    And match response == { success: true, result: '#notnull' }\r\n```\r\n\r\nBut when I change the method to post\r\n\r\n```\r\nFeature: Intelligence\r\n\r\n  Scenario: Creates a new model\r\n\r\n    Given url urlBase + '/model'\r\n    When method post\r\n    Then status 200\r\n    And match response == { success: true, result: '#notnull' }\r\n```\r\n\r\nI get this NullPointerException\r\n\r\n```java\r\njava.lang.NullPointerException\r\n\tat com.intuit.karate.StepDefs.method(StepDefs.java:197)\r\n\tat \u273d.When method post(intelligence/intelligence.feature:6)\r\n```\r\n\r\nI'm able to make POST requests to the endpoint via PostMan just fine", "url": "https://github.com/intuit/karate/issues/5", "user": "ejfrancis", "labels": ["bug"], "created": "2017-02-16 19:27:34", "closed": "2017-02-17 09:00:30", "commits": {"01467a014087915a4b4015bba07956662cfcbe3d": {"commitGHEventType": "closed", "commitUser": "ptrthomas"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "01467a014087915a4b4015bba07956662cfcbe3d", "commitGHEventType": "closed", "commitUser": "ptrthomas", "commitParents": ["7f40df1afd8523c158281504f3d754806a06091a"], "nameRev": "01467a014087915a4b4015bba07956662cfcbe3d tags/v0.1.4", "commitMessage": "ssl support without cert - closes #6, implemented accept header, better error reporting for empty request - fixes #5\n", "commitDateTime": "2017-02-17 14:22:57", "authoredDateTime": "2017-02-17 14:22:57", "commitGitStats": [{"filePath": "README.md", "insertions": 37, "deletions": 3, "lines": 40}, {"filePath": "karate-archetype/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-archetype/src/main/resources/archetype-resources/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "karate-core/src/main/java/com/intuit/karate/ScriptContext.java", "insertions": 12, "deletions": 5, "lines": 17}, {"filePath": "karate-core/src/main/java/com/intuit/karate/SslUtils.java", "insertions": 52, "deletions": 0, "lines": 52}, {"filePath": "karate-core/src/main/java/com/intuit/karate/StepDefs.java", "insertions": 17, "deletions": 7, "lines": 24}, {"filePath": "pom.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ScriptContext.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.ScriptContext", "TOT": 13, "UPD": 2, "INS": 7, "MOV": 2, "DEL": 2}]}, {"spoonFilePath": "SslUtils.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.SslUtils", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StepDefs.java", "spoonMethods": [{"spoonMethodName": "com.intuit.karate.StepDefs.accept(java.lang.String)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.intuit.karate.StepDefs.method(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.intuit.karate.StepDefs.unprepare()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}]}