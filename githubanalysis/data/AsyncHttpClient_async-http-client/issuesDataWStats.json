{"bugLabels": ["Defect"], "projectName": "AsyncHttpClient/async-http-client", "captureTime": "Fri Jul  3 16:56:08 2020", "issues": [{"created": "2020-04-08 02:06:45", "commits": {"a44aac86616f4e8ffe6977dfef0f0aa460e79d07": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.DefaultAsyncHttpClient.close()", "org.asynchttpclient.DefaultAsyncHttpClient"], "closed": "2020-04-08 07:34:59", "filteredCommits": ["a44aac86616f4e8ffe6977dfef0f0aa460e79d07"], "commitsDetails": [{"nameRev": "a44aac86616f4e8ffe6977dfef0f0aa460e79d07 tags/async-http-client-project-2.12.1~1", "commitMessage": "Fix regression not allowing disabling CookieStore, close #1714\n\nMotivation:\n\nSetting CookieStore to null in conf should be supported to disable it. Latest commit introduced a NPE regression.\n\nModification:\n\n* Protect against null CookieStore\n* Make sure to decrement CookieStore ref count when AHC instance is closed.\n\nResult:\n\nNo more NPE when CookieStore is null.\n", "commitParents": ["45b456129daa7136e6b32bb323f8d35232997a57"], "spoonStatsSkippedReason": "", "commitHash": "a44aac86616f4e8ffe6977dfef0f0aa460e79d07", "authoredDateTime": "2020-04-08 09:34:34", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 14, "deletions": 13, "lines": 27, "filePath": "client/src/main/java/org/asynchttpclient/DefaultAsyncHttpClient.java"}, {"insertions": 71, "deletions": 46, "lines": 117, "filePath": "client/src/test/java/org/asynchttpclient/DefaultAsyncHttpClientTest.java"}], "commitDateTime": "2020-04-08 09:34:34", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 0, "INS": 4, "DEL": 0, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClientTest.testWithSharedCookieStoreButNonSharedTimerShouldReScheduleCookieEvictionWhenFirstInstanceGetClosed()"}, {"UPD": 5, "TOT": 19, "MOV": 11, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClientTest.testWitDefaultConfigShouldScheduleCookieEvictionForEachAHC()"}, {"UPD": 3, "TOT": 5, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClientTest.closeSilently(java.io.Closeable)"}, {"UPD": 3, "TOT": 24, "MOV": 15, "INS": 2, "DEL": 4, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClientTest.testWithSharedNettyTimerShouldScheduleCookieEvictionOnlyOnce()"}, {"UPD": 5, "TOT": 26, "MOV": 16, "INS": 2, "DEL": 3, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClientTest.testWithSharedCookieStoreButNonSharedTimerShouldScheduleCookieEvictionForFirstAHC()"}], "spoonFilePath": "DefaultAsyncHttpClientTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClient.close()"}, {"UPD": 2, "TOT": 16, "MOV": 5, "INS": 4, "DEL": 5, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClient"}], "spoonFilePath": "DefaultAsyncHttpClient.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1714", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 14, "deletions": 13, "lines": 27, "gitFilesChange": 1}, "title": "Allow disabling cookie jar", "statsSkippedReason": "", "user": "ngbinh", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 2, "TOT": 18, "MOV": 5, "INS": 6, "DEL": 5, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "since https://github.com/AsyncHttpClient/async-http-client/commit/d4f1e5835b81a5e813033ba2a64a07b020c70007 ,I cannot disable CookieStore by ` new DefaultAsyncHttpClientConfig.Builder() .setCookieStore(null) ... .build()`. There are many usecases where we do not want ahc to handle Cookies. \r\n\r\nI am wondering if there should be a more official way of disabling cookie or at least adding a `null` check here https://github.com/AsyncHttpClient/async-http-client/blob/45b456129daa7136e6b32bb323f8d35232997a57/client/src/main/java/org/asynchttpclient/DefaultAsyncHttpClient.java#L96", "labels": ["Defect"]}, {"created": "2020-03-23 18:25:09", "user": "yunglin", "body": "version: 2.5.4\r\n```\r\njava.lang.NullPointerException: null\r\n    at org.asynchttpclient.netty.channel.ChannelManager.lambda$getClientStats$2(ChannelManager.java:483)\r\n    at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:174)\r\n    at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n    at java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n    at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n    at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n    at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\r\n    at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:566)\r\n    at org.asynchttpclient.netty.channel.ChannelManager.getClientStats(ChannelManager.java:484)\r\n    at org.asynchttpclient.DefaultAsyncHttpClient.getClientStats(DefaultAsyncHttpClient.java:285)\r\n```", "closed": "2020-04-03 20:54:48", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1710", "ttf": 11.000277777777777, "commits": {}, "labels": ["Defect"], "title": "getClientStats throws NullPointerException"}, {"created": "2020-01-07 01:23:33", "commits": {"9d0f1d78600b679026f801d6a5d536dd6bdb5ae8": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.channel.ChannelManager.updatePipelineForHttpTunneling(org.asynchttpclient.netty.channel.ChannelPipeline,org.asynchttpclient.uri.Uri)"], "closed": "2020-01-07 07:53:24", "filteredCommits": ["9d0f1d78600b679026f801d6a5d536dd6bdb5ae8"], "commitsDetails": [{"nameRev": "9d0f1d78600b679026f801d6a5d536dd6bdb5ae8 tags/async-http-client-project-2.10.5~9", "commitMessage": "Install missing WebSocketClientCompressionHandler when using HTTP proxy + wss, close #1689\n\n Motivation:\n\nWebSocketClientCompressionHandler is only installed on the no proxy path.\n\nModification:\n\nInstall WebSocketClientCompressionHandler on the proxy path too.\n\nResult:\n\nWebSocket compression work when using a proxy too.\n", "commitParents": ["087b41ad669f3dd956a66f7c4b85814bb8576f4e"], "spoonStatsSkippedReason": "", "commitHash": "9d0f1d78600b679026f801d6a5d536dd6bdb5ae8", "authoredDateTime": "2020-01-07 08:53:07", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 5, "deletions": 0, "lines": 5, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/ChannelManager.java"}], "commitDateTime": "2020-01-07 08:53:07", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 7, "MOV": 4, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.updatePipelineForHttpTunneling(org.asynchttpclient.netty.channel.ChannelPipeline,org.asynchttpclient.uri.Uri)"}], "spoonFilePath": "ChannelManager.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1689", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 5, "deletions": 0, "lines": 5, "gitFilesChange": 1}, "title": "websocket - gzip/deflate TextWebSocketFrame  through Proxy is not getting decompressed before consumed", "statsSkippedReason": "", "user": "zhp0260", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/channel"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 7, "MOV": 4, "INS": 2, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I have a situation :\r\nWebsocket ----> (proxy app:AsyncHttpClient) ----> Proxy ----> Origin Server( web site)\r\nEx: URL: wss://pshudws.365pushodds.com/zap/?uid=1234567890\r\n\r\nWhile I can get the websocket message correctly when accessed without Proxy; the app shows (junk) gzip data when accessed the same pages through Proxy.\r\n\r\nMy proxy configuration doesn't unpack the gzip/deflate TextWebSocketFrame received from Origin. I think the AsyncHttpClient should decompress it, before the response is consumed downstream.\r\n\r\nI read the source, I find websocket connect without proxy, use wsBootstrap object to handle it, when use proxy, use the httpBootstrap object to handle it. \r\n\r\nCould you please look into it, or suggest any workaround. Please let me know if you need more information.\r\n\r\nthanks,\r\n![1578360160(1)](https://user-images.githubusercontent.com/713002/71860881-5b1be480-312f-11ea-9c57-dc4174740092.png)\r\n", "labels": ["Defect"]}, {"created": "2019-09-30 17:06:48", "commits": {"e1b461ae058a87a04b58d4312155f01fec06118e": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "47bc367a61224c792a29132e32ff1954b0693217": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.webdav.WebDavCompletionHandlerBase.readXMLResponse(java.io.InputStream)", "org.asynchttpclient.webdav.WebDavCompletionHandlerBase.onThrowable(java.lang.Throwable)", "org.asynchttpclient.webdav.WebDavCompletionHandlerBase.HttpStatusWrapper", "org.asynchttpclient.webdav.WebDavCompletionHandlerBase.parse(org.w3c.dom.Document)", "org.asynchttpclient.webdav.WebDavCompletionHandlerBase"], "closed": "2019-10-09 12:10:00", "filteredCommits": ["e1b461ae058a87a04b58d4312155f01fec06118e"], "commitsDetails": [{"nameRev": "e1b461ae058a87a04b58d4312155f01fec06118e tags/async-http-client-project-2.10.4~3", "commitMessage": "Disable by default DTD parsing in webdav support, close #1666\n\nsee https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Processing\n", "commitParents": ["1e1a84409e551d8455faa9595c09b56d46e63f74"], "spoonStatsSkippedReason": "", "commitHash": "e1b461ae058a87a04b58d4312155f01fec06118e", "authoredDateTime": "2019-10-09 14:09:50", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 19, "deletions": 8, "lines": 27, "filePath": "client/src/main/java/org/asynchttpclient/webdav/WebDavCompletionHandlerBase.java"}], "commitDateTime": "2019-10-09 14:09:50", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.webdav.WebDavCompletionHandlerBase.onThrowable(java.lang.Throwable)"}, {"UPD": 1, "TOT": 5, "MOV": 1, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.webdav.WebDavCompletionHandlerBase.readXMLResponse(java.io.InputStream)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.webdav.WebDavCompletionHandlerBase.HttpStatusWrapper"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.webdav.WebDavCompletionHandlerBase.parse(org.w3c.dom.Document)"}, {"UPD": 2, "TOT": 5, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.webdav.WebDavCompletionHandlerBase"}], "spoonFilePath": "WebDavCompletionHandlerBase.java"}]}, {"nameRev": "47bc367a61224c792a29132e32ff1954b0693217 tags/async-http-client-project-2.0.40~3", "commitMessage": "Disable by default DTD parsing in webdav support, close #1666\n\nsee https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Processing\n", "commitParents": ["f88caede77bb8a1dd685a656983d4dd34286b378"], "spoonStatsSkippedReason": "", "commitHash": "47bc367a61224c792a29132e32ff1954b0693217", "authoredDateTime": "2019-10-09 14:09:50", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 19, "deletions": 8, "lines": 27, "filePath": "client/src/main/java/org/asynchttpclient/webdav/WebDavCompletionHandlerBase.java"}], "commitDateTime": "2019-10-09 14:13:42", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.webdav.WebDavCompletionHandlerBase.onThrowable(java.lang.Throwable)"}, {"UPD": 3, "TOT": 9, "MOV": 3, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.webdav.WebDavCompletionHandlerBase.readXMLResponse(java.io.InputStream)"}, {"UPD": 2, "TOT": 5, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.webdav.WebDavCompletionHandlerBase"}], "spoonFilePath": "WebDavCompletionHandlerBase.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1666", "ttf": 8.000277777777777, "gitStatsSummary": {"insertions": 19, "deletions": 8, "lines": 27, "gitFilesChange": 1}, "title": "Webdav support suffers from XXE processing security issue", "statsSkippedReason": "", "user": "TidDl3R", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/webdav"], "spoonStatsSummary": {"UPD": 5, "spoonMethodsChanged": 5, "TOT": 13, "MOV": 1, "INS": 5, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I have found some vulnerability in the latest release. Where should I report it?", "labels": ["Defect"]}, {"created": "2019-06-17 07:56:28", "commits": {"c426c545a142ef503e96d02409d1f0e6e7ae1f24": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.request.WriteListener.operationComplete(io.netty.channel.Channel,java.lang.Throwable)", "org.asynchttpclient.netty.request.WriteListener.abortOnThrowable(io.netty.channel.Channel,java.lang.Throwable)"], "closed": "2019-06-18 12:26:07", "filteredCommits": ["c426c545a142ef503e96d02409d1f0e6e7ae1f24"], "commitsDetails": [{"nameRev": "c426c545a142ef503e96d02409d1f0e6e7ae1f24 tags/async-http-client-project-2.10.1~2", "commitMessage": "Trigger retry in WriteListener on SSLException, close #1645\n\nMotivation:\n\nThere's a possibility that we have a write failure because we're trying to write on a pooled channel and the remote peer has closed the SSLEngine but we haven't process the connection close yet.\n\nIn this case, we don't trigger retry, and don't forcefully close the channel.\n\nModifications:\n\n* Trigger retry on write failure on SSLException.\n* Always close channel on write failure\n\nResult:\n\nRetry triggered on SSLEngine crash.\nNo more pooled connection in stalled state.\n", "commitParents": ["b7026a17bb4f61185f01509027636719d2782ed8"], "spoonStatsSkippedReason": "", "commitHash": "c426c545a142ef503e96d02409d1f0e6e7ae1f24", "authoredDateTime": "2019-06-18 14:25:57", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 15, "deletions": 13, "lines": 28, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/WriteListener.java"}], "commitDateTime": "2019-06-18 14:25:57", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.WriteListener.operationComplete(io.netty.channel.Channel,java.lang.Throwable)"}, {"UPD": 1, "TOT": 15, "MOV": 7, "INS": 3, "DEL": 4, "spoonMethodName": "org.asynchttpclient.netty.request.WriteListener.abortOnThrowable(io.netty.channel.Channel,java.lang.Throwable)"}], "spoonFilePath": "WriteListener.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1645", "ttf": 1.0002777777777778, "gitStatsSummary": {"insertions": 15, "deletions": 13, "lines": 28, "gitFilesChange": 1}, "title": "javax.net.ssl.SSLException: SSLEngine closed already", "statsSkippedReason": "", "user": "unoexperto", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 2, "TOT": 16, "MOV": 8, "INS": 3, "DEL": 4, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi @slandelle. I've been haunted by this exception for couple years at least and after preliminary investigation I have feeling that AHC uses single `SSLEngine` for all instances of `DefaultAsyncHttpClient` class. Which means as soon as some bad domain botches it http clients of entire app stop working.\r\n\r\nException is thrown in `io.netty.handler.ssl.SslHandler.wrap(ChannelHandlerContext ctx, boolean inUnwrap)` in line\r\n\r\n```\r\nif (result.getStatus() == Status.CLOSED) {\r\n    buf.release();\r\n    buf = null;\r\n    promise.tryFailure(SSLENGINE_CLOSED);\r\n    promise = null;\r\n    // SSLEngine has been closed already.\r\n    // Any further write attempts should be denied.\r\n    pendingUnencryptedWrites.releaseAndFailAll(ctx, SSLENGINE_CLOSED);\r\n    return;\r\n}\r\n```\r\n\r\nAnd the moment it happens it's pretty much game over for the client. All subsequent attempts to send request simply hang.\r\n\r\nCould you please clarify how it works currently and what to do?", "labels": ["Defect"]}, {"created": "2019-06-13 18:44:38", "commits": {"b7026a17bb4f61185f01509027636719d2782ed8": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.handler.intercept.Redirect30xInterceptor.exitAfterHandlingRedirect(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm)"], "closed": "2019-06-17 20:59:44", "filteredCommits": ["b7026a17bb4f61185f01509027636719d2782ed8"], "commitsDetails": [{"nameRev": "b7026a17bb4f61185f01509027636719d2782ed8 tags/async-http-client-project-2.10.1~3", "commitMessage": "Keep parts on 307, close #1643\n", "commitParents": ["84ea4ab490dc09e72257379d4050889115906222"], "spoonStatsSkippedReason": "", "commitHash": "b7026a17bb4f61185f01509027636719d2782ed8", "authoredDateTime": "2019-06-17 22:59:34", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 0, "lines": 3, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/intercept/Redirect30xInterceptor.java"}], "commitDateTime": "2019-06-17 22:59:34", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 10, "MOV": 7, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.intercept.Redirect30xInterceptor.exitAfterHandlingRedirect(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm)"}], "spoonFilePath": "Redirect30xInterceptor.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1643", "ttf": 4.000277777777778, "gitStatsSummary": {"insertions": 3, "deletions": 0, "lines": 3, "gitFilesChange": 1}, "title": "Multi-part Request body is not kept after 307 Redirects", "statsSkippedReason": "", "user": "prabhash1785", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/handler/intercept"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 10, "MOV": 7, "INS": 3, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "In my current usage of async-http-client, I notice that multi-part request body is not kept after server sends a 307 redirect for HTTP Post. It does keep request body for non-multi part data though.\r\n\r\nWe are using Async Http Client lib Version: 2.2.0\r\n\r\nMulti Part Request data is:\r\nPart 1: jsonpart string\r\nPart 2: byte array of mime data\r\n\r\nMulti-part data is set as follows:\r\n```\r\nRequest request = new RequestBuilder(Methods.POST)\r\n                       .addBodyPart(jsonPart)\r\n                       .addBodyPart(mimePart)\r\n```\r\n\r\nLooking at this code, I don't see 307Interceptor is setting MultiPart data. I am hoping I am looking at the right place.\r\nhttps://github.com/AsyncHttpClient/async-http-client/blob/6e4c1a6eb8a33964aa181721aa96b80f69c3b7bf/client/src/main/java/org/asynchttpclient/netty/handler/intercept/Redirect30xInterceptor.java#L102-L114", "labels": ["Defect"]}, {"created": "2019-05-15 21:30:21", "commits": {"4803ab464b620f7b14c56d6d2cda4bc99d518485": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2019-05-17 11:48:25", "filteredCommits": [], "commitsDetails": [{"nameRev": "4803ab464b620f7b14c56d6d2cda4bc99d518485 tags/async-http-client-project-2.9.0~1", "commitMessage": "Stop doing reverse DNS lookups (#1633), close #1632\n\n", "commitParents": ["71dad6ae761c8e3dc03c49271a487be5c7c42ba0"], "spoonStatsSkippedReason": "", "commitHash": "4803ab464b620f7b14c56d6d2cda4bc99d518485", "authoredDateTime": "2019-05-17 07:48:19", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/resolver/RequestHostnameResolver.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/ChannelManager.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/DefaultChannelPool.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/util/ProxyUtils.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/timeout/TimeoutTimerTask.java"}], "commitDateTime": "2019-05-17 13:48:19", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.resolver.RequestHostnameResolver.resolve(io.netty.resolver.NameResolver,java.net.InetSocketAddress,org.asynchttpclient.AsyncHandler)"}], "spoonFilePath": "RequestHostnameResolver.java"}, {"spoonMethods": [], "spoonFilePath": "DefaultChannelPool.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.timeout.TimeoutTimerTask.appendRemoteAddress(java.lang.StringBuilder)"}], "spoonFilePath": "TimeoutTimerTask.java"}, {"spoonMethods": [], "spoonFilePath": "ChannelManager.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.ProxyUtils.createProxyServerSelector(java.net.ProxySelector)"}], "spoonFilePath": "ProxyUtils.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1632", "ttf": 1.0002777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "DNS resolver sometimes attempts reverse lookup", "statsSkippedReason": "", "user": "n-miles", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "If you make a request to an IP address, the `RequestHostnameResolver.resolve()` method does a reverse lookup on that IP address to try to get a hostname out of it. This occurs on line 38:\r\n```java\r\nfinal String hostname = unresolvedAddress.getHostName();\r\n```\r\nJavaDoc for `InetSocketAddress.getHostName()` says\r\n```java\r\n    /**\r\n     * Gets the {@code hostname}.\r\n     * Note: This method may trigger a name service reverse lookup if the\r\n     * address was created with a literal IP address.\r\n     *\r\n     * @return  the hostname part of the address.\r\n     */\r\n```\r\nI'm guessing that this behavior is unintentional. I think that we actually want `getHostString()`, which says\r\n```java\r\n    /**\r\n     * Returns the hostname, or the String form of the address if it\r\n     * doesn't have a hostname (it was created using a literal).\r\n     * This has the benefit of <b>not</b> attempting a reverse lookup.\r\n     *\r\n     * @return the hostname, or String representation of the address.\r\n     * @since 1.7\r\n     */\r\n```\r\nThere are several calls to `getHostName()` in other parts of the codebase that also look unintentional. @slandelle, any objections if I open a PR to switch this and all other occurrences to `getHostString()`?", "labels": ["Defect"]}, {"created": "2018-10-04 21:18:40", "commits": {"c5b6857880a18d8dafda63e5000f1482d2224f7a": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.channel.ChannelManager.updatePipelineForHttpTunneling(org.asynchttpclient.netty.channel.ChannelPipeline,org.asynchttpclient.uri.Uri)", "org.asynchttpclient.test.EchoHandler.deflate(byte[])", "org.asynchttpclient.test.EchoHandler.handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"], "closed": "2018-10-05 09:54:43", "filteredCommits": ["c5b6857880a18d8dafda63e5000f1482d2224f7a"], "commitsDetails": [{"nameRev": "c5b6857880a18d8dafda63e5000f1482d2224f7a tags/async-http-client-project-2.5.4~2", "commitMessage": "HttpContentDecompressor is misplaced after upgrading pipeline for HTTP tunnelling, close #1583\n", "commitParents": ["c035ead9354f2957b180ea4f4c1fb2d479411f1b"], "spoonStatsSkippedReason": "", "commitHash": "c5b6857880a18d8dafda63e5000f1482d2224f7a", "authoredDateTime": "2018-10-05 11:54:34", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/ChannelManager.java"}, {"insertions": 28, "deletions": 12, "lines": 40, "filePath": "client/src/test/java/org/asynchttpclient/test/EchoHandler.java"}, {"insertions": 17, "deletions": 0, "lines": 17, "filePath": "client/src/test/java/org/asynchttpclient/proxy/HttpsProxyTest.java"}], "commitDateTime": "2018-10-05 11:54:34", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.proxy.HttpsProxyTest.testDecompressBodyWithProxy()"}], "spoonFilePath": "HttpsProxyTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.updatePipelineForHttpTunneling(org.asynchttpclient.netty.channel.ChannelPipeline,org.asynchttpclient.uri.Uri)"}], "spoonFilePath": "ChannelManager.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.test.EchoHandler.deflate(byte[])"}, {"UPD": 4, "TOT": 23, "MOV": 5, "INS": 6, "DEL": 8, "spoonMethodName": "org.asynchttpclient.test.EchoHandler.handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"}], "spoonFilePath": "EchoHandler.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1583", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "gzip/deflate response through Proxy is not getting decompressed before consumed.", "statsSkippedReason": "", "user": "mallik-soupati", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/channel"], "spoonStatsSummary": {"UPD": 5, "spoonMethodsChanged": 3, "TOT": 25, "MOV": 5, "INS": 7, "DEL": 8, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I have a situation where : \r\nBrowser ----> (proxy app:AsyncHttpClient) ----> Proxy ----> Origin Server( web site)\r\nEx: URL: https://example.com/startPage\r\n\r\n\r\nWhile I can view the web pages correctly when accessed without Proxy; the browser shows (junk) gzip data when accessed the same pages through Proxy.\r\n\r\nMy proxy configuration doesn't unpack the gzip/deflate response received from Origin. I think the AsyncHttpClient should decompress it, before the response is consumed downstream.\r\n\r\nCould you please look into it, or suggest any workaround. Please let me know if you need more information.\r\n\r\nthanks,\r\n", "labels": ["Defect"]}, {"created": "2018-08-10 14:05:50", "commits": {"a6d1cd2cd6cd027d9c183b023caeb77864f28691": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.channel.ChannelManager.updatePipelineForHttpTunneling(org.asynchttpclient.netty.channel.ChannelPipeline,org.asynchttpclient.uri.Uri)"], "closed": "2018-08-27 11:49:58", "filteredCommits": ["a6d1cd2cd6cd027d9c183b023caeb77864f28691"], "commitsDetails": [{"nameRev": "a6d1cd2cd6cd027d9c183b023caeb77864f28691 tags/async-http-client-project-2.5.3~3", "commitMessage": "Fix chunked request body handling with HTTPS proxy, close #1571\n\nMotivation:\n\nSending a chunked request body (hence not direct) cause AHC to crash.\n\nMotivation:\n\nFix SslHandler position that should be before the ChunkedWriteHandler.\n\nResult:\n\nChunked request works with HTTPS proxy.\n", "commitParents": ["4d03ad6616a5f8f8fe6525a5d1ae9590b36b934a"], "spoonStatsSkippedReason": "", "commitHash": "a6d1cd2cd6cd027d9c183b023caeb77864f28691", "authoredDateTime": "2018-08-27 13:49:50", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 4, "deletions": 3, "lines": 7, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/ChannelManager.java"}, {"insertions": 15, "deletions": 0, "lines": 15, "filePath": "client/src/test/java/org/asynchttpclient/proxy/HttpsProxyTest.java"}], "commitDateTime": "2018-08-27 13:49:50", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.proxy.HttpsProxyTest.testNoDirectRequestBodyWithProxy()"}], "spoonFilePath": "HttpsProxyTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.updatePipelineForHttpTunneling(org.asynchttpclient.netty.channel.ChannelPipeline,org.asynchttpclient.uri.Uri)"}], "spoonFilePath": "ChannelManager.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1571", "ttf": 16.00027777777778, "gitStatsSummary": {"insertions": 4, "deletions": 3, "lines": 7, "gitFilesChange": 1}, "title": "Chunked request body crash with HTTPS proxy", "statsSkippedReason": "", "user": "mallik-soupati", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/channel"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "AsyncHttpClient : 2.5.2\r\nNetty                  : 4.1.28.Final\r\nUpstream proxy : Burp 1.7.36\r\n\r\n```\r\nif (proxyConf.isEnabled()) {\r\n            \tRealm proxyRealm = null;\r\n            \tif ( !StringUtil.isNullOrEmpty(proxyConf.getProxyPrincipal())) {\r\n            \t\tproxyRealm = new Realm.Builder(proxyConf.getProxyPrincipal(),proxyConf.getProxyPassword())\r\n            \t\t\t.setScheme(Realm.AuthScheme.BASIC)\r\n            \t\t\t.setUsePreemptiveAuth(true)\r\n            \t\t\t.build();\r\n            \t}\r\n            \tProxyServer.Builder proxyBuilder = new ProxyServer.Builder(proxyConf.getProxyHost(), proxyConf.getProxyPort());\r\n            \tProxyServer proxyServer = null;\r\n            \tif ( proxyRealm != null ) {\r\n            \t\tproxyBuilder.setRealm(proxyRealm);\r\n            \t}\r\n            \tproxyServer = proxyBuilder\r\n            \t\t\t.setProxyType(ProxyType.HTTP)\r\n            \t\t\t.setNonProxyHosts(proxyConf.getProxyNonProxyHosts())\r\n            \t\t\t.build();\r\n                ahcConfigBuilder.setProxyServer(proxyServer);\r\n            }\r\n            if (!proxyConf.isEnablePeerValidation()) {\r\n                ahcConfigBuilder.setDisableHttpsEndpointIdentificationAlgorithm(true);\r\n            }\r\n}\r\n\r\n```\r\nAbove is my code snipped, and I get the below error when execute the request with AsycHttpClient:\r\n\r\n```\r\n2018-08-10 19:12:03,806 ERROR [          AsyncHttpClient-4-16] c.c.c.n.p.flow.WebProxyContext      : Error while processing request\r\nio.netty.handler.codec.UnsupportedMessageTypeException: org.asynchttpclient.netty.request.body.BodyChunkedInput (expected: io.netty.buffer.ByteBuf)\r\n\tat io.netty.handler.ssl.SslHandler.write(SslHandler.java:729)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:730)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:816)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:723)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.write(CombinedChannelDuplexHandler.java:528)\r\n\tat io.netty.handler.codec.MessageToMessageEncoder.write(MessageToMessageEncoder.java:101)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler.write(CombinedChannelDuplexHandler.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:730)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:816)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:723)\r\n\tat io.netty.channel.DefaultChannelPipeline.write(DefaultChannelPipeline.java:1061)\r\n\tat io.netty.channel.AbstractChannel.write(AbstractChannel.java:295)\r\n\tat org.asynchttpclient.netty.request.body.NettyBodyBody.write(NettyBodyBody.java:78)\r\n\tat org.asynchttpclient.netty.request.NettyRequestSender.writeRequest(NettyRequestSender.java:426)\r\n\tat org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithOpenChannel(NettyRequestSender.java:259)\r\n\tat org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithCertainForceConnect(NettyRequestSender.java:141)\r\n\tat org.asynchttpclient.netty.request.NettyRequestSender.sendRequest(NettyRequestSender.java:113)\r\n\tat org.asynchttpclient.netty.request.NettyRequestSender.sendNextRequest(NettyRequestSender.java:548)\r\n\tat org.asynchttpclient.netty.request.NettyRequestSender$3.lambda$call$0(NettyRequestSender.java:629)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:511)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:504)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:483)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:424)\r\n\tat io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:103)\r\n\tat io.netty.handler.ssl.SslHandler.setHandshakeSuccess(SslHandler.java:1503)\r\n\tat io.netty.handler.ssl.SslHandler.wrapNonAppData(SslHandler.java:915)\r\n\tat io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1338)\r\n\tat io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1177)\r\n\tat io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1221)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:646)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\n```\r\n\r\nI am not sure if I am missing something. Please let me know if any more information is required further.\r\nthanks,", "labels": ["Defect"]}, {"created": "2018-08-08 12:15:46", "commits": {"a3b14543b71bf1908cb58614173977d702b228ae": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "closed": "2018-08-27 11:59:46", "filteredCommits": ["a3b14543b71bf1908cb58614173977d702b228ae"], "commitsDetails": [{"nameRev": "a3b14543b71bf1908cb58614173977d702b228ae tags/async-http-client-project-2.5.3~2", "commitMessage": "Fix Response#hasResponseBody javadoc, close #1570\n", "commitParents": ["a6d1cd2cd6cd027d9c183b023caeb77864f28691"], "spoonStatsSkippedReason": "", "commitHash": "a3b14543b71bf1908cb58614173977d702b228ae", "authoredDateTime": "2018-08-27 13:59:40", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 9, "deletions": 4, "lines": 13, "filePath": "client/src/main/java/org/asynchttpclient/Response.java"}], "commitDateTime": "2018-08-27 13:59:40", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "Response.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1570", "ttf": 18.00027777777778, "gitStatsSummary": {"insertions": 9, "deletions": 4, "lines": 13, "gitFilesChange": 1}, "title": "`hasResponseBody` behaviour seems to be incosistent with the docs", "statsSkippedReason": "", "user": "silmeth", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient"], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "The [`Response` interface\u2019s `hasResponseBody` documentation ](https://static.javadoc.io/org.asynchttpclient/async-http-client/2.5.2/org/asynchttpclient/Response.html#hasResponseBody--) claims:\r\n\r\n> Return true if the response's body has been computed by an AsyncHandler. It will return false if the either AsyncHandler.onStatusReceived(HttpResponseStatus) or AsyncHandler.onHeadersReceived(HttpHeaders) returned AsyncHandler.State.ABORT\r\n\r\nwhich I understand as `true` always if the `AsyncHandler` did not return `ABORT` from the `onStatusReceived` or `onHeadersReceived` (even if the body itself is empty, in such case I would expect to get empty byte array as the accumulated body).\r\n\r\nAnd yet, if one uses the default `AsyncCompletionHandler`, which always returns `CONTINUE` from those two methods, if one gets a response with empty body (`Content-Length: 0`), then `hasResponseBody()` on the response returns `false`.\r\n\r\nThat is the case, because the `NettyResponse`, which is created by the `AsyncCompletionHandler`, implements it as:\r\n\r\n```java\r\n  @Override\r\n  public boolean hasResponseBody() {\r\n    return isNonEmpty(bodyParts);\r\n  }\r\n```\r\n\r\nI find this confusing, and believe this might be a bug.", "labels": ["Defect", "Documentation"]}, {"created": "2018-07-31 12:54:26", "commits": {"e3bbad7cba764a6bd5129b8afdbbc2f361a149c1": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2018-08-27 12:16:43", "filteredCommits": [], "commitsDetails": [{"nameRev": "e3bbad7cba764a6bd5129b8afdbbc2f361a149c1 tags/async-http-client-project-2.6.0~6", "commitMessage": "Add non-null ResponseBody for responses with empty body (#1585), close #1568\n\n* Add non-null ResponseBody for responses with empty body\r\n\r\n* Introduced empty ResponseBody as a constant\r\n", "commitParents": ["cabac4a8353aee4b8d8c2504f4c002700d0d99c2"], "spoonStatsSkippedReason": "", "commitHash": "e3bbad7cba764a6bd5129b8afdbbc2f361a149c1", "authoredDateTime": "2018-10-16 18:46:29", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 21, "deletions": 0, "lines": 21, "filePath": "extras/retrofit2/src/test/java/org/asynchttpclient/extras/retrofit/AsyncHttpClientCallTest.java"}, {"insertions": 4, "deletions": 0, "lines": 4, "filePath": "extras/retrofit2/src/main/java/org/asynchttpclient/extras/retrofit/AsyncHttpClientCall.java"}], "commitDateTime": "2018-10-16 17:46:29", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.extras.retrofit.AsyncHttpClientCall.toOkhttpResponse(org.asynchttpclient.extras.retrofit.Response)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.extras.retrofit.AsyncHttpClientCall"}], "spoonFilePath": "AsyncHttpClientCall.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.extras.retrofit.AsyncHttpClientCallTest.bodyIsNotNullInResponse()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.extras.retrofit.AsyncHttpClientCallTest.responseWithNoBody()"}], "spoonFilePath": "AsyncHttpClientCallTest.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1568", "ttf": 26.00027777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "retrofit2 extra > NullPointerException on handling \"204 No-Content\" http response", "statsSkippedReason": "", "user": "anton-fedorov", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "Hello,\r\n\r\nIt seems that [AsyncHttpClientCall.java:255](https://github.com/AsyncHttpClient/async-http-client/blob/master/extras/retrofit2/src/main/java/org/asynchttpclient/extras/retrofit/AsyncHttpClientCall.java#L255) creates response body to map to OkHttp only if there was actually response in AsyncHttp call.\r\n\r\nThis unfortunately leads to NullPointerException if you try to parse 204 HTTP Response (No Content).\r\n\r\nThis happens due to the fact that Retrofit's [OkHttpCall.java#L202](https://github.com/square/retrofit/blob/master/retrofit/src/main/java/retrofit2/OkHttpCall.java#L202) tries access `rawBody` w/o any null checks.\r\n\r\nWould it make sense to have `okHttpBody = ResponseBody.create(contentType, new byte[0])` in case if response was 204/205?", "labels": ["Defect"]}, {"created": "2018-07-10 08:29:19", "commits": {"3737fb2ddeeb2bb0b058ae248604ad7a5a2f9305": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.channel.ChannelManager.updatePipelineForHttpTunneling(org.asynchttpclient.netty.channel.ChannelPipeline,org.asynchttpclient.uri.Uri)", "org.asynchttpclient.netty.handler.intercept.ConnectSuccessInterceptor.exitAfterHandlingConnect(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer)", "org.asynchttpclient.netty.request.NettyRequestSender.drainChannelAndExecuteNextRequest(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.netty.request.Request,io.netty.util.concurrent.Future)", "org.asynchttpclient.netty.request.NettyRequestSender.abort(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Throwable)"], "closed": "2018-07-10 12:45:30", "filteredCommits": ["3737fb2ddeeb2bb0b058ae248604ad7a5a2f9305"], "commitsDetails": [{"nameRev": "3737fb2ddeeb2bb0b058ae248604ad7a5a2f9305 tags/async-http-client-project-2.5.0~2", "commitMessage": "Don't try to write proxified request until SslHandler has handshaked, close #1559\n\nMotivation:\n\nWe're trying to write the proxyfied request as soon as we've installed the SslHandler.\nBehavior seems broken and handshake times out for large request payloads.\n\nModification:\n\nDelay request until Sslhandler has handshaked.\n\nResult:\n\nNo more handshake timeouts. Note that we can still have remotely closed exceptions if remote peer closed sockets while we're uploading.\n", "commitParents": ["6e4c1a6eb8a33964aa181721aa96b80f69c3b7bf"], "spoonStatsSkippedReason": "", "commitHash": "3737fb2ddeeb2bb0b058ae248604ad7a5a2f9305", "authoredDateTime": "2018-07-10 14:45:21", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 8, "deletions": 2, "lines": 10, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/ChannelManager.java"}, {"insertions": 23, "deletions": 2, "lines": 25, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java"}, {"insertions": 9, "deletions": 2, "lines": 11, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/intercept/ConnectSuccessInterceptor.java"}], "commitDateTime": "2018-07-10 14:45:21", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.drainChannelAndExecuteNextRequest(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.netty.request.Request,io.netty.util.concurrent.Future)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.abort(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Throwable)"}], "spoonFilePath": "NettyRequestSender.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 7, "MOV": 1, "INS": 5, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.updatePipelineForHttpTunneling(org.asynchttpclient.netty.channel.ChannelPipeline,org.asynchttpclient.uri.Uri)"}], "spoonFilePath": "ChannelManager.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 9, "MOV": 5, "INS": 3, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.intercept.ConnectSuccessInterceptor.exitAfterHandlingConnect(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer)"}], "spoonFilePath": "ConnectSuccessInterceptor.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1559", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 40, "deletions": 6, "lines": 46, "gitFilesChange": 3}, "title": "Netty handshake timeout for large request body when used with proxy server", "statsSkippedReason": "", "user": "nitsh", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request", "client/src/main/java/org/asynchttpclient/netty/channel", "client/src/main/java/org/asynchttpclient/netty/handler/intercept"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 4, "TOT": 19, "MOV": 7, "INS": 10, "DEL": 1, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I am calling an email marketing service with a huge body(html). The size of the body = 117184.\r\n\r\nI am using AsyncHttpClient as follows.\r\n\r\nWhen I call the request directly, it is successful but it fails with the following exception when I try to use an internal https proxy server. But a small body with proxy server works fine. Following is the scala code :\r\n\r\n```\r\nval client = asyncHttpClient(config().setProxyServer(proxyServer(\"XX-XYXY-100X.XXXX.local\", 8080)))\r\nval whenResponse = client.preparePost(\"https://api.sendgrid.com/v3/mail/send\")\r\n  .addHeader(\"Authorization\", \"Bearer XXXXXXXXX\")\r\n  .addHeader(\"Content-Type\", \"application/json\")\r\n  .setBody(randomBody)\r\n  .execute\r\n  .get(1000, TimeUnit.SECONDS)\r\n```\r\nBasically :\r\n\r\nlarge body and no proxy server : works fine.\r\nsmall body and with and without proxy server : works fine.\r\nlarge body with proxy server : DOESN'T WORK.\r\nI see the following exception for requests with large body using proxy server.\r\n\r\n```\r\nException in thread \"main\" java.util.concurrent.ExecutionException: javax.net.ssl.SSLException: handshake timed out\r\n    at java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357)\r\n    at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1915)\r\n    at org.asynchttpclient.netty.NettyResponseFuture.get(NettyResponseFuture.java:207)\r\n    at send.RequestSender$.send1(RequestSender.scala:27)\r\n    at send.RequestSender$.delayedEndpoint$send$RequestSender$1(RequestSender.scala:47)\r\n    at send.RequestSender$delayedInit$body.apply(RequestSender.scala:14)\r\n    at scala.Function0.apply$mcV$sp(Function0.scala:34)\r\n    at scala.Function0.apply$mcV$sp$(Function0.scala:34)\r\n    at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12)\r\n    at scala.App.$anonfun$main$1$adapted(App.scala:76)\r\n    at scala.collection.immutable.List.foreach(List.scala:389)\r\n    at scala.App.main(App.scala:76)\r\n    at scala.App.main$(App.scala:74)\r\n    at send.RequestSender$.main(RequestSender.scala:14)\r\n    at send.RequestSender.main(RequestSender.scala)\r\nCaused by: javax.net.ssl.SSLException: handshake timed out\r\n    at io.netty.handler.ssl.SslHandler.handshake(...)(Unknown Source)\r\n```\r\n\r\nPS: [stackoverflow](https://stackoverflow.com/questions/51260096/netty-handshake-timeout-for-large-request-body-when-used-with-proxy-server)", "labels": ["Defect"]}, {"created": "2018-07-03 15:54:02", "user": "jogoussard", "body": "Hi\r\nI found out that the BodyDefferingAsyncHandler does not play well with the default retries on GET.\r\nIf the connection is closed after the caller thread has started consuming the body, the default behavior of the client is to retry the request, pouring the new body into the same output stream as the first request.\r\nUnless I'm mistaken BodyDefferingAsyncHandler should overwrite 'onRetry' and throw an exception there, unless there's a cleaner way to do this.\r\nThe current workaround is to configure the client with 0 retries, but as it is global, that's not a good solution.", "closed": "2018-07-11 13:46:42", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1555", "ttf": 7.000277777777778, "commits": {}, "labels": ["Contributions Welcome!", "Defect"], "title": "BodyDefferingAsyncHandler should not retry"}, {"created": "2018-06-04 09:20:08", "commits": {"8093b7803252008cf46f984e3d82cb59fcd07b9c": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 0, "closed": "2018-06-04 09:24:26", "filteredCommits": [], "commitsDetails": [{"nameRev": "8093b7803252008cf46f984e3d82cb59fcd07b9c tags/async-http-client-project-2.4.9~1", "commitMessage": "Put hamcrest and mockito into Maven test scope, close #1549 (#1550)\n\n", "commitParents": ["ee241fedd3db29829d39caa402584268969f3cf1"], "spoonStatsSkippedReason": "", "commitHash": "8093b7803252008cf46f984e3d82cb59fcd07b9c", "authoredDateTime": "2018-06-04 11:24:24", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 2, "deletions": 0, "lines": 2, "filePath": "pom.xml"}], "commitDateTime": "2018-06-04 11:24:24", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1549", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Put hamcrest and mockito into Maven test scope", "statsSkippedReason": "", "user": "ppalaga", "changesInPackagesGIT": [], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "`<scope>test</scope>` was perhaps omitted unintentionally when switching from powermock to mockito?\r\n\r\nhttps://github.com/AsyncHttpClient/async-http-client/commit/7416a3867127879d4bcd8a2dc44ad00029e190a0#diff-600376dffeb79835ede4a0b285078036L386\r\n\r\nA PR follows.", "labels": ["Defect"]}, {"created": "2018-04-29 11:46:29", "commits": {"6e1b1d3a10b0efd7539029d33765f265d84dc2c0": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.oauth.OAuthSignatureCalculatorInstance.computeSignature(org.asynchttpclient.oauth.ConsumerKey,org.asynchttpclient.oauth.RequestToken,org.asynchttpclient.uri.Uri,java.lang.String,java.util.List,java.util.List,long,java.lang.String)"], "closed": "2018-04-29 13:57:33", "filteredCommits": ["6e1b1d3a10b0efd7539029d33765f265d84dc2c0"], "commitsDetails": [{"nameRev": "6e1b1d3a10b0efd7539029d33765f265d84dc2c0 tags/async-http-client-project-2.4.7~1", "commitMessage": "Fix OAuthSignatureCalculatorInstance switched query and form params, close #1540\n\nMotivation:\n\nOAuthSignatureCalculatorInstance#computeSignature switched form and\nquery params parameter when calling signatureBaseString.\n\nModification:\n\nFix parameters order.\n\nResult:\n\nValid OAuth signature\n", "commitParents": ["cd8ddd71df814bf326c900afc8a9521ab53f286a"], "spoonStatsSkippedReason": "", "commitHash": "6e1b1d3a10b0efd7539029d33765f265d84dc2c0", "authoredDateTime": "2018-04-29 15:57:17", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/oauth/OAuthSignatureCalculatorInstance.java"}], "commitDateTime": "2018-04-29 15:57:17", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculatorInstance.computeSignature(org.asynchttpclient.oauth.ConsumerKey,org.asynchttpclient.oauth.RequestToken,org.asynchttpclient.uri.Uri,java.lang.String,java.util.List,java.util.List,long,java.lang.String)"}], "spoonFilePath": "OAuthSignatureCalculatorInstance.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1540", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "Regression introduced in the latest 2.4.5 version", "statsSkippedReason": "", "user": "doom369", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/oauth"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hello. I have code:\r\n\r\n```\r\n    private final AsyncHttpClient asyncHttpClient = new DefaultAsyncHttpClient(\r\n            new DefaultAsyncHttpClientConfig.Builder()\r\n                .setUserAgent(null)\r\n                .setKeepAlive(true)\r\n                .setUseNativeTransport(Epoll.isAvailable())\r\n                    .build()\r\n    );\r\n\r\n    //@Ignore(\"requires real credentials\")\r\n    public void testSend() throws Exception {\r\n        TwitterProperties twitterProperties = new TwitterProperties(Collections.emptyMap());\r\n        TwitterWrapper twitterWrapper = new TwitterWrapper(twitterProperties, asyncHttpClient);\r\n\r\n        String userToken = \"xxx\";\r\n        String userSecret = \"xxx\";\r\n        String message = \"Hello!\";\r\n\r\n        twitterWrapper.send(userToken, userSecret, message,\r\n                new AsyncCompletionHandler<Response>() {\r\n                    @Override\r\n                    public Response onCompleted(Response response) throws Exception {\r\n                        if (response.getStatusCode() != HttpResponseStatus.OK.code()) {\r\n                            System.out.println(\"Error sending twit. Reason : \" + response.getResponseBody());\r\n                        }\r\n                        assertEquals(200, response.getStatusCode());\r\n                        return response;\r\n                    }\r\n\r\n                    @Override\r\n                    public void onThrowable(Throwable t) {\r\n                        t.printStackTrace();\r\n                        System.out.println(\"Error sending twit.\");\r\n                    }\r\n                });\r\n    }\r\n\r\n    public void send(String token, String secret, String message,\r\n                     AsyncCompletionHandler<Response> handler) {\r\n        asyncHttpClient\r\n                .preparePost(TWITTER_UPDATE_STATUS_URL)\r\n                .addQueryParam(\"status\", message)\r\n                .setSignatureCalculator(new OAuthSignatureCalculator(consumerKey, new RequestToken(token, secret)))\r\n                .execute(handler);\r\n    }\r\n```\r\n\r\nIt works fine with 2.4.4, but not with 2.4.5. Have you changed some code with `OAuthSignatureCalculator` recently?\r\n\r\nTwitter returns \"not autorized\" error with the latest version. It may be connected with order of the params of request.\r\n", "labels": ["Defect"]}, {"created": "2018-03-21 11:41:17", "commits": {"ed5552bb10263b9e94ba0ea9e31eea9de6d49338": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.ssl.DefaultSslEngineFactory.newSslEngine(org.asynchttpclient.AsyncHttpClientConfig,java.lang.String,int)"], "closed": "2018-03-22 10:03:14", "filteredCommits": ["ed5552bb10263b9e94ba0ea9e31eea9de6d49338"], "commitsDetails": [{"nameRev": "ed5552bb10263b9e94ba0ea9e31eea9de6d49338 tags/async-http-client-project-2.4.5~5", "commitMessage": "Don't set peer domain and port in SSLEngine when HttpsEndpointIdentificationAlgorithm is disabled, close #1535\n\nMotivation:\n\nSome broken TLS implementations crash on SSL handshakes that have host\nand port. Browers handle this by retrying without those parameters, but\nthat\u2019s definitively not something we\u2019ll implement.\n\nDisabling HttpsEndpointIdentificationAlgorithm should suffice to be\nable to connect to such broken server.\n\nModifications:\n\nWhen HttpsEndpointIdentificationAlgorithm is disabled (that disables\nSNI and hostname verification), we want to not set peer domain and port\non the SSLEngine so those are not sent in the SSL handshake and make\nbroken servers crash.\n\nResult:\n\nIt\u2019s now possible to connect to broken servers that don\u2019t support\nhostname and port in SSL handshake.\n", "commitParents": ["12b49e9759e6e8bf2b5ea818736d8da4b1964c1b"], "spoonStatsSkippedReason": "", "commitHash": "ed5552bb10263b9e94ba0ea9e31eea9de6d49338", "authoredDateTime": "2018-03-22 11:02:56", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 4, "deletions": 2, "lines": 6, "filePath": "client/src/main/java/org/asynchttpclient/netty/ssl/DefaultSslEngineFactory.java"}], "commitDateTime": "2018-03-22 11:02:56", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.ssl.DefaultSslEngineFactory.newSslEngine(org.asynchttpclient.AsyncHttpClientConfig,java.lang.String,int)"}], "spoonFilePath": "DefaultSslEngineFactory.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1535", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 4, "deletions": 2, "lines": 6, "gitFilesChange": 1}, "title": "java.net.ConnectException: handshake alert: unrecognized_name", "statsSkippedReason": "", "user": "coud", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/ssl"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I posted this issue in stackoverflow and wanted to reach more people regarding this issue. This might be not an issue with AHC but I wanted to know a solution to this specific for AHC.  \r\n\r\nhttps://stackoverflow.com/questions/49399908/java-net-connectexception-handshake-alert-unrecognized-name\r\n\r\nI am using the library org.asynchttpclient:async-http-client:2.4.0 to scrape multiple urls of different hosts at the same time. I'm having this issue with the website https://www.westcommunitycu.org/index.shtml where the library fails to get a response. The error is java.net.ConnectException: handshake alert:  unrecognized_name\r\n\r\nI already read that disabling sni in java (setting -Djsse.enableSNIExtension=false) will fix the issue and it really fixes it. But another site https://www.cityftmyers.com is having an error java.net.ConnectException: https://www.cityftmyers.com:443 when SNI is disabled.\r\n\r\nI need to support both instances not the global disable sni property.", "labels": ["Defect"]}, {"created": "2018-02-27 13:21:32", "commits": {"cce7a8ea6517ae9f6e60a870be0d181a2582f65b": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.channel.ChannelManager.updatePipelineForHttpTunneling(org.asynchttpclient.netty.channel.ChannelPipeline,org.asynchttpclient.uri.Uri)"], "closed": "2018-02-27 13:23:58", "filteredCommits": ["cce7a8ea6517ae9f6e60a870be0d181a2582f65b"], "commitsDetails": [{"nameRev": "cce7a8ea6517ae9f6e60a870be0d181a2582f65b tags/async-http-client-project-2.4.3~1", "commitMessage": "ChannelManager#updatePipelineForHttpTunneling doesn't position handlers properly wrt additionalChannelInitializer, close #1529\n\nMotivation:\n\n030e3dd4c7f3e49180724b72c59f0f660c1b4dcf introduced a regression where\nChannelManager#updatePipelineForHttpTunneling uses `addFirst` to set\nhandlers in the pipeline. But additionalChannelInitializer might have\nset handlers that require to be in front of the pipeline.\n\nModification:\n\nSet position relative to AHC handler.\n\nResult:\n\nProper handler positions\n", "commitParents": ["2064391500207501889b671f518e043f9acc42d1"], "spoonStatsSkippedReason": "", "commitHash": "cce7a8ea6517ae9f6e60a870be0d181a2582f65b", "authoredDateTime": "2018-02-27 14:23:46", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 7, "deletions": 8, "lines": 15, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/ChannelManager.java"}], "commitDateTime": "2018-02-27 14:23:46", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 10, "MOV": 5, "INS": 2, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.updatePipelineForHttpTunneling(org.asynchttpclient.netty.channel.ChannelPipeline,org.asynchttpclient.uri.Uri)"}], "spoonFilePath": "ChannelManager.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1529", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 7, "deletions": 8, "lines": 15, "gitFilesChange": 1}, "title": "ChannelManager#updatePipelineForHttpTunneling doesn't position handlers properly wrt additionalChannelInitializer", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/channel"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 10, "MOV": 5, "INS": 2, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Regression introduced in 030e3dd4c7f3e49180724b72c59f0f660c1b4dcf", "labels": ["Defect"]}, {"created": "2018-02-25 13:49:43", "commits": {"4469c30f7d54352865ff321b0de0148f9698c9b5": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.request.body.generator.ByteArrayBodyGenerator"], "closed": "2018-02-25 20:45:02", "filteredCommits": ["4469c30f7d54352865ff321b0de0148f9698c9b5"], "commitsDetails": [{"nameRev": "4469c30f7d54352865ff321b0de0148f9698c9b5 tags/async-http-client-project-2.4.3~4", "commitMessage": "Revert ByteArrayBodyGenerator constructor made package private by mistake, close #1526\n", "commitParents": ["dfaaa9db354a6f9d7afde7084cdbc5903b560d4e"], "spoonStatsSkippedReason": "", "commitHash": "4469c30f7d54352865ff321b0de0148f9698c9b5", "authoredDateTime": "2018-02-25 21:44:45", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/request/body/generator/ByteArrayBodyGenerator.java"}], "commitDateTime": "2018-02-25 21:44:45", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.generator.ByteArrayBodyGenerator"}], "spoonFilePath": "ByteArrayBodyGenerator.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1526", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "ByteArrayBodyGenerator construcor not visible", "statsSkippedReason": "", "user": "maltalex", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/request/body/generator"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "In 8daebe0b00b7e1a16ee29f71b371c23310b82065, The `ByteArrayBodyGenerator` constructor suddenly stopped being `public` unlike every other `BodyGenerator`. This isn't detected by tests since `ByteArrayBodyGeneratorTest` is in the same package - `org.asynchttpclient.request.body.generator`.\r\n\r\nWas this intentional? All versions past this commit (2.1.1 and newer) cannot `POST` byte arrays without resorting to reflection.", "labels": ["Defect"]}, {"created": "2018-02-15 09:14:01", "commits": {"dee8e933685e2ecad4756909e548eb3d01467ae0": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.request.NettyRequestFactory", "org.asynchttpclient.netty.request.NettyRequestFactory.newNettyRequest(org.asynchttpclient.Request,boolean,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.Realm,org.asynchttpclient.Realm)"], "closed": "2018-02-15 09:37:37", "filteredCommits": ["dee8e933685e2ecad4756909e548eb3d01467ae0"], "commitsDetails": [{"nameRev": "dee8e933685e2ecad4756909e548eb3d01467ae0 tags/async-http-client-project-2.4.1~2", "commitMessage": "Force Content-Length to 0 when there's no body but method typically uses one, close #1521\n\nMotivation:\n\nFrom RFC7230:\n\nA user agent SHOULD send a Content-Length in a request message when\nno Transfer-Encoding is sent and the request method defines a meaning\nfor an enclosed payload body. For example, a Content-Length header\nfield is normally sent in a POST request even when the value is 0\n(indicating an empty payload body). A user agent SHOULD NOT send a\nContent-Length header field when the request message does not contain\na payload body and the method semantics do not anticipate such a\nbody.\n\nSome servers, such as IIS, don\u2019t support POST requests without\nContent-Length nor transfer encoding.\n\nModification:\n\nForce a 0 Content-Length for PUT, POST and PATCH requests without a\nbody.\n\nResult:\n\nNo more 411 Length Required\n", "commitParents": ["056f89660739b4bd4b230a7be98de3e21ea14ad4"], "spoonStatsSkippedReason": "", "commitHash": "dee8e933685e2ecad4756909e548eb3d01467ae0", "authoredDateTime": "2018-02-15 10:37:23", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 16, "deletions": 0, "lines": 16, "filePath": "client/src/test/java/org/asynchttpclient/BasicHttpTest.java"}, {"insertions": 8, "deletions": 5, "lines": 13, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactory.java"}], "commitDateTime": "2018-02-15 10:37:23", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.BasicHttpTest.postWithBody()"}], "spoonFilePath": "BasicHttpTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestFactory"}, {"UPD": 0, "TOT": 8, "MOV": 5, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestFactory.newNettyRequest(org.asynchttpclient.Request,boolean,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.Realm,org.asynchttpclient.Realm)"}], "spoonFilePath": "NettyRequestFactory.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1521", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 8, "deletions": 5, "lines": 13, "gitFilesChange": 1}, "title": "Force Content-Length to 0 when there's no body but method typically uses one", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 9, "MOV": 5, "INS": 3, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "From [RFC7230](https://tools.ietf.org/html/rfc7230#section-3.3.2):\r\n\r\n> A user agent SHOULD send a Content-Length in a request message when\r\n   no Transfer-Encoding is sent and the request method defines a meaning\r\n   for an enclosed payload body.  For example, a Content-Length header\r\n   field is normally sent in a POST request even when the value is 0\r\n   (indicating an empty payload body).  A user agent SHOULD NOT send a\r\n   Content-Length header field when the request message does not contain\r\n   a payload body and the method semantics do not anticipate such a\r\n   body.", "labels": ["Defect"]}, {"created": "2018-02-09 18:54:03", "commits": {"280683a7e59453f71f0ad16a2b0bcc4d8419de70": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.channel.ProxyPartitionKey", "org.asynchttpclient.channel.CompositePartitionKey.equals(java.lang.Object)", "org.asynchttpclient.channel.ProxyPartitionKey.hashCode()", "org.asynchttpclient.channel.CompositePartitionKey.toString()", "org.asynchttpclient.channel.ProxyPartitionKey.equals(java.lang.Object)", "org.asynchttpclient.channel.PerHostChannelPoolPartitioning.getPartitionKey(org.asynchttpclient.uri.Uri,java.lang.String,org.asynchttpclient.proxy.ProxyServer)", "org.asynchttpclient.channel.ProxyPartitionKey.toString()"], "closed": "2018-02-12 16:26:25", "filteredCommits": ["280683a7e59453f71f0ad16a2b0bcc4d8419de70"], "commitsDetails": [{"nameRev": "280683a7e59453f71f0ad16a2b0bcc4d8419de70 tags/async-http-client-project-2.4.0~1", "commitMessage": "Fix channel pool key when setting virtual host, close #1519\n\nMotivation:\n\nKey should still account for hostname when setting a virtual host.\n\nModification:\n\nHave both virtual host and hostname in the key\n\nResult:\n\nAHC pools the proper connection when using virtual hosts\n", "commitParents": ["935942cb6e737f73842eb96e23ae9a51ffc19c50"], "spoonStatsSkippedReason": "", "commitHash": "280683a7e59453f71f0ad16a2b0bcc4d8419de70", "authoredDateTime": "2018-02-12 17:26:13", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 49, "deletions": 47, "lines": 96, "filePath": "client/src/main/java/org/asynchttpclient/channel/ChannelPoolPartitioning.java"}], "commitDateTime": "2018-02-12 17:26:13", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 18, "TOT": 23, "MOV": 4, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.channel.ProxyPartitionKey"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.channel.CompositePartitionKey.equals(java.lang.Object)"}, {"UPD": 7, "TOT": 17, "MOV": 10, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.channel.ProxyPartitionKey.hashCode()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.channel.CompositePartitionKey.toString()"}, {"UPD": 15, "TOT": 38, "MOV": 20, "INS": 0, "DEL": 3, "spoonMethodName": "org.asynchttpclient.channel.ProxyPartitionKey.equals(java.lang.Object)"}, {"UPD": 2, "TOT": 15, "MOV": 9, "INS": 2, "DEL": 2, "spoonMethodName": "org.asynchttpclient.channel.PerHostChannelPoolPartitioning.getPartitionKey(org.asynchttpclient.uri.Uri,java.lang.String,org.asynchttpclient.proxy.ProxyServer)"}, {"UPD": 13, "TOT": 14, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.channel.ProxyPartitionKey.toString()"}], "spoonFilePath": "ChannelPoolPartitioning.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1519", "ttf": 2.000277777777778, "gitStatsSummary": {"insertions": 49, "deletions": 47, "lines": 96, "gitFilesChange": 1}, "title": "Requests with virtual host sent to wrong destination when keep-alive is enabled", "statsSkippedReason": "", "user": "yifanmai", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/channel"], "spoonStatsSummary": {"UPD": 55, "spoonMethodsChanged": 7, "TOT": 109, "MOV": 44, "INS": 4, "DEL": 6, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Scenario:\r\n\r\n1.  The client sends a request to `10.0.0.1` with virtual host `virtualhost.example` with keep-alive enabled.\r\n2. Shortly after the first request is complete and before the connection is closed, the client sends a request to `10.0.0.2` with virtual host `virtualhost.example` with keep-alive enabled.\r\n\r\nExpected behavior: Request 1 is sent to `10.0.0.1` and request 2 is sent to `10.0.0.2`.\r\n\r\nActual behavior: Both requests are sent to `10.0.0.1`.\r\n\r\nThis bug occurs because the client uses the virtual host alone as the channel pool partition key when a virtual host is set for a request. This causes the client to incorrectly reuse connections with the same virtual host even if the physical destination address differs. This can be fixed by changing channel pool partition key to a (base URL, virtual host) tuple.", "labels": ["Defect"]}, {"created": "2018-02-07 09:21:04", "commits": {"22211e543e850a5c1e9836ba4b08a2880c36d91b": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.handler.intercept.Interceptors", "org.asynchttpclient.netty.handler.intercept.Interceptors.exitAfterIntercept(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.netty.handler.intercept.AsyncHandler,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.netty.handler.intercept.HttpResponseStatus,io.netty.handler.codec.http.HttpHeaders)"], "closed": "2018-02-07 13:13:16", "filteredCommits": ["22211e543e850a5c1e9836ba4b08a2880c36d91b"], "commitsDetails": [{"nameRev": "22211e543e850a5c1e9836ba4b08a2880c36d91b tags/async-http-client-project-2.4.0~6", "commitMessage": "Fix NPE on invalid cookie, close #1512\n\nMotivation:\n\nCookie could be null if the Set-Cookie header is malformed or invalid.\nWe need to protect against those.\n\nThen, we\u2019re always using the strict decoder without honoring the config\nproperty.\n\nModifications:\n\n* protect against null cookies\n* honor `useLaxCookieEncoder` config\n\nResult:\n\nNo more NPE on invalid cookies\n", "commitParents": ["1f2707f762a9983dac3e54da1c3cacf587a9f7e4"], "spoonStatsSkippedReason": "", "commitHash": "22211e543e850a5c1e9836ba4b08a2880c36d91b", "authoredDateTime": "2018-02-07 14:12:58", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 7, "deletions": 2, "lines": 9, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/intercept/Interceptors.java"}], "commitDateTime": "2018-02-07 14:12:58", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.intercept.Interceptors"}, {"UPD": 1, "TOT": 5, "MOV": 1, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.intercept.Interceptors.exitAfterIntercept(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.netty.handler.intercept.AsyncHandler,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.netty.handler.intercept.HttpResponseStatus,io.netty.handler.codec.http.HttpHeaders)"}], "spoonFilePath": "Interceptors.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1512", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 7, "deletions": 2, "lines": 9, "gitFilesChange": 1}, "title": "NPE on ThreadSafeCookieStore", "statsSkippedReason": "", "user": "edugueperouxWeborama", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/handler/intercept"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 2, "TOT": 7, "MOV": 1, "INS": 4, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi,\r\n\r\nOn a specific URL, \"https://www.puppyspot.com./puppies-for-sale/breed/goldendoodle/puppy/537635/?breed_id=334\", we get the following exception using AHC 2.3.0 :\r\n\r\n java.lang.NullPointerException\r\n\tat org.asynchttpclient.cookie.ThreadSafeCookieStore.add(ThreadSafeCookieStore.java:144)\r\n\tat org.asynchttpclient.cookie.ThreadSafeCookieStore.add(ThreadSafeCookieStore.java:36)\r\n\tat org.asynchttpclient.netty.handler.intercept.Interceptors.exitAfterIntercept(Interceptors.java:75)\r\n\tat org.asynchttpclient.netty.handler.HttpHandler.handleHttpResponse(HttpHandler.java:77)\r\n\tat org.asynchttpclient.netty.handler.HttpHandler.handleRead(HttpHandler.java:139)\r\n\tat org.asynchttpclient.netty.handler.AsyncHttpClientHandler.channelRead(AsyncHttpClientHandler.java:76)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:284)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1388)\r\n\tat io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1159)\r\n\tat io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1202)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1414)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:945)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:141)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\nI get also this exception with release 2.2.1.", "labels": ["Defect"]}, {"created": "2018-01-29 18:35:41", "commits": {"050471d45a69e1f05b8cf3f323f75b319e2f0106": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.channel.NettyConnectListener.onSuccess(io.netty.channel.Channel,java.net.InetSocketAddress)", "org.asynchttpclient.netty.channel.ChannelManager.addSslHandler(org.asynchttpclient.netty.channel.ChannelPipeline,org.asynchttpclient.uri.Uri,java.lang.String,boolean)", "org.asynchttpclient.netty.channel.ChannelManager.addSslHandler(org.asynchttpclient.netty.channel.ChannelPipeline,org.asynchttpclient.uri.Uri,java.lang.String)"], "closed": "2018-01-29 21:21:07", "filteredCommits": ["050471d45a69e1f05b8cf3f323f75b319e2f0106"], "commitsDetails": [{"nameRev": "050471d45a69e1f05b8cf3f323f75b319e2f0106 tags/async-http-client-project-2.2.1~3", "commitMessage": "Make socks proxy work with https, fix #1507\n\nMotivation:\n\nAll requests to HTTPS URLs via a SOCKS proxy fail with ClosedChannelException due to SslHandler is added to the netty channel pipeline before Socks4ProxyHandler/Socks5ProxyHandler.\n\nModifications:\n\nMake sure SslHandler is added into the channel pipeline after Socks4ProxyHandler/Socks5ProxyHandler.\n\nResult:\n\nSocks proxy works with HTTPS.\n", "commitParents": ["a1d06f7f7999e8be040322bca75795bf7bca9a37"], "spoonStatsSkippedReason": "", "commitHash": "050471d45a69e1f05b8cf3f323f75b319e2f0106", "authoredDateTime": "2018-01-29 21:08:20", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 5, "deletions": 2, "lines": 7, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/ChannelManager.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/NettyConnectListener.java"}], "commitDateTime": "2018-01-29 22:20:12", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.addSslHandler(org.asynchttpclient.netty.channel.ChannelPipeline,org.asynchttpclient.uri.Uri,java.lang.String,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.addSslHandler(org.asynchttpclient.netty.channel.ChannelPipeline,org.asynchttpclient.uri.Uri,java.lang.String)"}], "spoonFilePath": "ChannelManager.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.NettyConnectListener.onSuccess(io.netty.channel.Channel,java.net.InetSocketAddress)"}], "spoonFilePath": "NettyConnectListener.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1507", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 6, "deletions": 3, "lines": 9, "gitFilesChange": 2}, "title": "Socks proxy does not work with https", "statsSkippedReason": "", "user": "daemas", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/channel"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 3, "TOT": 4, "MOV": 1, "INS": 3, "DEL": 0, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Attempt to use SOCKS v4/v5 proxy when connecting to a secure (https) URL leads to java.nio.channels.ClosedChannelException. This is caused by the fact that SslHandler is added to the netty channel pipeline before Socks5ProxyHandler/Socks4ProxyHandler, while it must be added after.", "labels": ["Defect"]}, {"created": "2018-01-24 08:31:35", "commits": {"304a1f5891a240ed2cd597c4530ee73d55255ee4": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.ssl.DefaultSslEngineFactory.newSslEngine(org.asynchttpclient.AsyncHttpClientConfig,java.lang.String,int)", "org.asynchttpclient.netty.ssl.SslEngineFactoryBase.domain(java.lang.String)", "org.asynchttpclient.netty.ssl.JsseSslEngineFactory.newSslEngine(org.asynchttpclient.AsyncHttpClientConfig,java.lang.String,int)"], "closed": "2018-01-24 10:44:20", "filteredCommits": ["304a1f5891a240ed2cd597c4530ee73d55255ee4"], "commitsDetails": [{"nameRev": "304a1f5891a240ed2cd597c4530ee73d55255ee4 tags/async-http-client-project-2.2.1~7", "commitMessage": "Normalize SSL domain name from hostname when it's a FQDM, close #1505\n\nMotivation:\n\nWhen hostname is a FQDN, AHC crashes when performing TLS handshake.\n\nModification:\n\nRemove the trailing dot when configuring the SNI/hostname verification\nhostname.\n\nResult:\n\nHandshake successful with FQDN\n", "commitParents": ["f8b28f5d013d3406ae89253e43483cbcda61e904"], "spoonStatsSkippedReason": "", "commitHash": "304a1f5891a240ed2cd597c4530ee73d55255ee4", "authoredDateTime": "2018-01-24 11:44:06", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/ssl/JsseSslEngineFactory.java"}, {"insertions": 7, "deletions": 0, "lines": 7, "filePath": "client/src/main/java/org/asynchttpclient/netty/ssl/SslEngineFactoryBase.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/ssl/DefaultSslEngineFactory.java"}], "commitDateTime": "2018-01-24 11:44:06", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.ssl.JsseSslEngineFactory.newSslEngine(org.asynchttpclient.AsyncHttpClientConfig,java.lang.String,int)"}], "spoonFilePath": "JsseSslEngineFactory.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.ssl.SslEngineFactoryBase.domain(java.lang.String)"}], "spoonFilePath": "SslEngineFactoryBase.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.ssl.DefaultSslEngineFactory.newSslEngine(org.asynchttpclient.AsyncHttpClientConfig,java.lang.String,int)"}], "spoonFilePath": "DefaultSslEngineFactory.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1505", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 9, "deletions": 2, "lines": 11, "gitFilesChange": 3}, "title": "SSL handshake failure when url's hostname is a FQDN", "statsSkippedReason": "", "user": "fistons", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/ssl"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 3, "TOT": 5, "MOV": 2, "INS": 3, "DEL": 0, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "When I try to access some https website (on Cloudfront or Cloudflare CDN mainly), I've got a lot of `Received fatal alert: handshake_failure, dropping`\r\n\r\nHere is a example of the logs (with `-Djavax.net.debug=ssl`)\r\n\r\n```\r\nUsing SSLEngineImpl.\r\nAllow unsafe renegotiation: false\r\nAllow legacy hello messages: true\r\nIs initial handshake: true\r\nIs secure renegotiation: false\r\nIgnoring unsupported cipher suite: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 for TLSv1\r\nIgnoring unsupported cipher suite: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 for TLSv1\r\nIgnoring unsupported cipher suite: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 for TLSv1\r\nIgnoring unsupported cipher suite: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 for TLSv1.1\r\nIgnoring unsupported cipher suite: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 for TLSv1.1\r\nIgnoring unsupported cipher suite: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 for TLSv1.1\r\n%% No cached client session\r\n*** ClientHello, TLSv1.2\r\nRandomCookie:  GMT: 1516781808 bytes = { 64, 126, 229, 204, 228, 249, 140, 155, 189, 197, 99, 107, 21, 117, 245, 152, 65, 177, 119, 166, 67, 106, 117, 162, 182, 118, 84, 156 }\r\nSession ID:  {}\r\nCipher Suites: [TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA]\r\nCompression Methods:  { 0 }\r\nExtension elliptic_curves, curve names: {secp256r1, secp384r1, secp521r1, sect283k1, sect283r1, sect409k1, sect409r1, sect571k1, sect571r1, secp256k1}\r\nExtension ec_point_formats, formats: [uncompressed]\r\nExtension signature_algorithms, signature_algorithms: SHA512withECDSA, SHA512withRSA, SHA384withECDSA, SHA384withRSA, SHA256withECDSA, SHA256withRSA, SHA256withDSA, SHA224withECDSA, SHA224withRSA, SHA224withDSA, SHA1withECDSA, SHA1withRSA, SHA1withDSA\r\nExtension extended_master_secret\r\nExtension renegotiation_info, renegotiated_connection: <empty>\r\n***\r\nAsyncHttpClient-2-7, WRITE: TLSv1.2 Handshake, length = 134\r\nAsyncHttpClient-2-7, READ: TLSv1.2 Alert, length = 2\r\nAsyncHttpClient-2-7, RECV TLSv1.2 ALERT:  fatal, handshake_failure\r\nAsyncHttpClient-2-7, fatal: engine already closed.  Rethrowing javax.net.ssl.SSLException: Received fatal alert: handshake_failure\r\nAsyncHttpClient-2-7, fatal: engine already closed.  Rethrowing javax.net.ssl.SSLException: Received fatal alert: handshake_failure\r\nAsyncHttpClient-2-7, called closeOutbound()\r\nAsyncHttpClient-2-7, closeOutboundInternal()\r\nAsyncHttpClient-2-7, SEND TLSv1.2 ALERT:  warning, description = close_notify\r\nAsyncHttpClient-2-7, WRITE: TLSv1.2 Alert, length = 2\r\nAsyncHttpClient-2-7, called closeInbound()\r\nAsyncHttpClient-2-7, fatal: engine already closed.  Rethrowing javax.net.ssl.SSLException: Inbound closed before receiving peer's close_notify: possible truncation attack?\r\nAsyncHttpClient-2-7, called closeOutbound()\r\nAsyncHttpClient-2-7, closeOutboundInternal()\r\n2018-01-24 09:21:04.106  WARN 31493 --- [cHttpClient-2-7] c.w.b.f.h.async.AsyncHttpFetcher         : Error while fetching https://m.20minutos.es/: Received fatal alert: handshake_failure, dropping\r\nAsyncHttpClient-2-7, called closeOutbound()\r\nAsyncHttpClient-2-7, closeOutboundInternal()\r\nAsyncHttpClient-2-7, READ: TLSv1.2 Alert, length = 2\r\nAsyncHttpClient-2-7, RECV TLSv1.2 ALERT:  fatal, handshake_failure\r\nAsyncHttpClient-2-7, fatal: engine already closed.  Rethrowing javax.net.ssl.SSLException: Received fatal alert: handshake_failure\r\nAsyncHttpClient-2-7, fatal: engine already closed.  Rethrowing javax.net.ssl.SSLException: Received fatal alert: handshake_failure\r\nAsyncHttpClient-2-7, called closeOutbound()\r\nAsyncHttpClient-2-7, closeOutboundInternal()\r\nAsyncHttpClient-2-7, called closeInbound()\r\nAsyncHttpClient-2-7, closeInboundInternal()\r\nAsyncHttpClient-2-7, closeOutboundInternal()\r\n```\r\n\r\nI'm using async-http-client 2.2.0 with Oracle Java:\r\n```\r\njava version \"1.8.0_161\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_161-b12)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.161-b12, mixed mode)\r\n```", "labels": ["Defect"]}, {"created": "2018-01-22 13:05:47", "commits": {"e398ee048d002b06697e499c5c2e227e83de06fc": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "ed791084b349aa5fca0d05b949c73988a3ffcb78": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.extras.typesafeconfig.AsyncHttpClientTypesafeConfig.isAggregateWebSocketFrameFragments()", "org.asynchttpclient.DefaultAsyncHttpClientConfig.isAggregateWebSocketFrameFragments()", "org.asynchttpclient.extras.typesafeconfig.AsyncHttpClientTypesafeConfig.getWebSocketMaxBufferSize()", "org.asynchttpclient.DefaultAsyncHttpClientConfig.getWebSocketMaxBufferSize()", "org.asynchttpclient.DefaultAsyncHttpClientConfig.Builder.setAggregateWebSocketFrameFragments(boolean)", "org.asynchttpclient.DefaultAsyncHttpClientConfig.Builder.setWebSocketMaxBufferSize(int)", "org.asynchttpclient.config.AsyncHttpClientConfigDefaults.defaultWebSocketMaxBufferSize()", "org.asynchttpclient.config.AsyncHttpClientConfigDefaults.defaultAggregateWebSocketFrameFragments()", "org.asynchttpclient.config.AsyncHttpClientConfigDefaults", "org.asynchttpclient.extras.typesafeconfig.AsyncHttpClientTypesafeConfig.getWebSocketMaxFrameSize()", "org.asynchttpclient.DefaultAsyncHttpClientConfig.Builder", "org.asynchttpclient.DefaultAsyncHttpClientConfig.getWebSocketMaxFrameSize()", "org.asynchttpclient.DefaultAsyncHttpClientConfig.Builder.setWebSocketMaxFrameSize(int)", "org.asynchttpclient.config.AsyncHttpClientConfigDefaults.defaultWebSocketMaxFrameSize()"], "closed": "2018-01-22 13:07:17", "filteredCommits": ["e398ee048d002b06697e499c5c2e227e83de06fc"], "commitsDetails": [{"nameRev": "e398ee048d002b06697e499c5c2e227e83de06fc tags/async-http-client-project-2.2.0~4", "commitMessage": "Properly propagate aggregateWebSocketFrameFragments, close #1502\n\nMotivation:\n\nOriginal `aggregateWebSocketFrameFragments ` is lost when creating\nDefaultAsyncHttpClientConfig from another config\n\nModification:\n\nPropagate original value\n\nResult:\n\nOriginal `aggregateWebSocketFrameFragments` is not lost\n", "commitParents": ["771d4d75fe4037148324384a7f049a0162560899"], "spoonStatsSkippedReason": "", "commitHash": "e398ee048d002b06697e499c5c2e227e83de06fc", "authoredDateTime": "2018-01-22 14:07:04", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 6, "deletions": 6, "lines": 12, "filePath": "client/src/main/java/org/asynchttpclient/config/AsyncHttpClientConfigDefaults.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "extras/typesafeconfig/src/main/java/org/asynchttpclient/extras/typesafeconfig/AsyncHttpClientTypesafeConfig.java"}, {"insertions": 45, "deletions": 37, "lines": 82, "filePath": "client/src/main/java/org/asynchttpclient/DefaultAsyncHttpClientConfig.java"}], "commitDateTime": "2018-01-22 14:11:30", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.config.AsyncHttpClientConfigDefaults.defaultWebSocketMaxFrameSize()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.config.AsyncHttpClientConfigDefaults.defaultWebSocketMaxBufferSize()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.config.AsyncHttpClientConfigDefaults.defaultAggregateWebSocketFrameFragments()"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.config.AsyncHttpClientConfigDefaults"}], "spoonFilePath": "AsyncHttpClientConfigDefaults.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.extras.typesafeconfig.AsyncHttpClientTypesafeConfig.getWebSocketMaxFrameSize()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.extras.typesafeconfig.AsyncHttpClientTypesafeConfig.isAggregateWebSocketFrameFragments()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.extras.typesafeconfig.AsyncHttpClientTypesafeConfig.getWebSocketMaxBufferSize()"}], "spoonFilePath": "AsyncHttpClientTypesafeConfig.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClientConfig.getWebSocketMaxBufferSize()"}, {"UPD": 0, "TOT": 5, "MOV": 4, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClientConfig.Builder"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClientConfig.isAggregateWebSocketFrameFragments()"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClientConfig.getWebSocketMaxFrameSize()"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClientConfig.Builder.setWebSocketMaxFrameSize(int)"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClientConfig.Builder.setWebSocketMaxBufferSize(int)"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClientConfig.Builder.setAggregateWebSocketFrameFragments(boolean)"}], "spoonFilePath": "DefaultAsyncHttpClientConfig.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "ed791084b349aa5fca0d05b949c73988a3ffcb78", "authoredDateTime": "", "commitGHEventType": "closed", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1502", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 54.0, "deletions": 46.0, "lines": 100.0, "gitFilesChange": 3}, "title": "aggregateWebSocketFrameFragments is not propagated when creating DefaultAsyncHttpClientConfig from another config", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient", "client/src/main/java/org/asynchttpclient/config", "extras/typesafeconfig/src/main/java/org/asynchttpclient/extras/typesafeconfig"], "spoonStatsSummary": {"UPD": 9.0, "spoonMethodsChanged": 14, "TOT": 20.0, "MOV": 10.0, "INS": 1.0, "DEL": 0.0, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2018-01-17 21:14:54", "commits": {"14b91c00dca45c89cac63abe46f38955cdca7b86": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "fbf116626e010ddbade77b554468f3e97c67a9e3": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.ws.NettyWebSocket.sendBinaryFrame(io.netty.buffer.ByteBuf,boolean,int)"], "closed": "2018-01-17 21:16:05", "filteredCommits": ["14b91c00dca45c89cac63abe46f38955cdca7b86"], "commitsDetails": [{"nameRev": "14b91c00dca45c89cac63abe46f38955cdca7b86 tags/async-http-client-project-2.1.1~9", "commitMessage": "Fix WebSocket#sendBinaryFrame that wasn't setting rsv and finalFragment, close #1498\n", "commitParents": ["d47c56e7ee80b76a4cffd4770237239cfea0ffd6"], "spoonStatsSkippedReason": "", "commitHash": "14b91c00dca45c89cac63abe46f38955cdca7b86", "authoredDateTime": "2018-01-17 18:42:29", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/ws/NettyWebSocket.java"}], "commitDateTime": "2018-01-17 22:36:47", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.ws.NettyWebSocket.sendBinaryFrame(io.netty.buffer.ByteBuf,boolean,int)"}], "spoonFilePath": "NettyWebSocket.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "fbf116626e010ddbade77b554468f3e97c67a9e3", "authoredDateTime": "", "commitGHEventType": "closed", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1498", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1.0, "deletions": 1.0, "lines": 2.0, "gitFilesChange": 1}, "title": "Sending a WebSocket binary frame doesn't honor finalFragment and rsv", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/ws"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 1, "TOT": 2.0, "MOV": 0.0, "INS": 2.0, "DEL": 0.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2017-12-12 13:02:19", "commits": {"9e5401c34722ca9a6ef12ec34fa356240997376f": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "6496b006a8358c4b5581e40f3b8d628984055bee": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "d2f3c198e6ed05eafea86e11e59f7b8adea97c06": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "8eb03926b5fab580225716e44a1fd921197875fb": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.request.WriteListener.abortOnThrowable(io.netty.channel.Channel,java.lang.Throwable)"], "closed": "2017-12-12 16:20:56", "filteredCommits": ["6496b006a8358c4b5581e40f3b8d628984055bee"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "9e5401c34722ca9a6ef12ec34fa356240997376f", "authoredDateTime": "", "commitGHEventType": "closed", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "6496b006a8358c4b5581e40f3b8d628984055bee tags/async-http-client-project-2.0.38~3", "commitMessage": "Perform WriteListener#abortOnThrowable whatever the channel state, close #1488\n\nMotivation\n\nFor some reason lost in time, abortOnThrowable is only performed if the\nchannel is not a new one.\nI have no idea why and it swallow exceptions, so we get timeouts\ninstead of actual exception.\n\nModification:\n\nDrop this test and always perform abortOnThrowable, whatever the\nchannel state.\n\nResult:\n\nProper exception reported\n", "commitParents": ["482ad4b53c9ee7cc85e5a6bbcb1a4092b7c55943"], "spoonStatsSkippedReason": "", "commitHash": "6496b006a8358c4b5581e40f3b8d628984055bee", "authoredDateTime": "2017-12-12 17:20:46", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 2, "lines": 3, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/WriteListener.java"}, {"insertions": 1, "deletions": 2, "lines": 3, "filePath": "client/src/test/java/org/asynchttpclient/request/body/PutFileTest.java"}], "commitDateTime": "2017-12-12 17:42:59", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.request.WriteListener.abortOnThrowable(io.netty.channel.Channel,java.lang.Throwable)"}], "spoonFilePath": "WriteListener.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.request.body.PutFileTest.put(int)"}], "spoonFilePath": "PutFileTest.java"}]}, {"nameRev": "d2f3c198e6ed05eafea86e11e59f7b8adea97c06 tags/async-http-client-project-2.1.0-RC2~2", "commitMessage": "Perform WriteListener#abortOnThrowable whatever the channel state, close #1488\n\nMotivation\n\nFor some reason lost in time, abortOnThrowable is only performed if the\nchannel is not a new one.\nI have no idea why and it swallow exceptions, so we get timeouts\ninstead of actual exception.\n\nModification:\n\nDrop this test and always perform abortOnThrowable, whatever the\nchannel state.\n\nResult:\n\nProper exception reported\n", "commitParents": ["f2dded039abb687e6f975da4b97be70e760d9c93"], "spoonStatsSkippedReason": "", "commitHash": "d2f3c198e6ed05eafea86e11e59f7b8adea97c06", "authoredDateTime": "2017-12-12 17:20:46", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 2, "lines": 3, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/WriteListener.java"}, {"insertions": 1, "deletions": 2, "lines": 3, "filePath": "client/src/test/java/org/asynchttpclient/request/body/PutFileTest.java"}], "commitDateTime": "2017-12-12 17:43:30", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.request.WriteListener.abortOnThrowable(io.netty.channel.Channel,java.lang.Throwable)"}], "spoonFilePath": "WriteListener.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.request.body.PutFileTest.put(int)"}], "spoonFilePath": "PutFileTest.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "8eb03926b5fab580225716e44a1fd921197875fb", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1488", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1.0, "deletions": 2.0, "lines": 3.0, "gitFilesChange": 1}, "title": "WriteListener#abortOnThrowable can't get some error correctly when send request with a new channel", "statsSkippedReason": "", "user": "spccold", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 1, "TOT": 2.0, "MOV": 1.0, "INS": 0.0, "DEL": 1.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 3, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "WriteListener#abortOnThrowable\r\n\r\n~~~java\r\n // cause = io.netty.handler.codec.EncoderException: java.lang.NoSuchMethodError: io.netty.buffer.ByteBufUtil.writeShortBE(Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;\r\n // future.getChannelState() = ChannelState.NEW\r\n // just return false and wait for TimeoutException\r\n private boolean abortOnThrowable(Channel channel, Throwable cause) {\r\n        if (cause != null && future.getChannelState() != ChannelState.NEW) {\r\n            if (cause instanceof IllegalStateException || cause instanceof ClosedChannelException || StackTraceInspector.recoverOnReadOrWriteException(cause)) {\r\n                LOGGER.debug(cause.getMessage(), cause);\r\n                Channels.silentlyCloseChannel(channel);\r\n            } else {\r\n                future.abort(cause);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n~~~\r\n\r\nscene:\r\n~~~\r\nmy application dependent on redisson(with netty 4.1.13.Final) and \r\nasync-http-client-2.1.0-alpha26(with netty 4.1.17.Final),  \r\nbut netty 4.1.13.Final is this runtime version(decide by maven arbitration)\r\n~~~\r\n\r\nresult:\r\n~~~\r\nget java.util.concurrent.TimeoutException all the time \r\n\r\nrather than get exception: \r\n\r\nio.netty.handler.codec.EncoderException: java.lang.NoSuchMethodError:\r\nio.netty.buffer.ByteBufUtil.writeShortBE(Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;\r\n\r\n(p.s. writeShortBE first introduced in netty 4.1.14.Final)\r\n~~~\r\n\r\nCan hava a another more appropriate implementation at here?\r\n", "labels": ["Defect"]}, {"created": "2017-12-10 18:56:47", "commits": {"2d7987056cb4340c6ae87b525c23610969a577bc": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "90ee39aca58cb43722b2c7f51cdbf0940b7676d2": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "6184e9a650dae813c76af41793d6c886d37eaf59": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 2, "changesInPackagesSPOON": ["org.asynchttpclient.request.body.multipart.part.FileMultipartPart.transferContentTo(java.nio.channels.WritableByteChannel)", "org.asynchttpclient.request.body.multipart.part.FileMultipartPart.transferContentTo(io.netty.buffer.ByteBuf)"], "closed": "2017-12-11 09:59:19", "filteredCommits": ["90ee39aca58cb43722b2c7f51cdbf0940b7676d2", "6184e9a650dae813c76af41793d6c886d37eaf59"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "2d7987056cb4340c6ae87b525c23610969a577bc", "authoredDateTime": "", "commitGHEventType": "closed", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "90ee39aca58cb43722b2c7f51cdbf0940b7676d2 tags/async-http-client-project-2.0.38~6", "commitMessage": "Fix multipart infinite loop when uploading empty file with zero copy disable, close #1485\n\nMotivation:\n\nWe always add transferred into position, even though transferred can be\n-1 because file is empty or FileChannel was closed.\nWe then get stuck into an infinite loop.\n\nModifications:\n\n* Only move position when transferred is > 0.\n* Finish part when we hit transferred < 0\n\nResult:\n\nFixed infinite loop\n", "commitParents": ["6633bddcc4779cc354ece794a4a6eba74df24d42"], "spoonStatsSkippedReason": "", "commitHash": "90ee39aca58cb43722b2c7f51cdbf0940b7676d2", "authoredDateTime": "2017-12-11 10:57:05", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/request/body/Body.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "client/src/test/resources/empty.txt"}, {"insertions": 50, "deletions": 71, "lines": 121, "filePath": "client/src/test/java/org/asynchttpclient/request/body/multipart/MultipartUploadTest.java"}, {"insertions": 15, "deletions": 6, "lines": 21, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/FileMultipartPart.java"}], "commitDateTime": "2017-12-11 10:57:05", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.MultipartUploadTest.sendEmptyFileZeroCopy()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.MultipartUploadTest.sendEmptyFile0(boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.MultipartUploadTest.sendEmptyFile()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.MultipartUploadTest.setUp()"}, {"UPD": 11, "TOT": 69, "MOV": 53, "INS": 1, "DEL": 4, "spoonMethodName": "org.asynchttpclient.request.body.multipart.MultipartUploadTest.testSendingSmallFilesAndByteArray()"}], "spoonFilePath": "MultipartUploadTest.java"}, {"spoonMethods": [], "spoonFilePath": "Body.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 7, "MOV": 5, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.FileMultipartPart.transferContentTo(java.nio.channels.WritableByteChannel)"}, {"UPD": 0, "TOT": 6, "MOV": 4, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.FileMultipartPart.transferContentTo(io.netty.buffer.ByteBuf)"}], "spoonFilePath": "FileMultipartPart.java"}]}, {"nameRev": "6184e9a650dae813c76af41793d6c886d37eaf59 tags/async-http-client-project-2.1.0-RC2~4", "commitMessage": "Fix multipart infinite loop when uploading empty file with zero copy disabled, close #1485\n\nMotivation:\n\nWe always add transferred into position, even though transferred can be\n-1 because file is empty or FileChannel was closed.\nWe then get stuck into an infinite loop.\n\nModifications:\n\n* Only move position when transferred is > 0.\n* Finish part when we hit transferred < 0\n\nResult:\n\nFixed infinite loop\n", "commitParents": ["8c803b37d27cfff0bcc62865ac24725f6e9a9eb3"], "spoonStatsSkippedReason": "", "commitHash": "6184e9a650dae813c76af41793d6c886d37eaf59", "authoredDateTime": "2017-12-11 10:57:05", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/request/body/Body.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "client/src/test/resources/empty.txt"}, {"insertions": 49, "deletions": 63, "lines": 112, "filePath": "client/src/test/java/org/asynchttpclient/request/body/multipart/MultipartUploadTest.java"}, {"insertions": 15, "deletions": 6, "lines": 21, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/FileMultipartPart.java"}], "commitDateTime": "2017-12-11 11:15:45", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.MultipartUploadTest.sendEmptyFileZeroCopy()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.MultipartUploadTest.sendEmptyFile0(boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.MultipartUploadTest.sendEmptyFile()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.MultipartUploadTest.setUp()"}, {"UPD": 12, "TOT": 70, "MOV": 53, "INS": 1, "DEL": 4, "spoonMethodName": "org.asynchttpclient.request.body.multipart.MultipartUploadTest.testSendingSmallFilesAndByteArray()"}], "spoonFilePath": "MultipartUploadTest.java"}, {"spoonMethods": [], "spoonFilePath": "Body.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 7, "MOV": 5, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.FileMultipartPart.transferContentTo(java.nio.channels.WritableByteChannel)"}, {"UPD": 0, "TOT": 6, "MOV": 4, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.FileMultipartPart.transferContentTo(io.netty.buffer.ByteBuf)"}], "spoonFilePath": "FileMultipartPart.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1485", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 32.0, "deletions": 14.0, "lines": 46.0, "gitFilesChange": 2}, "title": "FileMultipartPart is never \"Done\" with empty file or channel close exception", "statsSkippedReason": "", "user": "yangye1947", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/request/body/multipart/part", "client/src/main/java/org/asynchttpclient/request/body"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 2, "TOT": 26.0, "MOV": 18.0, "INS": 8.0, "DEL": 0.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi, I'm using ahc 2.0.31.  Observed hanging AHC thread in two scenarios: 1. upload an empty file. 2. netty channel closed. At first, I thought these two cases were unrelated. But going through the code, found they seem caused by the same reason.\r\n\r\nI used the default unpooled buffer allocator with UnpooledUnsafeDireByteBuf. In the code, on channel closed or file is empty, it will return -1, which makes sense.\r\n```\r\npublic int setBytes(int index, ScatteringByteChannel in, int length) throws IOException {\r\n        this.ensureAccessible();\r\n        ByteBuffer tmpBuf = this.internalNioBuffer();\r\n        tmpBuf.clear().position(index).limit(index + length);\r\n\r\n        try {\r\n            return in.read(tmpBuf);\r\n        } catch (ClosedChannelException var6) {\r\n            return -1;\r\n        }\r\n    }\r\n```\r\n\r\nBut when file multipart part received -1, it decreased the position by -1. Then it compared the position with the length to see if the position reaches the end. With decrease by -1 every time, the position will never reach the end. And causing the thread looping forever...\r\n```\r\n    protected long transferContentTo(ByteBuf target) throws IOException {\r\n        int transferred = target.writeBytes(this.channel, target.writableBytes());\r\n        this.position += (long)transferred;\r\n        if (this.position == this.length) {\r\n            this.state = MultipartState.POST_CONTENT;\r\n            this.channel.close();\r\n        }\r\n\r\n        return (long)transferred;\r\n    }\r\n```\r\n\r\nThis is easy to reproduce. You can simply upload with empty file. Let me know if I mis-understand anything. Thx!", "labels": ["Defect"]}, {"created": "2017-09-25 13:49:33", "commits": {"45a8b4b33efa4298f6ba5d5174e15208d1e205ac": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "468b98f59d364732ec912719e96dfdc53d3ee92b": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.channel.DefaultChannelPool.removeAll(io.netty.channel.Channel)"], "closed": "2017-09-25 13:50:59", "filteredCommits": ["45a8b4b33efa4298f6ba5d5174e15208d1e205ac"], "commitsDetails": [{"nameRev": "45a8b4b33efa4298f6ba5d5174e15208d1e205ac tags/async-http-client-project-2.0.37~3", "commitMessage": "Properly remove entry from partition, close #1461\n\nMotivation:\n\nDefaultChannelPool#removeAll fails to properly remove entry from\npartition.\n\nModification:\n\nRemove an `IdleChannel` instead of a `Channel`.\n\nResult:\n\nNo more leak.\n", "commitParents": ["7b60e7128b5cd186bc06acd0015d313bfa2e083a"], "spoonStatsSkippedReason": "", "commitHash": "45a8b4b33efa4298f6ba5d5174e15208d1e205ac", "authoredDateTime": "2017-09-25 15:50:50", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/DefaultChannelPool.java"}], "commitDateTime": "2017-09-25 16:46:25", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.channel.DefaultChannelPool.removeAll(io.netty.channel.Channel)"}], "spoonFilePath": "DefaultChannelPool.java"}]}, {"nameRev": "468b98f59d364732ec912719e96dfdc53d3ee92b tags/async-http-client-project-2.1.0-alpha25~3", "commitMessage": "Properly remove entry from partition, close #1461\n\nMotivation:\n\nDefaultChannelPool#removeAll fails to properly remove entry from\npartition.\n\nModification:\n\nRemove an `IdleChannel` instead of a `Channel`.\n\nResult:\n\nNo more leak.\n", "commitParents": ["3975e729aea7b83b985d03e8bd5c7fbfaf61d027"], "spoonStatsSkippedReason": "", "commitHash": "468b98f59d364732ec912719e96dfdc53d3ee92b", "authoredDateTime": "2017-09-25 15:50:50", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/DefaultChannelPool.java"}], "commitDateTime": "2017-09-25 15:50:50", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.channel.DefaultChannelPool.removeAll(io.netty.channel.Channel)"}], "spoonFilePath": "DefaultChannelPool.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1461", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "DefaultChannelPool leaks IdleChannels", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/channel"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "`DefaultChannelPool#removeAll` fails to properly remove entry from partition as it tries to remove a `Channel` instead of an `IdleChannel`.", "labels": ["Defect"]}, {"created": "2017-09-01 02:49:49", "user": "vsabella", "body": "StreamedResponsePublisher does not cancel the channel properly.\r\n\r\nin https://github.com/AsyncHttpClient/async-http-client/blob/master/client/src/main/java/org/asynchttpclient/netty/handler/StreamedResponsePublisher.java \r\n\r\nWe are using play-ws client which wraps AsyncHttpClient. When streams are cancelled (such as the downloader cancelling their download) we notice the following:\r\n\r\n1. this.logger.debug(\"Subscriber cancelled, ignoring the rest of the body\"); is called - so the publisher does know that the stream is cancelled.\r\n\r\nHowever, it does not result in Connection.close.  \r\nThe callback is registered here (https://github.com/AsyncHttpClient/async-http-client/blob/90124a5caf414658d537799116c7d4f3d1ad45dd/client/src/main/java/org/asynchttpclient/netty/channel/ChannelManager.java#L407) \r\nBut it is never called, never resulting in a channel closed exception.\r\n\r\nKeepAlive is false and we have the various connection pool timeouts at 15 seconds.\r\n\r\nAlso it appears that the callback is set as an attribute on the channel - is that the correct approach or is it possible to have the callback overwritten by more incoming data or another thread?\r\n\r\nAny thoughts?", "closed": "2017-09-15 16:20:36", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1456", "ttf": 14.000277777777777, "commits": {}, "labels": ["Defect"], "title": "StreamedResponsePublisher cancelled() does not close the channel properly."}, {"created": "2017-08-28 08:43:49", "commits": {"e9f12b29725c567cdb4de98b3302a61ca9d41280": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "eb9e3347e45319be494db24d285a2aee4396f5d3": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.uri.UriParser.computeFragment(java.lang.String)", "org.asynchttpclient.uri.UriParser.trimLeft(java.lang.String)", "org.asynchttpclient.uri.UriParser.computeQuery()", "org.asynchttpclient.uri.UriParser.trimRight(java.lang.String)", "org.asynchttpclient.uri.UriParser.isFragmentOnly()", "org.asynchttpclient.uri.UriParser.inheritContextQuery(org.asynchttpclient.uri.Uri,boolean)", "org.asynchttpclient.uri.UriParser.computeAuthority()", "org.asynchttpclient.uri.UriParser.computePath(boolean)", "org.asynchttpclient.uri.UriParser.findWithinCurrentRange(char)", "org.asynchttpclient.uri.UriParser.trimLeft()", "org.asynchttpclient.uri.UriParser.trimFragment()", "org.asynchttpclient.uri.UriParser.trimRight()", "org.asynchttpclient.uri.UriParser.parseAuthority()", "org.asynchttpclient.uri.UriParser.computeInitialScheme(java.lang.String)", "org.asynchttpclient.uri.UriParser.currentPositionStartsWith2Slashes()", "org.asynchttpclient.uri.UriParser", "org.asynchttpclient.uri.UriParser.handleRelativePath()", "org.asynchttpclient.uri.UriParser.computeRegularPath()", "org.asynchttpclient.uri.UriParser.splitUrlAndQuery(java.lang.String)", "org.asynchttpclient.uri.UriParser.parse(org.asynchttpclient.uri.Uri,java.lang.String)", "org.asynchttpclient.uri.UriParser.isFragmentOnly(java.lang.String)", "org.asynchttpclient.uri.UriParser.currentPositionStartsWith4Slashes()", "org.asynchttpclient.uri.UriParser.overrideWithContext(org.asynchttpclient.uri.Uri,java.lang.String)", "org.asynchttpclient.uri.UriParser.computeInitialScheme()"], "closed": "2017-08-28 08:51:15", "filteredCommits": ["e9f12b29725c567cdb4de98b3302a61ca9d41280"], "commitsDetails": [{"nameRev": "e9f12b29725c567cdb4de98b3302a61ca9d41280 tags/async-http-client-project-2.0.35~2", "commitMessage": "Don't be tricked by anchors containing a question mark, close #1455\n\nMotivation:\n\nAHC can be tricked into connecting to a different host.\n\nModification:\n\n* Make sure we don\u2019t interpret `?` in the anchor as the beginning of\nthe query and the end of the path.\n* Update tests to check org.asynchttpclient.uri.Uri returns the same\nresults as java.net.URI.\n\nResult:\n\nAHC no longer tricked by anchors containing question mark.\n", "commitParents": ["f6559bb988b38460fe41161f21469439026bef02"], "spoonStatsSkippedReason": "", "commitHash": "e9f12b29725c567cdb4de98b3302a61ca9d41280", "authoredDateTime": "2017-08-28 10:50:57", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 102, "deletions": 82, "lines": 184, "filePath": "client/src/main/java/org/asynchttpclient/uri/UriParser.java"}, {"insertions": 55, "deletions": 70, "lines": 125, "filePath": "client/src/test/java/org/asynchttpclient/uri/UriParserTest.java"}, {"insertions": 54, "deletions": 171, "lines": 225, "filePath": "client/src/test/java/org/asynchttpclient/uri/UriTest.java"}], "commitDateTime": "2017-08-28 10:51:37", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithConsecutiveDotsFromLevel3Resource()"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testAbsoluteURIWithContext()"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testNonRootRelativeURIWithRootContext()"}, {"UPD": 3, "TOT": 9, "MOV": 5, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRootRelativeURIWithRootContext()"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithConsecutiveDotsFromRootResource()"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithDotsAboveRoot()"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithConsecutiveDotsFromSubrootResource()"}, {"UPD": 0, "TOT": 5, "MOV": 0, "INS": 5, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriTest.assertUriEquals(org.asynchttpclient.uri.Uri,java.net.URI)"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithAbsoluteDots()"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithConsecutiveDotsAboveRoot()"}, {"UPD": 4, "TOT": 14, "MOV": 9, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRootRelativeURIWithNonRootContext()"}, {"UPD": 8, "TOT": 16, "MOV": 2, "INS": 1, "DEL": 5, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testSimpleParsing()"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithDots()"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithConsecutiveDots()"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithNoScheme()"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithConsecutiveDotsFromRoot()"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithAbsoluteConsecutiveDots()"}, {"UPD": 6, "TOT": 16, "MOV": 8, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testNonRootRelativeURIWithNonRootContext()"}], "spoonFilePath": "UriTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 0, "INS": 6, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.assertUriEquals(org.asynchttpclient.uri.UriParser,java.net.URI)"}, {"UPD": 3, "TOT": 6, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testSchemeTakenFromUrlWhenValid()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testRootRelativePath()"}, {"UPD": 11, "TOT": 21, "MOV": 8, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testRelativeURLWithDots()"}, {"UPD": 5, "TOT": 9, "MOV": 3, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testRelativeUrlWithQueryOnly()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testResolveAbsoluteUriAgainstContext()"}, {"UPD": 5, "TOT": 9, "MOV": 3, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testUrlFragment()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testUrlWithPathAndQuery()"}, {"UPD": 4, "TOT": 12, "MOV": 7, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testRelativeURL()"}, {"UPD": 2, "TOT": 15, "MOV": 5, "INS": 1, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testRelativeURLWithOneTrailingDot()"}, {"UPD": 1, "TOT": 9, "MOV": 2, "INS": 0, "DEL": 6, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testRelativeURLWithTwoEmbeddedDots()"}, {"UPD": 2, "TOT": 15, "MOV": 5, "INS": 1, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testRelativeURLWithTwoTrailingDots()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.validateAgainstAbsoluteURI(java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testFragmentTryingToTrickAuthorityAsBasicAuthCredentials()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testFragmentOnly()"}, {"UPD": 9, "TOT": 20, "MOV": 8, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testRelativeUrlWithQuery()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.validateAgainstRelativeURI(org.asynchttpclient.uri.Uri,java.lang.String,java.lang.String)"}, {"UPD": 1, "TOT": 22, "MOV": 7, "INS": 1, "DEL": 13, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testUrlHasLeadingAndTrailingWhiteSpace()"}], "spoonFilePath": "UriParserTest.java"}, {"spoonMethods": [{"UPD": 7, "TOT": 10, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriParser.computeFragment(java.lang.String)"}, {"UPD": 1, "TOT": 8, "MOV": 6, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriParser.trimLeft(java.lang.String)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.computeQuery()"}, {"UPD": 1, "TOT": 7, "MOV": 5, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriParser.trimRight(java.lang.String)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.handleRelativePath()"}, {"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.inheritContextQuery(org.asynchttpclient.uri.Uri,boolean)"}, {"UPD": 7, "TOT": 7, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.computeAuthority()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.computePath(boolean)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.currentPositionStartsWith4Slashes()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.findWithinCurrentRange(char)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.trimLeft()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.trimFragment()"}, {"UPD": 2, "TOT": 15, "MOV": 2, "INS": 5, "DEL": 6, "spoonMethodName": "org.asynchttpclient.uri.UriParser.parse(org.asynchttpclient.uri.Uri,java.lang.String)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.parseAuthority()"}, {"UPD": 0, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.uri.UriParser.isFragmentOnly(java.lang.String)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.currentPositionStartsWith2Slashes()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.trimRight()"}, {"UPD": 2, "TOT": 6, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriParser"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.isFragmentOnly()"}, {"UPD": 5, "TOT": 7, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.computeRegularPath()"}, {"UPD": 4, "TOT": 15, "MOV": 6, "INS": 0, "DEL": 5, "spoonMethodName": "org.asynchttpclient.uri.UriParser.splitUrlAndQuery(java.lang.String)"}, {"UPD": 3, "TOT": 6, "MOV": 0, "INS": 0, "DEL": 3, "spoonMethodName": "org.asynchttpclient.uri.UriParser.computeInitialScheme(java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriParser.overrideWithContext(org.asynchttpclient.uri.Uri,java.lang.String)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.computeInitialScheme()"}], "spoonFilePath": "UriParser.java"}]}, {"nameRev": "eb9e3347e45319be494db24d285a2aee4396f5d3 tags/async-http-client-project-2.1.0-alpha24~2", "commitMessage": "Don't be tricked by anchors containing a question mark, close #1455\n\nMotivation:\n\nAHC can be tricked into connecting to a different host.\n\nModification:\n\n* Make sure we don\u2019t interpret `?` in the anchor as the beginning of\nthe query and the end of the path.\n* Update tests to check org.asynchttpclient.uri.Uri returns the same\nresults as java.net.URI.\n\nResult:\n\nAHC no longer tricked by anchors containing question mark.\n", "commitParents": ["62b5a1d2307dc9be5734a9e7adb43471a1a972e2"], "spoonStatsSkippedReason": "", "commitHash": "eb9e3347e45319be494db24d285a2aee4396f5d3", "authoredDateTime": "2017-08-28 10:50:57", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 102, "deletions": 82, "lines": 184, "filePath": "client/src/main/java/org/asynchttpclient/uri/UriParser.java"}, {"insertions": 55, "deletions": 70, "lines": 125, "filePath": "client/src/test/java/org/asynchttpclient/uri/UriParserTest.java"}, {"insertions": 54, "deletions": 171, "lines": 225, "filePath": "client/src/test/java/org/asynchttpclient/uri/UriTest.java"}], "commitDateTime": "2017-08-28 10:50:57", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithConsecutiveDotsFromLevel3Resource()"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testAbsoluteURIWithContext()"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testNonRootRelativeURIWithRootContext()"}, {"UPD": 3, "TOT": 9, "MOV": 5, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRootRelativeURIWithRootContext()"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithConsecutiveDotsFromRootResource()"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithDotsAboveRoot()"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithConsecutiveDotsFromSubrootResource()"}, {"UPD": 0, "TOT": 5, "MOV": 0, "INS": 5, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriTest.assertUriEquals(org.asynchttpclient.uri.Uri,java.net.URI)"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithAbsoluteDots()"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithConsecutiveDotsAboveRoot()"}, {"UPD": 4, "TOT": 14, "MOV": 9, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRootRelativeURIWithNonRootContext()"}, {"UPD": 8, "TOT": 16, "MOV": 2, "INS": 1, "DEL": 5, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testSimpleParsing()"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithDots()"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithConsecutiveDots()"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithNoScheme()"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithConsecutiveDotsFromRoot()"}, {"UPD": 0, "TOT": 12, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithAbsoluteConsecutiveDots()"}, {"UPD": 6, "TOT": 16, "MOV": 8, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testNonRootRelativeURIWithNonRootContext()"}], "spoonFilePath": "UriTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 0, "INS": 6, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.assertUriEquals(org.asynchttpclient.uri.UriParser,java.net.URI)"}, {"UPD": 3, "TOT": 6, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testSchemeTakenFromUrlWhenValid()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testRootRelativePath()"}, {"UPD": 11, "TOT": 21, "MOV": 8, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testRelativeURLWithDots()"}, {"UPD": 5, "TOT": 9, "MOV": 3, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testRelativeUrlWithQueryOnly()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testResolveAbsoluteUriAgainstContext()"}, {"UPD": 5, "TOT": 9, "MOV": 3, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testUrlFragment()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testUrlWithPathAndQuery()"}, {"UPD": 4, "TOT": 12, "MOV": 7, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testRelativeURL()"}, {"UPD": 2, "TOT": 15, "MOV": 5, "INS": 1, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testRelativeURLWithOneTrailingDot()"}, {"UPD": 1, "TOT": 9, "MOV": 2, "INS": 0, "DEL": 6, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testRelativeURLWithTwoEmbeddedDots()"}, {"UPD": 2, "TOT": 15, "MOV": 5, "INS": 1, "DEL": 7, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testRelativeURLWithTwoTrailingDots()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.validateAgainstAbsoluteURI(java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testFragmentTryingToTrickAuthorityAsBasicAuthCredentials()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testFragmentOnly()"}, {"UPD": 9, "TOT": 20, "MOV": 8, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testRelativeUrlWithQuery()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.validateAgainstRelativeURI(org.asynchttpclient.uri.Uri,java.lang.String,java.lang.String)"}, {"UPD": 1, "TOT": 22, "MOV": 7, "INS": 1, "DEL": 13, "spoonMethodName": "org.asynchttpclient.uri.UriParserTest.testUrlHasLeadingAndTrailingWhiteSpace()"}], "spoonFilePath": "UriParserTest.java"}, {"spoonMethods": [{"UPD": 7, "TOT": 10, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriParser.computeFragment(java.lang.String)"}, {"UPD": 1, "TOT": 8, "MOV": 6, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriParser.trimLeft(java.lang.String)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.computeQuery()"}, {"UPD": 1, "TOT": 7, "MOV": 5, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriParser.trimRight(java.lang.String)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.handleRelativePath()"}, {"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.inheritContextQuery(org.asynchttpclient.uri.Uri,boolean)"}, {"UPD": 7, "TOT": 7, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.computeAuthority()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.computePath(boolean)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.currentPositionStartsWith4Slashes()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.findWithinCurrentRange(char)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.trimLeft()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.trimFragment()"}, {"UPD": 2, "TOT": 15, "MOV": 2, "INS": 5, "DEL": 6, "spoonMethodName": "org.asynchttpclient.uri.UriParser.parse(org.asynchttpclient.uri.Uri,java.lang.String)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.parseAuthority()"}, {"UPD": 0, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.uri.UriParser.isFragmentOnly(java.lang.String)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.currentPositionStartsWith2Slashes()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.trimRight()"}, {"UPD": 2, "TOT": 6, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriParser"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.isFragmentOnly()"}, {"UPD": 5, "TOT": 7, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.computeRegularPath()"}, {"UPD": 4, "TOT": 15, "MOV": 6, "INS": 0, "DEL": 5, "spoonMethodName": "org.asynchttpclient.uri.UriParser.splitUrlAndQuery(java.lang.String)"}, {"UPD": 3, "TOT": 6, "MOV": 0, "INS": 0, "DEL": 3, "spoonMethodName": "org.asynchttpclient.uri.UriParser.computeInitialScheme(java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriParser.overrideWithContext(org.asynchttpclient.uri.Uri,java.lang.String)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.computeInitialScheme()"}], "spoonFilePath": "UriParser.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1455", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 102, "deletions": 82, "lines": 184, "gitFilesChange": 1}, "title": "Security: AHC can be tricked into connecting to a different host", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/uri"], "spoonStatsSummary": {"UPD": 41, "spoonMethodsChanged": 24, "TOT": 107, "MOV": 26, "INS": 19, "DEL": 21, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Issue is very similar to CVE-2016-8624 that [affected cURL last year](https://curl.haxx.se/docs/adv_20161102J.html).\r\n\r\nAHC url parser, `org.asynchttpclient.uri.Uri` can be tricked with a anchor containing a question mark into connecting to a different host. This issue also affects `java.net.URL` (as of 8u112) but not `java.net.URI`:\r\n\r\n```java\r\norg.asynchttpclient.uri.Uri.create(\"http://1.2.3.4:81#@5.6.7.8:82/aaa/b?q\").getHost()\r\n// 5.6.7.8\r\n\r\nnew java.net.URL(\"http://1.2.3.4:81#@5.6.7.8:82/aaa/b?q\").getHost()\r\n// 5.6.7.8\r\n\r\njava.net.URI.create(\"http://1.2.3.4:81#@5.6.7.8:82/aaa/b?q\").getHost()\r\n// 1.2.3.4\r\n```\r\n\r\nCredit goes to Nicolas Gr\u00e9goire from [Agarri](http://www.agarri.fr).\r\n\r\nI'm not aware of any exploit at the moment.\r\n\r\nPossible usages:\r\n* circumventing white/back lists\r\n* web crawler that would use AHC for fetching pages but would use `java.net.URI` to compute the index key.", "labels": ["Defect"]}, {"created": "2017-08-04 08:35:59", "commits": {"32d34cac212980989e18da6ccd2df77e73a02c6c": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "39268ff47a89feb78dfa42ed3bc83ed3474cdcac": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.request.NettyRequestFactory.newNettyRequest(org.asynchttpclient.Request,boolean,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.Realm,org.asynchttpclient.Realm)", "org.asynchttpclient.util.HttpUtils.computeOriginHeader(org.asynchttpclient.uri.Uri)"], "closed": "2017-08-04 10:37:17", "filteredCommits": ["32d34cac212980989e18da6ccd2df77e73a02c6c"], "commitsDetails": [{"nameRev": "32d34cac212980989e18da6ccd2df77e73a02c6c tags/async-http-client-project-2.1.0-alpha23~1", "commitMessage": "Don't force explicit port when computing Origin header, close #1449\n\nMotivation:\n\nWe force explicit port when computing Origin header. We should do so\nwhen port is the default scheme\u2019s one.\n\nModification:\n\nOnly set port when it\u2019s different from the scheme\u2019s default one\n\nResult:\n\nValid Origin header\n", "commitParents": ["88d2d5fc8b2f2997f041999116fca51bee69ad45"], "spoonStatsSkippedReason": "", "commitHash": "32d34cac212980989e18da6ccd2df77e73a02c6c", "authoredDateTime": "2017-08-04 12:37:09", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 30, "deletions": 0, "lines": 30, "filePath": "client/src/test/java/org/asynchttpclient/util/HttpUtilsTest.java"}, {"insertions": 9, "deletions": 0, "lines": 9, "filePath": "client/src/main/java/org/asynchttpclient/util/HttpUtils.java"}, {"insertions": 1, "deletions": 3, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactory.java"}], "commitDateTime": "2017-08-04 12:37:09", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.HttpUtils.computeOriginHeader(org.asynchttpclient.uri.Uri)"}], "spoonFilePath": "HttpUtils.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.HttpUtilsTest.computeOriginForSecuredUriWithDefaultPort()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.HttpUtilsTest.computeOriginForPlainUriWithDefaultPort()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.HttpUtilsTest.computeOriginForSecuredUriWithNonDefaultPort()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.HttpUtilsTest.computeOriginForPlainUriWithImplicitPort()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.HttpUtilsTest.computeOriginForPlainUriWithNonDefaultPort()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.HttpUtilsTest.computeOriginForSecuredUriWithImplicitPort()"}], "spoonFilePath": "HttpUtilsTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 5, "MOV": 1, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestFactory.newNettyRequest(org.asynchttpclient.Request,boolean,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.Realm,org.asynchttpclient.Realm)"}], "spoonFilePath": "NettyRequestFactory.java"}]}, {"nameRev": "39268ff47a89feb78dfa42ed3bc83ed3474cdcac tags/async-http-client-project-2.0.34~1", "commitMessage": "Don't force explicit port when computing Origin header, close #1449\n\nMotivation:\n\nWe force explicit port when computing Origin header. We should do so\nwhen port is the default scheme\u2019s one.\n\nModification:\n\nOnly set port when it\u2019s different from the scheme\u2019s default one\n\nResult:\n\nValid Origin header\n", "commitParents": ["4e49e698ed21143390c2bae77d91aafe0af84342"], "spoonStatsSkippedReason": "", "commitHash": "39268ff47a89feb78dfa42ed3bc83ed3474cdcac", "authoredDateTime": "2017-08-04 12:37:09", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 30, "deletions": 0, "lines": 30, "filePath": "client/src/test/java/org/asynchttpclient/util/HttpUtilsTest.java"}, {"insertions": 9, "deletions": 0, "lines": 9, "filePath": "client/src/main/java/org/asynchttpclient/util/HttpUtils.java"}, {"insertions": 1, "deletions": 3, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactory.java"}], "commitDateTime": "2017-08-04 12:41:36", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.HttpUtils.computeOriginHeader(org.asynchttpclient.uri.Uri)"}], "spoonFilePath": "HttpUtils.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.HttpUtilsTest.computeOriginForSecuredUriWithDefaultPort()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.HttpUtilsTest.computeOriginForPlainUriWithDefaultPort()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.HttpUtilsTest.computeOriginForSecuredUriWithNonDefaultPort()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.HttpUtilsTest.computeOriginForPlainUriWithImplicitPort()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.HttpUtilsTest.computeOriginForPlainUriWithNonDefaultPort()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.HttpUtilsTest.computeOriginForSecuredUriWithImplicitPort()"}], "spoonFilePath": "HttpUtilsTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 5, "MOV": 1, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestFactory.newNettyRequest(org.asynchttpclient.Request,boolean,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.Realm,org.asynchttpclient.Realm)"}], "spoonFilePath": "NettyRequestFactory.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1449", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 10, "deletions": 3, "lines": 13, "gitFilesChange": 2}, "title": "Origin header shouldn't explicit port when it's the default one.", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request", "client/src/main/java/org/asynchttpclient/util"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 2, "TOT": 6, "MOV": 1, "INS": 2, "DEL": 2, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "According to the specification https://tools.ietf.org/html/rfc6454#section-6.1 the port should be omitted if it is the standard port for the protocol:\r\n\r\n> 5. If the port part of the origin triple is different from the default port for the protocol given by the scheme part of the origin triple:", "labels": ["Defect"]}, {"created": "2017-07-25 20:24:22", "commits": {"1d8a6308489d567a30a87b042315ddc8a34c09f8": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "9bb793e0fb5ff191296ee94483b59921056348f7": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.request.NettyRequestFactory.newNettyRequest(org.asynchttpclient.Request,boolean,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.Realm,org.asynchttpclient.Realm)"], "closed": "2017-07-25 20:30:37", "filteredCommits": ["1d8a6308489d567a30a87b042315ddc8a34c09f8"], "commitsDetails": [{"nameRev": "1d8a6308489d567a30a87b042315ddc8a34c09f8 tags/async-http-client-project-2.1.0-alpha22~5", "commitMessage": "User defined Content-Length request header should be honored, close #1440\n\nMotivation:\n\nWhen Content-Length is known beforehand, we shouldn\u2019t ignore it and\nenforce chunked transfer-encoding.\n\nModification:\n\nHonor Content-Length request header when it's defined.\n\nResult:\n\nChunked transfer-encoding is no longer enforced\n", "commitParents": ["e0b097d54fbd7261c5c795b286269da183684965"], "spoonStatsSkippedReason": "", "commitHash": "1d8a6308489d567a30a87b042315ddc8a34c09f8", "authoredDateTime": "2017-07-25 22:29:46", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 6, "deletions": 4, "lines": 10, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactory.java"}], "commitDateTime": "2017-07-25 23:11:59", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestFactory.newNettyRequest(org.asynchttpclient.Request,boolean,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.Realm,org.asynchttpclient.Realm)"}], "spoonFilePath": "NettyRequestFactory.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "9bb793e0fb5ff191296ee94483b59921056348f7", "authoredDateTime": "", "commitGHEventType": "closed", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1440", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 6.0, "deletions": 4.0, "lines": 10.0, "gitFilesChange": 1}, "title": "Content-Length request header should be honored", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 1, "TOT": 2.0, "MOV": 1.0, "INS": 1.0, "DEL": 0.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "User defined Content-Length request header should have precedence over the one from  the body, all the more when it's undefined and we fall back to chunked transfer-encoding.", "labels": ["Defect"]}, {"created": "2017-07-05 11:06:19", "commits": {"9bb0b68febd578a216854e6fc04a13c17af6b7b0": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "8696cfa4640cf5304118d0eb2218eb1b2a510814": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": ["org.asynchttpclient.testserver.HttpServer.close()"], "closed": "2017-07-05 11:08:09", "filteredCommits": ["9bb0b68febd578a216854e6fc04a13c17af6b7b0"], "commitsDetails": [{"nameRev": "9bb0b68febd578a216854e6fc04a13c17af6b7b0 tags/async-http-client-project-2.0.34~14", "commitMessage": "Properly close test HttpServer, close #1434\n", "commitParents": ["583ec6f81ea31b760816ccfb0deb5c77ebfe442b"], "spoonStatsSkippedReason": "", "commitHash": "9bb0b68febd578a216854e6fc04a13c17af6b7b0", "authoredDateTime": "2017-07-05 13:07:13", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/test/java/org/asynchttpclient/testserver/HttpServer.java"}], "commitDateTime": "2017-07-05 13:19:05", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.testserver.HttpServer.close()"}], "spoonFilePath": "HttpServer.java"}]}, {"nameRev": "8696cfa4640cf5304118d0eb2218eb1b2a510814 tags/async-http-client-project-2.1.0-alpha21~7", "commitMessage": "Properly close test HttpServer, close #1434\n", "commitParents": ["ad87bd13a8c111bac8a67752f8bb8cb1b2ce0dea"], "spoonStatsSkippedReason": "", "commitHash": "8696cfa4640cf5304118d0eb2218eb1b2a510814", "authoredDateTime": "2017-07-05 13:07:13", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/test/java/org/asynchttpclient/testserver/HttpServer.java"}], "commitDateTime": "2017-07-05 13:07:13", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.testserver.HttpServer.close()"}], "spoonFilePath": "HttpServer.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1434", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "BasicHttpsTest.multipleSequentialPostRequestsOverHttps failure", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "```\r\nFailed tests: \r\n\r\n  BasicHttpsTest.multipleSequentialPostRequestsOverHttps:95->lambda$multipleSequentialPostRequestsOverHttps$5:96->lambda$null$4:105 expected [hello there] but found [<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"/>\r\n<title>Error 500 No handler enqueued</title>\r\n</head>\r\n<body><h2>HTTP ERROR 500</h2>\r\n<p>Problem accessing /foo/bar. Reason:\r\n<pre>    No handler enqueued</pre></p><hr><a href=\"http://eclipse.org/jetty\">Powered by Jetty:// 9.4.6.v20170531</a><hr/>\r\n</body>\r\n</html>\r\n]\r\n```", "labels": ["Defect"]}, {"created": "2017-06-20 12:30:06", "commits": {"acc2eb9c4db9bdbdfe0b95cd5b2b16c253cdb089": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "ff85849cf0d14358a8b69003ef7c48399d070230": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 2, "changesInPackagesSPOON": ["org.asynchttpclient.netty.handler.HttpHandler.handleHttpResponse(io.netty.handler.codec.http.HttpResponse,io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler)", "org.asynchttpclient.netty.handler.HttpHandler.notifyHandler(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.AsyncHandler,org.asynchttpclient.netty.NettyResponseStatus,io.netty.handler.codec.http.HttpRequest,org.asynchttpclient.HttpResponseHeaders)"], "closed": "2017-06-20 21:41:44", "filteredCommits": ["acc2eb9c4db9bdbdfe0b95cd5b2b16c253cdb089", "ff85849cf0d14358a8b69003ef7c48399d070230"], "commitsDetails": [{"nameRev": "ff85849cf0d14358a8b69003ef7c48399d070230 tags/async-http-client-project-2.0.33~1", "commitMessage": "Expect body chunks when aborting during status handling, close #1430\n\nMotivation:\n\nWhen aborting during response status handling, we currently directly\noffer the channel to the pool. This is wrong as we\u2019ll at least receive\nthe LastHttpContent. Currently, this event is received by the next\nrequest being executed with this channel, causing a null response.\n\nModification:\n\nAlways expect chunks when aborting during status or headers handling,\ncausing channel to be drained before being offered to the pool.\n\nNote that AHC 2.1 doesn\u2019t suffer from this issue as aborting now always\nclose the channel.\n\nResult:\n\nNo more null response when aborting on status or headers handling\n", "commitParents": ["70a2bb405aedfa279a8bd1b9fced0f6bfd8d3c7d"], "spoonStatsSkippedReason": "", "commitHash": "ff85849cf0d14358a8b69003ef7c48399d070230", "authoredDateTime": "2017-06-20 23:40:32", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 2, "lines": 5, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/HttpHandler.java"}], "commitDateTime": "2017-06-20 23:40:32", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.notifyHandler(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.AsyncHandler,org.asynchttpclient.netty.NettyResponseStatus,io.netty.handler.codec.http.HttpRequest,org.asynchttpclient.HttpResponseHeaders)"}], "spoonFilePath": "HttpHandler.java"}]}, {"nameRev": "acc2eb9c4db9bdbdfe0b95cd5b2b16c253cdb089 tags/async-http-client-project-2.1.0-alpha21~9", "commitMessage": "Pass expectOtherChunks as true when aborting from status or headers handling, see #1430\n\nWe still expect at least LastHttpContent.\n\nThis change is only for clarity and consistency, as keepAlive parameter\nprevails and is set to false.\n", "commitParents": ["256d2e40a6796283556618b87af4b5730f903f62"], "spoonStatsSkippedReason": "", "commitHash": "acc2eb9c4db9bdbdfe0b95cd5b2b16c253cdb089", "authoredDateTime": "2017-06-20 23:44:41", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/HttpHandler.java"}], "commitDateTime": "2017-06-20 23:44:41", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.handleHttpResponse(io.netty.handler.codec.http.HttpResponse,io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler)"}], "spoonFilePath": "HttpHandler.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1430", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 4, "deletions": 3, "lines": 7, "gitFilesChange": 1}, "title": "Null response when onStatus returns ABORT (2.0 only)", "statsSkippedReason": "", "user": "yuppie-flu", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/handler"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 2, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "# Description:\r\nWhen async-http-client is used to send requests asynchronously, sometimes **onCompleted** method of **AsyncCompletionHandler** receives null responses for some unknown reason. I debugged the behavior but did not find any clues, may you can help me with that. \r\n\r\n# Reproducer repository:\r\nhttps://github.com/yuppie-flu/async-http-client-npe\r\n\r\nThe issue is reproduced not every run, please try several times.\r\n\r\n# Affected version\r\n2.0.32\r\n\r\n", "labels": ["Defect"]}, {"created": "2017-06-15 18:12:32", "commits": {"256d2e40a6796283556618b87af4b5730f903f62": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.extras.registry.AsyncHttpClientFactory.getAsyncHttpClient(org.asynchttpclient.AsyncHttpClientConfig)"], "closed": "2017-06-16 03:18:35", "filteredCommits": ["256d2e40a6796283556618b87af4b5730f903f62"], "commitsDetails": [{"nameRev": "256d2e40a6796283556618b87af4b5730f903f62 tags/async-http-client-project-2.1.0-alpha21~10", "commitMessage": "Fix AsyncHttpClientFactory#getAsyncHttpClient(AsyncHttpClientConfig), close #1428\n\n", "commitParents": ["caec15542860ecf185364c2c7b0864fe9df0bae0"], "spoonStatsSkippedReason": "", "commitHash": "256d2e40a6796283556618b87af4b5730f903f62", "authoredDateTime": "2017-06-15 20:18:32", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "extras/registry/src/main/java/org/asynchttpclient/extras/registry/AsyncHttpClientFactory.java"}], "commitDateTime": "2017-06-16 05:18:32", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.extras.registry.AsyncHttpClientFactory.getAsyncHttpClient(org.asynchttpclient.AsyncHttpClientConfig)"}], "spoonFilePath": "AsyncHttpClientFactory.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1428", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "Extras - Registry is getting incorrect constructor", "statsSkippedReason": "", "user": "nitinsurana", "changesInPackagesGIT": ["extras/registry/src/main/java/org/asynchttpclient/extras/registry"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "```\r\nConstructor<AsyncHttpClient> constructor = asyncHttpClientImplClass.getConstructor(DefaultAsyncHttpClientConfig.class);\r\n ```\r\nShould be \r\n`.getConstructor(AsyncHttpClientConfig.class);`\r\n\r\nOtherwise, all custom AsyncHttpClient implementations are tightly coupled to DefaultAsyncHttpClient and testing becomes difficult.", "labels": ["Defect"]}, {"created": "2017-05-24 20:14:06", "commits": {"887a71b0cc5a89322d3eab260fe3f1d69e47d69a": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "93860f9fc316b42d930ec2aeb9bc02d6aacd8ec5": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.request.body.multipart.part.FileMultipartPart", "org.asynchttpclient.request.body.multipart.part.FileMultipartPart.transferContentTo(java.nio.channels.WritableByteChannel)", "org.asynchttpclient.request.body.multipart.part.FileMultipartPart.getChannel()", "org.asynchttpclient.request.body.multipart.part.FileMultipartPart.transferContentTo(io.netty.buffer.ByteBuf)"], "closed": "2017-12-12 19:53:37", "filteredCommits": ["887a71b0cc5a89322d3eab260fe3f1d69e47d69a"], "commitsDetails": [{"nameRev": "887a71b0cc5a89322d3eab260fe3f1d69e47d69a tags/async-http-client-project-2.0.38~1", "commitMessage": "Fix FileChannel leak when request fails before FileMultipartPart gets written, close #1418\n\nMotivation:\n\nWe currently eagerly open FileChannel in FileMultipartPart prior to\ntrying to send the request.\nIf we can\u2019t even try to send the body, eg because connection fails, we\nnever close this FileChannel.\n\nModification:\n\nLazily open FileChannel when writing.\n\nResult:\n\nNo more file descriptor leak\n", "commitParents": ["ffdbe47fa5e1920fc52ac1797dad2bfadfda9afc"], "spoonStatsSkippedReason": "", "commitHash": "887a71b0cc5a89322d3eab260fe3f1d69e47d69a", "authoredDateTime": "2017-12-12 20:53:23", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 19, "deletions": 13, "lines": 32, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/FileMultipartPart.java"}], "commitDateTime": "2017-12-12 20:55:29", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.FileMultipartPart.transferContentTo(java.nio.channels.WritableByteChannel)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.FileMultipartPart.getChannel()"}, {"UPD": 3, "TOT": 19, "MOV": 10, "INS": 2, "DEL": 4, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.FileMultipartPart"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.FileMultipartPart.transferContentTo(io.netty.buffer.ByteBuf)"}], "spoonFilePath": "FileMultipartPart.java"}]}, {"nameRev": "93860f9fc316b42d930ec2aeb9bc02d6aacd8ec5 tags/async-http-client-project-2.1.0-RC2~1", "commitMessage": "Fix FileChannel leak when request fails before FileMultipartPart gets written, close #1418\n\nMotivation:\n\nWe currently eagerly open FileChannel in FileMultipartPart prior to\ntrying to send the request.\nIf we can\u2019t even try to send the body, eg because connection fails, we\nnever close this FileChannel.\n\nModification:\n\nLazily open FileChannel when writing.\n\nResult:\n\nNo more file descriptor leak\n", "commitParents": ["d2f3c198e6ed05eafea86e11e59f7b8adea97c06"], "spoonStatsSkippedReason": "", "commitHash": "93860f9fc316b42d930ec2aeb9bc02d6aacd8ec5", "authoredDateTime": "2017-12-12 20:53:23", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 19, "deletions": 13, "lines": 32, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/FileMultipartPart.java"}], "commitDateTime": "2017-12-12 20:53:23", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.FileMultipartPart.transferContentTo(java.nio.channels.WritableByteChannel)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.FileMultipartPart.getChannel()"}, {"UPD": 2, "TOT": 18, "MOV": 10, "INS": 2, "DEL": 4, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.FileMultipartPart"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.FileMultipartPart.transferContentTo(io.netty.buffer.ByteBuf)"}], "spoonFilePath": "FileMultipartPart.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1418", "ttf": 201.00027777777777, "gitStatsSummary": {"insertions": 19, "deletions": 13, "lines": 32, "gitFilesChange": 1}, "title": "FilePart file not properly closed on UnknownHostException", "statsSkippedReason": "", "user": "patrick-bergeron", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/request/body/multipart/part"], "spoonStatsSummary": {"UPD": 3, "spoonMethodsChanged": 4, "TOT": 25, "MOV": 12, "INS": 6, "DEL": 4, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Running Java command line application on machine with the following specs:\r\n\r\nWindows 7 Professional - 64 bit\r\nService Pack 1\r\n32 GB RAM\r\nJava Version 1.8.0_91\r\nJava SE Runtime Environment (build 1.8.0_91-b15)\r\nJava HotSpot 64-bit Server VM (build 25.91-b15, mixed mode)\r\n\r\nIf synchronous execute() method called and UnknownHostException thrown, FilePart file is not closed and a subsequent ATOMIC_MOVE call fails with error: 'The process cannot access the file because it is being used by another process.'\r\n\r\n```\r\n    // code snippet with sensitive portions removed\r\n    void transmit(final File file) {\r\n        try {\r\n            String authorization = \"\";\r\n\r\n           ** stuff here to get authorization code\r\n\r\n            BoundRequestBuilder request = client.preparePost(String.format(\"%s/api/files/save\", url))\r\n                    .addHeader(\"Authorization\", authorization)\r\n                    .addHeader(\"Content-Type\", \"multipart/form-data\")\r\n                    .addBodyPart(new StringPart(\"transferId\", UUID.randomUUID().toString()))\r\n                    .addBodyPart(new StringPart(\"timestamp\", Timestamp.from(Instant.now()).toString()))\r\n                    .addBodyPart(new FilePart(\"file\", file, \"text/plain\"));\r\n\r\n            Response response = request.execute().get();\r\n            if ( response != null ) {\r\n                 // do stuff with response here\r\n            }\r\n        } catch ( Exception ex ) {\r\n           // code to copy file to a different folder fails here\r\n           // Reason: The process cannot access the file because it is being used by another process.\r\n           // using the following code to move the file\r\n           Files.move(<source path>, <dest path>, ATOMIC_MOVE);\r\n        }\r\n    }\r\n\r\n```", "labels": ["Defect"]}, {"created": "2017-05-19 03:05:46", "commits": {"f91f40d629cac9daddaf1397eeefb8ee3669b2e5": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.DefaultAsyncHttpClientConfig.Builder", "org.asynchttpclient.DefaultAsyncHttpClientConfig", "org.asynchttpclient.config.AsyncHttpClientConfigDefaults.defaultDisableHttpsAlgorithm()", "org.asynchttpclient.DefaultAsyncHttpClientConfig.Builder.setDisableHttpsAlgorithm(boolean)", "org.asynchttpclient.DefaultAsyncHttpClientConfig.isDisableHttpsAlgorithm()", "org.asynchttpclient.DefaultAsyncHttpClientConfig.Builder.build()", "org.asynchttpclient.isDisableHttpsAlgorithm()", "org.asynchttpclient.netty.ssl.SslEngineFactoryBase.configureSslEngine(javax.net.ssl.SSLEngine,org.asynchttpclient.AsyncHttpClientConfig)"], "closed": "2017-05-19 03:09:32", "filteredCommits": ["f91f40d629cac9daddaf1397eeefb8ee3669b2e5"], "commitsDetails": [{"nameRev": "f91f40d629cac9daddaf1397eeefb8ee3669b2e5 tags/async-http-client-project-2.1.0-alpha19~2", "commitMessage": "Fix and rename setDisableHttps setDisableAlgorithm, close #1413\n\nMotivation:\n\n* it\u2019s buggy and actually sets useInsecureTrustManager\n* the name is not right\n\nModifications:\n\n* change right property\n* rename into `setDisableHttpsEndpointIdentificationAlgorithm`\n\nResult:\n\nIt\u2019s now possible to disable HTTPS endpointIdentificationAlgorithm, for\nexample in order to disable hostname verification.\n", "commitParents": ["82a3e88ed5741a96c11cb71825dfc52101e63454"], "spoonStatsSkippedReason": "", "commitHash": "f91f40d629cac9daddaf1397eeefb8ee3669b2e5", "authoredDateTime": "2017-05-19 05:08:06", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/config/AsyncHttpClientConfigDefaults.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/AsyncHttpClientConfig.java"}, {"insertions": 9, "deletions": 9, "lines": 18, "filePath": "client/src/main/java/org/asynchttpclient/DefaultAsyncHttpClientConfig.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/ssl/SslEngineFactoryBase.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/resources/ahc-default.properties"}], "commitDateTime": "2017-05-19 05:09:03", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.ssl.SslEngineFactoryBase.configureSslEngine(javax.net.ssl.SSLEngine,org.asynchttpclient.AsyncHttpClientConfig)"}], "spoonFilePath": "SslEngineFactoryBase.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.config.AsyncHttpClientConfigDefaults.defaultDisableHttpsAlgorithm()"}], "spoonFilePath": "AsyncHttpClientConfigDefaults.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClientConfig.Builder"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClientConfig"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClientConfig.Builder.build()"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClientConfig.Builder.setDisableHttpsAlgorithm(boolean)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClientConfig.isDisableHttpsAlgorithm()"}], "spoonFilePath": "DefaultAsyncHttpClientConfig.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.isDisableHttpsAlgorithm()"}], "spoonFilePath": "AsyncHttpClientConfig.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1413", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 14, "deletions": 14, "lines": 28, "gitFilesChange": 5}, "title": "DefaultAsyncHttpClientConfig.Builder#setDisableHttpsAlgorithm actually changes useInsecureTrustManager", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient", "client/src/main/java/org/asynchttpclient/netty/ssl", "client/src/main/java/org/asynchttpclient/config", "client/src/main/resources/ahc-default.properties"], "spoonStatsSummary": {"UPD": 17, "spoonMethodsChanged": 8, "TOT": 17, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 4}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Also, the name is not right. Is should be `setDisableHttpsEndpointIdentificationAlgorithm`.", "labels": ["Defect"]}, {"created": "2017-04-28 20:42:26", "commits": {"880a49b4afe2b7299d3bb0dd9e8248b1ea31d479": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "f274990523995f4946d09a037bb393522cd13e9b": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 0, "closed": "2017-04-28 20:42:52", "filteredCommits": ["880a49b4afe2b7299d3bb0dd9e8248b1ea31d479"], "commitsDetails": [{"nameRev": "880a49b4afe2b7299d3bb0dd9e8248b1ea31d479 tags/async-http-client-project-2.1.0-alpha17~3", "commitMessage": "Force netty-handler dependency so dependencyManagement propagates, close #1409\n", "commitParents": ["3734217136edcd0f1e97379540a4f44b0e40f532"], "spoonStatsSkippedReason": "", "commitHash": "880a49b4afe2b7299d3bb0dd9e8248b1ea31d479", "authoredDateTime": "2017-04-28 22:42:42", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 4, "deletions": 0, "lines": 4, "filePath": "client/pom.xml"}], "commitDateTime": "2017-04-28 22:42:42", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "f274990523995f4946d09a037bb393522cd13e9b tags/async-http-client-project-2.0.32~4", "commitMessage": "Force netty-handler dependency so dependencyManagement propagates, close #1409\n", "commitParents": ["78a64f491576cdc6e3049dd3207fde5973a98d16"], "spoonStatsSkippedReason": "", "commitHash": "f274990523995f4946d09a037bb393522cd13e9b", "authoredDateTime": "2017-04-28 22:42:42", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 0, "lines": 4, "filePath": "client/pom.xml"}], "commitDateTime": "2017-05-01 21:15:02", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1409", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Force netty-handler dependency so dependencyManagement propagates", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "netty-reactive streams depends on netty-handler 4.1.7. Just adding a dependencyManagement to 4.1.9 only forces the version for the project, but projects depending on AHC don't get it.\r\nThey do if we explicitly depend on netty-handler.\r\n", "labels": ["Defect"]}, {"created": "2017-04-28 18:57:13", "commits": {"6891a98607e36e548ef46ea7cfb254bc7323ce31": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.timeout.TimeoutsHolder"], "closed": "2017-04-28 18:57:44", "filteredCommits": ["6891a98607e36e548ef46ea7cfb254bc7323ce31"], "commitsDetails": [{"nameRev": "6891a98607e36e548ef46ea7cfb254bc7323ce31 tags/async-http-client-project-2.1.0-alpha15~1", "commitMessage": "Set original remote address in TimeoutHolder, close #1407\n", "commitParents": ["598094c8d124cbc15150d7b698b5ce910292ffac"], "spoonStatsSkippedReason": "", "commitHash": "6891a98607e36e548ef46ea7cfb254bc7323ce31", "authoredDateTime": "2017-04-28 20:57:33", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 0, "lines": 1, "filePath": "client/src/main/java/org/asynchttpclient/netty/timeout/TimeoutsHolder.java"}], "commitDateTime": "2017-04-28 20:57:33", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.timeout.TimeoutsHolder"}], "spoonFilePath": "TimeoutsHolder.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1407", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 0, "lines": 1, "gitFilesChange": 1}, "title": "original remote address is not set in TimeoutHolder, causing NPE on connect timeout", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/timeout"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2017-04-25 15:37:40", "commits": {"976253ae160d0dd650761e37bae55f75c40764d2": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithOpenChannel(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,io.netty.channel.Channel)"], "closed": "2017-04-25 15:38:52", "filteredCommits": ["976253ae160d0dd650761e37bae55f75c40764d2"], "commitsDetails": [{"nameRev": "976253ae160d0dd650761e37bae55f75c40764d2 tags/async-http-client-project-2.1.0-alpha14~1", "commitMessage": "Fix NPE when channel is closed after being fetched from pool, close #1402\n\nMotivation:\n\nchannel.remoteAddress() returns null if channel was closed after it was\npulled from the pool, causing a NPE.\n\nModification:\n\nOnly schedule timeout when channel\u2019s remoteAddress is not null\n\nResult:\n\nNo more NPE\n", "commitParents": ["385e86ca4a36025fc7deee5942297500521dbd82"], "spoonStatsSkippedReason": "", "commitHash": "976253ae160d0dd650761e37bae55f75c40764d2", "authoredDateTime": "2017-04-25 17:38:44", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 7, "deletions": 1, "lines": 8, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java"}], "commitDateTime": "2017-04-25 17:38:44", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 3, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithOpenChannel(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,io.netty.channel.Channel)"}], "spoonFilePath": "NettyRequestSender.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1402", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 7, "deletions": 1, "lines": 8, "gitFilesChange": 1}, "title": "scheduleRequestTimeout NPE when pooled channel was closed in between", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 6, "MOV": 3, "INS": 2, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "This bug was introduced in 2ea7c06065c2d08b2b1b5f589db9ed811ed14741.\r\n\r\n`channel.remoteAddress()` returns null if channel was closed after it was pulled from the pool, causing a NPE.", "labels": ["Defect"]}, {"created": "2017-04-20 08:50:58", "commits": {"b68fa4b4a37ddc2413b4f38e86e21ab49ca10bc8": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.ws.NettyWebSocket.onContinuationFrame(io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame)", "org.asynchttpclient.netty.ws.NettyWebSocket.onBinaryFrame(io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame)", "org.asynchttpclient.netty.ws.NettyWebSocket.FragmentedFrameType", "org.asynchttpclient.netty.ws.NettyWebSocket.handleFrame(io.netty.handler.codec.http.websocketx.WebSocketFrame)", "org.asynchttpclient.netty.ws.NettyWebSocket.onTextFrame(io.netty.handler.codec.http.websocketx.TextWebSocketFrame)", "org.asynchttpclient.netty.ws.NettyWebSocket"], "closed": "2017-04-20 08:53:26", "filteredCommits": ["b68fa4b4a37ddc2413b4f38e86e21ab49ca10bc8"], "commitsDetails": [{"nameRev": "b68fa4b4a37ddc2413b4f38e86e21ab49ca10bc8 tags/async-http-client-project-2.1.0-alpha13~11", "commitMessage": "Notify of WebSocket Continuation frames when aggregateWebSocketFrameFragments is disabled, close #1396\n\nMotivation:\n\n98bef40 introduced a aggregateWebSocketFrameFragments config option.\nBut when it's set to false, WebSocketListener are not notified with\nthose.\n\nModifications:\n\nMemorize current fragment type and notify of Continuation frames\ncontent.\n\nResult:\n\nFixed support of non aggregated fragmented frames\n", "commitParents": ["9ec61049e62ebd7684deddd80a892b746b928bb7"], "spoonStatsSkippedReason": "", "commitHash": "b68fa4b4a37ddc2413b4f38e86e21ab49ca10bc8", "authoredDateTime": "2017-04-20 10:53:08", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 45, "deletions": 0, "lines": 45, "filePath": "client/src/main/java/org/asynchttpclient/netty/ws/NettyWebSocket.java"}], "commitDateTime": "2017-04-20 10:53:08", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.ws.NettyWebSocket.onContinuationFrame(io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame)"}, {"UPD": 1, "TOT": 4, "MOV": 2, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.ws.NettyWebSocket.onBinaryFrame(io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.ws.NettyWebSocket.FragmentedFrameType"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.ws.NettyWebSocket"}, {"UPD": 1, "TOT": 4, "MOV": 2, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.ws.NettyWebSocket.onTextFrame(io.netty.handler.codec.http.websocketx.TextWebSocketFrame)"}, {"UPD": 0, "TOT": 8, "MOV": 5, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.ws.NettyWebSocket.handleFrame(io.netty.handler.codec.http.websocketx.WebSocketFrame)"}], "spoonFilePath": "NettyWebSocket.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1396", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 45, "deletions": 0, "lines": 45, "gitFilesChange": 1}, "title": "Notify of WebSocket Continuation frames when aggregateWebSocketFrameFragments is disabled", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/ws"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 6, "TOT": 19, "MOV": 9, "INS": 8, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "98bef40637212fc1c64ec47b1b11bb1a15144704 introduced a `aggregateWebSocketFrameFragments` config option. But when it's set to false, `WebSocketListener` are not notified with those.", "labels": ["Defect"]}, {"created": "2017-04-18 10:33:07", "commits": {"a0e60a5b54dfcd39235b5aab641ca6bee685dbec": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.handler.WebSocketHandler.handleException(org.asynchttpclient.netty.NettyResponseFuture,java.lang.Throwable)"], "closed": "2017-04-27 14:56:15", "filteredCommits": ["a0e60a5b54dfcd39235b5aab641ca6bee685dbec"], "commitsDetails": [{"nameRev": "a0e60a5b54dfcd39235b5aab641ca6bee685dbec tags/async-http-client-project-2.1.0-alpha15~3", "commitMessage": "Provide original WebSocket exception instead of cause, close #1392\n\nMotivation:\n\nThe WebSocketHandler notifies the WebSocket with the cause Exception.\nThis way loses information, and cause might be null.\n\nMofivivation:\n\nPropagate original exception\n\nResult:\n\nUser has more information about the crash\n", "commitParents": ["9a6a8ae356f8c5aeb6c76d3cc581b1ff5517bdd5"], "spoonStatsSkippedReason": "", "commitHash": "a0e60a5b54dfcd39235b5aab641ca6bee685dbec", "authoredDateTime": "2017-04-27 16:56:07", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/WebSocketHandler.java"}], "commitDateTime": "2017-04-27 16:56:07", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.WebSocketHandler.handleException(org.asynchttpclient.netty.NettyResponseFuture,java.lang.Throwable)"}], "spoonFilePath": "WebSocketHandler.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1392", "ttf": 9.000277777777777, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "Provide original exception in WebSocketHandler#handleException", "statsSkippedReason": "", "user": "makcon", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/handler"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "It is impossible to recognize top level exception in case of an internal error after - \r\nhttps://github.com/AsyncHttpClient/async-http-client/blob/master/client/src/main/java/org/asynchttpclient/netty/handler/WebSocketHandler.java#L145", "labels": ["Defect"]}, {"created": "2017-03-30 14:34:15", "commits": {"2d76bbd735a18c648eeb6a1cf9a72589c5f7050c": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "7035a13f171fef46bb7974cd58880fbd04bfef3b": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.request.NettyChannelConnector.connect(io.netty.bootstrap.Bootstrap,org.asynchttpclient.netty.channel.NettyConnectListener)"], "closed": "2017-03-30 14:35:10", "filteredCommits": ["2d76bbd735a18c648eeb6a1cf9a72589c5f7050c"], "commitsDetails": [{"nameRev": "2d76bbd735a18c648eeb6a1cf9a72589c5f7050c tags/async-http-client-project-2.0.32~10", "commitMessage": "NettyChannelConnector doesn't properly report RejectedExecutionException, close #1385\n", "commitParents": ["a80a011392b887f335299001459e35fd4d33cdaf"], "spoonStatsSkippedReason": "", "commitHash": "2d76bbd735a18c648eeb6a1cf9a72589c5f7050c", "authoredDateTime": "2017-03-30 16:35:02", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyChannelConnector.java"}], "commitDateTime": "2017-03-30 16:35:26", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyChannelConnector.connect(io.netty.bootstrap.Bootstrap,org.asynchttpclient.netty.channel.NettyConnectListener)"}], "spoonFilePath": "NettyChannelConnector.java"}]}, {"nameRev": "7035a13f171fef46bb7974cd58880fbd04bfef3b tags/async-http-client-project-2.1.0-alpha11~3", "commitMessage": "NettyChannelConnector doesn't properly report RejectedExecutionException, close #1385\n", "commitParents": ["cb63be555b4b6301895fb7d020de6d60ecece9ef"], "spoonStatsSkippedReason": "", "commitHash": "7035a13f171fef46bb7974cd58880fbd04bfef3b", "authoredDateTime": "2017-03-30 16:35:02", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyChannelConnector.java"}], "commitDateTime": "2017-03-30 16:35:02", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyChannelConnector.connect(io.netty.bootstrap.Bootstrap,org.asynchttpclient.netty.channel.NettyConnectListener)"}], "spoonFilePath": "NettyChannelConnector.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1385", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "title": "NettyChannelConnector doesn't properly report RejectedExecutionException", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 2, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Wrong condition", "labels": ["Defect"]}, {"created": "2017-03-29 15:34:48", "commits": {"1b35dbe96a25b253ac0381ce59b826a8831a7cb7": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "78a64f491576cdc6e3049dd3207fde5973a98d16": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.ssl.DefaultSslEngineFactory.buildSslContext(org.asynchttpclient.AsyncHttpClientConfig)", "io.netty.handler.ssl.NettySslPackageAccessor", "org.asynchttpclient.config.AsyncHttpClientConfigHelper.Config.getStringArray(java.lang.String)", "org.asynchttpclient.config.AsyncHttpClientConfigDefaults.defaultEnabledCipherSuites()", "org.asynchttpclient.netty.ssl.SslEngineFactoryBase.configureSslEngine(javax.net.ssl.SSLEngine,org.asynchttpclient.AsyncHttpClientConfig)"], "closed": "2017-04-24 11:41:16", "filteredCommits": ["1b35dbe96a25b253ac0381ce59b826a8831a7cb7"], "commitsDetails": [{"nameRev": "1b35dbe96a25b253ac0381ce59b826a8831a7cb7 tags/async-http-client-project-2.1.0-alpha13~3", "commitMessage": "Drop NettySslPackageAccessor, close #1382\n\nMotivation:\n\n* mess up with provided SslContext\n* crash when netty and ahc are in different classloaders\n\nModifications:\n\n* Drop NettySslPackageAccessor\n* Revert to empty conf to use Netty default behavior (only Netty\nrecommended ciphers are available by default)\n\nResult:\n\nDon\u2019t override provided SslContext behavior.\nNo more crash when netty and ahc sits in different classloaders\n", "commitParents": ["fc9191149d9860ad166117c85bf87e44b4e446ea"], "spoonStatsSkippedReason": "", "commitHash": "1b35dbe96a25b253ac0381ce59b826a8831a7cb7", "authoredDateTime": "2017-04-24 13:41:08", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 0, "deletions": 26, "lines": 26, "filePath": "client/src/main/java/io/netty/handler/ssl/NettySslPackageAccessor.java"}, {"insertions": 16, "deletions": 3, "lines": 19, "filePath": "client/src/main/java/org/asynchttpclient/netty/ssl/DefaultSslEngineFactory.java"}, {"insertions": 1, "deletions": 7, "lines": 8, "filePath": "client/src/main/java/org/asynchttpclient/config/AsyncHttpClientConfigDefaults.java"}, {"insertions": 0, "deletions": 8, "lines": 8, "filePath": "client/src/main/java/org/asynchttpclient/netty/ssl/SslEngineFactoryBase.java"}, {"insertions": 4, "deletions": 0, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/config/AsyncHttpClientConfigHelper.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/resources/ahc-default.properties"}], "commitDateTime": "2017-04-24 13:41:08", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "io.netty.handler.ssl.NettySslPackageAccessor"}], "spoonFilePath": "NettySslPackageAccessor.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.ssl.DefaultSslEngineFactory.buildSslContext(org.asynchttpclient.AsyncHttpClientConfig)"}], "spoonFilePath": "DefaultSslEngineFactory.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 3, "spoonMethodName": "org.asynchttpclient.config.AsyncHttpClientConfigDefaults.defaultEnabledCipherSuites()"}], "spoonFilePath": "AsyncHttpClientConfigDefaults.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.ssl.SslEngineFactoryBase.configureSslEngine(javax.net.ssl.SSLEngine,org.asynchttpclient.AsyncHttpClientConfig)"}], "spoonFilePath": "SslEngineFactoryBase.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.config.AsyncHttpClientConfigHelper.Config.getStringArray(java.lang.String)"}], "spoonFilePath": "AsyncHttpClientConfigHelper.java"}]}, {"nameRev": "78a64f491576cdc6e3049dd3207fde5973a98d16 tags/async-http-client-project-2.0.32~5", "commitMessage": "Drop NettySslPackageAccessor, close #1382\n\nMotivation:\n\n* mess up with provided SslContext\n* crash when netty and ahc are in different classloaders\n\nModifications:\n\n* Drop NettySslPackageAccessor\n* Revert to empty conf to use Netty default behavior (only Netty\nrecommended ciphers are available by default)\n\nResult:\n\nDon\u2019t override provided SslContext behavior.\nNo more crash when netty and ahc sits in different classloaders\n", "commitParents": ["cec67cf78de39d25cf7c2bf11c0dcec16ff91297"], "spoonStatsSkippedReason": "", "commitHash": "78a64f491576cdc6e3049dd3207fde5973a98d16", "authoredDateTime": "2017-04-24 13:41:08", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 26, "lines": 26, "filePath": "client/src/main/java/io/netty/handler/ssl/NettySslPackageAccessor.java"}, {"insertions": 18, "deletions": 4, "lines": 22, "filePath": "client/src/main/java/org/asynchttpclient/netty/ssl/DefaultSslEngineFactory.java"}, {"insertions": 1, "deletions": 7, "lines": 8, "filePath": "client/src/main/java/org/asynchttpclient/config/AsyncHttpClientConfigDefaults.java"}, {"insertions": 0, "deletions": 8, "lines": 8, "filePath": "client/src/main/java/org/asynchttpclient/netty/ssl/SslEngineFactoryBase.java"}, {"insertions": 4, "deletions": 0, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/config/AsyncHttpClientConfigHelper.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/resources/ahc-default.properties"}], "commitDateTime": "2017-04-24 13:43:47", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "io.netty.handler.ssl.NettySslPackageAccessor"}], "spoonFilePath": "NettySslPackageAccessor.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.ssl.DefaultSslEngineFactory.buildSslContext(org.asynchttpclient.AsyncHttpClientConfig)"}], "spoonFilePath": "DefaultSslEngineFactory.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 3, "spoonMethodName": "org.asynchttpclient.config.AsyncHttpClientConfigDefaults.defaultEnabledCipherSuites()"}], "spoonFilePath": "AsyncHttpClientConfigDefaults.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.ssl.SslEngineFactoryBase.configureSslEngine(javax.net.ssl.SSLEngine,org.asynchttpclient.AsyncHttpClientConfig)"}], "spoonFilePath": "SslEngineFactoryBase.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.config.AsyncHttpClientConfigHelper.Config.getStringArray(java.lang.String)"}], "spoonFilePath": "AsyncHttpClientConfigHelper.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1382", "ttf": 25.00027777777778, "gitStatsSummary": {"insertions": 22, "deletions": 45, "lines": 67, "gitFilesChange": 6}, "title": "IllegalAccessError accessing field JdkSslContext.SUPPORTED_CIPHERS when Netty and AHC sit in different ClassLoaders", "statsSkippedReason": "", "user": "jamesnetherton", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/ssl", "client/src/main/java/org/asynchttpclient/config", "client/src/main/resources/ahc-default.properties", "client/src/main/java/io/netty/handler/ssl"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 5, "TOT": 11, "MOV": 1, "INS": 4, "DEL": 6, "spoonFilesChanged": 5}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Usage of [NettySslPackageAccessor](https://github.com/AsyncHttpClient/async-http-client/blob/master/client/src/main/java/io/netty/handler/ssl/NettySslPackageAccessor.java) presents some problems in environments where multiple ClassLoaders are in use.\r\n\r\nWithin an OSGi or JavaEE container, it's not unreasonable to expect that  `io.netty.handler.ssl.NettySslPackageAccessor` and `io.netty.handler.ssl.JdkSslContext` will be loaded by different ClassLoaders (since they're located in separate JARs).\r\n\r\nIf this is the case, the attempt access package-private static field `JdkSslContext.SUPPORTED_CIPHERS` will fail with an `IllegalAccessError` since the package-private fields are 'scoped' at the `ClassLoader` level. Here's an example stack trace when this scenario plays out on JBoss WildFly:\r\n\r\n```\r\njava.lang.IllegalAccessError: tried to access field io.netty.handler.ssl.JdkSslContext.SUPPORTED_CIPHERS from class io.netty.handler.ssl.NettySslPackageAccessor\r\n\tat io.netty.handler.ssl.NettySslPackageAccessor.jdkSupportedCipherSuites(NettySslPackageAccessor.java:24)\r\n\tat org.asynchttpclient.config.AsyncHttpClientConfigDefaults.defaultEnabledCipherSuites(AsyncHttpClientConfigDefaults.java:85)\r\n\tat org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder.<init>(DefaultAsyncHttpClientConfig.java:635)\r\n\tat org.asynchttpclient.DefaultAsyncHttpClient.<init>(DefaultAsyncHttpClient.java:67)\r\n\r\n```", "labels": ["Defect"]}, {"created": "2017-03-29 09:14:00", "commits": {"271a3b445bcdee497f33a678fd864f8d649a3221": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "391b4d8e0eced22e56f390d4c5ee8a51c1c98d27": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "3e6e6e1b25e56d87494962c9e5883c1b45429607": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "8dae6b6c45ae67bbf1914b6dd9521cbb0fc506e7": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.request.body.NettyReactiveStreamsBody.NettySubscriber", "org.asynchttpclient.netty.request.body.NettyReactiveStreamsBody.NettySubscriber.delayedStart()", "org.asynchttpclient.netty.request.body.NettyReactiveStreamsBody.write(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture)", "org.asynchttpclient.netty.request.body.NettyReactiveStreamsBody.NettySubscriber.onSubscribe(org.reactivestreams.Subscription)"], "closed": "2017-11-28 12:10:40", "filteredCommits": ["271a3b445bcdee497f33a678fd864f8d649a3221", "8dae6b6c45ae67bbf1914b6dd9521cbb0fc506e7", "3e6e6e1b25e56d87494962c9e5883c1b45429607", "391b4d8e0eced22e56f390d4c5ee8a51c1c98d27"], "commitsDetails": [{"nameRev": "271a3b445bcdee497f33a678fd864f8d649a3221 tags/async-http-client-project-2.1.0-alpha22~8", "commitMessage": "Upgrade to RfJava2 for testing reactive streams, close #1380\n\nMotivation:\n\nReactiveStreamsTest#testConnectionDoesNotGetClosed randomly fails.\nThe server sometimes receives chunks out of order.\n\nModifications:\n\nThe issue seems to be a RxJava1 one.\nUpgrade to RxJava2.\n\nResult:\n\nNo more erroneous random test failures\n", "commitParents": ["919e478d65f9896649d3876a6d31565255f01921"], "spoonStatsSkippedReason": "", "commitHash": "271a3b445bcdee497f33a678fd864f8d649a3221", "authoredDateTime": "2017-07-24 22:07:31", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 6, "deletions": 19, "lines": 25, "filePath": "client/src/test/java/org/asynchttpclient/reactivestreams/ReactiveStreamsTest.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "extras/rxjava2/pom.xml"}, {"insertions": 5, "deletions": 2, "lines": 7, "filePath": "client/pom.xml"}, {"insertions": 19, "deletions": 8, "lines": 27, "filePath": "pom.xml"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "extras/rxjava/pom.xml"}], "commitDateTime": "2017-07-24 22:07:31", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 5, "MOV": 1, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.reactivestreams.ReactiveStreamsTest.createPublisher(byte[],int)"}, {"UPD": 3, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.reactivestreams.ReactiveStreamsTest.testFailingStream()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.reactivestreams.ReactiveStreamsTest.ByteBufIterable.iterator().1"}], "spoonFilePath": "ReactiveStreamsTest.java"}]}, {"nameRev": "391b4d8e0eced22e56f390d4c5ee8a51c1c98d27 tags/async-http-client-project-2.1.0-RC1~10", "commitMessage": "Don't automatically start requesting on subscribe, close #1380\n\nMotivation:\n\nHandlerSubscriber automatically starts requests when calling\nonSubscribe.\n\nBut when a publisher subscribes, RxJava automatically requests the\nSubscription if there are some pending requests.\n\nWhen such race condition happen, we end up with 2 threads (calling and\nevent loop) competing for requesting the Subscription. This results is\nout of order published messages.\n\nModification:\n\nMake HandlerSubscriber#onSubscribe noop and actually delay it to after\nPublisher has subscribed.\n\nResult:\n\nNo more out of order messages.\n", "commitParents": ["8c27b6790d246a4ca763db8f050410359270c49b"], "spoonStatsSkippedReason": "", "commitHash": "391b4d8e0eced22e56f390d4c5ee8a51c1c98d27", "authoredDateTime": "2017-11-28 13:09:42", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 12, "deletions": 0, "lines": 12, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/body/NettyReactiveStreamsBody.java"}], "commitDateTime": "2017-11-28 13:10:22", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.body.NettyReactiveStreamsBody.NettySubscriber.delayedStart()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.body.NettyReactiveStreamsBody.NettySubscriber"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.body.NettyReactiveStreamsBody.NettySubscriber.onSubscribe(org.reactivestreams.Subscription)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.body.NettyReactiveStreamsBody.write(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture)"}], "spoonFilePath": "NettyReactiveStreamsBody.java"}]}, {"nameRev": "3e6e6e1b25e56d87494962c9e5883c1b45429607 tags/async-http-client-project-2.1.0-alpha11~7", "commitMessage": "Try to get more information, see #1380\n", "commitParents": ["9bf0399cd1930fceb91067c91714ad86c0e87d54"], "spoonStatsSkippedReason": "", "commitHash": "3e6e6e1b25e56d87494962c9e5883c1b45429607", "authoredDateTime": "2017-03-30 11:16:15", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 0, "lines": 2, "filePath": "client/src/test/java/org/asynchttpclient/reactivestreams/ReactiveStreamsTest.java"}], "commitDateTime": "2017-03-30 11:16:15", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.reactivestreams.ReactiveStreamsTest.testConnectionDoesNotGetClosed()"}], "spoonFilePath": "ReactiveStreamsTest.java"}]}, {"nameRev": "8dae6b6c45ae67bbf1914b6dd9521cbb0fc506e7 tags/async-http-client-project-2.1.0-alpha21~6", "commitMessage": "Adding some more detail to the ReactiveStreamsTest, see #1380\n\n", "commitParents": ["8696cfa4640cf5304118d0eb2218eb1b2a510814"], "spoonStatsSkippedReason": "", "commitHash": "8dae6b6c45ae67bbf1914b6dd9521cbb0fc506e7", "authoredDateTime": "2017-07-05 07:17:46", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 15, "deletions": 5, "lines": 20, "filePath": "client/src/test/java/org/asynchttpclient/reactivestreams/ReactiveStreamsTest.java"}], "commitDateTime": "2017-07-05 13:17:46", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.reactivestreams.ReactiveStreamsTest.testConnectionDoesNotGetClosed()"}], "spoonFilePath": "ReactiveStreamsTest.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1380", "ttf": 244.00027777777777, "gitStatsSummary": {"insertions": 12, "deletions": 0, "lines": 12, "gitFilesChange": 1}, "title": "Spurious ReactiveStreamsTest#testConnectionDoesNotGetClosed failure", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request/body"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 4, "TOT": 4, "MOV": 0, "INS": 4, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Reproducer: `org.asynchttpclient.reactivestreams.ReactiveStreamsTest#main` (might have to run several times):\r\n\r\n```\r\ntestConnectionDoesNotGetClosed(org.asynchttpclient.reactivestreams.ReactiveStreamsTest)  Time elapsed: 0.342 sec  <<< FAILURE!\r\njava.lang.AssertionError:  expected [[B@95f1422] but found [[B@31b7112d]\r\n\tat org.asynchttpclient.reactivestreams.ReactiveStreamsTest.testConnectionDoesNotGetClosed(ReactiveStreamsTest.java:66)\r\n```", "labels": ["Defect"]}, {"created": "2017-03-28 20:58:58", "commits": {"f2408458fa98e5b03835d856aa2870493d26239a": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "06c58c6f742fb6d2aa8b468f634aaeddd283a2af": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "9fc4e418389b53bb25344b805367f0b97fe909e7": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.channel.ChannelManager.tryToOfferChannelToPool(io.netty.channel.Channel,org.asynchttpclient.AsyncHandler,boolean,java.lang.Object)"], "closed": "2017-03-30 08:36:54", "filteredCommits": ["06c58c6f742fb6d2aa8b468f634aaeddd283a2af"], "commitsDetails": [{"nameRev": "f2408458fa98e5b03835d856aa2870493d26239a tags/async-http-client-project-2.1.0-alpha10~1", "commitMessage": "Tie connection counter to the future/channel, close #1377 (#1379)\n\nInstead of manually tracking where connection counter should be\r\nreleased, just do it when future becomes done or connection becomes\r\nclosed.\r\n\r\nI believe, code is safer against leaks this way.", "commitParents": ["5351b5c9c9ec12dfdc8baedac1cbbe961a0232df"], "spoonStatsSkippedReason": "", "commitHash": "f2408458fa98e5b03835d856aa2870493d26239a", "authoredDateTime": "2017-03-30 11:36:53", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 4, "deletions": 1, "lines": 5, "filePath": "client/src/main/java/org/asynchttpclient/DefaultAsyncHttpClient.java"}, {"insertions": 7, "deletions": 85, "lines": 92, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/ChannelManager.java"}, {"insertions": 80, "deletions": 0, "lines": 80, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/ConnectionSemaphore.java"}, {"insertions": 13, "deletions": 13, "lines": 26, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java"}, {"insertions": 52, "deletions": 0, "lines": 52, "filePath": "client/src/main/java/org/asynchttpclient/netty/NettyResponseFuture.java"}, {"insertions": 19, "deletions": 7, "lines": 26, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/NettyConnectListener.java"}, {"insertions": 6, "deletions": 6, "lines": 12, "filePath": "client/src/test/java/org/asynchttpclient/netty/NettyResponseFutureTest.java"}], "commitDateTime": "2017-03-30 10:36:53", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFutureTest.testGetThrowsExceptionOnAbort()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFutureTest.testGetContentThrowsCancellationExceptionIfCancelled()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFutureTest.testGetThrowsExceptionThrownByAsyncHandler()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFutureTest.testCancel()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFutureTest.testGet()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFutureTest.testCancelOnAlreadyCancelled()"}], "spoonFilePath": "NettyResponseFutureTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ConnectionSemaphore"}], "spoonFilePath": "ConnectionSemaphore.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.releasePartitionKeyLock()"}, {"UPD": 0, "TOT": 5, "MOV": 0, "INS": 5, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.takePartitionKeyLock()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.cancel(boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.terminateAndExit()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.acquirePartitionLockLazily()"}], "spoonFilePath": "NettyResponseFuture.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClient"}], "spoonFilePath": "DefaultAsyncHttpClient.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.newNettyResponseFuture(org.asynchttpclient.Request,org.asynchttpclient.AsyncHandler,org.asynchttpclient.netty.request.NettyRequest,org.asynchttpclient.proxy.ProxyServer)"}, {"UPD": 1, "TOT": 5, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithNewChannel(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,boolean).1.onSuccess(java.util.List)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithNewChannel(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,boolean).1.onFailure(java.lang.Throwable)"}, {"UPD": 1, "TOT": 7, "MOV": 1, "INS": 3, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithNewChannel(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,boolean)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender"}], "spoonFilePath": "NettyRequestSender.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 2, "INS": 2, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.tryToOfferChannelToPool(io.netty.channel.Channel,org.asynchttpclient.AsyncHandler,boolean,java.lang.Object)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.tryAcquirePerHost(java.lang.Object)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.configureBootstraps(org.asynchttpclient.netty.request.NettyRequestSender).3"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.newDrainCallback(org.asynchttpclient.netty.NettyResponseFuture,io.netty.channel.Channel,boolean,java.lang.Object).5"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.newHttpContentDecompressor().4"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.registerOpenChannel(io.netty.channel.Channel,java.lang.Object)"}, {"UPD": 1, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.configureBootstraps(org.asynchttpclient.netty.request.NettyRequestSender).2.initChannel(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.getFreeConnectionsForHost(java.lang.Object)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.getClientStats()"}, {"UPD": 0, "TOT": 14, "MOV": 1, "INS": 0, "DEL": 13, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.configureBootstraps(org.asynchttpclient.netty.request.NettyRequestSender).1.initChannel(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.acquireChannelLock(java.lang.Object)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.tryAcquireGlobal()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.newDrainCallback(org.asynchttpclient.netty.NettyResponseFuture,io.netty.channel.Channel,boolean,java.lang.Object).5.call()"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.configureBootstraps(org.asynchttpclient.netty.request.NettyRequestSender).3.initChannel(io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.configureBootstraps(org.asynchttpclient.netty.request.NettyRequestSender).2"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.releaseChannelLock(java.lang.Object)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.isOpen()"}], "spoonFilePath": "ChannelManager.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.channel.NettyConnectListener.abortChannelPreemption(io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.NettyConnectListener.onSuccess(io.netty.channel.Channel,java.net.InetSocketAddress).1.onSuccess(io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.NettyConnectListener.onSuccess(io.netty.channel.Channel,java.net.InetSocketAddress).1"}, {"UPD": 6, "TOT": 6, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.NettyConnectListener"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.NettyConnectListener.onSuccess(io.netty.channel.Channel,java.net.InetSocketAddress)"}], "spoonFilePath": "NettyConnectListener.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "9fc4e418389b53bb25344b805367f0b97fe909e7", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "06c58c6f742fb6d2aa8b468f634aaeddd283a2af tags/async-http-client-project-2.0.32~9", "commitMessage": "Release channel lock when channel is not offered to pool, see #1377\n", "commitParents": ["2d76bbd735a18c648eeb6a1cf9a72589c5f7050c"], "spoonStatsSkippedReason": "", "commitHash": "06c58c6f742fb6d2aa8b468f634aaeddd283a2af", "authoredDateTime": "2017-03-30 21:05:52", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 2, "lines": 5, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/HttpHandler.java"}, {"insertions": 9, "deletions": 13, "lines": 22, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/ChannelManager.java"}], "commitDateTime": "2017-03-30 21:05:52", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "HttpHandler.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 1, "INS": 2, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.tryToOfferChannelToPool(io.netty.channel.Channel,org.asynchttpclient.AsyncHandler,boolean,java.lang.Object)"}], "spoonFilePath": "ChannelManager.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1377", "ttf": 1.0002777777777778, "gitStatsSummary": {"insertions": 12.0, "deletions": 15.0, "lines": 27.0, "gitFilesChange": 2}, "title": "Connection count leak", "statsSkippedReason": "", "user": "stepancheg", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/channel", "client/src/main/java/org/asynchttpclient/netty/handler"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 1, "TOT": 5.0, "MOV": 1.0, "INS": 2.0, "DEL": 2.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "Somewhere in our program we have a connection counter leak.\r\n\r\nThere are no open connections, but `AsyncHttpClient` throws too many connections exception.\r\n\r\nI cannot exactly reproduce the problem, but looking at the code I see at least one issue in function `org.asynchttpclient.netty.request.NettyRequestSender#sendRequestWithNewChannel`:\r\n\r\nIf `RequestHostnameResolver.INSTANCE.resolve` throws an exception after `acquireChannelLock` (for example, in `asyncHandlerExtensions.onHostnameResolutionAttempt(name)`), then counter is leaked.", "labels": ["Defect"]}, {"created": "2017-03-21 11:52:35", "commits": {"93e7d18d38145ddd3959e3e1a8d03d682e59efca": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "e85e9bab50164642d227257ee4fc65461094eea9": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2017-03-27 19:17:07", "filteredCommits": [], "commitsDetails": [{"nameRev": "93e7d18d38145ddd3959e3e1a8d03d682e59efca tags/async-http-client-project-2.0.31~1", "commitMessage": "Support null executor in NettyResponseFuture#addListener, close #1369 (#1371)\n\n", "commitParents": ["cbe06859dc1d1a4085b6049d2f422af512b413ca"], "spoonStatsSkippedReason": "", "commitHash": "93e7d18d38145ddd3959e3e1a8d03d682e59efca", "authoredDateTime": "2017-03-28 05:17:06", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 0, "lines": 3, "filePath": "client/src/main/java/org/asynchttpclient/netty/NettyResponseFuture.java"}], "commitDateTime": "2017-03-27 21:17:35", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.addListener(java.lang.Runnable,java.util.concurrent.Executor)"}], "spoonFilePath": "NettyResponseFuture.java"}]}, {"nameRev": "e85e9bab50164642d227257ee4fc65461094eea9 tags/async-http-client-project-2.1.0-alpha9~4", "commitMessage": "Support null executor in NettyResponseFuture#addListener, close #1369 (#1371)\n\n", "commitParents": ["a3218912311bcf505eada182eb26effde55b6a11"], "spoonStatsSkippedReason": "", "commitHash": "e85e9bab50164642d227257ee4fc65461094eea9", "authoredDateTime": "2017-03-28 05:17:06", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 0, "lines": 3, "filePath": "client/src/main/java/org/asynchttpclient/netty/NettyResponseFuture.java"}], "commitDateTime": "2017-03-27 21:17:06", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.addListener(java.lang.Runnable,java.util.concurrent.Executor)"}], "spoonFilePath": "NettyResponseFuture.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1369", "ttf": 6.000277777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "ListenableFuture#addListener with null executor throws NPE", "statsSkippedReason": "", "user": "joedj", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "ListenableFuture#addListener javadoc says:\r\n\r\n    * Executor can be <code>null</code>, in that case executor will be executed\r\n    * in the thread where completion happens.\r\n\r\nHowever, this doesn't work with the `NettyResponseFuture` implementation:\r\n\r\n    java.lang.NullPointerException\r\n\tat java.util.concurrent.CompletableFuture.screenExecutor(CompletableFuture.java:415)\r\n\tat java.util.concurrent.CompletableFuture.whenCompleteAsync(CompletableFuture.java:2142)\r\n\tat org.asynchttpclient.netty.NettyResponseFuture.addListener(NettyResponseFuture.java:257)\r\n\r\nI'm happy to submit a pull request for this issue, if you can indicate how you want it fixed (i.e. update the documentation to reflect current behavour, or change behaviour to match documentation).\r\n", "labels": ["Defect"]}, {"created": "2017-03-20 15:27:25", "commits": {"a3218912311bcf505eada182eb26effde55b6a11": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "cbe06859dc1d1a4085b6049d2f422af512b413ca": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2017-03-27 19:13:53", "filteredCommits": [], "commitsDetails": [{"nameRev": "a3218912311bcf505eada182eb26effde55b6a11 tags/async-http-client-project-2.1.0-alpha9~5", "commitMessage": "Set NettyResponseFuture#isDone before invoking abort callbacks, close #1368 (#1370)\n\n", "commitParents": ["0deb251253a1c0df79448e89c32f087d8cf8e02a"], "spoonStatsSkippedReason": "", "commitHash": "a3218912311bcf505eada182eb26effde55b6a11", "authoredDateTime": "2017-03-28 05:13:52", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/netty/NettyResponseFuture.java"}], "commitDateTime": "2017-03-27 21:13:52", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.abort(java.lang.Throwable)"}], "spoonFilePath": "NettyResponseFuture.java"}]}, {"nameRev": "cbe06859dc1d1a4085b6049d2f422af512b413ca tags/async-http-client-project-2.0.31~2", "commitMessage": "Set NettyResponseFuture#isDone before invoking abort callbacks, close #1368 (#1370)\n\n", "commitParents": ["cda5ac54881d9825bfebcddec2b655e6e2d08a14"], "spoonStatsSkippedReason": "", "commitHash": "cbe06859dc1d1a4085b6049d2f422af512b413ca", "authoredDateTime": "2017-03-28 05:13:52", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/netty/NettyResponseFuture.java"}], "commitDateTime": "2017-03-27 21:14:24", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.abort(java.lang.Throwable)"}], "spoonFilePath": "NettyResponseFuture.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1368", "ttf": 7.000277777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "NettyResponseFuture#abort invokes callbacks before isDone() returns true", "statsSkippedReason": "", "user": "joedj", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "This issue makes it difficult to e.g. integrate `NettyResponseFuture` with Guava's `ListenableFuture`.\r\n\r\nThe current behaviour is incompatible with `com.google.common.util.concurrent.Futures#getDone(Future)`, because `getDone(future)` checks the state of `future.isDone()` before calling `future.get()`.\r\n\r\nI believe this could be fixed by swapping the order of `future.completeExceptionally(t)` and `terminateAndExit()` in `NettyResponseFuture#abort`, or possibly by changing `NettyResponseFuture#isDone()` to delegate to the internal `future.isDone()`.\r\n\r\nHere is a test case that demonstrates the issue:\r\n\r\n```java\r\nimport com.google.common.util.concurrent.MoreExecutors;\r\nimport org.asynchttpclient.AsyncHttpClient;\r\nimport org.asynchttpclient.DefaultAsyncHttpClient;\r\nimport org.asynchttpclient.ListenableFuture;\r\nimport org.asynchttpclient.Response;\r\nimport org.junit.Test;\r\n\r\nimport java.util.concurrent.Executor;\r\nimport java.util.concurrent.Executors;\r\nimport java.util.concurrent.atomic.AtomicBoolean;\r\n\r\nimport static org.junit.Assert.*;\r\n\r\npublic class NettyResponseFutureTest {\r\n\r\n    // this test always fails, because isDone() is called on the netty callback thread\r\n    @Test\r\n    public void testIsDoneBeforeCallbacks() throws Exception {\r\n        checkFutureIsDone(MoreExecutors.directExecutor());\r\n    }\r\n\r\n    // this test usually passes, because there's a race between netty setting isDone\r\n    // and the listener being invoked on the executor thread\r\n    @Test\r\n    public void testIsDoneBeforeCallbacksInAnotherThread() throws InterruptedException {\r\n        checkFutureIsDone(Executors.newSingleThreadExecutor());\r\n    }\r\n\r\n    private void checkFutureIsDone(Executor executor) throws InterruptedException {\r\n        AsyncHttpClient client = new DefaultAsyncHttpClient();\r\n        // the intent here is to generate ConnectException\r\n        ListenableFuture<Response> future = client.prepareGet(\"http://localhost:12345/\").execute();\r\n\r\n        AtomicBoolean done = new AtomicBoolean();\r\n        AtomicBoolean complete = new AtomicBoolean();\r\n\r\n        future.addListener(() -> {\r\n            done.set(future.isDone());\r\n            synchronized (complete) {\r\n                complete.set(true);\r\n                complete.notifyAll();\r\n            }\r\n        }, executor);\r\n\r\n        synchronized (complete) {\r\n            while (!complete.get()) {\r\n                complete.wait();\r\n            }\r\n        }\r\n\r\n        assertTrue(\"Listener called before future.isDone()\", done.get());\r\n    }\r\n\r\n}\r\n```", "labels": ["Defect"]}, {"created": "2017-03-14 14:12:31", "commits": {"f857156b9f5bd15da0fe19dafda4b2e1e4921c18": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.ws.NettyWebSocket.releaseBufferedFrames()"], "closed": "2017-03-14 14:15:29", "filteredCommits": ["f857156b9f5bd15da0fe19dafda4b2e1e4921c18"], "commitsDetails": [{"nameRev": "f857156b9f5bd15da0fe19dafda4b2e1e4921c18 tags/async-http-client-project-2.1.0-alpha8~1", "commitMessage": "Fix NPE on WebSocket close, close #1366\n\nMotivation:\n\nWe always try to release buffered frames when WebSocket gets closed.\nBut the buffer might be null at this time (no frame was buffered or\nthey were handled once WebSocket was open).\nWe currently crash with NPE.\n\nModification:\n\nCheck for null frame buffer when trying to release.\n\nResult:\n\nNo more NPE\n", "commitParents": ["b594a850f6a8a5c2bf23231b2da58cf7bc70c57d"], "spoonStatsSkippedReason": "", "commitHash": "f857156b9f5bd15da0fe19dafda4b2e1e4921c18", "authoredDateTime": "2017-03-14 15:15:20", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 4, "deletions": 2, "lines": 6, "filePath": "client/src/main/java/org/asynchttpclient/netty/ws/NettyWebSocket.java"}], "commitDateTime": "2017-03-14 15:15:20", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.ws.NettyWebSocket.releaseBufferedFrames()"}], "spoonFilePath": "NettyWebSocket.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1366", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 4, "deletions": 2, "lines": 6, "gitFilesChange": 1}, "title": "NPE when closing WebSocket", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/ws"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "2.1.0-beta7:\r\n\r\n```\r\njava.lang.NullPointerException: null\r\n        at org.asynchttpclient.netty.ws.NettyWebSocket.releaseBufferedFrames(NettyWebSocket.java:84)\r\n        at org.asynchttpclient.netty.ws.NettyWebSocket.close(NettyWebSocket.java:252)\r\n        at org.asynchttpclient.netty.handler.WebSocketHandler.handleChannelInactive(WebSocketHandler.java:163)\r\n```", "labels": ["Defect"]}, {"created": "2017-03-11 15:16:49", "commits": {"5bc7c5058514f4239f5d19d3a807e9cf8803f39a": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "7743c664edafc633266af00a04d77dd01670c34a": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "16bd7473380b8e2c6061135aa1575b2eeaae2098": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "cda5ac54881d9825bfebcddec2b655e6e2d08a14": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.NettyResponseFuture.setTimeoutsHolder(org.asynchttpclient.netty.timeout.TimeoutsHolder)", "org.asynchttpclient.netty.NettyResponseFuture", "org.asynchttpclient.netty.NettyResponseFuture.getTimeoutsHolder()", "org.asynchttpclient.netty.NettyResponseFuture.cancelTimeouts()", "org.asynchttpclient.netty.NettyResponseFuture.toString()"], "closed": "2017-03-11 20:06:38", "filteredCommits": ["5bc7c5058514f4239f5d19d3a807e9cf8803f39a"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "16bd7473380b8e2c6061135aa1575b2eeaae2098", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "7743c664edafc633266af00a04d77dd01670c34a", "authoredDateTime": "", "commitGHEventType": "closed", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "5bc7c5058514f4239f5d19d3a807e9cf8803f39a tags/async-http-client-project-2.1.0-alpha7~1", "commitMessage": "Make cancelTimeouts threadsafe, close #1365\n\nMotivation:\n\n`cancelTimeouts` is currently not threadsafe. We can end up with a NPE\n, eg when request completes at the same time user cancel the future.\n\nModification:\n\nUse CAS to perform `cancelTimeouts`.\n\nResult:\n\nNo more NPE on `cancelTimeouts`.\n", "commitParents": ["40f35bae1ae983343b28ebc726cf2b391c8e0a52"], "spoonStatsSkippedReason": "", "commitHash": "5bc7c5058514f4239f5d19d3a807e9cf8803f39a", "authoredDateTime": "2017-03-11 21:03:08", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 11, "deletions": 7, "lines": 18, "filePath": "client/src/main/java/org/asynchttpclient/netty/NettyResponseFuture.java"}], "commitDateTime": "2017-03-11 21:18:36", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.setTimeoutsHolder(org.asynchttpclient.netty.timeout.TimeoutsHolder)"}, {"UPD": 0, "TOT": 3, "MOV": 1, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.getTimeoutsHolder()"}, {"UPD": 0, "TOT": 6, "MOV": 0, "INS": 3, "DEL": 3, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.cancelTimeouts()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.toString()"}], "spoonFilePath": "NettyResponseFuture.java"}]}, {"nameRev": "cda5ac54881d9825bfebcddec2b655e6e2d08a14 tags/async-http-client-project-2.0.31~3", "commitMessage": "Make cancelTimeouts threadsafe, close #1365\n\nMotivation:\n\n`cancelTimeouts` is currently not threadsafe. We can end up with a NPE\n, eg when request completes at the same time user cancel the future.\n\nModification:\n\nUse CAS to perform `cancelTimeouts`.\n\nResult:\n\nNo more NPE on `cancelTimeouts`.\n", "commitParents": ["5e2a9098e97705553261c052dfb0e155bfb2bd75"], "spoonStatsSkippedReason": "", "commitHash": "cda5ac54881d9825bfebcddec2b655e6e2d08a14", "authoredDateTime": "2017-03-11 21:03:08", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 11, "deletions": 7, "lines": 18, "filePath": "client/src/main/java/org/asynchttpclient/netty/NettyResponseFuture.java"}], "commitDateTime": "2017-03-11 21:18:19", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.setTimeoutsHolder(org.asynchttpclient.netty.timeout.TimeoutsHolder)"}, {"UPD": 0, "TOT": 3, "MOV": 1, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.getTimeoutsHolder()"}, {"UPD": 0, "TOT": 6, "MOV": 0, "INS": 3, "DEL": 3, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.cancelTimeouts()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.toString()"}], "spoonFilePath": "NettyResponseFuture.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1365", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 11.0, "deletions": 7.0, "lines": 18.0, "gitFilesChange": 1}, "title": "Race NettyResponseFuture.cancel() may produce NPE", "statsSkippedReason": "", "user": "isopov", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 5, "TOT": 16.0, "MOV": 2.0, "INS": 8.0, "DEL": 6.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 3, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "It seems that NettyResponseFuture.cancel() is written with concurency support with CAS to prevent double execution. But assigning null to timeoutsHolder is not protected with CAS or storing it to the local. This may result in NPE. Here it the test, that may reproduce it (or may not):\r\n```\r\npackage com.sopovs.moradanen.jcstress.asynchttpclient;\r\n\r\nimport java.util.concurrent.BlockingQueue;\r\nimport java.util.concurrent.LinkedBlockingQueue;\r\n\r\nimport org.asynchttpclient.DefaultAsyncHttpClient;\r\nimport org.asynchttpclient.ListenableFuture;\r\nimport org.asynchttpclient.Response;\r\n\r\npublic class RaceCancelTest {\r\n\tpublic static void main(String[] args) throws InterruptedException {\r\n\t\ttry (DefaultAsyncHttpClient httpClient = new DefaultAsyncHttpClient()) {\r\n\t\t\tBlockingQueue<ListenableFuture<Response>> queue1 = new LinkedBlockingQueue<>(),\r\n\t\t\t\t\tqueue2 = new LinkedBlockingQueue<>();\r\n\t\t\tThread thread1 = new CancellingThread(queue1), thread2 = new CancellingThread(queue2);\r\n\t\t\tthread1.start();\r\n\t\t\tthread2.start();\r\n\t\t\tfor (int i = 0; i < 100; i++) {\r\n\t\t\t\tListenableFuture<Response> future = httpClient.prepareGet(\"http://google.com\").execute();\r\n\t\t\t\tqueue1.add(future);\r\n\t\t\t\tqueue2.add(future);\r\n\t\t\t\twhile(!queue1.isEmpty() || !queue2.isEmpty()){\r\n\t\t\t\t\tThread.yield();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthread1.interrupt();\r\n\t\t\tthread2.interrupt();\r\n\t\t}\r\n\t}\r\n\r\n\tstatic class CancellingThread extends Thread {\r\n\t\tprivate final BlockingQueue<ListenableFuture<Response>> queue;\r\n\r\n\t\tpublic CancellingThread(BlockingQueue<ListenableFuture<Response>> queue) {\r\n\t\t\tthis.queue = queue;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic void run() {\r\n\t\t\twhile (!this.isInterrupted()) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tListenableFuture<Response> future = queue.take();\r\n\t\t\t\t\tfuture.cancel(true);\r\n\t\t\t\t} catch (InterruptedException e) {\r\n\t\t\t\t\tthis.interrupt();\r\n\t\t\t\t} catch (Exception e) {\r\n\t\t\t\t\te.printStackTrace();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n```\r\nAnd here is the stacktrace:\r\n```\r\njava.lang.NullPointerException\r\n\tat org.asynchttpclient.netty.NettyResponseFuture.cancelTimeouts(NettyResponseFuture.java:286)\r\n\tat org.asynchttpclient.netty.NettyResponseFuture.cancel(NettyResponseFuture.java:143)\r\n\tat com.sopovs.moradanen.jcstress.asynchttpclient.RaceCancelTest$CancellingThread.run(RaceCancelTest.java:44)\r\n```", "labels": ["Defect"]}, {"created": "2017-03-08 16:49:02", "commits": {"bdb44a42407661fb17189a9efaf3b921595af91a": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2017-03-08 17:30:52", "filteredCommits": [], "commitsDetails": [{"nameRev": "bdb44a42407661fb17189a9efaf3b921595af91a tags/async-http-client-project-2.1.0-alpha6~1", "commitMessage": "Don't upgrade pipeline for WebSocket prior to installing WebSocket on Handler, close #1364\n\nMotivation:\n\nInstalling the WebSocket handler can trigger a read, so if there's a\npending frame that was send along the HTTP upgrade response, we could\ncrash because the handler is not properly configured yet.\n\nThis is a regression caused by #1348.\n\nModifications:\n\nBuffer frames until WebSocket is fully open.\n\nResult:\n\nNo more crash when frames are sent along the HTTP upgrade response.\n", "commitParents": ["eaaf64a6f74c0c627d59026733663b58632b5e2d"], "spoonStatsSkippedReason": "", "commitHash": "bdb44a42407661fb17189a9efaf3b921595af91a", "authoredDateTime": "2017-03-08 18:27:11", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 24, "deletions": 1, "lines": 25, "filePath": "client/src/main/java/org/asynchttpclient/ws/WebSocketUpgradeHandler.java"}, {"insertions": 15, "deletions": 4, "lines": 19, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/WebSocketHandler.java"}], "commitDateTime": "2017-03-08 18:27:11", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ws.WebSocketUpgradeHandler.isOpen()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ws.WebSocketUpgradeHandler.bufferFrame(java.lang.Runnable)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ws.WebSocketUpgradeHandler.setWebSocket(org.asynchttpclient.ws.WebSocket)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ws.WebSocketUpgradeHandler.onOpen()"}, {"UPD": 1, "TOT": 6, "MOV": 3, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.ws.WebSocketUpgradeHandler.openWebSocket(org.asynchttpclient.ws.WebSocket)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ws.WebSocketUpgradeHandler"}], "spoonFilePath": "WebSocketUpgradeHandler.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 8, "MOV": 5, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.WebSocketHandler.handleRead(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Object)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.WebSocketHandler.handleFrame(io.netty.channel.Channel,io.netty.handler.codec.http.websocketx.WebSocketFrame,org.asynchttpclient.ws.WebSocketUpgradeHandler,org.asynchttpclient.netty.ws.NettyWebSocket)"}, {"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.WebSocketHandler.upgrade(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.ws.WebSocketUpgradeHandler,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.HttpResponseHeaders)"}], "spoonFilePath": "WebSocketHandler.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1364", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Don't upgrade pipeline for WebSocket prior to installing WebSocket on Handler", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "Installing the WebSocket handler can trigger a read, so if there's a pending frame that was send along the HTTP upgrade response, we could crash because the handler is not properly configured yet.", "labels": ["Defect"]}, {"created": "2017-03-06 16:04:37", "commits": {"eaaf64a6f74c0c627d59026733663b58632b5e2d": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "f6b6b42931dcf6b9b3ef31bb1c47dbfcd5148f63": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithOpenChannel(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,io.netty.channel.Channel)", "org.asynchttpclient.netty.request.NettyRequestSender.scheduleRequestTimeout(org.asynchttpclient.netty.NettyResponseFuture)"], "closed": "2017-03-06 16:11:51", "filteredCommits": ["eaaf64a6f74c0c627d59026733663b58632b5e2d"], "commitsDetails": [{"nameRev": "eaaf64a6f74c0c627d59026733663b58632b5e2d tags/async-http-client-project-2.1.0-alpha6~2", "commitMessage": "Initialize timeout remote address when channel was pooled, close #1363\n\nMotivation:\n\nWhen channel was fetched from pool, we fail to initialize the remote\naddress, causing timeout exceptions to say \u00abnot-connected\u00a0\u00bb.\n\nModification:\n\nProperly initialize\n\nResult:\n\nNo more erroneous \u00ab\u00a0not-connected\u00a0\u00bb.\u00a0\u00a0\n", "commitParents": ["555d131c1894764f7e777ad36bbbd9710e524963"], "spoonStatsSkippedReason": "", "commitHash": "eaaf64a6f74c0c627d59026733663b58632b5e2d", "authoredDateTime": "2017-03-06 17:11:42", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 4, "deletions": 2, "lines": 6, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java"}], "commitDateTime": "2017-03-06 17:11:42", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 1, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithOpenChannel(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.scheduleRequestTimeout(org.asynchttpclient.netty.NettyResponseFuture)"}], "spoonFilePath": "NettyRequestSender.java"}]}, {"nameRev": "f6b6b42931dcf6b9b3ef31bb1c47dbfcd5148f63 tags/async-http-client-project-2.0.30~1", "commitMessage": "Initialize timeout remote address when channel was pooled, close #1363\n\nMotivation:\n\nWhen channel was fetched from pool, we fail to initialize the remote\naddress, causing timeout exceptions to say \u00abnot-connected\u00a0\u00bb.\n\nModification:\n\nProperly initialize\n\nResult:\n\nNo more erroneous \u00ab\u00a0not-connected\u00a0\u00bb.\u00a0\u00a0\n", "commitParents": ["9ed24f221051a765970fedfb777f9f50b96a38c4"], "spoonStatsSkippedReason": "", "commitHash": "f6b6b42931dcf6b9b3ef31bb1c47dbfcd5148f63", "authoredDateTime": "2017-03-06 17:11:42", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 2, "lines": 6, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java"}], "commitDateTime": "2017-03-06 17:12:09", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 1, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithOpenChannel(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.scheduleRequestTimeout(org.asynchttpclient.netty.NettyResponseFuture)"}], "spoonFilePath": "NettyRequestSender.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1363", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 4, "deletions": 2, "lines": 6, "gitFilesChange": 1}, "title": "Remote address is not properly initialized in request timeout when connection was pooled", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 2, "TOT": 5, "MOV": 1, "INS": 3, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2017-02-21 20:25:34", "commits": {"d0c2ebec083b7bee6bec9c1d2f462827e9959c0f": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "4d5a8562ee96f8299cbdbabdcd3f4e3836a00b56": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.channel.NettyConnectListener.onSuccess(io.netty.channel.Channel,java.net.InetSocketAddress)"], "closed": "2017-02-21 20:27:25", "filteredCommits": ["d0c2ebec083b7bee6bec9c1d2f462827e9959c0f"], "commitsDetails": [{"nameRev": "d0c2ebec083b7bee6bec9c1d2f462827e9959c0f tags/async-http-client-project-2.1.0-alpha6~5", "commitMessage": "Don't stall when failing to create SslHandler, close #1361\n\nMotivation:\n\nCreating a SslHandler can crash, for example when there's a typo in the\nenabled protocols.\nWhen this happens, the exception is not propagated.\n\nModification:\n\nCatch such Exception and notify the NettyConnectListener.\n\nResult:\n\nAHC no longer stalled when such exception happens.\n", "commitParents": ["1c4ed722bca0e94a44ae6378c0bbd9fc54acdd77"], "spoonStatsSkippedReason": "", "commitHash": "d0c2ebec083b7bee6bec9c1d2f462827e9959c0f", "authoredDateTime": "2017-02-21 21:27:13", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 7, "deletions": 1, "lines": 8, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/NettyConnectListener.java"}], "commitDateTime": "2017-02-21 21:27:13", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 1, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.NettyConnectListener.onSuccess(io.netty.channel.Channel,java.net.InetSocketAddress)"}], "spoonFilePath": "NettyConnectListener.java"}]}, {"nameRev": "4d5a8562ee96f8299cbdbabdcd3f4e3836a00b56 tags/async-http-client-project-2.0.30~4", "commitMessage": "Don't stall when failing to create SslHandler, close #1361\n\nMotivation:\n\nCreating a SslHandler can crash, for example when there's a typo in the\nenabled protocols.\nWhen this happens, the exception is not propagated.\n\nModification:\n\nCatch such Exception and notify the NettyConnectListener.\n\nResult:\n\nAHC no longer stalled when such exception happens.\n", "commitParents": ["9bc0d303a60963a4decdf264ee551334cef6d05e"], "spoonStatsSkippedReason": "", "commitHash": "4d5a8562ee96f8299cbdbabdcd3f4e3836a00b56", "authoredDateTime": "2017-02-21 21:27:13", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 7, "deletions": 1, "lines": 8, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/NettyConnectListener.java"}], "commitDateTime": "2017-02-21 21:27:54", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 1, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.NettyConnectListener.onSuccess(io.netty.channel.Channel,java.net.InetSocketAddress)"}], "spoonFilePath": "NettyConnectListener.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1361", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 7, "deletions": 1, "lines": 8, "gitFilesChange": 1}, "title": "Don't stall when failing to create SslHandler", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/channel"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 3, "MOV": 1, "INS": 2, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Creating a SslHandler can crash, for example when there's a typo in the enabled protocols.\r\nWhen this happens, the exception is not propagated.", "labels": ["Defect"]}, {"created": "2017-02-14 23:02:41", "commits": {"28e543cdf357bb8bc627fb51a7504c684ad4bafe": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "fab7b39e91a07fecde9bb0761b632b7b88e3d943": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder.handleSplitCharBuffer(java.nio.ByteBuffer,boolean)", "org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder.decodePartial(java.nio.ByteBuffer,boolean)"], "closed": "2017-02-14 23:05:32", "filteredCommits": ["28e543cdf357bb8bc627fb51a7504c684ad4bafe"], "commitsDetails": [{"nameRev": "28e543cdf357bb8bc627fb51a7504c684ad4bafe tags/async-http-client-project-2.1.0-alpha5~2", "commitMessage": "Clear Utf8ByteBufCharsetDecoder#splitCharBuffer once char is complete, close #1357\n\nMotivation:\n\nWhen multiple non US-ASCII chars are split over several chunks,\nUtf8ByteBufCharsetDecoder crashes with BufferOverflowException.\n\nThis happens because we don't clear the splitCharBuffer in-between and\nonly do so once decoding is done.\n\nModifications:\n\nClear Utf8ByteBufCharsetDecoder#splitCharBuffer once char is complete\n\nResult:\n\nNo more BufferOverflowException\n", "commitParents": ["b0374260cd59a344abd910cbd730b116c16cf253"], "spoonStatsSkippedReason": "", "commitHash": "28e543cdf357bb8bc627fb51a7504c684ad4bafe", "authoredDateTime": "2017-02-14 23:04:37", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 2, "deletions": 1, "lines": 3, "filePath": "netty-utils/src/main/java/org/asynchttpclient/netty/util/Utf8ByteBufCharsetDecoder.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "netty-utils/src/test/java/org/asynchttpclient/netty/util/{ByteBufUtilsTest.java => Utf8ByteBufCharsetDecoderTest.java}"}], "commitDateTime": "2017-02-14 23:05:21", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder.handleSplitCharBuffer(java.nio.ByteBuffer,boolean)"}, {"UPD": 0, "TOT": 5, "MOV": 3, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder.decodePartial(java.nio.ByteBuffer,boolean)"}], "spoonFilePath": "Utf8ByteBufCharsetDecoder.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.util.ByteBufUtilsTest.byteBufs2StringShouldBeAbleToDealWithCharsWithVariableBytesLength()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.util.ByteBufUtilsTest.testByteBuf2BytesNoBackingArray()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.util.ByteBufUtilsTest.testByteBuf2BytesHasBackingArray()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.util.ByteBufUtilsTest"}], "spoonFilePath": "Utf8ByteBufCharsetDecoderTest.java"}]}, {"nameRev": "fab7b39e91a07fecde9bb0761b632b7b88e3d943 tags/async-http-client-project-2.0.29~1", "commitMessage": "Clear Utf8ByteBufCharsetDecoder#splitCharBuffer once char is complete, close #1357\n\nMotivation:\n\nWhen multiple non US-ASCII chars are split over several chunks,\nUtf8ByteBufCharsetDecoder crashes with BufferOverflowException.\n\nThis happens because we don't clear the splitCharBuffer in-between and\nonly do so once decoding is done.\n\nModifications:\n\nClear Utf8ByteBufCharsetDecoder#splitCharBuffer once char is complete\n\nResult:\n\nNo more BufferOverflowException\n", "commitParents": ["bb7652a525712adde5e93fa080b31234dc3f24a9"], "spoonStatsSkippedReason": "", "commitHash": "fab7b39e91a07fecde9bb0761b632b7b88e3d943", "authoredDateTime": "2017-02-14 23:04:37", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 1, "lines": 3, "filePath": "netty-utils/src/main/java/org/asynchttpclient/netty/util/Utf8ByteBufCharsetDecoder.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "netty-utils/src/test/java/org/asynchttpclient/netty/util/{ByteBufUtilsTest.java => Utf8ByteBufCharsetDecoderTest.java}"}], "commitDateTime": "2017-02-14 23:04:37", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder.handleSplitCharBuffer(java.nio.ByteBuffer,boolean)"}, {"UPD": 0, "TOT": 5, "MOV": 3, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder.decodePartial(java.nio.ByteBuffer,boolean)"}], "spoonFilePath": "Utf8ByteBufCharsetDecoder.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.util.ByteBufUtilsTest.byteBufs2StringShouldBeAbleToDealWithCharsWithVariableBytesLength()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.util.ByteBufUtilsTest.testByteBuf2BytesNoBackingArray()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.util.ByteBufUtilsTest.testByteBuf2BytesHasBackingArray()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.util.ByteBufUtilsTest"}], "spoonFilePath": "Utf8ByteBufCharsetDecoderTest.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1357", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "title": "Utf8ByteBufCharsetDecoder BufferOverflowException when several non US-ASCII chars are split", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["netty-utils/src/main/java/org/asynchttpclient/netty/util"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 6, "MOV": 3, "INS": 2, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "When multiple non US-ASCII chars are split over several chunks, Utf8ByteBufCharsetDecoder crashes with BufferOverflowException.\r\n\r\nThis happens because we don't clear the `splitCharBuffer` in-between and only do so once decoding is done.", "labels": ["Defect"]}, {"created": "2017-02-08 10:36:20", "commits": {"cb92e376ff0fdf4c5b944ad3db1c2d617d51be2f": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2017-02-08 10:39:53", "filteredCommits": [], "commitsDetails": [{"nameRev": "cb92e376ff0fdf4c5b944ad3db1c2d617d51be2f tags/async-http-client-project-2.1.0-alpha4~1", "commitMessage": "Always close Channel when AsyncHandler returns ABORT, close #1350, close #1306\n\nMotivation:\n\nWe currently handle ABORT in a very gentle manner: ignore next chunks,\ndrain channel until last chunk is received and then offer the channel\nto the pool if keep-alive is possible.\n\nThis is way too gentle, and prevents us from closing infinite streams.\n\nModifications:\n\nHave ABORT close the Channel, both for HTTP and WebSocket\n\nResult:\n\nWe now close infinite streams.\n", "commitParents": ["06798b90665485c6398c8e057ba669518b5c1375"], "spoonStatsSkippedReason": "", "commitHash": "cb92e376ff0fdf4c5b944ad3db1c2d617d51be2f", "authoredDateTime": "2017-02-08 11:39:45", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 27, "deletions": 65, "lines": 92, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/HttpHandler.java"}, {"insertions": 19, "deletions": 0, "lines": 19, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/AsyncHttpClientHandler.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/WebSocketHandler.java"}], "commitDateTime": "2017-02-08 11:39:45", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.AsyncHttpClientHandler.finishUpdate(org.asynchttpclient.netty.NettyResponseFuture,io.netty.channel.Channel,boolean,boolean)"}], "spoonFilePath": "AsyncHttpClientHandler.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.WebSocketHandler.abort(org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.ws.WebSocketUpgradeHandler,org.asynchttpclient.HttpResponseStatus)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.WebSocketHandler.abort(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.ws.WebSocketUpgradeHandler,org.asynchttpclient.HttpResponseStatus)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.WebSocketHandler.handleRead(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Object)"}], "spoonFilePath": "WebSocketHandler.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 4, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.exitAfterHandlingHeaders(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.AsyncHandler,org.asynchttpclient.HttpResponseHeaders,io.netty.handler.codec.http.HttpRequest)"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.exitAfterHandlingReactiveStreams(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.AsyncHandler,io.netty.handler.codec.http.HttpRequest)"}, {"UPD": 8, "TOT": 12, "MOV": 0, "INS": 3, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.handleChunk(io.netty.handler.codec.http.HttpContent,io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler)"}, {"UPD": 2, "TOT": 4, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.updateBodyAndInterrupt(org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,org.asynchttpclient.HttpResponseBodyPart)"}, {"UPD": 2, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.finishUpdate(org.asynchttpclient.netty.NettyResponseFuture,io.netty.channel.Channel,boolean)"}, {"UPD": 0, "TOT": 5, "MOV": 4, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.exitAfterHandlingStatus(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.AsyncHandler,org.asynchttpclient.netty.NettyResponseStatus,io.netty.handler.codec.http.HttpRequest)"}, {"UPD": 5, "TOT": 11, "MOV": 5, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.notifyHandler(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.AsyncHandler,org.asynchttpclient.netty.NettyResponseStatus,io.netty.handler.codec.http.HttpRequest,org.asynchttpclient.HttpResponseHeaders)"}, {"UPD": 0, "TOT": 4, "MOV": 1, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.handleHttpResponse(io.netty.handler.codec.http.HttpResponse,io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.readFailed(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Throwable)"}], "spoonFilePath": "HttpHandler.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1350", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Always close Channel when AsyncHandler returns ABORT", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "`State.ABORT` means to aggressively terminate the stream.\r\nWe currently handle it as a gentle way to ignore new chunks, drain the connection and then return it to the pool. The consequence is that we never terminate infinite streams, see #1306 \r\n\r\nWe should close the Channel when AsyncHandler returns ABORT.", "labels": ["Defect"]}, {"created": "2017-01-26 10:36:35", "commits": {"c04ab5b5206c1485e718431026782e708b7078ea": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["io.netty.resolver.dns.DnsNameResolverBuilder.resolvedAddressTypes(java.lang.Iterable)", "io.netty.resolver.dns.DnsNameResolver", "io.netty.resolver.dns.DnsNameResolver.isDecodeIdn()", "io.netty.resolver.dns.DnsNameResolverBuilder.decodeIdn(boolean)", "io.netty.resolver.dns.DnsNameResolver.doResolveAll(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.util.concurrent.Promise,io.netty.resolver.dns.DnsCache)", "io.netty.resolver.dns.DnsNameResolver.doResolve(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.util.concurrent.Promise,io.netty.resolver.dns.DnsCache)", "io.netty.resolver.dns.DnsNameResolverBuilder.searchDomains(java.lang.Iterable)", "io.netty.resolver.dns.DnsNameResolverBuilder", "io.netty.resolver.dns.DnsNameResolverBuilder.resolvedAddressTypes(io.netty.channel.socket.InternetProtocolFamily2[])", "io.netty.resolver.dns.DnsNameResolver.loopbackAddress()", "io.netty.resolver.dns.DnsNameResolverContext.onResponseAorAAAA(io.netty.handler.codec.dns.DnsRecordType,io.netty.handler.codec.dns.DnsQuestion,io.netty.channel.AddressedEnvelope,io.netty.util.concurrent.Promise)", "io.netty.resolver.dns.DnsNameResolverBuilder.build()"], "closed": "2017-01-31 09:03:46", "filteredCommits": ["c04ab5b5206c1485e718431026782e708b7078ea"], "commitsDetails": [{"nameRev": "c04ab5b5206c1485e718431026782e708b7078ea tags/async-http-client-project-2.0.28~4", "commitMessage": "Automatically decode DNS domain name to unicode, close #1338\n\nMotivation:\n\nDnsNameResolver will return the domain / host name as ascii code using\npunycode (https://tools.ietf.org/html/rfc3492). This is different to\nwhat the JDK does which always convert it to unicode. We should do the\nsame by default but allow to also not do it.\n\nModifications:\n\n- Add new builder method on DnsNameResolverBuilder which allow to\ndisable / enable converting. Default is to convert just like the JDK\ndoes.\n- Add unit tests for it.\n\nResult:\n\nDnsNameResolver and JDK impl behave the same way.\n", "commitParents": ["3712f333785a4ca20e2d4a23ac2888356edbf373"], "spoonStatsSkippedReason": "", "commitHash": "c04ab5b5206c1485e718431026782e708b7078ea", "authoredDateTime": "2017-01-31 10:03:13", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 24, "deletions": 9, "lines": 33, "filePath": "netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolverBuilder.java"}, {"insertions": 62, "deletions": 7, "lines": 69, "filePath": "netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java"}, {"insertions": 3, "deletions": 1, "lines": 4, "filePath": "netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolverContext.java"}, {"insertions": 59, "deletions": 19, "lines": 78, "filePath": "netty-bp/resolver-dns/src/test/java/io/netty/resolver/dns/DnsNameResolverTest.java"}], "commitDateTime": "2017-01-31 10:03:13", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverContext.onResponseAorAAAA(io.netty.handler.codec.dns.DnsRecordType,io.netty.handler.codec.dns.DnsQuestion,io.netty.channel.AddressedEnvelope,io.netty.util.concurrent.Promise)"}], "spoonFilePath": "DnsNameResolverContext.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolver.loopbackAddress()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolver.doResolveAll(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.util.concurrent.Promise,io.netty.resolver.dns.DnsCache)"}, {"UPD": 4, "TOT": 8, "MOV": 0, "INS": 4, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolver"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolver.doResolve(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.util.concurrent.Promise,io.netty.resolver.dns.DnsCache)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolver.isDecodeIdn()"}], "spoonFilePath": "DnsNameResolver.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverTest.newResolver()"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverTest.testResolveNullIpv4()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverTest.testResolveUnicode(boolean)"}, {"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverTest.testResolveAllNullIpv4()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverTest.testResolveA()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverTest.testResolveDecodeUnicode()"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverTest.testResolveEmptyIpv4()"}, {"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverTest.testResolveAllEmptyIpv4()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverTest.testResolveNotDecodeUnicode()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverTest.testNonCachedResolve()"}, {"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverTest.testResolveAllEmptyIpv6()"}, {"UPD": 1, "TOT": 5, "MOV": 0, "INS": 4, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverTest"}, {"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverTest.testResolveAllNullIpv6()"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverTest.testResolveNullIpv6()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverTest.newResolver(boolean)"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverTest.testResolveEmptyIpv6()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverTest.testResolveAAAA()"}], "spoonFilePath": "DnsNameResolverTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverBuilder.searchDomains(java.lang.Iterable)"}, {"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverBuilder.resolvedAddressTypes(java.lang.Iterable)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverBuilder"}, {"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverBuilder.resolvedAddressTypes(io.netty.channel.socket.InternetProtocolFamily2[])"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverBuilder.decodeIdn(boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverBuilder.build()"}], "spoonFilePath": "DnsNameResolverBuilder.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1338", "ttf": 4.000277777777778, "gitStatsSummary": {"insertions": 89, "deletions": 17, "lines": 106, "gitFilesChange": 3}, "title": "Backport Netty#6280: Automatically decode DNS domain name to unicode", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns"], "spoonStatsSummary": {"UPD": 8, "spoonMethodsChanged": 12, "TOT": 27, "MOV": 3, "INS": 13, "DEL": 3, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "https://github.com/netty/netty/pull/6280", "labels": ["Defect"]}, {"created": "2017-01-26 09:47:05", "commits": {"549fb2572303b4a657208f07d559c5c43b5bb4ad": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "closed": "2017-01-26 09:48:02", "filteredCommits": ["549fb2572303b4a657208f07d559c5c43b5bb4ad"], "commitsDetails": [{"nameRev": "549fb2572303b4a657208f07d559c5c43b5bb4ad tags/async-http-client-project-2.0.27~7", "commitMessage": "Disable IPv6 address lookups when -Djava.net.preferIPv4Stack=true, close #1336\n\nMotivation:\n\nAccording to the Oracle documentation:\n\n> java.net.preferIPv4Stack (default: false)\n>\n> If IPv6 is available on the operating system, the underlying native\n> socket will be an IPv6 socket. This allows Java applications to\nconnect\n> to, and accept connections from, both IPv4 and IPv6 hosts.\n>\n> If an application has a preference to only use IPv4 sockets, then this\n> property can be set to true. The implication is that the application\n> will not be able to communicate with IPv6 hosts.\n\nwhich means, if DnsNameResolver returns an IPv6 address, a user (or\nNetty) will not be able to connect to it.\n\nModifications:\n\n- Move the code that retrieves java.net.prefer* properties from\n  DnsNameResolver to NetUtil\n- Add NetUtil.isIpV6AddressesPreferred()\n- Revise the API documentation of NetUtil.isIpV*Preferred()\n- Set the default resolveAddressTypes to IPv4 only when\n  NetUtil.isIpv4StackPreferred() returns true\n\nResult:\n\n- Fixes #1336\n", "commitParents": ["2fd2d86bedc9ebb1c07135ec4aa3e0f26d910534"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "549fb2572303b4a657208f07d559c5c43b5bb4ad", "authoredDateTime": "2017-01-26 10:47:46", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 17, "deletions": 14, "lines": 31, "filePath": "netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java"}, {"insertions": 1094, "deletions": 0, "lines": 1094, "filePath": "netty-bp/resolver-dns/src/main/java/io/netty/util/NetUtil2.java"}], "commitDateTime": "2017-01-26 10:47:46", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1336", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1111, "deletions": 14, "lines": 1125, "gitFilesChange": 2}, "title": "Backport Netty#5657: Disable IPv6 address lookups when -Djava.net.preferIPv4Stack=true", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["netty-bp/resolver-dns/src/main/java/io/netty/util", "netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns"], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "https://github.com/netty/netty/issues/5657", "labels": ["Defect"]}, {"created": "2017-01-26 09:38:16", "commits": {"2fd2d86bedc9ebb1c07135ec4aa3e0f26d910534": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["io.netty.resolver.dns.DnsNameResolver.close()"], "closed": "2017-01-26 09:46:09", "filteredCommits": ["2fd2d86bedc9ebb1c07135ec4aa3e0f26d910534"], "commitsDetails": [{"nameRev": "2fd2d86bedc9ebb1c07135ec4aa3e0f26d910534 tags/async-http-client-project-2.0.27~8", "commitMessage": "Fix RejectedExecutionException when using DnsAddressResolverGroup, close #1335\n\nMotivation:\n\nAddressResolverGroup adds a listener to the termination future of an\nEventExecutor when a new AddressResolver is created. The listener calls\nAddressResolver.close() when the EventExecutor is terminated to give the\nAddressResolver a chance to release its resources.\n\nWhen using DnsAddressResolverGroup, the AddressResolver.close() will\neventually trigger DnsNameResolver.close(), which closes its underlying\nDatagramChannel.\n\nDatagramChannel.close() (or any Channel.close()) will travel through\npipeline and trigger EventExecutor.execute() because\nDnsNameResolver.close() has been invoked from a non-I/O thread.\n(NB: A terminationFuture is always notified from the GlobalEventExecutor\nthread.)\n\nHowever, because we are doing this in the listener of the termination\nfuture of the terminated EventLoop we are trying to execute a task upon,\nthe attempt to close the channel fails due to\nRejectedExecutionException.\n\nModifications:\n\n- Do not call Channel.close() in DnsNameResolver.close() if the Channel\n  has been closed by EventLoop already\n\nResult:\n\nNo more RejectedExecutionException when shutting down an event loop.\n", "commitParents": ["ae4929ae4cfacee4aa627dd35f10dfa3f1c19a5f"], "spoonStatsSkippedReason": "", "commitHash": "2fd2d86bedc9ebb1c07135ec4aa3e0f26d910534", "authoredDateTime": "2017-01-26 10:39:47", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 1, "lines": 4, "filePath": "netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java"}], "commitDateTime": "2017-01-26 10:39:47", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolver.close()"}], "spoonFilePath": "DnsNameResolver.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1335", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 3, "deletions": 1, "lines": 4, "gitFilesChange": 1}, "title": "Backport Netty#5612: Fix RejectedExecutionException when using DnsAddressResolverGroup", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "https://github.com/netty/netty/pull/5612", "labels": ["Defect"]}, {"created": "2017-01-20 15:12:27", "commits": {"33d9cede4ea7421c2f564c0e7d6f60bc599fb253": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["io.netty.resolver.dns.DnsNameResolverContext.tryToFinishResolve(io.netty.util.concurrent.Promise)", "io.netty.resolver.dns.DnsNameResolverContext.internalResolve(io.netty.util.concurrent.Promise)", "io.netty.resolver.InetNameResolver.resolve(java.lang.String,io.netty.util.concurrent.Promise)", "io.netty.resolver.InetNameResolver", "io.netty.util.internal.SocketUtils2", "io.netty.resolver.dns.DnsNameResolver.resolve(java.lang.String,java.lang.Iterable,io.netty.util.concurrent.Promise)", "io.netty.resolver.InetNameResolver.loopbackAddress()", "io.netty.resolver.dns.DnsNameResolverContext.query(java.lang.String,io.netty.handler.codec.dns.DnsRecordType,java.net.InetSocketAddress,io.netty.util.concurrent.Promise)", "io.netty.resolver.dns.DnsNameResolver.resolveAll(java.lang.String,java.lang.Iterable,io.netty.util.concurrent.Promise)", "io.netty.resolver.dns.DnsNameResolver.loopbackAddress()", "io.netty.resolver.dns.DnsNameResolverContext.followCname(java.net.InetSocketAddress,java.lang.String,java.lang.String,io.netty.util.concurrent.Promise)", "io.netty.resolver.InetNameResolver.resolveAll(java.lang.String,io.netty.util.concurrent.Promise)"], "closed": "2017-01-26 10:33:20", "filteredCommits": ["33d9cede4ea7421c2f564c0e7d6f60bc599fb253"], "commitsDetails": [{"nameRev": "33d9cede4ea7421c2f564c0e7d6f60bc599fb253 tags/async-http-client-project-2.0.27~3", "commitMessage": "DnsNameResolver.resolve*(...) never notifies the Future when empty hostname is used, close #1330\n\nMotivation:\n\nWhen an empty hostname is used in DnsNameResolver.resolve*(...) it will\nnever notify the future / promise. The root cause is that we not\ncorrectly guard against errors of IDN.toASCII(...) which will throw an\nIllegalArgumentException when it can not parse its input. That said we\nshould also handle an empty hostname the same way as the JDK does and\njust use \"localhost\" when this happens.\n\nModifications:\n\n- If the try to resolve an empty hostname we use localhost\n- Correctly guard against errors raised by IDN.toASCII(...) so we will\nalways noify the future / promise\n- Add unit test.\n\nResult:\n\nDnsNameResolver.resolve*(...) will always notify the future.\n", "commitParents": ["6b4f75d689f24a7f0f65f85d35946ab5d35d3b43"], "spoonStatsSkippedReason": "", "commitHash": "33d9cede4ea7421c2f564c0e7d6f60bc599fb253", "authoredDateTime": "2017-01-26 11:33:09", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 90, "deletions": 0, "lines": 90, "filePath": "netty-bp/resolver/src/test/java/io/netty/resolver/InetNameResolverTest.java"}, {"insertions": 17, "deletions": 3, "lines": 20, "filePath": "netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java"}, {"insertions": 20, "deletions": 5, "lines": 25, "filePath": "netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolverContext.java"}, {"insertions": 213, "deletions": 0, "lines": 213, "filePath": "netty-bp/resolver/src/main/java/io/netty/util/internal/SocketUtils2.java"}, {"insertions": 32, "deletions": 0, "lines": 32, "filePath": "netty-bp/resolver/src/main/java/io/netty/resolver/InetNameResolver.java"}], "commitDateTime": "2017-01-26 11:33:09", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverContext.tryToFinishResolve(io.netty.util.concurrent.Promise)"}, {"UPD": 2, "TOT": 15, "MOV": 5, "INS": 5, "DEL": 3, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverContext.followCname(java.net.InetSocketAddress,java.lang.String,java.lang.String,io.netty.util.concurrent.Promise)"}, {"UPD": 0, "TOT": 6, "MOV": 4, "INS": 1, "DEL": 1, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverContext.internalResolve(io.netty.util.concurrent.Promise)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverContext.query(java.lang.String,io.netty.handler.codec.dns.DnsRecordType,java.net.InetSocketAddress,io.netty.util.concurrent.Promise)"}], "spoonFilePath": "DnsNameResolverContext.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.util.internal.SocketUtils2"}], "spoonFilePath": "SocketUtils2.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.InetNameResolver.loopbackAddress()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "io.netty.resolver.InetNameResolver"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.InetNameResolver.resolveAll(java.lang.String,io.netty.util.concurrent.Promise)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.InetNameResolver.resolve(java.lang.String,io.netty.util.concurrent.Promise)"}], "spoonFilePath": "InetNameResolver.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.InetNameResolverTest"}], "spoonFilePath": "InetNameResolverTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolver.resolve(java.lang.String,java.lang.Iterable,io.netty.util.concurrent.Promise)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolver.loopbackAddress()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolver.resolveAll(java.lang.String,java.lang.Iterable,io.netty.util.concurrent.Promise)"}], "spoonFilePath": "DnsNameResolver.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1330", "ttf": 5.000277777777778, "gitStatsSummary": {"insertions": 282, "deletions": 8, "lines": 290, "gitFilesChange": 4}, "title": "Backport Netty#6258 DnsNameResolver.resolve*(...) never notifies the Future when empty hostname is used", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["netty-bp/resolver/src/main/java/io/netty/resolver", "netty-bp/resolver/src/main/java/io/netty/util/internal", "netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 12, "TOT": 36, "MOV": 10, "INS": 17, "DEL": 7, "spoonFilesChanged": 4}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "https://github.com/netty/netty/pull/6258", "labels": ["Defect"]}, {"created": "2017-01-20 09:00:59", "commits": {"17575b30c763ebc945b71a86ba5d8db03ec711ab": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "closed": "2017-02-06 19:54:20", "filteredCommits": ["17575b30c763ebc945b71a86ba5d8db03ec711ab"], "commitsDetails": [{"nameRev": "17575b30c763ebc945b71a86ba5d8db03ec711ab tags/async-http-client-project-2.0.29~3", "commitMessage": "Implement correct handling of recursive DNS, close #1329\n\nMotivation:\n\nDnsNameResolver does not handle recursive DNS and so fails if you query\na DNS server (for example a ROOT dns server) which provides the correct\nredirect for a domain.\n\nModification:\n\nAdd support for redirects (a.k.a. handling of AUTHORITY section').\n\nResult:\n\nIts now possible to use a DNS server that redirects.\n", "commitParents": ["3e6c67480e00cc631528315417ae2ec31bdc7583"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "17575b30c763ebc945b71a86ba5d8db03ec711ab", "authoredDateTime": "2017-02-06 20:54:03", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 24, "deletions": 4, "lines": 28, "filePath": "netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolverBuilder.java"}, {"insertions": 35, "deletions": 21, "lines": 56, "filePath": "netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java"}, {"insertions": 332, "deletions": 39, "lines": 371, "filePath": "netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolverContext.java"}, {"insertions": 10, "deletions": 6, "lines": 16, "filePath": "netty-bp/resolver-dns/src/test/java/io/netty/resolver/dns/TestDnsServer.java"}, {"insertions": 7, "deletions": 6, "lines": 13, "filePath": "netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns/DnsServerAddresses.java"}, {"insertions": 170, "deletions": 0, "lines": 170, "filePath": "netty-bp/resolver-dns/src/test/java/io/netty/resolver/dns/DnsNameResolverTest.java"}], "commitDateTime": "2017-02-06 20:54:03", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1329", "ttf": 17.00027777777778, "gitStatsSummary": {"insertions": 398, "deletions": 70, "lines": 468, "gitFilesChange": 4}, "title": "Backport Netty#6256 Implement correct handling of recursive DNS", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns"], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "https://github.com/netty/netty/pull/6256", "labels": ["Defect"]}, {"created": "2017-01-18 09:05:18", "commits": {"a0cbc3147378ffc03fb945b5919b0e3cceabbdcb": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "7aa01ccc933c6714c7ab027161059989b5ab3213": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "ae13053357900468dac1a06d24d28156bc956ad2": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["io.netty.resolver.dns.DnsNameResolver"], "closed": "2017-01-25 22:08:12", "filteredCommits": ["a0cbc3147378ffc03fb945b5919b0e3cceabbdcb"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "ae13053357900468dac1a06d24d28156bc956ad2", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "7aa01ccc933c6714c7ab027161059989b5ab3213", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "a0cbc3147378ffc03fb945b5919b0e3cceabbdcb tags/async-http-client-project-2.0.27~5", "commitMessage": "Check if DnsCache is null in DnsNameResolver constructor, close #1328\n\nMotivation:\n\nWe miss checking if DnsCache is null in DnsNameResolver constructor\nwhich will later then lead to a NPE. Better fail fast here.\n\nModifications:\n\nCheck for null and if so throw a NPE.\n\nResult:\n\nFail fast.\n", "commitParents": ["935aa3263029da0c4084cd1975c9039ec2ec9867"], "spoonStatsSkippedReason": "", "commitHash": "a0cbc3147378ffc03fb945b5919b0e3cceabbdcb", "authoredDateTime": "2017-01-26 11:17:14", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java"}], "commitDateTime": "2017-01-26 11:22:40", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolver"}], "spoonFilePath": "DnsNameResolver.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1328", "ttf": 7.000277777777778, "gitStatsSummary": {"insertions": 1.0, "deletions": 1.0, "lines": 2.0, "gitFilesChange": 1}, "title": "Backport Netty#6234 Check if DnsCache is null in DnsNameResolver constructor", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 1, "TOT": 2.0, "MOV": 0.0, "INS": 1.0, "DEL": 1.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 2, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "https://github.com/netty/netty/pull/6241", "labels": ["Defect"]}, {"created": "2017-01-18 08:59:02", "commits": {"6b4f75d689f24a7f0f65f85d35946ab5d35d3b43": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "1470b13c976fad32739839216d55a375c535c080": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "fdd842ce9cb12ddbae6756421c5cc97ca32298eb": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["io.netty.resolver.dns.DnsNameResolverContext.gotPreferredAddress()", "io.netty.resolver.dns.DnsNameResolverContext.followCname(java.net.InetSocketAddress,java.lang.String,java.lang.String,io.netty.util.concurrent.Promise)", "io.netty.resolver.dns.DnsNameResolver", "io.netty.resolver.dns.DnsNameResolverContext.internalResolve(io.netty.util.concurrent.Promise)", "io.netty.resolver.dns.DnsNameResolver.isCnameFollowAAAARecords()", "io.netty.resolver.dns.DnsNameResolver.isCnameFollowARecords()", "io.netty.resolver.dns.DnsNameResolver.preferredAddressType()", "io.netty.resolver.dns.DnsNameResolver.resolveRecordTypes()"], "closed": "2017-01-25 22:06:03", "filteredCommits": ["6b4f75d689f24a7f0f65f85d35946ab5d35d3b43"], "commitsDetails": [{"nameRev": "6b4f75d689f24a7f0f65f85d35946ab5d35d3b43 tags/async-http-client-project-2.0.27~4", "commitMessage": "Respect resolvedAddressTypes when follow CNAME records, close #1327\n\nMotivation:\n\nWhen we follow CNAME records we should respect resolvedAddressTypes and\nonly query A / AAAA depending on which address types are expected.\n\nModifications:\n\nCheck if we should query A / AAAA when follow CNAMEs depending on\nresolvedAddressTypes.\n\nResult:\n\nCorrect behaviour when follow CNAMEs.\n", "commitParents": ["a0cbc3147378ffc03fb945b5919b0e3cceabbdcb"], "spoonStatsSkippedReason": "", "commitHash": "6b4f75d689f24a7f0f65f85d35946ab5d35d3b43", "authoredDateTime": "2017-01-26 11:21:03", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 49, "deletions": 0, "lines": 49, "filePath": "netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java"}, {"insertions": 10, "deletions": 16, "lines": 26, "filePath": "netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolverContext.java"}], "commitDateTime": "2017-01-26 11:22:40", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverContext.gotPreferredAddress()"}, {"UPD": 0, "TOT": 4, "MOV": 2, "INS": 2, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverContext.followCname(java.net.InetSocketAddress,java.lang.String,java.lang.String,io.netty.util.concurrent.Promise)"}, {"UPD": 1, "TOT": 8, "MOV": 2, "INS": 1, "DEL": 4, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverContext.internalResolve(io.netty.util.concurrent.Promise)"}], "spoonFilePath": "DnsNameResolverContext.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolver.isCnameFollowAAAARecords()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolver.preferredAddressType()"}, {"UPD": 0, "TOT": 13, "MOV": 0, "INS": 13, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolver"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolver.resolveRecordTypes()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolver.isCnameFollowARecords()"}], "spoonFilePath": "DnsNameResolver.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "1470b13c976fad32739839216d55a375c535c080", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "fdd842ce9cb12ddbae6756421c5cc97ca32298eb", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1327", "ttf": 7.000277777777778, "gitStatsSummary": {"insertions": 59.0, "deletions": 16.0, "lines": 75.0, "gitFilesChange": 2}, "title": "Backport Netty#6241 Respect resolvedAddressTypes when follow CNAME records", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns"], "spoonStatsSummary": {"UPD": 1.0, "spoonMethodsChanged": 8, "TOT": 32.0, "MOV": 5.0, "INS": 21.0, "DEL": 5.0, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 2, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "https://github.com/netty/netty/pull/6241", "labels": ["Defect"]}, {"created": "2017-01-15 08:21:30", "commits": {"4a946b59243305a596eed5e493a810441488af57": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "c8783ffe11adca79f854e2146383b84004089d5b": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder.reset()", "org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder", "org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder.handleSplitCharBuffer(java.nio.ByteBuffer,boolean)", "org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder.decodePartial(java.nio.ByteBuffer,boolean)", "org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder.initSplitCharBuffer()"], "closed": "2017-01-15 08:34:31", "filteredCommits": ["4a946b59243305a596eed5e493a810441488af57"], "commitsDetails": [{"nameRev": "4a946b59243305a596eed5e493a810441488af57 tags/async-http-client-project-2.1.0-alpha3~12", "commitMessage": "Reset Utf8ByteBufCharsetDecoder splitCharBuffer, close #1325\n\nMotivation:\n\nUtf8ByteBufCharsetDecoder crashes with BufferOverflow when trying to\ndecode a char whose byte length is larger than the one of the first\nsplit char that was decoded.\n\nThis happens because we only reset position while we should be\nresetting capacity too.\n\nModifications:\n\nUser ByteBuffer reset instead os `position(0)`.\n\nResult:\n\nNo more BufferOverflow\n", "commitParents": ["f4a4d15c2a268ae7d437e9319b624af02d8a4b4b"], "spoonStatsSkippedReason": "", "commitHash": "4a946b59243305a596eed5e493a810441488af57", "authoredDateTime": "2017-01-15 09:34:19", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 6, "deletions": 12, "lines": 18, "filePath": "netty-utils/src/main/java/org/asynchttpclient/netty/util/Utf8ByteBufCharsetDecoder.java"}, {"insertions": 34, "deletions": 8, "lines": 42, "filePath": "netty-utils/src/test/java/org/asynchttpclient/netty/util/ByteBufUtilsTest.java"}], "commitDateTime": "2017-01-15 09:34:19", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder.reset()"}, {"UPD": 0, "TOT": 8, "MOV": 2, "INS": 4, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder.handleSplitCharBuffer(java.nio.ByteBuffer,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder.decodePartial(java.nio.ByteBuffer,boolean)"}, {"UPD": 0, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder.initSplitCharBuffer()"}], "spoonFilePath": "Utf8ByteBufCharsetDecoder.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.util.ByteBufUtilsTest.byteBufs2StringShouldBeAbleToDealWithCharsWithVariableBytesLength()"}, {"UPD": 3, "TOT": 11, "MOV": 5, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.util.ByteBufUtilsTest.testByteBuf2BytesNoBackingArray()"}, {"UPD": 2, "TOT": 7, "MOV": 3, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.util.ByteBufUtilsTest.testByteBuf2BytesHasBackingArray()"}], "spoonFilePath": "ByteBufUtilsTest.java"}]}, {"nameRev": "c8783ffe11adca79f854e2146383b84004089d5b tags/async-http-client-project-2.0.26~1", "commitMessage": "Reset Utf8ByteBufCharsetDecoder splitCharBuffer, close #1325\n\nMotivation:\n\nUtf8ByteBufCharsetDecoder crashes with BufferOverflow when trying to\ndecode a char whose byte length is larger than the one of the first\nsplit char that was decoded.\n\nThis happens because we only reset position while we should be\nresetting capacity too.\n\nModifications:\n\nUser ByteBuffer reset instead os `position(0)`.\n\nResult:\n\nNo more BufferOverflow\n", "commitParents": ["968358a8835e7aac27e0c6184209f0a6f36d488f"], "spoonStatsSkippedReason": "", "commitHash": "c8783ffe11adca79f854e2146383b84004089d5b", "authoredDateTime": "2017-01-15 09:34:19", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 6, "deletions": 12, "lines": 18, "filePath": "netty-utils/src/main/java/org/asynchttpclient/netty/util/Utf8ByteBufCharsetDecoder.java"}, {"insertions": 34, "deletions": 8, "lines": 42, "filePath": "netty-utils/src/test/java/org/asynchttpclient/netty/util/ByteBufUtilsTest.java"}], "commitDateTime": "2017-01-15 09:57:37", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder.reset()"}, {"UPD": 0, "TOT": 8, "MOV": 2, "INS": 4, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder.handleSplitCharBuffer(java.nio.ByteBuffer,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder.decodePartial(java.nio.ByteBuffer,boolean)"}, {"UPD": 0, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder.initSplitCharBuffer()"}], "spoonFilePath": "Utf8ByteBufCharsetDecoder.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.util.ByteBufUtilsTest.byteBufs2StringShouldBeAbleToDealWithCharsWithVariableBytesLength()"}, {"UPD": 3, "TOT": 11, "MOV": 5, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.util.ByteBufUtilsTest.testByteBuf2BytesNoBackingArray()"}, {"UPD": 2, "TOT": 7, "MOV": 3, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.util.ByteBufUtilsTest.testByteBuf2BytesHasBackingArray()"}], "spoonFilePath": "ByteBufUtilsTest.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1325", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 6, "deletions": 12, "lines": 18, "gitFilesChange": 1}, "title": "Utf8ByteBufCharsetDecoder BufferOverflowException", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["netty-utils/src/main/java/org/asynchttpclient/netty/util"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 5, "TOT": 14, "MOV": 4, "INS": 5, "DEL": 5, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Utf8ByteBufCharsetDecoder doesn't reset splitCharBuffer' capacity between runs.", "labels": ["Defect"]}, {"created": "2016-11-28 15:41:40", "commits": {"4dbf11c19805c4a474dbe05ce61824ffb1602e5c": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "3e78a04d58ab904fe668d0cf4c09b31ba7437500": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 2, "changesInPackagesSPOON": ["org.asynchttpclient.extras.guava.RateLimitedThrottleRequestFilter.filter(org.asynchttpclient.filter.FilterContext)", "org.asynchttpclient.filter.ReleasePermitOnComplete", "org.asynchttpclient.filter.AsyncHandlerWrapper", "org.asynchttpclient.filter.ReleasePermitOnComplete.wrap(org.asynchttpclient.AsyncHandler,java.util.concurrent.Semaphore).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "org.asynchttpclient.filter.ThrottleRequestFilter.filter(org.asynchttpclient.filter.FilterContext)"], "closed": "2016-11-30 13:02:57", "filteredCommits": ["4dbf11c19805c4a474dbe05ce61824ffb1602e5c", "3e78a04d58ab904fe668d0cf4c09b31ba7437500"], "commitsDetails": [{"nameRev": "4dbf11c19805c4a474dbe05ce61824ffb1602e5c tags/async-http-client-project-2.1.0-alpha2~2", "commitMessage": "Fix semaphore not being released on Throwable, see #1314\n\nMotivation:\n\nFix for #1314 introduced a regression where the Semaphore leaks and is\nnot released on Throwable.\n\nModification:\n\nRelease Semaphore when called handler method is onThrowable too, not\nonly onComplete.\n\nResult\n\nNo more Semaphore leak\n", "commitParents": ["fd907c003fa1fb59d0cbcd3e0567814bdb2ded6a"], "spoonStatsSkippedReason": "", "commitHash": "4dbf11c19805c4a474dbe05ce61824ffb1602e5c", "authoredDateTime": "2017-01-12 22:17:55", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 11, "deletions": 3, "lines": 14, "filePath": "client/src/main/java/org/asynchttpclient/filter/ReleasePermitOnComplete.java"}], "commitDateTime": "2017-01-12 22:17:55", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.filter.ReleasePermitOnComplete.wrap(org.asynchttpclient.AsyncHandler,java.util.concurrent.Semaphore).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"}], "spoonFilePath": "ReleasePermitOnComplete.java"}]}, {"nameRev": "3e78a04d58ab904fe668d0cf4c09b31ba7437500 tags/async-http-client-project-2.1.0-alpha2~18", "commitMessage": "Make ThrottleRequestFilter preserve interfaces of AsyncHandlers, close #1314\n\n", "commitParents": ["d59fd205a4eca4c9514ce74440ababd93e74b0bd"], "spoonStatsSkippedReason": "", "commitHash": "3e78a04d58ab904fe668d0cf4c09b31ba7437500", "authoredDateTime": "2016-11-30 14:02:55", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 13, "deletions": 12, "lines": 25, "filePath": "client/src/main/java/org/asynchttpclient/filter/ThrottleRequestFilter.java"}, {"insertions": 50, "deletions": 0, "lines": 50, "filePath": "client/src/main/java/org/asynchttpclient/filter/ReleasePermitOnComplete.java"}, {"insertions": 4, "deletions": 3, "lines": 7, "filePath": "extras/guava/src/main/java/org/asynchttpclient/extras/guava/RateLimitedThrottleRequestFilter.java"}, {"insertions": 0, "deletions": 79, "lines": 79, "filePath": "client/src/main/java/org/asynchttpclient/filter/AsyncHandlerWrapper.java"}], "commitDateTime": "2016-11-30 14:02:55", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.filter.AsyncHandlerWrapper"}], "spoonFilePath": "AsyncHandlerWrapper.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.extras.guava.RateLimitedThrottleRequestFilter.filter(org.asynchttpclient.filter.FilterContext)"}], "spoonFilePath": "RateLimitedThrottleRequestFilter.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.filter.ThrottleRequestFilter.filter(org.asynchttpclient.filter.FilterContext)"}], "spoonFilePath": "ThrottleRequestFilter.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.filter.ReleasePermitOnComplete"}], "spoonFilePath": "ReleasePermitOnComplete.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1314", "ttf": 1.0002777777777778, "gitStatsSummary": {"insertions": 78, "deletions": 97, "lines": 175, "gitFilesChange": 4}, "title": "ThrottleRequestFilter swallows interfaces", "statsSkippedReason": "", "user": "markus-s24", "changesInPackagesGIT": ["extras/guava/src/main/java/org/asynchttpclient/extras/guava", "client/src/main/java/org/asynchttpclient/filter"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 5, "TOT": 14, "MOV": 6, "INS": 4, "DEL": 4, "spoonFilesChanged": 4}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "The ThrottleRequestFilter wraps the AsyncHandler with an AsyncHandlerWrapper. This way all additional interfaces implemented by the originating AsyncHandler get lost. E.g. ProgressAsyncHandler, ResumableAsyncHandler or any custom interfaces.\r\n\r\nSuggestion: Maybe use a dynamic proxy which implements all interfaces of the originating AsyncHandler instead of using AsyncHandlerWrapper.\r\n", "labels": ["Contributions Welcome!", "Defect"]}, {"created": "2016-11-14 16:18:21", "commits": {"d8f9f64ddb8d7e484800c789f9f1bfde23bee52f": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "closed": "2016-11-14 16:24:34", "filteredCommits": ["d8f9f64ddb8d7e484800c789f9f1bfde23bee52f"], "commitsDetails": [{"nameRev": "d8f9f64ddb8d7e484800c789f9f1bfde23bee52f tags/async-http-client-project-2.1.0-alpha2~25", "commitMessage": "Introduce HttpHeaderDateFormatter, close #1308\n", "commitParents": ["5b0e8077037ea78d5c2203f7a3d9f362680c9587"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "d8f9f64ddb8d7e484800c789f9f1bfde23bee52f", "authoredDateTime": "2016-11-14 17:24:25", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 416, "deletions": 0, "lines": 416, "filePath": "client/src/main/java/org/asynchttpclient/cookie/HttpHeaderDateFormatter.java"}, {"insertions": 0, "deletions": 61, "lines": 61, "filePath": "client/src/main/java/org/asynchttpclient/cookie/DateParser.java"}, {"insertions": 0, "deletions": 112, "lines": 112, "filePath": "client/src/test/java/org/asynchttpclient/cookie/DateParserTest.java"}, {"insertions": 29, "deletions": 3, "lines": 32, "filePath": "client/src/test/java/org/asynchttpclient/cookie/CookieDecoderTest.java"}, {"insertions": 62, "deletions": 0, "lines": 62, "filePath": "client/src/test/java/org/asynchttpclient/cookie/HttpHeaderDateFormatterTest.java"}, {"insertions": 20, "deletions": 23, "lines": 43, "filePath": "client/src/main/java/org/asynchttpclient/cookie/CookieDecoder.java"}, {"insertions": 0, "deletions": 11, "lines": 11, "filePath": "client/src/main/java/org/asynchttpclient/cookie/CookieUtil.java"}], "commitDateTime": "2016-11-14 17:24:25", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1308", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 436, "deletions": 95, "lines": 531, "gitFilesChange": 4}, "title": "CookieDecoder fails to parse expires field with non standard timezone", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/cookie"], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "See https://github.com/netty/netty/issues/6016", "labels": ["Defect"]}, {"created": "2016-11-10 04:26:43", "commits": {"cb92e376ff0fdf4c5b944ad3db1c2d617d51be2f": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2017-02-08 10:39:53", "filteredCommits": [], "commitsDetails": [{"nameRev": "cb92e376ff0fdf4c5b944ad3db1c2d617d51be2f tags/async-http-client-project-2.1.0-alpha4~1", "commitMessage": "Always close Channel when AsyncHandler returns ABORT, close #1350, close #1306\n\nMotivation:\n\nWe currently handle ABORT in a very gentle manner: ignore next chunks,\ndrain channel until last chunk is received and then offer the channel\nto the pool if keep-alive is possible.\n\nThis is way too gentle, and prevents us from closing infinite streams.\n\nModifications:\n\nHave ABORT close the Channel, both for HTTP and WebSocket\n\nResult:\n\nWe now close infinite streams.\n", "commitParents": ["06798b90665485c6398c8e057ba669518b5c1375"], "spoonStatsSkippedReason": "", "commitHash": "cb92e376ff0fdf4c5b944ad3db1c2d617d51be2f", "authoredDateTime": "2017-02-08 11:39:45", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 27, "deletions": 65, "lines": 92, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/HttpHandler.java"}, {"insertions": 19, "deletions": 0, "lines": 19, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/AsyncHttpClientHandler.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/WebSocketHandler.java"}], "commitDateTime": "2017-02-08 11:39:45", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.AsyncHttpClientHandler.finishUpdate(org.asynchttpclient.netty.NettyResponseFuture,io.netty.channel.Channel,boolean,boolean)"}], "spoonFilePath": "AsyncHttpClientHandler.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.WebSocketHandler.abort(org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.ws.WebSocketUpgradeHandler,org.asynchttpclient.HttpResponseStatus)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.WebSocketHandler.abort(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.ws.WebSocketUpgradeHandler,org.asynchttpclient.HttpResponseStatus)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.WebSocketHandler.handleRead(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Object)"}], "spoonFilePath": "WebSocketHandler.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 4, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.exitAfterHandlingHeaders(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.AsyncHandler,org.asynchttpclient.HttpResponseHeaders,io.netty.handler.codec.http.HttpRequest)"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.exitAfterHandlingReactiveStreams(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.AsyncHandler,io.netty.handler.codec.http.HttpRequest)"}, {"UPD": 8, "TOT": 12, "MOV": 0, "INS": 3, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.handleChunk(io.netty.handler.codec.http.HttpContent,io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler)"}, {"UPD": 2, "TOT": 4, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.updateBodyAndInterrupt(org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,org.asynchttpclient.HttpResponseBodyPart)"}, {"UPD": 2, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.finishUpdate(org.asynchttpclient.netty.NettyResponseFuture,io.netty.channel.Channel,boolean)"}, {"UPD": 0, "TOT": 5, "MOV": 4, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.exitAfterHandlingStatus(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.AsyncHandler,org.asynchttpclient.netty.NettyResponseStatus,io.netty.handler.codec.http.HttpRequest)"}, {"UPD": 5, "TOT": 11, "MOV": 5, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.notifyHandler(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.AsyncHandler,org.asynchttpclient.netty.NettyResponseStatus,io.netty.handler.codec.http.HttpRequest,org.asynchttpclient.HttpResponseHeaders)"}, {"UPD": 0, "TOT": 4, "MOV": 1, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.handleHttpResponse(io.netty.handler.codec.http.HttpResponse,io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.readFailed(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Throwable)"}], "spoonFilePath": "HttpHandler.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1306", "ttf": 90.00027777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Early termination of reactive streams subscriber should close connection", "statsSkippedReason": "", "user": "jroper", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "If a reactive streams subscriber cancels mid response, currently, AHC will drain the response, and return the connection to the queue once done.  This is not what happens when `AsyncHandler.onBodyPartReceived` returns `ABORT`, for example, when that happens, the connection is closed (I think).  The problem we're seeing is that if you have an infinite stream (eg, a Twitter streamed search response), it's impossible to ever terminate it.  Reactive streams response handling should terminate the connection upon a reactive streams subscriber cancelling.", "labels": ["Defect"]}, {"created": "2016-11-08 14:29:11", "commits": {"5df389800e2c5d1b922532137f4381d8f11362a6": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.util.ByteBufUtils.decodeNonOptimized(java.nio.charset.Charset,io.netty.buffer.ByteBuf[])"], "closed": "2016-11-08 14:32:42", "filteredCommits": ["5df389800e2c5d1b922532137f4381d8f11362a6"], "commitsDetails": [{"nameRev": "5df389800e2c5d1b922532137f4381d8f11362a6 tags/async-http-client-project-2.0.24~1", "commitMessage": "Fix decodeNonOptimized, close #1305\n", "commitParents": ["bd263b218ab116329fbdb178fd56245aa98fb7aa"], "spoonStatsSkippedReason": "", "commitHash": "5df389800e2c5d1b922532137f4381d8f11362a6", "authoredDateTime": "2016-11-08 15:31:49", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 7, "deletions": 9, "lines": 16, "filePath": "netty-utils/src/main/java/org/asynchttpclient/netty/util/ByteBufUtils.java"}], "commitDateTime": "2016-11-08 15:31:49", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 6, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.util.ByteBufUtils.decodeNonOptimized(java.nio.charset.Charset,io.netty.buffer.ByteBuf[])"}], "spoonFilePath": "ByteBufUtils.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1305", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 7, "deletions": 9, "lines": 16, "gitFilesChange": 1}, "title": "ByteBufUtils.decodeNonOptimized returns empty String", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["netty-utils/src/main/java/org/asynchttpclient/netty/util"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 1, "TOT": 6, "MOV": 2, "INS": 1, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "`CompositeBuffer.addComponent` doesn't increment writerIndex by default.", "labels": ["Defect"]}, {"created": "2016-11-08 13:32:11", "commits": {"bd263b218ab116329fbdb178fd56245aa98fb7aa": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "closed": "2016-11-08 13:35:49", "filteredCommits": ["bd263b218ab116329fbdb178fd56245aa98fb7aa"], "commitsDetails": [{"nameRev": "bd263b218ab116329fbdb178fd56245aa98fb7aa tags/async-http-client-project-2.0.24~2", "commitMessage": "Remove forked HttpContentDecoder, close #1304\n", "commitParents": ["71cc2f58460bffa5e2ed77bff9ceb6a5c4f52e5b"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "bd263b218ab116329fbdb178fd56245aa98fb7aa", "authoredDateTime": "2016-11-08 14:35:43", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 0, "deletions": 253, "lines": 253, "filePath": "client/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java"}], "commitDateTime": "2016-11-08 14:35:43", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1304", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 253, "lines": 253, "gitFilesChange": 1}, "title": "AHC shouldn't ship HttpContentDecoder", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/io/netty/handler/codec/http"], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Class was shipped by mistake when testing fix for #1299", "labels": ["Defect"]}, {"created": "2016-11-07 20:53:24", "commits": {"b3c4ba57d33ec8a25819ea9d5704e63aa8d20a9e": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder.reset()"], "closed": "2016-11-07 20:54:22", "filteredCommits": ["b3c4ba57d33ec8a25819ea9d5704e63aa8d20a9e"], "commitsDetails": [{"nameRev": "b3c4ba57d33ec8a25819ea9d5704e63aa8d20a9e tags/async-http-client-project-2.0.23~1", "commitMessage": "Properly clear Utf8ByteBufCharsetDecoder's charBuffer, close #1303\n", "commitParents": ["b903186ab7e07f3c0ad268626edcfa1dd5d418c3"], "spoonStatsSkippedReason": "", "commitHash": "b3c4ba57d33ec8a25819ea9d5704e63aa8d20a9e", "authoredDateTime": "2016-11-07 21:54:13", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "netty-utils/src/main/java/org/asynchttpclient/netty/util/Utf8ByteBufCharsetDecoder.java"}], "commitDateTime": "2016-11-07 21:54:13", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder.reset()"}], "spoonFilePath": "Utf8ByteBufCharsetDecoder.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1303", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "Utf8ByteBufCharsetDecoder doesn't reset charBuffer's limit", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["netty-utils/src/main/java/org/asynchttpclient/netty/util"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2016-11-07 17:09:32", "commits": {"e9364a63d783b5871058ccfe9ec2ed33c48c2c2d": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.util.ByteBufUtils.byteBuf2String(java.nio.charset.Charset,io.netty.buffer.ByteBuf[])", "org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder.decode(io.netty.buffer.ByteBuf[])"], "closed": "2016-11-07 17:10:13", "filteredCommits": ["e9364a63d783b5871058ccfe9ec2ed33c48c2c2d"], "commitsDetails": [{"nameRev": "e9364a63d783b5871058ccfe9ec2ed33c48c2c2d tags/async-http-client-project-2.0.22~2", "commitMessage": "ByteBufUtils shouldn't release input ByteBufs, close #1302\n", "commitParents": ["2ded5269fd6087fdb51d5e31564fdf7198daf92d"], "spoonStatsSkippedReason": "", "commitHash": "e9364a63d783b5871058ccfe9ec2ed33c48c2c2d", "authoredDateTime": "2016-11-07 18:10:02", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 7, "lines": 8, "filePath": "netty-utils/src/main/java/org/asynchttpclient/netty/util/Utf8ByteBufCharsetDecoder.java"}, {"insertions": 18, "deletions": 13, "lines": 31, "filePath": "netty-utils/src/main/java/org/asynchttpclient/netty/util/ByteBufUtils.java"}], "commitDateTime": "2016-11-07 18:10:02", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 5, "MOV": 1, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder.decode(io.netty.buffer.ByteBuf[])"}], "spoonFilePath": "Utf8ByteBufCharsetDecoder.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 6, "MOV": 4, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.util.ByteBufUtils.byteBuf2String(java.nio.charset.Charset,io.netty.buffer.ByteBuf[])"}], "spoonFilePath": "ByteBufUtils.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1302", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 19, "deletions": 20, "lines": 39, "gitFilesChange": 2}, "title": "ByteBufUtils shouldn't release input ByteBufs", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["netty-utils/src/main/java/org/asynchttpclient/netty/util"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 2, "TOT": 11, "MOV": 5, "INS": 2, "DEL": 2, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2016-11-05 09:36:59", "commits": {"00dbf54b0b4edfd8afbefabd38d4a52eb919c646": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "d13145875d1058deb3bd5183f28afc67fdaafce3": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "2db8b406b07caf9b7e5d79d1ad38b3a2f11b4042": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "25c129f5ad80eca8492fbca30854547c5a6a4063": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2017-07-05 13:17:28", "filteredCommits": ["d13145875d1058deb3bd5183f28afc67fdaafce3"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "25c129f5ad80eca8492fbca30854547c5a6a4063", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "d13145875d1058deb3bd5183f28afc67fdaafce3 tags/async-http-client-project-2.0.34~11", "commitMessage": "Fix RealmTest MD5 String computation, close #1301\n", "commitParents": ["4925fac7cc5b27eeaa3a6d9c8549ca4cf3f809b2"], "spoonStatsSkippedReason": "", "commitHash": "d13145875d1058deb3bd5183f28afc67fdaafce3", "authoredDateTime": "2017-07-05 15:17:21", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 16, "deletions": 25, "lines": 41, "filePath": "client/src/test/java/org/asynchttpclient/RealmTest.java"}], "commitDateTime": "2017-07-05 15:29:13", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 3, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.RealmTest.getMd5(java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.RealmTest.testStrongDigest()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.RealmTest.testOldDigest(java.lang.String)"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 2, "DEL": 2, "spoonMethodName": "org.asynchttpclient.RealmTest.testOldDigestEmptyString()"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 2, "DEL": 2, "spoonMethodName": "org.asynchttpclient.RealmTest.testOldDigestNull()"}], "spoonFilePath": "RealmTest.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "2db8b406b07caf9b7e5d79d1ad38b3a2f11b4042", "authoredDateTime": "", "commitGHEventType": "closed", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "00dbf54b0b4edfd8afbefabd38d4a52eb919c646 tags/async-http-client-project-2.1.0-alpha21~3", "commitMessage": "Fix RealmTest MD5 String computation, close #1301\n", "commitParents": ["af3e161eeb22e43cee66613063868a8a0087f2c5"], "spoonStatsSkippedReason": "", "commitHash": "00dbf54b0b4edfd8afbefabd38d4a52eb919c646", "authoredDateTime": "2017-07-05 15:17:21", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 16, "deletions": 25, "lines": 41, "filePath": "client/src/test/java/org/asynchttpclient/RealmTest.java"}], "commitDateTime": "2017-07-05 15:29:42", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 3, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.RealmTest.getMd5(java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.RealmTest.testStrongDigest()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.RealmTest.testOldDigest(java.lang.String)"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 2, "DEL": 2, "spoonMethodName": "org.asynchttpclient.RealmTest.testOldDigestEmptyString()"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 2, "DEL": 2, "spoonMethodName": "org.asynchttpclient.RealmTest.testOldDigestNull()"}], "spoonFilePath": "RealmTest.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1301", "ttf": 242.00027777777777, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "title": "RealmTest.testStrongDigest random failure on Travis", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 0, "TOT": 0.0, "MOV": 0.0, "INS": 0.0, "DEL": 0.0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 3, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "`RealmTest.testStrongDigest:99 expected [ca81aa346c59feac0fed225ed6c2ca] but found [00ca81aa346c59feac0fed225ed6c2ca]`", "labels": ["Defect"]}, {"created": "2016-11-03 00:23:42", "commits": {"aaedb617dac20eb96b783ce2b201424996384b67": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "660d52d77ee4de79870386adea26d997b87ecf44": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "baee03a0cc4aecdbeee6c0ced3d0d8d89072a941": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2017-01-05 15:01:46", "filteredCommits": ["660d52d77ee4de79870386adea26d997b87ecf44", "baee03a0cc4aecdbeee6c0ced3d0d8d89072a941"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "aaedb617dac20eb96b783ce2b201424996384b67", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "660d52d77ee4de79870386adea26d997b87ecf44 tags/async-http-client-project-2.1.0-alpha2~9", "commitMessage": "Enable EofTerminatedTest, close #1299\n", "commitParents": ["c6e9e40aa0292c13d6eb566263b71df732b4cd58"], "spoonStatsSkippedReason": "", "commitHash": "660d52d77ee4de79870386adea26d997b87ecf44", "authoredDateTime": "2017-01-05 16:01:38", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/test/java/org/asynchttpclient/EofTerminatedTest.java"}], "commitDateTime": "2017-01-05 16:01:38", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.EofTerminatedTest.testEolTerminatedResponse()"}], "spoonFilePath": "EofTerminatedTest.java"}]}, {"nameRev": "baee03a0cc4aecdbeee6c0ced3d0d8d89072a941 tags/async-http-client-project-2.0.22~1", "commitMessage": "Add test (disabled for now) for #1299\n", "commitParents": ["e9364a63d783b5871058ccfe9ec2ed33c48c2c2d"], "spoonStatsSkippedReason": "", "commitHash": "baee03a0cc4aecdbeee6c0ced3d0d8d89072a941", "authoredDateTime": "2016-11-07 18:12:08", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 57, "deletions": 0, "lines": 57, "filePath": "client/src/test/java/org/asynchttpclient/EofTerminatedTest.java"}], "commitDateTime": "2016-11-07 18:15:13", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.EofTerminatedTest"}], "spoonFilePath": "EofTerminatedTest.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1299", "ttf": 63.000277777777775, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "title": "EOF compressed HTTP response is incorrectly treated as premature channel closure", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 0, "TOT": 0.0, "MOV": 0.0, "INS": 0.0, "DEL": 0.0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "See https://github.com/netty/netty/issues/5892\r\n\r\nWill be fixed in Netty 4.0.43.Final/4.1.7.Final\r\n", "labels": ["Defect"]}, {"created": "2016-10-27 08:36:04", "commits": {"32a080e1f2743ac9e70ff29e857ae8cda200c9f4": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2016-11-22 10:26:10", "filteredCommits": [], "commitsDetails": [{"nameRev": "32a080e1f2743ac9e70ff29e857ae8cda200c9f4 tags/async-http-client-project-2.1.0-alpha2~22", "commitMessage": "Check for errors before checking for completion. (#1310)\n\nFixes #1292. All the failing tests make requests to actual websites. Most\r\nprobably timeouts happened, but since the tests check for completion first,\r\nany exceptions produced by the tests didn't show up. By changing the assertion\r\norder to check for no errors first, and then for completion, any errors that\r\nare emitted by the tests will be propagated, and not suppressed.", "commitParents": ["49282169a9ed95dd6549d8f04db4b9a7f96dc200"], "spoonStatsSkippedReason": "", "commitHash": "32a080e1f2743ac9e70ff29e857ae8cda200c9f4", "authoredDateTime": "2016-11-22 11:26:10", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 5, "deletions": 5, "lines": 10, "filePath": "extras/rxjava/src/test/java/org/asynchttpclient/extras/rxjava/AsyncHttpObservableTest.java"}, {"insertions": 5, "deletions": 5, "lines": 10, "filePath": "extras/rxjava/src/test/java/org/asynchttpclient/extras/rxjava/single/AsyncHttpSingleTest.java"}], "commitDateTime": "2016-11-22 11:26:10", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.extras.rxjava.AsyncHttpObservableTest.testObserveNoError()"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.extras.rxjava.AsyncHttpObservableTest.testToObservableNoError()"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.extras.rxjava.AsyncHttpObservableTest.testToObservableError()"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.extras.rxjava.AsyncHttpObservableTest.testObserveMultiple()"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.extras.rxjava.AsyncHttpObservableTest.testObserveError()"}], "spoonFilePath": "AsyncHttpObservableTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.extras.rxjava.single.AsyncHttpSingleTest.testAbort()"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.extras.rxjava.single.AsyncHttpSingleTest.testSuccessfulCompletion()"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.extras.rxjava.single.AsyncHttpSingleTest.testSuccessfulCompletionWithProgress()"}], "spoonFilePath": "AsyncHttpSingleTest.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1292", "ttf": 26.00027777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "RxJava module sporadic test failures", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "```\ntestObserveError(org.asynchttpclient.extras.rxjava.AsyncHttpObservableTest)  Time elapsed: 0.643 sec  <<< FAILURE!\njava.lang.AssertionError: Not completed!\n    at rx.observers.TestSubscriber.assertCompleted(TestSubscriber.java:352)\n    at org.asynchttpclient.extras.rxjava.AsyncHttpObservableTest.testObserveError(AsyncHttpObservableTest.java:98)\n\ntestObserveMultiple(org.asynchttpclient.extras.rxjava.AsyncHttpObservableTest)  Time elapsed: 0.03 sec  <<< FAILURE!\njava.lang.AssertionError: Not completed!\n    at rx.observers.TestSubscriber.assertCompleted(TestSubscriber.java:352)\n    at org.asynchttpclient.extras.rxjava.AsyncHttpObservableTest.testObserveMultiple(AsyncHttpObservableTest.java:121)\n\ntestObserveNoError(org.asynchttpclient.extras.rxjava.AsyncHttpObservableTest)  Time elapsed: 0.007 sec  <<< FAILURE!\njava.lang.AssertionError: Not completed!\n    at rx.observers.TestSubscriber.assertCompleted(TestSubscriber.java:352)\n    at org.asynchttpclient.extras.rxjava.AsyncHttpObservableTest.testObserveNoError(AsyncHttpObservableTest.java:78)\n\ntestToObservableError(org.asynchttpclient.extras.rxjava.AsyncHttpObservableTest)  Time elapsed: 0.006 sec  <<< FAILURE!\njava.lang.AssertionError: Not completed!\n    at rx.observers.TestSubscriber.assertCompleted(TestSubscriber.java:352)\n    at org.asynchttpclient.extras.rxjava.AsyncHttpObservableTest.testToObservableError(AsyncHttpObservableTest.java:58)\n\ntestToObservableNoError(org.asynchttpclient.extras.rxjava.AsyncHttpObservableTest)  Time elapsed: 0.005 sec  <<< FAILURE!\njava.lang.AssertionError: Not completed!\n    at rx.observers.TestSubscriber.assertCompleted(TestSubscriber.java:352)\n    at org.asynchttpclient.extras.rxjava.AsyncHttpObservableTest.testToObservableNoError(AsyncHttpObservableTest.java:38)\n\ntestAbort(org.asynchttpclient.extras.rxjava.single.AsyncHttpSingleTest)  Time elapsed: 0.012 sec  <<< FAILURE!\njava.lang.AssertionError: Not completed!\n    at rx.observers.TestSubscriber.assertCompleted(TestSubscriber.java:352)\n    at org.asynchttpclient.extras.rxjava.single.AsyncHttpSingleTest.testAbort(AsyncHttpSingleTest.java:292)\n```\n", "labels": ["Defect"]}, {"created": "2016-10-14 13:56:47", "commits": {"af9335c49a7ab9bbd6ab4b11838a1e978fcbfe74": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.request.NettyRequestFactory.newNettyRequest(org.asynchttpclient.Request,boolean,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.Realm,org.asynchttpclient.Realm)"], "closed": "2016-10-14 13:57:21", "filteredCommits": ["af9335c49a7ab9bbd6ab4b11838a1e978fcbfe74"], "commitsDetails": [{"nameRev": "af9335c49a7ab9bbd6ab4b11838a1e978fcbfe74 tags/async-http-client-project-2.0.17~3", "commitMessage": "Use Unpooled.EMPTY_BUFFER when request doesn't have a body, close #1278\n", "commitParents": ["3f58ea57fa7630f28c4bf74dbab5ed201494670f"], "spoonStatsSkippedReason": "", "commitHash": "af9335c49a7ab9bbd6ab4b11838a1e978fcbfe74", "authoredDateTime": "2016-10-14 15:57:13", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 2, "deletions": 1, "lines": 3, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactory.java"}], "commitDateTime": "2016-10-14 15:57:13", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestFactory.newNettyRequest(org.asynchttpclient.Request,boolean,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.Realm,org.asynchttpclient.Realm)"}], "spoonFilePath": "NettyRequestFactory.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1278", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "title": "Use Unpooled.EMPTY_BUFFER when request doesn't have a body", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Otherwise, we allocate a `ByteBuf` with 0 capacity for naught.\n", "labels": ["Defect"]}, {"created": "2016-10-12 07:53:55", "commits": {"13ce61d79049c869bc099ff2a454f7af3dfe0288": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "c035ead9354f2957b180ea4f4c1fb2d479411f1b": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 2, "changesInPackagesSPOON": ["org.asynchttpclient.netty.handler.AsyncHttpClientHandler.channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)"], "closed": "2018-10-04 19:12:43", "filteredCommits": ["13ce61d79049c869bc099ff2a454f7af3dfe0288", "c035ead9354f2957b180ea4f4c1fb2d479411f1b"], "commitsDetails": [{"nameRev": "13ce61d79049c869bc099ff2a454f7af3dfe0288 tags/async-http-client-project-2.0.40~7", "commitMessage": "Backport changes that incidentally fix WSClient sending HTTP CONNECT to target host\n\nsee https://github.com/marcospereira/async-http-client/commit/d5960563dcbd09854b8ae3e416108ce770b292c2\nand https://github.com/AsyncHttpClient/async-http-client/issues/1274\n", "commitParents": ["4e42edc82f0cea65e7aff4beb154065a1c95a4d2"], "spoonStatsSkippedReason": "", "commitHash": "13ce61d79049c869bc099ff2a454f7af3dfe0288", "authoredDateTime": "2018-10-04 21:12:35", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 2, "lines": 6, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/AsyncHttpClientHandler.java"}], "commitDateTime": "2019-10-09 10:24:22", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 3, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.AsyncHttpClientHandler.channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)"}], "spoonFilePath": "AsyncHttpClientHandler.java"}]}, {"nameRev": "c035ead9354f2957b180ea4f4c1fb2d479411f1b tags/async-http-client-project-2.5.4~3", "commitMessage": "Fix regression introduced in d5960563dcbd09854b8ae3e416108ce770b292c2, close #1274\n", "commitParents": ["365c1e6a582499f8aaec30d56a398e694033e999"], "spoonStatsSkippedReason": "", "commitHash": "c035ead9354f2957b180ea4f4c1fb2d479411f1b", "authoredDateTime": "2018-10-04 21:12:35", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 4, "deletions": 2, "lines": 6, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/AsyncHttpClientHandler.java"}], "commitDateTime": "2018-10-04 21:12:35", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 3, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.AsyncHttpClientHandler.channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)"}], "spoonFilePath": "AsyncHttpClientHandler.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1274", "ttf": 722.0002777777778, "gitStatsSummary": {"insertions": 8, "deletions": 4, "lines": 12, "gitFilesChange": 1}, "title": "Websocket does not support NTLM proxy", "statsSkippedReason": "", "user": "stonecai", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/handler"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 10, "MOV": 6, "INS": 2, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "With latest version (2.1.0-alpha1), As the following codes, it works fine while connectiong to server with http; but it is failed for websocket, it alway returns 501 status code. does asynch-http-client support the proxy with NTML schema?\n\nScenario 1: connecting www.google.com, connection established\n\n``` java\nString url=\"http://www.google.com\";\nDefaultAsyncHttpClientConfig.Builder configBuilder = new DefaultAsyncHttpClientConfig.Builder();\nconfigBuilder.setWebSocketMaxFrameSize(WEBSOCKET_MAX_FRAME_SIZE);\nboolean isWss = SSLConfigurationUtil.isWssConnection(url);\nsetProxyConfig(configBuilder);\nAsyncHttpClientConfig cf = configBuilder.build();\nclient = new DefaultAsyncHttpClient(cf);\nFuture<Response> responseFuture = client.prepareGet(url).execute();\nint status = responseFuture.get().getStatusCode(); //status ==200, success\n```\n\nScenario 2: connecting to websocket, failed. return 501 status code\n\n``` java\nString url=\"ws://192.168.1.100/hello\";\nDefaultAsyncHttpClientConfig.Builder configBuilder = new DefaultAsyncHttpClientConfig.Builder();\nconfigBuilder.setWebSocketMaxFrameSize(WEBSOCKET_MAX_FRAME_SIZE);\nboolean isWss = SSLConfigurationUtil.isWssConnection(url);\nsetProxyConfig(configBuilder);\nAsyncHttpClientConfig cf = configBuilder.build();\nclient = new DefaultAsyncHttpClient(cf);\nWebSocketUpgradeHandler.Builder wsHandlerBuilder = new WebSocketUpgradeHandler.Builder();\nwsHandlerBuilder.addWebSocketListener(new NettyWebSocketByteListener());\nWebSocketUpgradeHandler upgradeHandler = wsHandlerBuilder.build();\nWebSocket session = client.prepareGet(url).execute(upgradeHandler).get(); //Invalid Status Code 501\n```\n\n``` java\nprivate void setProxyConfig(Builder configBuilder) {\n    try {\n        ProxyServer.Builder psBuilder = new ProxyServer.Builder(proxyHost, Integer.valueOf(proxyPort));\n\n        Realm.Builder realmBuilder = new Realm.Builder(proxyUsername, proxyPassword);\n        realmBuilder.setUsePreemptiveAuth(true);\n        realmBuilder.setNtlmDomain(proxyUserDomain);\n        realmBuilder.setNtlmHost(proxyHost);\n        realmBuilder.setScheme(AuthScheme.NTLM);\n        Realm realm = realmBuilder.build();\n        psBuilder.setRealm(realm);\n\n        ProxyServer proxyServer = psBuilder.build();\n        configBuilder.setProxyServer(proxyServer);\n    } catch (Exception e) {\n        log.error(e.getMessage(), e);\n    }\n}\n```\n", "labels": ["Defect"]}, {"created": "2016-10-11 20:17:53", "commits": {"119a19914ea02724a8c6e090fb53011134ac3fd5": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.ssl.InsecureTrustManagerFactory", "org.asynchttpclient.netty.ssl.SslEngineFactoryBase.configureSslEngine(javax.net.ssl.SSLEngine,org.asynchttpclient.AsyncHttpClientConfig)"], "closed": "2016-10-11 20:19:04", "filteredCommits": ["119a19914ea02724a8c6e090fb53011134ac3fd5"], "commitsDetails": [{"nameRev": "119a19914ea02724a8c6e090fb53011134ac3fd5 tags/async-http-client-project-2.0.17~6", "commitMessage": "Use a InsecureTrustManagerFactory that returns X509ExtendedTrustManagers, close #1272\n", "commitParents": ["299559d81e8036aaed8cd82e29380f926abec85f"], "spoonStatsSkippedReason": "", "commitHash": "119a19914ea02724a8c6e090fb53011134ac3fd5", "authoredDateTime": "2016-10-11 22:18:52", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 105, "deletions": 0, "lines": 105, "filePath": "client/src/main/java/org/asynchttpclient/netty/ssl/InsecureTrustManagerFactory.java"}, {"insertions": 3, "deletions": 5, "lines": 8, "filePath": "client/src/main/java/org/asynchttpclient/netty/ssl/SslEngineFactoryBase.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "client/src/main/java/org/asynchttpclient/netty/ssl/DefaultSslEngineFactory.java"}], "commitDateTime": "2016-10-11 22:18:52", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "DefaultSslEngineFactory.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.ssl.InsecureTrustManagerFactory"}], "spoonFilePath": "InsecureTrustManagerFactory.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 3, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.ssl.SslEngineFactoryBase.configureSslEngine(javax.net.ssl.SSLEngine,org.asynchttpclient.AsyncHttpClientConfig)"}], "spoonFilePath": "SslEngineFactoryBase.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1272", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 108, "deletions": 6, "lines": 114, "gitFilesChange": 3}, "title": "Properly disable certificate validation without disabling HTTPS behavior", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/ssl"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 5, "MOV": 3, "INS": 1, "DEL": 1, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "See https://github.com/netty/netty/issues/5910\n", "labels": ["Defect"]}, {"created": "2016-10-08 18:36:28", "commits": {"70f286c3c82478f76dc6c276bdd171448caea053": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.request.NettyRequestSender.sendNextRequest(org.asynchttpclient.Request,org.asynchttpclient.netty.NettyResponseFuture)"], "closed": "2016-10-17 21:28:43", "filteredCommits": ["70f286c3c82478f76dc6c276bdd171448caea053"], "commitsDetails": [{"nameRev": "70f286c3c82478f76dc6c276bdd171448caea053 tags/async-http-client-project-2.0.19~3", "commitMessage": "Remove useless and buggy context clean up, close #1268\n", "commitParents": ["fa0c164623632761447fe1da9e700a84b9485803"], "spoonStatsSkippedReason": "", "commitHash": "70f286c3c82478f76dc6c276bdd171448caea053", "authoredDateTime": "2016-10-17 23:28:35", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 0, "deletions": 7, "lines": 7, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java"}], "commitDateTime": "2016-10-17 23:28:35", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.sendNextRequest(org.asynchttpclient.Request,org.asynchttpclient.netty.NettyResponseFuture)"}], "spoonFilePath": "NettyRequestSender.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1268", "ttf": 9.000277777777777, "gitStatsSummary": {"insertions": 0, "deletions": 7, "lines": 7, "gitFilesChange": 1}, "title": "Keep-alive connection not kept on 301 w/ host change", "statsSkippedReason": "", "user": "MikeN123", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "`Redirect30xInterceptor` tries to reuse a channel on a redirect if keep-alive is enabled, and tries to offer the channel to the pool if that is not possible due to a host change, see here: https://github.com/AsyncHttpClient/async-http-client/blob/300a6c3dab6076f7a427e0c869bee511ff6d3bbd/client/src/main/java/org/asynchttpclient/netty/handler/intercept/Redirect30xInterceptor.java#L152\n\nUnfortunately, that does not work, as `NettyRequestSender.sendNextRequest()` immediately clears the `Channel` attribute, which was a fix for another issue (#1059): https://github.com/AsyncHttpClient/async-http-client/blob/300a6c3dab6076f7a427e0c869bee511ff6d3bbd/client/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java#L473\n\nNot sure about the correct fix, still trying to figure that out.\n", "labels": ["Defect"]}, {"created": "2016-10-06 20:20:57", "commits": {"776e9f5e18382cff7037bcc0c4fd7b97fff5228a": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.channel.Channels.setInactiveToken(io.netty.channel.Channel)", "org.asynchttpclient.netty.channel.NettyConnectListener.onSuccess(io.netty.channel.Channel,java.net.InetSocketAddress)", "org.asynchttpclient.netty.request.NettyRequestSender.handleUnexpectedClosedChannel(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture)", "org.asynchttpclient.netty.channel.Channels.getInactiveToken(io.netty.channel.Channel)", "org.asynchttpclient.netty.channel.Channels"], "closed": "2016-10-14 16:02:12", "filteredCommits": ["776e9f5e18382cff7037bcc0c4fd7b97fff5228a"], "commitsDetails": [{"nameRev": "776e9f5e18382cff7037bcc0c4fd7b97fff5228a tags/async-http-client-project-2.0.17~1", "commitMessage": "Have a mutex for handling handleUnexpectedClosedChannel, close #1265\n", "commitParents": ["96dc1255793b96dabdecd255e48fb962a31b6201"], "spoonStatsSkippedReason": "", "commitHash": "776e9f5e18382cff7037bcc0c4fd7b97fff5228a", "authoredDateTime": "2016-10-14 18:02:06", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 8, "deletions": 6, "lines": 14, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java"}, {"insertions": 2, "deletions": 0, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/NettyConnectListener.java"}, {"insertions": 11, "deletions": 0, "lines": 11, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/Channels.java"}], "commitDateTime": "2016-10-14 18:02:06", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.Channels.setInactiveToken(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.Channels.getInactiveToken(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.Channels"}], "spoonFilePath": "Channels.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.handleUnexpectedClosedChannel(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture)"}], "spoonFilePath": "NettyRequestSender.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.NettyConnectListener.onSuccess(io.netty.channel.Channel,java.net.InetSocketAddress)"}], "spoonFilePath": "NettyConnectListener.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1265", "ttf": 7.000277777777778, "gitStatsSummary": {"insertions": 21, "deletions": 6, "lines": 27, "gitFilesChange": 3}, "title": "IllegalReferenceCountException on retry is request has already been consumed", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request", "client/src/main/java/org/asynchttpclient/netty/channel"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 5, "TOT": 6, "MOV": 1, "INS": 5, "DEL": 0, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "```\n[WARN ] i.n.c.ChannelOutboundBuffer - 146 - Failed to mark a promise as success because it has failed already: DefaultChannelPromise@76d88d26(failure: io.netty.handler.codec.EncoderException: io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1), unnotified cause io.netty.handler.codec.EncoderException: io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1\n    at io.netty.handler.codec.MessageToMessageEncoder.write(MessageToMessageEncoder.java:106)\n    at io.netty.channel.CombinedChannelDuplexHandler.write(CombinedChannelDuplexHandler.java:345)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:742)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:805)\n    at io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:817)\n    at io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:798)\n    at io.netty.channel.DefaultChannelPipeline.writeAndFlush(DefaultChannelPipeline.java:1012)\n    at io.netty.channel.AbstractChannel.writeAndFlush(AbstractChannel.java:261)\n    at org.asynchttpclient.netty.request.NettyRequestSender.writeRequest(NettyRequestSender.java:355)\n    at org.asynchttpclient.netty.channel.NettyConnectListener.writeRequest(NettyConnectListener.java:94)\n    at org.asynchttpclient.netty.channel.NettyConnectListener.onSuccess(NettyConnectListener.java:137)\n    at org.asynchttpclient.netty.request.NettyChannelConnector$1.onSuccess(NettyChannelConnector.java:92)\n    at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:26)\n    at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:20)\n    at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:514)\n    at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:507)\n    at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:486)\n    at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:427)\n    at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:111)\n    at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:82)\n    at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:257)\n    at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:292)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:628)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1\n    at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:101)\n    at io.netty.handler.codec.http.DefaultFullHttpRequest.release(DefaultFullHttpRequest.java:77)\n    at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:59)\n    at io.netty.handler.codec.MessageToMessageEncoder.write(MessageToMessageEncoder.java:90)\n    ... 28 more\n```\n\nIt seems to happen when retry logic kicks in.\n", "labels": ["Defect"]}, {"created": "2016-08-22 06:40:31", "commits": {"9566dfb6f7d218ce38e1e99e60807f8f0ead98a5": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.handler.AsyncHttpClientHandler.channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)", "org.asynchttpclient.netty.handler.HttpHandler.handleRead(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Object)"], "closed": "2016-08-22 07:00:57", "filteredCommits": ["9566dfb6f7d218ce38e1e99e60807f8f0ead98a5"], "commitsDetails": [{"nameRev": "9566dfb6f7d218ce38e1e99e60807f8f0ead98a5 tags/async-http-client-project-2.0.13~2", "commitMessage": "Missing Future touch future in ReactiveStreams support, close #1233\n", "commitParents": ["df522adcbce83b8ea0c6e17ab3f9911d6f0a9398"], "spoonStatsSkippedReason": "", "commitHash": "9566dfb6f7d218ce38e1e99e60807f8f0ead98a5", "authoredDateTime": "2016-08-22 09:00:50", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 0, "deletions": 2, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/HttpHandler.java"}, {"insertions": 2, "deletions": 1, "lines": 3, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/AsyncHttpClientHandler.java"}], "commitDateTime": "2016-08-22 09:00:50", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.AsyncHttpClientHandler.channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)"}], "spoonFilePath": "AsyncHttpClientHandler.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.handleRead(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Object)"}], "spoonFilePath": "HttpHandler.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1233", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 2, "deletions": 3, "lines": 5, "gitFilesChange": 2}, "title": "Erroneous read timeouts when using StreamedAsyncHandler", "statsSkippedReason": "", "user": "twz123", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/handler"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 3, "MOV": 0, "INS": 2, "DEL": 1, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "When using the Reactive Streams API to consume long running chunked HTTP responses, read timeouts occur on active connections that are actually receiving data constantly from the server. The only way to use Reactive Streams with AHC in this manner is to disable read timeouts.\n\nIt seems that `NettyResponseFuture.touch()` isn't called when passing `HttpResponseBodyPart` instances to the `StreamedResponsePublisher` in `AsyncHttpClientHandler`.\n\nIs that intended behavior, or something that has just been overlooked?\n\nIn the latter case, what would be the right place to `touch` the future then? Somewhere below [here](https://github.com/AsyncHttpClient/async-http-client/blob/df522adcbce83b8ea0c6e17ab3f9911d6f0a9398/client/src/main/java/org/asynchttpclient/netty/handler/AsyncHttpClientHandler.java#L88) maybe?\n", "labels": ["Defect"]}, {"created": "2016-08-01 05:37:36", "commits": {"7c8ecfe6e38507f6875375bcacb108398a099f17": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["io.netty.resolver.dns.DnsNameResolverContext", "io.netty.resolver.dns.DnsNameResolverContext.resolve(io.netty.util.concurrent.Promise).2.operationComplete(io.netty.util.concurrent.Future)", "io.netty.resolver.dns.DnsNameResolverContext.finishResolve(io.netty.util.concurrent.Promise)"], "closed": "2016-08-01 05:38:09", "filteredCommits": ["7c8ecfe6e38507f6875375bcacb108398a099f17"], "commitsDetails": [{"nameRev": "7c8ecfe6e38507f6875375bcacb108398a099f17 tags/async-http-client-project-2.1.0-alpha1~2", "commitMessage": "Backport UnknownHostException mentions hostname with search domain added, close #1223\n", "commitParents": ["39d5f5a47f58a5e7420619e21938085494b0faa7"], "spoonStatsSkippedReason": "", "commitHash": "7c8ecfe6e38507f6875375bcacb108398a099f17", "authoredDateTime": "2016-07-31 22:38:00", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 9, "deletions": 2, "lines": 11, "filePath": "netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolverContext.java"}, {"insertions": 23, "deletions": 0, "lines": 23, "filePath": "netty-bp/resolver-dns/src/test/java/io/netty/resolver/dns/SearchDomainTest.java"}], "commitDateTime": "2016-07-31 22:38:00", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverContext"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverContext.resolve(io.netty.util.concurrent.Promise).2.operationComplete(io.netty.util.concurrent.Future)"}, {"UPD": 0, "TOT": 6, "MOV": 3, "INS": 2, "DEL": 1, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverContext.finishResolve(io.netty.util.concurrent.Promise)"}], "spoonFilePath": "DnsNameResolverContext.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.SearchDomainTest.testExceptionMsgNoSearchDomain()"}], "spoonFilePath": "SearchDomainTest.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1223", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 9, "deletions": 2, "lines": 11, "gitFilesChange": 1}, "title": "Backport UnknownHostException mentions hostname with search domain added", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 3, "TOT": 8, "MOV": 3, "INS": 4, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "See https://github.com/netty/netty/commit/ba80fbbe05489227d64dcbd4f5e91bef68072c37\n", "labels": ["Defect", "Netty"]}, {"created": "2016-07-24 11:00:48", "user": "marenzo", "body": "I'm currently upgrading our usage of AHC to version 2 (`2.0.10` be specifically), and sometimes, randomly one of my tests fails with the following exception:\n\n```\n[nioEventLoopGroup-2-9] 12:12:09,941  WARN ChannelOutboundBuffer:146 - Failed to mark a promise as success because it has failed already: DefaultChannelPromise@70dda153(failure: io.netty.handler.codec.EncoderException: io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1), unnotified cause io.netty.handler.codec.EncoderException: io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1\n    at io.netty.handler.codec.MessageToMessageEncoder.write(MessageToMessageEncoder.java:106)\n    at io.netty.channel.CombinedChannelDuplexHandler.write(CombinedChannelDuplexHandler.java:345)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:742)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:734)\n    at io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:819)\n    at io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:727)\n    at io.netty.handler.stream.ChunkedWriteHandler.doFlush(ChunkedWriteHandler.java:306)\n    at io.netty.handler.stream.ChunkedWriteHandler.flush(ChunkedWriteHandler.java:139)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:780)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:806)\n    at io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:817)\n    at io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:798)\n    at io.netty.channel.DefaultChannelPipeline.writeAndFlush(DefaultChannelPipeline.java:1012)\n    at io.netty.channel.AbstractChannel.writeAndFlush(AbstractChannel.java:261)\n    at org.asynchttpclient.netty.request.NettyRequestSender.writeRequest(NettyRequestSender.java:354)\n    at org.asynchttpclient.netty.channel.NettyConnectListener.writeRequest(NettyConnectListener.java:93)\n    at org.asynchttpclient.netty.channel.NettyConnectListener.onSuccess(NettyConnectListener.java:136)\n    at org.asynchttpclient.netty.request.NettyChannelConnector$1.onSuccess(NettyChannelConnector.java:92)\n    at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:26)\n    at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:20)\n    at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:514)\n    at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:507)\n    at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:486)\n    at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:427)\n    at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:111)\n    at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:82)\n    at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:251)\n    at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:286)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:589)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:513)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:427)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:399)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1\n    at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:101)\n    at io.netty.handler.codec.http.DefaultFullHttpRequest.release(DefaultFullHttpRequest.java:77)\n    at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:59)\n    at io.netty.handler.codec.MessageToMessageEncoder.write(MessageToMessageEncoder.java:90)\n    ... 34 more\n```\n\nAll the test does is setting up new local server, sending request and validating the response, nothing special, nothing concurrent.\n\nSome note that for some reason it mostly happens on same method test, but with the previous client never had anything similar to that.\n\nAlso to note, I'm constructing AHC with a static event loop group to not create new stack each time a client being constructed, and sharing same timer for all instances, but I don't think it can cause such thing.\n\nAnd last thing, upgrading to `2.0.11` (which also using latest Netty version) seems to be fine for now - but as said, happens randomly, and I'm not sure it solved the issue.\n\nIf I'm missing on any information please update, and I'm also reading the code now to see what can cause it. \n", "closed": "2016-10-17 21:51:09", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1218", "ttf": 85.00027777777778, "commits": {}, "labels": ["Defect"], "title": "Failure updating channel promise"}, {"created": "2016-07-20 08:54:01", "commits": {"0bf50dfa4c1f59a710b38b02244c9fb199b0b001": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "d3a031d8562bb4ad1f12d9f03ed981cb765b579b": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.oauth.OAuthSignatureCalculator.calculateSignature(java.lang.String,org.asynchttpclient.uri.Uri,long,java.lang.String,java.util.List,java.util.List)", "org.asynchttpclient.oauth.OAuthSignatureCalculator.signatureBaseString(org.asynchttpclient.Request,long,java.lang.String)", "org.asynchttpclient.oauth.OAuthSignatureCalculator.percentEncodeAlreadyFormUrlEncoded(java.lang.String)", "org.asynchttpclient.oauth.OAuthSignatureCalculator", "org.asynchttpclient.oauth.OAuthSignatureCalculator.baseUrl(org.asynchttpclient.uri.Uri)", "org.asynchttpclient.oauth.OAuthSignatureCalculator.calculateAndAddSignature(org.asynchttpclient.Request,org.asynchttpclient.RequestBuilderBase)", "org.asynchttpclient.oauth.OAuthSignatureCalculator.encodedParams(long,java.lang.String,java.util.List,java.util.List)", "org.asynchttpclient.oauth.OAuthSignatureCalculator.signatureBaseString(java.lang.String,org.asynchttpclient.uri.Uri,long,java.lang.String,java.util.List,java.util.List)"], "closed": "2016-07-20 13:32:49", "filteredCommits": ["0bf50dfa4c1f59a710b38b02244c9fb199b0b001"], "commitsDetails": [{"nameRev": "0bf50dfa4c1f59a710b38b02244c9fb199b0b001 tags/async-http-client-project-2.0.11~3", "commitMessage": "Fox OAuth 1.0 star encoding, close #1216\n", "commitParents": ["df829dc0c28a7150013c9f398403365d234fe864"], "spoonStatsSkippedReason": "", "commitHash": "0bf50dfa4c1f59a710b38b02244c9fb199b0b001", "authoredDateTime": "2016-07-20 15:32:43", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 69, "deletions": 84, "lines": 153, "filePath": "client/src/test/java/org/asynchttpclient/oauth/OAuthSignatureCalculatorTest.java"}, {"insertions": 79, "deletions": 88, "lines": 167, "filePath": "client/src/main/java/org/asynchttpclient/oauth/OAuthSignatureCalculator.java"}], "commitDateTime": "2016-07-20 21:53:22", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 18, "MOV": 3, "INS": 5, "DEL": 9, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculatorTest.testPostCalculateSignature()"}, {"UPD": 1, "TOT": 18, "MOV": 2, "INS": 5, "DEL": 10, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculatorTest.testGetWithRequestBuilder()"}, {"UPD": 2, "TOT": 30, "MOV": 22, "INS": 2, "DEL": 4, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculatorTest.testGetWithRequestBuilderAndQuery()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculatorTest.testWithStarQueryParameterValue()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculatorTest.testSignatureBaseStringWithRawUri()"}, {"UPD": 2, "TOT": 14, "MOV": 2, "INS": 1, "DEL": 9, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculatorTest.testGetCalculateSignature()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculatorTest.testSignatureBaseStringWithProperlyEncodedUri()"}, {"UPD": 0, "TOT": 5, "MOV": 1, "INS": 0, "DEL": 4, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculatorTest.testSignatureBaseStringWithEncodableOAuthToken(org.asynchttpclient.Request)"}, {"UPD": 5, "TOT": 19, "MOV": 7, "INS": 1, "DEL": 6, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculatorTest.testWithNullRequestToken()"}, {"UPD": 0, "TOT": 5, "MOV": 1, "INS": 0, "DEL": 4, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculatorTest.testSignatureBaseString(org.asynchttpclient.Request)"}], "spoonFilePath": "OAuthSignatureCalculatorTest.java"}, {"spoonMethods": [{"UPD": 3, "TOT": 10, "MOV": 0, "INS": 0, "DEL": 7, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculator.calculateSignature(java.lang.String,org.asynchttpclient.uri.Uri,long,java.lang.String,java.util.List,java.util.List)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculator.signatureBaseString(org.asynchttpclient.Request,long,java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculator.percentEncodeAlreadyFormUrlEncoded(java.lang.String)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculator"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculator.baseUrl(org.asynchttpclient.uri.Uri)"}, {"UPD": 0, "TOT": 4, "MOV": 3, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculator.calculateAndAddSignature(org.asynchttpclient.Request,org.asynchttpclient.RequestBuilderBase)"}, {"UPD": 0, "TOT": 4, "MOV": 2, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculator.encodedParams(long,java.lang.String,java.util.List,java.util.List)"}, {"UPD": 4, "TOT": 23, "MOV": 14, "INS": 0, "DEL": 5, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculator.signatureBaseString(java.lang.String,org.asynchttpclient.uri.Uri,long,java.lang.String,java.util.List,java.util.List)"}], "spoonFilePath": "OAuthSignatureCalculator.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "d3a031d8562bb4ad1f12d9f03ed981cb765b579b", "authoredDateTime": "", "commitGHEventType": "closed", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1216", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 79.0, "deletions": 88.0, "lines": 167.0, "gitFilesChange": 1}, "title": "Wrong OAuth 1.0 signature for some special characters in URL", "statsSkippedReason": "", "user": "SvenSchindler", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/oauth"], "spoonStatsSummary": {"UPD": 7.0, "spoonMethodsChanged": 8, "TOT": 47.0, "MOV": 20.0, "INS": 8.0, "DEL": 12.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi there,\n\nwe're currently dealing with the following issue: we're trying to use the AsyncHttpClient to consume an OAuth 1.0 protected API. One of our request parameters may contain an asterisks value. This seems to lead to a wrong signature computation causing a 401 server response.\n\nTo reproduce the problem it is sufficient to generate an OAuth 1.0 signed request having an asterisk for one of its parameter values, e.g.: http://www.example.com/api?testvalue=* (using async-http-client version 2.0.10)\n\nWhat we think what the problem is: behind the scenes, the client applies the OAuthSignatureCalculator class to compute the OAuth signature. The computation encodes form parameters separately and expects that all query parameters have been url encoded successfully. However, RFC 5849 defines to encode all parameters application/x-www-form-urlencoded for the signature generation (3.4.1.3.1.  Parameter Sources). Some characters, such as \"*\" or \"~\", do not need an URL encoding but a form encoding. The OAuthSignatureCalculator simply ignores these special cases.\n\nA possible solution may be to re-encode all query parameters which require a special encoding to be application/x-www-form-urlencoded. For example, insert a special character check at the following code line:\nhttps://github.com/AsyncHttpClient/async-http-client/blob/master/client/src/main/java/org/asynchttpclient/oauth/OAuthSignatureCalculator.java#L149\n\nCheers,\n\nSven\n", "labels": ["Defect"]}, {"created": "2016-07-17 14:04:15", "user": "marenzo", "body": "Calling `Response#getResponseBodyAsByteBuffer` will return a new ByteBuffer but the current position will be the end of the buffer, rather than the start, causing to rewind manually the buffer.\nThe allocated byte buffer should have the position set to zero.\n\nProblematic code is found at `NettyResponse#getResponseBodyAsByteBuffer`.\n\nJust a side note: previous client returned the byte buffer with position zero.\n", "closed": "2016-07-17 19:38:42", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1212", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Defect"], "title": "ByteBuffer Response wrong position "}, {"created": "2016-07-14 18:45:39", "commits": {"ec3a86018c58124c3db2b77b7a689b256ab92003": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.request.NettyRequestSender.newNettyRequestAndResponseFuture(org.asynchttpclient.Request,org.asynchttpclient.AsyncHandler,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.proxy.ProxyServer,boolean)"], "closed": "2016-07-14 18:45:59", "filteredCommits": ["ec3a86018c58124c3db2b77b7a689b256ab92003"], "commitsDetails": [{"nameRev": "ec3a86018c58124c3db2b77b7a689b256ab92003 tags/async-http-client-project-2.0.11~7", "commitMessage": "Request realm should have precedence over config one, close #1211\n", "commitParents": ["3b05d39b8a27f0594d67ddd962bc5ac3c3a5fe42"], "spoonStatsSkippedReason": "", "commitHash": "ec3a86018c58124c3db2b77b7a689b256ab92003", "authoredDateTime": "2016-07-14 20:45:50", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 2, "lines": 5, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java"}], "commitDateTime": "2016-07-14 20:45:50", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.newNettyRequestAndResponseFuture(org.asynchttpclient.Request,org.asynchttpclient.AsyncHandler,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.proxy.ProxyServer,boolean)"}], "spoonFilePath": "NettyRequestSender.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1211", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 3, "deletions": 2, "lines": 5, "gitFilesChange": 1}, "title": "Request realm should have precedence over config one", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2016-07-12 20:48:22", "user": "afelisatti", "body": "After updating Grizzly to the latest version, we found that the handling of the server response sometimes fails when sending a \"Connection: keep-alive\" header in the request and receiving a \"Connection: close\" in the response over HTTPS. \nI've added a test that reproduces the issue for the Grizzly provider in #1208 with Grizzly version 2.3.25, but the issue starts at version 2.3.22. I suspect it might have something to do with the fix for https://java.net/jira/browse/GRIZZLY-1780 which was introduced on that version.\nTo reproduce, run the test a couple of times. Upon failure the following error is seen:\n\n> 2016-07-12 17:34:46,757 [AsyncHttpClient-Callback] DEBUG com.ning.http.client.AsyncCompletionHandlerBase - Locally closed\n> java.io.IOException: Locally closed\n> java.util.concurrent.ExecutionException: java.io.IOException: Locally closed\n>     at org.glassfish.grizzly.impl.SafeFutureImpl$Sync.innerGet(SafeFutureImpl.java:349)\n>     at org.glassfish.grizzly.impl.SafeFutureImpl.get(SafeFutureImpl.java:255)\n>     at com.ning.http.client.providers.grizzly.GrizzlyResponseFuture.get(GrizzlyResponseFuture.java:127)\n>     at com.ning.http.client.async.ConnectionCloseTest.handlesCloseResponse(ConnectionCloseTest.java:105)\n>     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n>     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n>     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n>     at java.lang.reflect.Method.invoke(Method.java:606)\n>     at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)\n>     at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)\n>     at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)\n>     at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)\n>     at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)\n>     at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)\n>     at org.testng.TestRunner.privateRun(TestRunner.java:767)\n>     at org.testng.TestRunner.run(TestRunner.java:617)\n>     at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)\n>     at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)\n>     at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)\n>     at org.testng.SuiteRunner.run(SuiteRunner.java:254)\n>     at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n>     at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\n>     at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)\n>     at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)\n>     at org.testng.TestNG.run(TestNG.java:1057)\n>     at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)\n>     at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)\n>     at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)\n>     at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:125)\n>     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n>     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n>     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n>     at java.lang.reflect.Method.invoke(Method.java:606)\n>     at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)\n> Caused by: java.io.IOException: Locally closed\n> 2016-07-12 17:34:46,761 [AsyncHttpClient-Callback] DEBUG com.ning.http.client.providers.grizzly.AhcEventFilter - RESPONSE: HttpResponsePacket (\n>   status=200\n>   reason=OK\n>   protocol=HTTP/1.1\n>   content-length=-1\n>   committed=false\n>   headers=[\n>       connection=close\n>       server=Jetty(8.1.1.v20120215)]\n> )\n", "closed": "2016-07-27 14:57:20", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1209", "ttf": 14.000277777777777, "commits": {}, "labels": ["Defect", "Grizzly"], "title": "Grizzly: Connection closing causes Future get() to fail"}, {"created": "2016-07-08 06:16:37", "user": "slandelle", "body": "https://groups.google.com/forum/#!topic/gatling/vB3pzHYY8-s\n", "closed": "2017-04-27 08:57:39", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1204", "ttf": 293.0002777777778, "commits": {}, "labels": ["Defect"], "title": "SslHandler.SSLENGINE_CLOSED should trigger retry"}, {"created": "2016-07-04 10:49:10", "commits": {"289773edfbd8d45cbd4d18a887e7d955746ea7d9": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "2c74da44b935a837183d2584b502febf5d415afc": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.channel.DefaultChannelPool.IdleChannelDetector.run(io.netty.util.Timeout)", "org.asynchttpclient.netty.timeout.TimeoutsHolder.startReadTimeout(org.asynchttpclient.netty.timeout.ReadTimeoutTimerTask)", "org.asynchttpclient.netty.timeout.RequestTimeoutTimerTask.run(io.netty.util.Timeout)"], "closed": "2016-07-04 13:31:22", "filteredCommits": ["2c74da44b935a837183d2584b502febf5d415afc"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "289773edfbd8d45cbd4d18a887e7d955746ea7d9", "authoredDateTime": "", "commitGHEventType": "closed", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "2c74da44b935a837183d2584b502febf5d415afc tags/async-http-client-project-2.0.10~1", "commitMessage": "Fix read timeout scheduling, close #1203\n", "commitParents": ["12584f13acc5a844e195bd1aa96b1b6105518f89"], "spoonStatsSkippedReason": "", "commitHash": "2c74da44b935a837183d2584b502febf5d415afc", "authoredDateTime": "2016-07-04 15:31:14", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 25, "deletions": 6, "lines": 31, "filePath": "client/src/test/java/org/asynchttpclient/PerRequestTimeoutTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/timeout/RequestTimeoutTimerTask.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/DefaultChannelPool.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/timeout/TimeoutsHolder.java"}], "commitDateTime": "2016-07-04 15:52:57", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.PerRequestTimeoutTest.testReadTimeout()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.PerRequestTimeoutTest.testRequestTimeout()"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.PerRequestTimeoutTest.testGlobalDefaultPerRequestInfiniteTimeout()"}, {"UPD": 0, "TOT": 16, "MOV": 8, "INS": 8, "DEL": 0, "spoonMethodName": "org.asynchttpclient.PerRequestTimeoutTest.testGlobalRequestTimeout()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.PerRequestTimeoutTest.checkTimeoutMessage(java.lang.String,boolean)"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.PerRequestTimeoutTest.checkTimeoutMessage(java.lang.String)"}], "spoonFilePath": "PerRequestTimeoutTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.timeout.TimeoutsHolder.startReadTimeout(org.asynchttpclient.netty.timeout.ReadTimeoutTimerTask)"}], "spoonFilePath": "TimeoutsHolder.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.DefaultChannelPool.IdleChannelDetector.run(io.netty.util.Timeout)"}], "spoonFilePath": "DefaultChannelPool.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.timeout.RequestTimeoutTimerTask.run(io.netty.util.Timeout)"}], "spoonFilePath": "RequestTimeoutTimerTask.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1203", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 3.0, "deletions": 3.0, "lines": 6.0, "gitFilesChange": 3}, "title": "setReadTimeout is not working", "statsSkippedReason": "", "user": "ayanamist", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/channel", "client/src/main/java/org/asynchttpclient/netty/timeout"], "spoonStatsSummary": {"UPD": 3.0, "spoonMethodsChanged": 3, "TOT": 3.0, "MOV": 0.0, "INS": 0.0, "DEL": 0.0, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "``` java\nimport org.asynchttpclient.AsyncCompletionHandler;\nimport org.asynchttpclient.DefaultAsyncHttpClient;\nimport org.asynchttpclient.DefaultAsyncHttpClientConfig;\nimport org.asynchttpclient.Response;\n\npublic class AsyncV2Test {\n\n    static class MyCallback extends AsyncCompletionHandler<Boolean> {\n\n        @Override\n        public Boolean onCompleted(Response response) throws Exception {\n            System.out.println(response.getResponseBody());\n            return true;\n        }\n\n        public void onThrowable(Throwable t) {\n            t.printStackTrace(System.err);\n        }\n    }\n\n    public static void main(String[] args) throws Exception{\n\n        DefaultAsyncHttpClientConfig cfg = new DefaultAsyncHttpClientConfig.Builder()\n                .setReadTimeout(100)\n                .build();\n        org.asynchttpclient.AsyncHttpClient cli = new DefaultAsyncHttpClient(cfg);\n        cli.prepareGet(\"http://localhost:8080/sleep?time=200\").execute(new MyCallback()).get();\n        cli.close();\n    }\n}\n```\n\nThe server will sleep 200 ms then respond to the request.\nIn the 1.9.X, readTimeout will throw an exception, but now AHC just print out the response which is not expected.\n", "labels": ["Defect"]}, {"created": "2016-07-01 10:45:52", "commits": {"8e9894e5532a0af12cd1bb62a857acfc00494c32": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.ws.NettyWebSocket.close()", "org.asynchttpclient.netty.handler.WebSocketHandler.handleChannelInactive(org.asynchttpclient.netty.NettyResponseFuture)", "org.asynchttpclient.netty.handler.WebSocketHandler.handleFrame(io.netty.channel.Channel,io.netty.handler.codec.http.websocketx.WebSocketFrame,org.asynchttpclient.ws.WebSocketUpgradeHandler,org.asynchttpclient.netty.ws.NettyWebSocket)"], "closed": "2016-07-01 10:46:49", "filteredCommits": ["8e9894e5532a0af12cd1bb62a857acfc00494c32"], "commitsDetails": [{"nameRev": "8e9894e5532a0af12cd1bb62a857acfc00494c32 tags/async-http-client-project-2.0.8~1", "commitMessage": "Status missing from Close WebSocket frame issued by client, close #1199\n", "commitParents": ["5565ad186f2df2c31527452e22ca5dbb6c158bca"], "spoonStatsSkippedReason": "", "commitHash": "8e9894e5532a0af12cd1bb62a857acfc00494c32", "authoredDateTime": "2016-07-01 12:46:42", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 2, "lines": 3, "filePath": "client/src/main/java/org/asynchttpclient/netty/ws/NettyWebSocket.java"}, {"insertions": 3, "deletions": 2, "lines": 5, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/WebSocketHandler.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/test/java/org/asynchttpclient/ws/CloseCodeReasonMessageTest.java"}], "commitDateTime": "2016-07-01 12:46:42", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.WebSocketHandler.handleChannelInactive(org.asynchttpclient.netty.NettyResponseFuture)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.WebSocketHandler.handleFrame(io.netty.channel.Channel,io.netty.handler.codec.http.websocketx.WebSocketFrame,org.asynchttpclient.ws.WebSocketUpgradeHandler,org.asynchttpclient.netty.ws.NettyWebSocket)"}], "spoonFilePath": "WebSocketHandler.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ws.CloseCodeReasonMessageTest.onCloseWithCode()"}], "spoonFilePath": "CloseCodeReasonMessageTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 5, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.ws.NettyWebSocket.close()"}], "spoonFilePath": "NettyWebSocket.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1199", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 4, "deletions": 4, "lines": 8, "gitFilesChange": 2}, "title": "Status missing from Close WebSocket frame issued by client", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/ws", "client/src/main/java/org/asynchttpclient/netty/handler"], "spoonStatsSummary": {"UPD": 3, "spoonMethodsChanged": 3, "TOT": 8, "MOV": 2, "INS": 2, "DEL": 1, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "As server usually ack with an echo, ack status is missing too\n", "labels": ["Defect"]}, {"created": "2016-07-01 10:10:04", "commits": {"26d39cbf7aedd1575629402d9a9854515802994b": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.ws.NettyWebSocket.close()"], "closed": "2016-07-01 10:10:47", "filteredCommits": ["26d39cbf7aedd1575629402d9a9854515802994b"], "commitsDetails": [{"nameRev": "26d39cbf7aedd1575629402d9a9854515802994b tags/async-http-client-project-2.0.8~4", "commitMessage": "Don't notify WebSocketListener with onClose(1000) when user closes the WebSocket, close #1198\n", "commitParents": ["5995bba8f72707db3624c14520e556574cd82a45"], "spoonStatsSkippedReason": "", "commitHash": "26d39cbf7aedd1575629402d9a9854515802994b", "authoredDateTime": "2016-07-01 12:10:33", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 0, "deletions": 2, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/ws/NettyWebSocket.java"}], "commitDateTime": "2016-07-01 12:10:33", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.ws.NettyWebSocket.close()"}], "spoonFilePath": "NettyWebSocket.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1198", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 2, "lines": 2, "gitFilesChange": 1}, "title": "Don't notify WebSocketListener with onClose(1000) when user closes the WebSocket", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/ws"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "As per spec, WebSocket Close frame is supposed to be acked by the remote peer with another Close Frame. The socket is only closed then.\nListener should only be notified once the ask is received and we actually close the socket.\n", "labels": ["Defect"]}, {"created": "2016-06-20 22:01:55", "commits": {"5995bba8f72707db3624c14520e556574cd82a45": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.Realm.Builder.getMessageDigest()", "org.asynchttpclient.Realm.Builder.build()"], "closed": "2016-06-20 22:04:18", "filteredCommits": ["5995bba8f72707db3624c14520e556574cd82a45"], "commitsDetails": [{"nameRev": "5995bba8f72707db3624c14520e556574cd82a45 tags/async-http-client-project-2.0.8~5", "commitMessage": "Realm.Builder doesn't properly reset inner cached MessageDigests, close #1196\n", "commitParents": ["6eab5807fc4812c3e1849ba800311e18d08ef28e"], "spoonStatsSkippedReason": "", "commitHash": "5995bba8f72707db3624c14520e556574cd82a45", "authoredDateTime": "2016-06-21 00:04:12", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 7, "deletions": 1, "lines": 8, "filePath": "client/src/main/java/org/asynchttpclient/Realm.java"}], "commitDateTime": "2016-06-21 00:04:12", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.Realm.Builder.build()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.Realm.Builder.getMessageDigest()"}], "spoonFilePath": "Realm.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1196", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 7, "deletions": 1, "lines": 8, "gitFilesChange": 1}, "title": "Realm.Builder doesn't properly reset inner cached MessageDigests", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 3, "MOV": 1, "INS": 2, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2016-06-20 10:07:16", "commits": {"a07ac57fc5db7c9d216e3751cc70726ecf2ea053": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithOpenChannel(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,io.netty.channel.Channel)"], "closed": "2016-06-20 10:19:58", "filteredCommits": ["a07ac57fc5db7c9d216e3751cc70726ecf2ea053"], "commitsDetails": [{"nameRev": "a07ac57fc5db7c9d216e3751cc70726ecf2ea053 tags/async-http-client-project-2.0.7~2", "commitMessage": "Race condition in NettyRequestSender#sendRequestWithOpenChannel, close #1195\n", "commitParents": ["b1eec43a6da261a61321bb6afa40191e2d7a232f"], "spoonStatsSkippedReason": "", "commitHash": "a07ac57fc5db7c9d216e3751cc70726ecf2ea053", "authoredDateTime": "2016-06-20 12:19:52", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 4, "deletions": 1, "lines": 5, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java"}], "commitDateTime": "2016-06-20 12:19:52", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithOpenChannel(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,io.netty.channel.Channel)"}], "spoonFilePath": "NettyRequestSender.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1195", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 4, "deletions": 1, "lines": 5, "gitFilesChange": 1}, "title": "Race condition in NettyRequestSender#sendRequestWithOpenChannel", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Current code is:\n\n``` java\nif (Channels.isChannelValid(channel)) {\n  Channels.setAttribute(channel, future);\n  writeRequest(future, channel);\n} else {\n  handleUnexpectedClosedChannel(channel, future);\n}\n```\n\n`AsyncHttpClientHandler#channelInactive` can be called just after `isChannelValid` but BEFORE `Future` is set, so it won't call `NettyRequestSender#handleUnexpectedClosedChannel`.\n\nAs `writeRequest` assumes `AsyncHttpClientHandler#channelInactive` has taken care of such event, we fail to notify the handler/future.\n", "labels": ["Defect"]}, {"created": "2016-06-20 07:37:39", "commits": {"91897d6326dc380b50171480e4a43ab6e46a9301": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "9612900df6515dbad3ba9167a1d8af1073db7bf3": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["io.netty.resolver.dns.DnsNameResolver.resolveHostsFileEntry(java.lang.String)", "io.netty.resolver.dns.DnsNameResolver"], "closed": "2016-06-20 07:42:33", "filteredCommits": ["91897d6326dc380b50171480e4a43ab6e46a9301"], "commitsDetails": [{"nameRev": "91897d6326dc380b50171480e4a43ab6e46a9301 tags/async-http-client-project-2.0.7~9", "commitMessage": "DnsNameResolver does not resolve localhost on Windows, close #1194\n", "commitParents": ["5bb166c705c6462d10b466aee462cf66eb065947"], "spoonStatsSkippedReason": "", "commitHash": "91897d6326dc380b50171480e4a43ab6e46a9301", "authoredDateTime": "2016-06-20 09:42:27", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 17, "deletions": 1, "lines": 18, "filePath": "netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java"}], "commitDateTime": "2016-06-20 09:45:43", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 3, "INS": 1, "DEL": 1, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolver.resolveHostsFileEntry(java.lang.String)"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 4, "DEL": 0, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolver"}], "spoonFilePath": "DnsNameResolver.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "9612900df6515dbad3ba9167a1d8af1073db7bf3", "authoredDateTime": "", "commitGHEventType": "closed", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1194", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 17.0, "deletions": 1.0, "lines": 18.0, "gitFilesChange": 1}, "title": "DnsNameResolver does not resolve localhost on Windows", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 2, "TOT": 9.0, "MOV": 3.0, "INS": 5.0, "DEL": 1.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "issue: https://github.com/netty/netty/issues/5386\nfix: https://github.com/netty/netty/pull/5410\n", "labels": ["Defect"]}, {"created": "2016-06-20 07:34:27", "commits": {"fd31dfa822b6959fcc1845ea59ea3c5ccde94109": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "5bb166c705c6462d10b466aee462cf66eb065947": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["io.netty.handler.codec.dns.DefaultDnsRecordDecoder.decodeRecord(io.netty.buffer.ByteBuf)", "io.netty.handler.codec.dns.DefaultDnsRecordDecoder.decodeName0(io.netty.buffer.ByteBuf)", "io.netty.resolver.dns.DnsNameResolverContext.finishResolve()", "io.netty.resolver.dns.DnsNameResolverContext.decodeDomainName(io.netty.buffer.ByteBuf)", "io.netty.handler.codec.dns.DefaultDnsRecordDecoder.decodeRecord(java.lang.String,io.netty.handler.codec.dns.DnsRecordType,int,long,io.netty.buffer.ByteBuf,int,int)", "io.netty.handler.codec.dns.DefaultDnsRecordDecoder.decodeName(io.netty.buffer.ByteBuf)", "io.netty.handler.codec.dns.DefaultDnsRecordDecoder.decodeQuestion(io.netty.buffer.ByteBuf)"], "closed": "2016-06-20 07:36:10", "filteredCommits": ["5bb166c705c6462d10b466aee462cf66eb065947"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "fd31dfa822b6959fcc1845ea59ea3c5ccde94109", "authoredDateTime": "", "commitGHEventType": "closed", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "5bb166c705c6462d10b466aee462cf66eb065947 tags/async-http-client-project-2.0.7~10", "commitMessage": "DnsNameResolver does not resolve property A+CNAME answer, close #1193\n", "commitParents": ["b552bc46514941ac86fd0893b77ef120de5996b8"], "spoonStatsSkippedReason": "", "commitHash": "5bb166c705c6462d10b466aee462cf66eb065947", "authoredDateTime": "2016-06-20 09:36:02", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 21, "deletions": 61, "lines": 82, "filePath": "netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolverContext.java"}, {"insertions": 14, "deletions": 2, "lines": 16, "filePath": "netty-bp/codec-dns/src/main/java/io/netty/handler/codec/dns/DefaultDnsRecordDecoder.java"}], "commitDateTime": "2016-06-20 09:45:43", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 6, "TOT": 25, "MOV": 9, "INS": 3, "DEL": 7, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverContext.finishResolve()"}, {"UPD": 4, "TOT": 16, "MOV": 2, "INS": 2, "DEL": 8, "spoonMethodName": "io.netty.resolver.dns.DnsNameResolverContext.decodeDomainName(io.netty.buffer.ByteBuf)"}], "spoonFilePath": "DnsNameResolverContext.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "io.netty.handler.codec.dns.DefaultDnsRecordDecoder.decodeRecord(io.netty.buffer.ByteBuf)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.handler.codec.dns.DefaultDnsRecordDecoder.decodeName0(io.netty.buffer.ByteBuf)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "io.netty.handler.codec.dns.DefaultDnsRecordDecoder.decodeRecord(java.lang.String,io.netty.handler.codec.dns.DnsRecordType,int,long,io.netty.buffer.ByteBuf,int,int)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.handler.codec.dns.DefaultDnsRecordDecoder.decodeName(io.netty.buffer.ByteBuf)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "io.netty.handler.codec.dns.DefaultDnsRecordDecoder.decodeQuestion(io.netty.buffer.ByteBuf)"}], "spoonFilePath": "DefaultDnsRecordDecoder.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1193", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 35.0, "deletions": 63.0, "lines": 98.0, "gitFilesChange": 2}, "title": "DnsNameResolver does not resolve property A+CNAME answer", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["netty-bp/codec-dns/src/main/java/io/netty/handler/codec/dns", "netty-bp/resolver-dns/src/main/java/io/netty/resolver/dns"], "spoonStatsSummary": {"UPD": 11.0, "spoonMethodsChanged": 7, "TOT": 47.0, "MOV": 12.0, "INS": 7.0, "DEL": 17.0, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "issue: https://github.com/netty/netty/issues/5391\nfix: https://github.com/netty/netty/pull/5413\n", "labels": ["Defect"]}, {"created": "2016-06-13 13:44:32", "commits": {"b6033d76b02aef484d6e76d32afb0275bdb47fa7": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.request.NettyChannelConnector.connect(io.netty.bootstrap.Bootstrap,org.asynchttpclient.netty.channel.NettyConnectListener)", "org.asynchttpclient.netty.request.NettyChannelConnector"], "closed": "2016-06-13 13:44:52", "filteredCommits": ["b6033d76b02aef484d6e76d32afb0275bdb47fa7"], "commitsDetails": [{"nameRev": "b6033d76b02aef484d6e76d32afb0275bdb47fa7 tags/async-http-client-project-2.0.6~5", "commitMessage": "Handle Boostrap crash, close #1190\n", "commitParents": ["c6c1a40e1a7f0a1836b443063ffa2a43fcd46af0"], "spoonStatsSkippedReason": "", "commitHash": "b6033d76b02aef484d6e76d32afb0275bdb47fa7", "authoredDateTime": "2016-06-13 15:44:47", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 7, "deletions": 3, "lines": 10, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyChannelConnector.java"}], "commitDateTime": "2016-06-13 15:44:47", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.request.NettyChannelConnector.connect(io.netty.bootstrap.Bootstrap,org.asynchttpclient.netty.channel.NettyConnectListener)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyChannelConnector"}], "spoonFilePath": "NettyChannelConnector.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1190", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 7, "deletions": 3, "lines": 10, "gitFilesChange": 1}, "title": "Handle Boostrap crash ", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 2, "TOT": 4, "MOV": 0, "INS": 2, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "See https://github.com/netty/netty/issues/5387\n\nLet's have a workaround that we'll remove once Netty 4.0.38 is out.\n", "labels": ["Defect"]}, {"created": "2016-06-09 21:51:46", "commits": {"f2773639f2de7e7600178931a493840aace6fc21": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "e532268f2a20964c38e736ef6f5dee92f9520768": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "9adfab4ab2dad299365d886b7f84f8314f294bc6": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.timeout.TimeoutsHolder.newTimeout(io.netty.util.TimerTask,long)"], "closed": "2016-06-09 21:52:08", "filteredCommits": ["e532268f2a20964c38e736ef6f5dee92f9520768"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "f2773639f2de7e7600178931a493840aace6fc21", "authoredDateTime": "", "commitGHEventType": "closed", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "e532268f2a20964c38e736ef6f5dee92f9520768 tags/async-http-client-project-2.0.6~8", "commitMessage": "Don't schedule timeouts when client is being shutdown, close #1186\n", "commitParents": ["5ce7e458ce21297d2a67eac008e055cec1eca320"], "spoonStatsSkippedReason": "", "commitHash": "e532268f2a20964c38e736ef6f5dee92f9520768", "authoredDateTime": "2016-06-09 23:52:02", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/netty/timeout/TimeoutsHolder.java"}], "commitDateTime": "2016-06-10 00:34:53", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.timeout.TimeoutsHolder.newTimeout(io.netty.util.TimerTask,long)"}], "spoonFilePath": "TimeoutsHolder.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "9adfab4ab2dad299365d886b7f84f8314f294bc6", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1186", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 2.0, "deletions": 2.0, "lines": 4.0, "gitFilesChange": 1}, "title": "Don't schedule timeouts when client is being shutdown", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/timeout"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 1, "TOT": 2.0, "MOV": 1.0, "INS": 1.0, "DEL": 0.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 2, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2016-06-09 21:50:38", "commits": {"5ce7e458ce21297d2a67eac008e055cec1eca320": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "952301a73a18496dcdb4513054d953b616beaeb4": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "ac1eeb8a14202a2db751917d57f293c6a7e7046f": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.ntlm.NtlmEngine.convertDomain(java.lang.String)", "org.asynchttpclient.ntlm.NtlmEngine.convertHost(java.lang.String)"], "closed": "2016-06-09 21:51:14", "filteredCommits": ["5ce7e458ce21297d2a67eac008e055cec1eca320"], "commitsDetails": [{"nameRev": "5ce7e458ce21297d2a67eac008e055cec1eca320 tags/async-http-client-project-2.0.6~9", "commitMessage": "NTLM domain and workstation must be uppercase, close #1185\n", "commitParents": ["943e0a807039223f717ca5498d139e6ed2379b39"], "spoonStatsSkippedReason": "", "commitHash": "5ce7e458ce21297d2a67eac008e055cec1eca320", "authoredDateTime": "2016-06-09 23:51:06", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/ntlm/NtlmEngine.java"}, {"insertions": 2, "deletions": 1, "lines": 3, "filePath": "client/src/test/java/org/asynchttpclient/proxy/NTLMProxyTest.java"}, {"insertions": 7, "deletions": 7, "lines": 14, "filePath": "client/src/test/java/org/asynchttpclient/ntlm/NtlmTest.java"}], "commitDateTime": "2016-06-10 00:34:53", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.proxy.NTLMProxyTest.NTLMProxyHandler.handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"}], "spoonFilePath": "NTLMProxyTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ntlm.NtlmEngine.convertDomain(java.lang.String)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ntlm.NtlmEngine.convertHost(java.lang.String)"}], "spoonFilePath": "NtlmEngine.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ntlm.NtlmTest.testGenerateType3MsgThworsExceptionWhenType2IndicatorNotPresent()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ntlm.NtlmTest.NTLMHandler.handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ntlm.NtlmTest.testGenerateType3MsgThrowsExceptionWhenUnicodeSupportNotIndicated()"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ntlm.NtlmTest.testGenerateType3Msg()"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ntlm.NtlmTest.testGenerateType3MsgThrowsExceptionWhenChallengeTooShort()"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ntlm.NtlmTest.testGenerateType3MsgThrowsExceptionWhenChallengeDoesNotFollowCorrectFormat()"}], "spoonFilePath": "NtlmTest.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "952301a73a18496dcdb4513054d953b616beaeb4", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "ac1eeb8a14202a2db751917d57f293c6a7e7046f", "authoredDateTime": "", "commitGHEventType": "closed", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1185", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 2.0, "deletions": 2.0, "lines": 4.0, "gitFilesChange": 1}, "title": "NTLM domain and workstation must be uppercase", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/ntlm"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 2, "TOT": 4.0, "MOV": 2.0, "INS": 2.0, "DEL": 0.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 2, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "From https://www.innovation.ch/personal/ronald/ntlm.html:\n\n> The host and domain strings are ASCII (or possibly ISO-8859-1), are uppercased, and are not nul-terminated.\n", "labels": ["Defect"]}, {"created": "2016-06-07 15:55:18", "commits": {"73204394eabe0acbef264a2cf3e01b08db8bc4cd": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.request.body.multipart.part.FileLikeMultipartPart.visitDispositionHeader(org.asynchttpclient.request.body.multipart.part.PartVisitor)"], "closed": "2016-06-20 07:54:08", "filteredCommits": ["73204394eabe0acbef264a2cf3e01b08db8bc4cd"], "commitsDetails": [{"nameRev": "73204394eabe0acbef264a2cf3e01b08db8bc4cd tags/async-http-client-project-2.0.7~8", "commitMessage": "Use UTF-8 instead of US_ASCII as default filename charset, close #1181\n", "commitParents": ["91897d6326dc380b50171480e4a43ab6e46a9301"], "spoonStatsSkippedReason": "", "commitHash": "73204394eabe0acbef264a2cf3e01b08db8bc4cd", "authoredDateTime": "2016-06-20 09:53:57", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/FileLikeMultipartPart.java"}], "commitDateTime": "2016-06-20 09:53:57", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.FileLikeMultipartPart.visitDispositionHeader(org.asynchttpclient.request.body.multipart.part.PartVisitor)"}], "spoonFilePath": "FileLikeMultipartPart.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1181", "ttf": 12.000277777777777, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "title": "File upload filename encoding isn't per spec", "statsSkippedReason": "", "user": "marshallpierce", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/request/body/multipart/part"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "### Relevant specs\n\nThe most applicable RFCs are https://tools.ietf.org/html/rfc2183 (the original `filename` param in HTTP 1.1) and https://tools.ietf.org/html/rfc5987 (charset and language encoding in HTTP header field params). Also note this handy page full of samples: http://greenbytes.de/tech/tc2231/, and https://tools.ietf.org/html/rfc6266 which governs the `Content-Disposition` response header. (NB: I don't have a pressing client need for this; I found this problem implementing the server side of upload handling and found that basically nobody does this right.)\n\nThe gist of what they say is that request headers for file upload parts should look like this:\n\nFilename expressible with ISO-8859-1:\n\n```\nContent-Disposition: form-data; name=\"file-input\"; filename=\"iso 8859-1 bytes here\"\n```\n\nFilename not expressible with ISO-8859-1:\n\n```\nContent-Disposition: form-data; name=\"file-input\"; filename=\"unicode-snowman-in-utf8-is-?\"; filename*=UTF-8''unicode-snowman-in-utf8-is-%E2%98%83\n```\n\nThis includes a `filename*` param followed by `UTF-8`, a single `'`, a blank language specifier (though we could put `en_US` here or equivalent), another `'`, and the filename string with all characters not in `!#$&+-.^_`|~` + `[a-zA-Z0-9]` encoded into bytes as per UTF-8 and then percent-encoded. Optionally, we could choose to include the legacy `filename` param with unexpressible code points replaced with `?` or something to try and help out old servers that don't know how to deal with `filename*`, but it's not required by the spec.\n### Current behavior\n\nAHC currently touches this logic in two places, `FileLikePart` and `FileLikeMultipartPart`.\n\nIn `FileLikeMultipartPart`:\n\n```\n        if (part.getFileName() != null) {\n            visitor.withBytes(FILE_NAME_BYTES);\n            visitor.withByte(QUOTE_BYTE);\n            visitor.withBytes(part.getFileName().getBytes(part.getCharset() != null ? part.getCharset() : US_ASCII));\n            visitor.withByte(QUOTE_BYTE);\n        }\n```\n\nWhile this seems like a reasonable thing to do, I think the only spec-compliant behavior here is to use ISO-8859-1 always when filling out the `filename` param.\n\nIn `FileLikePart`:\n\n```\n    public String toString() {\n        return new StringBuilder()//\n                .append(super.toString())//\n                .append(\" filename=\").append(fileName)//\n                .toString();\n    }\n```\n\nI don't see where this code is used. I can see where `FileLikePart#getFileName()` is used in the FLMP code above, but not the `toString()`.\n### Proposed changes\n\nUnfortunately, this particular part of HTTP is inconsistently supported in practice. As can be seen from the, er, \"enthusiastic\" comments in https://github.com/kennethreitz/requests/issues/2117, people are surprised when filenames are encoded currectly. So, any solution is going to need to have robust support for encoding filenames in various ways. At a high level, I think this is a good mix of strategies that should cover most compatibility needs:\n- Always use `filename` with ISO-8859-1, and don't send `filename*` ever (old style HTTP)\n- Current AHC behavior that uses `filename` with the part's encoding, in case someone's depending on that\n- Always use `filename` with ISO-8859-1 (substituting '?' as needed), and use `filename*` with UTF-8 if it can't be represented with just ISO-8859-1\n- Always use `filename*` with UTF-8, and include `filename` if it can be represented in ISO-8859-1.\n\nIt's not clear to me how best to propagate the user's choice of filename encoding strategy. Should `MultipartPart#visitDispositionHeader` accept another parameter for the strategy? And presumably the user would pick this per-client in the client Config, though this is highly server-dependent, so if it's not too clumsy it would be nice to let users have a way of configuring a per-host policy so they don't have to create multiple Clients.\n\nWDYT?\n", "labels": ["Defect"]}, {"created": "2016-06-06 17:19:27", "commits": {"40f89d50d3d335c129a7c0717a6f3b4c15b30649": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.channel.NettyConnectListener.abortChannelPreemption()", "org.asynchttpclient.netty.channel.NettyConnectListener.abortChannelPreemption(io.netty.channel.Channel)", "org.asynchttpclient.netty.request.NettyChannelConnector.connect0(io.netty.bootstrap.Bootstrap,org.asynchttpclient.netty.channel.NettyConnectListener,java.net.InetSocketAddress)", "org.asynchttpclient.netty.request.NettyChannelConnector.connect0(io.netty.bootstrap.Bootstrap,org.asynchttpclient.netty.channel.NettyConnectListener,java.net.InetSocketAddress).1.onSuccess(io.netty.channel.Channel)", "org.asynchttpclient.netty.request.NettyChannelConnector", "org.asynchttpclient.netty.channel.NettyConnectListener.futureIsAlreadyCancelled(io.netty.channel.Channel)", "org.asynchttpclient.netty.channel.NettyConnectListener.onSuccess(io.netty.channel.Channel)", "org.asynchttpclient.netty.channel.NettyConnectListener.writeRequest(io.netty.channel.Channel)", "org.asynchttpclient.netty.channel.NettyConnectListener", "org.asynchttpclient.netty.channel.NettyConnectListener.onSuccess(io.netty.channel.Channel,java.net.InetSocketAddress)", "org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithNewChannel(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,boolean).1.onSuccess(java.util.List)", "org.asynchttpclient.netty.channel.NettyConnectListener.onFailure(io.netty.channel.Channel,java.lang.Throwable)"], "closed": "2016-06-16 12:56:36", "filteredCommits": ["40f89d50d3d335c129a7c0717a6f3b4c15b30649"], "commitsDetails": [{"nameRev": "40f89d50d3d335c129a7c0717a6f3b4c15b30649 tags/async-http-client-project-2.0.6~1", "commitMessage": "Handle future.cancel while resolving name or connect, close #1180\n", "commitParents": ["3a2d062e78ffc8db8c0ac268664885bdc613fc11"], "spoonStatsSkippedReason": "", "commitHash": "40f89d50d3d335c129a7c0717a6f3b4c15b30649", "authoredDateTime": "2016-06-16 14:36:15", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 6, "deletions": 2, "lines": 8, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java"}, {"insertions": 33, "deletions": 15, "lines": 48, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/NettyConnectListener.java"}, {"insertions": 24, "deletions": 31, "lines": 55, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyChannelConnector.java"}], "commitDateTime": "2016-06-16 14:36:15", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 11, "MOV": 8, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithNewChannel(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,boolean).1.onSuccess(java.util.List)"}], "spoonFilePath": "NettyRequestSender.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 5, "MOV": 1, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.request.NettyChannelConnector.connect0(io.netty.bootstrap.Bootstrap,org.asynchttpclient.netty.channel.NettyConnectListener,java.net.InetSocketAddress).1.onSuccess(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 3, "spoonMethodName": "org.asynchttpclient.netty.request.NettyChannelConnector"}, {"UPD": 0, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.request.NettyChannelConnector.connect0(io.netty.bootstrap.Bootstrap,org.asynchttpclient.netty.channel.NettyConnectListener,java.net.InetSocketAddress)"}], "spoonFilePath": "NettyChannelConnector.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.NettyConnectListener.abortChannelPreemption()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.channel.NettyConnectListener.onSuccess(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 8, "MOV": 5, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.channel.NettyConnectListener.writeRequest(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.channel.NettyConnectListener"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.NettyConnectListener.abortChannelPreemption(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.NettyConnectListener.futureIsAlreadyCancelled(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 4, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.NettyConnectListener.onSuccess(io.netty.channel.Channel,java.net.InetSocketAddress)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.channel.NettyConnectListener.onFailure(io.netty.channel.Channel,java.lang.Throwable)"}], "spoonFilePath": "NettyConnectListener.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1180", "ttf": 9.000277777777777, "gitStatsSummary": {"insertions": 63, "deletions": 48, "lines": 111, "gitFilesChange": 3}, "title": "o.a.n.r.NettyRequestSender$1.operationComplete() java.lang.NullPointerException: timeoutsHolder", "statsSkippedReason": "", "user": "Spikhalskiy", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request", "client/src/main/java/org/asynchttpclient/netty/channel"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 12, "TOT": 42, "MOV": 16, "INS": 13, "DEL": 12, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi,\n\nI'm getting the following exception with AsyncHttpClient sporadically\n\n```\n[06 Jun 2016 13:02:35,198][WARN ][DefaultPromise,collectedRequestDisruptor73689328] - An exception was thrown by org.asynchttpclient.netty.request.NettyRequestSender$1.operationComplete()\njava.lang.NullPointerException: timeoutsHolder\n    at org.asynchttpclient.util.Assertions.assertNotNull(Assertions.java:23)\n    at org.asynchttpclient.netty.request.NettyChannelConnector.<init>(NettyChannelConnector.java:54)\n    at org.asynchttpclient.netty.request.NettyRequestSender$1.onSuccess(NettyRequestSender.java:281)\n    at org.asynchttpclient.netty.request.NettyRequestSender$1.onSuccess(NettyRequestSender.java:276)\n    at org.asynchttpclient.netty.SimpleFutureListener.operationComplete(SimpleFutureListener.java:24)\n    at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:683)\n    at io.netty.util.concurrent.DefaultPromise.notifyLateListener(DefaultPromise.java:624)\n    at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:139)\n    at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:33)\n    at org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithNewChannel(NettyRequestSender.java:276)\n    at org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithCertainForceConnect(NettyRequestSender.java:136)\n    at org.asynchttpclient.netty.request.NettyRequestSender.sendRequest(NettyRequestSender.java:107)\n    at org.asynchttpclient.DefaultAsyncHttpClient.execute(DefaultAsyncHttpClient.java:220)\n    at org.asynchttpclient.DefaultAsyncHttpClient.executeRequest(DefaultAsyncHttpClient.java:188)\n    at org.asynchttpclient.BoundRequestBuilder.execute(BoundRequestBuilder.java:35)\n        ...\n```\n\nVersion: 2.0.4\n\nAny ideas?\n", "labels": ["Defect"]}, {"created": "2016-06-06 09:16:56", "user": "slandelle", "body": "```\nRequest DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledHeapByteBuf(freed))\nPOST /foo/bar HTTP/1.1\nContent-Type: text/html\nContent-Length: 11\nHost: localhost:57799\nAccept: */*\nUser-Agent: AHC/2.0\n\nResponse DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)\nHTTP/1.1 200 OK\nDate: Mon, 06 Jun 2016 08:50:04 GMT\nContent-Type: text/html;charset=utf-8\nX-ClientPort: 47200\nX-PathInfo: /foo/bar\nX-User-Agent: AHC/2.0\nX-Host: localhost:57799\nX-Content-Length: 11\nX-Accept: */*\nX-Content-Type: text/html\nTransfer-Encoding: chunked\nServer: Jetty(9.3.9.v20160517)\n\n2016-06-06 08:50:04,125 [AsyncHttpClient-54-1] DEBUG org.asynchttpclient.netty.channel.ChannelManager - Adding key: https://localhost:57799 for channel [id: 0xbec905ab, L:/127.0.0.1:47200 - R:localhost/127.0.0.1:57799]\n2016-06-06 08:50:04,125 [main] DEBUG org.asynchttpclient.netty.request.NettyRequestSender - Using polled Channel [id: 0xbec905ab, L:/127.0.0.1:47200 - R:localhost/127.0.0.1:57799]\n for uri https://localhost:57799/foo/bar\n\n2016-06-06 08:50:04,125 [main] DEBUG org.asynchttpclient.netty.request.NettyRequestSender - Using open Channel [id: 0xbec905ab, L:/127.0.0.1:47200 - R:localhost/127.0.0.1:57799] for POST '/foo/bar'\n2016-06-06 08:50:04,136 [AsyncHttpClient-54-1] DEBUG org.asynchttpclient.netty.handler.HttpHandler - \n\nRequest DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledHeapByteBuf(freed))\nPOST /foo/bar HTTP/1.1\nContent-Type: text/html\nContent-Length: 11\nHost: localhost:57799\nAccept: */*\nUser-Agent: AHC/2.0\n\nResponse DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)\nHTTP/1.1 500 No handler enqueued\nDate: Mon, 06 Jun 2016 08:50:04 GMT\nCache-Control: must-revalidate,no-cache,no-store\nContent-Type: text/html;charset=iso-8859-1\nContent-Length: 333\nServer: Jetty(9.3.9.v20160517)\n```\n", "closed": "2016-06-20 07:56:05", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1179", "ttf": 13.000277777777777, "commits": {}, "labels": ["Defect"], "title": "BasicHttpsTest#multipleSequentialPostRequestsOverHttps failure"}, {"created": "2016-06-06 09:07:23", "commits": {"5bdac7587dc4d56fb8f17e87aa83ac3cca865785": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2016-06-06 09:09:44", "filteredCommits": ["5bdac7587dc4d56fb8f17e87aa83ac3cca865785"], "commitsDetails": [{"nameRev": "5bdac7587dc4d56fb8f17e87aa83ac3cca865785 tags/async-http-client-project-2.0.5~6", "commitMessage": "Fix racy ListenableFutureTest, close #1178\n", "commitParents": ["e0cdfc3b9996ee83759ee7fbfab447c3d74a4fba"], "spoonStatsSkippedReason": "", "commitHash": "5bdac7587dc4d56fb8f17e87aa83ac3cca865785", "authoredDateTime": "2016-06-06 11:09:40", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 20, "deletions": 23, "lines": 43, "filePath": "client/src/test/java/org/asynchttpclient/ListenableFutureTest.java"}], "commitDateTime": "2016-06-06 11:09:40", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 10, "TOT": 14, "MOV": 3, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.ListenableFutureTest.testListenableFutureBeforeAndAfterCompletion()"}, {"UPD": 8, "TOT": 10, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.ListenableFutureTest.testListenableFutureAfterCompletion()"}, {"UPD": 0, "TOT": 5, "MOV": 0, "INS": 3, "DEL": 2, "spoonMethodName": "org.asynchttpclient.ListenableFutureTest.testListenableFuture()"}, {"UPD": 0, "TOT": 8, "MOV": 4, "INS": 0, "DEL": 4, "spoonMethodName": "org.asynchttpclient.ListenableFutureTest.testListenableFuture().1.run()"}], "spoonFilePath": "ListenableFutureTest.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1178", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "ListenableFutureTest is racy", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Listeners are invoked AFTER `onComplete` so if main thread was blocking on `onComplete`, it could have already resumed.\n", "labels": ["Defect"]}, {"created": "2016-06-03 19:33:54", "commits": {"e619b889d7cf639c5127e5223f0fb2dd3ac3b96d": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2016-06-03 19:47:20", "filteredCommits": [], "commitsDetails": [{"nameRev": "e619b889d7cf639c5127e5223f0fb2dd3ac3b96d tags/async-http-client-project-2.0.5~12", "commitMessage": "Backport Netty#5341, close #1175\n", "commitParents": ["9688a7a112771be2a02e40f2ca13fb1c998f9d4c"], "spoonStatsSkippedReason": "", "commitHash": "e619b889d7cf639c5127e5223f0fb2dd3ac3b96d", "authoredDateTime": "2016-06-03 21:43:13", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 5, "deletions": 0, "lines": 5, "filePath": "netty-bp/resolver/src/main/java/io/netty/resolver/InetSocketAddressResolver.java"}, {"insertions": 36, "deletions": 0, "lines": 36, "filePath": "netty-bp/resolver/src/test/java/io/netty/resolver/InetSocketAddressResolverTest.java"}], "commitDateTime": "2016-06-03 21:43:13", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.InetSocketAddressResolverTest"}], "spoonFilePath": "InetSocketAddressResolverTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "io.netty.resolver.InetSocketAddressResolver.close()"}], "spoonFilePath": "InetSocketAddressResolver.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1175", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Backport https://github.com/netty/netty/pull/5341", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2016-06-03 19:30:16", "commits": {"9688a7a112771be2a02e40f2ca13fb1c998f9d4c": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2016-06-20 07:55:59", "filteredCommits": ["9688a7a112771be2a02e40f2ca13fb1c998f9d4c"], "commitsDetails": [{"nameRev": "9688a7a112771be2a02e40f2ca13fb1c998f9d4c tags/async-http-client-project-2.0.5~13", "commitMessage": "Disabling test for now as we're investigating other test issues and this one gets in the way, see #1174\n", "commitParents": ["bc220d43fd160735a275d0cd23c7cda3dbbceb50"], "spoonStatsSkippedReason": "", "commitHash": "9688a7a112771be2a02e40f2ca13fb1c998f9d4c", "authoredDateTime": "2016-06-03 21:32:14", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/test/java/org/asynchttpclient/reactivestreams/ReactiveStreamsTest.java"}], "commitDateTime": "2016-06-03 21:32:14", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.reactivestreams.ReactiveStreamsTest.testConnectionDoesNotGetClosed()"}], "spoonFilePath": "ReactiveStreamsTest.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1174", "ttf": 16.00027777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "NettyReactiveStreamsTest#testConnectionDoesNotGetClosed sporadic failures", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "cc @jroper \n\n```\ntestConnectionDoesNotGetClosed(org.asynchttpclient.netty.handler.NettyReactiveStreamsTest)  Time elapsed: 0.168 sec  <<< FAILURE!\njava.lang.AssertionError: arrays differ firstly at element [12000]; expected value is <111> but was <45>. \n    at org.testng.Assert.fail(Assert.java:94)\n    at org.testng.Assert.assertEquals(Assert.java:774)\n    at org.testng.Assert.assertEquals(Assert.java:748)\n    at org.asynchttpclient.reactivestreams.ReactiveStreamsTest.testConnectionDoesNotGetClosed(ReactiveStreamsTest.java:66)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)\n    at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)\n    at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)\n    at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)\n    at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)\n    at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)\n    at org.testng.TestRunner.privateRun(TestRunner.java:774)\n    at org.testng.TestRunner.run(TestRunner.java:624)\n    at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)\n    at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)\n    at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)\n    at org.testng.SuiteRunner.run(SuiteRunner.java:261)\n    at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n    at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\n    at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)\n    at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)\n    at org.testng.TestNG.run(TestNG.java:1048)\n    at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)\n    at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:205)\n    at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:108)\n    at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)\n    at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)\n    at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)\n    at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)\n```\n", "labels": ["Defect"]}, {"created": "2016-06-03 12:43:27", "commits": {"8951a89621fc978fa8227cec24bd15e48f994ea6": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2016-06-03 12:55:12", "filteredCommits": ["8951a89621fc978fa8227cec24bd15e48f994ea6"], "commitsDetails": [{"nameRev": "8951a89621fc978fa8227cec24bd15e48f994ea6 tags/async-http-client-project-2.0.5~21", "commitMessage": "BasicHttpProxyToHttpTest dead lock, close #1172\n", "commitParents": ["cac062baec7d1a376a86685d8f1a62806e702210"], "spoonStatsSkippedReason": "", "commitHash": "8951a89621fc978fa8227cec24bd15e48f994ea6", "authoredDateTime": "2016-06-03 09:25:29", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 25, "deletions": 18, "lines": 43, "filePath": "client/src/test/java/org/asynchttpclient/BasicHttpProxyToHttpTest.java"}], "commitDateTime": "2016-06-03 14:54:06", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 2, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.BasicHttpProxyToHttpTest.tearDownGlobal()"}, {"UPD": 1, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.BasicHttpProxyToHttpTest.setUpGlobal()"}, {"UPD": 13, "TOT": 15, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.BasicHttpProxyToHttpTest.BasicAuthProxyServlet.service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"}], "spoonFilePath": "BasicHttpProxyToHttpTest.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1172", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "BasicHttpProxyToHttpTest dead lock", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Only happens on Travis (and some users' box).\n\nTry and errors points to insufficient ProxyServlet maxThreads.\n", "labels": ["Defect"]}, {"created": "2016-05-24 13:36:48", "commits": {"0d679de9d2dbc946a4e182b7b910ab07d85999b4": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "4835cf4262852d24099b0037b5cac5a47fdf648e": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.request.body.multipart.part.MultipartPart", "org.asynchttpclient.request.body.multipart.part.MultipartPart.visitCustomHeaders(org.asynchttpclient.request.body.multipart.part.PartVisitor)"], "closed": "2016-05-24 13:37:36", "filteredCommits": ["4835cf4262852d24099b0037b5cac5a47fdf648e"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "0d679de9d2dbc946a4e182b7b910ab07d85999b4", "authoredDateTime": "", "commitGHEventType": "closed", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "4835cf4262852d24099b0037b5cac5a47fdf648e tags/async-http-client-project-2.0.4~1", "commitMessage": "Add missing separator between part custom header name and value, close #1168\n", "commitParents": ["b42c256ff0b3e3564a76d56aada4f9f49ee86330"], "spoonStatsSkippedReason": "", "commitHash": "4835cf4262852d24099b0037b5cac5a47fdf648e", "authoredDateTime": "2016-05-24 15:37:31", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 6, "deletions": 0, "lines": 6, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/MultipartPart.java"}, {"insertions": 2, "deletions": 4, "lines": 6, "filePath": "client/src/test/java/org/asynchttpclient/request/body/multipart/part/MultipartPartTest.java"}], "commitDateTime": "2016-05-25 11:56:12", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPartTest.testVisitPreContent()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPartTest.testVisitCustomHeaders()"}], "spoonFilePath": "MultipartPartTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPart"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPart.visitCustomHeaders(org.asynchttpclient.request.body.multipart.part.PartVisitor)"}], "spoonFilePath": "MultipartPart.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1168", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 6.0, "deletions": 0.0, "lines": 6.0, "gitFilesChange": 1}, "title": "Part custom headers are broken", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/request/body/multipart/part"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 2, "TOT": 2.0, "MOV": 0.0, "INS": 2.0, "DEL": 0.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Missing separator between name and value\n", "labels": ["Defect"]}, {"created": "2016-05-23 20:51:14", "commits": {"2eca6139c5022811c206898ac4647777cabab9df": {"commitGHEventType": "referenced", "commitUser": "rlubke"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.grizzly.HttpTransactionContext.1.onClosed(org.glassfish.grizzly.Closeable,org.glassfish.grizzly.CloseType)"], "closed": "2016-07-12 00:49:40", "filteredCommits": ["2eca6139c5022811c206898ac4647777cabab9df"], "commitsDetails": [{"nameRev": "2eca6139c5022811c206898ac4647777cabab9df tags/async-http-client-1.9.39~3", "commitMessage": "Changes for #1166.\n", "commitParents": ["701d891e48dca8a075d569ae986915c831f61e02"], "spoonStatsSkippedReason": "", "commitHash": "2eca6139c5022811c206898ac4647777cabab9df", "authoredDateTime": "2016-07-11 17:48:59", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 1, "lines": 3, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/HttpTransactionContext.java"}], "commitDateTime": "2016-07-11 17:48:59", "commitUser": "rlubke", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.HttpTransactionContext.1.onClosed(org.glassfish.grizzly.Closeable,org.glassfish.grizzly.CloseType)"}], "spoonFilePath": "HttpTransactionContext.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1166", "ttf": 49.000277777777775, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "title": "When connect fails, Grizzly provider doesn't notify with the proper exception (1.9 only)", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/grizzly"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "See discussion and possible fix #1134.\nWaiting for fix to be validated by @oleksiys.\n", "labels": ["Defect", "Grizzly"]}, {"created": "2016-05-23 20:50:11", "user": "slandelle", "body": "See test added but disabled in 701d891e48dca8a075d569ae986915c831f61e02.\n\nAs discussed in #1134, this issue doesn't happen in AHC2.\nAs AHC1 is eol'ed, I won't fix this myself, but will accept contributions.\n", "closed": "2016-10-05 12:43:07", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1165", "ttf": 134.00027777777777, "commits": {}, "labels": ["Contributions Welcome!", "Defect", "Netty"], "title": "When connect fails, Netty provider doesn't notify with the proper exception (1.9 only)"}, {"created": "2016-05-23 11:59:51", "commits": {"1e9dd38865117630962a9375167c3651d001a427": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.NettyResponseFuture.toCompletableFuture().1.run()"], "closed": "2016-05-23 12:12:19", "filteredCommits": ["1e9dd38865117630962a9375167c3651d001a427"], "commitsDetails": [{"nameRev": "1e9dd38865117630962a9375167c3651d001a427 tags/async-http-client-project-2.0.4~3", "commitMessage": "Don't wrap ExecutionException again when completing a CompletableFuture, close #1163\n", "commitParents": ["5a8bb5a3c597acafd8627a132051996be82ab498"], "spoonStatsSkippedReason": "", "commitHash": "1e9dd38865117630962a9375167c3651d001a427", "authoredDateTime": "2016-05-23 14:12:13", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/NettyResponseFuture.java"}], "commitDateTime": "2016-05-23 14:12:13", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.toCompletableFuture().1.run()"}], "spoonFilePath": "NettyResponseFuture.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1163", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "CompletableFuture exceptions are wrapped twice", "statsSkippedReason": "", "user": "etki", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi.\nI'm a CompletableFuture-fan, so i work using this interface. I was expecting to get timeouts and stuff in the form of ExecutionException with original Exception as cause:\n\n```\nExecutionException:\n  cause: TimeoutException\n```\n\nhowever, i see something more complicated:\n\n```\nExecutionException:\n  cause: ExecutionException:\n    cause: TimeoutException\n```\n\nI believe that it may be solved in a couple of lines in `ListenableFuture.CompletedFailure.toCompletableFuture`, however, i'm not familiar with project architecture and not sure that project maintainers will accept my vision, so i'm not sending any pull requests.\nSo, my proposition is: remove excessive ExecutionException wrapper in responses converted to CompletableFutures since it is not intuitive and most users will expect original cause wrapped in the exception thrown during `.get()` call.\n", "labels": ["Defect"]}, {"created": "2016-05-17 12:32:41", "commits": {"ffb1820887c4a9c0a107aacf5d88ab4acca5696f": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 0, "closed": "2016-05-17 14:58:45", "filteredCommits": [], "commitsDetails": [{"nameRev": "ffb1820887c4a9c0a107aacf5d88ab4acca5696f tags/async-http-client-project-2.0.3~7", "commitMessage": "Merge pull request #1157 from Spikhalskiy/netty-consistent-version\n\nFix inherited netty dependency version to 4.0.36.Final, close #1156 ", "commitParents": ["ebd014f8ed6415c6587faa81f4176b92d952c45b", "233bb20d01da85477cedcc1deef41431ac70aa68"], "spoonStatsSkippedReason": "", "commitHash": "ffb1820887c4a9c0a107aacf5d88ab4acca5696f", "authoredDateTime": "2016-05-17 16:58:44", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 5, "deletions": 0, "lines": 5, "filePath": "pom.xml"}], "commitDateTime": "2016-05-17 16:58:44", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1156", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Netty dependencies of different versions used", "statsSkippedReason": "", "user": "Spikhalskiy", "changesInPackagesGIT": [], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "Now async http client uses netty-reactive-streams 1.0.4 which depends on io.netty:netty-handler:4.0.34.Final, while the main netty version in project is 4.0.36.Final\n\nSuggested fix: exclude netty-handler from netty-reactive-streams dependency and add separately with correct version\n", "labels": ["Defect"]}, {"created": "2016-05-11 23:07:20", "commits": {"67f1cd669630cd4a9adca34704866b1f15a15033": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.request.NettyRequestFactory.newNettyRequest(org.asynchttpclient.Request,boolean,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.Realm,org.asynchttpclient.Realm)"], "closed": "2016-05-11 23:08:02", "filteredCommits": ["67f1cd669630cd4a9adca34704866b1f15a15033"], "commitsDetails": [{"nameRev": "67f1cd669630cd4a9adca34704866b1f15a15033 tags/async-http-client-project-2.0.3~9", "commitMessage": "Over HTTPS, per request proxy auth header should only be sent on CONNECT, close #1153\n", "commitParents": ["faa6fcaa0529adb5d147c8c19ff827348a4b4df2"], "spoonStatsSkippedReason": "", "commitHash": "67f1cd669630cd4a9adca34704866b1f15a15033", "authoredDateTime": "2016-05-12 01:07:56", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 4, "deletions": 1, "lines": 5, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactory.java"}], "commitDateTime": "2016-05-12 01:07:56", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestFactory.newNettyRequest(org.asynchttpclient.Request,boolean,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.Realm,org.asynchttpclient.Realm)"}], "spoonFilePath": "NettyRequestFactory.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1153", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 4, "deletions": 1, "lines": 5, "gitFilesChange": 1}, "title": "Over HTTPS, per request proxy auth header should only be sent on CONNECT", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2016-05-11 17:51:47", "commits": {"fbbb2bfd9d33fc447133e7c46f109197ced40977": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2016-05-18 20:24:36", "filteredCommits": [], "commitsDetails": [{"nameRev": "fbbb2bfd9d33fc447133e7c46f109197ced40977 tags/async-http-client-1.9.39~6", "commitMessage": "Merge pull request #1158 from gsfernandes/1152\n\nproxy-authorization not working when using an http proxy while requesting a https url, close #1152", "commitParents": ["89ff65b3d26ba683fd7e8f2218d4c817ff5ca6f9", "f8fa536b8ac37d764ccb22042861ffec1122af7e"], "spoonStatsSkippedReason": "", "commitHash": "fbbb2bfd9d33fc447133e7c46f109197ced40977", "authoredDateTime": "2016-05-18 22:14:05", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/util/AuthenticatorUtils.java"}, {"insertions": 30, "deletions": 0, "lines": 30, "filePath": "src/test/java/com/ning/http/client/async/netty/NettyBasicHttpProxyToHttpsTest.java"}, {"insertions": 30, "deletions": 0, "lines": 30, "filePath": "src/test/java/com/ning/http/client/async/grizzly/GrizzlyBasicHttpProxyToHttpTest.java"}, {"insertions": 30, "deletions": 0, "lines": 30, "filePath": "src/test/java/com/ning/http/client/async/grizzly/GrizzlyBasicHttpProxyToHttpsTest.java"}, {"insertions": 132, "deletions": 0, "lines": 132, "filePath": "src/test/java/com/ning/http/client/async/BasicHttpProxyToHttpTest.java"}, {"insertions": 137, "deletions": 0, "lines": 137, "filePath": "src/test/java/com/ning/http/client/async/BasicHttpProxyToHttpsTest.java"}, {"insertions": 30, "deletions": 0, "lines": 30, "filePath": "src/test/java/com/ning/http/client/async/netty/NettyBasicHttpProxyToHttpTest.java"}], "commitDateTime": "2016-05-18 22:14:05", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.util.AuthenticatorUtils.perRequestProxyAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.Realm,com.ning.http.client.ProxyServer,boolean)"}], "spoonFilePath": "AuthenticatorUtils.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.BasicHttpProxyToHttpsTest"}], "spoonFilePath": "BasicHttpProxyToHttpsTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.grizzly.GrizzlyBasicHttpProxyToHttpTest"}], "spoonFilePath": "GrizzlyBasicHttpProxyToHttpTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.grizzly.GrizzlyBasicHttpProxyToHttpsTest"}], "spoonFilePath": "GrizzlyBasicHttpProxyToHttpsTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.netty.NettyBasicHttpProxyToHttpTest"}], "spoonFilePath": "NettyBasicHttpProxyToHttpTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.netty.NettyBasicHttpProxyToHttpsTest"}], "spoonFilePath": "NettyBasicHttpProxyToHttpsTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.BasicHttpProxyToHttpTest"}], "spoonFilePath": "BasicHttpProxyToHttpTest.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1152", "ttf": 7.000277777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "proxy-authorization not working when using an http proxy while requesting a https url", "statsSkippedReason": "", "user": "gsfernandes", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "Hi, I found that since this commit https://github.com/AsyncHttpClient/async-http-client/commit/68c9e7a20c96dff7a872c242496743bdbef08d3e the following scenario started to fail.\n\nI have set a http proxy with basic authentication and I want to access a https url through the proxy. So, the authentication proxy header should be sent as part of the connect but it is not happening.\n\nI'm using AHC 1.9.31 and Grizzly 2.3.21.\n\nBefore the referenced commit was added it was working and here was the sequence of messages:\n\n> REQUEST: HttpRequestPacket (\n>    method=CONNECT\n>    url=httpbin.org:443\n>    headers=[\n>       Host=httpbin.org:443\n>       User-Agent=AHC/1.0\n>       Connection=keep-alive\n>       Proxy-Connection=keep-alive\n>       Proxy-Authorization=Basic am9obmRvZTpwYXNz]\n> )\n> RESPONSE: HttpResponsePacket (\n>   status=200\n>   reason=Connection established\n> )\n> REQUEST: HttpRequestPacket (\n>    method=GET\n>    url=/basic-auth/user/passwd\n>    protocol=HTTP/1.1\n>    headers=[\n>       Host=httpbin.org:443\n>       User-Agent=AHC/1.0\n>       Connection=keep-alive\n>       Accept=_/_\n>       Proxy-Connection=keep-alive\n>       Proxy-Authorization=Basic am9obmRvZTpwYXNz]\n> )\n> RESPONSE: HttpResponsePacket (\n>   status=401\n>   reason=UNAUTHORIZED\n>   protocol=HTTP/1.1\n>   committed=false\n>   headers=[\n>       server=nginx\n>       date=Tue, 10 May 2016 12:50:48 GMT\n>       content-length=0\n>       connection=keep-alive\n>       access-control-allow-origin=*\n>       www-authenticate=Basic realm=\"Fake Realm\"\n>       access-control-allow-credentials=true]\n> )\n> REQUEST: HttpRequestPacket (\n>    method=GET\n>    url=/basic-auth/user/passwd\n>    protocol=HTTP/1.1\n>    headers=[\n>       Host=httpbin.org:443\n>       User-Agent=AHC/1.0\n>       Connection=keep-alive\n>       Accept=_/_\n>       Authorization=Basic dXNlcjpwYXNzd2Q=\n>       Proxy-Connection=keep-alive\n>       Proxy-Authorization=Basic am9obmRvZTpwYXNz]\n> )\n> ...\n\nNowadays latest code from 1.9.x does not send the proxy-authorization with the correct data therefore I got the following messages sequence:\n\n> REQUEST: HttpRequestPacket (\n>    method=CONNECT\n>    url=httpbin.org:443\n>    query=null\n>    protocol=HTTP/1.0\n>    content-length=-1\n>    headers=[\n>       Host=httpbin.org:443\n>       User-Agent=AHC/1.0\n>       Connection=keep-alive\n>       Proxy-Connection=keep-alive]\n> )\n> RESPONSE: HttpResponsePacket (\n>   status=407\n>   reason=Proxy Authentication Required\n>   protocol=HTTP/1.1\n>   content-length=3553\n>   committed=false\n>   headers=[\n>       server=squid/3.5.15\n>       mime-version=1.0\n>       date=Wed, 11 May 2016 17:40:32 GMT\n>       content-type=text/html;charset=utf-8\n>       content-length=3553\n>       x-squid-error=ERR_CACHE_ACCESS_DENIED 0\n>       vary=Accept-Language\n>       content-language=en\n>       proxy-authenticate=Basic realm=\"Squid proxy-caching web server\"\n>       x-cache=MISS from localhost\n>       via=1.1 localhost (squid/3.5.15)\n>       connection=keep-alive]\n> )\n> ...\n\nAfter this point I got an error while parsing the http status code (I'm using squidman to test this, but this works with code before the mentioned commit):\n\n> May 11, 2016 2:40:32 PM org.glassfish.grizzly.filterchain.DefaultFilterChain execute\n> WARNING: GRIZZLY0013: Exception during FilterChain execution\n> java.lang.NullPointerException\n>     at org.glassfish.grizzly.http.HttpClientFilter$ClientHttpResponseImpl.getProcessingState(HttpClientFilter.java:714)\n>     at com.ning.http.client.providers.grizzly.HttpTransactionContext.currentTransaction(HttpTransactionContext.java:122)\n>     at com.ning.http.client.providers.grizzly.AhcEventFilter.onHttpHeaderError(AhcEventFilter.java:254)\n>     at org.glassfish.grizzly.http.HttpCodecFilter.handleRead(HttpCodecFilter.java:563)\n>     at org.glassfish.grizzly.http.HttpClientFilter.handleRead(HttpClientFilter.java:175)\n\nI looked at the code and I found that it is now checking for a connect flag and only if it is false it will add the proxy authentication header.\n\n```\n    com.ning.http.util.AuthenticatorUtils\n    public static String perRequestProxyAuthorizationHeader(Request request,\n        Realm realm, ProxyServer proxyServer, boolean connect) {\n\n    String proxyAuthorization = null;\n\n    if (!connect && proxyServer != null && proxyServer.getPrincipal() != null\n            && proxyServer.getScheme() == Realm.AuthScheme.BASIC) {\n        proxyAuthorization = computeBasicAuthentication(proxyServer);\n\n    }\n```\n\nThe previous version of the code was sending always the proxy-authorization without checking or not this flag.\n\nI have made the change to do send the proxyAuthorization based on proxyServer data but I'm not able to get the test to complete the sequence or requests (it does the connect, get) due to an SSL issue that I'm not able to find out why it is failing. Let me know if you want me to share this code.\n\nThanks!\n", "labels": ["Defect", "Grizzly", "Netty"]}, {"created": "2016-04-21 15:41:37", "commits": {"7c67c3a217b758fa91d1fb9f8273cb749d122226": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.request.body.multipart.part.MultipartPart.transfer(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,org.asynchttpclient.request.body.multipart.part.MultipartState)"], "closed": "2016-04-21 15:42:50", "filteredCommits": ["7c67c3a217b758fa91d1fb9f8273cb749d122226"], "commitsDetails": [{"nameRev": "7c67c3a217b758fa91d1fb9f8273cb749d122226 tags/async-http-client-project-2.0.2~1", "commitMessage": "Fix MultipartPart transfer, close #1147\n", "commitParents": ["baf17bb9c0d4fea507048a67e1b55bd1cf0f1fdb"], "spoonStatsSkippedReason": "", "commitHash": "7c67c3a217b758fa91d1fb9f8273cb749d122226", "authoredDateTime": "2016-04-21 17:42:42", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/test/java/org/asynchttpclient/test/TestUtils.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/MultipartPart.java"}, {"insertions": 56, "deletions": 21, "lines": 77, "filePath": "client/src/test/java/org/asynchttpclient/request/body/multipart/part/MultipartPartTest.java"}, {"insertions": 171, "deletions": 0, "lines": 171, "filePath": "client/src/test/resources/test_sample_message.eml"}], "commitDateTime": "2016-04-21 17:42:42", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.test.TestUtils.resourceAsFile(java.lang.String)"}], "spoonFilePath": "TestUtils.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPartTest.transferToShouldWriteStringPart()"}], "spoonFilePath": "MultipartPartTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPart.transfer(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,org.asynchttpclient.request.body.multipart.part.MultipartState)"}], "spoonFilePath": "MultipartPart.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1147", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "Multipart IllegalArgumentException: minWritableBytes", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/request/body/multipart/part"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "```\njava.lang.IllegalArgumentException: minWritableBytes: -1042 (expected: >= 0)\n    at io.netty.buffer.AbstractByteBuf.ensureWritable(AbstractByteBuf.java:246)\n    at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:866)\n    at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:858)\n    at io.netty.buffer.WrappedByteBuf.writeBytes(WrappedByteBuf.java:613)\n    at org.asynchttpclient.request.body.multipart.part.MultipartPart.transfer(MultipartPart.java:194)\n    at org.asynchttpclient.request.body.multipart.part.StringMultipartPart.transferContentTo(StringMultipartPart.java:40)\n    at org.asynchttpclient.request.body.multipart.part.MultipartPart.transferTo(MultipartPart.java:127)\n    at org.asynchttpclient.request.body.multipart.MultipartBody.transferTo(MultipartBody.java:96)\n    at org.asynchttpclient.request.body.multipart.part.MultipartPartTest.transferToShouldWriteStringPart(MultipartPartTest.java:205)\n```\n", "labels": ["Defect"]}, {"created": "2016-04-06 09:20:08", "user": "slandelle", "body": "OSGI. GO. TO. HELL.\n", "closed": "2016-05-30 14:06:02", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1132", "ttf": 54.000277777777775, "commits": {}, "labels": ["Defect"], "title": "OSGI maven-bundle-plugin repackages Netty classes inside AHC jar"}, {"created": "2016-04-06 07:11:48", "commits": {"10a538c34464b5c28083cc4e221e0598ee4505e0": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.channel.NettyConnectListener.writeRequest(io.netty.channel.Channel)"], "closed": "2016-04-06 07:12:55", "filteredCommits": ["10a538c34464b5c28083cc4e221e0598ee4505e0"], "commitsDetails": [{"nameRev": "10a538c34464b5c28083cc4e221e0598ee4505e0 tags/async-http-client-project-2.0.0-RC20~2", "commitMessage": "Forcefully close connection when Future is manually cancelled during connect, close #1131\n", "commitParents": ["fc63d8177f1fa52f397da9abe5044d912d7f0d7e"], "spoonStatsSkippedReason": "", "commitHash": "10a538c34464b5c28083cc4e221e0598ee4505e0", "authoredDateTime": "2016-04-06 09:12:48", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 0, "lines": 1, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/NettyConnectListener.java"}], "commitDateTime": "2016-04-06 09:12:48", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.NettyConnectListener.writeRequest(io.netty.channel.Channel)"}], "spoonFilePath": "NettyConnectListener.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1131", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 0, "lines": 1, "gitFilesChange": 1}, "title": "Connection isn't forcefully closed when Future is cancelled during connect", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/channel"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "see https://github.com/AsyncHttpClient/async-http-client/issues/1129#issuecomment-206100559\n", "labels": ["Defect"]}, {"created": "2016-04-04 13:09:50", "commits": {"f7c17c21c72d5e52451188a0042f4b0ee323efe3": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "f3730f1102860eca4ebf4d81b54c37d9162ba1b4": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "b0a6e6163e1d1cffbb7d98f775da40298acebb57": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.future.AbstractListenableFuture.runListeners()", "org.asynchttpclient.future.AbstractListenableFuture.addListener(java.lang.Runnable,java.util.concurrent.Executor)", "org.asynchttpclient.future.AbstractListenableFuture"], "closed": "2016-04-04 13:56:41", "filteredCommits": ["f7c17c21c72d5e52451188a0042f4b0ee323efe3"], "commitsDetails": [{"nameRev": "f7c17c21c72d5e52451188a0042f4b0ee323efe3 tags/async-http-client-project-2.0.0-RC19~1", "commitMessage": "Fix Listener exec when it's added to the ListenableFuture after completion, close #1128\n", "commitParents": ["becc8b77c9846e1fc638277f173019e8098b0052"], "spoonStatsSkippedReason": "", "commitHash": "f7c17c21c72d5e52451188a0042f4b0ee323efe3", "authoredDateTime": "2016-04-04 15:56:34", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 30, "deletions": 1, "lines": 31, "filePath": "client/src/test/java/org/asynchttpclient/ListenableFutureTest.java"}, {"insertions": 7, "deletions": 5, "lines": 12, "filePath": "client/src/main/java/org/asynchttpclient/future/AbstractListenableFuture.java"}], "commitDateTime": "2016-04-04 16:37:38", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ListenableFutureTest.testListenableFutureBeforeAndAfterCompletion()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ListenableFutureTest.testListenableFutureAfterCompletion()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.ListenableFutureTest.testListenableFuture()"}], "spoonFilePath": "ListenableFutureTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.future.AbstractListenableFuture.runListeners()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.future.AbstractListenableFuture.addListener(java.lang.Runnable,java.util.concurrent.Executor)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.future.AbstractListenableFuture"}], "spoonFilePath": "AbstractListenableFuture.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "f3730f1102860eca4ebf4d81b54c37d9162ba1b4", "authoredDateTime": "", "commitGHEventType": "closed", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "b0a6e6163e1d1cffbb7d98f775da40298acebb57", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1128", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 7.0, "deletions": 5.0, "lines": 12.0, "gitFilesChange": 1}, "title": "AbstractListenableFuture#addListener does not execute listener when the listener is added after the future completion and when the execution list is not yet initialized", "statsSkippedReason": "", "user": "nithril", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/future"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 3, "TOT": 4.0, "MOV": 0.0, "INS": 4.0, "DEL": 0.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 2, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "You could find below two test cases to add to `org.asynchttpclient.ListenableFutureTest`:\n- `ListenableFutureTest#testListenableFutureAfterCompletion` with the issue when the listener is added after the completion\n- `ListenableFutureTest#testListenableFutureBeforeAndAfterCompletion` without the issue because the execution list is initialized prior the future completion \n\n``` java\n\n    @Test(groups = \"standalone\")\n    public void testListenableFutureAfterCompletion() throws Exception {\n\n        AtomicInteger counter = new AtomicInteger(1);\n\n        try (AsyncHttpClient ahc = asyncHttpClient()) {\n            final ListenableFuture<Response> future = ahc.prepareGet(getTargetUrl()).execute();\n            Response response = future.get();\n            future.addListener(() -> counter.decrementAndGet(), Runnable::run);\n        }\n        Assert.assertEquals(0 , counter.get());\n    }\n\n\n    @Test(groups = \"standalone\")\n    public void testListenableFutureBeforeAndAfterCompletion() throws Exception {\n\n        AtomicInteger counter = new AtomicInteger(2);\n\n        try (AsyncHttpClient ahc = asyncHttpClient()) {\n            final ListenableFuture<Response> future = ahc.prepareGet(getTargetUrl()).execute();\n\n            future.addListener(() -> counter.decrementAndGet(), Runnable::run);\n\n            Response response = future.get();\n            future.addListener(() -> counter.decrementAndGet(), Runnable::run);\n        }\n        Assert.assertEquals(0 , counter.get());\n    }\n```\n", "labels": ["Defect"]}, {"created": "2016-04-02 12:11:22", "commits": {"50aeda05e48b4d9043f663c1d7ee96b8d30a6a96": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.multipart.MultipartBody.transferTo(long,java.nio.channels.WritableByteChannel)", "com.ning.http.client.multipart.FilePart.write(java.nio.channels.WritableByteChannel,byte[])"], "closed": "2016-04-03 08:33:58", "filteredCommits": ["50aeda05e48b4d9043f663c1d7ee96b8d30a6a96"], "commitsDetails": [{"nameRev": "50aeda05e48b4d9043f663c1d7ee96b8d30a6a96 tags/async-http-client-1.9.38~1", "commitMessage": "File part is missing from transferred bytes sum, close #1126\n", "commitParents": ["5b51e2e7d3f08fc621fdfd6d12fc97a7343ede38"], "spoonStatsSkippedReason": "", "commitHash": "50aeda05e48b4d9043f663c1d7ee96b8d30a6a96", "authoredDateTime": "2016-04-03 10:33:36", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 9, "deletions": 8, "lines": 17, "filePath": "src/main/java/com/ning/http/client/multipart/FilePart.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/multipart/MultipartBody.java"}], "commitDateTime": "2016-04-03 10:33:36", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 10, "TOT": 13, "MOV": 0, "INS": 2, "DEL": 1, "spoonMethodName": "com.ning.http.client.multipart.FilePart.write(java.nio.channels.WritableByteChannel,byte[])"}], "spoonFilePath": "FilePart.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.multipart.MultipartBody.transferTo(long,java.nio.channels.WritableByteChannel)"}], "spoonFilePath": "MultipartBody.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1126", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 10, "deletions": 9, "lines": 19, "gitFilesChange": 2}, "title": "Multipart File requests fail with IllegalArgumentException  (on +1.9.2)", "statsSkippedReason": "", "user": "maesenka", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/multipart"], "spoonStatsSummary": {"UPD": 10, "spoonMethodsChanged": 2, "TOT": 15, "MOV": 0, "INS": 3, "DEL": 2, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "All multipart file requests in versions 1.9.36 result in IllegalArgumentExceptions. \n\n```\n016-04-02 14:04:24,459 [New I/O worker #35] WARN  - AbstractNioSelector: Unexpected exception in the selector loop.\njava.lang.IllegalArgumentException: writtenAmount must be a positive integer: -1\n    at org.jboss.netty.channel.DefaultWriteCompletionEvent.<init>(DefaultWriteCompletionEvent.java:36) ~[netty-3.10.5.Final.jar:na]\n    at org.jboss.netty.channel.Channels.fireWriteComplete(Channels.java:324) ~[netty-3.10.5.Final.jar:na]\n    at org.jboss.netty.channel.socket.nio.AbstractNioWorker.write0(AbstractNioWorker.java:299) [netty-3.10.5.Final.jar:na]\n    at org.jboss.netty.channel.socket.nio.AbstractNioWorker.writeFromSelectorLoop(AbstractNioWorker.java:158) [netty-3.10.5.Final.jar:na]\n    at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:114) [netty-3.10.5.Final.jar:na]\n    at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337) ~[netty-3.10.5.Final.jar:na]\n    at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89) [netty-3.10.5.Final.jar:na]\n    at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178) [netty-3.10.5.Final.jar:na]\n    at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108) [netty-3.10.5.Final.jar:na]\n    at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42) [netty-3.10.5.Final.jar:na]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_40]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_40]\n    at java.lang.Thread.run(Thread.java:745) [na:1.8.0_40]\n```\n\nI'm pretty sure that the bug was introduced in commit 54def5ad043ea8af8beb2aa820f2c0efa9fc1980. If I revert this commit my MultiPart file requests succeed.\n", "labels": ["Defect", "Netty"]}, {"created": "2016-03-30 00:56:10", "commits": {"1772123705a2fe0f5a993196e88c6a677c805c7c": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.request.body.multipart.part.FileMultipartPart.transferContentTo(java.nio.channels.WritableByteChannel)"], "closed": "2016-03-30 07:40:18", "filteredCommits": ["1772123705a2fe0f5a993196e88c6a677c805c7c"], "commitsDetails": [{"nameRev": "1772123705a2fe0f5a993196e88c6a677c805c7c tags/async-http-client-project-2.0.0-RC17~2", "commitMessage": "Fix FilePart position when using zero-copy, close #1123\n", "commitParents": ["97e7ce9ae5c5e7885f6068e4d03ebc02bb065d18"], "spoonStatsSkippedReason": "", "commitHash": "1772123705a2fe0f5a993196e88c6a677c805c7c", "authoredDateTime": "2016-03-30 09:40:13", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 1, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/FileMultipartPart.java"}], "commitDateTime": "2016-03-30 09:40:13", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.FileMultipartPart.transferContentTo(java.nio.channels.WritableByteChannel)"}], "spoonFilePath": "FileMultipartPart.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1123", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 3, "deletions": 1, "lines": 4, "gitFilesChange": 1}, "title": "Multipart/Form-Data: uploaded FilePart is corrupt/incomplete", "statsSkippedReason": "", "user": "domdorn", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/request/body/multipart/part"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I'm creating a kind of Proxy using the PlayFramework 2.5.1 and the bundled AsyncHttpClient 2.0-RC16. \n\nWhen uploading files over a certain size (not sure where's the limit), the transmitted Fileparts are incomplete and don't include a closing boundary. \n\nThe requests look like this\n\nbrowser -> playApp -> backend_server\n[asynchttpclient_bug.zip](https://github.com/AsyncHttpClient/async-http-client/files/194538/asynchttpclient_bug.zip)\n\nThe files \nsmallfile_browser_playapp.raw + smallfile_play_backendserver.raw + test.jpg \nshow how the communication should be ( the fileparts end correct and include the closing boundary)\n\nThe files\nconversation_browser_playapp.raw + conversation_play_backendserver.raw + 10003452_245377232464587_7349773111777690908_n.jpg\nshow how the communication is broken. the filepart in conversation_play_backendserver.raw suddendly stops and does not contain a closing boundary. \n\nit looks like this is a problem with some buffer having not enough space or something like that. \n\nAny help appreciated!\n\n[asynchttpclient_bug.zip](https://github.com/AsyncHttpClient/async-http-client/files/194537/asynchttpclient_bug.zip)\n", "labels": ["Defect"]}, {"created": "2016-03-24 21:37:57", "commits": {"f3f6911ded7c8bcd224e7cd00326441f366391f3": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "965b67858e0835c374afd7d4c44186c27c363849": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2016-03-24 22:47:00", "filteredCommits": [], "commitsDetails": [{"nameRev": "f3f6911ded7c8bcd224e7cd00326441f366391f3 tags/async-http-client-project-2.0.0-RC16~1", "commitMessage": "Fix multipart/form-data, close #1119, close #1120, close #1121\n", "commitParents": ["5ea2cc870779c2a3268b5c71db0a767db3e8b526"], "spoonStatsSkippedReason": "", "commitHash": "f3f6911ded7c8bcd224e7cd00326441f366391f3", "authoredDateTime": "2016-03-24 23:46:51", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 11, "lines": 15, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/ByteArrayMultipartPart.java"}, {"insertions": 27, "deletions": 0, "lines": 27, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/FileLikeMultipartPart.java"}, {"insertions": 1, "deletions": 2, "lines": 3, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/ByteArrayPart.java"}, {"insertions": 3, "deletions": 14, "lines": 17, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/MultipartUtils.java"}, {"insertions": 3, "deletions": 14, "lines": 17, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/MultipartPart.java"}, {"insertions": 1, "deletions": 19, "lines": 20, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/StringPart.java"}, {"insertions": 28, "deletions": 10, "lines": 38, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/FileLikePart.java"}, {"insertions": 2, "deletions": 3, "lines": 5, "filePath": "client/src/test/java/org/asynchttpclient/request/body/multipart/part/MultipartPartTest.java"}, {"insertions": 6, "deletions": 2, "lines": 8, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/FilePart.java"}, {"insertions": 53, "deletions": 0, "lines": 53, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/StringMultipartPart.java"}, {"insertions": 1832, "deletions": 0, "lines": 1832, "filePath": "client/src/main/resources/ahc-mime.types"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/FileMultipartPart.java"}], "commitDateTime": "2016-03-25 00:06:11", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.ByteArrayMultipartPart.transferContentTo(io.netty.buffer.ByteBuf)"}, {"UPD": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.ByteArrayMultipartPart"}, {"UPD": 0, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.ByteArrayMultipartPart.lazyLoadContentBuffer()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.ByteArrayMultipartPart.transferContentTo(java.nio.channels.WritableByteChannel)"}], "spoonFilePath": "ByteArrayMultipartPart.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.FileLikePart.computeContentType(java.lang.String,java.lang.String)"}, {"UPD": 3, "TOT": 10, "MOV": 3, "INS": 2, "DEL": 2, "spoonMethodName": "org.asynchttpclient.request.body.multipart.FileLikePart"}, {"UPD": 0, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.FileLikePart.setFileName(java.lang.String)"}], "spoonFilePath": "FileLikePart.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPartTest.TestMultipartPart"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPartTest.TestFileLikePart"}], "spoonFilePath": "MultipartPartTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 2, "INS": 0, "DEL": 4, "spoonMethodName": "org.asynchttpclient.request.body.multipart.StringPart"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.StringPart.transferEncodingOrDefault(java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.StringPart.contentTypeOrDefault(java.lang.String)"}], "spoonFilePath": "StringPart.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.MultipartUtils.newMultipartBody(java.util.List,io.netty.handler.codec.http.HttpHeaders)"}, {"UPD": 2, "TOT": 6, "MOV": 0, "INS": 0, "DEL": 4, "spoonMethodName": "org.asynchttpclient.request.body.multipart.MultipartUtils.generateMultipartParts(java.util.List,byte[])"}], "spoonFilePath": "MultipartUtils.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPart"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPart.visitDispositionHeader(org.asynchttpclient.request.body.multipart.part.PartVisitor)"}], "spoonFilePath": "MultipartPart.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.ByteArrayPart"}], "spoonFilePath": "ByteArrayPart.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.FileLikeMultipartPart"}], "spoonFilePath": "FileLikeMultipartPart.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.FilePart"}], "spoonFilePath": "FilePart.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.FileMultipartPart"}], "spoonFilePath": "FileMultipartPart.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.StringMultipartPart"}], "spoonFilePath": "StringMultipartPart.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "965b67858e0835c374afd7d4c44186c27c363849", "authoredDateTime": "", "commitGHEventType": "closed", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1120", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "title": "multipart/form-data doesn't use/require/allow a Content-Transfer-Encoding", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 0, "TOT": 0.0, "MOV": 0.0, "INS": 0.0, "DEL": 0.0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2016-03-24 20:23:14", "commits": {"f3f6911ded7c8bcd224e7cd00326441f366391f3": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "965b67858e0835c374afd7d4c44186c27c363849": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2016-03-24 22:47:00", "filteredCommits": [], "commitsDetails": [{"nameRev": "f3f6911ded7c8bcd224e7cd00326441f366391f3 tags/async-http-client-project-2.0.0-RC16~1", "commitMessage": "Fix multipart/form-data, close #1119, close #1120, close #1121\n", "commitParents": ["5ea2cc870779c2a3268b5c71db0a767db3e8b526"], "spoonStatsSkippedReason": "", "commitHash": "f3f6911ded7c8bcd224e7cd00326441f366391f3", "authoredDateTime": "2016-03-24 23:46:51", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 11, "lines": 15, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/ByteArrayMultipartPart.java"}, {"insertions": 27, "deletions": 0, "lines": 27, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/FileLikeMultipartPart.java"}, {"insertions": 1, "deletions": 2, "lines": 3, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/ByteArrayPart.java"}, {"insertions": 3, "deletions": 14, "lines": 17, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/MultipartUtils.java"}, {"insertions": 3, "deletions": 14, "lines": 17, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/MultipartPart.java"}, {"insertions": 1, "deletions": 19, "lines": 20, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/StringPart.java"}, {"insertions": 28, "deletions": 10, "lines": 38, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/FileLikePart.java"}, {"insertions": 2, "deletions": 3, "lines": 5, "filePath": "client/src/test/java/org/asynchttpclient/request/body/multipart/part/MultipartPartTest.java"}, {"insertions": 6, "deletions": 2, "lines": 8, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/FilePart.java"}, {"insertions": 53, "deletions": 0, "lines": 53, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/StringMultipartPart.java"}, {"insertions": 1832, "deletions": 0, "lines": 1832, "filePath": "client/src/main/resources/ahc-mime.types"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/FileMultipartPart.java"}], "commitDateTime": "2016-03-25 00:06:11", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.ByteArrayMultipartPart.transferContentTo(io.netty.buffer.ByteBuf)"}, {"UPD": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.ByteArrayMultipartPart"}, {"UPD": 0, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.ByteArrayMultipartPart.lazyLoadContentBuffer()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.ByteArrayMultipartPart.transferContentTo(java.nio.channels.WritableByteChannel)"}], "spoonFilePath": "ByteArrayMultipartPart.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.FileLikePart.computeContentType(java.lang.String,java.lang.String)"}, {"UPD": 3, "TOT": 10, "MOV": 3, "INS": 2, "DEL": 2, "spoonMethodName": "org.asynchttpclient.request.body.multipart.FileLikePart"}, {"UPD": 0, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.FileLikePart.setFileName(java.lang.String)"}], "spoonFilePath": "FileLikePart.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPartTest.TestMultipartPart"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPartTest.TestFileLikePart"}], "spoonFilePath": "MultipartPartTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 2, "INS": 0, "DEL": 4, "spoonMethodName": "org.asynchttpclient.request.body.multipart.StringPart"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.StringPart.transferEncodingOrDefault(java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.StringPart.contentTypeOrDefault(java.lang.String)"}], "spoonFilePath": "StringPart.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.MultipartUtils.newMultipartBody(java.util.List,io.netty.handler.codec.http.HttpHeaders)"}, {"UPD": 2, "TOT": 6, "MOV": 0, "INS": 0, "DEL": 4, "spoonMethodName": "org.asynchttpclient.request.body.multipart.MultipartUtils.generateMultipartParts(java.util.List,byte[])"}], "spoonFilePath": "MultipartUtils.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPart"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPart.visitDispositionHeader(org.asynchttpclient.request.body.multipart.part.PartVisitor)"}], "spoonFilePath": "MultipartPart.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.ByteArrayPart"}], "spoonFilePath": "ByteArrayPart.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.FileLikeMultipartPart"}], "spoonFilePath": "FileLikeMultipartPart.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.FilePart"}], "spoonFilePath": "FilePart.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.FileMultipartPart"}], "spoonFilePath": "FileMultipartPart.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.StringMultipartPart"}], "spoonFilePath": "StringMultipartPart.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "965b67858e0835c374afd7d4c44186c27c363849", "authoredDateTime": "", "commitGHEventType": "closed", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1119", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "title": "multipart/form-data non-file parts shouldn't have a Content-Type header", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 0, "TOT": 0.0, "MOV": 0.0, "INS": 0.0, "DEL": 0.0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "From [HTML5 spec](https://www.w3.org/TR/html5/forms.html#form-submission-0):\n\n> 4.10.22.7 Multipart form data\n> The parts of the generated multipart/form-data resource that correspond to non-file fields must not have a Content-Type header specified.\n", "labels": ["Defect"]}, {"created": "2016-03-18 08:14:53", "commits": {"b8764d23b736a560dd80e87c709d23b1977b63fd": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "127b294073b05acf65a503d2a1fb2de88f61c4a1": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 2, "changesInPackagesSPOON": ["org.asynchttpclient.cookie.CookieUtil.validCookieNameOctets(java.util.BitSet)", "org.asynchttpclient.cookie.CookieUtil.validCookieValueOctets()", "com.ning.http.client.cookie.CookieUtil.validCookieNameOctets(java.util.BitSet)", "com.ning.http.client.cookie.CookieUtil.validCookieValueOctets()"], "closed": "2016-03-18 08:16:31", "filteredCommits": ["b8764d23b736a560dd80e87c709d23b1977b63fd", "127b294073b05acf65a503d2a1fb2de88f61c4a1"], "commitsDetails": [{"nameRev": "b8764d23b736a560dd80e87c709d23b1977b63fd tags/async-http-client-1.9.36~1", "commitMessage": "Fix allowed cookie values chars, backport #1115\n", "commitParents": ["e8ac29760526cb1c25055a508a9dd1e2939c1b30"], "spoonStatsSkippedReason": "", "commitHash": "b8764d23b736a560dd80e87c709d23b1977b63fd", "authoredDateTime": "2016-03-18 09:19:40", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 27, "deletions": 16, "lines": 43, "filePath": "src/main/java/com/ning/http/client/cookie/CookieUtil.java"}], "commitDateTime": "2016-03-18 09:19:40", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.cookie.CookieUtil.validCookieNameOctets(java.util.BitSet)"}, {"UPD": 1, "TOT": 15, "MOV": 7, "INS": 7, "DEL": 0, "spoonMethodName": "com.ning.http.client.cookie.CookieUtil.validCookieValueOctets()"}], "spoonFilePath": "CookieUtil.java"}]}, {"nameRev": "127b294073b05acf65a503d2a1fb2de88f61c4a1 tags/async-http-client-project-2.0.0-RC14~1", "commitMessage": "Fix allowed cookie values chars, close #1115\n", "commitParents": ["db577af8b5e8c10472e6ddaa5eafbc6008d1d285"], "spoonStatsSkippedReason": "", "commitHash": "127b294073b05acf65a503d2a1fb2de88f61c4a1", "authoredDateTime": "2016-03-18 09:16:26", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 27, "deletions": 16, "lines": 43, "filePath": "client/src/main/java/org/asynchttpclient/cookie/CookieUtil.java"}], "commitDateTime": "2016-03-18 09:16:26", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.cookie.CookieUtil.validCookieNameOctets(java.util.BitSet)"}, {"UPD": 1, "TOT": 15, "MOV": 7, "INS": 7, "DEL": 0, "spoonMethodName": "org.asynchttpclient.cookie.CookieUtil.validCookieValueOctets()"}], "spoonFilePath": "CookieUtil.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1115", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 54, "deletions": 32, "lines": 86, "gitFilesChange": 2}, "title": "! is missing from allowed cookie value chars", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/cookie", "client/src/main/java/org/asynchttpclient/cookie"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 4, "TOT": 34, "MOV": 14, "INS": 16, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "See https://github.com/playframework/playframework/issues/4460\n", "labels": ["Defect"]}, {"created": "2016-03-16 10:37:15", "user": "malaporte", "body": "Under load we noticed that we sometimes get unexplainable read timeouts on connections on some connections for which we can confirm that a successful response was indeed returned by the server.\n\nAfter a sizeable amount of investigation where we doubted everything ranging from our NATs to AWS ELBs, it turns out that sometimes `DefaultChannelPool` will close a connection that is in fact actively being used, causing and eventual read timeout in the code that waits for a result. This is because nothing prevents a channel that has been identified as expired from being handed out of the pool before it reaches the point where it is indeed closed. There is in fact a check there to prevent connections for which a Future is active from being closed, but this don't cover the case where the connection has been taken out of the pool but hasn't sent a request yet.\n\nWe get this problem in 1.9.33 but it also exists in the 2.0 version.\n\nI have implemented a fix for this; I'll be submitting a PR shortly.\n", "closed": "2016-03-16 19:37:40", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1113", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Defect", "Netty"], "title": "Race condition can cause Netty connection pool to close currently active connections"}, {"created": "2016-03-09 22:19:17", "user": "gmethvin", "body": "It seems like executing a request to a URI such as `HTTP://EXAMPLE.COM/` will try to send the request to port 443 rather than 80, resulting in various kinds of errors. This was originally reported as a Play Framework issue at playframework/playframework#5820.\n\nI created a project demonstrating the issue: https://github.com/gmethvin/asynchttpclient-uppercase\n\nThis seems to be fixed in 1.9 but I'm not sure fixing it was intentional. I didn't see any pull requests or issues mentioning the problem.\n", "closed": "2016-03-31 15:17:23", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1111", "ttf": 21.00027777777778, "commits": {}, "labels": ["Contributions Welcome!", "Defect", "Netty"], "title": "Uppercase URIs result in invalid requests (1.8 only)"}, {"created": "2016-03-08 15:54:18", "commits": {"e418d627107e1e797ea4d03e6b93e2a356ee995e": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.uri.UriParser.computeRegularPath()"], "closed": "2016-03-08 17:02:12", "filteredCommits": ["e418d627107e1e797ea4d03e6b93e2a356ee995e"], "commitsDetails": [{"nameRev": "e418d627107e1e797ea4d03e6b93e2a356ee995e tags/async-http-client-project-2.0.0-RC13~2", "commitMessage": "Handle relative urls when first character is not slash, close #1110\n", "commitParents": ["d6069368fb75491b0a19941c35990eea83d4a9fe"], "spoonStatsSkippedReason": "", "commitHash": "e418d627107e1e797ea4d03e6b93e2a356ee995e", "authoredDateTime": "2016-03-08 18:02:05", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/uri/UriParser.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/test/java/org/asynchttpclient/uri/UriParserTest.java"}, {"insertions": 85, "deletions": 43, "lines": 128, "filePath": "client/src/test/java/org/asynchttpclient/uri/UriTest.java"}], "commitDateTime": "2016-03-08 18:02:05", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithConsecutiveDotsFromLevel3Resource()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testQueryWithRootPathAndTrailingSlash()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testAbsoluteURIWithContext()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithAbsoluteConsecutiveDots()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriTest.tsetGetSchemeDefaultPortHttpScheme()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testQueryWithNonRootPathAndTrailingSlash()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriTest.tsetGetSchemeDefaultPortWebSocketScheme()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithAbsoluteDots()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithConsecutiveDotsAboveRoot()"}, {"UPD": 0, "TOT": 7, "MOV": 6, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithConsecutiveDotsFromRootResource()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithConsecutiveDotsFromRoot()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testNonRootRelativeURIWithNonRootContext()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testQueryWithRootPath()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testSimpleParsing()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithDots()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRootRelativeURIWithRootContext()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithDotsAboveRoot()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testQueryWithNonRootPath()"}, {"UPD": 0, "TOT": 7, "MOV": 6, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithConsecutiveDotsFromSubrootResource()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRootRelativeURIWithNonRootContext()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testNonRootRelativeURIWithRootContext()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriTest.testRelativeUriWithConsecutiveDots()"}], "spoonFilePath": "UriTest.java"}, {"spoonMethods": [], "spoonFilePath": "UriParserTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.computeRegularPath()"}], "spoonFilePath": "UriParser.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1110", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "Handling of relative 30X Location headers could be friendlier", "statsSkippedReason": "", "user": "jeremyhaile", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/uri"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "When loading this URL \"http://www.pollockdirect.com\" with followRedirect enabled, you receive the following error: `Java::JavaUtilConcurrent::ExecutionException: java.net.UnknownHostException: www.pollockdirect.comstorefront: nodename nor servname provided, or not known`\n\nThe headers that come back from that URL are:\n\n```\n< HTTP/1.1 301 Moved Permanently\n< Cache-Control: private\n< Content-Length: 0\n< Content-Type: text/html\n< Location: storefront/home?idAffiliate=\n```\n\nThe Location header is relative, which isn't technically correct based on the RFC. However, browsers handle this redirect just fine, and I think async-http-client should follow it the same way browsers do.\n\nIt appears that URI.create is appending \"storefront/home\" onto \"http://www.pollockdirect.com\" which results in \"http://www.pollockdirect.comstorefront/home\" which is obviously an invalid domain name. Instead it should follow it to \"http://www.pollockdirect.com/storefront/home\"\n", "labels": ["Defect"]}, {"created": "2016-03-06 06:13:25", "commits": {"088948a277fbc3ab8df32ad178d95562587c6902": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.initializeTransport(com.ning.http.client.AsyncHttpClientConfig).2.getTimeout(org.glassfish.grizzly.filterchain.FilterChainContext)", "com.ning.http.client.providers.grizzly.ConnectionManager.isReadyInPool(org.glassfish.grizzly.Connection)"], "closed": "2016-03-14 08:36:20", "filteredCommits": ["088948a277fbc3ab8df32ad178d95562587c6902"], "commitsDetails": [{"nameRev": "088948a277fbc3ab8df32ad178d95562587c6902 tags/async-http-client-1.9.34~1", "commitMessage": "+ related to the issue\nhttps://github.com/AsyncHttpClient/async-http-client/issues/1109", "commitParents": ["d500dd7351ee93f0c203582cf983e3b131e24968"], "spoonStatsSkippedReason": "", "commitHash": "088948a277fbc3ab8df32ad178d95562587c6902", "authoredDateTime": "2016-03-10 23:54:48", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 8, "deletions": 1, "lines": 9, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java"}, {"insertions": 6, "deletions": 0, "lines": 6, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/ConnectionManager.java"}], "commitDateTime": "2016-03-10 23:54:48", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 2, "INS": 4, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.initializeTransport(com.ning.http.client.AsyncHttpClientConfig).2.getTimeout(org.glassfish.grizzly.filterchain.FilterChainContext)"}], "spoonFilePath": "GrizzlyAsyncHttpProvider.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.ConnectionManager.isReadyInPool(org.glassfish.grizzly.Connection)"}], "spoonFilePath": "ConnectionManager.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1109", "ttf": 8.000277777777777, "gitStatsSummary": {"insertions": 14, "deletions": 1, "lines": 15, "gitFilesChange": 2}, "title": "Request timeout should be disabled once connection comes back to the pool", "statsSkippedReason": "", "user": "carryel", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/grizzly"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 7, "MOV": 2, "INS": 5, "DEL": 0, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I am using AHC v1.9.32 with grizzly provider(grizzly framework v2.3.24).\n\nAnd major configuration is the following:\n- pooledConnectionIdleTimeout: 300000 (5min)\n- requestTimeout: 1000 (1sec)\n- allowPoolingConnections: true\n- allowSslConnectionPools: true\n- connectionTTL: -1\n\nFirst, I expected http's idle-connection would be kept during 5min in pool but the connection would be always closed in about 1 sec.\n\nWhen I debugged, grizzly provider used IdleTimeoutFilter with requestTimeout and the timeout was applied at the connection regardless of connection pooling. So the idle connection would be closed in requestTimeout.\n\nGrizzly initializes the transport with IdleTimeoutFilter which has the request timeout.\nWhen a connection has been established, the filter has the timer with FOREVER-timeout and the timer has the request timeout at next steps. When the connection has been closed, the filter resets the timer. \n\nBut if we use connection pool, the connection is not closed until pool's idle timeout. So when the connection will be returned to the pool, the request timeout should be disabled.\n", "labels": ["Defect", "Grizzly"]}, {"created": "2016-03-03 14:15:08", "commits": {"4c8b39acc32cb47ecde03ef9cc0ad7e703d27701": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.util.Utf8UrlEncoder.encodeAndAppendQueryElement(java.lang.StringBuilder,java.lang.CharSequence)"], "closed": "2016-03-04 09:36:34", "filteredCommits": ["4c8b39acc32cb47ecde03ef9cc0ad7e703d27701"], "commitsDetails": [{"nameRev": "4c8b39acc32cb47ecde03ef9cc0ad7e703d27701 tags/async-http-client-project-2.0.0-RC12~6", "commitMessage": "Encode queryParams against form-url-encoded, close #1108\n", "commitParents": ["b060039ad9de8456f122978d2fcda0eda073118f"], "spoonStatsSkippedReason": "", "commitHash": "4c8b39acc32cb47ecde03ef9cc0ad7e703d27701", "authoredDateTime": "2016-03-04 10:36:27", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 2, "deletions": 4, "lines": 6, "filePath": "client/src/main/java/org/asynchttpclient/util/Utf8UrlEncoder.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/test/java/org/asynchttpclient/RequestBuilderTest.java"}], "commitDateTime": "2016-03-04 10:36:29", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.RequestBuilderTest"}], "spoonFilePath": "RequestBuilderTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.Utf8UrlEncoder.encodeAndAppendQueryElement(java.lang.StringBuilder,java.lang.CharSequence)"}], "spoonFilePath": "Utf8UrlEncoder.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1108", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 2, "deletions": 4, "lines": 6, "gitFilesChange": 1}, "title": "Encode queryParams against form-url-encoded", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/util"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "We currently encode against the unreserved chars. Actually, what people want is form-url-encoded.\nThe sole difference are that:\n- `*` is safe instead of `~`\n- use `%20` instead of `+` for encoding space, as Javascript still does that\n", "labels": ["Defect"]}, {"created": "2016-03-03 11:30:12", "user": "slandelle", "body": "According to [RFC3986](http://tools.ietf.org/html/rfc3986#section-3.4), `/` and `?` don't need to be percent-encoded.\n", "closed": "2016-03-03 14:12:57", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1107", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Defect"], "title": "\"/\" and \"?\" are safe query characters"}, {"created": "2016-02-16 16:19:56", "commits": {"c3a89209c2d3a5718aba2adc295c8ef733910703": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.handler.WebSocketHandler.UpgradeCallback.call()", "org.asynchttpclient.ws.WebSocketUpgradeHandler.onSuccess(org.asynchttpclient.ws.WebSocket)", "org.asynchttpclient.ws.WebSocketUpgradeHandler.bufferFrame(java.lang.Runnable)", "org.asynchttpclient.netty.handler.WebSocketHandler.handleRead(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Object)", "org.asynchttpclient.ws.WebSocketUpgradeHandler", "org.asynchttpclient.netty.handler.WebSocketHandler.handleFrame(io.netty.channel.Channel,io.netty.handler.codec.http.websocketx.WebSocketFrame,org.asynchttpclient.ws.WebSocketUpgradeHandler,org.asynchttpclient.netty.ws.NettyWebSocket)", "org.asynchttpclient.ws.WebSocketUpgradeHandler.onStatusReceived(org.asynchttpclient.HttpResponseStatus)", "org.asynchttpclient.ws.WebSocketUpgradeHandler.onCompleted()", "org.asynchttpclient.netty.channel.ChannelManager.upgradePipelineForWebSockets(io.netty.channel.ChannelPipeline)", "org.asynchttpclient.netty.handler.WebSocketHandler.invokeOnSucces(io.netty.channel.Channel,org.asynchttpclient.ws.WebSocketUpgradeHandler)"], "closed": "2016-02-16 20:52:03", "filteredCommits": ["c3a89209c2d3a5718aba2adc295c8ef733910703"], "commitsDetails": [{"nameRev": "c3a89209c2d3a5718aba2adc295c8ef733910703 tags/async-http-client-project-2.0.0-RC10~3", "commitMessage": "Handle WebSocket messages when they come in the same frame as the Upgrade response, close #1095\n", "commitParents": ["ceba30b66a03169b23eb6c64856777b0070613b3"], "spoonStatsSkippedReason": "", "commitHash": "c3a89209c2d3a5718aba2adc295c8ef733910703", "authoredDateTime": "2016-02-16 21:51:55", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/ChannelManager.java"}, {"insertions": 20, "deletions": 8, "lines": 28, "filePath": "client/src/main/java/org/asynchttpclient/ws/WebSocketUpgradeHandler.java"}, {"insertions": 59, "deletions": 39, "lines": 98, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/WebSocketHandler.java"}], "commitDateTime": "2016-02-16 21:51:55", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ws.WebSocketUpgradeHandler.onSuccess(org.asynchttpclient.ws.WebSocket)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ws.WebSocketUpgradeHandler.bufferFrame(java.lang.Runnable)"}, {"UPD": 3, "TOT": 13, "MOV": 6, "INS": 1, "DEL": 3, "spoonMethodName": "org.asynchttpclient.ws.WebSocketUpgradeHandler.onStatusReceived(org.asynchttpclient.HttpResponseStatus)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ws.WebSocketUpgradeHandler"}, {"UPD": 0, "TOT": 6, "MOV": 2, "INS": 2, "DEL": 2, "spoonMethodName": "org.asynchttpclient.ws.WebSocketUpgradeHandler.onCompleted()"}], "spoonFilePath": "WebSocketUpgradeHandler.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.WebSocketHandler.UpgradeCallback.call()"}, {"UPD": 1, "TOT": 8, "MOV": 2, "INS": 5, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.WebSocketHandler.handleRead(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Object)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.WebSocketHandler.handleFrame(io.netty.channel.Channel,io.netty.handler.codec.http.websocketx.WebSocketFrame,org.asynchttpclient.ws.WebSocketUpgradeHandler,org.asynchttpclient.netty.ws.NettyWebSocket)"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.WebSocketHandler.invokeOnSucces(io.netty.channel.Channel,org.asynchttpclient.ws.WebSocketUpgradeHandler)"}], "spoonFilePath": "WebSocketHandler.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.upgradePipelineForWebSockets(io.netty.channel.ChannelPipeline)"}], "spoonFilePath": "ChannelManager.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1095", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 80, "deletions": 48, "lines": 128, "gitFilesChange": 3}, "title": "WebSocket messages crash when they come in the same frame as the Upgrade", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/channel", "client/src/main/java/org/asynchttpclient/ws", "client/src/main/java/org/asynchttpclient/netty/handler"], "spoonStatsSummary": {"UPD": 4, "spoonMethodsChanged": 10, "TOT": 36, "MOV": 13, "INS": 14, "DEL": 5, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2016-01-29 15:17:25", "commits": {"35d5d9c1100905f81ee15657c96c1b2d6eb3d7b0": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.request.body.multipart.StringPart"], "closed": "2016-01-29 15:22:47", "filteredCommits": ["35d5d9c1100905f81ee15657c96c1b2d6eb3d7b0"], "commitsDetails": [{"nameRev": "35d5d9c1100905f81ee15657c96c1b2d6eb3d7b0 tags/async-http-client-project-2.0.0-RC8~3", "commitMessage": "Use HTML5 default form encoding, close #1090\n", "commitParents": ["eb1fbeaf863feb4bf24b546210f077e03e09dc8e"], "spoonStatsSkippedReason": "", "commitHash": "35d5d9c1100905f81ee15657c96c1b2d6eb3d7b0", "authoredDateTime": "2016-01-29 16:22:42", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/StringPart.java"}], "commitDateTime": "2016-01-29 16:22:42", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.StringPart"}], "spoonFilePath": "StringPart.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1090", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "title": "HTML5 changed default form encoding from US_ASCII to UTF-8", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/request/body/multipart"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2016-01-28 14:36:18", "commits": {"37fadf09ac394f38805b4e68f6ddc6a8b253a6f3": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.multipart.MultipartBody.writeCurrentBytes(java.nio.ByteBuffer,int)"], "closed": "2016-01-28 16:07:28", "filteredCommits": ["37fadf09ac394f38805b4e68f6ddc6a8b253a6f3"], "commitsDetails": [{"nameRev": "37fadf09ac394f38805b4e68f6ddc6a8b253a6f3 tags/async-http-client-1.9.33~1", "commitMessage": "Handle empty bytes multipart, close #1089\n", "commitParents": ["87fde248363e9552a8a917be60d376d16a6741c9"], "spoonStatsSkippedReason": "", "commitHash": "37fadf09ac394f38805b4e68f6ddc6a8b253a6f3", "authoredDateTime": "2016-01-28 17:07:17", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 6, "deletions": 0, "lines": 6, "filePath": "src/main/java/com/ning/http/client/multipart/MultipartBody.java"}], "commitDateTime": "2016-01-28 17:07:17", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.multipart.MultipartBody.writeCurrentBytes(java.nio.ByteBuffer,int)"}], "spoonFilePath": "MultipartBody.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1089", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 6, "deletions": 0, "lines": 6, "gitFilesChange": 1}, "title": "MultipartBody endless loop reading ByteArrayPart with empty byte array ", "statsSkippedReason": "", "user": "matterche", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/multipart"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi,\n\nWe're working with play framework 2.4.x and encounter problems when posting multipart form data to some webserver. Sometimes it happens that users upload empty files with size 0. In this case reading the Multipart body is stuck in an endless loop.\n\nI was able to reproduce this behavior with async-http-client-1.9.32:\n\n```\nfinal List<Part> parts = new ArrayList<>();\nbyte[] emptyByteAray = {};\nparts.add(new ByteArrayPart(\"baPart\", emptyByteAray, \"application/test\", UTF_8, \"fileName\"));\nfinal Body multipartBody = MultipartUtils.newMultipartBody(parts, new FluentCaseInsensitiveStringsMap());\nfinal ByteBuffer buffer = ByteBuffer.allocate(8192);\n    try {\n        multipartBody.read(buffer);\n    } catch (IOException e) {\n        e.printStackTrace();\n    }\n```\n\nI've also tested with async-http-client-project-2.0.0-RC7 and could not reproduce the issue anymore.\n\nWould you mind providing a fix for 1.9.x?\n", "labels": ["Defect", "Netty"]}, {"created": "2016-01-26 15:37:46", "user": "SudhanshuBhatt", "body": "**UPDATE:**\n**I tried the AHC 1.9.32 and 2.0.0-RC7, and was able to narrow it down to the following observations:**\n\n**1. Both versions will work with Squid proxy server, if I do not enable authentication.**\n**2. Both the versions fail if I make authentication mandatory.**\n\n**Version 1.9.32: Results in the Invalid Status Code 400 error.**\n**Version 2.0.0-RC7 : Results in a timeout after a default 6000ms.**\n\nLibrary in use: AsyncHtpClient Library: \nVersion : 1.9.32 and 2.0.0-RC7\nNetty Version : 3.10.3.Final\nProxy: Squid Proxy\n\nI am trying to create a websocket connection using AsyncHttpClient library. It works fine when using without the proxy. But when I start a proxy and pass in the Host, port, username and password , I am unable to create a websocket connection.\nIt get a stack trace which says Invalid Status Code 400:\n\nI am setting the proxy configurations using Realm in AHC:\n\nFor 1.9.32:\n\n``` java\nRealm realm = new Realm.RealmBuilder().setPrincipal(\"user_name\").setPassword(\"password\").setScheme(Realm.AuthScheme.BASIC).build();\nProxyServer ps1 = new ProxyServer(\"host_address\", port_number);\nps1.setScheme(Realm.AuthScheme.BASIC);\nAsyncHttpClientConfig config = new AsyncHttpClientConfig.Builder().setRealm(realm).setProxyServer(ps1).build();\nfinal AsyncHttpClient c = new AsyncHttpClient(config);\n```\n\nFor 2.0.0-RC7:\n\n``` java\nRealm realm = new Realm.Builder(\"user_name\", \"password\").setScheme(Realm.AuthScheme.BASIC).build();\nProxyServer.Builder proxyBuilder = new ProxyServer.Builder(\"host_address\", port_number);\nproxyBuilder.setRealm(realm);\nProxyServer proxyServer = proxyBuilder.build();\nAsyncHttpClientConfig config = new DefaultAsyncHttpClientConfig.Builder().setProxyServer(proxyServer).build();\nfinal AsyncHttpClient c = new DefaultAsyncHttpClient(config);\n```\n\nAm I not configuring the Proxy correctly?\n", "closed": "2016-02-03 11:42:43", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1088", "ttf": 7.000277777777778, "commits": {}, "labels": ["Defect"], "title": "Exception creating WebSocket Connection from a Java Client behind a proxy"}, {"created": "2016-01-11 18:19:05", "commits": {"ef1429b31968bf0aaa345f6201f4648dd5e85b2e": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "78ef5cf7941ecf55f8a38ffbdf8d0332078936bc": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.ProxyPartitionKey.equals(java.lang.Object)", "com.ning.http.client.ProxyPartitionKey.hashCode()"], "closed": "2016-01-11 18:34:24", "filteredCommits": ["ef1429b31968bf0aaa345f6201f4648dd5e85b2e"], "commitsDetails": [{"nameRev": "ef1429b31968bf0aaa345f6201f4648dd5e85b2e tags/async-http-client-1.9.32~1", "commitMessage": "Implement ProxyPartitionKey equals and hashcode, close #1079\n", "commitParents": ["2c3e12a6af0cf255476f7fc2ee8dcfbb2b3422df"], "spoonStatsSkippedReason": "", "commitHash": "ef1429b31968bf0aaa345f6201f4648dd5e85b2e", "authoredDateTime": "2016-01-11 19:36:43", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 31, "deletions": 0, "lines": 31, "filePath": "src/main/java/com/ning/http/client/ConnectionPoolPartitioning.java"}], "commitDateTime": "2016-01-11 19:36:46", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.ProxyPartitionKey.equals(java.lang.Object)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.ProxyPartitionKey.hashCode()"}], "spoonFilePath": "ConnectionPoolPartitioning.java"}]}, {"nameRev": "78ef5cf7941ecf55f8a38ffbdf8d0332078936bc tags/async-http-client-project-2.0.0-RC7~2", "commitMessage": "Implement ProxyPartitionKey equals and hashcode, close #1079\n", "commitParents": ["c9e31e2df89ecb7f4426e295305b2dc00a17582c"], "spoonStatsSkippedReason": "", "commitHash": "78ef5cf7941ecf55f8a38ffbdf8d0332078936bc", "authoredDateTime": "2016-01-11 19:34:16", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 37, "deletions": 0, "lines": 37, "filePath": "client/src/main/java/org/asynchttpclient/channel/ChannelPoolPartitioning.java"}], "commitDateTime": "2016-01-11 19:34:16", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.channel.ProxyPartitionKey.hashCode()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.channel.ProxyPartitionKey.equals(java.lang.Object)"}], "spoonFilePath": "ChannelPoolPartitioning.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1079", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 31, "deletions": 0, "lines": 31, "gitFilesChange": 1}, "title": "ProxyPartitionKey does not implement hashCode or equals and is used in a hash map.", "statsSkippedReason": "", "user": "aiman-alsari", "changesInPackagesGIT": ["src/main/java/com/ning/http/client"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "We are using 1.9.31 and seeing many many debug statements every minute, e.g.\n\n```\nDEBUG default    c.n.h.c.p.n.c.p.DefaultChannelPool - Closed 0 connections out of 0 in 0ms\n2016-01-11_18:02:53.12600 2016-01-11 18:02:53.125 DEBUG default    c.n.h.c.p.n.c.p.DefaultChannelPool - Entry count for : ProxyPartitionKey(proxyUrl=https://proxy:3128, targetHostBaseUrl=https://test:443 : 0\n2016-01-11_18:02:53.12608 2016-01-11 18:02:53.125 DEBUG default    c.n.h.c.p.n.c.p.DefaultChannelPool - Entry count for : ProxyPartitionKey(proxyUrl=https://proxy:3128, targetHostBaseUrl=https://test:443 : 0\n2016-01-11_18:02:53.12610 2016-01-11 18:02:53.126 DEBUG default    c.n.h.c.p.n.c.p.DefaultChannelPool - Entry count for : ProxyPartitionKey(proxyUrl=https://proxy:3128, targetHostBaseUrl=https://test:443 : 0\n```\n\nThis grows every time there is a successful connection. I believe this is because the key being used does not implement either hashCode() or equals()\n", "labels": ["Defect", "Netty"]}, {"created": "2016-01-05 16:03:34", "commits": {"4a1f68927ba31fec3b047432843cb625bd58f730": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.handler.intercept.Interceptors.intercept(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.HttpResponseStatus,org.asynchttpclient.HttpResponseHeaders)", "org.asynchttpclient.netty.handler.WebSocketHandler.handleRead(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Object)", "org.asynchttpclient.netty.handler.HttpHandler.handleHttpResponse(io.netty.handler.codec.http.HttpResponse,io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler)", "org.asynchttpclient.netty.handler.HttpHandler.exitAfterHandler(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.AsyncHandler,org.asynchttpclient.netty.NettyResponseStatus,io.netty.handler.codec.http.HttpRequest,org.asynchttpclient.HttpResponseHeaders)", "org.asynchttpclient.netty.handler.HttpHandler.handleRead(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Object)", "org.asynchttpclient.netty.handler.HttpHandler.readFailed(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Throwable)"], "closed": "2016-01-05 16:03:51", "filteredCommits": ["4a1f68927ba31fec3b047432843cb625bd58f730"], "commitsDetails": [{"nameRev": "4a1f68927ba31fec3b047432843cb625bd58f730 tags/async-http-client-project-2.0.0-RC6~7", "commitMessage": "Handle Netty 4's HttpObject.getDecoderResult().cause(), close #1072\n", "commitParents": ["bd03b19db71cec2a04fd3b4ebc6a65d61727c98e"], "spoonStatsSkippedReason": "", "commitHash": "4a1f68927ba31fec3b047432843cb625bd58f730", "authoredDateTime": "2016-01-05 17:03:45", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 27, "deletions": 15, "lines": 42, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/HttpHandler.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/intercept/Interceptors.java"}, {"insertions": 2, "deletions": 3, "lines": 5, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/WebSocketHandler.java"}], "commitDateTime": "2016-01-05 17:03:45", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 11, "MOV": 8, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.handler.WebSocketHandler.handleRead(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Object)"}], "spoonFilePath": "WebSocketHandler.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.intercept.Interceptors.intercept(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.HttpResponseStatus,org.asynchttpclient.HttpResponseHeaders)"}], "spoonFilePath": "Interceptors.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 18, "MOV": 15, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.handleHttpResponse(io.netty.handler.codec.http.HttpResponse,io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.exitAfterHandler(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.AsyncHandler,org.asynchttpclient.netty.NettyResponseStatus,io.netty.handler.codec.http.HttpRequest,org.asynchttpclient.HttpResponseHeaders)"}, {"UPD": 0, "TOT": 5, "MOV": 2, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.handleRead(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Object)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpHandler.readFailed(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Throwable)"}], "spoonFilePath": "HttpHandler.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1072", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 30, "deletions": 19, "lines": 49, "gitFilesChange": 3}, "title": "Handle Netty 4's HttpObject.getDecoderResult().cause()", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/handler/intercept", "client/src/main/java/org/asynchttpclient/netty/handler"], "spoonStatsSummary": {"UPD": 4, "spoonMethodsChanged": 6, "TOT": 38, "MOV": 25, "INS": 5, "DEL": 4, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "new way of getting notified of parsing failure\n", "labels": ["Defect"]}, {"created": "2016-01-05 09:30:56", "commits": {"bd03b19db71cec2a04fd3b4ebc6a65d61727c98e": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.uri.UriParser.handleRelativePath()", "org.asynchttpclient.uri.UriParser.initRelativePath()"], "closed": "2016-01-05 09:31:23", "filteredCommits": ["bd03b19db71cec2a04fd3b4ebc6a65d61727c98e"], "commitsDetails": [{"nameRev": "bd03b19db71cec2a04fd3b4ebc6a65d61727c98e tags/async-http-client-project-2.0.0-RC6~8", "commitMessage": "Fix Uri create(Uri, String) path dots handling, close #1071\n", "commitParents": ["01c0a98ff3ec1dc64bb0e018ff2ffa3e753e8e54"], "spoonStatsSkippedReason": "", "commitHash": "bd03b19db71cec2a04fd3b4ebc6a65d61727c98e", "authoredDateTime": "2016-01-05 10:31:16", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 2, "deletions": 6, "lines": 8, "filePath": "client/src/main/java/org/asynchttpclient/uri/UriParser.java"}], "commitDateTime": "2016-01-05 10:31:16", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.uri.UriParser.handleRelativePath()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriParser.initRelativePath()"}], "spoonFilePath": "UriParser.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1071", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 2, "deletions": 6, "lines": 8, "gitFilesChange": 1}, "title": "Uri create(Uri, String) doesn't handle with path dots", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/uri"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 2, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2016-01-04 16:04:44", "commits": {"889493027308869bedf846d0e2c005d3f882b76a": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "458f3910b8aa53399242bda9c8bebbbd669c17a7": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 2, "changesInPackagesSPOON": ["org.asynchttpclient.util.MiscUtils.getCause(java.lang.Throwable)", "org.asynchttpclient.netty.handler.AsyncHttpClientHandler.exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)", "org.asynchttpclient.netty.request.NettyRequestSender.sendNextRequest(org.asynchttpclient.Request,org.asynchttpclient.netty.NettyResponseFuture)"], "closed": "2016-01-06 10:52:24", "filteredCommits": ["458f3910b8aa53399242bda9c8bebbbd669c17a7", "889493027308869bedf846d0e2c005d3f882b76a"], "commitsDetails": [{"nameRev": "889493027308869bedf846d0e2c005d3f882b76a tags/async-http-client-project-2.0.0-RC6~12", "commitMessage": "Channel can be null when crash happened just after connecting, see #1070\n", "commitParents": ["458f3910b8aa53399242bda9c8bebbbd669c17a7"], "spoonStatsSkippedReason": "", "commitHash": "889493027308869bedf846d0e2c005d3f882b76a", "authoredDateTime": "2016-01-04 19:26:44", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 5, "deletions": 1, "lines": 6, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java"}], "commitDateTime": "2016-01-04 19:26:44", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 3, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.sendNextRequest(org.asynchttpclient.Request,org.asynchttpclient.netty.NettyResponseFuture)"}], "spoonFilePath": "NettyRequestSender.java"}]}, {"nameRev": "458f3910b8aa53399242bda9c8bebbbd669c17a7 tags/async-http-client-project-2.0.0-RC6~13", "commitMessage": "We could be notified of the root exception, not always a wrapping one, see #1070\n", "commitParents": ["858448fcaf18fc60440ed0612475657e2309d17d"], "spoonStatsSkippedReason": "", "commitHash": "458f3910b8aa53399242bda9c8bebbbd669c17a7", "authoredDateTime": "2016-01-04 19:26:11", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/AsyncHttpClientHandler.java"}, {"insertions": 2, "deletions": 1, "lines": 3, "filePath": "client/src/main/java/org/asynchttpclient/util/MiscUtils.java"}], "commitDateTime": "2016-01-04 19:26:11", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.AsyncHttpClientHandler.exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)"}], "spoonFilePath": "AsyncHttpClientHandler.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 1, "INS": 3, "DEL": 1, "spoonMethodName": "org.asynchttpclient.util.MiscUtils.getCause(java.lang.Throwable)"}], "spoonFilePath": "MiscUtils.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1070", "ttf": 1.0002777777777778, "gitStatsSummary": {"insertions": 8, "deletions": 3, "lines": 11, "gitFilesChange": 3}, "title": "NettyResponseFuture can wait indefinitely?", "statsSkippedReason": "", "user": "jon-ruckwood", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request", "client/src/main/java/org/asynchttpclient/util", "client/src/main/java/org/asynchttpclient/netty/handler"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 3, "TOT": 13, "MOV": 5, "INS": 5, "DEL": 3, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "A http request was made days ago, the thread dump indicates that it was waiting - there may have been an unknown issue with the upstream server when the request was in progress:\n\n```\nFoo-1 id=19 state=WAITING\n    - waiting on <0x55f017db> (a java.util.concurrent.CountDownLatch$Sync)\n    - locked <0x55f017db> (a java.util.concurrent.CountDownLatch$Sync)\n    at sun.misc.Unsafe.park(Native Method)\n    at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\n    at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)\n    at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997)\n    at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304)\n    at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:231)\n    at com.ning.http.client.providers.netty.future.NettyResponseFuture.get(NettyResponseFuture.java:152)\n    ...\n```\n\nNothing in the logs indicates an error/exception was encountered by async-http-client (logging is set to `INFO`). \n\nI am using version `1.9.15` and I am creating the client as such:\n\n``` java\nAsyncHttpClient client = new AsyncHttpClient();\n```\n\nI appreciate there's not much to go on but do you know what may have happened here? \n\nI'm considering using `NettyResponseFuture#get(long l, TimeUnit tu)` instead but I would have thought that something would have aborted processing given the time involved? \n\nThanks in advance.\n", "labels": ["Defect", "Netty"]}, {"created": "2015-12-23 21:31:33", "commits": {"dfc01fa651da2fb5b1d55911d7b95c72129da926": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.request.NettyRequestSender.scheduleReadTimeout(org.asynchttpclient.netty.NettyResponseFuture)"], "closed": "2015-12-23 21:31:57", "filteredCommits": ["dfc01fa651da2fb5b1d55911d7b95c72129da926"], "commitsDetails": [{"nameRev": "dfc01fa651da2fb5b1d55911d7b95c72129da926 tags/async-http-client-project-2.0.0-RC5~1", "commitMessage": "Fix NPE on scheduleReadTimeout on fast requests, close #1068\n", "commitParents": ["e862eceefcd59d9cca473282fb1973181898ed7f"], "spoonStatsSkippedReason": "", "commitHash": "dfc01fa651da2fb5b1d55911d7b95c72129da926", "authoredDateTime": "2015-12-23 22:31:49", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 6, "deletions": 2, "lines": 8, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java"}], "commitDateTime": "2015-12-23 22:31:49", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 2, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.scheduleReadTimeout(org.asynchttpclient.netty.NettyResponseFuture)"}], "spoonFilePath": "NettyRequestSender.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1068", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 6, "deletions": 2, "lines": 8, "gitFilesChange": 1}, "title": "NPE on scheduleReadTimeout on fast requests", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 3, "MOV": 2, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2015-12-22 13:11:52", "commits": {"2c3e12a6af0cf255476f7fc2ee8dcfbb2b3422df": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.grizzly.HttpTransactionContext.cleanupTransaction(org.glassfish.grizzly.http.HttpContext)", "com.ning.http.client.ws.grizzly.ResponseRefLeak"], "closed": "2015-12-23 17:52:40", "filteredCommits": ["2c3e12a6af0cf255476f7fc2ee8dcfbb2b3422df"], "commitsDetails": [{"nameRev": "2c3e12a6af0cf255476f7fc2ee8dcfbb2b3422df tags/async-http-client-1.9.32~2", "commitMessage": "+ fix issue #1067\nhttps://github.com/AsyncHttpClient/async-http-client/issues/1067\n\"GrizzlyResponse object reachable from SelectorRunner thread local\"", "commitParents": ["f6fd24c385e65cf537c9e2c02a00de999db76d88"], "spoonStatsSkippedReason": "", "commitHash": "2c3e12a6af0cf255476f7fc2ee8dcfbb2b3422df", "authoredDateTime": "2015-12-23 00:08:18", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 0, "lines": 1, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/HttpTransactionContext.java"}, {"insertions": 76, "deletions": 0, "lines": 76, "filePath": "src/test/java/com/ning/http/client/ws/grizzly/ResponseRefLeak.java"}], "commitDateTime": "2015-12-23 00:08:43", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.ws.grizzly.ResponseRefLeak"}], "spoonFilePath": "ResponseRefLeak.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.HttpTransactionContext.cleanupTransaction(org.glassfish.grizzly.http.HttpContext)"}], "spoonFilePath": "HttpTransactionContext.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1067", "ttf": 1.0002777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 0, "lines": 1, "gitFilesChange": 1}, "title": "GrizzlyResponse object reachable from SelectorRunner thread local", "statsSkippedReason": "", "user": "elrodro83", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/grizzly"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi,\n\nWe are using grizzly through AHC to perform some HTTP requests. After those requests have finished, in a thread dump i can still see the response objects being referenced, and not being garbage collected. Attached is a screenshot of there references from a heap dump:\n\n![screen shot 2015-12-22 at 9 37 37 am](https://cloud.githubusercontent.com/assets/8010105/11955732/211f42b4-a893-11e5-8885-4c7eb7553764.png)\n\nIn a case where the size of the transferred data is big, i see some heavy memory usage.\n\nThe problem seems to be with the reference chain TCPNIOConnection -> IndexedAttributeHolder -> $Snapshot -> HttpTransactionContext. Perhaps at least one of those references should be discarded after the request has completed, or provide a way to an app to clear that.\n\nThe following test can reproduce this issue.\n\n```\n    @Test\n    public void referencedResponseHC() throws InterruptedException\n    {\n        AsyncHttpClientConfig config = new AsyncHttpClientConfig.Builder().build();\n        AsyncHttpClient client = new AsyncHttpClient(new GrizzlyAsyncHttpProvider(config), config);\n\n        final CountDownLatch responseLatch = new CountDownLatch(1);\n        final AtomicReference<Response> responseRef = new AtomicReference<>();\n\n        client.prepareGet(\"http://www.ning.com/\").execute(new AsyncCompletionHandler<Response>()\n        {\n\n            @Override\n            public Response onCompleted(Response response) throws Exception\n            {\n                responseLatch.countDown();\n                responseRef.set(response);\n                return response;\n            }\n\n            @Override\n            public void onThrowable(Throwable t)\n            {\n                // Something wrong happened.\n            }\n        });\n\n        responseLatch.await(5, TimeUnit.SECONDS);\n        verifyNotLeaked(new PhantomReference<>(responseRef.getAndSet(null), new ReferenceQueue<>()));\n    }\n\n    private void verifyNotLeaked(PhantomReference possibleLeakPhantomRef) throws InterruptedException\n    {\n        for (int i = 0; i < 10; ++i)\n        {\n            System.gc();\n            Thread.sleep(100);\n            if (possibleLeakPhantomRef.isEnqueued())\n            {\n                break;\n            }\n        }\n        assertTrue(possibleLeakPhantomRef.isEnqueued());\n    }\n```\n\nThanks in advance,\n", "labels": ["Defect", "Grizzly"]}, {"created": "2015-12-22 08:50:18", "user": "slandelle", "body": "", "closed": "2016-02-03 12:54:57", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1066", "ttf": 43.000277777777775, "commits": {}, "labels": ["Defect", "Netty"], "title": "NettyRequestSender fails to send request via proxy after 407 error code when trying to connect a WebSocket"}, {"created": "2015-12-18 17:27:47", "user": "dfeist", "body": "Because GrizzlyAsyncHttpProvider uses IdleTimeoutFilter for handling responseTimeout and this uses a  different DelayedExecutor instance to that used by SingleEndpointPool.KeepAliveCleaner a race condition can occur when two different threads attempt to close/cleanup connections at the same time.  The result is that one thread (KeepAliveCleaner) gets stuck in an infinite loop while all other threads are blocked; both those attempting to do a take() as well as the thread used for the IdleTimoutFilter that is blocked on 'poolSync' because the other thread is still has this lock.\n\nDisabling keepAlive by setting a negative timeout avoids this issue of course.\n\n//cc @oleksiys \n\nThe two threads of interest are:\n\n**\"connection-pool-delays-thread-pool(1)\"** daemon prio=10 tid=0x00007ffaf14bc800 nid=0xb3 runnable [0x00007ffaee356000]\n   java.lang.Thread.State: RUNNABLE\n    at org.glassfish.grizzly.nio.NIOConnection.closeSilently(NIOConnection.java:495)\n    at org.glassfish.grizzly.connectionpool.SingleEndpointPool.cleanupIdleConnections(SingleEndpointPool.java:1106)\n    - locked <0x00000000e3c84800> (a java.lang.Object)\n    at org.glassfish.grizzly.connectionpool.SingleEndpointPool$KeepAliveCleaner.doWork(SingleEndpointPool.java:1395)\n\n**\"Grizzly-IdleTimeoutFilter-IdleCheck\"** daemon prio=10 tid=0x00007ffaf14bb800 nid=0xb2 waiting for monitor entry [0x00007ffaee457000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n    at org.glassfish.grizzly.connectionpool.SingleEndpointPool$PoolConnectionCloseListener.onClosed(SingleEndpointPool.java:1330)\n    - waiting to lock <0x00000000e3c84800> (a java.lang.Object)\n    at org.glassfish.grizzly.connectionpool.SingleEndpointPool$PoolConnectionCloseListener.onClosed(SingleEndpointPool.java:1323)\n    at org.glassfish.grizzly.nio.NIOConnection.invokeCloseListener(NIOConnection.java:955)\n    at org.glassfish.grizzly.nio.NIOConnection.notifyCloseListeners(NIOConnection.java:828)\n    at org.glassfish.grizzly.nio.NIOConnection.terminate0(NIOConnection.java:561)\n    at org.glassfish.grizzly.nio.transport.TCPNIOConnection.terminate0(TCPNIOConnection.java:291)\n    at org.glassfish.grizzly.nio.NIOConnection$3.completed(NIOConnection.java:524)\n    at org.glassfish.grizzly.nio.NIOConnection$3.completed(NIOConnection.java:520)\n    at org.glassfish.grizzly.asyncqueue.AsyncWriteQueueRecord.notifyCompleteAndRecycle(AsyncWriteQueueRecord.java:173)\n    at org.glassfish.grizzly.nio.AbstractNIOAsyncQueueWriter.write(AbstractNIOAsyncQueueWriter.java:279)\n    at org.glassfish.grizzly.nio.AbstractNIOAsyncQueueWriter.write(AbstractNIOAsyncQueueWriter.java:169)\n    at org.glassfish.grizzly.nio.AbstractNIOAsyncQueueWriter.write(AbstractNIOAsyncQueueWriter.java:71)\n    at org.glassfish.grizzly.AbstractWriter.write(AbstractWriter.java:76)\n    at org.glassfish.grizzly.nio.NIOConnection.closeGracefully0(NIOConnection.java:519)\n    at org.glassfish.grizzly.nio.NIOConnection.closeWithReason(NIOConnection.java:500)\n    at com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.timeout(GrizzlyAsyncHttpProvider.java:431)\n", "closed": "2015-12-29 07:28:49", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1062", "ttf": 10.000277777777777, "commits": {}, "labels": ["Defect", "Grizzly"], "title": "Race condition when using Grizzly provider causes SingleEndpointPool to block completely."}, {"created": "2015-12-16 22:31:28", "commits": {"e1ec1d1a0043b82d547347e72848307c399a13e0": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.request.NettyRequestSender.sendNextRequest(org.asynchttpclient.Request,org.asynchttpclient.netty.NettyResponseFuture)"], "closed": "2015-12-16 22:32:11", "filteredCommits": ["e1ec1d1a0043b82d547347e72848307c399a13e0"], "commitsDetails": [{"nameRev": "e1ec1d1a0043b82d547347e72848307c399a13e0 tags/async-http-client-project-2.0.0-RC3~2", "commitMessage": "Fix race condition on connection reuse, close #1059\n", "commitParents": ["7c140df8286f92fce3173fa7724d6aeb3498d81f"], "spoonStatsSkippedReason": "", "commitHash": "e1ec1d1a0043b82d547347e72848307c399a13e0", "authoredDateTime": "2015-12-16 23:32:05", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 1, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java"}], "commitDateTime": "2015-12-16 23:32:05", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.sendNextRequest(org.asynchttpclient.Request,org.asynchttpclient.netty.NettyResponseFuture)"}], "spoonFilePath": "NettyRequestSender.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1059", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 3, "deletions": 1, "lines": 4, "gitFilesChange": 1}, "title": "Race condition when channel gets closed during a reuse before sending next request", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "This happens because the future is still set on the channel so AHC tries to recover or abort it.\n", "labels": ["Defect"]}, {"created": "2015-12-16 21:46:19", "commits": {"7c140df8286f92fce3173fa7724d6aeb3498d81f": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.handler.HttpProtocol.exitAfterHandling401(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm,org.asynchttpclient.proxy.ProxyServer,io.netty.handler.codec.http.HttpRequest)", "org.asynchttpclient.netty.handler.HttpProtocol.exitAfterHandling407(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.proxy.ProxyServer,io.netty.handler.codec.http.HttpRequest)"], "closed": "2015-12-16 21:46:40", "filteredCommits": ["7c140df8286f92fce3173fa7724d6aeb3498d81f"], "commitsDetails": [{"nameRev": "7c140df8286f92fce3173fa7724d6aeb3498d81f tags/async-http-client-project-2.0.0-RC3~3", "commitMessage": "Honor Connection headers when deciding to reuse channel on 401 and 407, close #1058\n", "commitParents": ["e95a48ea93978b00a274d6deb15e4c605b6c6132"], "spoonStatsSkippedReason": "", "commitHash": "7c140df8286f92fce3173fa7724d6aeb3498d81f", "authoredDateTime": "2015-12-16 22:46:31", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 12, "deletions": 2, "lines": 14, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/HttpProtocol.java"}], "commitDateTime": "2015-12-16 22:46:31", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 3, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpProtocol.exitAfterHandling401(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm,org.asynchttpclient.proxy.ProxyServer,io.netty.handler.codec.http.HttpRequest)"}, {"UPD": 0, "TOT": 6, "MOV": 3, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpProtocol.exitAfterHandling407(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.proxy.ProxyServer,io.netty.handler.codec.http.HttpRequest)"}], "spoonFilePath": "HttpProtocol.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1058", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 12, "deletions": 2, "lines": 14, "gitFilesChange": 1}, "title": "Honor Connection headers when deciding to reuse channel on 401 and 407", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/handler"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 12, "MOV": 6, "INS": 4, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Also honor `Proxy-Connection` header on 407, even if it's broken.\n", "labels": ["Defect"]}, {"created": "2015-12-08 14:32:54", "user": "IskanderMustafin", "body": "Hello, I have a problem with using proxy servers in 1.9.x branch of AsyncHttpClient.\n\nI'm setting proxy server, and it works OK with HTTP protocol, but when I'm requesting HTTPS pages proxy isn't used (it uses my local IP, not proxy IP address). \n\nThis is example code I'm using:  \n\n```\nprivate AsyncHttpClientConfig cfg = new AsyncHttpClientConfig.Builder( ).\n                setConnectTimeout( 20000 ).\n                setRequestTimeout( 20000 ).\n                setWebSocketTimeout(20000).\n                setMaxRequestRetry(3).\n                setReadTimeout( 20000 ).\n                setAcceptAnyCertificate( true ).\n                build( )\n\n   private AsyncHttpClient  client = new AsyncHttpClient( cfg )\n\n\n  client.prepareGet( url ).\n                 setProxyServer( new ProxyServer( ProxyServer.Protocol.HTTP, \"myproxyurl\", 2222, \"principal\", \"password\" ) ).\n                 execute( ).\n                 get()\n```\n", "closed": "2016-05-19 22:10:06", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1054", "ttf": 163.00027777777777, "commits": {}, "labels": ["Defect", "Netty"], "title": "Non preemptive proxy auth is broken over HTTPS (1.9 only)"}, {"created": "2015-12-08 07:56:01", "commits": {"afee07dbd0acdc5fe702cb8acd4ca2650d60e984": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2015-12-08 07:56:24", "filteredCommits": [], "commitsDetails": [{"nameRev": "afee07dbd0acdc5fe702cb8acd4ca2650d60e984 tags/async-http-client-1.9.32~4", "commitMessage": "Revert back #909, close #1053\n", "commitParents": ["0b6e419f6e5dfdc197aea3a4d6bb4da933d3f4cf"], "spoonStatsSkippedReason": "", "commitHash": "afee07dbd0acdc5fe702cb8acd4ca2650d60e984", "authoredDateTime": "2015-12-08 08:56:11", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestFactory.java"}], "commitDateTime": "2015-12-08 08:56:11", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.newNettyRequest(com.ning.http.client.Request,com.ning.http.client.uri.Uri,boolean,com.ning.http.client.ProxyServer)"}], "spoonFilePath": "NettyRequestFactory.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1053", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Revert back #909", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2015-11-27 13:06:08", "commits": {"fecb1167f056447bbc9e53ff989bf27c638fe978": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.NettyResponseFuture.getChannelRemoteAddress()", "org.asynchttpclient.netty.timeout.TimeoutTimerTask"], "closed": "2015-11-27 13:07:13", "filteredCommits": ["fecb1167f056447bbc9e53ff989bf27c638fe978"], "commitsDetails": [{"nameRev": "fecb1167f056447bbc9e53ff989bf27c638fe978 tags/async-http-client-project-2.0.0-RC1~3", "commitMessage": "Fix race condition causing NPE, close #1049\n", "commitParents": ["2e81bcc6cbfe04312a9b9d997bedfd3730e151b0"], "spoonStatsSkippedReason": "", "commitHash": "fecb1167f056447bbc9e53ff989bf27c638fe978", "authoredDateTime": "2015-11-27 14:07:06", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 4, "deletions": 2, "lines": 6, "filePath": "client/src/main/java/org/asynchttpclient/netty/timeout/TimeoutTimerTask.java"}, {"insertions": 0, "deletions": 5, "lines": 5, "filePath": "client/src/main/java/org/asynchttpclient/netty/NettyResponseFuture.java"}], "commitDateTime": "2015-11-27 14:07:06", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.getChannelRemoteAddress()"}], "spoonFilePath": "NettyResponseFuture.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 7, "MOV": 2, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.timeout.TimeoutTimerTask"}], "spoonFilePath": "TimeoutTimerTask.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1049", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 4, "deletions": 7, "lines": 11, "gitFilesChange": 2}, "title": "Race condition causing NPE when a timeout gets scheduled as the ResponseFuture gets terminated", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty", "client/src/main/java/org/asynchttpclient/netty/timeout"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 2, "TOT": 8, "MOV": 2, "INS": 2, "DEL": 2, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "```\njava.lang.NullPointerException: null\n    at org.asynchttpclient.netty.NettyResponseFuture.getChannelRemoteAddress(NettyResponseFuture.java:414) ~[async-http-client-2.0.0-alpha27.jar:na]\n    at org.asynchttpclient.netty.timeout.TimeoutTimerTask.<init>(TimeoutTimerTask.java:42) ~[async-http-client-2.0.0-alpha27.jar:na]\n    at org.asynchttpclient.netty.timeout.RequestTimeoutTimerTask.<init>(RequestTimeoutTimerTask.java:31) ~[async-http-client-2.0.0-alpha27.jar:na]\n    at org.asynchttpclient.netty.request.NettyRequestSender.scheduleTimeouts(NettyRequestSender.java:365) [async-http-client-2.0.0-alpha27.jar:na]\n    at org.asynchttpclient.netty.request.NettyRequestSender.writeRequest(NettyRequestSender.java:346) [async-http-client-2.0.0-alpha27.jar:na]\n    at org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithOpenChannel(NettyRequestSender.java:228) [async-http-client-2.0.0-alpha27.jar:na]\n    at org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithCertainForceConnect(NettyRequestSender.java:139) [async-http-client-2.0.0-alpha27.jar:na]\n    at org.asynchttpclient.netty.request.NettyRequestSender.sendRequest(NettyRequestSender.java:112) [async-http-client-2.0.0-alpha27.jar:na]\n    at org.asynchttpclient.DefaultAsyncHttpClient.execute(DefaultAsyncHttpClient.java:220) [async-http-client-2.0.0-alpha27.jar:na]\n    at org.asynchttpclient.DefaultAsyncHttpClient.executeRequest(DefaultAsyncHttpClient.java:188) [async-http-client-2.0.0-alpha27.jar:na]\n```\n", "labels": ["Defect"]}, {"created": "2015-11-26 12:33:32", "commits": {"2e81bcc6cbfe04312a9b9d997bedfd3730e151b0": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.cookie.CookieEncoder.encode(java.util.Collection)", "org.asynchttpclient.cookie.CookieEncoder"], "closed": "2015-11-26 12:34:26", "filteredCommits": ["2e81bcc6cbfe04312a9b9d997bedfd3730e151b0"], "commitsDetails": [{"nameRev": "2e81bcc6cbfe04312a9b9d997bedfd3730e151b0 tags/async-http-client-project-2.0.0-RC1~4", "commitMessage": "Sort cookies as per FRC6265, close #1048\n", "commitParents": ["0e805db9adf1d4e041f5c64de7eec7ed1f1da6b4"], "spoonStatsSkippedReason": "", "commitHash": "2e81bcc6cbfe04312a9b9d997bedfd3730e151b0", "authoredDateTime": "2015-11-26 13:34:20", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 47, "deletions": 4, "lines": 51, "filePath": "client/src/main/java/org/asynchttpclient/cookie/CookieEncoder.java"}], "commitDateTime": "2015-11-26 13:34:20", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.cookie.CookieEncoder.encode(java.util.Collection)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.cookie.CookieEncoder"}], "spoonFilePath": "CookieEncoder.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1048", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 47, "deletions": 4, "lines": 51, "gitFilesChange": 1}, "title": "As per RFC6295, cookies sorted be sorted", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/cookie"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 5, "MOV": 2, "INS": 2, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "> The user agent SHOULD sort the cookie-list in the following\n>        order:\n>        \\*  Cookies with longer paths are listed before cookies with\n>           shorter paths.\n>        \\*  Among cookies that have equal-length path fields, cookies with\n>           earlier creation-times are listed before cookies with later\n>           creation-times.\n", "labels": ["Defect"]}, {"created": "2015-11-10 11:23:23", "commits": {"5b358ec3fb46941f6765cfb111083adc7f523829": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2015-11-25 01:17:16", "filteredCommits": ["5b358ec3fb46941f6765cfb111083adc7f523829"], "commitsDetails": [{"nameRev": "5b358ec3fb46941f6765cfb111083adc7f523829 tags/async-http-client-project-2.0.0-alpha27~2", "commitMessage": "Upgrade Jetty 9.3, close #1035\n", "commitParents": ["07f3237e6cf5dd1cdec26065bc3141af6858c912"], "spoonStatsSkippedReason": "", "commitHash": "5b358ec3fb46941f6765cfb111083adc7f523829", "authoredDateTime": "2015-11-25 02:17:10", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/test/java/org/asynchttpclient/proxy/ProxyTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "pom.xml"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/test/java/org/asynchttpclient/test/TestUtils.java"}], "commitDateTime": "2015-11-25 02:17:10", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.test.TestUtils"}], "spoonFilePath": "TestUtils.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.proxy.ProxyTest.ProxyHandler.handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"}], "spoonFilePath": "ProxyTest.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1035", "ttf": 14.000277777777777, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Test failures w/ Jetty 9.3", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "When trying to upgrade test suite to Jetty 9.3, some tests fail randomly (racy).\n\nSymptom is that the connection gets closed without Netty reading the response.\nThis is either a Netty (4.0.33.Final) bug or a Jetty one.\n", "labels": ["Defect"]}, {"created": "2015-11-05 11:29:14", "commits": {"1667bd4a37c4703233034deb04086cc29b9ccdb4": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.request.body.multipart.part.MessageEndMultipartPart.close()", "org.asynchttpclient.request.body.multipart.part.MessageEndMultipartPart.computePostContentBytes()", "org.asynchttpclient.request.body.multipart.part.ByteArrayMultipartPart.transferContentTo(java.nio.channels.WritableByteChannel)", "org.asynchttpclient.request.body.multipart.part.ByteArrayMultipartPart", "org.asynchttpclient.request.body.multipart.part.MessageEndMultipartPart", "org.asynchttpclient.request.body.multipart.part.MultipartPart.computePreContentBytes(int)", "org.asynchttpclient.request.body.multipart.part.ByteArrayMultipartPart.lazyLoadContentBuffer()", "org.asynchttpclient.request.body.multipart.part.CounterPartVisitor", "org.asynchttpclient.request.body.multipart.part.MultipartPart.lazyLoadPreContentBuffer()", "org.asynchttpclient.request.body.multipart.part.MultipartPart.computePreContentBytes()", "org.asynchttpclient.request.body.multipart.part.MultipartPart.length()", "org.asynchttpclient.request.body.multipart.part.ByteArrayMultipartPart.transferContentTo(io.netty.buffer.ByteBuf)", "org.asynchttpclient.request.body.multipart.part.MultipartPart.computePreContentLength()", "org.asynchttpclient.request.body.multipart.part.MultipartPart.close()", "org.asynchttpclient.request.body.multipart.part.MultipartPart.transferTo(java.nio.channels.WritableByteChannel)", "org.asynchttpclient.request.body.multipart.part.MessageEndMultipartPart.computePreContentBytes(int)", "org.asynchttpclient.request.body.multipart.part.MessageEndMultipartPart.transferTo(io.netty.buffer.ByteBuf)", "org.asynchttpclient.request.body.multipart.part.MultipartPart", "org.asynchttpclient.request.body.multipart.part.MessageEndMultipartPart.computePostContentBytes(int)", "org.asynchttpclient.request.body.multipart.part.MultipartPart.lazyLoadPostContentBuffer()", "org.asynchttpclient.request.body.multipart.part.MultipartPart.transferTo(io.netty.buffer.ByteBuf)", "org.asynchttpclient.request.body.multipart.part.MessageEndMultipartPart.computePreContentBytes()", "org.asynchttpclient.request.body.multipart.part.MultipartPart.computePostContentBytes()", "org.asynchttpclient.request.body.multipart.part.MultipartPart.computePostContentBytes(int)", "org.asynchttpclient.request.body.multipart.part.MessageEndMultipartPart.computePostContentLength()", "org.asynchttpclient.request.body.multipart.part.MessageEndMultipartPart.computePreContentLength()", "org.asynchttpclient.request.body.multipart.part.MessageEndMultipartPart.lazyLoadContentBuffer()", "org.asynchttpclient.request.body.multipart.part.MessageEndMultipartPart.transferTo(java.nio.channels.WritableByteChannel)", "org.asynchttpclient.request.body.multipart.part.MultipartPart.computePostContentLength()", "org.asynchttpclient.request.body.multipart.part.CounterPartVisitor.getCount()"], "closed": "2015-11-05 11:29:59", "filteredCommits": ["1667bd4a37c4703233034deb04086cc29b9ccdb4"], "commitsDetails": [{"nameRev": "1667bd4a37c4703233034deb04086cc29b9ccdb4 tags/async-http-client-project-2.0.0-alpha22~1", "commitMessage": "Lazy load multipart ByteBuf, close #1030\n", "commitParents": ["f6087a41143063dae72b1cf7f77575ac3f0cf106"], "spoonStatsSkippedReason": "", "commitHash": "1667bd4a37c4703233034deb04086cc29b9ccdb4", "authoredDateTime": "2015-11-05 12:29:53", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/PartVisitor.java"}, {"insertions": 12, "deletions": 24, "lines": 36, "filePath": "client/src/test/java/org/asynchttpclient/request/body/multipart/MultipartBodyTest.java"}, {"insertions": 27, "deletions": 8, "lines": 35, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/MessageEndMultipartPart.java"}, {"insertions": 12, "deletions": 5, "lines": 17, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/ByteArrayMultipartPart.java"}, {"insertions": 39, "deletions": 25, "lines": 64, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/MultipartPart.java"}], "commitDateTime": "2015-11-05 12:29:53", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.CounterPartVisitor"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.CounterPartVisitor.getCount()"}], "spoonFilePath": "PartVisitor.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.MultipartBodyTest.testBasics()"}, {"UPD": 5, "TOT": 11, "MOV": 2, "INS": 0, "DEL": 4, "spoonMethodName": "org.asynchttpclient.request.body.multipart.MultipartBodyTest.compareContentLength(java.util.List)"}, {"UPD": 1, "TOT": 6, "MOV": 1, "INS": 1, "DEL": 3, "spoonMethodName": "org.asynchttpclient.request.body.multipart.MultipartBodyTest.getTestfile()"}], "spoonFilePath": "MultipartBodyTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 5, "MOV": 1, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MessageEndMultipartPart.close()"}, {"UPD": 0, "TOT": 7, "MOV": 4, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MessageEndMultipartPart.transferTo(io.netty.buffer.ByteBuf)"}, {"UPD": 0, "TOT": 2, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MessageEndMultipartPart.computePostContentBytes()"}, {"UPD": 2, "TOT": 7, "MOV": 3, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MessageEndMultipartPart.transferTo(java.nio.channels.WritableByteChannel)"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MessageEndMultipartPart.computePreContentBytes()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MessageEndMultipartPart.computePreContentLength()"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MessageEndMultipartPart.lazyLoadContentBuffer()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MessageEndMultipartPart.computePostContentBytes(int)"}, {"UPD": 4, "TOT": 16, "MOV": 8, "INS": 1, "DEL": 3, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MessageEndMultipartPart"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MessageEndMultipartPart.computePreContentBytes(int)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MessageEndMultipartPart.computePostContentLength()"}], "spoonFilePath": "MessageEndMultipartPart.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.ByteArrayMultipartPart.transferContentTo(io.netty.buffer.ByteBuf)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.ByteArrayMultipartPart"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.ByteArrayMultipartPart.transferContentTo(java.nio.channels.WritableByteChannel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.ByteArrayMultipartPart.lazyLoadContentBuffer()"}], "spoonFilePath": "ByteArrayMultipartPart.java"}, {"spoonMethods": [{"UPD": 4, "TOT": 16, "MOV": 7, "INS": 3, "DEL": 2, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPart"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPart.lazyLoadPostContentBuffer()"}, {"UPD": 0, "TOT": 4, "MOV": 2, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPart.transferTo(io.netty.buffer.ByteBuf)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPart.computePreContentBytes(int)"}, {"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPart.length()"}, {"UPD": 1, "TOT": 6, "MOV": 4, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPart.computePostContentBytes()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPart.computePostContentBytes(int)"}, {"UPD": 1, "TOT": 6, "MOV": 4, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPart.computePreContentBytes()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPart.lazyLoadPreContentBuffer()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPart.computePreContentLength()"}, {"UPD": 0, "TOT": 4, "MOV": 2, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPart.close()"}, {"UPD": 0, "TOT": 4, "MOV": 2, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPart.transferTo(java.nio.channels.WritableByteChannel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.part.MultipartPart.computePostContentLength()"}], "spoonFilePath": "MultipartPart.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1030", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 80, "deletions": 40, "lines": 120, "gitFilesChange": 4}, "title": "ByteBuf leak when multipart request fails to be sent", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/request/body/multipart/part"], "spoonStatsSummary": {"UPD": 16, "spoonMethodsChanged": 30, "TOT": 106, "MOV": 43, "INS": 34, "DEL": 13, "spoonFilesChanged": 4}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "ByteBufs should be lazily loaded only once the request is indeed on the wire.\n", "labels": ["Defect"]}, {"created": "2015-11-04 10:01:00", "commits": {"6ec8869964cb726a38017e4027d1f1caabd2fda3": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "2a8e14709152e0a2de47f651a19d1ede82aaeefa": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 2, "changesInPackagesSPOON": ["org.asynchttpclient.netty.request.body.BodyChunkedInput.readChunk(io.netty.channel.ChannelHandlerContext)"], "closed": "2016-01-05 19:56:44", "filteredCommits": ["6ec8869964cb726a38017e4027d1f1caabd2fda3", "2a8e14709152e0a2de47f651a19d1ede82aaeefa"], "commitsDetails": [{"nameRev": "6ec8869964cb726a38017e4027d1f1caabd2fda3 tags/async-http-client-project-2.0.0-RC6~6", "commitMessage": "Release buffer when ChunkedInput is suspended, close #1029\n", "commitParents": ["4a1f68927ba31fec3b047432843cb625bd58f730"], "spoonStatsSkippedReason": "", "commitHash": "6ec8869964cb726a38017e4027d1f1caabd2fda3", "authoredDateTime": "2016-01-05 20:56:34", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 0, "lines": 1, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/body/BodyChunkedInput.java"}], "commitDateTime": "2016-01-05 20:56:34", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.body.BodyChunkedInput.readChunk(io.netty.channel.ChannelHandlerContext)"}], "spoonFilePath": "BodyChunkedInput.java"}]}, {"nameRev": "2a8e14709152e0a2de47f651a19d1ede82aaeefa tags/async-http-client-project-2.0.0-RC2~15", "commitMessage": "Use default ByteBufAllocator instead of context's one, see #1029\n", "commitParents": ["a70031fe4da2c2d94715e3db67ac51af8d8ffaaa"], "spoonStatsSkippedReason": "", "commitHash": "2a8e14709152e0a2de47f651a19d1ede82aaeefa", "authoredDateTime": "2015-12-04 12:47:44", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 1, "lines": 3, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/body/BodyChunkedInput.java"}], "commitDateTime": "2015-12-04 12:47:44", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.request.body.BodyChunkedInput.readChunk(io.netty.channel.ChannelHandlerContext)"}], "spoonFilePath": "BodyChunkedInput.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1029", "ttf": 62.000277777777775, "gitStatsSummary": {"insertions": 3, "deletions": 1, "lines": 4, "gitFilesChange": 1}, "title": "FeedableBodyGenerator - LEAK: ByteBuf.release() was not called before it's garbage-collected.", "statsSkippedReason": "", "user": "mielientiev", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request/body"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 3, "MOV": 0, "INS": 2, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "When I use custom FeedableBodyGenerator or SimpleFeedableBodyGenerator I see the next error message:\n\n[error] i.n.u.ResourceLeakDetector - LEAK: ByteBuf.release() was not called before it's garbage-collected. Enable advanced leak reporting to find out where the leak occurred. To enable advanced leak reporting, specify the JVM option '-Dio.netty.leakDetection.level=advanced' or call ResourceLeakDetector.setLevel() See http://netty.io/wiki/reference-counted-objects.html for more information.\n\nI guess the main problem is here:\nhttps://github.com/netty/netty/blob/4.0/transport/src/main/java/io/netty/channel/AbstractChannelHandlerContext.java#L990-L992\nthey just assign null to message, but should also call 'release' (ReferenceCountUtil.release(msg);)\nAm I right?\n", "labels": ["Defect"]}, {"created": "2015-11-03 12:41:10", "commits": {"23136826ed77a852e9011fe6de8d973cbc9dc22d": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.request.body.NettyBodyBody.write(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture)"], "closed": "2015-11-03 12:50:47", "filteredCommits": ["23136826ed77a852e9011fe6de8d973cbc9dc22d"], "commitsDetails": [{"nameRev": "23136826ed77a852e9011fe6de8d973cbc9dc22d tags/async-http-client-project-2.0.0-alpha22~3", "commitMessage": "Fix custom FeedableBodyGenerator support, close #1028\n", "commitParents": ["6be404f041271fc7fca71a3136fbbf28d46346bc"], "spoonStatsSkippedReason": "", "commitHash": "23136826ed77a852e9011fe6de8d973cbc9dc22d", "authoredDateTime": "2015-11-03 13:50:42", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 4, "deletions": 3, "lines": 7, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/body/NettyBodyBody.java"}], "commitDateTime": "2015-11-03 13:50:42", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 6, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.request.body.NettyBodyBody.write(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture)"}], "spoonFilePath": "NettyBodyBody.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1028", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 4, "deletions": 3, "lines": 7, "gitFilesChange": 1}, "title": "Problem with custom FeedableBodyGenerator.", "statsSkippedReason": "", "user": "mielientiev", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request/body"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 1, "TOT": 6, "MOV": 2, "INS": 1, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hello\nI want to implement my custom FeedableBodyGenerator, but the problem is that it suspends forever (timeout) when I return BodyState.SUSPEND from transferTo method.\nAfter a while, I've found out that the resumeTransfer method wasn't called because you add this callback only for the SimpleFeedableBodyGenerator\nhttps://github.com/AsyncHttpClient/async-http-client/blob/master/client/src/main/java/org/asynchttpclient/netty/request/body/NettyBodyBody.java#L70-L79\n\nHow can I implement my custom FeedableBodyGenerator with 'resumeTransfer' method feature?\n", "labels": ["Defect"]}, {"created": "2015-11-03 05:34:26", "user": "wsargent", "body": "If you create 1000 requests in a very short time frame and use connection pool with AsyncHttpClient 1.9.21 and Netty 3.10.1, then some sockets will leak and stay open even past the idle socket reaper.  This was initially filed as https://github.com/playframework/playframework/issues/5215, but can be replicated without Play WS.\n\nCreated a reproducing test case here: https://github.com/wsargent/asynchttpclient-socket-leak\n\nif you have 50 requests, then they'll all be closed immediately.\nif you have 1000 requests, they'll stay open for a while.\nAfter roughly two minutes, AHC will close off all idle sockets, but up to 30 will never die and will always be established.\n\nTo see the dangling sockets, run the id of the java process:\n\n```\nsudo lsof -i | grep 31602\n```\n\nYou'll see\n\n```\njava      31602       wsargent   89u  IPv6 0xe1b25a8062380645      0t0  TCP 192.168.1.106:58646->ec2-54-173-126-144.compute-1.amazonaws.com:https (ESTABLISHED)\n```\n\nThe client port number is your key into the application: if you search for \"58646\" in application.log, then you'll see that there's a connection associated with it:\n\n```\n2015-11-02 20:41:38,496 [DEBUG] from org.jboss.netty.handler.logging.LoggingHandler in New I/O worker #1 - [id: 0x5650b318, /192.168.1.106:58646 => playframework.com/54.173.126.144:443] RECEIVED: BigEndianHeapChannelBuffer(ridx=0, widx=2357, cap=2357)\n```\n\nYou can see the lifecycle of a handle by using grep:\n\n```\ngrep \"0x5650b318\" application.log\n```\n\nand what's interesting is that while most ids will have a `CLOSE` / `CLOSED` lifecycle associated with them:\n\n```\n2015-11-02 20:41:45,878 [DEBUG] from org.jboss.netty.handler.logging.LoggingHandler in Hashed wheel timer #1 - [id: 0x34804fcc, /192.168.1.106:59122 => playframework.com/54.173.126.144:443] WRITE: BigEndianHeapChannelBuffer(ridx=0, widx=69, cap=69)\n2015-11-02 20:41:46,427 [DEBUG] from org.jboss.netty.handler.logging.LoggingHandler in New I/O worker #2 - [id: 0x34804fcc, /192.168.1.106:59122 => playframework.com/54.173.126.144:443] CLOSE\n2015-11-02 20:41:46,427 [DEBUG] from org.jboss.netty.handler.logging.LoggingHandler in New I/O worker #2 - [id: 0x34804fcc, /192.168.1.106:59122 :> playframework.com/54.173.126.144:443] DISCONNECTED\n2015-11-02 20:41:46,434 [DEBUG] from org.jboss.netty.handler.logging.LoggingHandler in New I/O worker #2 - [id: 0x34804fcc, /192.168.1.106:59122 :> playframework.com/54.173.126.144:443] UNBOUND\n2015-11-02 20:41:46,434 [DEBUG] from org.jboss.netty.handler.logging.LoggingHandler in New I/O worker #2 - [id: 0x34804fcc, /192.168.1.106:59122 :> playframework.com/54.173.126.144:443] CLOSED\n```\n\nIn the case of \"0x5650b318\", there's no CLOSE event happening here.  In addition, there's a couple of lines that say it's a cached channel:\n\n```\n2015-11-02 20:41:33,340 [DEBUG] from com.ning.http.client.providers.netty.request.NettyRequestSender in default-akka.actor.default-dispatcher-4 - Using cached Channel [id: 0x5650b318, /192.168.1.106:58646 => playframework.com/54.173.126.144:443]\n2015-11-02 20:41:33,340 [DEBUG] from com.ning.http.client.providers.netty.request.NettyRequestSender in default-akka.actor.default-dispatcher-4 - Using cached Channel [id: 0x5650b318, /192.168.1.106:58646 => playframework.com/54.173.126.144:443]\n```\n\nSo I think Netty is not closing cached channels even if they are idle, in some circumstances.\n", "closed": "2016-03-23 13:54:12", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1027", "ttf": 141.00027777777777, "commits": {}, "labels": ["Contributions Welcome!", "Defect", "Netty"], "title": "AsyncHttpClient does not close sockets under heavy load (1.9 only)"}, {"created": "2015-10-26 10:29:34", "commits": {"1f1826c5362dfbc3231ce8d66e2633a73b18d69a": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "closed": "2015-10-26 23:32:31", "filteredCommits": ["1f1826c5362dfbc3231ce8d66e2633a73b18d69a"], "commitsDetails": [{"nameRev": "1f1826c5362dfbc3231ce8d66e2633a73b18d69a tags/async-http-client-project-2.0.0-alpha18~1", "commitMessage": "Fix multipart zero-copy thread usage fairness, close #1018\n", "commitParents": ["5d79c278247ec3ade39e1b28f60bcf83a5ff95f1"], "spoonStatsSkippedReason": "tooManyFiles", "commitHash": "1f1826c5362dfbc3231ce8d66e2633a73b18d69a", "authoredDateTime": "2015-10-27 00:32:24", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/request/body/generator/ByteArrayBodyGenerator.java"}, {"insertions": 36, "deletions": 0, "lines": 36, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/ByteArrayMultipartPart.java"}, {"insertions": 1, "deletions": 36, "lines": 37, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/StringPart.java"}, {"insertions": 2, "deletions": 26, "lines": 28, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/ByteArrayPart.java"}, {"insertions": 57, "deletions": 127, "lines": 184, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/MultipartUtils.java"}, {"insertions": 64, "deletions": 0, "lines": 64, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/MessageEndMultipartPart.java"}, {"insertions": 0, "deletions": 34, "lines": 34, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/CounterPartVisitor.java"}, {"insertions": 2, "deletions": 41, "lines": 43, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/{AbstractFilePart.java => FileLikePart.java}"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/request/body/Body.java"}, {"insertions": 61, "deletions": 177, "lines": 238, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/MultipartBody.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/request/body/generator/SimpleFeedableBodyGenerator.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/body/BodyChunkedInput.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "client/src/test/java/org/asynchttpclient/request/body/generator/FeedableBodyGeneratorTest.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/request/body/generator/ReactiveStreamsBodyGenerator.java"}, {"insertions": 2, "deletions": 66, "lines": 68, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/FilePart.java"}, {"insertions": 63, "deletions": 0, "lines": 63, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/FileMultipartPart.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "client/src/test/java/org/asynchttpclient/request/body/generators/ByteArrayBodyGeneratorTest.java"}, {"insertions": 12, "deletions": 0, "lines": 12, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/MultipartState.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/FilePartStallHandler.java"}, {"insertions": 12, "deletions": 15, "lines": 27, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/Part.java"}, {"insertions": 0, "deletions": 21, "lines": 21, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/PartVisitor.java"}, {"insertions": 294, "deletions": 0, "lines": 294, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/MultipartPart.java"}, {"insertions": 21, "deletions": 116, "lines": 137, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/PartBase.java"}, {"insertions": 60, "deletions": 0, "lines": 60, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/part/PartVisitor.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/request/body/generator/InputStreamBodyGenerator.java"}, {"insertions": 0, "deletions": 42, "lines": 42, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/OutputStreamPartVisitor.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/test/java/org/asynchttpclient/request/body/multipart/MultipartBodyTest.java"}], "commitDateTime": "2015-10-27 00:32:24", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1018", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 696, "deletions": 710, "lines": 1406, "gitFilesChange": 24}, "title": "FilePart.write thread usage is not fair", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/request/body/multipart", "client/src/main/java/org/asynchttpclient/request/body/multipart/part", "client/src/main/java/org/asynchttpclient/request/body/generator", "client/src/main/java/org/asynchttpclient/netty/request/body", "client/src/main/java/org/asynchttpclient/request/body"], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "`FilePart.write` loops until it could write the whole file, instead of letting `NioSocketChannel` deal with the loop, and possibly give a chance to other channels in the eventloop to run if the file upload lasts too many spins.\n", "labels": ["Defect"]}, {"created": "2015-10-16 18:51:18", "commits": {"54def5ad043ea8af8beb2aa820f2c0efa9fc1980": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.multipart.MultipartBody.transferTo(long,java.nio.channels.WritableByteChannel)"], "closed": "2015-10-16 18:52:48", "filteredCommits": ["54def5ad043ea8af8beb2aa820f2c0efa9fc1980"], "commitsDetails": [{"nameRev": "54def5ad043ea8af8beb2aa820f2c0efa9fc1980 tags/async-http-client-1.9.32~6", "commitMessage": "Fix Multipart over HTTP, close #1013\n", "commitParents": ["ffe5390e2863904d1308395403506b9c6f95b505"], "spoonStatsSkippedReason": "", "commitHash": "54def5ad043ea8af8beb2aa820f2c0efa9fc1980", "authoredDateTime": "2015-10-16 20:51:48", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 3, "lines": 6, "filePath": "src/main/java/com/ning/http/client/multipart/MultipartBody.java"}], "commitDateTime": "2015-10-16 20:51:48", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.multipart.MultipartBody.transferTo(long,java.nio.channels.WritableByteChannel)"}], "spoonFilePath": "MultipartBody.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1013", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 1}, "title": "Multipart is broken over HTTP", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/multipart"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2015-10-16 18:49:12", "commits": {"21cff98730d7f590cd63461d4ba4dac6db0d6a14": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.request.body.multipart.MultipartBody.transferTo(long,java.nio.channels.WritableByteChannel)", "org.asynchttpclient.request.body.multipart.MultipartBody.read(java.nio.ByteBuffer)", "org.asynchttpclient.netty.request.body.BodyChunkedInput.readChunk(io.netty.channel.ChannelHandlerContext)"], "closed": "2015-10-16 18:49:56", "filteredCommits": ["21cff98730d7f590cd63461d4ba4dac6db0d6a14"], "commitsDetails": [{"nameRev": "21cff98730d7f590cd63461d4ba4dac6db0d6a14 tags/async-http-client-project-2.0.0-alpha17~23", "commitMessage": "Fix multipart, close #1012\n", "commitParents": ["db745f819355e85734d3635ae80f4e6de69b3765"], "spoonStatsSkippedReason": "", "commitHash": "21cff98730d7f590cd63461d4ba4dac6db0d6a14", "authoredDateTime": "2015-10-16 20:49:48", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 19, "deletions": 18, "lines": 37, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/body/BodyChunkedInput.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/request/body/multipart/MultipartBody.java"}], "commitDateTime": "2015-10-16 20:49:48", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.request.body.multipart.MultipartBody.transferTo(long,java.nio.channels.WritableByteChannel)"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.request.body.multipart.MultipartBody.read(java.nio.ByteBuffer)"}], "spoonFilePath": "MultipartBody.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 7, "MOV": 3, "INS": 2, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.request.body.BodyChunkedInput.readChunk(io.netty.channel.ChannelHandlerContext)"}], "spoonFilePath": "BodyChunkedInput.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/1012", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 21, "deletions": 20, "lines": 41, "gitFilesChange": 2}, "title": "Multipart is broken in 2.0.0-alpha16", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/request/body/multipart", "client/src/main/java/org/asynchttpclient/netty/request/body"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 3, "TOT": 10, "MOV": 4, "INS": 3, "DEL": 3, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2015-10-12 11:33:17", "commits": {"696c37201e7547dc1bc086e620a3e70a2e2704bd": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2015-10-12 11:47:39", "filteredCommits": [], "commitsDetails": [{"nameRev": "696c37201e7547dc1bc086e620a3e70a2e2704bd tags/async-http-client-project-2.0.0-alpha15~17", "commitMessage": "Drop ProxyServer.Protocol, close #998, close #997\n", "commitParents": ["1cf409bdbbfdbab44dd49c870aecb03413e4ece2"], "spoonStatsSkippedReason": "", "commitHash": "696c37201e7547dc1bc086e620a3e70a2e2704bd", "authoredDateTime": "2015-10-12 13:47:31", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 6, "deletions": 35, "lines": 41, "filePath": "client/src/main/java/org/asynchttpclient/proxy/ProxyServer.java"}, {"insertions": 6, "deletions": 4, "lines": 10, "filePath": "client/src/main/java/org/asynchttpclient/simple/SimpleAsyncHttpClient.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/test/java/org/asynchttpclient/ws/ProxyTunnellingTest.java"}, {"insertions": 15, "deletions": 23, "lines": 38, "filePath": "client/src/main/java/org/asynchttpclient/util/ProxyUtils.java"}], "commitDateTime": "2015-10-12 13:47:31", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.ws.ProxyTunnellingTest.runTest(boolean)"}], "spoonFilePath": "ProxyTunnellingTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.proxy.ProxyServer.getProtocol()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.proxy.ProxyServer.Protocol"}, {"UPD": 6, "TOT": 18, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.proxy.ProxyServer"}], "spoonFilePath": "ProxyServer.java"}, {"spoonMethods": [{"UPD": 5, "TOT": 5, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.simple.SimpleAsyncHttpClient.Builder.setProxyProtocol(org.asynchttpclient.proxy.ProxyServer$Protocol)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.simple.SimpleAsyncHttpClient.Builder.build()"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.simple.SimpleAsyncHttpClient.Builder"}], "spoonFilePath": "SimpleAsyncHttpClient.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 10, "MOV": 2, "INS": 4, "DEL": 2, "spoonMethodName": "org.asynchttpclient.util.ProxyUtils.createProxyServerSelector(java.util.Properties)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.ProxyUtils.createProxyServerSelector(java.net.ProxySelector).1.select(org.asynchttpclient.uri.Uri)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.util.ProxyUtils"}], "spoonFilePath": "ProxyUtils.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/998", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Drop ProxyServer.Protocol", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "This is a mess, as it mixes up protocols (HTTP) and auth schemes (BASIC, NTLM and the likes).\nRegarding protocols, valid values would be HTTP and SOCKS, which we don't currently support.\nRegarding auth scheme, we have... [Realm.AuthScheme](https://github.com/AsyncHttpClient/async-http-client/blob/async-http-client-project-2.0.0-alpha14/client/src/main/java/org/asynchttpclient/Realm.java#L62)!\n\nLet's drop `ProxyServer.Protocol` and use `Realm.AuthScheme` instead.\n", "labels": ["Defect"]}, {"created": "2015-10-12 07:12:57", "commits": {"696c37201e7547dc1bc086e620a3e70a2e2704bd": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "7136391a0529c074b09271036d1f076ec2a28ec6": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2015-10-13 10:37:13", "filteredCommits": [], "commitsDetails": [{"nameRev": "696c37201e7547dc1bc086e620a3e70a2e2704bd tags/async-http-client-project-2.0.0-alpha15~17", "commitMessage": "Drop ProxyServer.Protocol, close #998, close #997\n", "commitParents": ["1cf409bdbbfdbab44dd49c870aecb03413e4ece2"], "spoonStatsSkippedReason": "", "commitHash": "696c37201e7547dc1bc086e620a3e70a2e2704bd", "authoredDateTime": "2015-10-12 13:47:31", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 6, "deletions": 35, "lines": 41, "filePath": "client/src/main/java/org/asynchttpclient/proxy/ProxyServer.java"}, {"insertions": 6, "deletions": 4, "lines": 10, "filePath": "client/src/main/java/org/asynchttpclient/simple/SimpleAsyncHttpClient.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/test/java/org/asynchttpclient/ws/ProxyTunnellingTest.java"}, {"insertions": 15, "deletions": 23, "lines": 38, "filePath": "client/src/main/java/org/asynchttpclient/util/ProxyUtils.java"}], "commitDateTime": "2015-10-12 13:47:31", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.ws.ProxyTunnellingTest.runTest(boolean)"}], "spoonFilePath": "ProxyTunnellingTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.proxy.ProxyServer.getProtocol()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.proxy.ProxyServer.Protocol"}, {"UPD": 6, "TOT": 18, "MOV": 3, "INS": 2, "DEL": 7, "spoonMethodName": "org.asynchttpclient.proxy.ProxyServer"}], "spoonFilePath": "ProxyServer.java"}, {"spoonMethods": [{"UPD": 5, "TOT": 5, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.simple.SimpleAsyncHttpClient.Builder.setProxyProtocol(org.asynchttpclient.proxy.ProxyServer$Protocol)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.simple.SimpleAsyncHttpClient.Builder.build()"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.simple.SimpleAsyncHttpClient.Builder"}], "spoonFilePath": "SimpleAsyncHttpClient.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 10, "MOV": 2, "INS": 4, "DEL": 2, "spoonMethodName": "org.asynchttpclient.util.ProxyUtils.createProxyServerSelector(java.util.Properties)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.ProxyUtils.createProxyServerSelector(java.net.ProxySelector).1.select(org.asynchttpclient.uri.Uri)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.util.ProxyUtils"}], "spoonFilePath": "ProxyUtils.java"}]}, {"nameRev": "7136391a0529c074b09271036d1f076ec2a28ec6 tags/async-http-client-project-2.0.0-alpha15~13", "commitMessage": "Fix proxy auth, close #996, close #997\n", "commitParents": ["c9fab666da060f95871a860bf78171a1a7d9d971"], "spoonStatsSkippedReason": "tooManyFiles", "commitHash": "7136391a0529c074b09271036d1f076ec2a28ec6", "authoredDateTime": "2015-10-13 12:37:04", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/spnego/SpnegoEngineException.java"}, {"insertions": 0, "deletions": 71, "lines": 71, "filePath": "client/src/main/java/org/asynchttpclient/channel/ChannelConnector.java"}, {"insertions": 285, "deletions": 166, "lines": 451, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/HttpProtocol.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/body/NettyFileBody.java"}, {"insertions": 0, "deletions": 56, "lines": 56, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactoryBase.java"}, {"insertions": 46, "deletions": 4, "lines": 50, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyChannelConnector.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "client/src/main/java/org/asynchttpclient/ntlm/NtlmEngine.java"}, {"insertions": 45, "deletions": 19, "lines": 64, "filePath": "client/src/test/java/org/asynchttpclient/proxy/ProxyTest.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "client/src/main/java/org/asynchttpclient/simple/SimpleAsyncHttpClient.java"}, {"insertions": 0, "deletions": 4, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/uri/Uri.java"}, {"insertions": 43, "deletions": 14, "lines": 57, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactory.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/test/java/org/asynchttpclient/RealmTest.java"}, {"insertions": 45, "deletions": 40, "lines": 85, "filePath": "client/src/main/java/org/asynchttpclient/util/AuthenticatorUtils.java"}, {"insertions": 44, "deletions": 25, "lines": 69, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java"}, {"insertions": 0, "deletions": 46, "lines": 46, "filePath": "client/src/test/java/org/asynchttpclient/proxy/ProxyUtilsTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/WebSocketProtocol.java"}, {"insertions": 0, "deletions": 33, "lines": 33, "filePath": "client/src/main/java/org/asynchttpclient/ntlm/NtlmUtils.java"}, {"insertions": 40, "deletions": 3, "lines": 43, "filePath": "client/src/main/java/org/asynchttpclient/proxy/ProxyServer.java"}, {"insertions": 6, "deletions": 4, "lines": 10, "filePath": "client/src/test/java/org/asynchttpclient/proxy/{ProxyTunnellingTest.java => HttpsProxyTest.java}"}, {"insertions": 6, "deletions": 4, "lines": 10, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/Protocol.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/body/NettyBodyBody.java"}, {"insertions": 9, "deletions": 9, "lines": 18, "filePath": "client/src/test/java/org/asynchttpclient/BasicAuthTest.java"}, {"insertions": 27, "deletions": 42, "lines": 69, "filePath": "client/src/main/java/org/asynchttpclient/Realm.java"}, {"insertions": 38, "deletions": 15, "lines": 53, "filePath": "client/src/test/java/org/asynchttpclient/proxy/NTLMProxyTest.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/ChannelManager.java"}, {"insertions": 2, "deletions": 5, "lines": 7, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/body/NettyInputStreamBody.java"}, {"insertions": 1, "deletions": 57, "lines": 58, "filePath": "client/src/main/java/org/asynchttpclient/util/ProxyUtils.java"}, {"insertions": 4, "deletions": 7, "lines": 11, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/ProgressListener.java"}, {"insertions": 37, "deletions": 9, "lines": 46, "filePath": "client/src/main/java/org/asynchttpclient/netty/NettyResponseFuture.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/NettyConnectListener.java"}], "commitDateTime": "2015-10-13 12:37:04", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/997", "ttf": 1.0002777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Proxy NTLM auth doesn't work", "statsSkippedReason": "", "user": "zengelan", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 0, "TOT": 0.0, "MOV": 0.0, "INS": 0.0, "DEL": 0.0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 2, "alsoFixesPhrase": 0}, "body": "with 1.9.31 proxy authentication to McAfee Web Gateway fails. the McAfee web gateway supports two authentication schemes, basic and NTLM but with the latest version both authentication options fail.\nIt seems as if asynch-http-client always tries to use basic auth, even when NTLM is selected as proxy type. Also it looks like during the proxy auth phase, it is omitting the authentication for the actual website.\nit should send both the proxy authentication credentials and the authentication credentials for the web site with the proxy auth request.\nPlease ping me via PM and I can supply the proxy details to reproduce the issue.\nPacket captures and trace log can be sent via PM too\n", "labels": ["Defect", "Netty"]}, {"created": "2015-10-10 18:49:13", "commits": {"7136391a0529c074b09271036d1f076ec2a28ec6": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 0, "closed": "2015-10-13 10:37:13", "filteredCommits": [], "commitsDetails": [{"nameRev": "7136391a0529c074b09271036d1f076ec2a28ec6 tags/async-http-client-project-2.0.0-alpha15~13", "commitMessage": "Fix proxy auth, close #996, close #997\n", "commitParents": ["c9fab666da060f95871a860bf78171a1a7d9d971"], "spoonStatsSkippedReason": "tooManyFiles", "commitHash": "7136391a0529c074b09271036d1f076ec2a28ec6", "authoredDateTime": "2015-10-13 12:37:04", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/spnego/SpnegoEngineException.java"}, {"insertions": 0, "deletions": 71, "lines": 71, "filePath": "client/src/main/java/org/asynchttpclient/channel/ChannelConnector.java"}, {"insertions": 285, "deletions": 166, "lines": 451, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/HttpProtocol.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/body/NettyFileBody.java"}, {"insertions": 0, "deletions": 56, "lines": 56, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactoryBase.java"}, {"insertions": 46, "deletions": 4, "lines": 50, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyChannelConnector.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "client/src/main/java/org/asynchttpclient/ntlm/NtlmEngine.java"}, {"insertions": 45, "deletions": 19, "lines": 64, "filePath": "client/src/test/java/org/asynchttpclient/proxy/ProxyTest.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "client/src/main/java/org/asynchttpclient/simple/SimpleAsyncHttpClient.java"}, {"insertions": 0, "deletions": 4, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/uri/Uri.java"}, {"insertions": 43, "deletions": 14, "lines": 57, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactory.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/test/java/org/asynchttpclient/RealmTest.java"}, {"insertions": 45, "deletions": 40, "lines": 85, "filePath": "client/src/main/java/org/asynchttpclient/util/AuthenticatorUtils.java"}, {"insertions": 44, "deletions": 25, "lines": 69, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java"}, {"insertions": 0, "deletions": 46, "lines": 46, "filePath": "client/src/test/java/org/asynchttpclient/proxy/ProxyUtilsTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/WebSocketProtocol.java"}, {"insertions": 0, "deletions": 33, "lines": 33, "filePath": "client/src/main/java/org/asynchttpclient/ntlm/NtlmUtils.java"}, {"insertions": 40, "deletions": 3, "lines": 43, "filePath": "client/src/main/java/org/asynchttpclient/proxy/ProxyServer.java"}, {"insertions": 6, "deletions": 4, "lines": 10, "filePath": "client/src/test/java/org/asynchttpclient/proxy/{ProxyTunnellingTest.java => HttpsProxyTest.java}"}, {"insertions": 6, "deletions": 4, "lines": 10, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/Protocol.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/body/NettyBodyBody.java"}, {"insertions": 9, "deletions": 9, "lines": 18, "filePath": "client/src/test/java/org/asynchttpclient/BasicAuthTest.java"}, {"insertions": 27, "deletions": 42, "lines": 69, "filePath": "client/src/main/java/org/asynchttpclient/Realm.java"}, {"insertions": 38, "deletions": 15, "lines": 53, "filePath": "client/src/test/java/org/asynchttpclient/proxy/NTLMProxyTest.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/ChannelManager.java"}, {"insertions": 2, "deletions": 5, "lines": 7, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/body/NettyInputStreamBody.java"}, {"insertions": 1, "deletions": 57, "lines": 58, "filePath": "client/src/main/java/org/asynchttpclient/util/ProxyUtils.java"}, {"insertions": 4, "deletions": 7, "lines": 11, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/ProgressListener.java"}, {"insertions": 37, "deletions": 9, "lines": 46, "filePath": "client/src/main/java/org/asynchttpclient/netty/NettyResponseFuture.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/channel/NettyConnectListener.java"}], "commitDateTime": "2015-10-13 12:37:04", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/996", "ttf": 2.000277777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Proxy Basic auth is broken", "statsSkippedReason": "", "user": "pbostrom", "changesInPackagesGIT": [], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "Hi, I have a proxy server running on regular http, and I'm trying to make a request to an https address. I create a ProxyServer with my host, port, principal and password and set the client's ProxyServer. When I make a http request everything works fine. When I request an https host, the proxy returns 407 Proxy Authentication Required. This works with version 1.8.16. I've just recently been trying to 1.9.31, it seems like this stopped working with 1.9.0.\nI have a small testcase I can provide (in Clojure) if that would help. I need to clean it up a little bit first.\n", "labels": ["Defect", "Netty"]}, {"created": "2015-10-08 23:11:06", "commits": {"fe2a1bc590df3e52a8792e3df3977f51e2fff929": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.NettyResponseFuture", "org.asynchttpclient.netty.handler.HttpProtocol.exitAfterHandling401(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm,org.asynchttpclient.proxy.ProxyServer)", "org.asynchttpclient.netty.NettyResponseFuture.getInProxyAuth()", "org.asynchttpclient.netty.handler.HttpProtocol.ntlmProxyChallenge(java.lang.String,org.asynchttpclient.Request,org.asynchttpclient.Realm,io.netty.handler.codec.http.HttpHeaders,org.asynchttpclient.netty.NettyResponseFuture)", "org.asynchttpclient.netty.NettyResponseFuture.isInAuth()", "org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithNewChannel(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,boolean)", "org.asynchttpclient.netty.handler.HttpProtocol.exitAfterHandling407(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.proxy.ProxyServer)", "org.asynchttpclient.netty.handler.Protocol.exitAfterHandlingRedirect(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm)", "org.asynchttpclient.netty.request.ProgressListener.operationComplete(io.netty.channel.ChannelProgressiveFuture)", "org.asynchttpclient.netty.handler.HttpProtocol.ntlmChallenge(java.lang.String,org.asynchttpclient.Request,io.netty.handler.codec.http.HttpHeaders,org.asynchttpclient.Realm,org.asynchttpclient.netty.NettyResponseFuture)", "org.asynchttpclient.netty.NettyResponseFuture.getAndSetAuth(boolean)", "org.asynchttpclient.netty.NettyResponseFuture.canBeReplayed()"], "closed": "2015-10-13 11:44:47", "filteredCommits": ["fe2a1bc590df3e52a8792e3df3977f51e2fff929"], "commitsDetails": [{"nameRev": "fe2a1bc590df3e52a8792e3df3977f51e2fff929 tags/async-http-client-project-2.0.0-alpha15~11", "commitMessage": "Don't loop forever when credentials are invalid, close #994\n", "commitParents": ["6c3e229ce232dfd0791ba9fb190412a3d7650bc5"], "spoonStatsSkippedReason": "", "commitHash": "fe2a1bc590df3e52a8792e3df3977f51e2fff929", "authoredDateTime": "2015-10-13 13:44:41", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 2, "lines": 5, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/Protocol.java"}, {"insertions": 4, "deletions": 0, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java"}, {"insertions": 6, "deletions": 5, "lines": 11, "filePath": "client/src/main/java/org/asynchttpclient/netty/NettyResponseFuture.java"}, {"insertions": 9, "deletions": 13, "lines": 22, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/HttpProtocol.java"}, {"insertions": 3, "deletions": 5, "lines": 8, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/ProgressListener.java"}], "commitDateTime": "2015-10-13 13:44:41", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpProtocol.ntlmProxyChallenge(java.lang.String,org.asynchttpclient.Request,org.asynchttpclient.Realm,io.netty.handler.codec.http.HttpHeaders,org.asynchttpclient.netty.NettyResponseFuture)"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpProtocol.ntlmChallenge(java.lang.String,org.asynchttpclient.Request,io.netty.handler.codec.http.HttpHeaders,org.asynchttpclient.Realm,org.asynchttpclient.netty.NettyResponseFuture)"}, {"UPD": 2, "TOT": 4, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpProtocol.exitAfterHandling407(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.proxy.ProxyServer)"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpProtocol.exitAfterHandling401(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm,org.asynchttpclient.proxy.ProxyServer)"}], "spoonFilePath": "HttpProtocol.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.Protocol.exitAfterHandlingRedirect(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm)"}], "spoonFilePath": "Protocol.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture"}, {"UPD": 2, "TOT": 4, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.isInAuth()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.getInProxyAuth()"}, {"UPD": 2, "TOT": 5, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.getAndSetAuth(boolean)"}, {"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.canBeReplayed()"}], "spoonFilePath": "NettyResponseFuture.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithNewChannel(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,boolean)"}], "spoonFilePath": "NettyRequestSender.java"}, {"spoonMethods": [{"UPD": 3, "TOT": 8, "MOV": 2, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.request.ProgressListener.operationComplete(io.netty.channel.ChannelProgressiveFuture)"}], "spoonFilePath": "ProgressListener.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/994", "ttf": 4.000277777777778, "gitStatsSummary": {"insertions": 25, "deletions": 25, "lines": 50, "gitFilesChange": 5}, "title": "Infinite Connection Attempts when provided a bad proxy password", "statsSkippedReason": "", "user": "hhimanshu", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request", "client/src/main/java/org/asynchttpclient/netty", "client/src/main/java/org/asynchttpclient/netty/handler"], "spoonStatsSummary": {"UPD": 13, "spoonMethodsChanged": 12, "TOT": 38, "MOV": 13, "INS": 7, "DEL": 5, "spoonFilesChanged": 5}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "@ndarilek @brianm \nThis is what I see in my application log trace when I provide the bad password. I am using v1.9.31\n\nWhy it keeps flooding the requests? How do I stop it?\n\n```\n08 Oct 2015 15:46:07,937 [DEBUG] [New I/O worker #18] NettyRequestSender       | Using cached Channel [id: 0xeff83813, /192.168.0.15:54291 => /153.92.35.49:9090] for GET 'http://172.16.10.151:8080/app/lp?events=access'\n08 Oct 2015 15:46:08,010 [DEBUG] [New I/O worker #18] HttpProtocol             | \n\nRequest DefaultHttpRequest(chunked: false)\nGET http://172.16.10.151:8080/app/lp?events=access HTTP/1.1\nConnection: keep-alive\nHost: 172.16.10.151:8080\nProxy-Authorization: Basic dG9tOmJhZA==\nAccept: */*\nUser-Agent: AHC/1.0\n\nResponse DefaultHttpResponse(chunked: false)\nHTTP/1.1 407 authenticationrequired\nVia: 1.1 10.10.100.254 (McAfee Web Gateway 7.5.2.3.0.20202)\nDate: Thu, 08 Oct 2015 22:46:07 GMT\nContent-Type: text/html\nCache-Control: no-cache\nContent-Length: 3986\nProxy-Connection: Keep-Alive\nProxy-Authenticate: NTLM\nProxy-Authenticate: Basic realm=\"McAfee Web Gateway\"\n\n08 Oct 2015 15:46:08,010 [DEBUG] [New I/O worker #18] HttpProtocol             | Sending proxy authentication to http://172.16.10.151:8080/app/lp?events=access\n08 Oct 2015 15:46:08,011 [DEBUG] [New I/O worker #18] HttpProtocol             | Sending proxy authentication to http://172.16.10.151:8080/app/lp?events=access\n08 Oct 2015 15:46:08,011 [DEBUG] [New I/O worker #18] NettyRequestSender       | Using cached Channel [id: 0xeff83813, /192.168.0.15:54291 => /153.92.35.49:9090] for GET 'http://172.16.10.151:8080/app/lp?events=access'\n08 Oct 2015 15:46:08,178 [DEBUG] [New I/O worker #18] HttpProtocol             | \n\nRequest DefaultHttpRequest(chunked: false)\nGET http://172.16.10.151:8080/app/lp?events=access HTTP/1.1\nConnection: keep-alive\nHost: 172.16.10.151:8080\nProxy-Authorization: Basic dG9tOmJhZA==\nAccept: */*\nUser-Agent: AHC/1.0\n\nResponse DefaultHttpResponse(chunked: false)\nHTTP/1.1 407 authenticationrequired\nVia: 1.1 10.10.100.254 (McAfee Web Gateway 7.5.2.3.0.20202)\nDate: Thu, 08 Oct 2015 22:46:08 GMT\nContent-Type: text/html\nCache-Control: no-cache\nContent-Length: 3986\nProxy-Connection: Keep-Alive\nProxy-Authenticate: NTLM\nProxy-Authenticate: Basic realm=\"McAfee Web Gateway\"\n```\n\nThis is how we set it\n\n```\n    private static AsyncHttpClientConfig createConfig(\n            HttpCredentials credentialsProvider, boolean useAuth,\n            int connTimeOutMillis, int readTimeOutMillis, int retryCount) {\n        try {\n            ShnHttpConfigBuilder builder = new ShnHttpConfigBuilder(\n                    credentialsProvider, useAuth);\n\n            builder.setConnectTimeout(connTimeOutMillis);\n            builder.setRequestTimeout(readTimeOutMillis);\n            builder.setMaxRequestRetry(retryCount);\n            builder.setCompressionEnforced(true);\n            builder.setFollowRedirect(true);\n            return builder.build();\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        } \n```\n", "labels": ["Defect"]}, {"created": "2015-10-08 06:26:35", "commits": {"ebdc1fe637536a984203290d174c72256505e13b": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "22034b5d1c91012646a3c99153c4d580ba870607": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "a840f7908d464d90c57ffcbc6c7971ef362b7d27": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.channel.DefaultSSLEngineFactory.newSSLEngine(java.lang.String,int)"], "closed": "2015-10-08 09:15:26", "filteredCommits": ["ebdc1fe637536a984203290d174c72256505e13b"], "commitsDetails": [{"nameRev": "ebdc1fe637536a984203290d174c72256505e13b tags/async-http-client-project-2.0.0-alpha15~25^2", "commitMessage": "Moved setUseClientMode above setSSLParameters to fix #991\n", "commitParents": ["34564c2255cf11c784229d4fe62b811d0d844af8"], "spoonStatsSkippedReason": "", "commitHash": "ebdc1fe637536a984203290d174c72256505e13b", "authoredDateTime": "2015-10-08 17:28:14", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/channel/SSLEngineFactory.java"}], "commitDateTime": "2015-10-08 17:28:14", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.channel.DefaultSSLEngineFactory.newSSLEngine(java.lang.String,int)"}], "spoonFilePath": "SSLEngineFactory.java"}]}, {"nameRev": "22034b5d1c91012646a3c99153c4d580ba870607 tags/async-http-client-project-2.0.0-alpha15~25", "commitMessage": "Merge pull request #992 from yiyangc91/master\n\nMoved setUseClientMode above setSSLParameters to fix #991 in master", "commitParents": ["34564c2255cf11c784229d4fe62b811d0d844af8", "ebdc1fe637536a984203290d174c72256505e13b"], "spoonStatsSkippedReason": "", "commitHash": "22034b5d1c91012646a3c99153c4d580ba870607", "authoredDateTime": "2015-10-08 11:15:24", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/channel/SSLEngineFactory.java"}], "commitDateTime": "2015-10-08 11:15:24", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.channel.DefaultSSLEngineFactory.newSSLEngine(java.lang.String,int)"}], "spoonFilePath": "SSLEngineFactory.java"}]}, {"nameRev": "a840f7908d464d90c57ffcbc6c7971ef362b7d27 tags/async-http-client-1.9.32~9", "commitMessage": "Merge pull request #993 from yiyangc91/1.9.x\n\nMoved setUseClientMode above setSSLParameters to fix #991 in 1.9.x", "commitParents": ["ff3250a94a6ef2c92e76cfa2560381dced7dcaf7", "118f1e1fed4e22c5da42640e4734632fd5b4990d"], "spoonStatsSkippedReason": "", "commitHash": "a840f7908d464d90c57ffcbc6c7971ef362b7d27", "authoredDateTime": "2015-10-08 11:15:49", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/SSLEngineFactory.java"}], "commitDateTime": "2015-10-08 11:15:49", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.DefaultSSLEngineFactory.newSSLEngine(java.lang.String,int)"}], "spoonFilePath": "SSLEngineFactory.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/991", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "When enabledProtocols are empty, use the proper default client protocols", "statsSkippedReason": "", "user": "yiyangc91", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/channel"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 2, "alsoFixesPhrase": 0}, "body": "In both 1.9.x and master (haven't checked 1.8.x) the SSLEngineFactory has this bit of code:\n\n``` java\n             SSLEngine sslEngine = sslContext.createSSLEngine(peerHost, peerPort);\n             if (!config.isAcceptAnyCertificate()) {\n                 SSLParameters params = sslEngine.getSSLParameters();\n                 params.setEndpointIdentificationAlgorithm(\"HTTPS\");\n                 sslEngine.setSSLParameters(params);\n             }\n            sslEngine.setUseClientMode(true);\n```\n\nUnfortunately running setSSLParameters before setUseClientMode prevents SSLEngine from replacing the default server-mode protocols with the default client-mode protocols.\n\nThis means that the default SSL Client Hello used is SSLv2Hello, as opposed to SSLv3, which does not play nicely with SNI.\n\nThe fix is to merely move the \"setUseClientMode\" line above the \"setSSLParameters\".\n", "labels": ["Defect", "Netty"]}, {"created": "2015-10-06 14:16:55", "commits": {"fddb6373566031c310fc2c8798610e225c9e4646": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "3c25a42289bf679cfff40ca5ef0e77be85215deb": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.handler.Protocol.exitAfterHandlingRedirect(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm)"], "closed": "2015-10-06 14:17:12", "filteredCommits": ["3c25a42289bf679cfff40ca5ef0e77be85215deb", "fddb6373566031c310fc2c8798610e225c9e4646"], "commitsDetails": [{"nameRev": "fddb6373566031c310fc2c8798610e225c9e4646 tags/async-http-client-project-2.0.0-alpha15~27", "commitMessage": "Switch to GET on 301 redirect too, close #989\n", "commitParents": ["bc72d84ecb7d740c778b7748bedc704f77a84f6e"], "spoonStatsSkippedReason": "", "commitHash": "fddb6373566031c310fc2c8798610e225c9e4646", "authoredDateTime": "2015-10-06 16:17:06", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/Protocol.java"}], "commitDateTime": "2015-10-06 16:17:06", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.Protocol.exitAfterHandlingRedirect(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm)"}], "spoonFilePath": "Protocol.java"}]}, {"nameRev": "3c25a42289bf679cfff40ca5ef0e77be85215deb tags/async-http-client-project-2.1.0-alpha21~20", "commitMessage": "Fix broken Head302Test (#1421)\n\n* Update Head302Test to show it is actually failing\r\n\r\nThis test had the following defects which caused it to falsely pass:\r\n\r\n* Jetty requires a handler to explicitly indicate it has handled the\r\nrequest by calling Request.setHandled(true).  Otherwise the server will\r\nreturn 404.\r\n* The test did not configure the client to follow redirects.\r\n* The test itself wasn't asserting anything useful beyond that the\r\nrequest did not time out.  To ensure the redirect was followed, it needs\r\nto assert the expected response status code from the redirected location\r\nis received.\r\n\r\n* Fix broken Head302Test\r\n\r\nThe test now verifies that a HEAD redirected via 302 is switched to GET\r\nper [1].\r\n\r\n[1] https://github.com/AsyncHttpClient/async-http-client/issues/989\r\n", "commitParents": ["af2e5afbfd45adb1ac45f14bb9cbe847e69f788c"], "spoonStatsSkippedReason": "", "commitHash": "3c25a42289bf679cfff40ca5ef0e77be85215deb", "authoredDateTime": "2017-06-09 15:12:44", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 16, "deletions": 10, "lines": 26, "filePath": "client/src/test/java/org/asynchttpclient/Head302Test.java"}], "commitDateTime": "2017-06-09 21:12:43", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 10, "MOV": 3, "INS": 6, "DEL": 1, "spoonMethodName": "org.asynchttpclient.Head302Test.testHEAD302()"}, {"UPD": 2, "TOT": 11, "MOV": 5, "INS": 3, "DEL": 1, "spoonMethodName": "org.asynchttpclient.Head302Test.Head302handler.handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"}], "spoonFilePath": "Head302Test.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/989", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "Switch to GET on 301 redirect too", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/handler"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Wrong as per RFC2616, but that's what browsers do...\n", "labels": ["Defect"]}, {"created": "2015-10-05 19:02:20", "commits": {"b0c693838c2a8e655ea3c78c7aa149ac58a4b985": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.DefaultAsyncHttpClientConfig.Builder", "org.asynchttpclient.DefaultAsyncHttpClientConfig", "org.asynchttpclient.DefaultAsyncHttpClientConfig.Builder.build()", "org.asynchttpclient.netty.handler.WebSocketProtocol.invokeOnSucces(io.netty.channel.Channel,org.asynchttpclient.ws.WebSocketUpgradeHandler)", "org.asynchttpclient.DefaultAsyncHttpClientConfig.getNettyWebSocketFactory()", "org.asynchttpclient.DefaultAsyncHttpClientConfig.Builder.setNettyWebSocketFactory(org.asynchttpclient.NettyWebSocketFactory)", "org.asynchttpclient.getNettyWebSocketFactory()", "org.asynchttpclient"], "closed": "2015-10-27 13:14:24", "filteredCommits": ["b0c693838c2a8e655ea3c78c7aa149ac58a4b985"], "commitsDetails": [{"nameRev": "b0c693838c2a8e655ea3c78c7aa149ac58a4b985 tags/async-http-client-project-2.0.0-alpha19~13", "commitMessage": "Drop NettyWebSocketFactory, close #988\n", "commitParents": ["202031fee0d20626b1cef34c6c17810115d20078"], "spoonStatsSkippedReason": "", "commitHash": "b0c693838c2a8e655ea3c78c7aa149ac58a4b985", "authoredDateTime": "2015-10-27 14:14:19", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "client/src/main/java/org/asynchttpclient/netty/handler/WebSocketProtocol.java"}, {"insertions": 0, "deletions": 19, "lines": 19, "filePath": "client/src/main/java/org/asynchttpclient/AsyncHttpClientConfig.java"}, {"insertions": 0, "deletions": 16, "lines": 16, "filePath": "client/src/main/java/org/asynchttpclient/DefaultAsyncHttpClientConfig.java"}], "commitDateTime": "2015-10-27 14:14:19", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.WebSocketProtocol.invokeOnSucces(io.netty.channel.Channel,org.asynchttpclient.ws.WebSocketUpgradeHandler)"}], "spoonFilePath": "WebSocketProtocol.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClientConfig.Builder.setNettyWebSocketFactory(org.asynchttpclient.NettyWebSocketFactory)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClientConfig.getNettyWebSocketFactory()"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 3, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClientConfig"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClientConfig.Builder.build()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.DefaultAsyncHttpClientConfig.Builder"}], "spoonFilePath": "DefaultAsyncHttpClientConfig.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.getNettyWebSocketFactory()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient"}], "spoonFilePath": "AsyncHttpClientConfig.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/988", "ttf": 21.00027777777778, "gitStatsSummary": {"insertions": 1, "deletions": 36, "lines": 37, "gitFilesChange": 3}, "title": "ConcurrentModificationException with high websocket usage", "statsSkippedReason": "", "user": "kevarh", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient", "client/src/main/java/org/asynchttpclient/netty/handler"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 8, "TOT": 12, "MOV": 0, "INS": 1, "DEL": 10, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "When pushing Gatling to high levels of concurrency we're seeing this errors over and over in the logs.\n\n```\n[WARN ] c.n.h.c.p.n.h.WebSocketProtocol - onError {}\njava.util.ConcurrentModificationException: null\n        at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:859) ~[na:na]\n        at java.util.ArrayList$Itr.next(ArrayList.java:831) ~[na:na]\n        at com.ning.http.client.providers.netty.ws.NettyWebSocket.notifyTextListeners(NettyWebSocket.java:238) ~[async-http-client-1.9.30.jar:na]\n        at com.ning.http.client.providers.netty.ws.NettyWebSocket.onTextFragment(NettyWebSocket.java:281) ~[async-http-client-1.9.30.jar:na]\n        at com.ning.http.client.providers.netty.handler.WebSocketProtocol.handle(WebSocketProtocol.java:162) ~[async-http-client-1.9.30.jar:na]\n        at com.ning.http.client.providers.netty.handler.Processor.messageReceived(Processor.java:88) ~[async-http-client-1.9.30.jar:na]\n        at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70) [netty-3.10.4.Final.jar:na]\n        at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564) [netty-3.10.4.Final.jar:na]\n        at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791) [netty-3.10.4.Final.jar:na]\n        at org.jboss.netty.handler.codec.oneone.OneToOneDecoder.handleUpstream(OneToOneDecoder.java:68) [netty-3.10.4.Final.jar:na]\n        at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564) [netty-3.10.4.Final.jar:na]\n        at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791) [netty-3.10.4.Final.jar:na]\n        at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296) [netty-3.10.4.Final.jar:na]\n        at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:462) [netty-3.10.4.Final.jar:na]\n        at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536) [netty-3.10.4.Final.jar:na]\n        at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435) [netty-3.10.4.Final.jar:na]\n        at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70) [netty-3.10.4.Final.jar:na]\n        at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564) [netty-3.10.4.Final.jar:na]\n        at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559) [netty-3.10.4.Final.jar:na]\n        at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268) [netty-3.10.4.Final.jar:na]\n        at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255) [netty-3.10.4.Final.jar:na]\n        at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88) [netty-3.10.4.Final.jar:na]\n        at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108) [netty-3.10.4.Final.jar:na]\n        at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337) [netty-3.10.4.Final.jar:na]\n        at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89) [netty-3.10.4.Final.jar:na]\n        at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178) [netty-3.10.4.Final.jar:na]\n        at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108) [netty-3.10.4.Final.jar:na]\n        at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42) [netty-3.10.4.Final.jar:na]\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_67]\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_67]\n        at java.lang.Thread.run(Thread.java:745) [na:1.7.0_67]\n```\n", "labels": ["Defect", "Netty"]}, {"created": "2015-09-23 19:17:22", "commits": {"ff93fe24a01ea005f1eaea7f489fcd9c64125f60": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.LazyNettyResponseBodyPart.length()", "org.asynchttpclient.netty.handler.HttpProtocol.handleChunk(io.netty.handler.codec.http.HttpContent,io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler)", "org.asynchttpclient.netty.handler.Processor.channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)", "org.asynchttpclient.netty.handler.WebSocketProtocol.handle(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Object)"], "closed": "2015-09-23 19:17:53", "filteredCommits": ["ff93fe24a01ea005f1eaea7f489fcd9c64125f60"], "commitsDetails": [{"nameRev": "ff93fe24a01ea005f1eaea7f489fcd9c64125f60 tags/async-http-client-project-2.0.0-alpha12~1", "commitMessage": "Properly release Reference counted objects, close #978\n", "commitParents": ["0490ad6ec4e61a400fddb5ce772cbea577352c9a"], "spoonStatsSkippedReason": "", "commitHash": "ff93fe24a01ea005f1eaea7f489fcd9c64125f60", "authoredDateTime": "2015-09-23 21:17:45", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 11, "deletions": 15, "lines": 26, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/handler/WebSocketProtocol.java"}, {"insertions": 5, "deletions": 5, "lines": 10, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/LazyNettyResponseBodyPart.java"}, {"insertions": 13, "deletions": 19, "lines": 32, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/handler/HttpProtocol.java"}, {"insertions": 52, "deletions": 45, "lines": 97, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/handler/Processor.java"}], "commitDateTime": "2015-09-23 21:17:45", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpProtocol.handleChunk(io.netty.handler.codec.http.HttpContent,io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler)"}], "spoonFilePath": "HttpProtocol.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.Processor.channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)"}], "spoonFilePath": "Processor.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 3, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.WebSocketProtocol.handle(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Object)"}], "spoonFilePath": "WebSocketProtocol.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.LazyNettyResponseBodyPart.length()"}], "spoonFilePath": "LazyNettyResponseBodyPart.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/978", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 81, "deletions": 84, "lines": 165, "gitFilesChange": 4}, "title": "Properly release Reference counted objects", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["providers/netty4/src/main/java/org/asynchttpclient/netty/handler", "providers/netty4/src/main/java/org/asynchttpclient/netty"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 4, "TOT": 13, "MOV": 7, "INS": 2, "DEL": 4, "spoonFilesChanged": 4}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Processor should always release. If lazy strategy is used and AsyncHandler implementation wants to store them, it has to retain.\n", "labels": ["Defect"]}, {"created": "2015-09-21 10:48:14", "commits": {"fe8be2157e816ee4a61535c35ad1ad862eb635bc": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.util.AuthenticatorUtils.perRequestProxyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.Realm,boolean)", "org.asynchttpclient.proxy.ProxyServer.setScheme(org.asynchttpclient.Realm.AuthScheme)", "org.asynchttpclient.proxy.ProxyServer"], "closed": "2015-09-21 10:48:29", "filteredCommits": ["fe8be2157e816ee4a61535c35ad1ad862eb635bc"], "commitsDetails": [{"nameRev": "fe8be2157e816ee4a61535c35ad1ad862eb635bc tags/async-http-client-project-2.0.0-alpha12~3", "commitMessage": "ProxyServer.scheme should only default to BASIC when principal != null, close #975\n", "commitParents": ["e11a05aeacd6a9213c161bc0ed130ada7c626043"], "spoonStatsSkippedReason": "", "commitHash": "fe8be2157e816ee4a61535c35ad1ad862eb635bc", "authoredDateTime": "2015-09-21 12:48:24", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 6, "deletions": 1, "lines": 7, "filePath": "api/src/main/java/org/asynchttpclient/proxy/ProxyServer.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "api/src/main/java/org/asynchttpclient/util/AuthenticatorUtils.java"}], "commitDateTime": "2015-09-21 12:48:24", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.util.AuthenticatorUtils.perRequestProxyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.Realm,boolean)"}], "spoonFilePath": "AuthenticatorUtils.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.proxy.ProxyServer.setScheme(org.asynchttpclient.Realm.AuthScheme)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.proxy.ProxyServer"}], "spoonFilePath": "ProxyServer.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/975", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 7, "deletions": 2, "lines": 9, "gitFilesChange": 2}, "title": "ProxyServer.scheme should only default to BASIC when principal != null", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["api/src/main/java/org/asynchttpclient/proxy", "api/src/main/java/org/asynchttpclient/util"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 3, "TOT": 6, "MOV": 2, "INS": 3, "DEL": 1, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2015-09-16 12:36:47", "commits": {"05277935bd53a14250cc2c27aeefcfce4792c0ea": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "27194a4b326c2b4c0a51faae980f5aaa49a8c8b0": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.AsyncHttpClientConfig.Builder.setShutdownTimeout(int)", "org.asynchttpclient.AsyncHttpClientConfig.getShutdownTimeout()", "org.asynchttpclient.AsyncHttpClientConfig.Builder", "org.asynchttpclient.AsyncHttpClientConfig.getShutdownQuiet()", "org.asynchttpclient.AsyncHttpClientConfig", "org.asynchttpclient.AsyncHttpClientConfig.Builder.setShutdownQuiet(int)", "org.asynchttpclient.AsyncHttpClientConfig.Builder.build()", "org.asynchttpclient.config.AsyncHttpClientConfigDefaults.defaultShutdownTimeout()", "org.asynchttpclient.netty.channel.ChannelManager.close()", "org.asynchttpclient.config.AsyncHttpClientConfigDefaults.defaultShutdownQuiet()"], "closed": "2015-09-16 14:20:05", "filteredCommits": ["27194a4b326c2b4c0a51faae980f5aaa49a8c8b0"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "05277935bd53a14250cc2c27aeefcfce4792c0ea", "authoredDateTime": "", "commitGHEventType": "closed", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "27194a4b326c2b4c0a51faae980f5aaa49a8c8b0 tags/async-http-client-project-2.0.0-alpha11~2", "commitMessage": "Make Netty 4 shutdownQuiet and shutdownTimeout configurable, close #969\n", "commitParents": ["edf403f1d62ea00a1c6daaf1346b65bf346a9a99"], "spoonStatsSkippedReason": "", "commitHash": "27194a4b326c2b4c0a51faae980f5aaa49a8c8b0", "authoredDateTime": "2015-09-16 16:19:58", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 18, "deletions": 10, "lines": 28, "filePath": "api/src/main/java/org/asynchttpclient/config/AsyncHttpClientConfigDefaults.java"}, {"insertions": 38, "deletions": 0, "lines": 38, "filePath": "api/src/main/java/org/asynchttpclient/AsyncHttpClientConfig.java"}, {"insertions": 2, "deletions": 1, "lines": 3, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/channel/ChannelManager.java"}, {"insertions": 2, "deletions": 0, "lines": 2, "filePath": "api/src/main/resources/ahc-default.properties"}], "commitDateTime": "2015-09-16 16:41:32", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.config.AsyncHttpClientConfigDefaults.defaultShutdownTimeout()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.config.AsyncHttpClientConfigDefaults.defaultShutdownQuiet()"}], "spoonFilePath": "AsyncHttpClientConfigDefaults.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.close()"}], "spoonFilePath": "ChannelManager.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.AsyncHttpClientConfig.getShutdownTimeout()"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 4, "DEL": 0, "spoonMethodName": "org.asynchttpclient.AsyncHttpClientConfig.Builder"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.AsyncHttpClientConfig.getShutdownQuiet()"}, {"UPD": 0, "TOT": 6, "MOV": 0, "INS": 6, "DEL": 0, "spoonMethodName": "org.asynchttpclient.AsyncHttpClientConfig"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.AsyncHttpClientConfig.Builder.setShutdownQuiet(int)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.AsyncHttpClientConfig.Builder.build()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.AsyncHttpClientConfig.Builder.setShutdownTimeout(int)"}], "spoonFilePath": "AsyncHttpClientConfig.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/969", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 60.0, "deletions": 11.0, "lines": 71.0, "gitFilesChange": 4}, "title": "Spawning AHC 2.0 w/ Netty 4 instances very fast leads to fd/thread/memory starvation", "statsSkippedReason": "", "user": "dotta", "changesInPackagesGIT": ["providers/netty4/src/main/java/org/asynchttpclient/netty/channel", "api/src/main/resources/ahc-default.properties", "api/src/main/java/org/asynchttpclient/config", "api/src/main/java/org/asynchttpclient"], "spoonStatsSummary": {"UPD": 1.0, "spoonMethodsChanged": 10, "TOT": 20.0, "MOV": 0.0, "INS": 19.0, "DEL": 0.0, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "After updating the Play codebase to AHC 2.0-alpha9, I've started to experience issues with non terminating tests because of `OutOfMemoryException`. Until today, I wrongly assumed this was caused by the changes I made in AHC to support reactive streams, but the assumption turned out to be wrong. In fact, I can reproduce even by using AHC 2.0-alpha8, which doesn't include the reactive stream support.\n\nHere is a link to the truly long thread dump demonstrating that AHC 2.0-alpha8 is leaking threads \nhttps://gist.github.com/dotta/6e388962cf0d904e8170\n\nThis issue is currently preventing https://github.com/playframework/playframework/pull/5082 to successfully build.\n", "labels": ["Defect", "Netty"]}, {"created": "2015-09-10 12:38:37", "commits": {"ff3250a94a6ef2c92e76cfa2560381dced7dcaf7": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2015-09-10 12:57:14", "filteredCommits": [], "commitsDetails": [{"nameRev": "ff3250a94a6ef2c92e76cfa2560381dced7dcaf7 tags/async-http-client-1.9.32~10", "commitMessage": "Merge pull request #966 from stsiano/1.9.x\n\nJDK provider does not call any callback handler for some exceptions, close #965", "commitParents": ["8cc93b2576aba3132d3850271712e6e7a488cdfa", "14d3ec033be30aeaf1e33130276f79fb13542bd3"], "spoonStatsSkippedReason": "", "commitHash": "ff3250a94a6ef2c92e76cfa2560381dced7dcaf7", "authoredDateTime": "2015-09-10 14:56:54", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 0, "lines": 1, "filePath": "src/main/java/com/ning/http/client/providers/jdk/JDKAsyncHttpProvider.java"}], "commitDateTime": "2015-09-10 14:56:54", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.jdk.JDKAsyncHttpProvider.AsyncHttpUrlConnection.call()"}], "spoonFilePath": "JDKAsyncHttpProvider.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/965", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "JDK provider does not call any callback handler for some exceptions", "statsSkippedReason": "", "user": "stsiano", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "The JDK provider (in the 1.9.x branch) does not call any callback handler if an exception is thrown within the call() method of JDKAsyncHttpProvider.AsyncHttpUrlConnection.\nFrom my understanding this is wrong; a \nasyncHandler.onThrowable(t); \ncall should be added at the end of the catch block.\n", "labels": ["Defect"]}, {"created": "2015-08-13 12:47:37", "commits": {"84cf23d81a97e4506f134c5007b662fdc21148df": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.AsyncHttpClientConfig"], "closed": "2015-08-13 12:50:04", "filteredCommits": ["84cf23d81a97e4506f134c5007b662fdc21148df"], "commitsDetails": [{"nameRev": "84cf23d81a97e4506f134c5007b662fdc21148df tags/async-http-client-1.9.31~11", "commitMessage": "Properly set sslSessionTimeout, close #945\n", "commitParents": ["632db6ff79874a3064ab89a418b61f38a4cba524"], "spoonStatsSkippedReason": "", "commitHash": "84cf23d81a97e4506f134c5007b662fdc21148df", "authoredDateTime": "2015-08-13 14:49:53", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/AsyncHttpClientConfig.java"}], "commitDateTime": "2015-08-13 14:49:53", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.AsyncHttpClientConfig"}], "spoonFilePath": "AsyncHttpClientConfig.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/945", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "sslSessionTimeout not properly set", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Thanks to @xuwei-k for noticing!\n", "labels": ["Defect"]}, {"created": "2015-08-13 12:43:02", "commits": {"632db6ff79874a3064ab89a418b61f38a4cba524": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "f4d0faabb1b931223053af38e0fbba65c3c3248c": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.util.UTF8UrlEncoder"], "closed": "2015-08-13 12:43:49", "filteredCommits": ["632db6ff79874a3064ab89a418b61f38a4cba524"], "commitsDetails": [{"nameRev": "632db6ff79874a3064ab89a418b61f38a4cba524 tags/async-http-client-1.9.31~12", "commitMessage": "Don't encode : and @, close #944\n", "commitParents": ["03f1c0ccae175d49479d6a023af6e8e0eb0cb94c"], "spoonStatsSkippedReason": "", "commitHash": "632db6ff79874a3064ab89a418b61f38a4cba524", "authoredDateTime": "2015-08-13 14:45:22", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 10, "deletions": 6, "lines": 16, "filePath": "src/main/java/com/ning/http/util/UTF8UrlEncoder.java"}], "commitDateTime": "2015-08-13 14:45:22", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 7, "TOT": 12, "MOV": 2, "INS": 3, "DEL": 0, "spoonMethodName": "com.ning.http.util.UTF8UrlEncoder"}], "spoonFilePath": "UTF8UrlEncoder.java"}]}, {"nameRev": "f4d0faabb1b931223053af38e0fbba65c3c3248c tags/async-http-client-project-2.0.0-alpha9~24", "commitMessage": "Don't encode : and @, close #944\n", "commitParents": ["e78cd21a2b3a1cf808894496252da9f20f590463"], "spoonStatsSkippedReason": "", "commitHash": "f4d0faabb1b931223053af38e0fbba65c3c3248c", "authoredDateTime": "2015-08-13 14:45:10", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 10, "deletions": 6, "lines": 16, "filePath": "api/src/main/java/org/asynchttpclient/util/Utf8UrlEncoder.java"}], "commitDateTime": "2015-08-13 14:45:10", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 7, "TOT": 12, "MOV": 2, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.Utf8UrlEncoder"}], "spoonFilePath": "Utf8UrlEncoder.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/944", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 10, "deletions": 6, "lines": 16, "gitFilesChange": 1}, "title": "As per RFC3986, : and @ are in pchars and shouldn't be encoded", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/util"], "spoonStatsSummary": {"UPD": 7, "spoonMethodsChanged": 1, "TOT": 12, "MOV": 2, "INS": 3, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2015-07-30 19:31:19", "commits": {"b3af4beec6f672bd0080be179aacc06c49e01e1a": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "ba79f4dab6de4b276a60d08c43724e8c6b4a49c6": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.handler.Protocol.exitAfterHandlingRedirect(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm)"], "closed": "2015-07-30 21:16:46", "filteredCommits": ["b3af4beec6f672bd0080be179aacc06c49e01e1a"], "commitsDetails": [{"nameRev": "b3af4beec6f672bd0080be179aacc06c49e01e1a tags/async-http-client-project-2.0.0-alpha9~26", "commitMessage": "Keep body on strict 302 and 307, close #939\n", "commitParents": ["fded6cf136dbe5ce4fbbbfb38b207b7f67652770"], "spoonStatsSkippedReason": "", "commitHash": "b3af4beec6f672bd0080be179aacc06c49e01e1a", "authoredDateTime": "2015-07-30 23:17:35", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 16, "deletions": 0, "lines": 16, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/netty/handler/Protocol.java"}, {"insertions": 15, "deletions": 0, "lines": 15, "filePath": "providers/netty3/src/test/java/org/asynchttpclient/netty/NettyRedirectBodyTest.java"}, {"insertions": 16, "deletions": 0, "lines": 16, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/handler/Protocol.java"}, {"insertions": 98, "deletions": 0, "lines": 98, "filePath": "api/src/test/java/org/asynchttpclient/RedirectBodyTest.java"}, {"insertions": 15, "deletions": 0, "lines": 15, "filePath": "providers/netty4/src/test/java/org/asynchttpclient/netty/NettyRedirectBodyTest.java"}], "commitDateTime": "2015-07-30 23:17:35", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.Protocol.exitAfterHandlingRedirect(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm)"}], "spoonFilePath": "Protocol.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.RedirectBodyTest"}], "spoonFilePath": "RedirectBodyTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyRedirectBodyTest"}], "spoonFilePath": "NettyRedirectBodyTest.java"}]}, {"nameRev": "ba79f4dab6de4b276a60d08c43724e8c6b4a49c6 tags/async-http-client-1.9.31~14", "commitMessage": "Keep body on strict 302 and 307, close #939\n", "commitParents": ["4a917c8e2726b948f17ebcd42cf9de4dc826cc00"], "spoonStatsSkippedReason": "", "commitHash": "ba79f4dab6de4b276a60d08c43724e8c6b4a49c6", "authoredDateTime": "2015-07-30 23:20:20", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 14, "deletions": 2, "lines": 16, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/Protocol.java"}], "commitDateTime": "2015-07-30 23:20:20", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.Protocol.exitAfterHandlingRedirect(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm)"}], "spoonFilePath": "Protocol.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/939", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 32, "deletions": 0, "lines": 32, "gitFilesChange": 2}, "title": "Regression: body of POST requests is not kept after redirection", "statsSkippedReason": "", "user": "gbranchaudrubenovitch", "changesInPackagesGIT": ["providers/netty4/src/main/java/org/asynchttpclient/netty/handler", "providers/netty3/src/main/java/org/asynchttpclient/netty/handler"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "This seems to have been introduced by #898.\n\nThe following java junit test passes with v`1.9.25` but fails with v`1.9.26` and above.\nMy expectations are that this should still pass.\n\n``` java\npackage reprotests;\n\nimport com.ning.http.client.AsyncHttpClient;\nimport com.ning.http.client.AsyncHttpClientConfig;\nimport com.ning.http.client.Response;\nimport com.sun.net.httpserver.HttpExchange;\nimport com.sun.net.httpserver.HttpHandler;\nimport com.sun.net.httpserver.HttpServer;\nimport org.junit.After;\nimport org.junit.Before;\nimport org.junit.Test;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.net.InetSocketAddress;\n\nimport static java.util.stream.Collectors.joining;\nimport static org.junit.Assert.assertEquals;\n\npublic class RedirectTest {\n\n    private HttpServer redirectsTo8888;\n    private HttpServer returnsBodyOfRequest;\n    private AsyncHttpClient httpClient;\n\n    @Before\n    public void startServers() throws Exception {\n        httpClient = new AsyncHttpClient(new AsyncHttpClientConfig.Builder()\n                .setFollowRedirect(true)\n                .setStrict302Handling(true)\n                .build());\n\n        redirectsTo8888 = createAndStartServer(7777, new HttpHandler() {\n            public void handle(HttpExchange httpExchange) throws IOException {\n                httpExchange.getResponseHeaders().add(\"Location\", \"http://localhost:8888\");\n                httpExchange.sendResponseHeaders(302, 0);\n                httpExchange.close();\n            }\n        });\n\n        returnsBodyOfRequest = createAndStartServer(8888, new HttpHandler() {\n            public void handle(HttpExchange httpExchange) throws IOException {\n                String body = readRequestBody(httpExchange);\n                httpExchange.sendResponseHeaders(200, body.length());\n                OutputStream os = httpExchange.getResponseBody();\n                os.write(body.getBytes());\n                os.close();\n            }\n        });\n    }\n\n    @After\n    public void stopServers() throws Exception {\n        redirectsTo8888.stop(0);\n        returnsBodyOfRequest.stop(0);\n    }\n\n    @Test\n    public void postRequestKeepsItsBodyAcrossRedirect() throws Exception {\n        Response response = httpClient.preparePost(\"http://localhost:7777/ad\").setBody(\"request body\").execute().get();\n\n        assertEquals(200, response.getStatusCode());\n        assertEquals(\"request body\", response.getResponseBody());\n    }\n\n    private HttpServer createAndStartServer(int port, HttpHandler handler) throws IOException {\n        HttpServer server = HttpServer.create(new InetSocketAddress(port), 0);\n        server.createContext(\"/\", handler);\n        server.setExecutor(null);\n        server.start();\n        return server;\n    }\n\n    private String readRequestBody(HttpExchange httpExchange) {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(httpExchange.getRequestBody()));\n        return reader.lines().collect(joining(\"\\n\"));\n    }\n}\n```\n", "labels": ["Defect", "Netty"]}, {"created": "2015-06-30 00:21:13", "commits": {"1ab90abf1bb5f25b66299f00264d724c0a523bb7": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.channel.ChannelManager.newDrainCallback(org.asynchttpclient.netty.NettyResponseFuture,org.jboss.netty.channel.Channel,boolean,java.lang.Object).7.call()", "org.asynchttpclient.netty.channel.ChannelManager.verifyChannelPipeline(org.jboss.netty.channel.ChannelPipeline,java.lang.String)", "org.asynchttpclient.channel.pool.PerHostConnectionPoolPartitioning.getPartitionKey(org.asynchttpclient.uri.Uri,org.asynchttpclient.proxy.ProxyServer)", "org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithNewChannel(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,boolean,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,boolean)", "org.asynchttpclient.netty.handler.Protocol.exitAfterHandlingRedirect(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm)", "org.asynchttpclient.netty.NettyResponseFuture.getPartitionKey()", "org.asynchttpclient.netty.NettyAsyncHttpProviderConfig.getHttpsAdditionalPipelineInitializer()", "org.asynchttpclient.channel.pool.PerHostConnectionPoolPartitioning.getPartitionKey(org.asynchttpclient.uri.Uri,java.lang.String,org.asynchttpclient.proxy.ProxyServer)", "org.asynchttpclient.netty.channel.ChannelManager.newHttpContentDecompressor().6", "org.asynchttpclient.netty.channel.ChannelManager", "org.asynchttpclient.netty.NettyAsyncHttpProviderConfig.getWssAdditionalPipelineInitializer()", "org.asynchttpclient.netty.channel.ChannelManager.poll(org.asynchttpclient.uri.Uri,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.channel.pool.ConnectionPoolPartitioning)", "org.asynchttpclient.netty.channel.ChannelManager.poll(org.asynchttpclient.uri.Uri,java.lang.String,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.channel.pool.ConnectionPoolPartitioning)", "org.asynchttpclient.netty.channel.ChannelManager.configureBootstraps(org.asynchttpclient.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean).5.getPipeline()", "org.asynchttpclient.netty.request.NettyRequestSender.pollAndVerifyCachedChannel(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.AsyncHandler)", "org.asynchttpclient.netty.NettyAsyncHttpProviderConfig.setHttpsAdditionalPipelineInitializer(org.asynchttpclient.netty.NettyAsyncHttpProviderConfig$AdditionalPipelineInitializer)", "org.asynchttpclient.netty.handler.HttpProtocol.exitAfterHandlingConnect(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,int,io.netty.handler.codec.http.HttpRequest)", "org.asynchttpclient.netty.channel.ChannelManager.configureBootstraps(org.asynchttpclient.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean).4.getPipeline()", "org.asynchttpclient.netty.channel.ChannelManager.verifyChannelPipeline(org.jboss.netty.channel.ChannelPipeline,org.asynchttpclient.uri.Uri,java.lang.String)", "org.asynchttpclient.netty.channel.ChannelManager.getBootstrap(java.lang.String,boolean,boolean)", "org.asynchttpclient.netty.channel.NettyConnectListener.onFutureSuccess(io.netty.channel.Channel)", "org.asynchttpclient.netty.channel.ChannelManager.close()", "org.asynchttpclient.util.AsyncHttpProviderUtils.getAuthority(org.asynchttpclient.uri.Uri)", "org.asynchttpclient.netty.channel.SslInitializer", "org.asynchttpclient.util.AsyncHttpProviderUtils.isSameHostAndProtocol(org.asynchttpclient.uri.Uri,org.asynchttpclient.uri.Uri)", "org.asynchttpclient.netty.NettyAsyncHttpProviderConfig.setWssAdditionalPipelineInitializer(org.asynchttpclient.netty.NettyAsyncHttpProviderConfig$AdditionalPipelineInitializer)", "org.asynchttpclient.channel.pool.getPartitionKey(org.asynchttpclient.uri.Uri,java.lang.String,org.asynchttpclient.proxy.ProxyServer)", "org.asynchttpclient.netty.request.NettyRequestSender.remoteAddress(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,boolean)", "org.asynchttpclient.netty.channel.ChannelManager.configureBootstraps(org.asynchttpclient.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean)", "org.asynchttpclient.netty.channel.ChannelManager.newDrainCallback(org.asynchttpclient.netty.NettyResponseFuture,org.jboss.netty.channel.Channel,boolean,java.lang.Object).7", "org.asynchttpclient.util.AsyncHttpProviderUtils.getDefaultPort(org.asynchttpclient.uri.Uri)", "org.asynchttpclient.netty.NettyAsyncHttpProviderConfig"], "closed": "2015-07-07 00:13:42", "filteredCommits": ["1ab90abf1bb5f25b66299f00264d724c0a523bb7"], "commitsDetails": [{"nameRev": "1ab90abf1bb5f25b66299f00264d724c0a523bb7 tags/2.0.0-alpha8~1", "commitMessage": "Honor VirtualHost when creating SSLEngines, close #927\n", "commitParents": ["5b4fc25dc8d1878bbbed92973c05f0d47cdaacfd"], "spoonStatsSkippedReason": "", "commitHash": "1ab90abf1bb5f25b66299f00264d724c0a523bb7", "authoredDateTime": "2015-07-07 02:13:35", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 10, "deletions": 3, "lines": 13, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/netty/channel/NettyConnectListener.java"}, {"insertions": 0, "deletions": 50, "lines": 50, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/netty/channel/SslInitializer.java"}, {"insertions": 4, "deletions": 4, "lines": 8, "filePath": "api/src/main/java/org/asynchttpclient/util/AsyncHttpProviderUtils.java"}, {"insertions": 43, "deletions": 56, "lines": 99, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/channel/ChannelManager.java"}, {"insertions": 10, "deletions": 4, "lines": 14, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/channel/NettyConnectListener.java"}, {"insertions": 0, "deletions": 18, "lines": 18, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/NettyAsyncHttpProviderConfig.java"}, {"insertions": 7, "deletions": 9, "lines": 16, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java"}, {"insertions": 45, "deletions": 59, "lines": 104, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/netty/channel/ChannelManager.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/netty/NettyResponseFuture.java"}, {"insertions": 0, "deletions": 53, "lines": 53, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/channel/SslInitializer.java"}, {"insertions": 10, "deletions": 4, "lines": 14, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/netty/handler/Protocol.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/NettyResponseFuture.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/netty/handler/HttpProtocol.java"}, {"insertions": 9, "deletions": 3, "lines": 12, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/handler/Protocol.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "api/src/main/java/org/asynchttpclient/channel/pool/ConnectionPoolPartitioning.java"}, {"insertions": 41, "deletions": 49, "lines": 90, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java"}, {"insertions": 0, "deletions": 18, "lines": 18, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/netty/NettyAsyncHttpProviderConfig.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/handler/HttpProtocol.java"}], "commitDateTime": "2015-07-07 02:13:35", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.HttpProtocol.exitAfterHandlingConnect(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,int,io.netty.handler.codec.http.HttpRequest)"}], "spoonFilePath": "HttpProtocol.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.channel.SslInitializer"}], "spoonFilePath": "SslInitializer.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.NettyResponseFuture.getPartitionKey()"}], "spoonFilePath": "NettyResponseFuture.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.channel.pool.PerHostConnectionPoolPartitioning.getPartitionKey(org.asynchttpclient.uri.Uri,java.lang.String,org.asynchttpclient.proxy.ProxyServer)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.channel.pool.getPartitionKey(org.asynchttpclient.uri.Uri,java.lang.String,org.asynchttpclient.proxy.ProxyServer)"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.channel.pool.PerHostConnectionPoolPartitioning.getPartitionKey(org.asynchttpclient.uri.Uri,org.asynchttpclient.proxy.ProxyServer)"}], "spoonFilePath": "ConnectionPoolPartitioning.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.AsyncHttpProviderUtils.getAuthority(org.asynchttpclient.uri.Uri)"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.AsyncHttpProviderUtils.isSameHostAndProtocol(org.asynchttpclient.uri.Uri,org.asynchttpclient.uri.Uri)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.AsyncHttpProviderUtils.getDefaultPort(org.asynchttpclient.uri.Uri)"}], "spoonFilePath": "AsyncHttpProviderUtils.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.NettyAsyncHttpProviderConfig.setHttpsAdditionalPipelineInitializer(org.asynchttpclient.netty.NettyAsyncHttpProviderConfig$AdditionalPipelineInitializer)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.NettyAsyncHttpProviderConfig.getHttpsAdditionalPipelineInitializer()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.NettyAsyncHttpProviderConfig.setWssAdditionalPipelineInitializer(org.asynchttpclient.netty.NettyAsyncHttpProviderConfig$AdditionalPipelineInitializer)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.NettyAsyncHttpProviderConfig.getWssAdditionalPipelineInitializer()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.NettyAsyncHttpProviderConfig"}], "spoonFilePath": "NettyAsyncHttpProviderConfig.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 8, "MOV": 3, "INS": 3, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.handler.Protocol.exitAfterHandlingRedirect(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm)"}], "spoonFilePath": "Protocol.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.remoteAddress(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,boolean)"}, {"UPD": 0, "TOT": 5, "MOV": 1, "INS": 3, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.pollAndVerifyCachedChannel(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.AsyncHandler)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithNewChannel(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,boolean,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,boolean)"}], "spoonFilePath": "NettyRequestSender.java"}, {"spoonMethods": [{"UPD": 9, "TOT": 14, "MOV": 5, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.configureBootstraps(org.asynchttpclient.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean).4.getPipeline()"}, {"UPD": 2, "TOT": 7, "MOV": 2, "INS": 0, "DEL": 3, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.getBootstrap(java.lang.String,boolean,boolean)"}, {"UPD": 3, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.verifyChannelPipeline(org.jboss.netty.channel.ChannelPipeline,java.lang.String)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.verifyChannelPipeline(org.jboss.netty.channel.ChannelPipeline,org.asynchttpclient.uri.Uri,java.lang.String)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.newDrainCallback(org.asynchttpclient.netty.NettyResponseFuture,org.jboss.netty.channel.Channel,boolean,java.lang.Object).7.call()"}, {"UPD": 2, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.close()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.newHttpContentDecompressor().6"}, {"UPD": 6, "TOT": 15, "MOV": 2, "INS": 0, "DEL": 7, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager"}, {"UPD": 0, "TOT": 6, "MOV": 5, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.poll(org.asynchttpclient.uri.Uri,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.channel.pool.ConnectionPoolPartitioning)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.poll(org.asynchttpclient.uri.Uri,java.lang.String,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.channel.pool.ConnectionPoolPartitioning)"}, {"UPD": 6, "TOT": 6, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.configureBootstraps(org.asynchttpclient.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean).5.getPipeline()"}, {"UPD": 3, "TOT": 14, "MOV": 10, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.configureBootstraps(org.asynchttpclient.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.newDrainCallback(org.asynchttpclient.netty.NettyResponseFuture,org.jboss.netty.channel.Channel,boolean,java.lang.Object).7"}], "spoonFilePath": "ChannelManager.java"}, {"spoonMethods": [{"UPD": 6, "TOT": 12, "MOV": 2, "INS": 3, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.channel.NettyConnectListener.onFutureSuccess(io.netty.channel.Channel)"}], "spoonFilePath": "NettyConnectListener.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/927", "ttf": 6.000277777777778, "gitStatsSummary": {"insertions": 188, "deletions": 339, "lines": 527, "gitFilesChange": 18}, "title": "SNI + VirtualHost != success", "statsSkippedReason": "", "user": "jxtps", "changesInPackagesGIT": ["providers/netty3/src/main/java/org/asynchttpclient/netty/request", "providers/netty4/src/main/java/org/asynchttpclient/netty/channel", "providers/netty4/src/main/java/org/asynchttpclient/netty/handler", "api/src/main/java/org/asynchttpclient/util", "providers/netty3/src/main/java/org/asynchttpclient/netty/channel", "providers/netty3/src/main/java/org/asynchttpclient/netty/handler", "providers/netty4/src/main/java/org/asynchttpclient/netty/request", "providers/netty4/src/main/java/org/asynchttpclient/netty", "api/src/main/java/org/asynchttpclient/channel/pool", "providers/netty3/src/main/java/org/asynchttpclient/netty"], "spoonStatsSummary": {"UPD": 47, "spoonMethodsChanged": 32, "TOT": 124, "MOV": 32, "INS": 18, "DEL": 27, "spoonFilesChanged": 10}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I need to make local https requests to servers that run multiple websites. This means that the url is something like `https://localhost/...`, with the virtual host set to `example.com`. Can't go to example.com as the purpose is to test the current server which is behind the load balancer that actually serves example.com, and can't use http since the nginx configuration redirects to https since otherwise our actual site visitors wouldn't get https. \n\nThe certificate returned is indeed for `example.com` (in case we ever remove the load balancer, and well, it's a great certificate), but the hostname verification fails with a `java.security.cert.CertificateException: No subject alternative DNS name matching localhost found.`. \n\nIt would be great if the hostname verification took the virtual host specified into account. \n", "labels": ["Defect", "Netty"]}, {"created": "2015-06-23 14:17:05", "commits": {"231df76ed68915ccc3a373947b38b76baec630e2": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "25c7ba4c85f814eb4a19ece8e519863e0145ecf6": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "177cc0cbc5994387be8cbe37f06efcb93acccf55": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "266e8c44188d409754282b3e442fc6329a6dde9c": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "011cf3cbe0a3bd9c28beb62f1cdb3a9f8128492c": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.oauth.OAuthSignatureCalculator.encodedParams(long,java.lang.String,java.util.List,java.util.List)"], "closed": "2015-06-23 14:25:27", "filteredCommits": ["231df76ed68915ccc3a373947b38b76baec630e2", "25c7ba4c85f814eb4a19ece8e519863e0145ecf6"], "commitsDetails": [{"nameRev": "231df76ed68915ccc3a373947b38b76baec630e2 tags/2.0.0-alpha7~1", "commitMessage": "Add test for #922\n", "commitParents": ["177cc0cbc5994387be8cbe37f06efcb93acccf55"], "spoonStatsSkippedReason": "", "commitHash": "231df76ed68915ccc3a373947b38b76baec630e2", "authoredDateTime": "2015-06-24 10:16:05", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 31, "deletions": 0, "lines": 31, "filePath": "api/src/test/java/org/asynchttpclient/oauth/OAuthSignatureCalculatorTest.java"}], "commitDateTime": "2015-06-24 10:16:05", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculatorTest.testSignatureBaseStringWithEncodableOAuthToken(org.asynchttpclient.Request)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculatorTest.testSignatureBaseStringWithProperlyEncodedUri()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculatorTest.testSignatureBaseStringWithRawUri()"}], "spoonFilePath": "OAuthSignatureCalculatorTest.java"}]}, {"nameRev": "25c7ba4c85f814eb4a19ece8e519863e0145ecf6 tags/async-http-client-1.9.29~2", "commitMessage": "Properly encode OAuth nonce, close #922\n", "commitParents": ["231461f35ff25106a6dd17fe6d26fa41b08dcced"], "spoonStatsSkippedReason": "", "commitHash": "25c7ba4c85f814eb4a19ece8e519863e0145ecf6", "authoredDateTime": "2015-06-23 16:23:02", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/oauth/OAuthSignatureCalculator.java"}], "commitDateTime": "2015-06-23 16:24:12", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.oauth.OAuthSignatureCalculator.encodedParams(long,java.lang.String,java.util.List,java.util.List)"}], "spoonFilePath": "OAuthSignatureCalculator.java"}]}, {"nameRev": "177cc0cbc5994387be8cbe37f06efcb93acccf55 tags/2.0.0-alpha7~2", "commitMessage": "Properly encode OAuth nonce, close #922\n", "commitParents": ["6a13c87d813888fe7cccb7138ec3c7229b07acce"], "spoonStatsSkippedReason": "", "commitHash": "177cc0cbc5994387be8cbe37f06efcb93acccf55", "authoredDateTime": "2015-06-23 16:25:21", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "api/src/main/java/org/asynchttpclient/oauth/OAuthSignatureCalculator.java"}], "commitDateTime": "2015-06-23 16:25:21", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculator.encodedParams(long,java.lang.String,java.util.List,java.util.List)"}], "spoonFilePath": "OAuthSignatureCalculator.java"}]}, {"nameRev": "266e8c44188d409754282b3e442fc6329a6dde9c tags/async-http-client-1.9.29~1", "commitMessage": "Add test for #922\n", "commitParents": ["25c7ba4c85f814eb4a19ece8e519863e0145ecf6"], "spoonStatsSkippedReason": "", "commitHash": "266e8c44188d409754282b3e442fc6329a6dde9c", "authoredDateTime": "2015-06-24 10:16:16", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 31, "deletions": 0, "lines": 31, "filePath": "src/test/java/com/ning/http/client/oauth/OAuthSignatureCalculatorTest.java"}], "commitDateTime": "2015-06-24 10:16:16", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.oauth.OAuthSignatureCalculatorTest.testSignatureBaseStringWithEncodableOAuthToken(com.ning.http.client.Request)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.oauth.OAuthSignatureCalculatorTest.testSignatureBaseStringWithProperlyEncodedUri()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.oauth.OAuthSignatureCalculatorTest.testSignatureBaseStringWithRawUri()"}], "spoonFilePath": "OAuthSignatureCalculatorTest.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "011cf3cbe0a3bd9c28beb62f1cdb3a9f8128492c", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/922", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1.0, "deletions": 1.0, "lines": 2.0, "gitFilesChange": 1}, "title": "Fix for #921 breaks all OAuth requests", "statsSkippedReason": "", "user": "henningp", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/oauth"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 1, "TOT": 2.0, "MOV": 1.0, "INS": 1.0, "DEL": 0.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 3, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "The fix for issue #921 breaks all OAuth requests, even those that were previously working.\n\nThe problem is that the nonce is not urlencoded, breaking the request (e.g. \"&oauth_nonce=cDEwXIeEzLcTYN/tSKZOCg==\").\n", "labels": ["Defect"]}, {"created": "2015-06-17 20:30:07", "commits": {"f01d8610b9ceebc1de59d42f569b8af3efbe0a0f": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "80e4baa4b9334aff6d5807d987fc7104bb10f20e": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.oauth.OAuthSignatureCalculator.calculateSignature(java.lang.String,org.asynchttpclient.uri.Uri,long,java.lang.String,java.util.List,java.util.List)", "org.asynchttpclient.oauth.OAuthSignatureCalculator.generateNonce()", "org.asynchttpclient.oauth.OAuthSignatureCalculator.OAuthParameterSet.add(java.lang.String,java.lang.String)", "org.asynchttpclient.oauth.OAuthSignatureCalculator.encodedParams(long,java.lang.String,java.util.List,java.util.List)"], "closed": "2015-06-17 21:11:16", "filteredCommits": ["f01d8610b9ceebc1de59d42f569b8af3efbe0a0f"], "commitsDetails": [{"nameRev": "f01d8610b9ceebc1de59d42f569b8af3efbe0a0f tags/2.0.0-alpha6~2", "commitMessage": "OAuthSignatureCalculator mustn't re-encodes query params, close #921\n", "commitParents": ["8ee46adc83cdab73f402807adde5ac2cff05f94b"], "spoonStatsSkippedReason": "", "commitHash": "f01d8610b9ceebc1de59d42f569b8af3efbe0a0f", "authoredDateTime": "2015-06-17 23:11:03", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 89, "deletions": 23, "lines": 112, "filePath": "api/src/test/java/org/asynchttpclient/oauth/OAuthSignatureCalculatorTest.java"}, {"insertions": 23, "deletions": 15, "lines": 38, "filePath": "api/src/main/java/org/asynchttpclient/oauth/OAuthSignatureCalculator.java"}], "commitDateTime": "2015-06-17 23:11:03", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculatorTest.testSignatureBaseStringWithProperlyEncodedUri()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculatorTest.testSignatureBaseString(org.asynchttpclient.Request)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculatorTest.testSignatureBaseStringWithRawUri()"}], "spoonFilePath": "OAuthSignatureCalculatorTest.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 7, "MOV": 4, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculator.calculateSignature(java.lang.String,org.asynchttpclient.uri.Uri,long,java.lang.String,java.util.List,java.util.List)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculator.generateNonce()"}, {"UPD": 0, "TOT": 4, "MOV": 1, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculator.OAuthParameterSet.add(java.lang.String,java.lang.String)"}, {"UPD": 0, "TOT": 8, "MOV": 4, "INS": 4, "DEL": 0, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculator.encodedParams(long,java.lang.String,java.util.List,java.util.List)"}], "spoonFilePath": "OAuthSignatureCalculator.java"}]}, {"nameRev": "80e4baa4b9334aff6d5807d987fc7104bb10f20e tags/async-http-client-1.9.28~2", "commitMessage": "OAuthSignatureCalculator mustn't re-encodes query params, close #921\n", "commitParents": ["9da7919bd6f9062a69a986235b3d2c2676cd8372"], "spoonStatsSkippedReason": "", "commitHash": "80e4baa4b9334aff6d5807d987fc7104bb10f20e", "authoredDateTime": "2015-06-17 23:05:52", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 72, "deletions": 14, "lines": 86, "filePath": "src/test/java/com/ning/http/client/oauth/OAuthSignatureCalculatorTest.java"}, {"insertions": 18, "deletions": 9, "lines": 27, "filePath": "src/main/java/com/ning/http/client/oauth/OAuthSignatureCalculator.java"}], "commitDateTime": "2015-06-17 23:05:52", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.oauth.OAuthSignatureCalculatorTest.testSignatureBaseString(com.ning.http.client.Request)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.oauth.OAuthSignatureCalculatorTest.testSignatureBaseStringWithProperlyEncodedUri()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.oauth.OAuthSignatureCalculatorTest.testSignatureBaseStringWithRawUri()"}], "spoonFilePath": "OAuthSignatureCalculatorTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 0, "INS": 2, "DEL": 2, "spoonMethodName": "com.ning.http.client.oauth.OAuthSignatureCalculator.OAuthParameterSet.add(java.lang.String,java.lang.String)"}, {"UPD": 0, "TOT": 8, "MOV": 4, "INS": 4, "DEL": 0, "spoonMethodName": "com.ning.http.client.oauth.OAuthSignatureCalculator.encodedParams(long,java.lang.String,java.util.List,java.util.List)"}, {"UPD": 2, "TOT": 7, "MOV": 4, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.oauth.OAuthSignatureCalculator.calculateSignature(java.lang.String,com.ning.http.client.uri.Uri,long,java.lang.String,java.util.List,java.util.List)"}], "spoonFilePath": "OAuthSignatureCalculator.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/921", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 23, "deletions": 15, "lines": 38, "gitFilesChange": 1}, "title": "OAuthSignatureCalculator re-encodes query params", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["api/src/main/java/org/asynchttpclient/oauth"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 4, "TOT": 21, "MOV": 10, "INS": 6, "DEL": 3, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "But they are already encoded in the RequestBuilder.\nReported by @alalwww in https://github.com/AsyncHttpClient/async-http-client/pull/914\n", "labels": ["Defect"]}, {"created": "2015-06-17 19:02:22", "commits": {"bc567091b5227cdf76be04aa0c167ae1a728df04": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "8ee46adc83cdab73f402807adde5ac2cff05f94b": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.channel.ChannelManager.1.remove(java.lang.Object)", "com.ning.http.client.providers.netty.channel.ChannelManager"], "closed": "2015-06-17 19:04:54", "filteredCommits": ["bc567091b5227cdf76be04aa0c167ae1a728df04"], "commitsDetails": [{"nameRev": "bc567091b5227cdf76be04aa0c167ae1a728df04 tags/async-http-client-1.9.28~4", "commitMessage": "Release semaphores when only maxConnectionsPerHost is enabled, closed #920\n", "commitParents": ["56ef0751b847a56a002edc85381b054fe636e084"], "spoonStatsSkippedReason": "", "commitHash": "bc567091b5227cdf76be04aa0c167ae1a728df04", "authoredDateTime": "2015-06-17 21:03:12", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 2, "lines": 5, "filePath": "src/main/java/com/ning/http/client/providers/netty/channel/ChannelManager.java"}], "commitDateTime": "2015-06-17 21:03:12", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.channel.ChannelManager.1.remove(java.lang.Object)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.channel.ChannelManager"}], "spoonFilePath": "ChannelManager.java"}]}, {"nameRev": "8ee46adc83cdab73f402807adde5ac2cff05f94b tags/2.0.0-alpha6~3", "commitMessage": "Release semaphores when only maxConnectionsPerHost is enabled, closed #920\n", "commitParents": ["d046bb5c86163fd301938a54b049b7ac755c9504"], "spoonStatsSkippedReason": "", "commitHash": "8ee46adc83cdab73f402807adde5ac2cff05f94b", "authoredDateTime": "2015-06-17 21:04:46", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 2, "lines": 5, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/netty/channel/ChannelManager.java"}, {"insertions": 3, "deletions": 2, "lines": 5, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/channel/ChannelManager.java"}], "commitDateTime": "2015-06-17 21:04:46", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager.1.remove(java.lang.Object)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.channel.ChannelManager"}], "spoonFilePath": "ChannelManager.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/920", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 3, "deletions": 2, "lines": 5, "gitFilesChange": 1}, "title": "Semaphores are not released when only maxConnectionsPerHost is enabled", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/channel"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 4, "MOV": 2, "INS": 2, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2015-06-04 13:25:24", "commits": {"cd9f3c550396f34aa9e176e0aa599bbfb6d53d6e": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "7ae846e8cdf91d9b34d099bf343d3291f6863831": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.handler.DefaultConnectionStrategy", "com.ning.http.client.providers.netty.NettyAsyncHttpProviderConfig", "com.ning.http.client.providers.netty.handler.Http1Point1ConnectionStrategy"], "closed": "2015-06-04 13:28:52", "filteredCommits": ["7ae846e8cdf91d9b34d099bf343d3291f6863831"], "commitsDetails": [{"nameRev": "7ae846e8cdf91d9b34d099bf343d3291f6863831 tags/async-http-client-1.9.27~2", "commitMessage": "Fix connection reuse strategy on HTTP/1.0, close #911\n", "commitParents": ["668d020105d24c2f38f8b1f7234303064cb52527"], "spoonStatsSkippedReason": "", "commitHash": "7ae846e8cdf91d9b34d099bf343d3291f6863831", "authoredDateTime": "2015-06-04 15:25:43", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProviderConfig.java"}, {"insertions": 0, "deletions": 38, "lines": 38, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/Http1Point1ConnectionStrategy.java"}, {"insertions": 58, "deletions": 0, "lines": 58, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/DefaultConnectionStrategy.java"}], "commitDateTime": "2015-06-04 15:25:43", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProviderConfig"}], "spoonFilePath": "NettyAsyncHttpProviderConfig.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.handler.Http1Point1ConnectionStrategy"}], "spoonFilePath": "Http1Point1ConnectionStrategy.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.DefaultConnectionStrategy"}], "spoonFilePath": "DefaultConnectionStrategy.java"}]}, {"nameRev": "cd9f3c550396f34aa9e176e0aa599bbfb6d53d6e tags/2.0.0-alpha5~4", "commitMessage": "Fix connection reuse strategy on HTTP/1.0, close #911\n", "commitParents": ["834c3450e1c23f636b5867b43c302994496e3c02"], "spoonStatsSkippedReason": "", "commitHash": "cd9f3c550396f34aa9e176e0aa599bbfb6d53d6e", "authoredDateTime": "2015-06-04 15:28:46", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 59, "deletions": 0, "lines": 59, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/handler/DefaultConnectionStrategy.java"}, {"insertions": 0, "deletions": 40, "lines": 40, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/handler/Http1Point1ConnectionStrategy.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/NettyAsyncHttpProviderConfig.java"}, {"insertions": 0, "deletions": 39, "lines": 39, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/netty/handler/Http1Point1ConnectionStrategy.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/netty/NettyAsyncHttpProviderConfig.java"}, {"insertions": 60, "deletions": 0, "lines": 60, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/netty/handler/DefaultConnectionStrategy.java"}], "commitDateTime": "2015-06-04 15:28:46", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.NettyAsyncHttpProviderConfig"}], "spoonFilePath": "NettyAsyncHttpProviderConfig.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.Http1Point1ConnectionStrategy"}], "spoonFilePath": "Http1Point1ConnectionStrategy.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.DefaultConnectionStrategy"}], "spoonFilePath": "DefaultConnectionStrategy.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/911", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 60, "deletions": 40, "lines": 100, "gitFilesChange": 3}, "title": "Netty: Connection reuse strategy broken on HTTP/1.0", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/handler", "src/main/java/com/ning/http/client/providers/netty"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 3, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 1, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2015-06-04 09:48:05", "commits": {"bb211abd2d219d535ac0de07a7383d1bbbac0002": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "e2c15f877d3aa08ed0b77f3af0599545719f71c4": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.request.NettyRequestFactory.newNettyRequest(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,boolean,org.asynchttpclient.proxy.ProxyServer)", "org.asynchttpclient.netty.request.NettyRequestFactoryBase.connectionHeader(boolean,boolean)", "org.asynchttpclient.util.AsyncHttpProviderUtils.keepAliveHeaderValue(org.asynchttpclient.AsyncHttpClientConfig)"], "closed": "2015-06-04 09:50:13", "filteredCommits": ["e2c15f877d3aa08ed0b77f3af0599545719f71c4"], "commitsDetails": [{"nameRev": "e2c15f877d3aa08ed0b77f3af0599545719f71c4 tags/2.0.0-alpha5~6", "commitMessage": "Don't send \"Connection: close\" on HTTP/1.0, close #910\n", "commitParents": ["b8175e63b35b288c8939cfadcc6365142c04344f"], "spoonStatsSkippedReason": "", "commitHash": "e2c15f877d3aa08ed0b77f3af0599545719f71c4", "authoredDateTime": "2015-06-04 11:50:07", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 9, "deletions": 0, "lines": 9, "filePath": "api/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactoryBase.java"}, {"insertions": 7, "deletions": 15, "lines": 22, "filePath": "api/src/main/java/org/asynchttpclient/util/AsyncHttpProviderUtils.java"}, {"insertions": 3, "deletions": 2, "lines": 5, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactory.java"}, {"insertions": 8, "deletions": 4, "lines": 12, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactory.java"}], "commitDateTime": "2015-06-04 11:50:07", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 9, "MOV": 3, "INS": 4, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestFactory.newNettyRequest(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,boolean,org.asynchttpclient.proxy.ProxyServer)"}], "spoonFilePath": "NettyRequestFactory.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestFactoryBase.connectionHeader(boolean,boolean)"}], "spoonFilePath": "NettyRequestFactoryBase.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.util.AsyncHttpProviderUtils.keepAliveHeaderValue(org.asynchttpclient.AsyncHttpClientConfig)"}], "spoonFilePath": "AsyncHttpProviderUtils.java"}]}, {"nameRev": "bb211abd2d219d535ac0de07a7383d1bbbac0002 tags/async-http-client-1.9.27~4", "commitMessage": "Don't send \"Connection: close\" on HTTP/1.0, close #910\n", "commitParents": ["407cff0cbb54d7d66338cb08c6103f4daa4ff8f4"], "spoonStatsSkippedReason": "", "commitHash": "bb211abd2d219d535ac0de07a7383d1bbbac0002", "authoredDateTime": "2015-06-04 11:50:16", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 7, "deletions": 2, "lines": 9, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestFactory.java"}, {"insertions": 3, "deletions": 2, "lines": 5, "filePath": "src/main/java/com/ning/http/client/providers/jdk/JDKAsyncHttpProvider.java"}, {"insertions": 7, "deletions": 2, "lines": 9, "filePath": "src/main/java/com/ning/http/util/AsyncHttpProviderUtils.java"}], "commitDateTime": "2015-06-04 11:50:16", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.jdk.JDKAsyncHttpProvider.AsyncHttpUrlConnection.configure(com.ning.http.client.uri.Uri,java.net.HttpURLConnection,com.ning.http.client.Request)"}], "spoonFilePath": "JDKAsyncHttpProvider.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 10, "MOV": 4, "INS": 4, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.newNettyRequest(com.ning.http.client.Request,com.ning.http.client.uri.Uri,boolean,com.ning.http.client.ProxyServer)"}], "spoonFilePath": "NettyRequestFactory.java"}, {"spoonMethods": [{"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.util.AsyncHttpProviderUtils.keepAliveHeaderValue(com.ning.http.client.AsyncHttpClientConfig)"}], "spoonFilePath": "AsyncHttpProviderUtils.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/910", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 27, "deletions": 21, "lines": 48, "gitFilesChange": 4}, "title": "Netty: Don't send \"Connection: close\" on HTTP/1.0", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["providers/netty3/src/main/java/org/asynchttpclient/netty/request", "providers/netty4/src/main/java/org/asynchttpclient/netty/request", "api/src/main/java/org/asynchttpclient/util", "api/src/main/java/org/asynchttpclient/netty/request"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 3, "TOT": 11, "MOV": 3, "INS": 5, "DEL": 3, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2015-06-04 09:15:23", "commits": {"afee07dbd0acdc5fe702cb8acd4ca2650d60e984": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "941b2ca7b46b2205785d3d711da839543bef98d8": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "91c0f637a164a75c9176f5133d77f1e5b5ee81e3": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 2, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.request.NettyRequestSender.sendRequestWithNewChannel(com.ning.http.client.Request,com.ning.http.client.uri.Uri,com.ning.http.client.ProxyServer,boolean,com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.AsyncHandler,boolean)", "org.asynchttpclient.netty.request.NettyRequestFactory.newNettyRequest(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,boolean,org.asynchttpclient.proxy.ProxyServer)", "com.ning.http.client.providers.netty.request.NettyRequestFactory.body(com.ning.http.client.Request,boolean)", "org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithNewChannel(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,org.asynchttpclient.proxy.ProxyServer,boolean,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,boolean)", "com.ning.http.client.providers.netty.request.NettyRequestFactory.firstRequestOnlyProxyAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.ProxyServer,org.jboss.netty.handler.codec.http.HttpMethod)", "org.asynchttpclient.netty.request.NettyRequestFactoryBase.requestUri(org.asynchttpclient.uri.Uri,org.asynchttpclient.proxy.ProxyServer,boolean)", "org.asynchttpclient.netty.request.NettyRequestFactoryBase.firstRequestOnlyProxyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,boolean)", "com.ning.http.client.providers.netty.request.NettyRequestFactory.requestUri(com.ning.http.client.uri.Uri,com.ning.http.client.ProxyServer,boolean)", "org.asynchttpclient.netty.request.NettyRequestFactory.requestUri(org.asynchttpclient.uri.Uri,org.asynchttpclient.proxy.ProxyServer,org.jboss.netty.handler.codec.http.HttpMethod)", "com.ning.http.client.providers.netty.request.NettyRequestFactory.requestUri(com.ning.http.client.uri.Uri,com.ning.http.client.ProxyServer,org.jboss.netty.handler.codec.http.HttpMethod)", "org.asynchttpclient.netty.request.NettyRequestFactoryBase.getProxyAuthorizationHeader(org.asynchttpclient.Request)", "com.ning.http.client.providers.netty.request.NettyRequestFactory.firstRequestOnlyProxyAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.ProxyServer,boolean)", "com.ning.http.client.providers.netty.request.NettyRequestFactory.systematicProxyAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.Realm,com.ning.http.client.ProxyServer,boolean)", "org.asynchttpclient.netty.request.NettyRequestFactory.firstRequestOnlyProxyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.jboss.netty.handler.codec.http.HttpMethod)", "org.asynchttpclient.netty.request.NettyRequestFactory.systematicProxyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.Realm,org.jboss.netty.handler.codec.http.HttpMethod)", "org.asynchttpclient.netty.request.NettyRequestFactory.body(org.asynchttpclient.Request,boolean)", "org.asynchttpclient.netty.request.NettyRequestFactory.body(org.asynchttpclient.Request,org.jboss.netty.handler.codec.http.HttpMethod)", "com.ning.http.client.providers.netty.request.NettyRequestFactory.body(com.ning.http.client.Request,org.jboss.netty.handler.codec.http.HttpMethod)", "com.ning.http.client.providers.netty.request.NettyRequestFactory.systematicProxyAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.Realm,com.ning.http.client.ProxyServer,org.jboss.netty.handler.codec.http.HttpMethod)", "org.asynchttpclient.netty.request.NettyRequestFactoryBase.systematicProxyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.Realm,boolean)", "com.ning.http.client.providers.netty.request.NettyRequestFactory.newNettyRequest(com.ning.http.client.Request,com.ning.http.client.uri.Uri,boolean,com.ning.http.client.ProxyServer)"], "closed": "2015-06-04 09:23:40", "filteredCommits": ["941b2ca7b46b2205785d3d711da839543bef98d8", "91c0f637a164a75c9176f5133d77f1e5b5ee81e3"], "commitsDetails": [{"nameRev": "941b2ca7b46b2205785d3d711da839543bef98d8 tags/async-http-client-1.9.27~6", "commitMessage": "Use HTTP/1.0 when connection pooling is disabled, close #909\n", "commitParents": ["80777b84e48ecc2cf24db661a0c163f9cb4b4ec5"], "spoonStatsSkippedReason": "", "commitHash": "941b2ca7b46b2205785d3d711da839543bef98d8", "authoredDateTime": "2015-06-04 11:22:48", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestSender.java"}, {"insertions": 14, "deletions": 12, "lines": 26, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestFactory.java"}], "commitDateTime": "2015-06-04 11:22:48", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 3, "TOT": 6, "MOV": 3, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestSender.sendRequestWithNewChannel(com.ning.http.client.Request,com.ning.http.client.uri.Uri,com.ning.http.client.ProxyServer,boolean,com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.AsyncHandler,boolean)"}], "spoonFilePath": "NettyRequestSender.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.firstRequestOnlyProxyAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.ProxyServer,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.systematicProxyAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.Realm,com.ning.http.client.ProxyServer,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.body(com.ning.http.client.Request,boolean)"}, {"UPD": 2, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.firstRequestOnlyProxyAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.ProxyServer,org.jboss.netty.handler.codec.http.HttpMethod)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.requestUri(com.ning.http.client.uri.Uri,com.ning.http.client.ProxyServer,boolean)"}, {"UPD": 2, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.systematicProxyAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.Realm,com.ning.http.client.ProxyServer,org.jboss.netty.handler.codec.http.HttpMethod)"}, {"UPD": 2, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.requestUri(com.ning.http.client.uri.Uri,com.ning.http.client.ProxyServer,org.jboss.netty.handler.codec.http.HttpMethod)"}, {"UPD": 2, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.body(com.ning.http.client.Request,org.jboss.netty.handler.codec.http.HttpMethod)"}, {"UPD": 4, "TOT": 7, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.newNettyRequest(com.ning.http.client.Request,com.ning.http.client.uri.Uri,boolean,com.ning.http.client.ProxyServer)"}], "spoonFilePath": "NettyRequestFactory.java"}]}, {"nameRev": "afee07dbd0acdc5fe702cb8acd4ca2650d60e984 tags/async-http-client-1.9.32~4", "commitMessage": "Revert back #909, close #1053\n", "commitParents": ["0b6e419f6e5dfdc197aea3a4d6bb4da933d3f4cf"], "spoonStatsSkippedReason": "", "commitHash": "afee07dbd0acdc5fe702cb8acd4ca2650d60e984", "authoredDateTime": "2015-12-08 08:56:11", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestFactory.java"}], "commitDateTime": "2015-12-08 08:56:11", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.newNettyRequest(com.ning.http.client.Request,com.ning.http.client.uri.Uri,boolean,com.ning.http.client.ProxyServer)"}], "spoonFilePath": "NettyRequestFactory.java"}]}, {"nameRev": "91c0f637a164a75c9176f5133d77f1e5b5ee81e3 tags/2.0.0-alpha5~8", "commitMessage": "Use HTTP/1.0 when connection pooling is disabled #909\n", "commitParents": ["79238a2463f0dc875e54091b69797fc5a62cbbba"], "spoonStatsSkippedReason": "", "commitHash": "91c0f637a164a75c9176f5133d77f1e5b5ee81e3", "authoredDateTime": "2015-06-04 11:23:17", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 80, "deletions": 3, "lines": 83, "filePath": "api/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactoryBase.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java"}, {"insertions": 14, "deletions": 80, "lines": 94, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactory.java"}, {"insertions": 15, "deletions": 80, "lines": 95, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactory.java"}], "commitDateTime": "2015-06-04 11:23:17", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 3, "TOT": 6, "MOV": 3, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithNewChannel(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,org.asynchttpclient.proxy.ProxyServer,boolean,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,boolean)"}], "spoonFilePath": "NettyRequestSender.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestFactoryBase.firstRequestOnlyProxyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestFactoryBase.getProxyAuthorizationHeader(org.asynchttpclient.Request)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestFactoryBase.systematicProxyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.Realm,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestFactoryBase.requestUri(org.asynchttpclient.uri.Uri,org.asynchttpclient.proxy.ProxyServer,boolean)"}], "spoonFilePath": "NettyRequestFactoryBase.java"}, {"spoonMethods": [{"UPD": 4, "TOT": 9, "MOV": 1, "INS": 2, "DEL": 2, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestFactory.newNettyRequest(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,boolean,org.asynchttpclient.proxy.ProxyServer)"}, {"UPD": 0, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestFactory.firstRequestOnlyProxyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.jboss.netty.handler.codec.http.HttpMethod)"}, {"UPD": 2, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestFactory.body(org.asynchttpclient.Request,org.jboss.netty.handler.codec.http.HttpMethod)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestFactory.body(org.asynchttpclient.Request,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestFactory.requestUri(org.asynchttpclient.uri.Uri,org.asynchttpclient.proxy.ProxyServer,org.jboss.netty.handler.codec.http.HttpMethod)"}, {"UPD": 3, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestFactory.systematicProxyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.proxy.ProxyServer,org.asynchttpclient.Realm,org.jboss.netty.handler.codec.http.HttpMethod)"}], "spoonFilePath": "NettyRequestFactory.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/909", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 129, "deletions": 181, "lines": 310, "gitFilesChange": 7}, "title": "Netty: Use HTTP/1.0 when connection pooling is disabled", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["providers/netty3/src/main/java/org/asynchttpclient/netty/request", "providers/netty4/src/main/java/org/asynchttpclient/netty/request", "src/main/java/com/ning/http/client/providers/netty/request", "api/src/main/java/org/asynchttpclient/netty/request"], "spoonStatsSummary": {"UPD": 27, "spoonMethodsChanged": 21, "TOT": 60, "MOV": 11, "INS": 12, "DEL": 10, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2015-06-03 23:01:03", "commits": {"a69fe2d2d8fa89cab3e825273cac337cbdf3612c": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "fab52d12b1fd5520ffc5030ce0b92f69eae2ed0d": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.request.NettyRequestFactory.hostHeader(com.ning.http.client.Request,com.ning.http.client.uri.Uri)"], "closed": "2015-06-03 23:12:35", "filteredCommits": ["a69fe2d2d8fa89cab3e825273cac337cbdf3612c"], "commitsDetails": [{"nameRev": "a69fe2d2d8fa89cab3e825273cac337cbdf3612c tags/async-http-client-1.9.27~8", "commitMessage": "Fix Host header is broken on virtual host, close #907\n", "commitParents": ["77dadda29d95ac59e3577f1eb75011c8a66ce969"], "spoonStatsSkippedReason": "", "commitHash": "a69fe2d2d8fa89cab3e825273cac337cbdf3612c", "authoredDateTime": "2015-06-04 01:01:37", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 8, "deletions": 3, "lines": 11, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestFactory.java"}], "commitDateTime": "2015-06-04 01:01:37", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 9, "MOV": 6, "INS": 2, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.hostHeader(com.ning.http.client.Request,com.ning.http.client.uri.Uri)"}], "spoonFilePath": "NettyRequestFactory.java"}]}, {"nameRev": "fab52d12b1fd5520ffc5030ce0b92f69eae2ed0d tags/2.0.0-alpha5~13", "commitMessage": "Fix Host header is broken on virtual host, close #907\n", "commitParents": ["0df574027fd69fa3a766f7b8781ee6cd67b4c4d7"], "spoonStatsSkippedReason": "", "commitHash": "fab52d12b1fd5520ffc5030ce0b92f69eae2ed0d", "authoredDateTime": "2015-06-04 01:07:11", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 11, "deletions": 0, "lines": 11, "filePath": "api/src/main/java/org/asynchttpclient/util/AsyncHttpProviderUtils.java"}, {"insertions": 0, "deletions": 6, "lines": 6, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactory.java"}, {"insertions": 0, "deletions": 6, "lines": 6, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactory.java"}], "commitDateTime": "2015-06-04 01:07:11", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestFactory.hostHeader(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri)"}], "spoonFilePath": "NettyRequestFactory.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.AsyncHttpProviderUtils.hostHeader(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri)"}], "spoonFilePath": "AsyncHttpProviderUtils.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/907", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 8, "deletions": 3, "lines": 11, "gitFilesChange": 1}, "title": "Netty: Host header is broken on virtual host", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/request"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 9, "MOV": 6, "INS": 2, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2015-06-03 20:38:21", "commits": {"f9262793679a179b7bc7e426666e18bb2648ca57": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "9c083312be93740753652640c808a9d399ee79fb": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.util.AsyncHttpProviderUtils.getDefaultPort(com.ning.http.client.uri.Uri)", "com.ning.http.util.AsyncHttpProviderUtils.getSchemeDefaultPort(java.lang.String)", "com.ning.http.client.providers.netty.request.NettyRequestFactory.hostHeader(com.ning.http.client.Request,com.ning.http.client.uri.Uri)"], "closed": "2015-06-03 20:40:41", "filteredCommits": ["f9262793679a179b7bc7e426666e18bb2648ca57"], "commitsDetails": [{"nameRev": "f9262793679a179b7bc7e426666e18bb2648ca57 tags/async-http-client-1.9.27~11", "commitMessage": "Fix host header, close #906\n", "commitParents": ["2f3755b49fe3fb40cfc4eedd2bef0a13ef74f86b"], "spoonStatsSkippedReason": "", "commitHash": "f9262793679a179b7bc7e426666e18bb2648ca57", "authoredDateTime": "2015-06-03 22:38:43", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestFactory.java"}, {"insertions": 6, "deletions": 2, "lines": 8, "filePath": "src/main/java/com/ning/http/util/AsyncHttpProviderUtils.java"}], "commitDateTime": "2015-06-03 22:38:43", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.hostHeader(com.ning.http.client.Request,com.ning.http.client.uri.Uri)"}], "spoonFilePath": "NettyRequestFactory.java"}, {"spoonMethods": [{"UPD": 3, "TOT": 15, "MOV": 10, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.util.AsyncHttpProviderUtils.getDefaultPort(com.ning.http.client.uri.Uri)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.util.AsyncHttpProviderUtils.getSchemeDefaultPort(java.lang.String)"}], "spoonFilePath": "AsyncHttpProviderUtils.java"}]}, {"nameRev": "9c083312be93740753652640c808a9d399ee79fb tags/2.0.0-alpha5~15", "commitMessage": "Fix host header, close #906\n", "commitParents": ["b6e757475de93f897c5f7e1b14aa04be9f6bedee"], "spoonStatsSkippedReason": "", "commitHash": "9c083312be93740753652640c808a9d399ee79fb", "authoredDateTime": "2015-06-03 22:40:35", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 6, "deletions": 2, "lines": 8, "filePath": "api/src/main/java/org/asynchttpclient/util/AsyncHttpProviderUtils.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactory.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactory.java"}], "commitDateTime": "2015-06-03 22:40:35", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestFactory.hostHeader(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri)"}], "spoonFilePath": "NettyRequestFactory.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.AsyncHttpProviderUtils.getSchemeDefaultPort(java.lang.String)"}, {"UPD": 3, "TOT": 15, "MOV": 10, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.util.AsyncHttpProviderUtils.getDefaultPort(org.asynchttpclient.uri.Uri)"}], "spoonFilePath": "AsyncHttpProviderUtils.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/906", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 7, "deletions": 3, "lines": 10, "gitFilesChange": 2}, "title": "Netty: Host header is broken on non default ports", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/request", "src/main/java/com/ning/http/util"], "spoonStatsSummary": {"UPD": 4, "spoonMethodsChanged": 3, "TOT": 18, "MOV": 11, "INS": 2, "DEL": 1, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Regression introduced in #899\n", "labels": ["Defect", "Netty"]}, {"created": "2015-06-03 20:13:01", "commits": {"6c6004fc85456cb1f90e89efcfbbd4ea77983f8a": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "0ad8b05a3dd1297d5681bf32e14fc493082d2dcb": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "2f3755b49fe3fb40cfc4eedd2bef0a13ef74f86b": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "0e21121bd2ae7779a647d8e77b1c465a2bbf37fa": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "b6e757475de93f897c5f7e1b14aa04be9f6bedee": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.handler.Protocol.exitAfterHandlingRedirect(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm)"], "closed": "2015-06-03 20:17:03", "filteredCommits": ["2f3755b49fe3fb40cfc4eedd2bef0a13ef74f86b"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "6c6004fc85456cb1f90e89efcfbbd4ea77983f8a", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "0ad8b05a3dd1297d5681bf32e14fc493082d2dcb", "authoredDateTime": "", "commitGHEventType": "closed", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "2f3755b49fe3fb40cfc4eedd2bef0a13ef74f86b tags/async-http-client-1.9.27~12", "commitMessage": "Fix followRedirect propagation, close #905\n", "commitParents": ["84e96b09f36ac9480ac42a6df7af0403896c05ea"], "spoonStatsSkippedReason": "", "commitHash": "2f3755b49fe3fb40cfc4eedd2bef0a13ef74f86b", "authoredDateTime": "2015-06-03 22:13:13", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 6, "deletions": 3, "lines": 9, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/Protocol.java"}], "commitDateTime": "2015-06-03 22:21:11", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 6, "TOT": 13, "MOV": 6, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.Protocol.exitAfterHandlingRedirect(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm)"}], "spoonFilePath": "Protocol.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "0e21121bd2ae7779a647d8e77b1c465a2bbf37fa", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "b6e757475de93f897c5f7e1b14aa04be9f6bedee tags/2.0.0-alpha5~16", "commitMessage": "Fix followRedirect propagation, close #905\n", "commitParents": ["432077414070d8fffe2720b3a20568355b152998"], "spoonStatsSkippedReason": "", "commitHash": "b6e757475de93f897c5f7e1b14aa04be9f6bedee", "authoredDateTime": "2015-06-03 22:16:57", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 6, "deletions": 3, "lines": 9, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/netty/handler/Protocol.java"}, {"insertions": 12, "deletions": 9, "lines": 21, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/handler/Protocol.java"}], "commitDateTime": "2015-06-03 22:21:43", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 6, "TOT": 13, "MOV": 6, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.handler.Protocol.exitAfterHandlingRedirect(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm)"}], "spoonFilePath": "Protocol.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/905", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 6.0, "deletions": 3.0, "lines": 9.0, "gitFilesChange": 1}, "title": "Netty: regression in followRedirect when chain > 1", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/handler"], "spoonStatsSummary": {"UPD": 6.0, "spoonMethodsChanged": 1, "TOT": 13.0, "MOV": 6.0, "INS": 1.0, "DEL": 0.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 4, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Regression introduced in #898, followRedirect is no longer propagated on first redirect.\n", "labels": ["Defect", "Netty"]}, {"created": "2015-06-01 21:27:18", "commits": {"cf247653af9ff0fe46f02b177f0957b2e452dd9f": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "68ba52c70a067313c2dd0c3206a95ec040639477": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.request.NettyRequestSender.sendRequestWithNewChannel(com.ning.http.client.Request,com.ning.http.client.uri.Uri,com.ning.http.client.ProxyServer,boolean,com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.AsyncHandler,boolean)"], "closed": "2015-06-01 22:20:36", "filteredCommits": ["cf247653af9ff0fe46f02b177f0957b2e452dd9f"], "commitsDetails": [{"nameRev": "cf247653af9ff0fe46f02b177f0957b2e452dd9f tags/async-http-client-1.9.27~17", "commitMessage": "Fix NPE on partitionKey when maxConnectionsPerHost is enabled, close #900\n", "commitParents": ["c5200eb5259cb08d6457472de291171fe91d683d"], "spoonStatsSkippedReason": "", "commitHash": "cf247653af9ff0fe46f02b177f0957b2e452dd9f", "authoredDateTime": "2015-06-02 00:18:25", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 5, "lines": 6, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestSender.java"}], "commitDateTime": "2015-06-02 00:18:25", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 7, "MOV": 3, "INS": 1, "DEL": 3, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestSender.sendRequestWithNewChannel(com.ning.http.client.Request,com.ning.http.client.uri.Uri,com.ning.http.client.ProxyServer,boolean,com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.AsyncHandler,boolean)"}], "spoonFilePath": "NettyRequestSender.java"}]}, {"nameRev": "68ba52c70a067313c2dd0c3206a95ec040639477 tags/2.0.0-alpha4~3", "commitMessage": "Fix NPE on partitionKey when maxConnectionsPerHost is enabled, close #900\n", "commitParents": ["9f3bc3bc06d3ec3f3b91098651688ea79a9b32a0"], "spoonStatsSkippedReason": "", "commitHash": "68ba52c70a067313c2dd0c3206a95ec040639477", "authoredDateTime": "2015-06-02 00:20:30", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 7, "lines": 8, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java"}, {"insertions": 1, "deletions": 6, "lines": 7, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java"}], "commitDateTime": "2015-06-02 00:20:32", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 7, "MOV": 3, "INS": 1, "DEL": 3, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithNewChannel(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,org.asynchttpclient.proxy.ProxyServer,boolean,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,boolean)"}], "spoonFilePath": "NettyRequestSender.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/900", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 5, "lines": 6, "gitFilesChange": 1}, "title": "AHC-1.9 Netty3 provider throws NullPointerException on retry if maxConnectionsPerHost is enabled", "statsSkippedReason": "", "user": "jonas-ren", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/request"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 7, "MOV": 3, "INS": 1, "DEL": 3, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "In AHC-1.9, if maxConnectionsPerHost is enabled and the client is sending a second request on either retry or redirect, it will cause an NPE. Stack trace:\n\nJun 01, 2015 11:55:34 AM org.jboss.netty.channel.DefaultChannelFuture\nWARNING: An exception was thrown by ChannelFutureListener.\njava.lang.NullPointerException\n    at java.util.concurrent.ConcurrentHashMap.putVal(ConcurrentHashMap.java:1011)\n    at java.util.concurrent.ConcurrentHashMap.put(ConcurrentHashMap.java:1006)\n    at com.ning.http.client.providers.netty.channel.ChannelManager.registerOpenChannel(ChannelManager.java:387)\n    at com.ning.http.client.providers.netty.request.NettyConnectListener.writeRequest(NettyConnectListener.java:80)\n    at com.ning.http.client.providers.netty.request.NettyConnectListener.onFutureSuccess(NettyConnectListener.java:107)\n    at com.ning.http.client.providers.netty.request.NettyConnectListener.operationComplete(NettyConnectListener.java:138)\n        at org.jboss.netty.channel.DefaultChannelFuture.notifyListener(DefaultChannelFuture.java:431)\n    at org.jboss.netty.channel.DefaultChannelFuture.notifyListeners(DefaultChannelFuture.java:422)\n    at org.jboss.netty.channel.DefaultChannelFuture.setSuccess(DefaultChannelFuture.java:362)\n    at org.jboss.netty.channel.socket.nio.NioWorker$RegisterTask.run(NioWorker.java:156)\n    at org.jboss.netty.channel.socket.nio.AbstractNioSelector.processTaskQueue(AbstractNioSelector.java:372)\n    at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:296)\n    at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)\n    at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)\n    at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\n    at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n\nI investigated a bit and seems like the root cause is that NettyRequestSender doesn't set partitionKey if reclaimCache is true (always true on retry). See: https://github.com/AsyncHttpClient/async-http-client/blob/master/providers/netty3/src/main/java/org/asynchttpclient/netty/request/NettyRequestSender.java#L266-285\n\nThis is causing paritionKey to passed as null to ChannelManager, which throws NPE on put to ConcurrentMap. See: https://github.com/AsyncHttpClient/async-http-client/blob/master/providers/netty3/src/main/java/org/asynchttpclient/netty/channel/ChannelManager.java#L298\n\nSince the ConcurrentMap expect both key and value not to be null, I think it's not unlikely for it to throw NPE on some other cases. Feels like we should be more strict about key/value null checking here.\n", "labels": ["Defect", "Netty"]}, {"created": "2015-06-01 08:16:40", "commits": {"cda1e0c96e143840508edcd02dfa353a8ab9702d": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "cf8873229ef36dc040bf10ec9991c361cc34b4b9": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.request.NettyRequestFactory.hostHeader(com.ning.http.client.Request,com.ning.http.client.uri.Uri)"], "closed": "2015-06-01 08:38:19", "filteredCommits": ["cda1e0c96e143840508edcd02dfa353a8ab9702d"], "commitsDetails": [{"nameRev": "cda1e0c96e143840508edcd02dfa353a8ab9702d tags/async-http-client-1.9.26~1", "commitMessage": "Don't set port in Host header when it's the scheme's default one, close #899\n", "commitParents": ["80bdcb46e37c69146efb1399d4d818512ec4de12"], "spoonStatsSkippedReason": "", "commitHash": "cda1e0c96e143840508edcd02dfa353a8ab9702d", "authoredDateTime": "2015-06-01 10:36:08", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 10, "lines": 13, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestFactory.java"}], "commitDateTime": "2015-06-01 10:36:08", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 7, "MOV": 2, "INS": 3, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.hostHeader(com.ning.http.client.Request,com.ning.http.client.uri.Uri)"}], "spoonFilePath": "NettyRequestFactory.java"}]}, {"nameRev": "cf8873229ef36dc040bf10ec9991c361cc34b4b9 tags/2.0.0-alpha4~6", "commitMessage": "Don't set port in Host header when it's the scheme's default one, close #899\n", "commitParents": ["67b80cf01afc0c28deb6805c8ae7acaecccf91a8"], "spoonStatsSkippedReason": "", "commitHash": "cf8873229ef36dc040bf10ec9991c361cc34b4b9", "authoredDateTime": "2015-06-01 10:38:12", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 4, "deletions": 7, "lines": 11, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactory.java"}, {"insertions": 4, "deletions": 7, "lines": 11, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactory.java"}], "commitDateTime": "2015-06-01 10:38:12", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 7, "MOV": 2, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.NettyRequestFactory.hostHeader(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri)"}], "spoonFilePath": "NettyRequestFactory.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/899", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 3, "deletions": 10, "lines": 13, "gitFilesChange": 1}, "title": "Netty: Don't set Host header port when it's the scheme's default one", "statsSkippedReason": "", "user": "yatindra", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/request"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 1, "TOT": 7, "MOV": 2, "INS": 3, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi,\n\nSo, this is actually not an issue, but I would like to know a workaround for this.\nWhen the Host header in request contains the port as well `Host: www.example.com:443`\nwhich is the default behaviour and which is also as per RFC, servers like IIS fail to parse it properly and return a 404 for a valid URL.\nThis may not be the case always, only when IIS is not configured properly.\nFor direct cases where I know the end URL, I usually set the Host header manually and AHC does not overwrite the value I provide.\nBut in cases where a redirection happens AHC will generate a new request and there I don't have control over the value. I don't have control over the original URL input as well, so updating to the correct URL is also not possible.\nExample URL: https://www.chamberofcommerce.com/short-hills-nj/11218079-massage-envy-spa-short-hills-llc\n\nIs there a workaround for this?\n", "labels": ["Defect", "Netty"]}, {"created": "2015-06-01 06:13:51", "commits": {"80bdcb46e37c69146efb1399d4d818512ec4de12": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "67b80cf01afc0c28deb6805c8ae7acaecccf91a8": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.handler.Protocol.propagatedHeaders(com.ning.http.client.Request,com.ning.http.client.Realm,boolean)", "com.ning.http.client.providers.netty.handler.Protocol.exitAfterHandlingRedirect(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm)"], "closed": "2015-06-01 08:28:47", "filteredCommits": ["80bdcb46e37c69146efb1399d4d818512ec4de12"], "commitsDetails": [{"nameRev": "80bdcb46e37c69146efb1399d4d818512ec4de12 tags/async-http-client-1.9.26~2", "commitMessage": "Drop body when redirecting, close #898\n", "commitParents": ["b36438be523fdaf1d78f605c5688c159de23f55f"], "spoonStatsSkippedReason": "", "commitHash": "80bdcb46e37c69146efb1399d4d818512ec4de12", "authoredDateTime": "2015-06-01 10:28:19", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 20, "deletions": 15, "lines": 35, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/Protocol.java"}], "commitDateTime": "2015-06-01 10:28:19", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 5, "TOT": 21, "MOV": 8, "INS": 2, "DEL": 6, "spoonMethodName": "com.ning.http.client.providers.netty.handler.Protocol.propagatedHeaders(com.ning.http.client.Request,com.ning.http.client.Realm,boolean)"}, {"UPD": 3, "TOT": 9, "MOV": 3, "INS": 2, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.handler.Protocol.exitAfterHandlingRedirect(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm)"}], "spoonFilePath": "Protocol.java"}]}, {"nameRev": "67b80cf01afc0c28deb6805c8ae7acaecccf91a8 tags/2.0.0-alpha4~7", "commitMessage": "Drop body when redirecting, close #898\n", "commitParents": ["b50f63ed4f7b590995d0f07f1ba71efb0c3d1c24"], "spoonStatsSkippedReason": "", "commitHash": "67b80cf01afc0c28deb6805c8ae7acaecccf91a8", "authoredDateTime": "2015-06-01 10:28:41", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 38, "deletions": 23, "lines": 61, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/netty/handler/Protocol.java"}, {"insertions": 21, "deletions": 16, "lines": 37, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/netty/handler/Protocol.java"}], "commitDateTime": "2015-06-01 10:28:41", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 3, "TOT": 9, "MOV": 3, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.netty.handler.Protocol.exitAfterHandlingRedirect(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm)"}, {"UPD": 5, "TOT": 21, "MOV": 8, "INS": 2, "DEL": 6, "spoonMethodName": "org.asynchttpclient.netty.handler.Protocol.propagatedHeaders(org.asynchttpclient.Request,org.asynchttpclient.Realm,boolean)"}], "spoonFilePath": "Protocol.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/898", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 20, "deletions": 15, "lines": 35, "gitFilesChange": 1}, "title": "Netty: Client preserves form params when POST returns with 302 redirect", "statsSkippedReason": "", "user": "yatindra", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/handler"], "spoonStatsSummary": {"UPD": 8, "spoonMethodsChanged": 2, "TOT": 30, "MOV": 11, "INS": 4, "DEL": 7, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi,\n\nWhen the server returns a 302 redirect for a POST request, the client preserves the POST body from the original request, in my case the form params.\n\nThis generally is not an issue, but when proxying through Squid, I get `411 Length Required` which actually is because the request is a `GET` with a body and Content-Length header.\nConfirmed this by\n1. setting strict302Handling to true on client config, in which case the new request remains a POST.\n2. modifying the `com.ning.http.client.providers.netty.handler.Protocol` class as below.\n\nIf this is not considered an AHC issue, then would like a way to configure the resetting of the body in the client config.\n\nI am using AHC version 1.9.6 with Netty provider. Also tested the same with latest 1.9.25.\nThe issue appears to be in `com.ning.http.client.providers.netty.handler.Protocol`\nwhere:\n\n``` java\n// if we are to strictly handle 302, we should keep the original method (which browsers don't)\n// 303 must force GET\nif ((statusCode == FOUND.getCode() && !config.isStrict302Handling()) || statusCode == SEE_OTHER.getCode())\n    requestBuilder.setMethod(\"GET\");\n```\n\nshould be:\n\n``` java\n// if we are to strictly handle 302, we should keep the original method (which browsers don't)\n// 303 must force GET\nif ((statusCode == FOUND.getCode() && !config.isStrict302Handling()) || statusCode == SEE_OTHER.getCode()) {\n    requestBuilder.setMethod(\"GET\");\n    requestBuilder.resetFormParams();\n    requestBuilder.resetNonMultipartData();\n    requestBuilder.resetMultipartData();\n}\n```\n\nThanks\n", "labels": ["Defect", "Netty"]}, {"created": "2015-05-27 23:41:30", "commits": {"b143fb6882a71bb1f4c11f8e26d56d7c56ee9666": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.grizzly.FeedableBodyGenerator.initializeAsynchronousTransfer(org.glassfish.grizzly.filterchain.FilterChainContext,org.glassfish.grizzly.http.HttpRequestPacket)", "com.ning.http.client.providers.grizzly.FeedableBodyGenerator.flushOnSSLHandshakeComplete().2.onComplete(org.glassfish.grizzly.Connection)", "com.ning.http.client.providers.grizzly.FeedableBodyGenerator.feederFlush0(org.glassfish.grizzly.Connection)", "com.ning.http.client.providers.grizzly.FeedableBodyGenerator.feederFlush(org.glassfish.grizzly.Connection)", "com.ning.http.client.providers.grizzly.FeedableBodyGenerator.initializeAsynchronousTransfer(org.glassfish.grizzly.filterchain.FilterChainContext,org.glassfish.grizzly.http.HttpRequestPacket).1.run()"], "closed": "2015-09-11 10:34:36", "filteredCommits": ["b143fb6882a71bb1f4c11f8e26d56d7c56ee9666"], "commitsDetails": [{"nameRev": "b143fb6882a71bb1f4c11f8e26d56d7c56ee9666 tags/async-http-client-1.9.26~7", "commitMessage": "[1.9.x] + fix issue #893\nhttps://github.com/AsyncHttpClient/async-http-client/issues/893\n\"Grizzly FeedableBodyGenerator uses selectors to invoke flush() when using SSL causing failed requests\"\n", "commitParents": ["65897852de6863a381c7f13b55e7cf7e6f0c623a"], "spoonStatsSkippedReason": "", "commitHash": "b143fb6882a71bb1f4c11f8e26d56d7c56ee9666", "authoredDateTime": "2015-05-27 22:37:00", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 26, "deletions": 27, "lines": 53, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/FeedableBodyGenerator.java"}], "commitDateTime": "2015-05-27 22:37:25", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 10, "MOV": 4, "INS": 2, "DEL": 3, "spoonMethodName": "com.ning.http.client.providers.grizzly.FeedableBodyGenerator.initializeAsynchronousTransfer(org.glassfish.grizzly.filterchain.FilterChainContext,org.glassfish.grizzly.http.HttpRequestPacket)"}, {"UPD": 1, "TOT": 6, "MOV": 5, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.FeedableBodyGenerator.initializeAsynchronousTransfer(org.glassfish.grizzly.filterchain.FilterChainContext,org.glassfish.grizzly.http.HttpRequestPacket).1.run()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.FeedableBodyGenerator.feederFlush(org.glassfish.grizzly.Connection)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.FeedableBodyGenerator.feederFlush0(org.glassfish.grizzly.Connection)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.FeedableBodyGenerator.flushOnSSLHandshakeComplete().2.onComplete(org.glassfish.grizzly.Connection)"}], "spoonFilePath": "FeedableBodyGenerator.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/893", "ttf": 106.00027777777778, "gitStatsSummary": {"insertions": 26, "deletions": 27, "lines": 53, "gitFilesChange": 1}, "title": "Grizzly FeedableBodyGenerator uses selectors to invoke flush() when using SSL causing failed requests", "statsSkippedReason": "", "user": "dfeist", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/grizzly"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 5, "TOT": 20, "MOV": 9, "INS": 5, "DEL": 4, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "If the current thread is not a worker thread (for example is SameThreadIOStrategy is being used), then the worker thread pool should be used to invoke feeder.flush() to prevent blocking of selector threads, which depending on size of the body and number of chunks etc. can cause requests to time out and fail. (i'm testing using a 1MB attachment)\n\nA fix for this was introduced back in 2013 by @rlubke in adb42e0373f4a8dd364a2667938af5e6b734130e  , but this did not take into account the SSL case, where flush() is invoked using a HandshakeListener.\n\nThe only current workaround is to use the WorkerThreadIOStrategy, but this isn't ideal if running non-blocking.\n", "labels": ["Defect", "Grizzly"]}, {"created": "2015-05-26 14:50:47", "commits": {"65897852de6863a381c7f13b55e7cf7e6f0c623a": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "42370342853ff7c0cbf6a57a061d16f094af2c4a": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.ProxyServer.isForceHttp10()", "com.ning.http.client.providers.netty.request.NettyRequestFactory.newNettyRequest(com.ning.http.client.Request,com.ning.http.client.uri.Uri,boolean,com.ning.http.client.ProxyServer)", "com.ning.http.client.ProxyServer", "com.ning.http.client.ProxyServer.setForceHttp10(boolean)"], "closed": "2015-05-26 14:54:14", "filteredCommits": ["65897852de6863a381c7f13b55e7cf7e6f0c623a"], "commitsDetails": [{"nameRev": "65897852de6863a381c7f13b55e7cf7e6f0c623a tags/async-http-client-1.9.26~8", "commitMessage": "Don't force CONNECT on HTTP/1.0, add a ProxyServer parameter, close #892\n", "commitParents": ["ba3889e33b3805b14c196b13223acf5cce69c184"], "spoonStatsSkippedReason": "", "commitHash": "65897852de6863a381c7f13b55e7cf7e6f0c623a", "authoredDateTime": "2015-05-26 16:51:41", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestFactory.java"}, {"insertions": 9, "deletions": 0, "lines": 9, "filePath": "src/main/java/com/ning/http/client/ProxyServer.java"}], "commitDateTime": "2015-05-26 16:51:41", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.ProxyServer.isForceHttp10()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.ProxyServer"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.ProxyServer.setForceHttp10(boolean)"}], "spoonFilePath": "ProxyServer.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.newNettyRequest(com.ning.http.client.Request,com.ning.http.client.uri.Uri,boolean,com.ning.http.client.ProxyServer)"}], "spoonFilePath": "NettyRequestFactory.java"}]}, {"nameRev": "42370342853ff7c0cbf6a57a061d16f094af2c4a tags/2.0.0-alpha1~26", "commitMessage": "Don't force CONNECT on HTTP/1.0, add a ProxyServer parameter, close #892\n", "commitParents": ["8ad200f7dca26f88080dcd899d974c94e8b8e10b"], "spoonStatsSkippedReason": "", "commitHash": "42370342853ff7c0cbf6a57a061d16f094af2c4a", "authoredDateTime": "2015-05-26 16:54:09", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty/request/NettyRequestFactory.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty/request/NettyRequestFactory.java"}, {"insertions": 9, "deletions": 0, "lines": 9, "filePath": "api/src/main/java/org/asynchttpclient/ProxyServer.java"}], "commitDateTime": "2015-05-26 16:54:09", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ProxyServer"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ProxyServer.setForceHttp10(boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ProxyServer.isForceHttp10()"}], "spoonFilePath": "ProxyServer.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyRequestFactory.newNettyRequest(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,boolean,org.asynchttpclient.ProxyServer)"}], "spoonFilePath": "NettyRequestFactory.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/892", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 10, "deletions": 1, "lines": 11, "gitFilesChange": 2}, "title": "Netty: Don't force CONNECT on HTTP/1.0, add a ProxyServer parameter", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client", "src/main/java/com/ning/http/client/providers/netty/request"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 4, "TOT": 5, "MOV": 1, "INS": 4, "DEL": 0, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2015-05-21 11:37:27", "commits": {"540d3e8d68ae906adfc3ddb7d3993ee6003aae41": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.cookie.CookieDecoder.CookieBuilder.computeValue(int,int)", "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.cookie()", "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.parse7(int,int,int)", "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.computeValue(java.lang.String,int,int)", "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.parse8(int,int,int)", "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.appendAttribute(java.lang.String,int,int,int,int)", "com.ning.http.client.cookie.CookieUtil.computeExpiresAsMaxAge(java.lang.String)", "com.ning.http.client.cookie.Cookie", "com.ning.http.client.cookie.Cookie.newValidCookie(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,int,boolean,boolean)", "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.parse7(java.lang.String,int,int,int)", "com.ning.http.client.cookie.Cookie.toString()", "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.parse8(java.lang.String,int,int,int)", "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.setCookieAttribute(java.lang.String,int,int,int,int)", "com.ning.http.client.providers.grizzly.GrizzlyResponse.convertCookies(org.glassfish.grizzly.http.Cookies)", "com.ning.http.client.cookie.CookieDecoder.decode(java.lang.String)", "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.parse6(int,int,int)", "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.parse6(java.lang.String,int,int,int)", "com.ning.http.client.cookie.CookieDecoder.CookieBuilder", "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.parse4(java.lang.String,int,int,int)", "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.mergeMaxAgeAndExpires()", "com.ning.http.client.cookie.Cookie.getMaxAge()", "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.parse4(int,int,int)", "com.ning.http.client.cookie.CookieUtil.computeExpires(java.lang.String)", "com.ning.http.client.cookie.Cookie.getExpires()"], "closed": "2015-05-21 12:02:41", "filteredCommits": ["540d3e8d68ae906adfc3ddb7d3993ee6003aae41"], "commitsDetails": [{"nameRev": "540d3e8d68ae906adfc3ddb7d3993ee6003aae41 tags/async-http-client-1.9.25~1", "commitMessage": "Turn maxAge into long and merge expires, close #889\n", "commitParents": ["b72bbbf7e3d62e4dfcb10bee6527a413ecca5ccc"], "spoonStatsSkippedReason": "", "commitHash": "540d3e8d68ae906adfc3ddb7d3993ee6003aae41", "authoredDateTime": "2015-05-21 14:00:42", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 6, "deletions": 11, "lines": 17, "filePath": "src/main/java/com/ning/http/client/cookie/Cookie.java"}, {"insertions": 4, "deletions": 33, "lines": 37, "filePath": "pom.xml"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/test/java/com/ning/http/client/async/RemoteSiteTest.java"}, {"insertions": 6, "deletions": 4, "lines": 10, "filePath": "src/main/java/com/ning/http/client/cookie/CookieUtil.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/test/java/com/ning/http/client/async/AsyncProvidersBasicTest.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyResponse.java"}, {"insertions": 39, "deletions": 24, "lines": 63, "filePath": "src/main/java/com/ning/http/client/cookie/CookieDecoder.java"}, {"insertions": 3, "deletions": 4, "lines": 7, "filePath": "src/test/java/com/ning/http/client/providers/netty/NettyAsyncResponseTest.java"}], "commitDateTime": "2015-05-21 14:00:42", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.cookie.CookieDecoder.decode(java.lang.String)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.computeValue(int,int)"}, {"UPD": 2, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.cookie()"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 4, "spoonMethodName": "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.parse6(java.lang.String,int,int,int)"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 4, "DEL": 0, "spoonMethodName": "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.parse7(int,int,int)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.appendAttribute(java.lang.String,int,int,int,int)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.parse8(int,int,int)"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 4, "spoonMethodName": "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.computeValue(java.lang.String,int,int)"}, {"UPD": 4, "TOT": 9, "MOV": 2, "INS": 3, "DEL": 0, "spoonMethodName": "com.ning.http.client.cookie.CookieDecoder.CookieBuilder"}, {"UPD": 1, "TOT": 6, "MOV": 0, "INS": 0, "DEL": 5, "spoonMethodName": "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.parse7(java.lang.String,int,int,int)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 3, "spoonMethodName": "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.parse4(java.lang.String,int,int,int)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.mergeMaxAgeAndExpires()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.parse8(java.lang.String,int,int,int)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.parse6(int,int,int)"}, {"UPD": 0, "TOT": 5, "MOV": 1, "INS": 0, "DEL": 4, "spoonMethodName": "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.setCookieAttribute(java.lang.String,int,int,int,int)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.cookie.CookieDecoder.CookieBuilder.parse4(int,int,int)"}], "spoonFilePath": "CookieDecoder.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.AsyncProvidersBasicTest.asyncDoGetCookieTest()"}], "spoonFilePath": "AsyncProvidersBasicTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.cookie.CookieUtil.computeExpires(java.lang.String)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.ning.http.client.cookie.CookieUtil.computeExpiresAsMaxAge(java.lang.String)"}], "spoonFilePath": "CookieUtil.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.RemoteSiteTest.evilCoookieTest()"}], "spoonFilePath": "RemoteSiteTest.java"}, {"spoonMethods": [{"UPD": 5, "TOT": 10, "MOV": 2, "INS": 1, "DEL": 2, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncResponseTest.testCookieParseExpires()"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncResponseTest.testCookieParseWeirdExpiresValue()"}], "spoonFilePath": "NettyAsyncResponseTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.cookie.Cookie.getMaxAge()"}, {"UPD": 2, "TOT": 5, "MOV": 0, "INS": 0, "DEL": 3, "spoonMethodName": "com.ning.http.client.cookie.Cookie"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.cookie.Cookie.newValidCookie(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,int,boolean,boolean)"}, {"UPD": 2, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.cookie.Cookie.getExpires()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.cookie.Cookie.toString()"}], "spoonFilePath": "Cookie.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyResponse.convertCookies(org.glassfish.grizzly.http.Cookies)"}], "spoonFilePath": "GrizzlyResponse.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/889", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 51, "deletions": 40, "lines": 91, "gitFilesChange": 4}, "title": "Turn Cookie.MaxAge into long", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/grizzly", "src/main/java/com/ning/http/client/cookie"], "spoonStatsSummary": {"UPD": 15, "spoonMethodsChanged": 24, "TOT": 69, "MOV": 6, "INS": 19, "DEL": 29, "spoonFilesChanged": 4}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Possible int overflow\n", "labels": ["Defect"]}, {"created": "2015-05-19 14:56:52", "commits": {"0a5e82cccb67d903b35c07e46ad1d25858357a11": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}}, "numCommits": 1, "closed": "2015-05-24 14:54:31", "filteredCommits": ["0a5e82cccb67d903b35c07e46ad1d25858357a11"], "commitsDetails": [{"nameRev": "0a5e82cccb67d903b35c07e46ad1d25858357a11 tags/async-http-client-1.9.26~10", "commitMessage": "[1.9.x] + fix issue #885\nhttps://github.com/AsyncHttpClient/async-http-client/issues/885\n\"Grizzly: Connection: keep-alive header is sent even if keep-alive is disabled\"", "commitParents": ["2caa627172a82b8b5e62faaa2b74d2410317ac7f"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "0a5e82cccb67d903b35c07e46ad1d25858357a11", "authoredDateTime": "2015-05-24 07:52:02", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 5, "deletions": 446, "lines": 451, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java"}, {"insertions": 426, "deletions": 0, "lines": 426, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/AsyncHttpClientFilter.java"}, {"insertions": 23, "deletions": 9, "lines": 32, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/ConnectionManager.java"}], "commitDateTime": "2015-05-24 07:52:02", "commitUser": "oleksiys", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/885", "ttf": 4.000277777777778, "gitStatsSummary": {"insertions": 454, "deletions": 455, "lines": 909, "gitFilesChange": 3}, "title": "Grizzly: Connection: keep-alive header is sent even if keep-alive is disabled", "statsSkippedReason": "", "user": "andresgregoire", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/grizzly"], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "GrizzlyAsyncHttpProvider always adds the \"Connection: keep-alive\" header to the request. If allowPoolingConnections is set to false in the AsyncHttpClientConfig, then the header \"Connection: close\" should be added, as the client will not reuse the connection.\n", "labels": ["Defect", "Grizzly"]}, {"created": "2015-05-04 15:25:10", "user": "afelisatti", "body": "This is related to #847 . Could that fix be backported?\n", "closed": "2015-05-05 18:16:20", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/874", "ttf": 1.0002777777777778, "commits": {}, "labels": ["Defect"], "title": "Digest auth not working in 1.8.x"}, {"created": "2015-04-28 17:32:53", "commits": {"1d3badf837125c11e254579ac47986f61dc26243": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "fb2fac95c3a8c11e061990d257635db242c505c0": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.providers.netty4.handler.Protocol.exitAfterHandlingRedirect(io.netty.channel.Channel,org.asynchttpclient.providers.netty4.future.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm)", "org.asynchttpclient.providers.netty4.handler.Protocol.propagatedHeaders(org.asynchttpclient.Request,org.asynchttpclient.Realm,boolean)", "org.asynchttpclient.providers.netty4.handler.Protocol", "org.asynchttpclient.providers.netty4.handler.Protocol.exitAfterProcessingFilters(io.netty.channel.Channel,org.asynchttpclient.providers.netty4.future.NettyResponseFuture,org.asynchttpclient.AsyncHandler,org.asynchttpclient.HttpResponseStatus,org.asynchttpclient.HttpResponseHeaders)"], "closed": "2015-04-28 17:35:59", "filteredCommits": ["1d3badf837125c11e254579ac47986f61dc26243"], "commitsDetails": [{"nameRev": "1d3badf837125c11e254579ac47986f61dc26243 tags/2.0.0-alpha1~51", "commitMessage": "Properly reuse connection on redirect when Location port is the default one, close #870\n", "commitParents": ["fc45a6a51c1ba838242a3ba05075c073a5ce0210"], "spoonStatsSkippedReason": "", "commitHash": "1d3badf837125c11e254579ac47986f61dc26243", "authoredDateTime": "2015-04-28 19:35:51", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 4, "deletions": 11, "lines": 15, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/handler/Protocol.java"}, {"insertions": 4, "deletions": 11, "lines": 15, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/handler/Protocol.java"}], "commitDateTime": "2015-04-28 19:35:51", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty4.handler.Protocol.exitAfterHandlingRedirect(io.netty.channel.Channel,org.asynchttpclient.providers.netty4.future.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty4.handler.Protocol.exitAfterProcessingFilters(io.netty.channel.Channel,org.asynchttpclient.providers.netty4.future.NettyResponseFuture,org.asynchttpclient.AsyncHandler,org.asynchttpclient.HttpResponseStatus,org.asynchttpclient.HttpResponseHeaders)"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty4.handler.Protocol"}, {"UPD": 5, "TOT": 5, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty4.handler.Protocol.propagatedHeaders(org.asynchttpclient.Request,org.asynchttpclient.Realm,boolean)"}], "spoonFilePath": "Protocol.java"}]}, {"nameRev": "fb2fac95c3a8c11e061990d257635db242c505c0 tags/async-http-client-1.9.21~8", "commitMessage": "Properly reuse connection on redirect when Location port is the default one, close #870\n", "commitParents": ["6f46600810d3ffc813fe338244dd8037ff4bf09d"], "spoonStatsSkippedReason": "", "commitHash": "fb2fac95c3a8c11e061990d257635db242c505c0", "authoredDateTime": "2015-04-28 19:33:40", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/Protocol.java"}], "commitDateTime": "2015-04-28 19:33:40", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.Protocol.exitAfterHandlingRedirect(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm)"}], "spoonFilePath": "Protocol.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/870", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 8, "deletions": 22, "lines": 30, "gitFilesChange": 2}, "title": "Netty: properly reuse connection on redirect when Location port is the default one", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/handler", "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/handler"], "spoonStatsSummary": {"UPD": 12, "spoonMethodsChanged": 4, "TOT": 12, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2015-04-28 14:45:13", "user": "afelisatti", "body": "When bad credentials are used, the server sends a 401 after the client type 3 message. It seems Grizzly then tries to start the auth process again which ends up in a 400 response from the server. I uploaded the simplified exchange observed here http://pastebin.com/WYbAaJbJ\n", "closed": "2015-04-29 13:00:39", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/869", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Defect", "Grizzly"], "title": "NTLM auth using bad credentials results in a 400 with Grizzly"}, {"created": "2015-04-27 20:58:45", "commits": {"6fbf2dee58e098a693cd3850089da1becec23b96": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "e8e3ec009d6cce0e4b6251d35391b738fd09b971": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.handler.Protocol.exitAfterHandlingRedirect(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm)", "com.ning.http.client.providers.netty.handler.Protocol.exitAfterProcessingFilters(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.AsyncHandler,com.ning.http.client.HttpResponseStatus,com.ning.http.client.HttpResponseHeaders)", "com.ning.http.client.providers.netty.handler.Protocol.propagatedHeaders(com.ning.http.client.Request,com.ning.http.client.Realm,boolean)", "com.ning.http.client.providers.netty.handler.HttpProtocol.handleHttpResponse(org.jboss.netty.handler.codec.http.HttpResponse,org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.AsyncHandler)", "com.ning.http.client.providers.netty.handler.WebSocketProtocol.handle(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,java.lang.Object)"], "closed": "2015-04-27 21:05:45", "filteredCommits": ["6fbf2dee58e098a693cd3850089da1becec23b96"], "commitsDetails": [{"nameRev": "6fbf2dee58e098a693cd3850089da1becec23b96 tags/async-http-client-1.9.21~11", "commitMessage": "Don't propagate Authorization header on redirect after NTLM auth, close #867\n", "commitParents": ["141b65f28df887335204881627faad7ea09fce5a"], "spoonStatsSkippedReason": "", "commitHash": "6fbf2dee58e098a693cd3850089da1becec23b96", "authoredDateTime": "2015-04-27 23:00:19", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 12, "deletions": 8, "lines": 20, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/Protocol.java"}, {"insertions": 3, "deletions": 1, "lines": 4, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/WebSocketProtocol.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/HttpProtocol.java"}], "commitDateTime": "2015-04-27 23:00:19", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.handleHttpResponse(org.jboss.netty.handler.codec.http.HttpResponse,org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.AsyncHandler)"}], "spoonFilePath": "HttpProtocol.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.Protocol.exitAfterProcessingFilters(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.AsyncHandler,com.ning.http.client.HttpResponseStatus,com.ning.http.client.HttpResponseHeaders)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.Protocol.propagatedHeaders(com.ning.http.client.Request,com.ning.http.client.Realm,boolean)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.Protocol.exitAfterHandlingRedirect(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm)"}], "spoonFilePath": "Protocol.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.WebSocketProtocol.handle(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,java.lang.Object)"}], "spoonFilePath": "WebSocketProtocol.java"}]}, {"nameRev": "e8e3ec009d6cce0e4b6251d35391b738fd09b971 tags/2.0.0-alpha1~53", "commitMessage": "Don't propagate Authorization header on redirect after NTLM auth, close #867\n", "commitParents": ["b6cc7c5985dc88565cd39d99a43c40aca1ade8b0"], "spoonStatsSkippedReason": "", "commitHash": "e8e3ec009d6cce0e4b6251d35391b738fd09b971", "authoredDateTime": "2015-04-27 23:05:38", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 1, "lines": 4, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/handler/WebSocketProtocol.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/handler/HttpProtocol.java"}, {"insertions": 3, "deletions": 1, "lines": 4, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/handler/WebSocketProtocol.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/handler/HttpProtocol.java"}, {"insertions": 15, "deletions": 4, "lines": 19, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/handler/Protocol.java"}, {"insertions": 15, "deletions": 4, "lines": 19, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/handler/Protocol.java"}], "commitDateTime": "2015-04-27 23:05:38", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.handler.HttpProtocol.handleHttpResponse(org.jboss.netty.handler.codec.http.HttpResponse,org.jboss.netty.channel.Channel,org.asynchttpclient.providers.netty3.future.NettyResponseFuture,org.asynchttpclient.AsyncHandler)"}], "spoonFilePath": "HttpProtocol.java"}, {"spoonMethods": [{"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty4.handler.Protocol.propagatedHeaders(org.asynchttpclient.Request,boolean)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty4.handler.Protocol.exitAfterHandlingRedirect(io.netty.channel.Channel,org.asynchttpclient.providers.netty4.future.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty4.handler.Protocol.propagatedHeaders(org.asynchttpclient.Request,org.asynchttpclient.Realm,boolean)"}], "spoonFilePath": "Protocol.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty4.handler.WebSocketProtocol.UpgradeCallback.call()"}], "spoonFilePath": "WebSocketProtocol.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/867", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 16, "deletions": 10, "lines": 26, "gitFilesChange": 3}, "title": "Netty: Don't propagate Authorization header on redirect after NTLM auth", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/handler"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 5, "TOT": 8, "MOV": 0, "INS": 7, "DEL": 0, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2015-04-27 15:21:21", "commits": {"6bfe61d951b0056fd16d27c6ea69f684f524fadb": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.grizzly.AhcEventFilter.newRequest(com.ning.http.client.uri.Uri,org.glassfish.grizzly.http.HttpResponsePacket,com.ning.http.client.providers.grizzly.HttpTransactionContext,boolean)", "com.ning.http.client.providers.grizzly.HttpTransactionContext", "com.ning.http.client.providers.grizzly.AhcEventFilter.AuthorizationHandler.ntlmChallenge(org.glassfish.grizzly.Connection,java.lang.String,com.ning.http.client.Request,com.ning.http.client.FluentCaseInsensitiveStringsMap,com.ning.http.client.Realm)", "com.ning.http.client.providers.grizzly.AhcEventFilter.newRequest(com.ning.http.client.providers.grizzly.HttpTransactionContext,com.ning.http.client.uri.Uri,org.glassfish.grizzly.http.HttpResponsePacket,com.ning.http.client.Realm,boolean)", "com.ning.http.client.providers.grizzly.AhcEventFilter.getRealm(com.ning.http.client.providers.grizzly.HttpTransactionContext)", "com.ning.http.client.providers.grizzly.AhcEventFilter.RedirectHandler.notifySchemeSwitch(org.glassfish.grizzly.filterchain.FilterChainContext,org.glassfish.grizzly.Connection,com.ning.http.client.uri.Uri)", "com.ning.http.client.providers.grizzly.AhcEventFilter.onHttpContentEncoded(org.glassfish.grizzly.http.HttpContent,org.glassfish.grizzly.filterchain.FilterChainContext)", "com.ning.http.client.providers.grizzly.HttpTransactionContext.cloneAndStartTransactionFor(org.glassfish.grizzly.Connection,com.ning.http.client.Request)", "com.ning.http.client.providers.grizzly.AhcEventFilter.AuthorizationHandler.handleStatus(org.glassfish.grizzly.http.HttpResponsePacket,com.ning.http.client.providers.grizzly.HttpTransactionContext,org.glassfish.grizzly.filterchain.FilterChainContext)", "com.ning.http.client.providers.grizzly.AhcEventFilter.redirectCountExceeded(com.ning.http.client.providers.grizzly.HttpTransactionContext)", "com.ning.http.client.providers.grizzly.PayloadGenFactory.FilePayloadGenerator.generate(org.glassfish.grizzly.filterchain.FilterChainContext,com.ning.http.client.Request,org.glassfish.grizzly.http.HttpRequestPacket).1.updated(org.glassfish.grizzly.WriteResult)", "com.ning.http.client.providers.grizzly.AhcEventFilter.RedirectHandler.handleStatus(org.glassfish.grizzly.http.HttpResponsePacket,com.ning.http.client.providers.grizzly.HttpTransactionContext,org.glassfish.grizzly.filterchain.FilterChainContext)", "com.ning.http.client.providers.grizzly.AhcEventFilter.onInitialLineParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)"], "closed": "2015-04-29 13:01:04", "filteredCommits": ["6bfe61d951b0056fd16d27c6ea69f684f524fadb"], "commitsDetails": [{"nameRev": "6bfe61d951b0056fd16d27c6ea69f684f524fadb tags/async-http-client-1.9.21~5", "commitMessage": "[1.9.x] + fix issue #866\nhttps://github.com/AsyncHttpClient/async-http-client/issues/866\n\"NTLM auth fails on redirect\"", "commitParents": ["c3d5d32c7fa6034daca7133143149acf6aaeea49"], "spoonStatsSkippedReason": "", "commitHash": "6bfe61d951b0056fd16d27c6ea69f684f524fadb", "authoredDateTime": "2015-04-28 18:17:27", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 5, "deletions": 7, "lines": 12, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/HttpTransactionContext.java"}, {"insertions": 2, "deletions": 1, "lines": 3, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/SwitchingSSLFilter.java"}, {"insertions": 89, "deletions": 53, "lines": 142, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/AhcEventFilter.java"}, {"insertions": 2, "deletions": 1, "lines": 3, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/PayloadGenFactory.java"}], "commitDateTime": "2015-04-28 18:17:27", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 3, "TOT": 6, "MOV": 3, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.AhcEventFilter.newRequest(com.ning.http.client.uri.Uri,org.glassfish.grizzly.http.HttpResponsePacket,com.ning.http.client.providers.grizzly.HttpTransactionContext,boolean)"}, {"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.AhcEventFilter.onHttpContentEncoded(org.glassfish.grizzly.http.HttpContent,org.glassfish.grizzly.filterchain.FilterChainContext)"}, {"UPD": 1, "TOT": 4, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.AhcEventFilter.AuthorizationHandler.ntlmChallenge(org.glassfish.grizzly.Connection,java.lang.String,com.ning.http.client.Request,com.ning.http.client.FluentCaseInsensitiveStringsMap,com.ning.http.client.Realm)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.AhcEventFilter.getRealm(com.ning.http.client.providers.grizzly.HttpTransactionContext)"}, {"UPD": 3, "TOT": 19, "MOV": 8, "INS": 2, "DEL": 6, "spoonMethodName": "com.ning.http.client.providers.grizzly.AhcEventFilter.AuthorizationHandler.handleStatus(org.glassfish.grizzly.http.HttpResponsePacket,com.ning.http.client.providers.grizzly.HttpTransactionContext,org.glassfish.grizzly.filterchain.FilterChainContext)"}, {"UPD": 0, "TOT": 9, "MOV": 0, "INS": 9, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.AhcEventFilter.newRequest(com.ning.http.client.providers.grizzly.HttpTransactionContext,com.ning.http.client.uri.Uri,org.glassfish.grizzly.http.HttpResponsePacket,com.ning.http.client.Realm,boolean)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.AhcEventFilter.redirectCountExceeded(com.ning.http.client.providers.grizzly.HttpTransactionContext)"}, {"UPD": 10, "TOT": 52, "MOV": 23, "INS": 12, "DEL": 7, "spoonMethodName": "com.ning.http.client.providers.grizzly.AhcEventFilter.RedirectHandler.handleStatus(org.glassfish.grizzly.http.HttpResponsePacket,com.ning.http.client.providers.grizzly.HttpTransactionContext,org.glassfish.grizzly.filterchain.FilterChainContext)"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 2, "DEL": 2, "spoonMethodName": "com.ning.http.client.providers.grizzly.AhcEventFilter.onInitialLineParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.AhcEventFilter.RedirectHandler.notifySchemeSwitch(org.glassfish.grizzly.filterchain.FilterChainContext,org.glassfish.grizzly.Connection,com.ning.http.client.uri.Uri)"}], "spoonFilePath": "AhcEventFilter.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.PayloadGenFactory.FilePayloadGenerator.generate(org.glassfish.grizzly.filterchain.FilterChainContext,com.ning.http.client.Request,org.glassfish.grizzly.http.HttpRequestPacket).1.updated(org.glassfish.grizzly.WriteResult)"}], "spoonFilePath": "PayloadGenFactory.java"}, {"spoonMethods": [], "spoonFilePath": "SwitchingSSLFilter.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 5, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.HttpTransactionContext.cloneAndStartTransactionFor(org.glassfish.grizzly.Connection,com.ning.http.client.Request)"}, {"UPD": 4, "TOT": 7, "MOV": 0, "INS": 0, "DEL": 3, "spoonMethodName": "com.ning.http.client.providers.grizzly.HttpTransactionContext"}], "spoonFilePath": "HttpTransactionContext.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/866", "ttf": 1.0002777777777778, "gitStatsSummary": {"insertions": 98, "deletions": 62, "lines": 160, "gitFilesChange": 4}, "title": "NTLM auth fails on redirect", "statsSkippedReason": "", "user": "afelisatti", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/grizzly"], "spoonStatsSummary": {"UPD": 23, "spoonMethodsChanged": 13, "TOT": 116, "MOV": 39, "INS": 30, "DEL": 24, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Testing NTLM auth in 1.9.x I found that it fails when the server response to the request containing the type 3 message is a redirect. The issue is that the connection is already authenticated but the redirect request has the \"Authorization\" header in it (with the type 3 message). This happens for Netty and Grizzly. With Grizzly, in addition,  the connection is not reused.\n", "labels": ["Defect", "Grizzly"]}, {"created": "2015-04-22 18:06:58", "user": "pablolagreca", "body": "I'm creating this issue based on the google group discussion: https://groups.google.com/forum/#!topic/asynchttpclient/ct-6ztpTGiw\n\nI will provide a PR to get it fix.\n", "closed": "2015-09-11 19:10:36", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/860", "ttf": 142.00027777777777, "commits": {}, "labels": ["Defect", "Grizzly"], "title": "Grizzly 2.3.19 fails when using SSL"}, {"created": "2015-04-01 08:50:07", "commits": {"9b91611546ff5e0c541fec0a555ea7c0405bfc00": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "d7a0668e983e5a64052388ad38a29aaff3ba28c4": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.providers.netty4.handler.HttpProtocol.finishUpdate(org.asynchttpclient.providers.netty4.future.NettyResponseFuture,io.netty.channel.Channel,boolean)", "org.asynchttpclient.providers.netty3.future.NettyResponseFuture.detachChannel()"], "closed": "2015-04-01 08:53:03", "filteredCommits": ["9b91611546ff5e0c541fec0a555ea7c0405bfc00"], "commitsDetails": [{"nameRev": "9b91611546ff5e0c541fec0a555ea7c0405bfc00 tags/2.0.0-alpha1~65", "commitMessage": "Cancel timeouts asap, close #848\n", "commitParents": ["4e18ad6f7de348b3dbfd158e487837d3539a5b2f"], "spoonStatsSkippedReason": "", "commitHash": "9b91611546ff5e0c541fec0a555ea7c0405bfc00", "authoredDateTime": "2015-04-01 10:52:58", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 2, "deletions": 5, "lines": 7, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/future/NettyResponseFuture.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/handler/HttpProtocol.java"}, {"insertions": 2, "deletions": 5, "lines": 7, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/future/NettyResponseFuture.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/handler/HttpProtocol.java"}], "commitDateTime": "2015-04-01 10:52:58", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty4.handler.HttpProtocol.finishUpdate(org.asynchttpclient.providers.netty4.future.NettyResponseFuture,io.netty.channel.Channel,boolean)"}], "spoonFilePath": "HttpProtocol.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty3.future.NettyResponseFuture.detachChannel()"}], "spoonFilePath": "NettyResponseFuture.java"}]}, {"nameRev": "d7a0668e983e5a64052388ad38a29aaff3ba28c4 tags/async-http-client-1.9.18~7", "commitMessage": "Cancel timeouts asap, close #848\n", "commitParents": ["0b3efcf0484157a4dcd5215973a3b5506f7448cd"], "spoonStatsSkippedReason": "", "commitHash": "d7a0668e983e5a64052388ad38a29aaff3ba28c4", "authoredDateTime": "2015-04-01 10:50:26", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 5, "lines": 7, "filePath": "src/main/java/com/ning/http/client/providers/netty/future/NettyResponseFuture.java"}, {"insertions": 2, "deletions": 1, "lines": 3, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/HttpProtocol.java"}], "commitDateTime": "2015-04-01 10:50:26", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.finishUpdate(com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.channel.Channel,boolean)"}], "spoonFilePath": "HttpProtocol.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.future.NettyResponseFuture.detachChannel()"}], "spoonFilePath": "NettyResponseFuture.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/848", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 6, "deletions": 12, "lines": 18, "gitFilesChange": 4}, "title": "Netty: Cancel timeouts asap", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/future", "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/future", "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/handler", "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/handler"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 2, "TOT": 4, "MOV": 2, "INS": 0, "DEL": 1, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "without waiting for the channel to drain\n\nThis is a better understanding of #844\n", "labels": ["Defect", "Netty"]}, {"created": "2015-03-31 23:08:10", "commits": {"ac90c8bb60bab0fb1d998e8e76a823f571163be2": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "beb6b1a0b2b92635cda39d73327469b411cb7671": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.Realm.RealmBuilder.match(java.lang.String,java.lang.String)", "org.asynchttpclient.Realm.RealmBuilder.secretDigest(java.lang.StringBuilder,java.security.MessageDigest)", "org.asynchttpclient.Realm.RealmBuilder.parseWWWAuthenticateHeader(java.lang.String)", "org.asynchttpclient.Realm.RealmBuilder", "org.asynchttpclient.util.AuthenticatorUtils.computeDigestAuthentication(org.asynchttpclient.Realm)", "org.asynchttpclient.Realm.RealmBuilder.md5FromRecycledStringBuilder(java.lang.StringBuilder,java.security.MessageDigest)", "org.asynchttpclient.Realm.RealmBuilder.newResponse(java.security.MessageDigest)", "org.asynchttpclient.Realm", "org.asynchttpclient.util.AuthenticatorUtils.computeRealmURI(org.asynchttpclient.uri.Uri,boolean,boolean)", "org.asynchttpclient.Realm.RealmBuilder.setQop(java.lang.String)", "org.asynchttpclient.Realm.RealmBuilder.parseProxyAuthenticateHeader(java.lang.String)", "org.asynchttpclient.Realm.RealmBuilder.dataDigest(java.lang.StringBuilder,java.lang.String,java.security.MessageDigest)", "org.asynchttpclient.Realm.RealmBuilder.parseRawQop(java.lang.String)", "org.asynchttpclient.Realm.RealmBuilder.clone(org.asynchttpclient.Realm)", "org.asynchttpclient.Realm.RealmBuilder.appendDataBase(java.lang.StringBuilder)", "org.asynchttpclient.util.AuthenticatorUtils.computeRealmURI(org.asynchttpclient.Realm)"], "closed": "2015-04-01 00:20:58", "filteredCommits": ["ac90c8bb60bab0fb1d998e8e76a823f571163be2"], "commitsDetails": [{"nameRev": "ac90c8bb60bab0fb1d998e8e76a823f571163be2 tags/2.0.0-alpha1~70", "commitMessage": "Digest auth isn't working, close #847\n", "commitParents": ["3ab0b18b3443fa76e3f137d2b82f13710b2964ea"], "spoonStatsSkippedReason": "", "commitHash": "ac90c8bb60bab0fb1d998e8e76a823f571163be2", "authoredDateTime": "2015-04-01 02:17:30", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 116, "deletions": 68, "lines": 184, "filePath": "api/src/main/java/org/asynchttpclient/Realm.java"}, {"insertions": 19, "deletions": 10, "lines": 29, "filePath": "api/src/main/java/org/asynchttpclient/util/AuthenticatorUtils.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "api/src/test/java/org/asynchttpclient/RealmTest.java"}], "commitDateTime": "2015-04-01 02:17:30", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 0, "INS": 6, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.AuthenticatorUtils.computeRealmURI(org.asynchttpclient.uri.Uri,boolean,boolean)"}, {"UPD": 0, "TOT": 9, "MOV": 5, "INS": 3, "DEL": 1, "spoonMethodName": "org.asynchttpclient.util.AuthenticatorUtils.computeDigestAuthentication(org.asynchttpclient.Realm)"}, {"UPD": 1, "TOT": 8, "MOV": 4, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.util.AuthenticatorUtils.computeRealmURI(org.asynchttpclient.Realm)"}], "spoonFilePath": "AuthenticatorUtils.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.RealmTest.testStrongDigest()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.RealmTest.testOldDigest(java.lang.String)"}], "spoonFilePath": "RealmTest.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.Realm.RealmBuilder.match(java.lang.String,java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.Realm"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.Realm.RealmBuilder.parseProxyAuthenticateHeader(java.lang.String)"}, {"UPD": 0, "TOT": 6, "MOV": 3, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.Realm.RealmBuilder.parseWWWAuthenticateHeader(java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.Realm.RealmBuilder.md5FromRecycledStringBuilder(java.lang.StringBuilder,java.security.MessageDigest)"}, {"UPD": 13, "TOT": 40, "MOV": 18, "INS": 4, "DEL": 5, "spoonMethodName": "org.asynchttpclient.Realm.RealmBuilder.newResponse(java.security.MessageDigest)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.Realm.RealmBuilder.secretDigest(java.lang.StringBuilder,java.security.MessageDigest)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.Realm.RealmBuilder.setQop(java.lang.String)"}, {"UPD": 1, "TOT": 16, "MOV": 6, "INS": 0, "DEL": 9, "spoonMethodName": "org.asynchttpclient.Realm.RealmBuilder"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.Realm.RealmBuilder.dataDigest(java.lang.StringBuilder,java.lang.String,java.security.MessageDigest)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.Realm.RealmBuilder.parseRawQop(java.lang.String)"}, {"UPD": 0, "TOT": 26, "MOV": 24, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.Realm.RealmBuilder.clone(org.asynchttpclient.Realm)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.Realm.RealmBuilder.appendDataBase(java.lang.StringBuilder)"}], "spoonFilePath": "Realm.java"}]}, {"nameRev": "beb6b1a0b2b92635cda39d73327469b411cb7671 tags/async-http-client-1.9.17~6", "commitMessage": "Digest auth isn't working, close #847\n", "commitParents": ["ae78f83d774cd1cff54b5b9b9d92f641098dde4c"], "spoonStatsSkippedReason": "", "commitHash": "beb6b1a0b2b92635cda39d73327469b411cb7671", "authoredDateTime": "2015-04-01 01:25:08", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 115, "deletions": 68, "lines": 183, "filePath": "src/main/java/com/ning/http/client/Realm.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "src/test/java/com/ning/http/client/RealmTest.java"}, {"insertions": 19, "deletions": 10, "lines": 29, "filePath": "src/main/java/com/ning/http/util/AuthenticatorUtils.java"}], "commitDateTime": "2015-04-01 01:25:08", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.RealmTest.testStrongDigest()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.RealmTest.testOldDigest(java.lang.String)"}], "spoonFilePath": "RealmTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 9, "MOV": 5, "INS": 3, "DEL": 1, "spoonMethodName": "com.ning.http.util.AuthenticatorUtils.computeDigestAuthentication(com.ning.http.client.Realm)"}, {"UPD": 1, "TOT": 8, "MOV": 4, "INS": 1, "DEL": 2, "spoonMethodName": "com.ning.http.util.AuthenticatorUtils.computeRealmURI(com.ning.http.client.Realm)"}, {"UPD": 0, "TOT": 6, "MOV": 0, "INS": 6, "DEL": 0, "spoonMethodName": "com.ning.http.util.AuthenticatorUtils.computeRealmURI(com.ning.http.client.uri.Uri,boolean,boolean)"}], "spoonFilePath": "AuthenticatorUtils.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 26, "MOV": 24, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.Realm.RealmBuilder.clone(com.ning.http.client.Realm)"}, {"UPD": 14, "TOT": 36, "MOV": 15, "INS": 3, "DEL": 4, "spoonMethodName": "com.ning.http.client.Realm.RealmBuilder.newResponse(java.security.MessageDigest)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.Realm.RealmBuilder.appendDataBase(java.lang.StringBuilder)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.Realm.RealmBuilder.parseRawQop(java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.Realm.RealmBuilder.secretDigest(java.lang.StringBuilder,java.security.MessageDigest)"}, {"UPD": 0, "TOT": 5, "MOV": 2, "INS": 2, "DEL": 1, "spoonMethodName": "com.ning.http.client.Realm.RealmBuilder.parseWWWAuthenticateHeader(java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.Realm"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.Realm.RealmBuilder.match(java.lang.String,java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.Realm.RealmBuilder.md5FromRecycledStringBuilder(java.lang.StringBuilder,java.security.MessageDigest)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.Realm.RealmBuilder.dataDigest(java.lang.StringBuilder,java.lang.String,java.security.MessageDigest)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.Realm.RealmBuilder.setQop(java.lang.String)"}, {"UPD": 1, "TOT": 16, "MOV": 6, "INS": 0, "DEL": 9, "spoonMethodName": "com.ning.http.client.Realm.RealmBuilder"}], "spoonFilePath": "Realm.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/847", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 135, "deletions": 78, "lines": 213, "gitFilesChange": 2}, "title": "Digest auth isn't working", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["api/src/main/java/org/asynchttpclient", "api/src/main/java/org/asynchttpclient/util"], "spoonStatsSummary": {"UPD": 17, "spoonMethodsChanged": 16, "TOT": 123, "MOV": 61, "INS": 26, "DEL": 19, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Reported against Gatling, with WildFly management API.\n- Some fields shouldn't be sent with default values if they're missing.\n- auth-int handling is wrong\n- browsers seem to be using relative uris by default\n", "labels": ["Defect"]}, {"created": "2015-03-26 00:44:58", "user": "bibhas2", "body": "http://asynchttpclient.github.io/async-http-client/apidocs/com/ning/http/client/AsyncCompletionHandler.html\n\nThe Javadoc gives the idea that if an exception is thrown from `onCompleted(Response r)` then `onThrowable(Throwable t)` will not be called. `onCompleted` is stated as `always invoked as last callback method`.\n\nThis does not seem to reflect what happens in reality. An exception thrown in `onCompleted` does indeed call `onThrowable(Throwable t)`. This distinction is crucial for anyone counting down a `CountdownLatch` from both of these callbacks. If  `onCompleted()` throws an exception you run the danger of counting down the latch twice.\n", "closed": "2015-04-08 15:35:16", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/842", "ttf": 13.000277777777777, "commits": {}, "labels": ["Defect", "Documentation"], "title": "Possible javadoc error?"}, {"created": "2015-03-17 22:01:04", "commits": {"9f297158646ba0006a3e6ca5f1445482708a55af": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "75221a0406749b795f9dd1699174339c73ffa647": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.request.NettyConnectListener.writeRequest(org.jboss.netty.channel.Channel)", "com.ning.http.client.providers.netty.request.NettyConnectListener.onFutureSuccess(org.jboss.netty.channel.Channel)", "com.ning.http.client.providers.netty.request.NettyConnectListener.writeRequest(org.jboss.netty.channel.Channel,java.lang.String)", "com.ning.http.client.providers.netty.channel.ChannelManager.createSslHandler(java.lang.String,int)"], "closed": "2015-03-17 22:08:47", "filteredCommits": ["75221a0406749b795f9dd1699174339c73ffa647"], "commitsDetails": [{"nameRev": "75221a0406749b795f9dd1699174339c73ffa647 tags/async-http-client-1.9.15~1", "commitMessage": "Not proper events order in case of handshake failure, close #841\n", "commitParents": ["5ab632fca97c962a577cb3bc21d69004d88fd843"], "spoonStatsSkippedReason": "", "commitHash": "75221a0406749b795f9dd1699174339c73ffa647", "authoredDateTime": "2015-03-17 23:03:43", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 22, "deletions": 3, "lines": 25, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyConnectListener.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "src/main/java/com/ning/http/client/providers/netty/channel/ChannelManager.java"}], "commitDateTime": "2015-03-17 23:03:43", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.channel.ChannelManager.createSslHandler(java.lang.String,int)"}], "spoonFilePath": "ChannelManager.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 7, "MOV": 4, "INS": 2, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyConnectListener.onFutureSuccess(org.jboss.netty.channel.Channel)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 3, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyConnectListener.writeRequest(org.jboss.netty.channel.Channel,java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyConnectListener.writeRequest(org.jboss.netty.channel.Channel)"}], "spoonFilePath": "NettyConnectListener.java"}]}, {"nameRev": "9f297158646ba0006a3e6ca5f1445482708a55af tags/2.0.0-alpha1~75", "commitMessage": "Not proper events order in case of handshake failure, close #841\n", "commitParents": ["7bf4e07bed6b7e94d5e45920797f166dcdc1d0cc"], "spoonStatsSkippedReason": "", "commitHash": "9f297158646ba0006a3e6ca5f1445482708a55af", "authoredDateTime": "2015-03-17 23:08:40", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 21, "deletions": 3, "lines": 24, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/request/NettyConnectListener.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/channel/ChannelManager.java"}, {"insertions": 23, "deletions": 2, "lines": 25, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/request/NettyConnectListener.java"}], "commitDateTime": "2015-03-17 23:08:40", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty3.channel.ChannelManager.createSslHandler(java.lang.String,int)"}], "spoonFilePath": "ChannelManager.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 7, "MOV": 4, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty4.request.NettyConnectListener.onFutureSuccess(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty4.request.NettyConnectListener.writeRequest(io.netty.channel.Channel)"}], "spoonFilePath": "NettyConnectListener.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/841", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 22, "deletions": 4, "lines": 26, "gitFilesChange": 2}, "title": "Netty: Not proper events order in case of handshake failure", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/channel", "src/main/java/com/ning/http/client/providers/netty/request"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 4, "TOT": 12, "MOV": 4, "INS": 3, "DEL": 5, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "In presence of an SslHandler, we'd better write in the handshake future listener.\nWe have to drop using `setIssueHandshake(true)`, otherwise, as we use `setCloseOnSSLException(true)` we get notified of a closed channel instead of the handshake failure.\n", "labels": ["Defect", "Netty"]}, {"created": "2015-03-16 10:50:50", "commits": {"7bf4e07bed6b7e94d5e45920797f166dcdc1d0cc": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "ff68bd035f1838118647a3f779145e11c4346264": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.util.SslUtils.getSSLContext(org.asynchttpclient.AsyncHttpClientConfig)"], "closed": "2015-03-16 11:58:40", "filteredCommits": ["7bf4e07bed6b7e94d5e45920797f166dcdc1d0cc"], "commitsDetails": [{"nameRev": "7bf4e07bed6b7e94d5e45920797f166dcdc1d0cc tags/2.0.0-alpha1~76", "commitMessage": "SSLEngineFactory NPE, close #839\n", "commitParents": ["07d28437e10a4549f9d2f91b15c4d96f49c277a0"], "spoonStatsSkippedReason": "", "commitHash": "7bf4e07bed6b7e94d5e45920797f166dcdc1d0cc", "authoredDateTime": "2015-03-16 12:58:24", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "api/src/main/java/org/asynchttpclient/util/SslUtils.java"}], "commitDateTime": "2015-03-16 12:58:24", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.SslUtils.getSSLContext(org.asynchttpclient.AsyncHttpClientConfig)"}], "spoonFilePath": "SslUtils.java"}]}, {"nameRev": "ff68bd035f1838118647a3f779145e11c4346264 tags/async-http-client-1.9.14~1", "commitMessage": "SSLEngineFactory NPE, close #839\n", "commitParents": ["7e524d93bd0298a41299777cfbf4c4db8b5ad62e"], "spoonStatsSkippedReason": "", "commitHash": "ff68bd035f1838118647a3f779145e11c4346264", "authoredDateTime": "2015-03-16 11:52:16", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/util/SslUtils.java"}], "commitDateTime": "2015-03-16 11:52:16", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.util.SslUtils.getSSLContext(com.ning.http.client.AsyncHttpClientConfig)"}], "spoonFilePath": "SslUtils.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/839", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "SSLEngineFactory NPE", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["api/src/main/java/org/asynchttpclient/util"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2015-03-06 21:19:02", "commits": {"89a811acd42835bd822f2718edaaf99d30eb865b": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "961e0f957bf72f271ca8de7854cb9a0049bb5bbd": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.channel.ChannelManager.tryToOfferChannelToPool(org.jboss.netty.channel.Channel,boolean,java.lang.String)"], "closed": "2015-03-08 21:13:12", "filteredCommits": ["89a811acd42835bd822f2718edaaf99d30eb865b"], "commitsDetails": [{"nameRev": "89a811acd42835bd822f2718edaaf99d30eb865b tags/async-http-client-1.9.12~2", "commitMessage": "tryToOfferChannelToPool shouldn't mark channel as discard after offering to pool, close #834\n", "commitParents": ["51764e7d95855cca66a7e215f30f67794fd236c1"], "spoonStatsSkippedReason": "", "commitHash": "89a811acd42835bd822f2718edaaf99d30eb865b", "authoredDateTime": "2015-03-08 22:16:24", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/providers/netty/channel/ChannelManager.java"}], "commitDateTime": "2015-03-08 22:16:28", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.channel.ChannelManager.tryToOfferChannelToPool(org.jboss.netty.channel.Channel,boolean,java.lang.String)"}], "spoonFilePath": "ChannelManager.java"}]}, {"nameRev": "961e0f957bf72f271ca8de7854cb9a0049bb5bbd tags/2.0.0-alpha1~81", "commitMessage": "tryToOfferChannelToPool shouldn't mark channel as discard after offering to pool, close #834\n", "commitParents": ["b166c9d384fd82e40705f58b10586a691bff460b"], "spoonStatsSkippedReason": "", "commitHash": "961e0f957bf72f271ca8de7854cb9a0049bb5bbd", "authoredDateTime": "2015-03-08 22:13:02", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/channel/ChannelManager.java"}], "commitDateTime": "2015-03-08 22:13:02", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty4.channel.ChannelManager.tryToOfferChannelToPool(io.netty.channel.Channel,boolean,java.lang.String)"}], "spoonFilePath": "ChannelManager.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/834", "ttf": 1.0002777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "Netty ChannelManager.tryToOfferChannelToPool discard chunks after offering to pool", "statsSkippedReason": "", "user": "maxpower-artvandelay", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/channel"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hello, the Netty ChannelManager(AHC 1.9.11) seems to have an issue on tryToOfferChannelToPool.\n\n``` java\npublic final void tryToOfferChannelToPool(Channel channel, boolean keepAlive, String partition) {\n    if (channel.isConnected() && keepAlive && channel.isReadable()) {\n        LOGGER.debug(\"Adding key: {} for channel {}\", partition, channel);\n        channelPool.offer(channel, partition);\n        if (maxConnectionsPerHostEnabled)\n            channelId2KeyPool.putIfAbsent(channel.getId(), partition);\n        Channels.setDiscard(channel);\n    } else {\n        // not offered\n        closeChannel(channel);\n    }\n}\n```\n\nLooks like channelPool.offer should happen after Channels.setDiscard, otherwise the channel becomes available for selection while the previous request cleanup is still happening. This will cause a \"java.util.concurrent.TimeoutException: Request timed out\" under certain loads. \n\nThis is the snippet I used to reproduce the issue:\n\n``` java\nfinal AsyncCompletionHandler<Response> handler = new AsyncCompletionHandler<Response>() {\n    @Override\n    public void onThrowable(Throwable t) {\n        System.out.println(t.toString());\n    }\n\n    @Override\n    public Response onCompleted(Response response) throws Exception {\n        return response;\n    }\n};\n\nRequest request = httpClient.prepareGet(\"http://...\").build();\nfor (int i = 0; i < 500; ++i) {\n    httpClient.executeRequest(request, handler);\n}\n```\n\nI think the fix should be something similar to:\n\n``` java\nChannels.setDiscard(channel);\nchannelPool.offer(channel, partition);\n```\n\ninstead of :\n\n``` java\nchannelPool.offer(channel, partition);\nChannels.setDiscard(channel);\n```\n", "labels": ["Defect", "Netty"]}, {"created": "2015-02-26 11:54:10", "user": "laszlohordos", "body": "The Grizzly ProtocolHandler (grizzly-websockets-2.3.18) org.glassfish.grizzly.websockets.ProtocolHandler has a bug when it close the webSocket. \n\n```\npublic GrizzlyFuture<DataFrame> close(int code, String reason) {\n    return send(new ClosingFrame(code, reason),\n            new EmptyCompletionHandler<DataFrame>() {\n\n                @Override\n                public void failed(final Throwable throwable) {\n                    webSocket.onClose(null);\n                }\n\n                @Override\n                public void completed(DataFrame result) {\n                    if (!maskData) {\n                        webSocket.onClose(null);\n                    }\n                }\n            });\n}\n```\n\n The DataFrame is not set and when it comes to the GrizzlyAsyncHttpProvider it throws NullPointerException. \n\n```\npublic void onClose(org.glassfish.grizzly.websockets.WebSocket gWebSocket, DataFrame dataFrame) {\n            try {\n                if (ahcListener instanceof WebSocketCloseCodeReasonListener) {\n                    ClosingFrame cf = ClosingFrame.class.cast(dataFrame);\n                    WebSocketCloseCodeReasonListener.class.cast(ahcListener).onClose(webSocket, cf.getCode(), cf.getReason());\n                } else {\n                    ahcListener.onClose(webSocket);\n                }\n            } catch (Throwable e) {\n                ahcListener.onError(e);\n            }\n}\n```\n", "closed": "2015-03-14 19:44:29", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/829", "ttf": 16.00027777777778, "commits": {}, "labels": ["Defect", "Grizzly"], "title": "NullPointerException with GrizzlyAsyncHttpProvider(v1.8) when WebSocket is closed"}, {"created": "2015-02-21 14:19:44", "commits": {"1a245b20cd53d2c3bb8b7191263cbc9ce33754b5": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "f46ed2fb5674778c9836fc8a3e965cbaa7b07cae": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.handler.Protocol.exitAfterHandlingRedirect(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int)", "com.ning.http.client.providers.netty.handler.Protocol.propagatedHeaders(com.ning.http.client.Request)", "com.ning.http.client.providers.netty.handler.Protocol", "com.ning.http.client.providers.netty.handler.Protocol.propagatedHeaders(com.ning.http.client.Request,boolean)"], "closed": "2015-02-24 10:08:22", "filteredCommits": ["1a245b20cd53d2c3bb8b7191263cbc9ce33754b5"], "commitsDetails": [{"nameRev": "1a245b20cd53d2c3bb8b7191263cbc9ce33754b5 tags/async-http-client-1.9.11~2", "commitMessage": "Propagate most headers on redirect, close #824\n", "commitParents": ["d95b3bf81700469496f9d312adbc5c3d102f3d46"], "spoonStatsSkippedReason": "", "commitHash": "1a245b20cd53d2c3bb8b7191263cbc9ce33754b5", "authoredDateTime": "2015-02-24 11:04:54", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 11, "deletions": 24, "lines": 35, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/Protocol.java"}], "commitDateTime": "2015-02-24 11:04:54", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 12, "MOV": 4, "INS": 5, "DEL": 3, "spoonMethodName": "com.ning.http.client.providers.netty.handler.Protocol.exitAfterHandlingRedirect(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int)"}, {"UPD": 6, "TOT": 11, "MOV": 4, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.handler.Protocol.propagatedHeaders(com.ning.http.client.Request)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "com.ning.http.client.providers.netty.handler.Protocol"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 4, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.Protocol.propagatedHeaders(com.ning.http.client.Request,boolean)"}], "spoonFilePath": "Protocol.java"}]}, {"nameRev": "f46ed2fb5674778c9836fc8a3e965cbaa7b07cae tags/2.0.0-alpha1~88", "commitMessage": "Propagate most headers on redirect, close #824\n", "commitParents": ["f5456a532358fe5dc406212a29e0938db9af7ab0"], "spoonStatsSkippedReason": "", "commitHash": "f46ed2fb5674778c9836fc8a3e965cbaa7b07cae", "authoredDateTime": "2015-02-24 11:08:16", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 12, "deletions": 28, "lines": 40, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/handler/Protocol.java"}, {"insertions": 12, "deletions": 27, "lines": 39, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/handler/Protocol.java"}], "commitDateTime": "2015-02-24 11:08:16", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 0, "INS": 4, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty4.handler.Protocol.propagatedHeaders(org.asynchttpclient.Request,boolean)"}, {"UPD": 0, "TOT": 12, "MOV": 4, "INS": 5, "DEL": 3, "spoonMethodName": "org.asynchttpclient.providers.netty4.handler.Protocol.exitAfterHandlingRedirect(io.netty.channel.Channel,org.asynchttpclient.providers.netty4.future.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.netty4.handler.Protocol"}, {"UPD": 6, "TOT": 11, "MOV": 4, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty4.handler.Protocol.propagatedHeaders(org.asynchttpclient.Request)"}], "spoonFilePath": "Protocol.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/824", "ttf": 2.000277777777778, "gitStatsSummary": {"insertions": 11, "deletions": 24, "lines": 35, "gitFilesChange": 1}, "title": "Netty: propagate most headers on redirect", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/handler"], "spoonStatsSummary": {"UPD": 6, "spoonMethodsChanged": 4, "TOT": 29, "MOV": 8, "INS": 9, "DEL": 6, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "See https://github.com/gatling/gatling/issues/2548\n", "labels": ["Defect", "Netty"]}, {"created": "2015-02-20 16:54:42", "commits": {"fd9ae342ceeaed6a0c383548f65518496355843f": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "5c6fa8e349104fabf2bb5edb319a76dfe9a26123": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.request.NettyConnectListener.onFutureFailure(org.jboss.netty.channel.Channel,java.lang.Throwable)"], "closed": "2015-02-20 17:01:18", "filteredCommits": ["fd9ae342ceeaed6a0c383548f65518496355843f"], "commitsDetails": [{"nameRev": "fd9ae342ceeaed6a0c383548f65518496355843f tags/async-http-client-1.9.11~20", "commitMessage": "Wrong behavior in NettyConnectListener.onFutureFailure, close #822\n", "commitParents": ["e271de4863f297a06bfd6bc300d63888a7c61c03"], "spoonStatsSkippedReason": "", "commitHash": "fd9ae342ceeaed6a0c383548f65518496355843f", "authoredDateTime": "2015-02-20 17:54:53", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 2, "lines": 3, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyConnectListener.java"}], "commitDateTime": "2015-02-20 17:54:53", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyConnectListener.onFutureFailure(org.jboss.netty.channel.Channel,java.lang.Throwable)"}], "spoonFilePath": "NettyConnectListener.java"}]}, {"nameRev": "5c6fa8e349104fabf2bb5edb319a76dfe9a26123 tags/2.0.0-alpha1~105", "commitMessage": "Wrong behavior in NettyConnectListener.onFutureFailure, close #822\n", "commitParents": ["5652ae81b0acb33b01f2c0e0b1d9a61aeb8c3cd7"], "spoonStatsSkippedReason": "", "commitHash": "5c6fa8e349104fabf2bb5edb319a76dfe9a26123", "authoredDateTime": "2015-02-20 18:01:14", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 2, "lines": 3, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/request/NettyConnectListener.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/request/NettyConnectListener.java"}], "commitDateTime": "2015-02-20 18:01:14", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "NettyConnectListener.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/822", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 2, "lines": 3, "gitFilesChange": 1}, "title": "Netty: Wrong behavior in NettyConnectListener.onFutureFailure", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/request"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 1, "TOT": 2.0, "MOV": 1.0, "INS": 0.0, "DEL": 1.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2015-02-05 11:45:04", "user": "jenskordowski", "body": "JDKAsyncHttpProvider does not close the connection in a few cases (e.g. redirect). AsyncHttpUrlConnection has a member \"terminate\" that is not reset in the beginning of the call() method. The issue exists on both 1.8.x and 1.9.x branches.\nThe ApacheAsyncHttpProvider resets it.\n", "closed": "2015-02-05 15:47:47", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/813", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Contributions Welcome!", "Defect"], "title": "urlconnection.disconnect() missing in JDK provider"}, {"created": "2015-02-04 14:23:11", "commits": {"3c851b208b35c572e4cfe7992d750cbe507928c3": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "a3bebffea809a29e55fc03cf73764dabba26a4d4": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.RequestBuilderBase.executeSignatureCalculator()"], "closed": "2015-02-11 16:50:44", "filteredCommits": ["3c851b208b35c572e4cfe7992d750cbe507928c3"], "commitsDetails": [{"nameRev": "3c851b208b35c572e4cfe7992d750cbe507928c3 tags/2.0.0-alpha1~114", "commitMessage": "SignatureCalculator should be able to access request query params, close #812\n", "commitParents": ["2ea7a2daafb36a4a093fcd495af8afe57a546999"], "spoonStatsSkippedReason": "", "commitHash": "3c851b208b35c572e4cfe7992d750cbe507928c3", "authoredDateTime": "2015-02-11 17:50:39", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 4, "deletions": 1, "lines": 5, "filePath": "api/src/main/java/org/asynchttpclient/RequestBuilderBase.java"}], "commitDateTime": "2015-02-11 17:50:39", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 1, "INS": 4, "DEL": 0, "spoonMethodName": "org.asynchttpclient.RequestBuilderBase.executeSignatureCalculator()"}], "spoonFilePath": "RequestBuilderBase.java"}]}, {"nameRev": "a3bebffea809a29e55fc03cf73764dabba26a4d4 tags/async-http-client-1.9.9~2", "commitMessage": "SignatureCalculator should be able to access request query params, close #812\n", "commitParents": ["250fa2bb74f83945c559c49d806c5cb715c400eb"], "spoonStatsSkippedReason": "", "commitHash": "a3bebffea809a29e55fc03cf73764dabba26a4d4", "authoredDateTime": "2015-02-11 17:47:05", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 5, "deletions": 1, "lines": 6, "filePath": "src/main/java/com/ning/http/client/RequestBuilderBase.java"}], "commitDateTime": "2015-02-11 17:47:05", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 1, "INS": 2, "DEL": 0, "spoonMethodName": "com.ning.http.client.RequestBuilderBase.executeSignatureCalculator()"}], "spoonFilePath": "RequestBuilderBase.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/812", "ttf": 7.000277777777778, "gitStatsSummary": {"insertions": 4, "deletions": 1, "lines": 5, "gitFilesChange": 1}, "title": "SignatureCalculator should be able to access request query params", "statsSkippedReason": "", "user": "analytically", "changesInPackagesGIT": ["api/src/main/java/org/asynchttpclient"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 5, "MOV": 1, "INS": 4, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Certain HMAC auth schemes require to include the URL+ query params and body to be included in the signature.\n\nEg:\nhttps://www.coinbase.com/docs/api/authentication\nhttps://developer.buttercoin.com/#authentication\n", "labels": ["Defect"]}, {"created": "2015-01-27 21:42:17", "commits": {"038f4033f04ab4ff5edcc44fbd7bf7b00d36e8d7": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "234f3ce2589194eb2de4c23ed4cf3df308256eec": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.handler.Protocol.exitAfterHandlingRedirect(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int)"], "closed": "2015-01-27 21:44:26", "filteredCommits": ["038f4033f04ab4ff5edcc44fbd7bf7b00d36e8d7"], "commitsDetails": [{"nameRev": "038f4033f04ab4ff5edcc44fbd7bf7b00d36e8d7 tags/async-http-client-1.9.8~1", "commitMessage": "Fix removeQueryParamOnRedirect, close #809\n", "commitParents": ["640da50191f13a12344cd95fdb89b2f73bbec9b8"], "spoonStatsSkippedReason": "", "commitHash": "038f4033f04ab4ff5edcc44fbd7bf7b00d36e8d7", "authoredDateTime": "2015-01-27 22:44:23", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 3, "lines": 6, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/Protocol.java"}], "commitDateTime": "2015-01-27 22:44:23", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.handler.Protocol.exitAfterHandlingRedirect(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int)"}], "spoonFilePath": "Protocol.java"}]}, {"nameRev": "234f3ce2589194eb2de4c23ed4cf3df308256eec tags/2.0.0-alpha1~128", "commitMessage": "Fix removeQueryParamOnRedirect, close #809\n", "commitParents": ["d952da1a53c772986c86a46c783cf1d73eab9179"], "spoonStatsSkippedReason": "", "commitHash": "234f3ce2589194eb2de4c23ed4cf3df308256eec", "authoredDateTime": "2015-01-27 22:44:19", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 3, "lines": 6, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/handler/Protocol.java"}, {"insertions": 3, "deletions": 5, "lines": 8, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/handler/Protocol.java"}], "commitDateTime": "2015-01-27 22:44:19", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty4.handler.Protocol.exitAfterHandlingRedirect(io.netty.channel.Channel,org.asynchttpclient.providers.netty4.future.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int)"}], "spoonFilePath": "Protocol.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/809", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 1}, "title": "Netty: fix removeQueryParamOnRedirect", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/handler"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2015-01-27 21:28:29", "commits": {"2cd800a65f8f6a10ffe89ccece6810992f3b3be1": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "d952da1a53c772986c86a46c783cf1d73eab9179": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.oauth.OAuthSignatureCalculator.constructAuthHeader(java.lang.String,java.lang.String,long)", "com.ning.http.client.oauth.ThreadSafeHMAC", "com.ning.http.util.QueryComputer.1.withQueryWithParams(java.lang.String,java.util.List)", "com.ning.http.util.UTF8UrlEncoder.appendSingleByteEncoded(java.lang.StringBuilder,int,boolean)", "com.ning.http.util.AsyncHttpProviderUtils.encodeAndAppendQueryParam(java.lang.StringBuilder,java.lang.CharSequence,java.lang.CharSequence)", "com.ning.http.util.AsyncHttpProviderUtils.formParams2UTF8String(java.util.List)", "com.ning.http.util.UTF8UrlEncoder", "com.ning.http.client.providers.jdk.JDKAsyncHttpProvider.AsyncHttpUrlConnection.configure(com.ning.http.client.uri.Uri,java.net.HttpURLConnection,com.ning.http.client.Request)", "com.ning.http.util.QueryComputer.1.encodeAndAppendQueryParams(java.lang.StringBuilder,java.util.List)", "com.ning.http.util.UTF8UrlEncoder.appendEncoded(java.lang.StringBuilder,java.lang.CharSequence,java.util.BitSet,boolean)", "com.ning.http.util.UTF8UrlEncoder.appendMultiByteEncoded(java.lang.StringBuilder,int)", "com.ning.http.util.UTF8UrlEncoder.encode(java.lang.String)", "com.ning.http.util.UTF8UrlEncoder.encodeAndAppendQueryElement(java.lang.StringBuilder,java.lang.CharSequence)", "com.ning.http.util.UTF8UrlEncoder.encodeAndAppendQuery(java.lang.StringBuilder,java.lang.String)", "com.ning.http.util.UTF8UrlEncoder.appendSingleByteEncoded(java.lang.StringBuilder,int)", "com.ning.http.util.AsyncHttpProviderUtils.encodeAndAppendParam(java.lang.StringBuilder,java.lang.CharSequence,java.lang.CharSequence)", "com.ning.http.client.oauth.OAuthSignatureCalculator.calculateSignature(java.lang.String,com.ning.http.client.uri.Uri,long,java.lang.String,java.util.List,java.util.List)", "com.ning.http.util.UTF8UrlEncoder.appendEncoded(java.lang.StringBuilder,java.lang.CharSequence)", "com.ning.http.util.UTF8UrlEncoder.encodeAndAppendFormElement(java.lang.StringBuilder,java.lang.CharSequence)", "com.ning.http.util.QueryComputer.1.withQueryWithoutParams(java.lang.String)", "com.ning.http.util.QueryComputer.1.encodeAndAppendQuery(java.lang.StringBuilder,java.lang.String)", "com.ning.http.client.providers.netty.request.NettyRequestFactory.body(com.ning.http.client.Request,org.jboss.netty.handler.codec.http.HttpMethod)"], "closed": "2015-01-27 21:40:52", "filteredCommits": ["2cd800a65f8f6a10ffe89ccece6810992f3b3be1"], "commitsDetails": [{"nameRev": "2cd800a65f8f6a10ffe89ccece6810992f3b3be1 tags/async-http-client-1.9.8~3", "commitMessage": "Fix percent-encoding usage, close #808\n", "commitParents": ["db80784f9f993094bd34dd6e6438a2a4f3029663"], "spoonStatsSkippedReason": "", "commitHash": "2cd800a65f8f6a10ffe89ccece6810992f3b3be1", "authoredDateTime": "2015-01-27 22:29:49", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 20, "lines": 24, "filePath": "src/main/java/com/ning/http/util/QueryComputer.java"}, {"insertions": 4, "deletions": 4, "lines": 8, "filePath": "src/main/java/com/ning/http/client/oauth/OAuthSignatureCalculator.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "src/test/java/com/ning/http/client/async/QueryParametersTest.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "src/test/java/com/ning/http/client/async/AsyncProvidersBasicTest.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestFactory.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/providers/jdk/JDKAsyncHttpProvider.java"}, {"insertions": 72, "deletions": 25, "lines": 97, "filePath": "src/main/java/com/ning/http/util/UTF8UrlEncoder.java"}, {"insertions": 15, "deletions": 6, "lines": 21, "filePath": "src/main/java/com/ning/http/util/AsyncHttpProviderUtils.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "src/main/java/com/ning/http/client/oauth/ThreadSafeHMAC.java"}], "commitDateTime": "2015-01-27 22:29:49", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.oauth.ThreadSafeHMAC"}], "spoonFilePath": "ThreadSafeHMAC.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.AsyncProvidersBasicTest.asyncProviderEncodingTest()"}], "spoonFilePath": "AsyncProvidersBasicTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.jdk.JDKAsyncHttpProvider.AsyncHttpUrlConnection.configure(com.ning.http.client.uri.Uri,java.net.HttpURLConnection,com.ning.http.client.Request)"}], "spoonFilePath": "JDKAsyncHttpProvider.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.body(com.ning.http.client.Request,org.jboss.netty.handler.codec.http.HttpMethod)"}], "spoonFilePath": "NettyRequestFactory.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.async.QueryParametersTest.urlWithColonTest_Netty()"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.async.QueryParametersTest.urlWithColonTest_JDK()"}], "spoonFilePath": "QueryParametersTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.util.QueryComputer.1.withQueryWithParams(java.lang.String,java.util.List)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "com.ning.http.util.QueryComputer.1.withQueryWithoutParams(java.lang.String)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.util.QueryComputer.1.encodeAndAppendQueryParams(java.lang.StringBuilder,java.util.List)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.util.QueryComputer.1.encodeAndAppendQuery(java.lang.StringBuilder,java.lang.String)"}], "spoonFilePath": "QueryComputer.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.util.AsyncHttpProviderUtils.encodeAndAppendQueryParam(java.lang.StringBuilder,java.lang.CharSequence,java.lang.CharSequence)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.util.AsyncHttpProviderUtils.formParams2UTF8String(java.util.List)"}, {"UPD": 3, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.util.AsyncHttpProviderUtils.encodeAndAppendParam(java.lang.StringBuilder,java.lang.CharSequence,java.lang.CharSequence)"}], "spoonFilePath": "AsyncHttpProviderUtils.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 13, "MOV": 4, "INS": 9, "DEL": 0, "spoonMethodName": "com.ning.http.util.UTF8UrlEncoder.appendMultiByteEncoded(java.lang.StringBuilder,int)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.util.UTF8UrlEncoder.encode(java.lang.String)"}, {"UPD": 1, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.util.UTF8UrlEncoder.appendSingleByteEncoded(java.lang.StringBuilder,int)"}, {"UPD": 0, "TOT": 5, "MOV": 0, "INS": 5, "DEL": 0, "spoonMethodName": "com.ning.http.util.UTF8UrlEncoder.appendEncoded(java.lang.StringBuilder,java.lang.CharSequence,java.util.BitSet,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.util.UTF8UrlEncoder.encodeAndAppendFormElement(java.lang.StringBuilder,java.lang.CharSequence)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.ning.http.util.UTF8UrlEncoder.appendSingleByteEncoded(java.lang.StringBuilder,int,boolean)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.util.UTF8UrlEncoder.appendEncoded(java.lang.StringBuilder,java.lang.CharSequence)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.util.UTF8UrlEncoder.encodeAndAppendQueryElement(java.lang.StringBuilder,java.lang.CharSequence)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.util.UTF8UrlEncoder.encodeAndAppendQuery(java.lang.StringBuilder,java.lang.String)"}, {"UPD": 5, "TOT": 26, "MOV": 6, "INS": 10, "DEL": 5, "spoonMethodName": "com.ning.http.util.UTF8UrlEncoder"}], "spoonFilePath": "UTF8UrlEncoder.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.oauth.OAuthSignatureCalculator.constructAuthHeader(java.lang.String,java.lang.String,long)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.oauth.OAuthSignatureCalculator.calculateSignature(java.lang.String,com.ning.http.client.uri.Uri,long,java.lang.String,java.util.List,java.util.List)"}], "spoonFilePath": "OAuthSignatureCalculator.java"}]}, {"nameRev": "d952da1a53c772986c86a46c783cf1d73eab9179 tags/2.0.0-alpha1~129", "commitMessage": "Fix percent-encoding usage, close #808\n", "commitParents": ["abec2ecd2bca21ee7ab4dca9ead2fff18436ba85"], "spoonStatsSkippedReason": "", "commitHash": "d952da1a53c772986c86a46c783cf1d73eab9179", "authoredDateTime": "2015-01-27 22:40:45", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/request/NettyRequestFactory.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "api/src/test/java/org/asynchttpclient/async/AsyncProvidersBasicTest.java"}, {"insertions": 14, "deletions": 5, "lines": 19, "filePath": "api/src/main/java/org/asynchttpclient/util/AsyncHttpProviderUtils.java"}, {"insertions": 4, "deletions": 20, "lines": 24, "filePath": "api/src/main/java/org/asynchttpclient/util/QueryComputer.java"}, {"insertions": 73, "deletions": 25, "lines": 98, "filePath": "api/src/main/java/org/asynchttpclient/util/UTF8UrlEncoder.java"}, {"insertions": 4, "deletions": 4, "lines": 8, "filePath": "api/src/main/java/org/asynchttpclient/oauth/OAuthSignatureCalculator.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "api/src/test/java/org/asynchttpclient/async/QueryParametersTest.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/request/NettyRequestFactory.java"}], "commitDateTime": "2015-01-27 22:40:45", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.async.AsyncProvidersBasicTest.asyncProviderEncodingTest()"}], "spoonFilePath": "AsyncProvidersBasicTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.request.NettyRequestFactory.body(org.asynchttpclient.Request,org.jboss.netty.handler.codec.http.HttpMethod)"}], "spoonFilePath": "NettyRequestFactory.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.AsyncHttpProviderUtils.encodeAndAppendQueryParam(java.lang.StringBuilder,java.lang.CharSequence,java.lang.CharSequence)"}, {"UPD": 3, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.AsyncHttpProviderUtils.encodeAndAppendParam(java.lang.StringBuilder,java.lang.CharSequence,java.lang.CharSequence)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.AsyncHttpProviderUtils.formParams2UTF8String(java.util.List)"}], "spoonFilePath": "AsyncHttpProviderUtils.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.util.QueryComputer.1.withQueryWithoutParams(java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.util.QueryComputer.1.encodeAndAppendQuery(java.lang.StringBuilder,java.lang.String)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.util.QueryComputer.1.withQueryWithParams(java.lang.String,java.util.List)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.QueryComputer.1.encodeAndAppendQueryParams(java.lang.StringBuilder,java.util.List)"}], "spoonFilePath": "QueryComputer.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.async.QueryParametersTest.urlWithColonTest()"}], "spoonFilePath": "QueryParametersTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.UTF8UrlEncoder.encode(java.lang.String)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.util.UTF8UrlEncoder.appendEncoded(java.lang.StringBuilder,java.lang.CharSequence)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.UTF8UrlEncoder.encodeAndAppendQuery(java.lang.StringBuilder,java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.UTF8UrlEncoder.encodeAndAppendQueryElement(java.lang.StringBuilder,java.lang.CharSequence)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.UTF8UrlEncoder.encodeAndAppendFormElement(java.lang.StringBuilder,java.lang.CharSequence)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.UTF8UrlEncoder.appendSingleByteEncoded(java.lang.StringBuilder,int,boolean)"}, {"UPD": 1, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.util.UTF8UrlEncoder.appendSingleByteEncoded(java.lang.StringBuilder,int)"}, {"UPD": 0, "TOT": 5, "MOV": 0, "INS": 5, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.UTF8UrlEncoder.appendEncoded(java.lang.StringBuilder,java.lang.CharSequence,java.util.BitSet,boolean)"}, {"UPD": 5, "TOT": 27, "MOV": 6, "INS": 11, "DEL": 5, "spoonMethodName": "org.asynchttpclient.util.UTF8UrlEncoder"}, {"UPD": 0, "TOT": 13, "MOV": 4, "INS": 9, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.UTF8UrlEncoder.appendMultiByteEncoded(java.lang.StringBuilder,int)"}], "spoonFilePath": "UTF8UrlEncoder.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculator.calculateSignature(java.lang.String,org.asynchttpclient.uri.Uri,long,java.lang.String,java.util.List,java.util.List)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.oauth.OAuthSignatureCalculator.constructAuthHeader(java.lang.String,java.lang.String,long)"}], "spoonFilePath": "OAuthSignatureCalculator.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/808", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 100, "deletions": 60, "lines": 160, "gitFilesChange": 7}, "title": "Fix percent-encoding usage", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/request", "src/main/java/com/ning/http/client/providers/jdk", "src/main/java/com/ning/http/client/oauth", "src/main/java/com/ning/http/util"], "spoonStatsSummary": {"UPD": 21, "spoonMethodsChanged": 22, "TOT": 75, "MOV": 12, "INS": 31, "DEL": 11, "spoonFilesChanged": 7}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "- Don't try some broken decode-encode roundtrip on query string. If a query was built unproperly encoded, there's no way to fix it for sure. Let's just encode what is to be encoded for sure.\n- Specifically encode form-url-encoded bodies, as the spec is slightly different\n\nSee https://github.com/AsyncHttpClient/async-http-client/pull/541#issuecomment-71651729\n", "labels": ["Defect"]}, {"created": "2015-01-23 00:06:03", "commits": {"d7f9662c444b8542a4318b65a88ab504bd6f3462": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "a5511de404ac3c11bd1eb48e3a278470ae6c3327": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.channel.ChannelManager.createSslHandler(java.lang.String,int)"], "closed": "2015-01-24 13:45:20", "filteredCommits": ["d7f9662c444b8542a4318b65a88ab504bd6f3462"], "commitsDetails": [{"nameRev": "d7f9662c444b8542a4318b65a88ab504bd6f3462 tags/async-http-client-1.9.7~2", "commitMessage": "Set closeOnSSLException flag to true, close #807\n", "commitParents": ["0c0867a317c9b545d314ca3ed728c3ab42660974"], "spoonStatsSkippedReason": "", "commitHash": "d7f9662c444b8542a4318b65a88ab504bd6f3462", "authoredDateTime": "2015-01-24 13:55:11", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 2, "lines": 6, "filePath": "src/main/java/com/ning/http/client/providers/netty/channel/ChannelManager.java"}], "commitDateTime": "2015-01-24 13:55:11", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 1, "INS": 3, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.channel.ChannelManager.createSslHandler(java.lang.String,int)"}], "spoonFilePath": "ChannelManager.java"}]}, {"nameRev": "a5511de404ac3c11bd1eb48e3a278470ae6c3327 tags/2.0.0-alpha1~133", "commitMessage": "Set closeOnSSLException flag to true, close #807\n", "commitParents": ["83e3f78f040bb66ef4f4351c1894d27444be96ef"], "spoonStatsSkippedReason": "", "commitHash": "a5511de404ac3c11bd1eb48e3a278470ae6c3327", "authoredDateTime": "2015-01-24 14:45:15", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 2, "lines": 5, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/channel/ChannelManager.java"}], "commitDateTime": "2015-01-24 14:45:15", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 1, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.channel.ChannelManager.createSslHandler(java.lang.String,int)"}], "spoonFilePath": "ChannelManager.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/807", "ttf": 1.0002777777777778, "gitStatsSummary": {"insertions": 4, "deletions": 2, "lines": 6, "gitFilesChange": 1}, "title": "Netty: set closeOnSSLException flag for netty provider", "statsSkippedReason": "", "user": "SpookyCookie", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/channel"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 4, "MOV": 1, "INS": 3, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Netty's SSLHandler has closeOnSSLException flag which is used to close connection in case of exceptions thrown during ssl communication. In netty 3.9 the flag is set to false by default due to compatibility issues, even though documentation recommends it to be true.\n\nThere is no way to set it to true when using AsyncHttpClient. Having this flag to false can lead to leaking https connections. Please provide the ability to specify the value for this flag when using NettyAsyncHttpProvider. \n", "labels": ["Defect", "Netty"]}, {"created": "2015-01-19 20:31:26", "commits": {"72459a507095998a50bd8ce879b6f7adf07ef9da": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "bf16a1e5f556ea125b4ebdeb6a8e6e6f6ba61c10": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.cookie.KeyValuePairsParser.parse6(java.lang.String,int,java.lang.String)"], "closed": "2015-01-19 20:35:56", "filteredCommits": ["72459a507095998a50bd8ce879b6f7adf07ef9da"], "commitsDetails": [{"nameRev": "72459a507095998a50bd8ce879b6f7adf07ef9da tags/2.0.0-alpha1~138", "commitMessage": "CookieDecoder should handle empty domain as null, close #806\n", "commitParents": ["ec03713652ce4026de998f9e6aa2b69f33efb766"], "spoonStatsSkippedReason": "", "commitHash": "72459a507095998a50bd8ce879b6f7adf07ef9da", "authoredDateTime": "2015-01-19 21:35:50", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "api/src/main/java/org/asynchttpclient/cookie/KeyValuePairsParser.java"}, {"insertions": 7, "deletions": 0, "lines": 7, "filePath": "api/src/test/java/org/asynchttpclient/cookie/CookieDecoderTest.java"}], "commitDateTime": "2015-01-19 21:35:50", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.cookie.KeyValuePairsParser.parse6(java.lang.String,int,java.lang.String)"}], "spoonFilePath": "KeyValuePairsParser.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.cookie.CookieDecoderTest.testIgnoreEmptyDomain()"}], "spoonFilePath": "CookieDecoderTest.java"}]}, {"nameRev": "bf16a1e5f556ea125b4ebdeb6a8e6e6f6ba61c10 tags/async-http-client-1.9.6~1", "commitMessage": "CookieDecoder should handle empty domain as null, close #806\n", "commitParents": ["7ee33027d440a5facd07b2eb4ee281197de6e556"], "spoonStatsSkippedReason": "", "commitHash": "bf16a1e5f556ea125b4ebdeb6a8e6e6f6ba61c10", "authoredDateTime": "2015-01-19 21:32:50", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 7, "deletions": 0, "lines": 7, "filePath": "src/test/java/com/ning/http/client/cookie/CookieDecoderTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/cookie/KeyValuePairsParser.java"}], "commitDateTime": "2015-01-19 21:32:50", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.cookie.KeyValuePairsParser.parse6(java.lang.String,int,java.lang.String)"}], "spoonFilePath": "KeyValuePairsParser.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.cookie.CookieDecoderTest.testIgnoreEmptyDomain()"}], "spoonFilePath": "CookieDecoderTest.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/806", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "CookieDecoder should handle empty domain as null", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["api/src/main/java/org/asynchttpclient/cookie"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "See http://tools.ietf.org/html/rfc6265#section-5.2.3\n\nCurrently, it's left as empty.\n", "labels": ["Defect"]}, {"created": "2015-01-15 09:54:58", "commits": {"05ec1af5f780854943de964a6ae805c0d474f433": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "8c0ad2a245df8aa5bb0aee81b10bdb9d3da4b6bb": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.providers.netty3.channel.ChannelManager.preemptChannel(java.lang.String)"], "closed": "2015-01-15 10:01:53", "filteredCommits": ["05ec1af5f780854943de964a6ae805c0d474f433"], "commitsDetails": [{"nameRev": "05ec1af5f780854943de964a6ae805c0d474f433 tags/2.0.0-alpha1~141", "commitMessage": "ChannelManager.preemptChannel should release global semaphore if tryAcquirePerHost fails, close #805\n", "commitParents": ["04df4e266e36704e74bea7b5db6f96913ff35875"], "spoonStatsSkippedReason": "", "commitHash": "05ec1af5f780854943de964a6ae805c0d474f433", "authoredDateTime": "2015-01-15 11:01:48", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 10, "deletions": 6, "lines": 16, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/channel/ChannelManager.java"}, {"insertions": 5, "deletions": 1, "lines": 6, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/channel/ChannelManager.java"}], "commitDateTime": "2015-01-15 11:01:48", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 3, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty3.channel.ChannelManager.preemptChannel(java.lang.String)"}], "spoonFilePath": "ChannelManager.java"}]}, {"nameRev": "8c0ad2a245df8aa5bb0aee81b10bdb9d3da4b6bb tags/async-http-client-1.9.6~3", "commitMessage": "ChannelManager.preemptChannel should release global semaphore if tryAcquirePerHost fails, close #805\n", "commitParents": ["29a76ecd17ff2a4ed7c6be8a0b64de889b30195d"], "spoonStatsSkippedReason": "", "commitHash": "8c0ad2a245df8aa5bb0aee81b10bdb9d3da4b6bb", "authoredDateTime": "2015-01-15 11:01:44", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 5, "deletions": 1, "lines": 6, "filePath": "src/main/java/com/ning/http/client/providers/netty/channel/ChannelManager.java"}], "commitDateTime": "2015-01-15 11:01:44", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 3, "INS": 2, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.channel.ChannelManager.preemptChannel(java.lang.String)"}], "spoonFilePath": "ChannelManager.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/805", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 15, "deletions": 7, "lines": 22, "gitFilesChange": 2}, "title": "ChannelManager.preemptChannel should release global semaphore if tryAcquirePerHost fails", "statsSkippedReason": "", "user": "yanmingzhang", "changesInPackagesGIT": ["providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/channel", "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/channel"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 6, "MOV": 3, "INS": 2, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "as title\n", "labels": ["Defect", "Netty"]}, {"created": "2015-01-15 03:38:55", "commits": {"8f21dfd2fcd89825b33282564ab84ab1559d0960": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "db341f130e9456dc17b0b00823bfa7f7e92bf06f": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.channel.pool.DefaultChannelPool.IdleChannelDetector.isChannelCloseable(org.jboss.netty.channel.Channel)", "com.ning.http.client.providers.netty.channel.pool.DefaultChannelPool.IdleChannelDetector.closeChannels(java.util.List)"], "closed": "2015-01-15 07:45:28", "filteredCommits": ["8f21dfd2fcd89825b33282564ab84ab1559d0960"], "commitsDetails": [{"nameRev": "8f21dfd2fcd89825b33282564ab84ab1559d0960 tags/async-http-client-1.9.6~6", "commitMessage": "Fix DefaultChannelPool.closeChannels, close #804\n", "commitParents": ["3fe163435c14e1c7ad59f3efa00b2c95f8f0ff50"], "spoonStatsSkippedReason": "", "commitHash": "8f21dfd2fcd89825b33282564ab84ab1559d0960", "authoredDateTime": "2015-01-15 08:45:25", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 16, "deletions": 13, "lines": 29, "filePath": "src/main/java/com/ning/http/client/providers/netty/channel/pool/DefaultChannelPool.java"}], "commitDateTime": "2015-01-15 08:45:27", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.channel.pool.DefaultChannelPool.IdleChannelDetector.isChannelCloseable(org.jboss.netty.channel.Channel)"}, {"UPD": 0, "TOT": 9, "MOV": 6, "INS": 2, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.channel.pool.DefaultChannelPool.IdleChannelDetector.closeChannels(java.util.List)"}], "spoonFilePath": "DefaultChannelPool.java"}]}, {"nameRev": "db341f130e9456dc17b0b00823bfa7f7e92bf06f tags/2.0.0-alpha1~143", "commitMessage": "Fix DefaultChannelPool.closeChannels, close #804\n", "commitParents": ["72b395ea80c14df1375e99ba820747c2916d9375"], "spoonStatsSkippedReason": "", "commitHash": "db341f130e9456dc17b0b00823bfa7f7e92bf06f", "authoredDateTime": "2015-01-15 08:45:22", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 15, "deletions": 13, "lines": 28, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/channel/pool/DefaultChannelPool.java"}, {"insertions": 10, "deletions": 7, "lines": 17, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/channel/pool/DefaultChannelPool.java"}], "commitDateTime": "2015-01-15 08:45:22", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty4.channel.pool.DefaultChannelPool.IdleChannelDetector.isChannelCloseable(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 8, "MOV": 5, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty4.channel.pool.DefaultChannelPool.IdleChannelDetector.closeChannels(java.util.List)"}], "spoonFilePath": "DefaultChannelPool.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/804", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 16, "deletions": 13, "lines": 29, "gitFilesChange": 1}, "title": "netty provider's DefaultChannelPool doesn't close expired channel properly", "statsSkippedReason": "", "user": "yanmingzhang", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/channel"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 10, "MOV": 6, "INS": 3, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "in closeChannels function, because of isChannelCloseable always returns true, so the next\nif (closedChannels == null) {} else {} statement will never be executed\n\ni think the else statement should match the first if statement?\n", "labels": ["Defect", "Netty"]}, {"created": "2015-01-12 14:46:20", "commits": {"746111dcd59c4a165a202a62454298789d7ea9cd": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "2ed3b4cf72eb0c62c70865bb9247699371265d13": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.request.NettyRequestFactory.systematicProxyAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.ProxyServer,org.jboss.netty.handler.codec.http.HttpMethod)", "com.ning.http.client.providers.netty.request.NettyRequestFactory.systematicProxyAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.Realm,com.ning.http.client.ProxyServer,org.jboss.netty.handler.codec.http.HttpMethod)", "com.ning.http.client.providers.netty.request.NettyRequestFactory.systematicAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.uri.Uri,com.ning.http.client.Realm)", "com.ning.http.client.providers.netty.request.NettyRequestFactory.systematicAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.uri.Uri,com.ning.http.client.ProxyServer,com.ning.http.client.Realm)", "com.ning.http.client.providers.netty.request.NettyRequestFactory.newNettyRequest(com.ning.http.client.Request,com.ning.http.client.uri.Uri,boolean,com.ning.http.client.ProxyServer)"], "closed": "2015-01-12 14:54:34", "filteredCommits": ["746111dcd59c4a165a202a62454298789d7ea9cd"], "commitsDetails": [{"nameRev": "746111dcd59c4a165a202a62454298789d7ea9cd tags/async-http-client-1.9.5~2", "commitMessage": "systematicProxyAuthorizationHeader should honor Real when targeting a proxy, close #803\n", "commitParents": ["7e67559c0197df963c926c0604892d33c21c8f31"], "spoonStatsSkippedReason": "", "commitHash": "746111dcd59c4a165a202a62454298789d7ea9cd", "authoredDateTime": "2015-01-12 15:46:29", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 27, "deletions": 6, "lines": 33, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestFactory.java"}], "commitDateTime": "2015-01-12 15:46:29", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.systematicProxyAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.ProxyServer,org.jboss.netty.handler.codec.http.HttpMethod)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.systematicAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.uri.Uri,com.ning.http.client.Realm)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.systematicProxyAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.Realm,com.ning.http.client.ProxyServer,org.jboss.netty.handler.codec.http.HttpMethod)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.systematicAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.uri.Uri,com.ning.http.client.ProxyServer,com.ning.http.client.Realm)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.newNettyRequest(com.ning.http.client.Request,com.ning.http.client.uri.Uri,boolean,com.ning.http.client.ProxyServer)"}], "spoonFilePath": "NettyRequestFactory.java"}]}, {"nameRev": "2ed3b4cf72eb0c62c70865bb9247699371265d13 tags/2.0.0-alpha1~145", "commitMessage": "systematicProxyAuthorizationHeader should honor Real when targeting a proxy, close #803\n", "commitParents": ["27b909425019b530f5404d3b22b1f71ce87aa863"], "spoonStatsSkippedReason": "", "commitHash": "2ed3b4cf72eb0c62c70865bb9247699371265d13", "authoredDateTime": "2015-01-12 15:54:28", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 21, "deletions": 2, "lines": 23, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/request/NettyRequestFactory.java"}, {"insertions": 22, "deletions": 2, "lines": 24, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/request/NettyRequestFactory.java"}], "commitDateTime": "2015-01-12 15:54:28", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty3.request.NettyRequestFactory.systematicProxyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,org.jboss.netty.handler.codec.http.HttpMethod)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.request.NettyRequestFactory.systematicProxyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,org.asynchttpclient.Realm,org.jboss.netty.handler.codec.http.HttpMethod)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.request.NettyRequestFactory.newNettyRequest(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,boolean,org.asynchttpclient.ProxyServer)"}], "spoonFilePath": "NettyRequestFactory.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/803", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 27, "deletions": 6, "lines": 33, "gitFilesChange": 1}, "title": "systematicProxyAuthorizationHeader should honor Real when targeting a proxy", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/request"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 5, "TOT": 10, "MOV": 3, "INS": 4, "DEL": 3, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2015-01-12 14:35:27", "commits": {"4beee3667694469e30130ebc855267739b83be47": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "91d0d0879dd9a427e3c231c8aed0d418b7a71245": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.handler.HttpProtocol.exitAfterHandling407(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.ProxyServer)"], "closed": "2015-01-12 14:50:28", "filteredCommits": ["4beee3667694469e30130ebc855267739b83be47"], "commitsDetails": [{"nameRev": "4beee3667694469e30130ebc855267739b83be47 tags/async-http-client-1.9.5~4", "commitMessage": "Use target request method and not \"CONNECT\" when processing DIGEST auth to a proxy, close #802\n", "commitParents": ["23fcc859dce4dd0e081317ccfa5e6ff87a1003d3"], "spoonStatsSkippedReason": "", "commitHash": "4beee3667694469e30130ebc855267739b83be47", "authoredDateTime": "2015-01-12 15:35:43", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/HttpProtocol.java"}], "commitDateTime": "2015-01-12 15:35:43", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.exitAfterHandling407(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.ProxyServer)"}], "spoonFilePath": "HttpProtocol.java"}]}, {"nameRev": "91d0d0879dd9a427e3c231c8aed0d418b7a71245 tags/2.0.0-alpha1~147", "commitMessage": "Use target request method and not \"CONNECT\" when processing DIGEST auth to a proxy, close #802\n", "commitParents": ["d068d22447feccb7c74e74fcb11a33fbc669a11b"], "spoonStatsSkippedReason": "", "commitHash": "91d0d0879dd9a427e3c231c8aed0d418b7a71245", "authoredDateTime": "2015-01-12 15:50:23", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/handler/HttpProtocol.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/handler/HttpProtocol.java"}], "commitDateTime": "2015-01-12 15:50:23", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty4.handler.HttpProtocol.exitAfterHandling407(io.netty.channel.Channel,org.asynchttpclient.providers.netty4.future.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm,org.asynchttpclient.ProxyServer)"}], "spoonFilePath": "HttpProtocol.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/802", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "Use target request method and not \"CONNECT\" when processing DIGEST auth to a proxy", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/handler"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2015-01-12 14:33:55", "commits": {"23fcc859dce4dd0e081317ccfa5e6ff87a1003d3": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "d068d22447feccb7c74e74fcb11a33fbc669a11b": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.util.AuthenticatorUtils.computeRealmURI(com.ning.http.client.Realm)"], "closed": "2015-01-12 14:48:49", "filteredCommits": ["23fcc859dce4dd0e081317ccfa5e6ff87a1003d3"], "commitsDetails": [{"nameRev": "23fcc859dce4dd0e081317ccfa5e6ff87a1003d3 tags/async-http-client-1.9.5~5", "commitMessage": "Use request uri and not \"/\" when processing DIGEST auth uri, close #801\n", "commitParents": ["8e1fc6f936cbf83007c12f7aff2e6fb48d80c132"], "spoonStatsSkippedReason": "", "commitHash": "23fcc859dce4dd0e081317ccfa5e6ff87a1003d3", "authoredDateTime": "2015-01-12 15:34:12", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 8, "lines": 12, "filePath": "src/main/java/com/ning/http/util/AuthenticatorUtils.java"}], "commitDateTime": "2015-01-12 15:34:12", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.util.AuthenticatorUtils.computeRealmURI(com.ning.http.client.Realm)"}], "spoonFilePath": "AuthenticatorUtils.java"}]}, {"nameRev": "d068d22447feccb7c74e74fcb11a33fbc669a11b tags/2.0.0-alpha1~148", "commitMessage": "Use request uri and not \"/\" when processing DIGEST auth uri, close #801\n", "commitParents": ["03dfa410d44395001f2e69cf90bec11523686967"], "spoonStatsSkippedReason": "", "commitHash": "d068d22447feccb7c74e74fcb11a33fbc669a11b", "authoredDateTime": "2015-01-12 15:48:44", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 5, "deletions": 9, "lines": 14, "filePath": "api/src/main/java/org/asynchttpclient/util/AuthenticatorUtils.java"}], "commitDateTime": "2015-01-12 15:48:44", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.util.AuthenticatorUtils.computeRealmURI(org.asynchttpclient.Realm)"}], "spoonFilePath": "AuthenticatorUtils.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/801", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 4, "deletions": 8, "lines": 12, "gitFilesChange": 1}, "title": "Use request uri and not \"/\" when processing DIGEST auth uri", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/util"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2015-01-12 14:29:00", "commits": {"03dfa410d44395001f2e69cf90bec11523686967": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "8e1fc6f936cbf83007c12f7aff2e6fb48d80c132": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.uri.Uri.toUrl()"], "closed": "2015-01-12 14:48:09", "filteredCommits": ["03dfa410d44395001f2e69cf90bec11523686967"], "commitsDetails": [{"nameRev": "03dfa410d44395001f2e69cf90bec11523686967 tags/2.0.0-alpha1~149", "commitMessage": "Uri.toUrl should reset underlying StringBuilder, close #800\n", "commitParents": ["d8b4872ba1d5a0c67ea526a2b68c22042d2535f7"], "spoonStatsSkippedReason": "", "commitHash": "03dfa410d44395001f2e69cf90bec11523686967", "authoredDateTime": "2015-01-12 15:48:05", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "api/src/main/java/org/asynchttpclient/uri/Uri.java"}], "commitDateTime": "2015-01-12 15:48:05", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.Uri.toUrl()"}], "spoonFilePath": "Uri.java"}]}, {"nameRev": "8e1fc6f936cbf83007c12f7aff2e6fb48d80c132 tags/async-http-client-1.9.5~6", "commitMessage": "Uri.toUrl should reset underlying StringBuilder, close #800\n", "commitParents": ["8289e35ac7fa4c917e1c617dbc0a535bc20a2293"], "spoonStatsSkippedReason": "", "commitHash": "8e1fc6f936cbf83007c12f7aff2e6fb48d80c132", "authoredDateTime": "2015-01-12 15:29:11", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 0, "lines": 1, "filePath": "src/main/java/com/ning/http/client/uri/Uri.java"}], "commitDateTime": "2015-01-12 15:29:11", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.uri.Uri.toUrl()"}], "spoonFilePath": "Uri.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/800", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "Uri.toUrl should reset underlying StringBuilder", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["api/src/main/java/org/asynchttpclient/uri"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2015-01-12 09:14:18", "commits": {"a522202df07cecfe137f00dfd56c5e217ec4a131": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "d8b4872ba1d5a0c67ea526a2b68c22042d2535f7": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.request.NettyRequestSender.sendRequestWithNewChannel(com.ning.http.client.Request,com.ning.http.client.uri.Uri,com.ning.http.client.ProxyServer,boolean,com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.AsyncHandler,boolean)", "com.ning.http.client.providers.netty.request.NettyRequestSender", "com.ning.http.client.providers.netty.channel.ChannelManager", "com.ning.http.client.providers.netty.channel.ChannelManager.preemptChannel(java.lang.String)", "com.ning.http.client.providers.netty.channel.ChannelManager.buildStaticException(java.lang.String)"], "closed": "2015-01-12 09:20:47", "filteredCommits": ["a522202df07cecfe137f00dfd56c5e217ec4a131"], "commitsDetails": [{"nameRev": "a522202df07cecfe137f00dfd56c5e217ec4a131 tags/async-http-client-1.9.5~9", "commitMessage": "Fix Exception message when maxConnectionPerHost is reached, close #799\n", "commitParents": ["2f7d9aef33afd8723ffe1ff2d8d7a7ecb0186bef"], "spoonStatsSkippedReason": "", "commitHash": "a522202df07cecfe137f00dfd56c5e217ec4a131", "authoredDateTime": "2015-01-12 10:14:53", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 6, "lines": 8, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestSender.java"}, {"insertions": 20, "deletions": 2, "lines": 22, "filePath": "src/main/java/com/ning/http/client/providers/netty/channel/ChannelManager.java"}], "commitDateTime": "2015-01-12 10:14:53", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestSender.sendRequestWithNewChannel(com.ning.http.client.Request,com.ning.http.client.uri.Uri,com.ning.http.client.ProxyServer,boolean,com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.AsyncHandler,boolean)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 3, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestSender"}], "spoonFilePath": "NettyRequestSender.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 0, "INS": 6, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.channel.ChannelManager"}, {"UPD": 2, "TOT": 10, "MOV": 6, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.channel.ChannelManager.preemptChannel(java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.channel.ChannelManager.buildStaticException(java.lang.String)"}], "spoonFilePath": "ChannelManager.java"}]}, {"nameRev": "d8b4872ba1d5a0c67ea526a2b68c22042d2535f7 tags/2.0.0-alpha1~150", "commitMessage": "Fix Exception message when maxConnectionPerHost is reached, close #799\n", "commitParents": ["577615a316f4cd9b764f1ea8ea5ecb3417590d84"], "spoonStatsSkippedReason": "", "commitHash": "d8b4872ba1d5a0c67ea526a2b68c22042d2535f7", "authoredDateTime": "2015-01-12 10:20:42", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 5, "lines": 6, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/request/NettyRequestSender.java"}, {"insertions": 1, "deletions": 5, "lines": 6, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/request/NettyRequestSender.java"}, {"insertions": 14, "deletions": 5, "lines": 19, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/channel/ChannelManager.java"}, {"insertions": 14, "deletions": 2, "lines": 16, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/channel/ChannelManager.java"}, {"insertions": 6, "deletions": 0, "lines": 6, "filePath": "api/src/main/java/org/asynchttpclient/util/MiscUtils.java"}], "commitDateTime": "2015-01-12 10:20:42", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.MiscUtils.buildStaticException(java.lang.String)"}], "spoonFilePath": "MiscUtils.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty3.request.NettyRequestSender.sendRequestWithNewChannel(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,org.asynchttpclient.ProxyServer,boolean,org.asynchttpclient.providers.netty3.future.NettyResponseFuture,org.asynchttpclient.AsyncHandler,boolean)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 3, "spoonMethodName": "org.asynchttpclient.providers.netty3.request.NettyRequestSender"}], "spoonFilePath": "NettyRequestSender.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 9, "MOV": 3, "INS": 4, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty3.channel.ChannelManager.preemptChannel(java.lang.String)"}, {"UPD": 0, "TOT": 6, "MOV": 0, "INS": 6, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.channel.ChannelManager"}], "spoonFilePath": "ChannelManager.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/799", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 22, "deletions": 8, "lines": 30, "gitFilesChange": 2}, "title": "Netty: Wrong Exception message when maxConnectionPerHost is reached", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/channel", "src/main/java/com/ning/http/client/providers/netty/request"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 5, "TOT": 22, "MOV": 7, "INS": 8, "DEL": 5, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2015-01-09 15:21:28", "commits": {"2f7d9aef33afd8723ffe1ff2d8d7a7ecb0186bef": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "577615a316f4cd9b764f1ea8ea5ecb3417590d84": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.AuthorizationHandler.handleStatus(org.glassfish.grizzly.http.HttpResponsePacket,com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider$HttpTransactionContext,org.glassfish.grizzly.filterchain.FilterChainContext)", "com.ning.http.client.ProxyServer", "com.ning.http.client.providers.netty.handler.HttpProtocol.kerberosChallenge(org.jboss.netty.channel.Channel,java.util.List,com.ning.http.client.Request,com.ning.http.client.ProxyServer,com.ning.http.client.FluentCaseInsensitiveStringsMap,com.ning.http.client.Realm,com.ning.http.client.providers.netty.future.NettyResponseFuture,boolean)", "com.ning.http.client.ProxyServer.setNtlmHost(java.lang.String)", "com.ning.http.client.Realm.getAuthScheme()", "com.ning.http.client.providers.netty.handler.HttpProtocol.ntlmChallenge(java.lang.String,com.ning.http.client.Request,com.ning.http.client.ProxyServer,com.ning.http.client.FluentCaseInsensitiveStringsMap,com.ning.http.client.Realm,com.ning.http.client.providers.netty.future.NettyResponseFuture,boolean)", "com.ning.http.client.providers.netty.handler.HttpProtocol.ntlmProxyChallenge(java.lang.String,com.ning.http.client.Request,com.ning.http.client.ProxyServer,com.ning.http.client.FluentCaseInsensitiveStringsMap,com.ning.http.client.Realm,com.ning.http.client.providers.netty.future.NettyResponseFuture,boolean)", "com.ning.http.client.providers.netty.handler.HttpProtocol.exitAfterHandling401(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm,com.ning.http.client.ProxyServer)", "com.ning.http.client.ProxyServer.setScheme(com.ning.http.client.Realm.AuthScheme)", "com.ning.http.client.providers.netty.request.NettyRequestFactory.systematicProxyAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.ProxyServer,org.jboss.netty.handler.codec.http.HttpMethod)", "com.ning.http.client.providers.netty.handler.HttpProtocol.ntlmChallenge(java.lang.String,com.ning.http.client.Request,com.ning.http.client.FluentCaseInsensitiveStringsMap,com.ning.http.client.Realm,com.ning.http.client.providers.netty.future.NettyResponseFuture)", "com.ning.http.client.providers.netty.request.NettyRequestFactory.systematicAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.uri.Uri,com.ning.http.client.ProxyServer,com.ning.http.client.Realm)", "com.ning.http.client.ProxyServer.getNtlmHost()", "com.ning.http.client.providers.netty.request.NettyRequestFactory.firstRequestOnlyAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.uri.Uri,com.ning.http.client.ProxyServer,com.ning.http.client.Realm)", "com.ning.http.client.Realm.RealmBuilder.setNtlmHost(java.lang.String)", "com.ning.http.client.providers.jdk.JDKAsyncHttpProvider.AsyncHttpUrlConnection.configure(com.ning.http.client.uri.Uri,java.net.HttpURLConnection,com.ning.http.client.Request)", "com.ning.http.client.providers.netty.handler.HttpProtocol.handleHttpResponse(org.jboss.netty.handler.codec.http.HttpResponse,org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.AsyncHandler)", "com.ning.http.client.ProxyServer.getScheme()", "com.ning.http.client.providers.netty.handler.HttpProtocol.kerberosProxyChallenge(org.jboss.netty.channel.Channel,java.util.List,com.ning.http.client.Request,com.ning.http.client.ProxyServer,com.ning.http.client.FluentCaseInsensitiveStringsMap,com.ning.http.client.providers.netty.future.NettyResponseFuture)", "com.ning.http.client.Realm.getNtlmHost()", "com.ning.http.client.ProxyServer.realmBuilder()", "com.ning.http.client.providers.netty.handler.HttpProtocol.kerberosChallenge(org.jboss.netty.channel.Channel,java.util.List,com.ning.http.client.Request,com.ning.http.client.FluentCaseInsensitiveStringsMap,com.ning.http.client.Realm,com.ning.http.client.providers.netty.future.NettyResponseFuture)", "com.ning.http.client.providers.netty.handler.HttpProtocol.newRealmBuilder(com.ning.http.client.Realm)", "com.ning.http.client.providers.netty.handler.HttpProtocol.exitAfterHandling407(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm,com.ning.http.client.ProxyServer)", "com.ning.http.client.providers.netty.handler.HttpProtocol.addType3NTLMAuthorizationHeader(java.lang.String,com.ning.http.client.FluentCaseInsensitiveStringsMap,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.generateAuthHeader(com.ning.http.client.Realm)", "com.ning.http.client.Realm.RealmBuilder.getNtlmHost()", "com.ning.http.client.providers.netty.handler.HttpProtocol.ntlmProxyChallenge(java.lang.String,com.ning.http.client.Request,com.ning.http.client.ProxyServer,com.ning.http.client.FluentCaseInsensitiveStringsMap,com.ning.http.client.providers.netty.future.NettyResponseFuture)", "com.ning.http.client.Realm", "com.ning.http.client.Realm.RealmBuilder", "com.ning.http.client.Realm.RealmBuilder.build()"], "closed": "2015-01-09 15:21:55", "filteredCommits": ["2f7d9aef33afd8723ffe1ff2d8d7a7ecb0186bef"], "commitsDetails": [{"nameRev": "2f7d9aef33afd8723ffe1ff2d8d7a7ecb0186bef tags/async-http-client-1.9.5~10", "commitMessage": "ProxyServer should have its own ntlmHost and scheme, close #797\n", "commitParents": ["d36232751d9e6a9a1829b8cec63702b3024fa929"], "spoonStatsSkippedReason": "", "commitHash": "2f7d9aef33afd8723ffe1ff2d8d7a7ecb0186bef", "authoredDateTime": "2015-01-09 16:21:46", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 8, "deletions": 13, "lines": 21, "filePath": "src/main/java/com/ning/http/client/Realm.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/test/java/com/ning/http/client/RealmTest.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java"}, {"insertions": 4, "deletions": 3, "lines": 7, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestFactory.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/providers/jdk/JDKAsyncHttpProvider.java"}, {"insertions": 70, "deletions": 61, "lines": 131, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/HttpProtocol.java"}, {"insertions": 29, "deletions": 0, "lines": 29, "filePath": "src/main/java/com/ning/http/client/ProxyServer.java"}], "commitDateTime": "2015-01-09 16:21:46", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.ntlmChallenge(java.lang.String,com.ning.http.client.Request,com.ning.http.client.FluentCaseInsensitiveStringsMap,com.ning.http.client.Realm,com.ning.http.client.providers.netty.future.NettyResponseFuture)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.handleHttpResponse(org.jboss.netty.handler.codec.http.HttpResponse,org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.AsyncHandler)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.kerberosProxyChallenge(org.jboss.netty.channel.Channel,java.util.List,com.ning.http.client.Request,com.ning.http.client.ProxyServer,com.ning.http.client.FluentCaseInsensitiveStringsMap,com.ning.http.client.providers.netty.future.NettyResponseFuture)"}, {"UPD": 3, "TOT": 17, "MOV": 10, "INS": 0, "DEL": 4, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.kerberosChallenge(org.jboss.netty.channel.Channel,java.util.List,com.ning.http.client.Request,com.ning.http.client.ProxyServer,com.ning.http.client.FluentCaseInsensitiveStringsMap,com.ning.http.client.Realm,com.ning.http.client.providers.netty.future.NettyResponseFuture,boolean)"}, {"UPD": 0, "TOT": 6, "MOV": 0, "INS": 6, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.kerberosChallenge(org.jboss.netty.channel.Channel,java.util.List,com.ning.http.client.Request,com.ning.http.client.FluentCaseInsensitiveStringsMap,com.ning.http.client.Realm,com.ning.http.client.providers.netty.future.NettyResponseFuture)"}, {"UPD": 0, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.newRealmBuilder(com.ning.http.client.Realm)"}, {"UPD": 7, "TOT": 16, "MOV": 3, "INS": 0, "DEL": 6, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.exitAfterHandling401(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm,com.ning.http.client.ProxyServer)"}, {"UPD": 0, "TOT": 8, "MOV": 0, "INS": 0, "DEL": 8, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.addType3NTLMAuthorizationHeader(java.lang.String,com.ning.http.client.FluentCaseInsensitiveStringsMap,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)"}, {"UPD": 8, "TOT": 42, "MOV": 26, "INS": 0, "DEL": 8, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.ntlmChallenge(java.lang.String,com.ning.http.client.Request,com.ning.http.client.ProxyServer,com.ning.http.client.FluentCaseInsensitiveStringsMap,com.ning.http.client.Realm,com.ning.http.client.providers.netty.future.NettyResponseFuture,boolean)"}, {"UPD": 3, "TOT": 12, "MOV": 3, "INS": 0, "DEL": 6, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.ntlmProxyChallenge(java.lang.String,com.ning.http.client.Request,com.ning.http.client.ProxyServer,com.ning.http.client.FluentCaseInsensitiveStringsMap,com.ning.http.client.Realm,com.ning.http.client.providers.netty.future.NettyResponseFuture,boolean)"}, {"UPD": 4, "TOT": 10, "MOV": 2, "INS": 0, "DEL": 4, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.exitAfterHandling407(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm,com.ning.http.client.ProxyServer)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.ntlmProxyChallenge(java.lang.String,com.ning.http.client.Request,com.ning.http.client.ProxyServer,com.ning.http.client.FluentCaseInsensitiveStringsMap,com.ning.http.client.providers.netty.future.NettyResponseFuture)"}], "spoonFilePath": "HttpProtocol.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.jdk.JDKAsyncHttpProvider.AsyncHttpUrlConnection.configure(com.ning.http.client.uri.Uri,java.net.HttpURLConnection,com.ning.http.client.Request)"}], "spoonFilePath": "JDKAsyncHttpProvider.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.ProxyServer.getNtlmHost()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.ProxyServer.setScheme(com.ning.http.client.Realm.AuthScheme)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.ProxyServer.realmBuilder()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.ProxyServer.getScheme()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.ProxyServer.setNtlmHost(java.lang.String)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.ning.http.client.ProxyServer"}], "spoonFilePath": "ProxyServer.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.firstRequestOnlyAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.uri.Uri,com.ning.http.client.ProxyServer,com.ning.http.client.Realm)"}, {"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.systematicProxyAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.ProxyServer,org.jboss.netty.handler.codec.http.HttpMethod)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.systematicAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.uri.Uri,com.ning.http.client.ProxyServer,com.ning.http.client.Realm)"}], "spoonFilePath": "NettyRequestFactory.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.RealmTest.testClone()"}], "spoonFilePath": "RealmTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.generateAuthHeader(com.ning.http.client.Realm)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.AuthorizationHandler.handleStatus(org.glassfish.grizzly.http.HttpResponsePacket,com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider$HttpTransactionContext,org.glassfish.grizzly.filterchain.FilterChainContext)"}], "spoonFilePath": "GrizzlyAsyncHttpProvider.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.Realm.RealmBuilder.setNtlmHost(java.lang.String)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.Realm.RealmBuilder.getNtlmHost()"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.Realm"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.Realm.RealmBuilder.build()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.Realm.RealmBuilder"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.Realm.getNtlmHost()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.Realm.getAuthScheme()"}], "spoonFilePath": "Realm.java"}]}, {"nameRev": "577615a316f4cd9b764f1ea8ea5ecb3417590d84 tags/2.0.0-alpha1~151", "commitMessage": "ProxyServer should have its own ntlmHost and scheme, close #797\n", "commitParents": ["71536e58edec40a7ca12cfc1effaaa507acbfb18"], "spoonStatsSkippedReason": "", "commitHash": "577615a316f4cd9b764f1ea8ea5ecb3417590d84", "authoredDateTime": "2015-01-09 16:21:50", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 4, "deletions": 3, "lines": 7, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/request/NettyRequestFactory.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/filters/AsyncHttpClientFilter.java"}, {"insertions": 7, "deletions": 11, "lines": 18, "filePath": "api/src/main/java/org/asynchttpclient/Realm.java"}, {"insertions": 30, "deletions": 1, "lines": 31, "filePath": "api/src/main/java/org/asynchttpclient/ProxyServer.java"}, {"insertions": 56, "deletions": 48, "lines": 104, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/handler/HttpProtocol.java"}, {"insertions": 57, "deletions": 51, "lines": 108, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/handler/HttpProtocol.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/filters/ProxyFilter.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/statushandler/AuthorizationHandler.java"}, {"insertions": 4, "deletions": 3, "lines": 7, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/request/NettyRequestFactory.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "api/src/test/java/org/asynchttpclient/RealmTest.java"}], "commitDateTime": "2015-01-09 16:21:50", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 11, "MOV": 3, "INS": 0, "DEL": 7, "spoonMethodName": "org.asynchttpclient.providers.netty3.handler.HttpProtocol.ntlmProxyChallenge(java.lang.String,org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,org.asynchttpclient.FluentCaseInsensitiveStringsMap,org.asynchttpclient.Realm,org.asynchttpclient.providers.netty3.future.NettyResponseFuture,boolean)"}, {"UPD": 1, "TOT": 5, "MOV": 1, "INS": 0, "DEL": 3, "spoonMethodName": "org.asynchttpclient.providers.netty3.handler.HttpProtocol.exitAfterHandling407(org.jboss.netty.channel.Channel,org.asynchttpclient.providers.netty3.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm,org.asynchttpclient.ProxyServer)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.handler.HttpProtocol.ntlmProxyChallenge(java.lang.String,org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,org.asynchttpclient.FluentCaseInsensitiveStringsMap,org.asynchttpclient.providers.netty3.future.NettyResponseFuture)"}, {"UPD": 0, "TOT": 6, "MOV": 0, "INS": 6, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.handler.HttpProtocol.kerberosChallenge(org.jboss.netty.channel.Channel,java.util.List,org.asynchttpclient.Request,org.asynchttpclient.FluentCaseInsensitiveStringsMap,org.asynchttpclient.Realm,org.asynchttpclient.providers.netty3.future.NettyResponseFuture)"}, {"UPD": 18, "TOT": 58, "MOV": 38, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.netty3.handler.HttpProtocol.ntlmChallenge(java.lang.String,org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,org.asynchttpclient.FluentCaseInsensitiveStringsMap,org.asynchttpclient.Realm,org.asynchttpclient.providers.netty3.future.NettyResponseFuture,boolean)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.handler.HttpProtocol.kerberosProxyChallenge(org.jboss.netty.channel.Channel,java.util.List,org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,org.asynchttpclient.FluentCaseInsensitiveStringsMap,org.asynchttpclient.providers.netty3.future.NettyResponseFuture)"}, {"UPD": 0, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty3.handler.HttpProtocol.newRealmBuilder(org.asynchttpclient.Realm)"}, {"UPD": 0, "TOT": 8, "MOV": 3, "INS": 0, "DEL": 5, "spoonMethodName": "org.asynchttpclient.providers.netty3.handler.HttpProtocol.exitAfterHandling401(org.jboss.netty.channel.Channel,org.asynchttpclient.providers.netty3.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm,org.asynchttpclient.ProxyServer)"}, {"UPD": 3, "TOT": 17, "MOV": 10, "INS": 0, "DEL": 4, "spoonMethodName": "org.asynchttpclient.providers.netty3.handler.HttpProtocol.kerberosChallenge(org.jboss.netty.channel.Channel,java.util.List,org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,org.asynchttpclient.FluentCaseInsensitiveStringsMap,org.asynchttpclient.Realm,org.asynchttpclient.providers.netty3.future.NettyResponseFuture,boolean)"}, {"UPD": 0, "TOT": 8, "MOV": 0, "INS": 0, "DEL": 8, "spoonMethodName": "org.asynchttpclient.providers.netty3.handler.HttpProtocol.addType3NTLMAuthorizationHeader(java.lang.String,org.asynchttpclient.FluentCaseInsensitiveStringsMap,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.handler.HttpProtocol.ntlmChallenge(java.lang.String,org.asynchttpclient.Request,org.asynchttpclient.FluentCaseInsensitiveStringsMap,org.asynchttpclient.Realm,org.asynchttpclient.providers.netty3.future.NettyResponseFuture)"}], "spoonFilePath": "HttpProtocol.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.RealmTest.testClone()"}], "spoonFilePath": "RealmTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ProxyServer.realmBuilder()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ProxyServer.setNtlmHost(java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ProxyServer.getScheme()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ProxyServer"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ProxyServer.getNtlmHost()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.ProxyServer.setScheme(org.asynchttpclient.Realm.AuthScheme)"}], "spoonFilePath": "ProxyServer.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty3.request.NettyRequestFactory.systematicProxyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,org.jboss.netty.handler.codec.http.HttpMethod)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.request.NettyRequestFactory.firstRequestOnlyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,org.asynchttpclient.ProxyServer,org.asynchttpclient.Realm)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.request.NettyRequestFactory.systematicAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,org.asynchttpclient.ProxyServer,org.asynchttpclient.Realm)"}], "spoonFilePath": "NettyRequestFactory.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.grizzly.statushandler.AuthorizationHandler.handleStatus(org.glassfish.grizzly.http.HttpResponsePacket,org.asynchttpclient.providers.grizzly.HttpTxContext,org.glassfish.grizzly.filterchain.FilterChainContext)"}], "spoonFilePath": "AuthorizationHandler.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.grizzly.filters.AsyncHttpClientFilter.generateAuthHeader(org.asynchttpclient.Realm)"}], "spoonFilePath": "AsyncHttpClientFilter.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.grizzly.filters.ProxyFilter.generateAuthHeader(org.asynchttpclient.Realm)"}], "spoonFilePath": "ProxyFilter.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.Realm.RealmBuilder.getNtlmHost()"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.Realm"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.Realm.RealmBuilder"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.Realm.getNtlmHost()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.Realm.getAuthScheme()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.Realm.RealmBuilder.build()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.Realm.RealmBuilder.setNtlmHost(java.lang.String)"}], "spoonFilePath": "Realm.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/797", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 114, "deletions": 80, "lines": 194, "gitFilesChange": 6}, "title": "Netty: ProxyServer should have its own ntlmHost and scheme", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/grizzly", "src/main/java/com/ning/http/client", "src/main/java/com/ning/http/client/providers/netty/handler", "src/main/java/com/ning/http/client/providers/jdk", "src/main/java/com/ning/http/client/providers/netty/request"], "spoonStatsSummary": {"UPD": 39, "spoonMethodsChanged": 31, "TOT": 148, "MOV": 47, "INS": 21, "DEL": 41, "spoonFilesChanged": 6}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2015-01-08 14:22:46", "commits": {"4d35a87e299f3ff4d321f76c8133d4f5d75684e4": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "a745b6e06e8f914e8df028d3930f9e3d63877996": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "71d97fe87911591e2e2985ff4206a69bf1ad2740": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "b606e09a8682faba30e4d05c01dea6bafa1e0d0a": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "c1acfa57a6a2daf55d9414eba172a3350d2e116b": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": ["com.ning.http.client.async.MaxConnectionsInThreads.testMaxConnectionsWithinThreads().2.onThrowable(java.lang.Throwable)", "com.ning.http.client.async.MaxConnectionsInThreads.testMaxConnectionsWithinThreads()", "com.ning.http.client.async.MaxConnectionsInThreads.testMaxConnectionsWithinThreads().1.run().1.onThrowable(java.lang.Throwable)"], "closed": "2015-02-04 09:28:44", "filteredCommits": ["b606e09a8682faba30e4d05c01dea6bafa1e0d0a", "71d97fe87911591e2e2985ff4206a69bf1ad2740", "4d35a87e299f3ff4d321f76c8133d4f5d75684e4"], "commitsDetails": [{"nameRev": "4d35a87e299f3ff4d321f76c8133d4f5d75684e4 tags/async-http-client-1.9.9~5", "commitMessage": "Clean up testMaxConnectionsWithinThreads, close #794\n", "commitParents": ["7cf9b683e12a49074a6660ff3712f265efe39b47"], "spoonStatsSkippedReason": "", "commitHash": "4d35a87e299f3ff4d321f76c8133d4f5d75684e4", "authoredDateTime": "2015-02-04 10:25:40", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 7, "lines": 7, "filePath": "src/test/java/com/ning/http/client/async/grizzly/GrizzlyMaxConnectionsInThreadsTest.java"}, {"insertions": 8, "deletions": 8, "lines": 16, "filePath": "src/test/java/com/ning/http/client/async/MaxConnectionsInThreads.java"}], "commitDateTime": "2015-02-04 10:25:41", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.async.grizzly.GrizzlyMaxConnectionsInThreadsTest.testMaxConnectionsWithinThreads()"}], "spoonFilePath": "GrizzlyMaxConnectionsInThreadsTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.MaxConnectionsInThreads.testMaxConnectionsWithinThreads().2.onThrowable(java.lang.Throwable)"}, {"UPD": 8, "TOT": 14, "MOV": 2, "INS": 1, "DEL": 3, "spoonMethodName": "com.ning.http.client.async.MaxConnectionsInThreads.testMaxConnectionsWithinThreads()"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.MaxConnectionsInThreads.testMaxConnectionsWithinThreads().1.run().1.onThrowable(java.lang.Throwable)"}], "spoonFilePath": "MaxConnectionsInThreads.java"}]}, {"nameRev": "a745b6e06e8f914e8df028d3930f9e3d63877996 tags/2.0.0-alpha1~116", "commitMessage": "Clean up testMaxConnectionsWithinThreads, close #794\n", "commitParents": ["3f11433eb352d7a6dc603607bb218b2af8e64b51"], "spoonStatsSkippedReason": "", "commitHash": "a745b6e06e8f914e8df028d3930f9e3d63877996", "authoredDateTime": "2015-02-04 10:28:40", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 8, "deletions": 11, "lines": 19, "filePath": "api/src/test/java/org/asynchttpclient/async/MaxConnectionsInThreads.java"}], "commitDateTime": "2015-02-04 10:28:40", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.async.MaxConnectionsInThreads.testMaxConnectionsWithinThreads().1.run().1.onThrowable(java.lang.Throwable)"}, {"UPD": 8, "TOT": 16, "MOV": 2, "INS": 1, "DEL": 5, "spoonMethodName": "org.asynchttpclient.async.MaxConnectionsInThreads.testMaxConnectionsWithinThreads()"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.async.MaxConnectionsInThreads.testMaxConnectionsWithinThreads().2.onThrowable(java.lang.Throwable)"}], "spoonFilePath": "MaxConnectionsInThreads.java"}]}, {"nameRev": "71d97fe87911591e2e2985ff4206a69bf1ad2740 tags/async-http-client-1.9.4~7", "commitMessage": "Disabling for now, see #794\n", "commitParents": ["5c501f493b9696b91901f1f472716f1f1923b2d9"], "spoonStatsSkippedReason": "", "commitHash": "71d97fe87911591e2e2985ff4206a69bf1ad2740", "authoredDateTime": "2015-01-08 15:23:04", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 0, "lines": 3, "filePath": "src/test/java/com/ning/http/client/async/grizzly/GrizzlyMaxConnectionsInThreadsTest.java"}], "commitDateTime": "2015-01-08 15:23:04", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.grizzly.GrizzlyMaxConnectionsInThreadsTest"}], "spoonFilePath": "GrizzlyMaxConnectionsInThreadsTest.java"}]}, {"nameRev": "b606e09a8682faba30e4d05c01dea6bafa1e0d0a tags/2.0.0-alpha1~155", "commitMessage": "Disable test, see #794\n", "commitParents": ["c517098e2099ef026239d990534e3809cadb46d9"], "spoonStatsSkippedReason": "", "commitHash": "b606e09a8682faba30e4d05c01dea6bafa1e0d0a", "authoredDateTime": "2015-01-08 23:34:24", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/grizzly/src/test/java/org/asynchttpclient/providers/grizzly/GrizzlyMaxConnectionsInThreadsTest.java"}], "commitDateTime": "2015-01-08 23:34:24", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.grizzly.GrizzlyMaxConnectionsInThreadsTest"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.grizzly.GrizzlyMaxConnectionsInThreadsTest.getAsyncHttpClient(org.asynchttpclient.AsyncHttpClientConfig)"}], "spoonFilePath": "GrizzlyMaxConnectionsInThreadsTest.java"}]}, {"nameRev": "c1acfa57a6a2daf55d9414eba172a3350d2e116b tags/async-http-client-1.9.4~4", "commitMessage": "Disable test, see #794\n", "commitParents": ["d58f10114f0574a2901408e1604b114e4077e876"], "spoonStatsSkippedReason": "", "commitHash": "c1acfa57a6a2daf55d9414eba172a3350d2e116b", "authoredDateTime": "2015-01-08 17:53:07", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 1, "lines": 5, "filePath": "src/test/java/com/ning/http/client/async/grizzly/GrizzlyMaxConnectionsInThreadsTest.java"}], "commitDateTime": "2015-01-08 17:53:07", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.grizzly.GrizzlyMaxConnectionsInThreadsTest.testMaxConnectionsWithinThreads()"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.grizzly.GrizzlyMaxConnectionsInThreadsTest"}], "spoonFilePath": "GrizzlyMaxConnectionsInThreadsTest.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/794", "ttf": 26.00027777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Grizzly: GrizzlyMaxConnectionsInThreadsTest fails", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 11, "spoonMethodsChanged": 3, "TOT": 17, "MOV": 2, "INS": 1, "DEL": 3, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 2, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "@oleksiys ping :)\n", "labels": ["Defect", "Grizzly"]}, {"created": "2015-01-07 11:30:07", "user": "weiliangwei", "body": "1. I used  AHC version 1.9 and netty 3.\n   My code  is  following :\n\n``` java\n//DIGEST authentication : username and password\nProxyServer  p=new ProxyServer(\"192.168.20.189\", 80,\"userTest\",\"123456\");\n\nAsyncHttpClientConfig config = new AsyncHttpClientConfig.Builder().setProxyServer(p).build();\n\nAsyncHttpClient client = new AsyncHttpClient(new NettyAsyncHttpProvider(config), config);\n\nRealm realm = new Realm.RealmBuilder()\n  .setPrincipal(\"userTest\")\n  .setPassword(\"123456\")\n  .setUsePreemptiveAuth(true)\n  .setScheme(AuthScheme.DIGEST)\n  .setTargetProxy(true) .build();   \n\nListenableFuture<Response>  a=client.prepareGet(\"http://www.baidu.com\").setRealm(realm).setProxyServer(p).execute();\nSystem.out.println(a.get().getResponseBody().toString());//will return  401 code.\n```\n\n2  . I want to access \"http://www.baidu.com\" by the nginx server ( nginx as a proxy server) ,and  do digest authentication ( nginx has plugin whose name is 'nginx-http-auth-digest' )on the same nginx server. So the Nginx server has two fuctions :\nproxy  and do digest authentication .If authentication passed, the proxy will process the request .Others return 401 code.\n\n3.By the way ,The  target website \"http://www.baidu.com\" which I want to access  does not need digest authentication. Digest authentication progressing is  on the nginx server .\nI want to make every requst  do digest  authentication on the nginx  server and the nginx server could also proxy every  request  normally at the same time if digest authentication  passed  .\n\n4.So  I have two questions :\n4.1.Could I think the AHC support digest authentication on proxy? \n4.2.If it support digest authentication on proxy , how to change my code ? Or Could you give me an example ? \n", "closed": "2015-01-12 15:01:13", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/792", "ttf": 5.000277777777778, "commits": {}, "labels": ["Defect", "Netty"], "title": "How to do digest authentication  on  proxy server with AHC "}, {"created": "2015-01-07 04:46:39", "commits": {"321733dd54ec3dc34f95f54bb72182c904868cd6": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}, "d13f648e33cb2091b50feeb5beb4aa0fef608248": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}}, "numCommits": 2, "changesInPackagesSPOON": ["com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.sendRequest(com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider$HttpTransactionContext,org.glassfish.grizzly.filterchain.FilterChainContext,org.glassfish.grizzly.http.HttpRequestPacket,com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider$BodyHandler)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.addServiceHeaders(org.glassfish.grizzly.http.HttpRequestPacket)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.sendAsGrizzlyRequest(com.ning.http.client.Request,org.glassfish.grizzly.filterchain.FilterChainContext)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.getRealm(com.ning.http.client.Request)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.addHostHeaderIfNeeded(com.ning.http.client.Request,java.net.URI,org.glassfish.grizzly.http.HttpRequestPacket)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.copyHeaders(com.ning.http.client.Request,org.glassfish.grizzly.http.HttpRequestPacket)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.addAuthorizationHeader(com.ning.http.client.Request,org.glassfish.grizzly.http.HttpRequestPacket)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.sendRequest(org.glassfish.grizzly.filterchain.FilterChainContext,com.ning.http.client.Request,org.glassfish.grizzly.http.HttpRequestPacket,com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider$BodyHandler)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.addProxyHeaders(com.ning.http.client.ProxyServer,org.glassfish.grizzly.http.HttpRequestPacket)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.addHostHeaderIfNeeded(com.ning.http.client.Request,com.ning.http.client.uri.Uri,org.glassfish.grizzly.http.HttpRequestPacket)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.establishConnectTunnel(com.ning.http.client.ProxyServer,com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider$HttpTransactionContext,java.net.URI,org.glassfish.grizzly.filterchain.FilterChainContext)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.addAuthorizationHeader(com.ning.http.client.Realm,org.glassfish.grizzly.http.HttpRequestPacket)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.establishConnectTunnel(com.ning.http.client.ProxyServer,com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider$HttpTransactionContext,com.ning.http.client.uri.Uri,org.glassfish.grizzly.filterchain.FilterChainContext)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.addHeaders(com.ning.http.client.Request,org.glassfish.grizzly.http.HttpRequestPacket)"], "closed": "2015-01-07 05:22:06", "filteredCommits": ["d13f648e33cb2091b50feeb5beb4aa0fef608248", "321733dd54ec3dc34f95f54bb72182c904868cd6"], "commitsDetails": [{"nameRev": "321733dd54ec3dc34f95f54bb72182c904868cd6 tags/async-http-client-1.9.4~9", "commitMessage": "[1.9.x] fix issue #791\nhttps://github.com/AsyncHttpClient/async-http-client/issues/791\n\"The request body is sent with HTTP CONNECT\"\n", "commitParents": ["040af40e1083343181fbf84b819f01de1fea779a"], "spoonStatsSkippedReason": "", "commitHash": "321733dd54ec3dc34f95f54bb72182c904868cd6", "authoredDateTime": "2015-01-06 20:47:28", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 125, "deletions": 73, "lines": 198, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java"}], "commitDateTime": "2015-01-06 21:21:20", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.sendRequest(com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider$HttpTransactionContext,org.glassfish.grizzly.filterchain.FilterChainContext,org.glassfish.grizzly.http.HttpRequestPacket,com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider$BodyHandler)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.addServiceHeaders(org.glassfish.grizzly.http.HttpRequestPacket)"}, {"UPD": 15, "TOT": 72, "MOV": 47, "INS": 3, "DEL": 7, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.sendAsGrizzlyRequest(com.ning.http.client.Request,org.glassfish.grizzly.filterchain.FilterChainContext)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.getRealm(com.ning.http.client.Request)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.copyHeaders(com.ning.http.client.Request,org.glassfish.grizzly.http.HttpRequestPacket)"}, {"UPD": 0, "TOT": 9, "MOV": 8, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.addAuthorizationHeader(com.ning.http.client.Request,org.glassfish.grizzly.http.HttpRequestPacket)"}, {"UPD": 1, "TOT": 5, "MOV": 3, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.sendRequest(org.glassfish.grizzly.filterchain.FilterChainContext,com.ning.http.client.Request,org.glassfish.grizzly.http.HttpRequestPacket,com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider$BodyHandler)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.addProxyHeaders(com.ning.http.client.ProxyServer,org.glassfish.grizzly.http.HttpRequestPacket)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.addHostHeaderIfNeeded(com.ning.http.client.Request,com.ning.http.client.uri.Uri,org.glassfish.grizzly.http.HttpRequestPacket)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.addAuthorizationHeader(com.ning.http.client.Realm,org.glassfish.grizzly.http.HttpRequestPacket)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.establishConnectTunnel(com.ning.http.client.ProxyServer,com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider$HttpTransactionContext,com.ning.http.client.uri.Uri,org.glassfish.grizzly.filterchain.FilterChainContext)"}, {"UPD": 1, "TOT": 9, "MOV": 8, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.addHeaders(com.ning.http.client.Request,org.glassfish.grizzly.http.HttpRequestPacket)"}], "spoonFilePath": "GrizzlyAsyncHttpProvider.java"}]}, {"nameRev": "d13f648e33cb2091b50feeb5beb4aa0fef608248 tags/async-http-client-1.8.16~4", "commitMessage": "[1.8.x] fix issue #791\nhttps://github.com/AsyncHttpClient/async-http-client/issues/791\n\"The request body is sent with HTTP CONNECT\"", "commitParents": ["0452153d835ac33f2b5762f9df76661afadd0cbd"], "spoonStatsSkippedReason": "", "commitHash": "d13f648e33cb2091b50feeb5beb4aa0fef608248", "authoredDateTime": "2015-01-06 20:47:28", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 118, "deletions": 72, "lines": 190, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java"}], "commitDateTime": "2015-01-06 20:47:28", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.sendRequest(com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider$HttpTransactionContext,org.glassfish.grizzly.filterchain.FilterChainContext,org.glassfish.grizzly.http.HttpRequestPacket,com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider$BodyHandler)"}, {"UPD": 1, "TOT": 5, "MOV": 3, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.sendRequest(org.glassfish.grizzly.filterchain.FilterChainContext,com.ning.http.client.Request,org.glassfish.grizzly.http.HttpRequestPacket,com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider$BodyHandler)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.copyHeaders(com.ning.http.client.Request,org.glassfish.grizzly.http.HttpRequestPacket)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.getRealm(com.ning.http.client.Request)"}, {"UPD": 15, "TOT": 72, "MOV": 47, "INS": 3, "DEL": 7, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.sendAsGrizzlyRequest(com.ning.http.client.Request,org.glassfish.grizzly.filterchain.FilterChainContext)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.addProxyHeaders(com.ning.http.client.ProxyServer,org.glassfish.grizzly.http.HttpRequestPacket)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.addHostHeaderIfNeeded(com.ning.http.client.Request,java.net.URI,org.glassfish.grizzly.http.HttpRequestPacket)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.establishConnectTunnel(com.ning.http.client.ProxyServer,com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider$HttpTransactionContext,java.net.URI,org.glassfish.grizzly.filterchain.FilterChainContext)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.addAuthorizationHeader(com.ning.http.client.Realm,org.glassfish.grizzly.http.HttpRequestPacket)"}, {"UPD": 0, "TOT": 9, "MOV": 8, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.addAuthorizationHeader(com.ning.http.client.Request,org.glassfish.grizzly.http.HttpRequestPacket)"}, {"UPD": 1, "TOT": 6, "MOV": 5, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.addHeaders(com.ning.http.client.Request,org.glassfish.grizzly.http.HttpRequestPacket)"}], "spoonFilePath": "GrizzlyAsyncHttpProvider.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/791", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 243, "deletions": 145, "lines": 388, "gitFilesChange": 1}, "title": "The request body is sent with HTTP CONNECT", "statsSkippedReason": "", "user": "oleksiys", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/grizzly"], "spoonStatsSummary": {"UPD": 34, "spoonMethodsChanged": 14, "TOT": 208, "MOV": 129, "INS": 27, "DEL": 18, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Grizzly"]}, {"created": "2014-12-26 19:51:32", "commits": {"ec58da84ec0079ff49ec5070d32a496a15cefcbc": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "7334dbc571aee701f6683a2bba0a6b459959e7f5": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "5c501f493b9696b91901f1f472716f1f1923b2d9": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.channel.ChannelManager.drainChannel(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture)", "com.ning.http.client.providers.netty.request.NettyRequestSender.replayRequest(com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.filter.FilterContext,org.jboss.netty.channel.Channel)", "com.ning.http.client.providers.netty.request.NettyRequestSender.newExecuteNextRequestCallback(com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.Request)", "com.ning.http.client.providers.netty.handler.HttpProtocol.exitAfterHandling401(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm,com.ning.http.client.ProxyServer).1.call()", "com.ning.http.client.providers.netty.handler.HttpProtocol.finishUpdate(com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.channel.Channel,boolean)", "com.ning.http.client.providers.netty.handler.HttpProtocol.exitAfterHandling401(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm,com.ning.http.client.ProxyServer).1", "com.ning.http.client.providers.netty.request.NettyRequestSender.drainChannelAndExecuteNextRequest(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.Request)", "com.ning.http.client.providers.netty.handler.HttpProtocol.exitAfterHandling401(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm,com.ning.http.client.ProxyServer)"], "closed": "2015-01-07 15:39:59", "filteredCommits": ["7334dbc571aee701f6683a2bba0a6b459959e7f5"], "commitsDetails": [{"nameRev": "7334dbc571aee701f6683a2bba0a6b459959e7f5 tags/async-http-client-1.9.4~8^2", "commitMessage": "Reuse channel on 401, close #785\n", "commitParents": ["a8b89b43bd607bd482c34460aa3ae457c0fd6dcb"], "spoonStatsSkippedReason": "", "commitHash": "7334dbc571aee701f6683a2bba0a6b459959e7f5", "authoredDateTime": "2014-12-28 09:04:11", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 16, "deletions": 1, "lines": 17, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestSender.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "src/test/java/com/ning/http/client/async/BasicAuthTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/providers/netty/channel/ChannelManager.java"}, {"insertions": 24, "deletions": 30, "lines": 54, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/HttpProtocol.java"}], "commitDateTime": "2014-12-28 09:04:11", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.exitAfterHandling401(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm,com.ning.http.client.ProxyServer).1"}, {"UPD": 2, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.exitAfterHandling401(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm,com.ning.http.client.ProxyServer).1.call()"}, {"UPD": 2, "TOT": 13, "MOV": 6, "INS": 1, "DEL": 4, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.exitAfterHandling401(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm,com.ning.http.client.ProxyServer)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.finishUpdate(com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.channel.Channel,boolean)"}], "spoonFilePath": "HttpProtocol.java"}, {"spoonMethods": [], "spoonFilePath": "BasicAuthTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestSender.replayRequest(com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.filter.FilterContext,org.jboss.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestSender.drainChannelAndExecuteNextRequest(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.Request)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestSender.newExecuteNextRequestCallback(com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.Request)"}], "spoonFilePath": "NettyRequestSender.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.channel.ChannelManager.drainChannel(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture)"}], "spoonFilePath": "ChannelManager.java"}]}, {"nameRev": "ec58da84ec0079ff49ec5070d32a496a15cefcbc tags/2.0.0-alpha1~157", "commitMessage": "Reuse channel on 401, close #785\n", "commitParents": ["78be7ec8b75d7bfd663c14ca63aed6bcf853d131"], "spoonStatsSkippedReason": "", "commitHash": "ec58da84ec0079ff49ec5070d32a496a15cefcbc", "authoredDateTime": "2015-01-07 16:39:53", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 16, "deletions": 1, "lines": 17, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/request/NettyRequestSender.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/channel/ChannelManager.java"}, {"insertions": 38, "deletions": 25, "lines": 63, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/handler/HttpProtocol.java"}, {"insertions": 34, "deletions": 29, "lines": 63, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/handler/HttpProtocol.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/channel/ChannelManager.java"}, {"insertions": 16, "deletions": 1, "lines": 17, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/request/NettyRequestSender.java"}], "commitDateTime": "2015-01-07 16:39:53", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.handler.HttpProtocol.ntlmProxyChallenge(java.lang.String,org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,org.asynchttpclient.FluentCaseInsensitiveStringsMap,org.asynchttpclient.Realm,org.asynchttpclient.providers.netty3.future.NettyResponseFuture,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.handler.HttpProtocol.exitAfterHandling401(org.jboss.netty.channel.Channel,org.asynchttpclient.providers.netty3.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm,org.asynchttpclient.ProxyServer).1"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.handler.HttpProtocol.ntlmChallenge(java.lang.String,org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,org.asynchttpclient.FluentCaseInsensitiveStringsMap,org.asynchttpclient.Realm,org.asynchttpclient.providers.netty3.future.NettyResponseFuture,boolean)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.handler.HttpProtocol.finishUpdate(org.asynchttpclient.providers.netty3.future.NettyResponseFuture,org.jboss.netty.channel.Channel,boolean)"}, {"UPD": 2, "TOT": 13, "MOV": 6, "INS": 1, "DEL": 4, "spoonMethodName": "org.asynchttpclient.providers.netty3.handler.HttpProtocol.exitAfterHandling401(org.jboss.netty.channel.Channel,org.asynchttpclient.providers.netty3.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm,org.asynchttpclient.ProxyServer)"}, {"UPD": 2, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.handler.HttpProtocol.exitAfterHandling401(org.jboss.netty.channel.Channel,org.asynchttpclient.providers.netty3.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm,org.asynchttpclient.ProxyServer).1.call()"}], "spoonFilePath": "HttpProtocol.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.request.NettyRequestSender.replayRequest(org.asynchttpclient.providers.netty3.future.NettyResponseFuture,org.asynchttpclient.filter.FilterContext,org.jboss.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.request.NettyRequestSender.newExecuteNextRequestCallback(org.asynchttpclient.providers.netty3.future.NettyResponseFuture,org.asynchttpclient.Request)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.request.NettyRequestSender.drainChannelAndExecuteNextRequest(org.jboss.netty.channel.Channel,org.asynchttpclient.providers.netty3.future.NettyResponseFuture,org.asynchttpclient.Request)"}], "spoonFilePath": "NettyRequestSender.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.channel.ChannelManager.drainChannel(org.jboss.netty.channel.Channel,org.asynchttpclient.providers.netty3.future.NettyResponseFuture)"}], "spoonFilePath": "ChannelManager.java"}]}, {"nameRev": "5c501f493b9696b91901f1f472716f1f1923b2d9 tags/async-http-client-1.9.4~8", "commitMessage": "Merge pull request #793 from AsyncHttpClient/fix-785\n\nNetty: Reuse channel on 401, close #785", "commitParents": ["321733dd54ec3dc34f95f54bb72182c904868cd6", "7334dbc571aee701f6683a2bba0a6b459959e7f5"], "spoonStatsSkippedReason": "", "commitHash": "5c501f493b9696b91901f1f472716f1f1923b2d9", "authoredDateTime": "2015-01-07 16:18:55", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 16, "deletions": 1, "lines": 17, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestSender.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "src/test/java/com/ning/http/client/async/BasicAuthTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/providers/netty/channel/ChannelManager.java"}, {"insertions": 24, "deletions": 30, "lines": 54, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/HttpProtocol.java"}], "commitDateTime": "2015-01-07 16:18:55", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.exitAfterHandling401(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm,com.ning.http.client.ProxyServer).1"}, {"UPD": 2, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.exitAfterHandling401(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm,com.ning.http.client.ProxyServer).1.call()"}, {"UPD": 2, "TOT": 13, "MOV": 6, "INS": 1, "DEL": 4, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.exitAfterHandling401(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm,com.ning.http.client.ProxyServer)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.finishUpdate(com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.channel.Channel,boolean)"}], "spoonFilePath": "HttpProtocol.java"}, {"spoonMethods": [], "spoonFilePath": "BasicAuthTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestSender.replayRequest(com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.filter.FilterContext,org.jboss.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestSender.drainChannelAndExecuteNextRequest(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.Request)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestSender.newExecuteNextRequestCallback(com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.Request)"}], "spoonFilePath": "NettyRequestSender.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.channel.ChannelManager.drainChannel(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture)"}], "spoonFilePath": "ChannelManager.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/785", "ttf": 11.000277777777777, "gitStatsSummary": {"insertions": 41, "deletions": 32, "lines": 73, "gitFilesChange": 3}, "title": "basic/digest authentication causes connection pool leaks", "statsSkippedReason": "", "user": "chrisrhut", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/channel", "src/main/java/com/ning/http/client/providers/netty/handler", "src/main/java/com/ning/http/client/providers/netty/request"], "spoonStatsSummary": {"UPD": 7, "spoonMethodsChanged": 8, "TOT": 22, "MOV": 8, "INS": 3, "DEL": 4, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "Discovered this while load testing a service (built on the Play 2 framework) which makes async HTTP calls to a backend database: repeated concurrent requests eventually cause the OS to run out of file handles and fail due to too many open sockets. `netstat` revealed several thousand open HTTP connections. \n\nI have traced the issue to a problem in how AsyncHttpClient handles 401 responses.\n#### Reproducing / Test Case\n\nA simple app that demonstrates the bug is available here: https://gist.github.com/chrisrhut/74988852e5313c3d613b (specify the VM argument `-Dorg.slf4j.simpleLogger.log.com.ning.http=debug` to enable log output).\n\nIn a terminal window, have this running in the background to see the issue at hand: `while true; do netstat -an | grep \"50.16.189.35\"; echo \"\"; sleep 3; done` **IMPORTANT:** _because of the way it's hosted, the IP address of httpbin.org changes with some frequency, so make sure to set it accordingly._\n\nExample terminal output after 20 loops:\n\n```\ntcp4       0      0  192.168.1.139.51857    50.16.189.35.80        ESTABLISHED\ntcp4       0      0  192.168.1.139.51856    50.16.189.35.80        ESTABLISHED\ntcp4       0      0  192.168.1.139.51853    50.16.189.35.80        ESTABLISHED\ntcp4       0      0  192.168.1.139.51852    50.16.189.35.80        ESTABLISHED\ntcp4       0      0  192.168.1.139.51849    50.16.189.35.80        ESTABLISHED\ntcp4       0      0  192.168.1.139.51846    50.16.189.35.80        ESTABLISHED\ntcp4       0      0  192.168.1.139.51845    50.16.189.35.80        ESTABLISHED\ntcp4       0      0  192.168.1.139.51841    50.16.189.35.80        ESTABLISHED\ntcp4       0      0  192.168.1.139.51838    50.16.189.35.80        ESTABLISHED\ntcp4       0      0  192.168.1.139.51837    50.16.189.35.80        ESTABLISHED\ntcp4       0      0  192.168.1.139.51834    50.16.189.35.80        ESTABLISHED\ntcp4       0      0  192.168.1.139.51832    50.16.189.35.80        ESTABLISHED\ntcp4       0      0  192.168.1.139.51829    50.16.189.35.80        ESTABLISHED\ntcp4       0      0  192.168.1.139.51822    50.16.189.35.80        ESTABLISHED\ntcp4       0      0  192.168.1.139.51821    50.16.189.35.80        ESTABLISHED\ntcp4       0      0  192.168.1.139.51817    50.16.189.35.80        ESTABLISHED\ntcp4       0      0  192.168.1.139.51814    50.16.189.35.80        ESTABLISHED\ntcp4       0      0  192.168.1.139.51813    50.16.189.35.80        ESTABLISHED\ntcp4       0      0  192.168.1.139.51810    50.16.189.35.80        ESTABLISHED\ntcp4       0      0  192.168.1.139.51807    50.16.189.35.80        ESTABLISHED\n```\n\nA key observation is that even with all these established connections, the log output for the code displays: `[Hashed wheel timer #1] DEBUG com.ning.http.client.providers.netty.channel.pool.DefaultChannelPool - Entry count for : http://httpbin.org:80 : 1`\n#### Investigation / Root Cause\n\nFurther investigation of the log output yields more clues. Each GET request (after the very first one) displays:\n\n```\n[main] DEBUG com.ning.http.client.providers.netty.request.NettyRequestSender - Using cached Channel [id: 0xcfd11ef5, /192.168.1.139:51930 => httpbin.org/50.16.189.35:80]\n for request \nDefaultHttpRequest(chunked: false)\nGET /basic-auth/user/passwd HTTP/1.1\n...\nResponse DefaultHttpResponse(chunked: false)\nHTTP/1.1 401 UNAUTHORIZED\nWww-Authenticate: Basic realm=\"Fake Realm\"\n```\n\nSo we (correctly) took a connection from the connection pool (\"Using cached Channel\") to make the initial request, but received a 401 and authentication is required. At this point a single thread should be able to just re-use the existing connection to make the authenticated request, but the log output continues:\n\n```\n[New I/O worker #2] DEBUG com.ning.http.client.providers.netty.handler.HttpProtocol - Sending authentication to http://httpbin.org/basic-auth/user/passwd\n[New I/O worker #3] DEBUG com.ning.http.client.providers.netty.request.NettyConnectListener - Request using non cached Channel '[id: 0x872c7990, /192.168.1.139:51932 => httpbin.org/50.16.189.35:80]':\nDefaultHttpRequest(chunked: false)\nGET /basic-auth/user/passwd HTTP/1.1\n...\nResponse DefaultHttpResponse(chunked: false)\nHTTP/1.1 200 OK\n...\n[New I/O worker #3] DEBUG com.ning.http.client.providers.netty.channel.ChannelManager - Adding key: http://httpbin.org:80 for channel [id: 0x872c7990, /192.168.1.139:51932 => httpbin.org/50.16.189.35:80]\n```\n\nSo, the _authenticated_ request uses a \"non cached\" channel and after the 200 OK this new channel is added to the connection pool.\n\nTracing into the code I discovered that sure enough, for each run of execute(), ChannelPool.poll() is called _twice_ but ChannelPool.offer() is only called _once_. So a channel is orphaned, requiring the process to internally spawn a new one for every request.\n#### Possible solution\n\nI believe the issue is rooted in `HttpProtocol.exitAfterHandling401()`. The code first checks for NTLM followed by SPEGNO/Kerberos; in those two cases `future.setReuseChannel()` is set to true. In the else case (including Basic/Digest) this flag is not set. Futhermore, in the callback:\n\n```\nCallback callback = new Callback(future) {\n    public void call() throws IOException {\n        channelManager.drainChannel(channel, future);\n        requestSender.sendNextRequest(nextRequest, future);\n    }\n};\n```\n\nwe don't close the channel in the case that it's _not_ going to be reused. I noticed that exitAfterHandlingRedirect() in `Protocol.java` does not exhibit this bug; it's avoided by calling `ChannelManager.tryToOfferChannelToPool()` in its callback. Perhaps a similar step should be carried out here.\n\nSo I believe the solution is two-fold (I will submit a pull request after filing this issue):\n- enable \"reuse channel\" for Basic/Digest authentication (someone with a more intricate knowledge of the subtleties of HTTP auth, please correct me if I'm wrong)!\n- in the case where we will NOT reuse the channel, make sure it's returned to the connection pool. This will avoid the orphaned connection issue if I'm wrong about the first bullet and/or in other cases not specifically covered by NTLM/Kerberos.\n\nThanks!\n", "labels": ["Defect", "Netty"]}, {"created": "2014-12-18 07:58:48", "commits": {"0452153d835ac33f2b5762f9df76661afadd0cbd": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}, "9a34bbd7ee79bae5f08b1625c67ac35715385cd7": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}}, "numCommits": 2, "changesInPackagesSPOON": ["com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.sendAsGrizzlyRequest(com.ning.http.client.Request,org.glassfish.grizzly.filterchain.FilterChainContext)"], "closed": "2014-12-18 08:01:37", "filteredCommits": ["0452153d835ac33f2b5762f9df76661afadd0cbd", "9a34bbd7ee79bae5f08b1625c67ac35715385cd7"], "commitsDetails": [{"nameRev": "0452153d835ac33f2b5762f9df76661afadd0cbd tags/async-http-client-1.8.16~5", "commitMessage": "[1.8.x] + fix issue #782\nhttps://github.com/AsyncHttpClient/async-http-client/issues/782\n\"Query param are getting lost with Grizzly AHC\"", "commitParents": ["71c3322d8957dd9d471e72052ff78be3ec21d2a7"], "spoonStatsSkippedReason": "", "commitHash": "0452153d835ac33f2b5762f9df76661afadd0cbd", "authoredDateTime": "2014-12-17 23:59:39", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 16, "deletions": 11, "lines": 27, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java"}], "commitDateTime": "2014-12-17 23:59:39", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 20, "MOV": 8, "INS": 5, "DEL": 6, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.sendAsGrizzlyRequest(com.ning.http.client.Request,org.glassfish.grizzly.filterchain.FilterChainContext)"}], "spoonFilePath": "GrizzlyAsyncHttpProvider.java"}]}, {"nameRev": "9a34bbd7ee79bae5f08b1625c67ac35715385cd7 tags/async-http-client-1.9.4~13", "commitMessage": "[1.9.x] + fix issue #782\nhttps://github.com/AsyncHttpClient/async-http-client/issues/782\n\"Query param are getting lost with Grizzly AHC\"", "commitParents": ["a8b89b43bd607bd482c34460aa3ae457c0fd6dcb"], "spoonStatsSkippedReason": "", "commitHash": "9a34bbd7ee79bae5f08b1625c67ac35715385cd7", "authoredDateTime": "2014-12-17 23:59:52", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 16, "deletions": 11, "lines": 27, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java"}], "commitDateTime": "2014-12-17 23:59:52", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 20, "MOV": 8, "INS": 5, "DEL": 6, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.sendAsGrizzlyRequest(com.ning.http.client.Request,org.glassfish.grizzly.filterchain.FilterChainContext)"}], "spoonFilePath": "GrizzlyAsyncHttpProvider.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/782", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 32, "deletions": 22, "lines": 54, "gitFilesChange": 1}, "title": "Query param are getting lost with Grizzly AHC", "statsSkippedReason": "", "user": "oleksiys", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/grizzly"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 1, "TOT": 40, "MOV": 16, "INS": 10, "DEL": 12, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Grizzly"]}, {"created": "2014-12-06 02:37:14", "commits": {"0cb0ee1f7002ff5d623362a294a45242f3ab016d": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "30723543c39fe1d9f36fe6af6f262b8239a5e366": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.request.timeout.RequestTimeoutTimerTask.run(org.jboss.netty.util.Timeout)", "com.ning.http.client.providers.netty.request.timeout.ReadTimeoutTimerTask.run(org.jboss.netty.util.Timeout)"], "closed": "2014-12-08 09:20:42", "filteredCommits": ["0cb0ee1f7002ff5d623362a294a45242f3ab016d"], "commitsDetails": [{"nameRev": "0cb0ee1f7002ff5d623362a294a45242f3ab016d tags/async-http-client-1.9.1~3", "commitMessage": "Fix NPE when re-scheduling read timeouts, close #773\n", "commitParents": ["32023fae3074c97a9cb084f3d4ad8d9867e7ba33"], "spoonStatsSkippedReason": "", "commitHash": "0cb0ee1f7002ff5d623362a294a45242f3ab016d", "authoredDateTime": "2014-12-08 10:19:08", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 3, "lines": 3, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/timeout/RequestTimeoutTimerTask.java"}, {"insertions": 0, "deletions": 3, "lines": 3, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/timeout/ReadTimeoutTimerTask.java"}], "commitDateTime": "2014-12-08 10:19:08", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.timeout.ReadTimeoutTimerTask.run(org.jboss.netty.util.Timeout)"}], "spoonFilePath": "ReadTimeoutTimerTask.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.timeout.RequestTimeoutTimerTask.run(org.jboss.netty.util.Timeout)"}], "spoonFilePath": "RequestTimeoutTimerTask.java"}]}, {"nameRev": "30723543c39fe1d9f36fe6af6f262b8239a5e366 tags/2.0.0-alpha1~173", "commitMessage": "Fix NPE when re-scheduling read timeouts, close #773\n", "commitParents": ["8f531788ab87408da2bfe08945903a2db2b5ecc2"], "spoonStatsSkippedReason": "", "commitHash": "30723543c39fe1d9f36fe6af6f262b8239a5e366", "authoredDateTime": "2014-12-08 10:20:40", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 0, "deletions": 3, "lines": 3, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/request/timeout/RequestTimeoutTimerTask.java"}, {"insertions": 0, "deletions": 3, "lines": 3, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/request/timeout/ReadTimeoutTimerTask.java"}, {"insertions": 0, "deletions": 3, "lines": 3, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/request/timeout/ReadTimeoutTimerTask.java"}, {"insertions": 0, "deletions": 3, "lines": 3, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/request/timeout/RequestTimeoutTimerTask.java"}], "commitDateTime": "2014-12-08 10:20:40", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty3.request.timeout.ReadTimeoutTimerTask.run(org.jboss.netty.util.Timeout)"}], "spoonFilePath": "ReadTimeoutTimerTask.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty3.request.timeout.RequestTimeoutTimerTask.run(org.jboss.netty.util.Timeout)"}], "spoonFilePath": "RequestTimeoutTimerTask.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/773", "ttf": 2.000277777777778, "gitStatsSummary": {"insertions": 0, "deletions": 6, "lines": 6, "gitFilesChange": 2}, "title": "NullPointerException in ReadTimeoutTimerTask", "statsSkippedReason": "", "user": "stepancheg", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/request"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Got NullPointerException in logs. Don't know now to reproduce it. It appears under heavy load. It probably began after upgrade to 1.9.0, but I'm not sure. And also it looks like AHC leaks connections.\n\n```\njava.lang.NullPointerException: null\n        at com.ning.http.client.providers.netty.request.timeout.ReadTimeoutTimerTask.run(ReadTimeoutTimerTask.java:43)\n        at org.jboss.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:556)\n        at org.jboss.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:632)\n        at org.jboss.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:369)\n        at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\n        at java.lang.Thread.run(Thread.java:744)\n```\n", "labels": ["Defect", "Netty"]}, {"created": "2014-11-28 10:56:52", "commits": {"e90ef1922f3fe1e71de38a460f1ef36ae05c7c34": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "104865d83dd33d29969588dbbdca757554aeb999": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.providers.netty3.handler.Processor.exceptionCaught(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ExceptionEvent)", "org.asynchttpclient.providers.netty3.request.NettyRequestSender.sendRequestWithCachedChannel(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,org.asynchttpclient.ProxyServer,org.asynchttpclient.providers.netty3.future.NettyResponseFuture,org.asynchttpclient.AsyncHandler,org.jboss.netty.channel.Channel)", "org.asynchttpclient.providers.netty3.handler.Processor.channelClosed(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ChannelStateEvent)", "org.asynchttpclient.providers.netty3.request.NettyRequestSender.handleUnexpectedClosedChannel(org.jboss.netty.channel.Channel,org.asynchttpclient.providers.netty3.future.NettyResponseFuture)"], "closed": "2014-11-28 12:35:59", "filteredCommits": ["e90ef1922f3fe1e71de38a460f1ef36ae05c7c34"], "commitsDetails": [{"nameRev": "e90ef1922f3fe1e71de38a460f1ef36ae05c7c34 tags/2.0.0-alpha1~180", "commitMessage": "Possible event loss when pooled connection is closed before writing, close #768\n", "commitParents": ["594a26f0a9c867ab27a2044b1a4875d266889cd9"], "spoonStatsSkippedReason": "", "commitHash": "e90ef1922f3fe1e71de38a460f1ef36ae05c7c34", "authoredDateTime": "2014-11-28 13:35:51", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 2, "deletions": 8, "lines": 10, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/handler/Processor.java"}, {"insertions": 5, "deletions": 9, "lines": 14, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/handler/Processor.java"}, {"insertions": 36, "deletions": 16, "lines": 52, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/request/NettyRequestSender.java"}, {"insertions": 36, "deletions": 19, "lines": 55, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/request/NettyRequestSender.java"}], "commitDateTime": "2014-11-28 13:35:51", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.handler.Processor.exceptionCaught(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ExceptionEvent)"}, {"UPD": 2, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty3.handler.Processor.channelClosed(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ChannelStateEvent)"}], "spoonFilePath": "Processor.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 2, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.request.NettyRequestSender.sendRequestWithCachedChannel(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,org.asynchttpclient.ProxyServer,org.asynchttpclient.providers.netty3.future.NettyResponseFuture,org.asynchttpclient.AsyncHandler,org.jboss.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.request.NettyRequestSender.handleUnexpectedClosedChannel(org.jboss.netty.channel.Channel,org.asynchttpclient.providers.netty3.future.NettyResponseFuture)"}], "spoonFilePath": "NettyRequestSender.java"}]}, {"nameRev": "104865d83dd33d29969588dbbdca757554aeb999 tags/async-http-client-1.9.0-BETA24~2", "commitMessage": "Possible event loss when pooled connection is closed before writing, close #768\n", "commitParents": ["afd3068b7386046ca77a54938dbad33a935c14f8"], "spoonStatsSkippedReason": "", "commitHash": "104865d83dd33d29969588dbbdca757554aeb999", "authoredDateTime": "2014-11-28 13:39:37", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 35, "deletions": 19, "lines": 54, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestSender.java"}, {"insertions": 1, "deletions": 7, "lines": 8, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/Processor.java"}], "commitDateTime": "2014-11-28 13:39:37", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 13, "MOV": 9, "INS": 1, "DEL": 2, "spoonMethodName": "com.ning.http.client.providers.netty.handler.Processor.channelClosed(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ChannelStateEvent)"}], "spoonFilePath": "Processor.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 2, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestSender.sendRequestWithCachedChannel(com.ning.http.client.Request,com.ning.http.client.uri.Uri,com.ning.http.client.ProxyServer,com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.AsyncHandler,org.jboss.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestSender.handleUnexpectedClosedChannel(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture)"}], "spoonFilePath": "NettyRequestSender.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/768", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 79, "deletions": 52, "lines": 131, "gitFilesChange": 4}, "title": "Netty: Possible event loss when pooled connection is closed before writing", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/request", "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/handler", "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/handler", "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/request"], "spoonStatsSummary": {"UPD": 3, "spoonMethodsChanged": 4, "TOT": 9, "MOV": 3, "INS": 2, "DEL": 1, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "When sending a request from a non-IO thread, there's a chance a pooled connection gets closed before it's registered with the new NettyResponseFuture. If that happens, channelClosed doesn't do anything and the handler isn't notified.\n", "labels": ["Defect", "Netty"]}, {"created": "2014-11-28 10:53:06", "commits": {"e8a1ea1f84587eaf1b79bc65c8f08b62491504b1": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "a8a8faaa7e18716ffb09c92b3d54ccaf37edd1be": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.providers.netty4.request.NettyConnectListener.onFutureSuccess(io.netty.channel.Channel).1.operationComplete(io.netty.util.concurrent.Future)"], "closed": "2014-11-28 10:53:57", "filteredCommits": ["e8a1ea1f84587eaf1b79bc65c8f08b62491504b1"], "commitsDetails": [{"nameRev": "e8a1ea1f84587eaf1b79bc65c8f08b62491504b1 tags/2.0.0-alpha1~182", "commitMessage": "Notify Handshake failures, close #767\n", "commitParents": ["ac65fe70fd71922ff3b58951dd34a5a0c26eacb1"], "spoonStatsSkippedReason": "", "commitHash": "e8a1ea1f84587eaf1b79bc65c8f08b62491504b1", "authoredDateTime": "2014-11-28 11:53:52", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 2, "lines": 5, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/request/NettyConnectListener.java"}, {"insertions": 3, "deletions": 2, "lines": 5, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/request/NettyConnectListener.java"}], "commitDateTime": "2014-11-28 11:53:52", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 4, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty4.request.NettyConnectListener.onFutureSuccess(io.netty.channel.Channel).1.operationComplete(io.netty.util.concurrent.Future)"}], "spoonFilePath": "NettyConnectListener.java"}]}, {"nameRev": "a8a8faaa7e18716ffb09c92b3d54ccaf37edd1be tags/async-http-client-1.9.0-BETA24~1", "commitMessage": "Notify Handshake failures, close #767\n", "commitParents": ["104865d83dd33d29969588dbbdca757554aeb999"], "spoonStatsSkippedReason": "", "commitHash": "a8a8faaa7e18716ffb09c92b3d54ccaf37edd1be", "authoredDateTime": "2014-11-28 13:41:05", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 2, "lines": 5, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyConnectListener.java"}], "commitDateTime": "2014-11-28 13:41:05", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 4, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyConnectListener.onFutureSuccess(org.jboss.netty.channel.Channel).1.operationComplete(org.jboss.netty.channel.ChannelFuture)"}], "spoonFilePath": "NettyConnectListener.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/767", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 6, "deletions": 4, "lines": 10, "gitFilesChange": 2}, "title": "Netty: Handshake failures are not notified", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/request", "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/request"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 4, "MOV": 1, "INS": 1, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2014-11-20 13:54:56", "commits": {"615f2162bbb3a061e742b8518f77882c77d4c89f": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.future.NettyResponseFuture.attachChannel(org.jboss.netty.channel.Channel,boolean)", "com.ning.http.client.providers.netty.future.NettyResponseFuture.cancel(boolean)"], "closed": "2014-11-20 13:59:18", "filteredCommits": ["615f2162bbb3a061e742b8518f77882c77d4c89f"], "commitsDetails": [{"nameRev": "615f2162bbb3a061e742b8518f77882c77d4c89f tags/async-http-client-1.9.0-BETA22~4", "commitMessage": "NPE when Future.cancel happens before channel is attached, close #762\n", "commitParents": ["1a89a8ea9009503786a7f74818840aa0b727533e"], "spoonStatsSkippedReason": "", "commitHash": "615f2162bbb3a061e742b8518f77882c77d4c89f", "authoredDateTime": "2014-11-20 14:56:03", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 11, "deletions": 2, "lines": 13, "filePath": "src/main/java/com/ning/http/client/providers/netty/future/NettyResponseFuture.java"}], "commitDateTime": "2014-11-20 14:56:03", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.future.NettyResponseFuture.attachChannel(org.jboss.netty.channel.Channel,boolean)"}, {"UPD": 0, "TOT": 3, "MOV": 2, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.future.NettyResponseFuture.cancel(boolean)"}], "spoonFilePath": "NettyResponseFuture.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/762", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 11, "deletions": 2, "lines": 13, "gitFilesChange": 1}, "title": "NPE when Future.cancel happens before channel is attached", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/future"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 4, "MOV": 2, "INS": 2, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2014-11-19 09:55:47", "commits": {"87bf33c0df66e92cfa0ee3f30e8323a387f564f8": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "9a5f9ef7971ba9b1c90de5fe0c69f9416047054b": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "7fe2fb6aac3309b7a51f036e88a02fe156022fcb": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.generators.InputStreamBodyGenerator", "com.ning.http.client.generators.InputStreamBodyGenerator.ISBody.read(java.nio.ByteBuffer)"], "closed": "2014-11-19 10:04:51", "filteredCommits": ["7fe2fb6aac3309b7a51f036e88a02fe156022fcb"], "commitsDetails": [{"nameRev": "7fe2fb6aac3309b7a51f036e88a02fe156022fcb tags/async-http-client-1.9.0-BETA22~7", "commitMessage": "Drop InputStreamBodyGenerator marking strategy, close #760\n", "commitParents": ["6bc05ae1c2426daff5ef76c37f6c3fd0d6518a39"], "spoonStatsSkippedReason": "", "commitHash": "7fe2fb6aac3309b7a51f036e88a02fe156022fcb", "authoredDateTime": "2014-11-19 10:59:35", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 35, "deletions": 50, "lines": 85, "filePath": "src/test/java/com/ning/http/client/async/ChunkingTest.java"}, {"insertions": 2, "deletions": 18, "lines": 20, "filePath": "src/main/java/com/ning/http/client/generators/InputStreamBodyGenerator.java"}], "commitDateTime": "2014-11-19 10:59:35", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.async.ChunkingTest.testCustomChunking()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.ChunkingTest.doTest(java.io.InputStream)"}, {"UPD": 0, "TOT": 9, "MOV": 3, "INS": 2, "DEL": 4, "spoonMethodName": "com.ning.http.client.async.ChunkingTest.getTestFile()"}, {"UPD": 5, "TOT": 23, "MOV": 8, "INS": 0, "DEL": 10, "spoonMethodName": "com.ning.http.client.async.ChunkingTest.doTest(boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.ChunkingTest.testBufferSmallThanFile()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.ChunkingTest.testBufferLargerThanFile()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.ChunkingTest.testDirectFile()"}, {"UPD": 0, "TOT": 7, "MOV": 2, "INS": 1, "DEL": 4, "spoonMethodName": "com.ning.http.client.async.ChunkingTest.readInputStreamToBytes(java.io.InputStream)"}], "spoonFilePath": "ChunkingTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.generators.InputStreamBodyGenerator"}, {"UPD": 0, "TOT": 7, "MOV": 3, "INS": 0, "DEL": 4, "spoonMethodName": "com.ning.http.client.generators.InputStreamBodyGenerator.ISBody.read(java.nio.ByteBuffer)"}], "spoonFilePath": "InputStreamBodyGenerator.java"}]}, {"nameRev": "9a5f9ef7971ba9b1c90de5fe0c69f9416047054b tags/async-http-client-1.8.15~1", "commitMessage": "Drop InputStreamBodyGenerator marking strategy, close #760\n", "commitParents": ["1abbe7588e908f6190163a97081110349f11681f"], "spoonStatsSkippedReason": "", "commitHash": "9a5f9ef7971ba9b1c90de5fe0c69f9416047054b", "authoredDateTime": "2014-11-19 11:08:11", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 46, "deletions": 67, "lines": 113, "filePath": "src/test/java/com/ning/http/client/async/ChunkingTest.java"}, {"insertions": 2, "deletions": 17, "lines": 19, "filePath": "src/main/java/com/ning/http/client/generators/InputStreamBodyGenerator.java"}], "commitDateTime": "2014-11-19 11:08:11", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.async.ChunkingTest.testCustomChunking()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.ChunkingTest.testDirectFile()"}, {"UPD": 0, "TOT": 9, "MOV": 3, "INS": 2, "DEL": 4, "spoonMethodName": "com.ning.http.client.async.ChunkingTest.getTestFile()"}, {"UPD": 10, "TOT": 40, "MOV": 22, "INS": 0, "DEL": 8, "spoonMethodName": "com.ning.http.client.async.ChunkingTest.doTest(boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.ChunkingTest.testBufferSmallThanFile()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.ChunkingTest.testBufferLargerThanFile()"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.ChunkingTest.doTest(java.io.InputStream)"}, {"UPD": 0, "TOT": 7, "MOV": 2, "INS": 1, "DEL": 4, "spoonMethodName": "com.ning.http.client.async.ChunkingTest.readInputStreamToBytes(java.io.InputStream)"}], "spoonFilePath": "ChunkingTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.generators.InputStreamBodyGenerator"}, {"UPD": 0, "TOT": 7, "MOV": 3, "INS": 0, "DEL": 4, "spoonMethodName": "com.ning.http.client.generators.InputStreamBodyGenerator.ISBody.read(java.nio.ByteBuffer)"}], "spoonFilePath": "InputStreamBodyGenerator.java"}]}, {"nameRev": "87bf33c0df66e92cfa0ee3f30e8323a387f564f8 tags/2.0.0-alpha1~192", "commitMessage": "Drop InputStreamBodyGenerator marking strategy, close #760\n", "commitParents": ["f80dc3794f12a9d6556f9bc61763c95d3badeecd"], "spoonStatsSkippedReason": "", "commitHash": "87bf33c0df66e92cfa0ee3f30e8323a387f564f8", "authoredDateTime": "2014-11-19 11:04:45", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 25, "deletions": 16, "lines": 41, "filePath": "api/src/test/java/org/asynchttpclient/async/ChunkingTest.java"}, {"insertions": 0, "deletions": 9, "lines": 9, "filePath": "api/src/main/java/org/asynchttpclient/generators/InputStreamBodyGenerator.java"}], "commitDateTime": "2014-11-19 11:04:45", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.async.ChunkingTest.testBufferSmallThanFile()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.async.ChunkingTest.testDirectFile()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.async.ChunkingTest.testBufferLargerThanFile()"}, {"UPD": 3, "TOT": 11, "MOV": 8, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.async.ChunkingTest.testCustomChunking()"}], "spoonFilePath": "ChunkingTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.generators.InputStreamBodyGenerator.InputStreamBody.read(java.nio.ByteBuffer)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.generators.InputStreamBodyGenerator.InputStreamBody"}], "spoonFilePath": "InputStreamBodyGenerator.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/760", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 2, "deletions": 18, "lines": 20, "gitFilesChange": 1}, "title": "Drop InputStreamBodyGenerator marking strategy", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/generators"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 8, "MOV": 3, "INS": 0, "DEL": 5, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 2, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I think the original intention was to find a way to replay InputStream bodies in case of a retry (connection crash), but I don't think it can work:\n- it sets the `readlimit` to 0, meaning that the mark becomes invalid after the first read\n- `reset` behavior is completely inconsistent across implementations. A `ByteArrayInputStream` will always be able to reset as everything is in memory, but a `BufferedInputStream` will crash on reset if the mark moved out of the buffer, while `markSupported` always return true (so there's no way to detect that reset will fail beforehand).\n\nDropping this non feature that cannot work.\n", "labels": ["Defect"]}, {"created": "2014-10-30 10:21:57", "commits": {"173ff5da8b5b86cde78eb4bdd0e49946d289e09a": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2014-10-30 13:46:41", "filteredCommits": ["173ff5da8b5b86cde78eb4bdd0e49946d289e09a"], "commitsDetails": [{"nameRev": "173ff5da8b5b86cde78eb4bdd0e49946d289e09a tags/2.0.0-alpha1~199", "commitMessage": "AsyncHttpClientDefaultsTest uses old default value for connectTimeout, close #750\n", "commitParents": ["c7ad248588db3778f8547ea742892f159a9aab8a"], "spoonStatsSkippedReason": "", "commitHash": "173ff5da8b5b86cde78eb4bdd0e49946d289e09a", "authoredDateTime": "2014-10-30 14:46:36", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "api/src/test/java/org/asynchttpclient/AsyncHttpClientDefaultsTest.java"}], "commitDateTime": "2014-10-30 14:46:38", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.AsyncHttpClientDefaultsTest.testDefaultConnectTimeOut()"}], "spoonFilePath": "AsyncHttpClientDefaultsTest.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/750", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "AsyncHttpClientDefaultsTest uses old default value for connectTimeout", "statsSkippedReason": "", "user": "janwe", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Seems 1727ef446af76ac8d65b8b0b093bcd9c0de1e2e2 forgot to change the default connectTimeout in the test class from 60000 to 5000. Now the api module tests do not pass.\n", "labels": ["Defect"]}, {"created": "2014-10-14 08:56:07", "commits": {"e5be62510e9d887be1779e6a2e989798cc162a31": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "816f36d2d6500082b189716098340920e3b9b090": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.RequestBuilderBase.build()"], "closed": "2014-10-14 08:58:06", "filteredCommits": ["e5be62510e9d887be1779e6a2e989798cc162a31"], "commitsDetails": [{"nameRev": "e5be62510e9d887be1779e6a2e989798cc162a31 tags/2.0.0-alpha1~205", "commitMessage": "SignatureCalculator should be resolved before computing the final URI, close #739\n", "commitParents": ["293b6d2dc77ea4a89bed772778a2b0592462c22e"], "spoonStatsSkippedReason": "", "commitHash": "e5be62510e9d887be1779e6a2e989798cc162a31", "authoredDateTime": "2014-10-14 10:58:00", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "api/src/main/java/org/asynchttpclient/RequestBuilderBase.java"}], "commitDateTime": "2014-10-14 10:58:00", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.RequestBuilderBase.build()"}], "spoonFilePath": "RequestBuilderBase.java"}]}, {"nameRev": "816f36d2d6500082b189716098340920e3b9b090 tags/async-http-client-1.9.0-BETA19~4", "commitMessage": "SignatureCalculator should be resolved before computing the final URI, close #739\n", "commitParents": ["4735d235ddd85ebf709447d7a14f6b14519fad18"], "spoonStatsSkippedReason": "", "commitHash": "816f36d2d6500082b189716098340920e3b9b090", "authoredDateTime": "2014-10-14 10:57:05", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/RequestBuilderBase.java"}], "commitDateTime": "2014-10-14 10:57:05", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.RequestBuilderBase.build()"}], "spoonFilePath": "RequestBuilderBase.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/739", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "SignatureCalculator should be resolved before computing the final URI", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["api/src/main/java/org/asynchttpclient"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2014-10-13 08:27:52", "commits": {"4735d235ddd85ebf709447d7a14f6b14519fad18": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "293b6d2dc77ea4a89bed772778a2b0592462c22e": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.multipart.AbstractFilePart.visitDispositionHeader(com.ning.http.client.multipart.PartVisitor)"], "closed": "2014-10-13 12:40:47", "filteredCommits": ["4735d235ddd85ebf709447d7a14f6b14519fad18"], "commitsDetails": [{"nameRev": "4735d235ddd85ebf709447d7a14f6b14519fad18 tags/async-http-client-1.9.0-BETA19~5", "commitMessage": "AbstractFilePart.visitDispositionHeader should honor defined charset, close #738\n", "commitParents": ["8c12d1535ed3fc52e51478ae6caa971d534e8ef4"], "spoonStatsSkippedReason": "", "commitHash": "4735d235ddd85ebf709447d7a14f6b14519fad18", "authoredDateTime": "2014-10-13 14:39:03", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/multipart/AbstractFilePart.java"}], "commitDateTime": "2014-10-13 14:39:03", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.multipart.AbstractFilePart.visitDispositionHeader(com.ning.http.client.multipart.PartVisitor)"}], "spoonFilePath": "AbstractFilePart.java"}]}, {"nameRev": "293b6d2dc77ea4a89bed772778a2b0592462c22e tags/2.0.0-alpha1~206", "commitMessage": "AbstractFilePart.visitDispositionHeader should honor defined charset, close #738\n", "commitParents": ["413aa9ffedf0fb11697d8f55e2ca3f65004c0ef1"], "spoonStatsSkippedReason": "", "commitHash": "293b6d2dc77ea4a89bed772778a2b0592462c22e", "authoredDateTime": "2014-10-13 14:40:39", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "api/src/main/java/org/asynchttpclient/multipart/AbstractFilePart.java"}], "commitDateTime": "2014-10-13 14:40:39", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.multipart.AbstractFilePart.visitDispositionHeader(org.asynchttpclient.multipart.PartVisitor)"}], "spoonFilePath": "AbstractFilePart.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/738", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "FilePart can not process  filename  which is UTF-8 encoded", "statsSkippedReason": "", "user": "LyLuo", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/multipart"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "protected void sendDispositionHeader(OutputStream out) throws IOException {\n        ......\n            out.write(MultipartEncodingUtil.getAsciiBytes(filename));\n        ......\n}\n\nprotected long dispositionHeaderLength() {\n            ........\n            length += MultipartEncodingUtil.getAsciiBytes(filename).length;\n            ......\n    }\n", "labels": ["Defect"]}, {"created": "2014-10-09 15:41:57", "commits": {"8f18beafcb3e27d07ba7e595a40e7a0641531184": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "5a1a2cec0560b039061889ef7f8f6af5e40c7038": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.providers.netty.request.NettyRequestFactory.firstRequestOnlyProxyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,io.netty.handler.codec.http.HttpMethod)", "org.asynchttpclient.providers.netty.util.HttpUtils.isNTLM(java.util.List)", "org.asynchttpclient.providers.netty.handler.HttpProtocol.kerberosChallenge(io.netty.channel.Channel,java.util.List,org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,org.asynchttpclient.FluentCaseInsensitiveStringsMap,org.asynchttpclient.Realm,org.asynchttpclient.providers.netty.future.NettyResponseFuture,boolean)", "org.asynchttpclient.providers.netty.handler.HttpProtocol.exitAfterHandling407(io.netty.channel.Channel,org.asynchttpclient.providers.netty.future.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm,org.asynchttpclient.ProxyServer)", "org.asynchttpclient.providers.netty.handler.HttpProtocol.exitAfterHandling401(io.netty.channel.Channel,org.asynchttpclient.providers.netty.future.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm,org.asynchttpclient.ProxyServer)"], "closed": "2014-10-09 16:17:57", "filteredCommits": ["8f18beafcb3e27d07ba7e595a40e7a0641531184"], "commitsDetails": [{"nameRev": "8f18beafcb3e27d07ba7e595a40e7a0641531184 tags/2.0.0-alpha1~208", "commitMessage": "NTLM WWW-Authenticate header is not always the first one, close #736\n", "commitParents": ["bf2bb02b22e874647ab08f1a1639da697b50b3fd"], "spoonStatsSkippedReason": "", "commitHash": "8f18beafcb3e27d07ba7e595a40e7a0641531184", "authoredDateTime": "2014-10-09 18:17:51", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 10, "deletions": 7, "lines": 17, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/handler/HttpProtocol.java"}, {"insertions": 9, "deletions": 4, "lines": 13, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/util/HttpUtils.java"}, {"insertions": 5, "deletions": 4, "lines": 9, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/request/NettyRequestFactory.java"}], "commitDateTime": "2014-10-09 18:17:51", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 13, "MOV": 7, "INS": 2, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.HttpProtocol.exitAfterHandling407(io.netty.channel.Channel,org.asynchttpclient.providers.netty.future.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm,org.asynchttpclient.ProxyServer)"}, {"UPD": 1, "TOT": 9, "MOV": 4, "INS": 2, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.HttpProtocol.kerberosChallenge(io.netty.channel.Channel,java.util.List,org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,org.asynchttpclient.FluentCaseInsensitiveStringsMap,org.asynchttpclient.Realm,org.asynchttpclient.providers.netty.future.NettyResponseFuture,boolean)"}, {"UPD": 3, "TOT": 6, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.HttpProtocol.exitAfterHandling401(io.netty.channel.Channel,org.asynchttpclient.providers.netty.future.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm,org.asynchttpclient.ProxyServer)"}], "spoonFilePath": "HttpProtocol.java"}, {"spoonMethods": [{"UPD": 4, "TOT": 6, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.util.HttpUtils.isNTLM(java.util.List)"}], "spoonFilePath": "HttpUtils.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 12, "MOV": 5, "INS": 4, "DEL": 3, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyRequestFactory.firstRequestOnlyProxyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,io.netty.handler.codec.http.HttpMethod)"}], "spoonFilePath": "NettyRequestFactory.java"}]}, {"nameRev": "5a1a2cec0560b039061889ef7f8f6af5e40c7038 tags/async-http-client-1.9.0-BETA18~1", "commitMessage": "NTLM WWW-Authenticate header is not always the first one, close #736\n", "commitParents": ["ed6586a4e6713bba37a144feb0f1bf88900ae36b"], "spoonStatsSkippedReason": "", "commitHash": "5a1a2cec0560b039061889ef7f8f6af5e40c7038", "authoredDateTime": "2014-10-09 18:17:30", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 9, "deletions": 4, "lines": 13, "filePath": "src/main/java/com/ning/http/client/providers/netty/util/HttpUtils.java"}, {"insertions": 5, "deletions": 4, "lines": 9, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestFactory.java"}, {"insertions": 10, "deletions": 7, "lines": 17, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/HttpProtocol.java"}], "commitDateTime": "2014-10-09 18:17:30", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 9, "MOV": 4, "INS": 2, "DEL": 2, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.kerberosChallenge(org.jboss.netty.channel.Channel,java.util.List,com.ning.http.client.Request,com.ning.http.client.ProxyServer,com.ning.http.client.FluentCaseInsensitiveStringsMap,com.ning.http.client.Realm,com.ning.http.client.providers.netty.future.NettyResponseFuture,boolean)"}, {"UPD": 2, "TOT": 13, "MOV": 7, "INS": 2, "DEL": 2, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.exitAfterHandling407(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm,com.ning.http.client.ProxyServer)"}, {"UPD": 3, "TOT": 6, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.exitAfterHandling401(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm,com.ning.http.client.ProxyServer)"}], "spoonFilePath": "HttpProtocol.java"}, {"spoonMethods": [{"UPD": 4, "TOT": 6, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.util.HttpUtils.isNTLM(java.util.List)"}], "spoonFilePath": "HttpUtils.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 12, "MOV": 5, "INS": 4, "DEL": 3, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.firstRequestOnlyProxyAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.ProxyServer,org.jboss.netty.handler.codec.http.HttpMethod)"}], "spoonFilePath": "NettyRequestFactory.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/736", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 24, "deletions": 15, "lines": 39, "gitFilesChange": 3}, "title": "NTLM WWW-Authenticate header is not always the first one", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["providers/netty/src/main/java/org/asynchttpclient/providers/netty/request", "providers/netty/src/main/java/org/asynchttpclient/providers/netty/handler", "providers/netty/src/main/java/org/asynchttpclient/providers/netty/util"], "spoonStatsSummary": {"UPD": 10, "spoonMethodsChanged": 5, "TOT": 46, "MOV": 19, "INS": 9, "DEL": 8, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Tested on Windows 2008 RC2: without preemptive auth, IIS replies with:\n\n```\nWWW-Authenticate: Negociate\nWWW-Authenticate: NTLM\n```\n\nSadly, AHC expects NTLM to come first.\n", "labels": ["Defect", "Netty"]}, {"created": "2014-10-09 14:21:07", "commits": {"ed6586a4e6713bba37a144feb0f1bf88900ae36b": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "bf2bb02b22e874647ab08f1a1639da697b50b3fd": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.handler.Protocol.exitAfterHandlingRedirect(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int)", "com.ning.http.client.providers.netty.handler.Protocol.propagatedHeaders(com.ning.http.client.Request)", "com.ning.http.client.providers.netty.handler.Protocol"], "closed": "2014-10-09 14:48:59", "filteredCommits": ["ed6586a4e6713bba37a144feb0f1bf88900ae36b"], "commitsDetails": [{"nameRev": "ed6586a4e6713bba37a144feb0f1bf88900ae36b tags/async-http-client-1.9.0-BETA18~2", "commitMessage": "Filter headers propagated on redirect, close #735\n", "commitParents": ["2e783a590e4856a6f51957a959c12281620a4fea"], "spoonStatsSkippedReason": "", "commitHash": "ed6586a4e6713bba37a144feb0f1bf88900ae36b", "authoredDateTime": "2014-10-09 16:49:12", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 28, "deletions": 0, "lines": 28, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/Protocol.java"}], "commitDateTime": "2014-10-09 16:49:12", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.Protocol.exitAfterHandlingRedirect(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.Protocol.propagatedHeaders(com.ning.http.client.Request)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.Protocol"}], "spoonFilePath": "Protocol.java"}]}, {"nameRev": "bf2bb02b22e874647ab08f1a1639da697b50b3fd tags/2.0.0-alpha1~209", "commitMessage": "Filter headers propagated on redirect, close #735\n", "commitParents": ["4e3ca3fe49c508910bfd046d906ebcbb1597595e"], "spoonStatsSkippedReason": "", "commitHash": "bf2bb02b22e874647ab08f1a1639da697b50b3fd", "authoredDateTime": "2014-10-09 16:48:54", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 33, "deletions": 0, "lines": 33, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/handler/Protocol.java"}], "commitDateTime": "2014-10-09 16:48:54", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.Protocol.propagatedHeaders(org.asynchttpclient.Request)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.Protocol.exitAfterHandlingRedirect(io.netty.channel.Channel,org.asynchttpclient.providers.netty.future.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.Protocol"}], "spoonFilePath": "Protocol.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/735", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 28, "deletions": 0, "lines": 28, "gitFilesChange": 1}, "title": "Client keeps headers on redirect", "statsSkippedReason": "", "user": "ipsq", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/handler"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 3, "TOT": 4, "MOV": 0, "INS": 4, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I'm using this client in a abstraction layer so it is bundled with Apache and some other Java Http Clients. I have a generic HttpEntity interface that returns an input stream, content encoding and content type. Now on creation of the desired request type (in this case ning async http client request type) it also sets the content length and content type headers, like this:\n\n``` java\nrequestBuilder.setBody(new InputStreamBodyGenerator(request.getEntity().getContent()));\nrequestBuilder.addHeader(\"Content-Type\", request.getEntity().getContentType().getMimeType());\nrequestBuilder.addHeader(\"Content-Length\", String.valueOf(request.getEntity().getContentLength()));\n```\n\nNow, the form I'm posting to returns a 302 which ning follows flawlessly, now the problem is, when it redirects it creates a GET request and still includes the Content Length and Content Type headers. Is this regarded to be a bug or is there something I can do on my end that would solve the problem?\n", "labels": ["Defect", "Netty"]}, {"created": "2014-10-01 20:23:28", "commits": {"23f7d3f609eb51ba41374b237bab47f4b965f71b": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "40234b06fd13ab776319bd49e16da4f836b40de1": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "closed": "2014-10-01 20:25:34", "filteredCommits": ["23f7d3f609eb51ba41374b237bab47f4b965f71b"], "commitsDetails": [{"nameRev": "23f7d3f609eb51ba41374b237bab47f4b965f71b tags/2.0.0-alpha1~217", "commitMessage": "Fix NTLM, close #730\n", "commitParents": ["88b9c2026e5aacefcc0dfcad3dc655d6a36a7173"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "23f7d3f609eb51ba41374b237bab47f4b965f71b", "authoredDateTime": "2014-10-01 22:25:28", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 28, "deletions": 0, "lines": 28, "filePath": "providers/netty/src/test/java/org/asynchttpclient/providers/netty/NettyNTLMTest.java"}, {"insertions": 2, "deletions": 15, "lines": 17, "filePath": "api/src/main/java/org/asynchttpclient/Realm.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/request/NettyRequestFactory.java"}, {"insertions": 14, "deletions": 13, "lines": 27, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/handler/HttpProtocol.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/request/NettyRequestSender.java"}, {"insertions": 103, "deletions": 0, "lines": 103, "filePath": "api/src/test/java/org/asynchttpclient/async/NTLMTest.java"}, {"insertions": 580, "deletions": 380, "lines": 960, "filePath": "api/src/main/java/org/asynchttpclient/ntlm/NTLMEngine.java"}], "commitDateTime": "2014-10-01 22:25:28", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "40234b06fd13ab776319bd49e16da4f836b40de1 tags/async-http-client-1.9.0-BETA17~5", "commitMessage": "Fix NTLM, close #730\n", "commitParents": ["b142fa72cfd8eb4623ae14f3c71a36031525eceb"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "40234b06fd13ab776319bd49e16da4f836b40de1", "authoredDateTime": "2014-10-01 22:24:35", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 15, "lines": 15, "filePath": "src/main/java/com/ning/http/client/Realm.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestSender.java"}, {"insertions": 104, "deletions": 0, "lines": 104, "filePath": "src/test/java/com/ning/http/client/async/NTLMTest.java"}, {"insertions": 30, "deletions": 0, "lines": 30, "filePath": "src/test/java/com/ning/http/client/async/netty/NettyNTLMTest.java"}, {"insertions": 573, "deletions": 373, "lines": 946, "filePath": "src/main/java/com/ning/http/client/ntlm/NTLMEngine.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestFactory.java"}, {"insertions": 15, "deletions": 13, "lines": 28, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/HttpProtocol.java"}], "commitDateTime": "2014-10-01 22:24:48", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/730", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 598, "deletions": 410, "lines": 1008, "gitFilesChange": 5}, "title": "Netty: NTLM utterly broken", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["providers/netty/src/main/java/org/asynchttpclient/providers/netty/request", "providers/netty/src/main/java/org/asynchttpclient/providers/netty/handler", "api/src/main/java/org/asynchttpclient", "api/src/main/java/org/asynchttpclient/ntlm"], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "- Handshake should only happen when performing the first request on a connection\n- On preemptive auth, step 1 is performed twice\n- A \"NTLM \" string is prepended to the NTLM Domain when computing the Type1 message\n- Connection is not reused, which violates NTLM logic and causes Type1 message so be re-issued while sending the Type3 one.\n", "labels": ["Defect", "Netty"]}, {"created": "2014-09-30 08:54:41", "commits": {"43cff3aba6df08733fcfc891e64e8d606061dcb3": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.netty.request.body.BodyChunkedInput.readChunk(io.netty.buffer.ByteBufAllocator)", "org.asynchttpclient.netty.request.WriteProgressListener.operationProgressed(io.netty.channel.ChannelProgressiveFuture,long,long)"], "closed": "2017-02-13 06:09:21", "filteredCommits": ["43cff3aba6df08733fcfc891e64e8d606061dcb3"], "commitsDetails": [{"nameRev": "43cff3aba6df08733fcfc891e64e8d606061dcb3 tags/async-http-client-project-2.1.0-alpha5~6", "commitMessage": "Update progress during upload large bodies, close #728\n\nMotivation:\r\n\r\n`BodyChunkedInput` does not update progress member, it always stays zero.\r\nThus `ProgressAsyncHandler#onContentWriteProgress` receives zeroes in amount and current parameters. Users sees data is being sent but has no information about exact amount of data has been written to channel.\r\n\r\nModifications:\r\n\r\n`BodyChunkedInput` was modified to update progress.\r\n`WriteProgressListener` was modified to ignore zero progress. It happens due to non-blocking nature of network writes. We just ignore callbacks when there was no progress at all.\r\n\r\nResult:\r\n\r\nProgress is updated each time bytes are phisically written to channel.\r\nCallbacks are triggered with actual amount of data written.", "commitParents": ["79016a7f406cd93b01086d23e540bfa3d234c30b"], "spoonStatsSkippedReason": "", "commitHash": "43cff3aba6df08733fcfc891e64e8d606061dcb3", "authoredDateTime": "2017-02-13 16:09:20", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 0, "lines": 1, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/body/BodyChunkedInput.java"}, {"insertions": 3, "deletions": 1, "lines": 4, "filePath": "client/src/main/java/org/asynchttpclient/netty/request/WriteProgressListener.java"}], "commitDateTime": "2017-02-13 07:09:20", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.WriteProgressListener.operationProgressed(io.netty.channel.ChannelProgressiveFuture,long,long)"}], "spoonFilePath": "WriteProgressListener.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.netty.request.body.BodyChunkedInput.readChunk(io.netty.buffer.ByteBufAllocator)"}], "spoonFilePath": "BodyChunkedInput.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/728", "ttf": 866.0002777777778, "gitStatsSummary": {"insertions": 4, "deletions": 1, "lines": 5, "gitFilesChange": 2}, "title": "How can I get progress rate when uploading big file? Get it when uploading not completed!", "statsSkippedReason": "", "user": "yizhl", "changesInPackagesGIT": ["client/src/main/java/org/asynchttpclient/netty/request", "client/src/main/java/org/asynchttpclient/netty/request/body"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 3, "MOV": 1, "INS": 2, "DEL": 0, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I am trying to implement async file upload with progress ,get progress rate when I uploading a big file in order to show it to user..\n\nI tried the method suggested in the docs. Using transfer listener. http://sonatype.github.com/async-http-client/transfer-listener.html\n\nI implemented onBytesSent of TransferListener interface (just as test):\n\n``` java\npublic void onBytesSent(ByteBuffer byteBuffer) {\n\n     System.out.println(\"Total bytes sent - \");\n     System.out.println(byteBuffer.capacity());\n}\n```\n\nThen in another thread(because I don't want to block the app) I tried to do the following:\n\n``` java\nTransferCompletionHandler tl = new TransferCompletionHandler();\ntl.addTransferListener(listener);\n\nasyncHttpClient.preparePut(getFullUrl(fileWithPath))\n      .setBody(new BodyGenerator() {\n           public Body createBody() throws IOException {\n                return new FileBodyWithOffset(file, offset);\n           }\n       })\n       .addHeader(CONTENT_RANGE, new ContentRange(offset, localSize).toString())\n       .execute(handler).get();\n```\n\nEverything is fine. File is uploaded correctly and very fast. <b>But the issue is - I am getting messages from onBytesSent in TransferListener only AFTER the upload is finished.<b> For exmaple the upload is completed in 10 minutes. And during that 10 minutes I get nothing. And only after that everything is printed on the console.\n\nI can't figure out what is wrong with this code. I just tried to follow the docs.\n\nI tried to execute the above code in the main thread and it didn't work either.\n\nMaybe it is a wrong way to implement upload progress listener using this client?\n", "labels": ["Defect"]}, {"created": "2014-09-30 08:09:26", "commits": {"88b9c2026e5aacefcc0dfcad3dc655d6a36a7173": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "8df96151fde641d19880125b73bf96f88a025399": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.providers.netty.request.NettyRequestFactory.firstRequestOnlyProxyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,io.netty.handler.codec.http.HttpMethod)", "org.asynchttpclient.providers.netty.request.NettyRequestFactory.authorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,org.asynchttpclient.ProxyServer,org.asynchttpclient.Realm)", "org.asynchttpclient.providers.netty.request.NettyRequestFactory.systematicProxyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,io.netty.handler.codec.http.HttpMethod)", "org.asynchttpclient.providers.netty.request.NettyRequestSender.sendRequestWithNewChannel(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,org.asynchttpclient.ProxyServer,boolean,org.asynchttpclient.providers.netty.future.NettyResponseFuture,org.asynchttpclient.AsyncHandler,boolean)", "org.asynchttpclient.providers.netty.request.NettyRequestFactory.newNettyRequest(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,boolean,org.asynchttpclient.ProxyServer)", "org.asynchttpclient.providers.netty.request.NettyRequestFactory.addAuthorizationHeader(io.netty.handler.codec.http.HttpHeaders,java.lang.String)", "org.asynchttpclient.providers.netty.request.NettyRequestFactory.proxyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,io.netty.handler.codec.http.HttpMethod)", "org.asynchttpclient.providers.netty.request.NettyRequestFactory.setProxyAuthorizationHeader(io.netty.handler.codec.http.HttpHeaders,java.lang.String)", "org.asynchttpclient.providers.netty.request.NettyRequestFactory.systematicAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,org.asynchttpclient.ProxyServer,org.asynchttpclient.Realm)", "org.asynchttpclient.providers.netty.request.NettyRequestFactory.firstRequestOnlyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,org.asynchttpclient.ProxyServer,org.asynchttpclient.Realm)"], "closed": "2014-09-30 10:48:39", "filteredCommits": ["88b9c2026e5aacefcc0dfcad3dc655d6a36a7173"], "commitsDetails": [{"nameRev": "88b9c2026e5aacefcc0dfcad3dc655d6a36a7173 tags/2.0.0-alpha1~218", "commitMessage": "NTLM preemptive auth should only happen when sending the first request on a new connection, close #726\n", "commitParents": ["dcbcf674dda48c3a5a0d56b8f635530a836add5e"], "spoonStatsSkippedReason": "", "commitHash": "88b9c2026e5aacefcc0dfcad3dc655d6a36a7173", "authoredDateTime": "2014-09-30 12:48:33", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 8, "deletions": 0, "lines": 8, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/request/NettyRequestSender.java"}, {"insertions": 62, "deletions": 34, "lines": 96, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/request/NettyRequestFactory.java"}], "commitDateTime": "2014-09-30 12:48:33", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 0, "INS": 5, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyRequestSender.sendRequestWithNewChannel(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,org.asynchttpclient.ProxyServer,boolean,org.asynchttpclient.providers.netty.future.NettyResponseFuture,org.asynchttpclient.AsyncHandler,boolean)"}], "spoonFilePath": "NettyRequestSender.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyRequestFactory.firstRequestOnlyProxyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,io.netty.handler.codec.http.HttpMethod)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyRequestFactory.addAuthorizationHeader(io.netty.handler.codec.http.HttpHeaders,java.lang.String)"}, {"UPD": 1, "TOT": 10, "MOV": 5, "INS": 0, "DEL": 4, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyRequestFactory.proxyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,io.netty.handler.codec.http.HttpMethod)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyRequestFactory.firstRequestOnlyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,org.asynchttpclient.ProxyServer,org.asynchttpclient.Realm)"}, {"UPD": 0, "TOT": 15, "MOV": 11, "INS": 2, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyRequestFactory.newNettyRequest(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,boolean,org.asynchttpclient.ProxyServer)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyRequestFactory.systematicAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,org.asynchttpclient.ProxyServer,org.asynchttpclient.Realm)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyRequestFactory.setProxyAuthorizationHeader(io.netty.handler.codec.http.HttpHeaders,java.lang.String)"}, {"UPD": 1, "TOT": 6, "MOV": 5, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyRequestFactory.authorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,org.asynchttpclient.ProxyServer,org.asynchttpclient.Realm)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyRequestFactory.systematicProxyAuthorizationHeader(org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,io.netty.handler.codec.http.HttpMethod)"}], "spoonFilePath": "NettyRequestFactory.java"}]}, {"nameRev": "8df96151fde641d19880125b73bf96f88a025399 tags/async-http-client-1.9.0-BETA17~8", "commitMessage": "NTLM preemptive auth should only happen when sending the first request on a new connection, close #726\n", "commitParents": ["7cd6d942f332df3afb9487fbfaafd02ec5376055"], "spoonStatsSkippedReason": "", "commitHash": "8df96151fde641d19880125b73bf96f88a025399", "authoredDateTime": "2014-09-30 12:47:50", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 8, "deletions": 0, "lines": 8, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestSender.java"}, {"insertions": 62, "deletions": 34, "lines": 96, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestFactory.java"}], "commitDateTime": "2014-09-30 12:47:50", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 0, "INS": 5, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestSender.sendRequestWithNewChannel(com.ning.http.client.Request,com.ning.http.client.uri.Uri,com.ning.http.client.ProxyServer,boolean,com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.AsyncHandler,boolean)"}], "spoonFilePath": "NettyRequestSender.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.firstRequestOnlyAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.uri.Uri,com.ning.http.client.ProxyServer,com.ning.http.client.Realm)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.addAuthorizationHeader(org.jboss.netty.handler.codec.http.HttpHeaders,java.lang.String)"}, {"UPD": 1, "TOT": 10, "MOV": 5, "INS": 0, "DEL": 4, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.proxyAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.ProxyServer,org.jboss.netty.handler.codec.http.HttpMethod)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.setProxyAuthorizationHeader(org.jboss.netty.handler.codec.http.HttpHeaders,java.lang.String)"}, {"UPD": 1, "TOT": 6, "MOV": 5, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.authorizationHeader(com.ning.http.client.Request,com.ning.http.client.uri.Uri,com.ning.http.client.ProxyServer,com.ning.http.client.Realm)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.firstRequestOnlyProxyAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.ProxyServer,org.jboss.netty.handler.codec.http.HttpMethod)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.systematicProxyAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.ProxyServer,org.jboss.netty.handler.codec.http.HttpMethod)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.systematicAuthorizationHeader(com.ning.http.client.Request,com.ning.http.client.uri.Uri,com.ning.http.client.ProxyServer,com.ning.http.client.Realm)"}, {"UPD": 0, "TOT": 15, "MOV": 11, "INS": 2, "DEL": 2, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.newNettyRequest(com.ning.http.client.Request,com.ning.http.client.uri.Uri,boolean,com.ning.http.client.ProxyServer)"}], "spoonFilePath": "NettyRequestFactory.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/726", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 70, "deletions": 34, "lines": 104, "gitFilesChange": 2}, "title": "Netty: NTLM preemptive auth should only happen when sending the first request on a new connection", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["providers/netty/src/main/java/org/asynchttpclient/providers/netty/request"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 10, "TOT": 43, "MOV": 21, "INS": 14, "DEL": 6, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Not on every request (different from Basic and Digest).\n", "labels": ["Defect", "Netty"]}, {"created": "2014-09-25 12:15:16", "commits": {"0e1d6da2a405fb881d18db05ff7dacc8aa9696a5": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "97de1e5a393f4b9e7c3d237fe4e915880e0a578e": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.channel.pool.DefaultChannelPool.isTTLExpired(org.jboss.netty.channel.Channel,long)"], "closed": "2014-09-25 12:24:25", "filteredCommits": ["0e1d6da2a405fb881d18db05ff7dacc8aa9696a5"], "commitsDetails": [{"nameRev": "0e1d6da2a405fb881d18db05ff7dacc8aa9696a5 tags/async-http-client-1.9.0-BETA16~3", "commitMessage": "Fix DefaultChannelPool.isTTLExpired, close #721\n", "commitParents": ["4df8d035ba42c4cca92955613bea032f2957cbbd"], "spoonStatsSkippedReason": "", "commitHash": "0e1d6da2a405fb881d18db05ff7dacc8aa9696a5", "authoredDateTime": "2014-09-25 14:22:55", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/providers/netty/channel/pool/DefaultChannelPool.java"}], "commitDateTime": "2014-09-25 14:22:55", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.channel.pool.DefaultChannelPool.isTTLExpired(org.jboss.netty.channel.Channel,long)"}], "spoonFilePath": "DefaultChannelPool.java"}]}, {"nameRev": "97de1e5a393f4b9e7c3d237fe4e915880e0a578e tags/2.0.0-alpha1~221", "commitMessage": "Fix DefaultChannelPool.isTTLExpired, close #721\n", "commitParents": ["3ee50425b319c26a93e34d99f1fe4bfa142331b3"], "spoonStatsSkippedReason": "", "commitHash": "97de1e5a393f4b9e7c3d237fe4e915880e0a578e", "authoredDateTime": "2014-09-25 14:24:21", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/channel/pool/DefaultChannelPool.java"}], "commitDateTime": "2014-09-25 14:24:21", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.pool.DefaultChannelPool.isTTLExpired(io.netty.channel.Channel,long)"}], "spoonFilePath": "DefaultChannelPool.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/721", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "Netty: Connection pooling is not working properly with Connection TTL", "statsSkippedReason": "", "user": "kstokoz", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/channel"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I was trying out AHC v 1.9.0Beta15 and looks like if you define connection ttl in config it prevent connections from being cached.\n\nI assume the reason for this is a code in DefaultChannelPool class in isTTLExpired  functions.\nChannels can be added to pool (and channelId2Creation map)  only if they haven`t expired.\nSo for completely new channel (i.e channel is not in channelId2Creation map) isTTLExpired  should return true. \n\nI assume in  isTTLExpired instead of  \n\n``` java\nChannelCreation creation = channelId2Creation.get(channel.getId());\nreturn creation == null || now - creation.creationTime >= maxConnectionTTL;\n```\n\nCondition should be changed to \n\n``` java\nChannelCreation creation = channelId2Creation.get(channel.getId());\nreturn creation != null && now - creation.creationTime >= maxConnectionTTL;\n```\n", "labels": ["Defect", "Netty"]}, {"created": "2014-09-25 09:56:32", "commits": {"02ceb337917b3d45346f7e4d6962b54bd5548a43": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}, "b142fa72cfd8eb4623ae14f3c71a36031525eceb": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.execute(com.ning.http.client.Request,com.ning.http.client.AsyncHandler)"], "closed": "2014-10-09 14:17:49", "filteredCommits": ["b142fa72cfd8eb4623ae14f3c71a36031525eceb"], "commitsDetails": [{"nameRev": "02ceb337917b3d45346f7e4d6962b54bd5548a43 tags/async-http-client-1.9.0-BETA17~7", "commitMessage": "Merge pull request #725 from gerdriesselmann/Fixing720\n\nFix #720: On exception abort Future, do not rethrow\r\n\r\nthanks!", "commitParents": ["8df96151fde641d19880125b73bf96f88a025399", "bed229bba8f0769c31965ea7a9642b121144e3d9"], "spoonStatsSkippedReason": "", "commitHash": "02ceb337917b3d45346f7e4d6962b54bd5548a43", "authoredDateTime": "2014-10-01 12:33:25", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 16, "deletions": 5, "lines": 21, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java"}], "commitDateTime": "2014-10-01 12:33:25", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.abort(com.ning.http.client.providers.grizzly.GrizzlyResponseFuture,java.lang.Throwable)"}, {"UPD": 0, "TOT": 13, "MOV": 6, "INS": 3, "DEL": 4, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.execute(com.ning.http.client.Request,com.ning.http.client.AsyncHandler)"}], "spoonFilePath": "GrizzlyAsyncHttpProvider.java"}]}, {"nameRev": "b142fa72cfd8eb4623ae14f3c71a36031525eceb tags/async-http-client-1.9.0-BETA17~6", "commitMessage": "[1.9.x] + fix GrizzlyConnectionPoolTest\nrelated to https://github.com/AsyncHttpClient/async-http-client/issues/720", "commitParents": ["02ceb337917b3d45346f7e4d6962b54bd5548a43"], "spoonStatsSkippedReason": "", "commitHash": "b142fa72cfd8eb4623ae14f3c71a36031525eceb", "authoredDateTime": "2014-10-01 13:17:56", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 7, "deletions": 9, "lines": 16, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java"}, {"insertions": 6, "deletions": 5, "lines": 11, "filePath": "src/test/java/com/ning/http/client/async/grizzly/GrizzlyConnectionPoolTest.java"}], "commitDateTime": "2014-10-01 13:17:56", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 16, "MOV": 10, "INS": 3, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.execute(com.ning.http.client.Request,com.ning.http.client.AsyncHandler)"}], "spoonFilePath": "GrizzlyAsyncHttpProvider.java"}, {"spoonMethods": [{"UPD": 4, "TOT": 5, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.grizzly.GrizzlyConnectionPoolTest.testMaxTotalConnectionsException()"}], "spoonFilePath": "GrizzlyConnectionPoolTest.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/720", "ttf": 14.000277777777777, "gitStatsSummary": {"insertions": 7, "deletions": 9, "lines": 16, "gitFilesChange": 1}, "title": "GrizzlyMaxTotalConnectionTest.testMaxTotalConnectionsExceedingException fails", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/grizzly"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 1, "TOT": 16, "MOV": 10, "INS": 3, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "Observed on 1.9.x branch: Max connections exceeded.\n", "labels": ["Defect", "Grizzly"]}, {"created": "2014-09-18 21:04:07", "user": "slandelle", "body": "@oleksiys There's 2 issues:\n- compressionEnabled is now compressionEnforced. The behavior shouldn't be the same: compression should always be enabled/available, but Accept-Encoding header wouldn't be enforced, except when compressionEnabled is turned on.\n- I tried by mistake to enable compressionEnforced by default, and several tests failed on the Grizzly side (Netty is fine), mostly when combined with HTTPS. I got stupid errors such as \"expected <hello there>\" but got <hello there>\"?!\n", "closed": "2014-09-25 07:57:35", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/712", "ttf": 6.000277777777778, "commits": {}, "labels": ["Defect", "Grizzly"], "title": "Grizzly: compression doesn't work over HTTPS"}, {"created": "2014-09-17 17:17:13", "commits": {"0fdffff336966609a5b638f744ede5d0858b22dd": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "5da78ecf97a8eb4f1de77fd97c46b9bc3650e913": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.providers.netty.request.NettyRequestSender.preemptChannel(org.asynchttpclient.AsyncHandler,java.lang.String)", "org.asynchttpclient.providers.netty.request.NettyRequestSender.sendRequestWithNewChannel(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,org.asynchttpclient.ProxyServer,boolean,org.asynchttpclient.providers.netty.future.NettyResponseFuture,org.asynchttpclient.AsyncHandler,boolean)"], "closed": "2014-09-18 19:15:51", "filteredCommits": ["0fdffff336966609a5b638f744ede5d0858b22dd"], "commitsDetails": [{"nameRev": "0fdffff336966609a5b638f744ede5d0858b22dd tags/2.0.0-alpha1~237", "commitMessage": "Too many connections shouldn't be thrown by execute, close #703\n", "commitParents": ["333975f49d524a70730a74642e1adc96523c6782"], "spoonStatsSkippedReason": "", "commitHash": "0fdffff336966609a5b638f744ede5d0858b22dd", "authoredDateTime": "2014-09-18 21:15:45", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 13, "deletions": 28, "lines": 41, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/request/NettyRequestSender.java"}], "commitDateTime": "2014-09-18 21:15:45", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyRequestSender.preemptChannel(org.asynchttpclient.AsyncHandler,java.lang.String)"}, {"UPD": 0, "TOT": 11, "MOV": 6, "INS": 2, "DEL": 3, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyRequestSender.sendRequestWithNewChannel(org.asynchttpclient.Request,org.asynchttpclient.uri.Uri,org.asynchttpclient.ProxyServer,boolean,org.asynchttpclient.providers.netty.future.NettyResponseFuture,org.asynchttpclient.AsyncHandler,boolean)"}], "spoonFilePath": "NettyRequestSender.java"}]}, {"nameRev": "5da78ecf97a8eb4f1de77fd97c46b9bc3650e913 tags/async-http-client-1.9.0-BETA14~9", "commitMessage": "Too many connections shouldn't be thrown by execute, close #703\n", "commitParents": ["299c11227ce7923b29a2aaf59eb23984cd14bf40"], "spoonStatsSkippedReason": "", "commitHash": "5da78ecf97a8eb4f1de77fd97c46b9bc3650e913", "authoredDateTime": "2014-09-18 21:13:03", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 13, "deletions": 27, "lines": 40, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestSender.java"}], "commitDateTime": "2014-09-18 21:13:03", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestSender.sendRequestWithNewChannel(com.ning.http.client.Request,com.ning.http.client.uri.Uri,com.ning.http.client.ProxyServer,boolean,com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.AsyncHandler,boolean)"}, {"UPD": 0, "TOT": 4, "MOV": 3, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestSender.preemptChannel(com.ning.http.client.AsyncHandler,java.lang.String)"}], "spoonFilePath": "NettyRequestSender.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/703", "ttf": 1.0002777777777778, "gitStatsSummary": {"insertions": 13, "deletions": 28, "lines": 41, "gitFilesChange": 1}, "title": "Too many connections is reported twice", "statsSkippedReason": "", "user": "stepancheg", "changesInPackagesGIT": ["providers/netty/src/main/java/org/asynchttpclient/providers/netty/request"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 14, "MOV": 8, "INS": 2, "DEL": 4, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Code:\n\n``` java\npublic class AsyncHttpClientReportsTwice {\n\n    public static void main(String[] args) throws Throwable {\n        AsyncHttpClientConfig.Builder config = new AsyncHttpClientConfig.Builder();\n        // set 0 intentionally\n        config.setMaximumConnectionsTotal(0);\n        AsyncHttpClient asyncHttpClient = new AsyncHttpClient(config.build());\n\n        RequestBuilder request = new RequestBuilder(\"GET\").setUrl(\"http://1.1.1.1/\");\n        try {\n            asyncHttpClient.executeRequest(request.build(), new AsyncCompletionHandler<Object>() {\n                @Override\n                public Object onCompleted(Response response) throws Exception {\n                    System.out.println(\"completed\");\n                    return null;\n                }\n\n                @Override\n                public void onThrowable(Throwable t) {\n                    System.out.println(\"throwable\");\n                    t.printStackTrace();\n                }\n            });\n        } catch (Throwable e) {\n            System.out.println(\"catch\");\n            e.printStackTrace();\n        }\n\n        Thread.sleep(10000000);\n    }\n}\n```\n\n`java.io.IOException: Too many connections 0` is printed twice: first exception is thrown from `executeRequest` function, and another is passed to `onThrowable` callback.\n\nThis is inconvenient, because some errors are meant to be handled only once, for example:\n- to count number of errors\n- to fill some future-like object with error\n- to report error to logs only once\n\nWhen error is reported twice, user need some state (like AtomicBoolean) to ignore second throwable.\n", "labels": ["Defect", "Netty"]}, {"created": "2014-09-15 08:21:47", "commits": {"c8ce69790e90f7c12a6c7dd666a900b88164f173": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "d13e7b508892fe2faf2c1673f3df9df298753d31": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.request.NettyConnectListener.operationComplete(org.jboss.netty.channel.ChannelFuture)"], "closed": "2014-09-15 08:24:34", "filteredCommits": ["c8ce69790e90f7c12a6c7dd666a900b88164f173"], "commitsDetails": [{"nameRev": "c8ce69790e90f7c12a6c7dd666a900b88164f173 tags/async-http-client-1.9.0-BETA13~6", "commitMessage": "Invalid debug logs when failing to connect, close #699\n", "commitParents": ["6d5e440613a6ca550c3a08bd7d9184acd8729d4d"], "spoonStatsSkippedReason": "", "commitHash": "c8ce69790e90f7c12a6c7dd666a900b88164f173", "authoredDateTime": "2014-09-15 10:24:14", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyConnectListener.java"}], "commitDateTime": "2014-09-15 10:24:14", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyConnectListener.operationComplete(org.jboss.netty.channel.ChannelFuture)"}], "spoonFilePath": "NettyConnectListener.java"}]}, {"nameRev": "d13e7b508892fe2faf2c1673f3df9df298753d31 tags/2.0.0-alpha1~253", "commitMessage": "Invalid debug logs when failing to connect, close #699\n", "commitParents": ["f0c0c523436b34f8a33a94e9cd0845e0e1507fb5"], "spoonStatsSkippedReason": "", "commitHash": "d13e7b508892fe2faf2c1673f3df9df298753d31", "authoredDateTime": "2014-09-15 10:24:30", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/request/NettyConnectListener.java"}], "commitDateTime": "2014-09-15 10:24:30", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyConnectListener.onFutureFailure(io.netty.channel.Channel,java.lang.Throwable)"}], "spoonFilePath": "NettyConnectListener.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/699", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "title": "Netty: invalid debug logs when failing to connect", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/request"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2014-09-15 07:53:25", "commits": {"f0c0c523436b34f8a33a94e9cd0845e0e1507fb5": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "0751fbdcf1047be8aacb39142426b1edbd53f6f7": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.providers.netty.handler.HttpProtocol.isConnectionKeepAlive(io.netty.handler.codec.http.HttpHeaders)", "org.asynchttpclient.providers.netty.handler.HttpProtocol.handleHttpResponse(io.netty.handler.codec.http.HttpResponse,io.netty.channel.Channel,org.asynchttpclient.providers.netty.future.NettyResponseFuture,org.asynchttpclient.AsyncHandler)"], "closed": "2014-09-15 07:56:48", "filteredCommits": ["f0c0c523436b34f8a33a94e9cd0845e0e1507fb5"], "commitsDetails": [{"nameRev": "f0c0c523436b34f8a33a94e9cd0845e0e1507fb5 tags/2.0.0-alpha1~254", "commitMessage": "Fix keep-alive when request says to close, close #698\n", "commitParents": ["f4b71aa340852537c7de0e2e8efe56a8b6ee80ef"], "spoonStatsSkippedReason": "", "commitHash": "f0c0c523436b34f8a33a94e9cd0845e0e1507fb5", "authoredDateTime": "2014-09-15 09:56:44", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 5, "deletions": 1, "lines": 6, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/handler/HttpProtocol.java"}], "commitDateTime": "2014-09-15 09:56:44", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.HttpProtocol.isConnectionKeepAlive(io.netty.handler.codec.http.HttpHeaders)"}, {"UPD": 2, "TOT": 7, "MOV": 3, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.HttpProtocol.handleHttpResponse(io.netty.handler.codec.http.HttpResponse,io.netty.channel.Channel,org.asynchttpclient.providers.netty.future.NettyResponseFuture,org.asynchttpclient.AsyncHandler)"}], "spoonFilePath": "HttpProtocol.java"}]}, {"nameRev": "0751fbdcf1047be8aacb39142426b1edbd53f6f7 tags/async-http-client-1.9.0-BETA13~8", "commitMessage": "Fix keep-alive when request says to close, close #698\n", "commitParents": ["bca5f324592c7e8bfdeee8b8d7463153fb952e7d"], "spoonStatsSkippedReason": "", "commitHash": "0751fbdcf1047be8aacb39142426b1edbd53f6f7", "authoredDateTime": "2014-09-15 09:54:45", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 5, "deletions": 1, "lines": 6, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/HttpProtocol.java"}], "commitDateTime": "2014-09-15 09:54:45", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.isConnectionKeepAlive(org.jboss.netty.handler.codec.http.HttpHeaders)"}, {"UPD": 2, "TOT": 7, "MOV": 3, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.handler.HttpProtocol.handleHttpResponse(org.jboss.netty.handler.codec.http.HttpResponse,org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.AsyncHandler)"}], "spoonFilePath": "HttpProtocol.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/698", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 5, "deletions": 1, "lines": 6, "gitFilesChange": 1}, "title": "Netty: keep-alive not properly computed", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["providers/netty/src/main/java/org/asynchttpclient/providers/netty/handler"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 2, "TOT": 8, "MOV": 3, "INS": 2, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "If the request sends `Connection: close` and response doesn't have a `Connection` header, Keep-Alive is currently computed as true and the channel is offered to the pool.\n", "labels": ["Defect", "Netty"]}, {"created": "2014-09-09 12:01:19", "commits": {"9f2ea6c02c1ddecd7b60cd5b748a2eda0d76c04e": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "bf97dd478859772577a1a788d2c3c07f0717940a": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.providers.netty.request.timeout.TimeoutTimerTask", "org.asynchttpclient.providers.netty.request.NettyRequestSender.writeRequest(org.asynchttpclient.providers.netty.future.NettyResponseFuture,io.netty.channel.Channel)", "org.asynchttpclient.providers.netty.future.NettyResponseFuture.getChannelRemoteAddress()"], "closed": "2014-09-09 12:24:15", "filteredCommits": ["9f2ea6c02c1ddecd7b60cd5b748a2eda0d76c04e"], "commitsDetails": [{"nameRev": "9f2ea6c02c1ddecd7b60cd5b748a2eda0d76c04e tags/2.0.0-alpha1~256", "commitMessage": "Fix NPE in TimeoutTimerTask, close #697\n", "commitParents": ["48097bb3da5000ccffb95ca95e925a01de1053c5"], "spoonStatsSkippedReason": "", "commitHash": "9f2ea6c02c1ddecd7b60cd5b748a2eda0d76c04e", "authoredDateTime": "2014-09-09 14:24:11", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 1, "lines": 4, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/request/timeout/TimeoutTimerTask.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/future/NettyResponseFuture.java"}, {"insertions": 14, "deletions": 11, "lines": 25, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/request/NettyRequestSender.java"}], "commitDateTime": "2014-09-09 14:24:11", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 0, "INS": 2, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture.getChannelRemoteAddress()"}], "spoonFilePath": "NettyResponseFuture.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 5, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyRequestSender.writeRequest(org.asynchttpclient.providers.netty.future.NettyResponseFuture,io.netty.channel.Channel)"}], "spoonFilePath": "NettyRequestSender.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 1, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.request.timeout.TimeoutTimerTask"}], "spoonFilePath": "TimeoutTimerTask.java"}]}, {"nameRev": "bf97dd478859772577a1a788d2c3c07f0717940a tags/async-http-client-1.9.0-BETA13~10", "commitMessage": "Fix NPE in TimeoutTimerTask, close #697\n", "commitParents": ["6556e90df72c3cf710fa5decf58b434558e894bb"], "spoonStatsSkippedReason": "", "commitHash": "bf97dd478859772577a1a788d2c3c07f0717940a", "authoredDateTime": "2014-09-09 14:23:58", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/providers/netty/future/NettyResponseFuture.java"}, {"insertions": 15, "deletions": 12, "lines": 27, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestSender.java"}, {"insertions": 3, "deletions": 1, "lines": 4, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/timeout/TimeoutTimerTask.java"}], "commitDateTime": "2014-09-09 14:23:58", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 0, "INS": 2, "DEL": 2, "spoonMethodName": "com.ning.http.client.providers.netty.future.NettyResponseFuture.getChannelRemoteAddress()"}], "spoonFilePath": "NettyResponseFuture.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 5, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestSender.writeRequest(com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.channel.Channel)"}], "spoonFilePath": "NettyRequestSender.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 1, "INS": 2, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.timeout.TimeoutTimerTask"}], "spoonFilePath": "TimeoutTimerTask.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/697", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 18, "deletions": 13, "lines": 31, "gitFilesChange": 3}, "title": "NPE in TimeoutTimerTask", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["providers/netty/src/main/java/org/asynchttpclient/providers/netty/request", "providers/netty/src/main/java/org/asynchttpclient/providers/netty/future"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 3, "TOT": 14, "MOV": 6, "INS": 5, "DEL": 3, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "`remoteAddress = nettyResponseFuture.getChannelRemoteAddress().toString();` crashes when the channel is no longer connected.\n\nStacktrace on 1.9.0-BETA10:\n\n```\nCaused by: java.lang.NullPointerException\n  at c.n.h.c.providers.netty.request.timeout.TimeoutTimerTask.<init>(TimeoutTimerTask.java:40)\n  at c.n.h.c.providers.netty.request.timeout.RequestTimeoutTimerTask.<init>(RequestTimeoutTimerTask.java:31)\n  at c.n.h.c.providers.netty.request.NettyRequestSender.scheduleTimeouts(NettyRequestSender.java:377)\n  at c.n.h.c.providers.netty.request.NettyRequestSender.writeRequest(NettyRequestSender.java:339)\n  at c.n.h.c.providers.netty.request.NettyRequestSender.sendRequestWithCachedChannel(NettyRequestSender.java:210)\n        ... 30 more\n```\n\nThe problem here is that the channel was disconnected between the moment the channel was grabbed from the pool and the moment the timeout was scheduled.\n", "labels": ["Defect", "Netty"]}, {"created": "2014-09-08 21:30:31", "commits": {"48097bb3da5000ccffb95ca95e925a01de1053c5": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "42c61710d2aa24063d23ca2ae5dcf75d247fe1d5": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.RequestBuilderBase.setQueryParams(java.util.List)", "org.asynchttpclient.RequestBuilderBase.addQueryParams(java.util.List)"], "closed": "2014-09-08 21:34:47", "filteredCommits": ["48097bb3da5000ccffb95ca95e925a01de1053c5"], "commitsDetails": [{"nameRev": "48097bb3da5000ccffb95ca95e925a01de1053c5 tags/2.0.0-alpha1~257", "commitMessage": "setQueryParams should also drop the query, close #696\n", "commitParents": ["d78d481658ac11952742cc847a312060e543a0f4"], "spoonStatsSkippedReason": "", "commitHash": "48097bb3da5000ccffb95ca95e925a01de1053c5", "authoredDateTime": "2014-09-08 23:34:36", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 9, "deletions": 5, "lines": 14, "filePath": "api/src/main/java/org/asynchttpclient/RequestBuilderBase.java"}], "commitDateTime": "2014-09-08 23:34:36", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.RequestBuilderBase.setQueryParams(java.util.List)"}, {"UPD": 2, "TOT": 5, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.RequestBuilderBase.addQueryParams(java.util.List)"}], "spoonFilePath": "RequestBuilderBase.java"}]}, {"nameRev": "42c61710d2aa24063d23ca2ae5dcf75d247fe1d5 tags/async-http-client-1.9.0-BETA12~1", "commitMessage": "setQueryParams should also drop the query, close #696\n", "commitParents": ["6cbbb173ec5191ee7fd8b03fdf67ff9385d81d15"], "spoonStatsSkippedReason": "", "commitHash": "42c61710d2aa24063d23ca2ae5dcf75d247fe1d5", "authoredDateTime": "2014-09-08 23:31:30", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 9, "deletions": 5, "lines": 14, "filePath": "src/main/java/com/ning/http/client/RequestBuilderBase.java"}], "commitDateTime": "2014-09-08 23:31:30", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 5, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.RequestBuilderBase.addQueryParams(java.util.List)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.RequestBuilderBase.setQueryParams(java.util.List)"}], "spoonFilePath": "RequestBuilderBase.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/696", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 9, "deletions": 5, "lines": 14, "gitFilesChange": 1}, "title": "setQueryParams should also drop the query", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["api/src/main/java/org/asynchttpclient"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 2, "TOT": 6, "MOV": 1, "INS": 2, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2014-09-01 11:47:42", "commits": {"9936f0ffa43ca518ab1cbbe2e6c0b7c632e0f61b": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "56813f73a280862fb8361a1ed9da2fa842c708cd": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.request.NettyRequestSender", "com.ning.http.client.providers.netty.request.NettyRequestFactory.newNettyRequest(com.ning.http.client.Request,com.ning.http.client.uri.UriComponents,boolean,com.ning.http.client.ProxyServer)"], "closed": "2014-09-01 11:54:45", "filteredCommits": ["9936f0ffa43ca518ab1cbbe2e6c0b7c632e0f61b"], "commitsDetails": [{"nameRev": "9936f0ffa43ca518ab1cbbe2e6c0b7c632e0f61b tags/async-http-client-1.9.0-BETA11~14", "commitMessage": "Honor Accept-Encoding if it was set in the request, close #686\n", "commitParents": ["79746bee17570feb33bf2d84468bf9540a625ee6"], "spoonStatsSkippedReason": "", "commitHash": "9936f0ffa43ca518ab1cbbe2e6c0b7c632e0f61b", "authoredDateTime": "2014-09-01 13:51:56", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 1, "lines": 1, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestSender.java"}, {"insertions": 6, "deletions": 2, "lines": 8, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/NettyRequestFactory.java"}], "commitDateTime": "2014-09-01 13:51:56", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestSender"}], "spoonFilePath": "NettyRequestSender.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 2, "INS": 2, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.NettyRequestFactory.newNettyRequest(com.ning.http.client.Request,com.ning.http.client.uri.UriComponents,boolean,com.ning.http.client.ProxyServer)"}], "spoonFilePath": "NettyRequestFactory.java"}]}, {"nameRev": "56813f73a280862fb8361a1ed9da2fa842c708cd tags/2.0.0-alpha1~272", "commitMessage": "Honor Accept-Encoding if it was set in the request, close #686\n", "commitParents": ["4aae28d060ff204c081ef64e2e153a86d96d96f1"], "spoonStatsSkippedReason": "", "commitHash": "56813f73a280862fb8361a1ed9da2fa842c708cd", "authoredDateTime": "2014-09-01 13:54:40", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 5, "deletions": 2, "lines": 7, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/request/NettyRequestFactory.java"}], "commitDateTime": "2014-09-01 13:54:40", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 2, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyRequestFactory.newNettyRequest(org.asynchttpclient.Request,org.asynchttpclient.uri.UriComponents,boolean,org.asynchttpclient.ProxyServer)"}], "spoonFilePath": "NettyRequestFactory.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/686", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 6, "deletions": 3, "lines": 9, "gitFilesChange": 2}, "title": "Honor Accept-Encoding if it was set in the request", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/request"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 5, "MOV": 2, "INS": 2, "DEL": 1, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Instead of forcefully setting \"gzip, deflate\"\n", "labels": ["Defect", "Netty"]}, {"created": "2014-09-01 08:43:03", "user": "slandelle", "body": "See https://github.com/netty/netty/issues/2151\n", "closed": "2017-02-28 09:49:42", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/685", "ttf": 911.0002777777778, "commits": {}, "labels": ["Defect"], "title": "Notify complete progress for FileRegion"}, {"created": "2014-08-27 11:31:54", "commits": {"6cd72bfb650bc2c3e2d573e570c8ad94ab4fd39b": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "5c63a97cd0ca691c92e495fa37ae5d5b1e8f304b": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.providers.netty.request.timeout.TimeoutTimerTask", "org.asynchttpclient.providers.netty.request.timeout.TimeoutsHolder.cancel()", "org.asynchttpclient.providers.netty.request.timeout.TimeoutTimerTask.clean()"], "closed": "2014-08-27 11:36:23", "filteredCommits": ["6cd72bfb650bc2c3e2d573e570c8ad94ab4fd39b"], "commitsDetails": [{"nameRev": "6cd72bfb650bc2c3e2d573e570c8ad94ab4fd39b tags/2.0.0-alpha1~277", "commitMessage": "Clean up TimeoutTasks content when cancelling, close #682\n", "commitParents": ["c61679f4ed4763d2e59d1a6e4850a8118500814b"], "spoonStatsSkippedReason": "", "commitHash": "6cd72bfb650bc2c3e2d573e570c8ad94ab4fd39b", "authoredDateTime": "2014-08-27 13:36:19", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 9, "deletions": 1, "lines": 10, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/request/timeout/TimeoutTimerTask.java"}, {"insertions": 2, "deletions": 0, "lines": 2, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/request/timeout/TimeoutsHolder.java"}], "commitDateTime": "2014-08-27 13:36:19", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.timeout.TimeoutsHolder.cancel()"}], "spoonFilePath": "TimeoutsHolder.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.request.timeout.TimeoutTimerTask"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.timeout.TimeoutTimerTask.clean()"}], "spoonFilePath": "TimeoutTimerTask.java"}]}, {"nameRev": "5c63a97cd0ca691c92e495fa37ae5d5b1e8f304b tags/async-http-client-1.9.0-BETA10~7", "commitMessage": "Clean up TimeoutTasks content when cancelling, close #682\n", "commitParents": ["3489bcf6885eec3db378d8b7e531aec98976a0f9"], "spoonStatsSkippedReason": "", "commitHash": "5c63a97cd0ca691c92e495fa37ae5d5b1e8f304b", "authoredDateTime": "2014-08-27 13:32:28", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 0, "lines": 2, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/timeout/TimeoutsHolder.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/Processor.java"}, {"insertions": 9, "deletions": 1, "lines": 10, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/timeout/TimeoutTimerTask.java"}], "commitDateTime": "2014-08-27 13:32:28", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "Processor.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.timeout.TimeoutsHolder.cancel()"}], "spoonFilePath": "TimeoutsHolder.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.request.timeout.TimeoutTimerTask.clean()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.timeout.TimeoutTimerTask"}], "spoonFilePath": "TimeoutTimerTask.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/682", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 11, "deletions": 1, "lines": 12, "gitFilesChange": 2}, "title": "Clean up TimeoutTasks content when cancelling", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["providers/netty/src/main/java/org/asynchttpclient/providers/netty/request"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 3, "TOT": 5, "MOV": 0, "INS": 4, "DEL": 1, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "A task could be lingering a long time in the Timer before it gets removed and can be GCed.\nBut a task contains a NettyResponseFuture that might be referencing a Channel, so also all the heavy objects that might be used in the pipeline, such as SslEngines.\n", "labels": ["Defect", "Netty"]}, {"created": "2014-08-27 10:26:47", "commits": {"768a104057e3b604251f23beaeabafc118b458f8": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "5f53e1c6cb5caa53e02e27356e3cace5700398c5": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.providers.netty.channel.ChannelManager.closeChannel(io.netty.channel.Channel)"], "closed": "2014-08-27 10:28:07", "filteredCommits": ["768a104057e3b604251f23beaeabafc118b458f8"], "commitsDetails": [{"nameRev": "768a104057e3b604251f23beaeabafc118b458f8 tags/2.0.0-alpha1~283", "commitMessage": "Fix ChannelManager.closeChannel NPE, close #681\n", "commitParents": ["a5c75a4161e1ee4db6b3daceece950336d6561a6"], "spoonStatsSkippedReason": "", "commitHash": "768a104057e3b604251f23beaeabafc118b458f8", "authoredDateTime": "2014-08-27 12:28:03", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/channel/ChannelManager.java"}], "commitDateTime": "2014-08-27 12:28:03", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.ChannelManager.closeChannel(io.netty.channel.Channel)"}], "spoonFilePath": "ChannelManager.java"}]}, {"nameRev": "5f53e1c6cb5caa53e02e27356e3cace5700398c5 tags/async-http-client-1.9.0-BETA10~13", "commitMessage": "Fix ChannelManager.closeChannel NPE, close #681\n", "commitParents": ["80d0853af7a91ffcdb234865cdd1667c9b873bb2"], "spoonStatsSkippedReason": "", "commitHash": "5f53e1c6cb5caa53e02e27356e3cace5700398c5", "authoredDateTime": "2014-08-27 12:26:52", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 3, "lines": 6, "filePath": "src/main/java/com/ning/http/client/providers/netty/channel/ChannelManager.java"}], "commitDateTime": "2014-08-27 12:26:52", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.channel.ChannelManager.closeChannel(org.jboss.netty.channel.Channel)"}], "spoonFilePath": "ChannelManager.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/681", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "title": "ChannelManager.closeChannel can NPE when channel is null", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["providers/netty/src/main/java/org/asynchttpclient/providers/netty/channel"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 2, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2014-08-26 13:13:47", "commits": {"a5c75a4161e1ee4db6b3daceece950336d6561a6": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "80d0853af7a91ffcdb234865cdd1667c9b873bb2": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.uri.UriComponentsParser.removeEmbeddedDot()"], "closed": "2014-08-26 13:17:18", "filteredCommits": ["a5c75a4161e1ee4db6b3daceece950336d6561a6"], "commitsDetails": [{"nameRev": "a5c75a4161e1ee4db6b3daceece950336d6561a6 tags/2.0.0-alpha1~284", "commitMessage": "UriComponent doesn't properly handle ./ relative urls, close #680\n", "commitParents": ["40ae7155b912cb39c3b3dad48d07dd3c4d6688f6"], "spoonStatsSkippedReason": "", "commitHash": "a5c75a4161e1ee4db6b3daceece950336d6561a6", "authoredDateTime": "2014-08-26 15:17:14", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "api/src/main/java/org/asynchttpclient/uri/UriComponentsParser.java"}], "commitDateTime": "2014-08-26 15:17:14", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriComponentsParser.removeEmbeddedDot()"}], "spoonFilePath": "UriComponentsParser.java"}]}, {"nameRev": "80d0853af7a91ffcdb234865cdd1667c9b873bb2 tags/async-http-client-1.9.0-BETA10~14", "commitMessage": "UriComponent doesn't properly handle ./ relative urls, close #680\n", "commitParents": ["5bfa8b6482514f3bda467435f699d81d198c8138"], "spoonStatsSkippedReason": "", "commitHash": "80d0853af7a91ffcdb234865cdd1667c9b873bb2", "authoredDateTime": "2014-08-26 15:16:39", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/uri/UriComponentsParser.java"}], "commitDateTime": "2014-08-26 15:16:39", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.uri.UriComponentsParser.removeEmbeddedDot()"}], "spoonFilePath": "UriComponentsParser.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/680", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "UriComponent doesn't properly handle ./ relative urls", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["api/src/main/java/org/asynchttpclient/uri"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2014-08-25 19:45:30", "commits": {"7716af5f6b107523ec4a6b079b7d9457030caf41": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "40ae7155b912cb39c3b3dad48d07dd3c4d6688f6": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2014-08-25 19:49:43", "filteredCommits": [], "commitsDetails": [{"nameRev": "7716af5f6b107523ec4a6b079b7d9457030caf41 tags/async-http-client-1.9.0-BETA9~1", "commitMessage": "Fix NPE caused by #676, close #678\n", "commitParents": ["d0776dc1054af6ef2b59eb8595f45f85f27ff6a8"], "spoonStatsSkippedReason": "", "commitHash": "7716af5f6b107523ec4a6b079b7d9457030caf41", "authoredDateTime": "2014-08-25 21:46:15", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 8, "deletions": 9, "lines": 17, "filePath": "src/main/java/com/ning/http/client/providers/netty/channel/pool/DefaultChannelPool.java"}], "commitDateTime": "2014-08-25 21:46:15", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 3, "TOT": 15, "MOV": 5, "INS": 2, "DEL": 5, "spoonMethodName": "com.ning.http.client.providers.netty.channel.pool.DefaultChannelPool.IdleChannelDetector.run(org.jboss.netty.util.Timeout)"}], "spoonFilePath": "DefaultChannelPool.java"}]}, {"nameRev": "40ae7155b912cb39c3b3dad48d07dd3c4d6688f6 tags/2.0.0-alpha1~285", "commitMessage": "Fix NPE caused by #676, close #678\n", "commitParents": ["fb1a88a151b9ae6c05113191cb8179ea07b8f8dc"], "spoonStatsSkippedReason": "", "commitHash": "40ae7155b912cb39c3b3dad48d07dd3c4d6688f6", "authoredDateTime": "2014-08-25 21:49:39", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 9, "deletions": 7, "lines": 16, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/channel/pool/DefaultChannelPool.java"}], "commitDateTime": "2014-08-25 21:49:39", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 3, "TOT": 15, "MOV": 5, "INS": 2, "DEL": 5, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.pool.DefaultChannelPool.IdleChannelDetector.run(io.netty.util.Timeout)"}], "spoonFilePath": "DefaultChannelPool.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/678", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "NPE caused by #676", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "Reverting until properly fixed\n", "labels": ["Defect", "Netty"]}, {"created": "2014-08-23 13:27:55", "commits": {"2e8b098b0e21471d2a3dd1b887ea8eac88fc09e1": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "378805c8de7c610a52c3e9f78d1299e46f4b5da7": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.channel.ChannelManager.upgradePipelineForWebSockets(org.jboss.netty.channel.ChannelPipeline)", "com.ning.http.client.providers.netty.channel.ChannelManager"], "closed": "2014-08-23 13:30:39", "filteredCommits": ["2e8b098b0e21471d2a3dd1b887ea8eac88fc09e1"], "commitsDetails": [{"nameRev": "2e8b098b0e21471d2a3dd1b887ea8eac88fc09e1 tags/async-http-client-1.9.0-BETA7~3", "commitMessage": "Handle Continuation frames, close #674\n", "commitParents": ["a5d66dce0e07def9bd301c0291e993015668830d"], "spoonStatsSkippedReason": "", "commitHash": "2e8b098b0e21471d2a3dd1b887ea8eac88fc09e1", "authoredDateTime": "2014-08-23 15:28:16", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 0, "lines": 3, "filePath": "src/main/java/com/ning/http/client/providers/netty/channel/ChannelManager.java"}], "commitDateTime": "2014-08-23 15:28:16", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.channel.ChannelManager.upgradePipelineForWebSockets(org.jboss.netty.channel.ChannelPipeline)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.channel.ChannelManager"}], "spoonFilePath": "ChannelManager.java"}]}, {"nameRev": "378805c8de7c610a52c3e9f78d1299e46f4b5da7 tags/2.0.0-alpha1~290", "commitMessage": "Handle Continuation frames, close #674\n", "commitParents": ["b0ec7416912eeb0ca835bdead850f38c7e6e8851"], "spoonStatsSkippedReason": "", "commitHash": "378805c8de7c610a52c3e9f78d1299e46f4b5da7", "authoredDateTime": "2014-08-23 15:30:35", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 0, "lines": 3, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/channel/ChannelManager.java"}], "commitDateTime": "2014-08-23 15:30:35", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.ChannelManager"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.ChannelManager.upgradePipelineForWebSockets(io.netty.channel.ChannelPipeline)"}], "spoonFilePath": "ChannelManager.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/674", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 3, "deletions": 0, "lines": 3, "gitFilesChange": 1}, "title": "Continuation frames are not handled", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/channel"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Reported in Gatling: https://github.com/gatling/gatling/issues/2113\n\nAdding a `WebSocketFrameAggregator`.\n", "labels": ["Defect", "Netty"]}, {"created": "2014-08-23 11:55:30", "commits": {"b01e94ffa0b4295ede2950736b5e132bce45f789": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "6fb0966b1c6485c83200b004e36d9dfd2df8d597": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.providers.netty.channel.SslInitializer.connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)"], "closed": "2014-08-23 11:58:08", "filteredCommits": ["b01e94ffa0b4295ede2950736b5e132bce45f789"], "commitsDetails": [{"nameRev": "b01e94ffa0b4295ede2950736b5e132bce45f789 tags/2.0.0-alpha1~294", "commitMessage": "Target JDK7, use getHostString instead of getHostName, close #672\n", "commitParents": ["429cc63fc92ae720e0de31df4f77f8b202952869"], "spoonStatsSkippedReason": "", "commitHash": "b01e94ffa0b4295ede2950736b5e132bce45f789", "authoredDateTime": "2014-08-23 13:58:04", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/channel/SslInitializer.java"}], "commitDateTime": "2014-08-23 13:58:04", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.SslInitializer.connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)"}], "spoonFilePath": "SslInitializer.java"}]}, {"nameRev": "6fb0966b1c6485c83200b004e36d9dfd2df8d597 tags/async-http-client-1.9.0-BETA7~6", "commitMessage": "Target JDK7, use getHostString instead of getHostName, close #672\n", "commitParents": ["56d4f197ea1ed32ad4e4017aad0d583a7b8bf73d"], "spoonStatsSkippedReason": "", "commitHash": "6fb0966b1c6485c83200b004e36d9dfd2df8d597", "authoredDateTime": "2014-08-23 13:58:42", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 4, "lines": 8, "filePath": "pom.xml"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/providers/netty/channel/SslInitializer.java"}], "commitDateTime": "2014-08-23 13:58:42", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.channel.SslInitializer.connectRequested(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ChannelStateEvent)"}], "spoonFilePath": "SslInitializer.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/672", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "SslInitializer.connectRequested can be very long", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["providers/netty/src/main/java/org/asynchttpclient/providers/netty/channel"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "This is environment dependent. It's caused by the reverse DNS lookup in `remoteInetSocketAddress.getHostName()`. The solution is to target JDK7 and use `getHostString` instead.\n\nThe issue is critical enough to drop JDK6 support in AHC 1.9.\n", "labels": ["Defect", "Netty"]}, {"created": "2014-08-12 03:48:03", "commits": {"2d5e9226727a4018d973230e3b5d6d29d9877f65": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "21660bae880b13b4909a2e018648e3e9723ef2e2": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "closed": "2014-08-23 12:15:12", "filteredCommits": ["2d5e9226727a4018d973230e3b5d6d29d9877f65"], "commitsDetails": [{"nameRev": "2d5e9226727a4018d973230e3b5d6d29d9877f65 tags/async-http-client-1.9.0-BETA7~5", "commitMessage": "Wrong javadoc, close #666\n", "commitParents": ["6fb0966b1c6485c83200b004e36d9dfd2df8d597"], "spoonStatsSkippedReason": "", "commitHash": "2d5e9226727a4018d973230e3b5d6d29d9877f65", "authoredDateTime": "2014-08-23 14:15:32", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 1, "lines": 1, "filePath": "src/main/java/com/ning/http/client/Request.java"}], "commitDateTime": "2014-08-23 14:15:32", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "Request.java"}]}, {"nameRev": "21660bae880b13b4909a2e018648e3e9723ef2e2 tags/2.0.0-alpha1~292", "commitMessage": "Wrong javadoc, close #666\n", "commitParents": ["6918cced9415327adf2d636d66d84bb8d604c6fc"], "spoonStatsSkippedReason": "", "commitHash": "21660bae880b13b4909a2e018648e3e9723ef2e2", "authoredDateTime": "2014-08-23 14:15:08", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 0, "deletions": 1, "lines": 1, "filePath": "api/src/main/java/org/asynchttpclient/Request.java"}], "commitDateTime": "2014-08-23 14:15:08", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "Request.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/666", "ttf": 11.000277777777777, "gitStatsSummary": {"insertions": 0, "deletions": 1, "lines": 1, "gitFilesChange": 1}, "title": "Javadoc references non-existent method in Request", "statsSkippedReason": "", "user": "ebelisle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client"], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Javadoc added in a6d2db332b16d4f60e8a5cf15ea489e548b6bc6d.\n\nIn comment on line 33, execute is not a method on Request\n", "labels": ["Defect", "Documentation"]}, {"created": "2014-08-06 07:21:37", "commits": {"6918cced9415327adf2d636d66d84bb8d604c6fc": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.providers.netty.ws.NettyWebSocket.removeWebSocketListener(org.asynchttpclient.websocket.WebSocketListener)", "org.asynchttpclient.providers.netty.ws.NettyWebSocket.addWebSocketListener(org.asynchttpclient.websocket.WebSocketListener)"], "closed": "2014-08-23 12:12:40", "filteredCommits": ["6918cced9415327adf2d636d66d84bb8d604c6fc"], "commitsDetails": [{"nameRev": "6918cced9415327adf2d636d66d84bb8d604c6fc tags/2.0.0-alpha1~293", "commitMessage": "Do not block the WebSocket from receiving bytes or text fragments, close #660\n", "commitParents": ["b01e94ffa0b4295ede2950736b5e132bce45f789"], "spoonStatsSkippedReason": "", "commitHash": "6918cced9415327adf2d636d66d84bb8d604c6fc", "authoredDateTime": "2014-08-23 14:12:35", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 5, "lines": 8, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/ws/NettyWebSocket.java"}], "commitDateTime": "2014-08-23 14:12:35", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket.removeWebSocketListener(org.asynchttpclient.websocket.WebSocketListener)"}, {"UPD": 0, "TOT": 7, "MOV": 4, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket.addWebSocketListener(org.asynchttpclient.websocket.WebSocketListener)"}], "spoonFilePath": "NettyWebSocket.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/660", "ttf": 17.00027777777778, "gitStatsSummary": {"insertions": 3, "deletions": 5, "lines": 8, "gitFilesChange": 1}, "title": "Websocket listener does not receive text messages", "statsSkippedReason": "", "user": "myroslavlisniak", "changesInPackagesGIT": ["providers/netty/src/main/java/org/asynchttpclient/providers/netty/ws"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 9, "MOV": 5, "INS": 2, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Websocket listener does not receive text messages if listener implements both WebSocketTextListener and WebSocketByteListener together.\nVersion async-http-client-1.9.0-BETA6.\n", "labels": ["Defect", "Netty"]}, {"created": "2014-07-29 15:29:30", "commits": {"10ce13c253314c60fb759cf6c67f3e897bdbcfb7": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "0e4aa68fb9917f60b88e114b41eb9f3b97b4babe": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.ws.DefaultNettyWebSocket", "com.ning.http.client.providers.netty.ws.NettyWebSocket.fragments()", "com.ning.http.client.websocket.DefaultWebSocketListener.onFragment(java.lang.String,boolean)", "com.ning.http.client.providers.netty.ws.NettyWebSocket.notifyTextListeners(org.jboss.netty.buffer.ChannelBuffer)", "com.ning.http.client.providers.netty.ws.NettyWebSocket.bufferFragment(org.jboss.netty.buffer.ChannelBuffer)", "com.ning.http.client.websocket.onFragment(java.lang.String,boolean)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AHCWebSocketListenerAdapter.onFragment(org.glassfish.grizzly.websockets.WebSocket,java.lang.String,boolean)", "com.ning.http.client.websocket.onFragment(byte[],boolean)", "com.ning.http.client.providers.netty.ws.NettyWebSocket.hasWebSocketByteListener()", "com.ning.http.client.providers.netty.ws.NettyWebSocket.notifyByteListeners(org.jboss.netty.buffer.ChannelBuffer)", "com.ning.http.client.providers.netty.ws.NettyWebSocket.hasWebSocketTextListener()", "com.ning.http.client.providers.netty.ws.NettyWebSocket.removeWebSocketListener(com.ning.http.client.websocket.WebSocketListener)", "com.ning.http.client.providers.netty.ws.NettyWebSocket.onBinaryFragment(com.ning.http.client.HttpResponseBodyPart)", "com.ning.http.client.providers.netty.ws.NettyWebSocket.addWebSocketListener(com.ning.http.client.websocket.WebSocketListener)", "com.ning.http.client.providers.netty.ws.NettyWebSocket.reset()", "com.ning.http.client.websocket.DefaultWebSocketListener.onFragment(byte[],boolean)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AHCWebSocketListenerAdapter.onFragment(org.glassfish.grizzly.websockets.WebSocket,byte[],boolean)", "com.ning.http.client.providers.netty.ws.NettyWebSocket.onTextFragment(com.ning.http.client.HttpResponseBodyPart)", "com.ning.http.client.providers.netty.ws.NettyWebSocket", "com.ning.http.client.websocket"], "closed": "2014-07-30 13:57:00", "filteredCommits": ["10ce13c253314c60fb759cf6c67f3e897bdbcfb7"], "commitsDetails": [{"nameRev": "10ce13c253314c60fb759cf6c67f3e897bdbcfb7 tags/async-http-client-1.9.0-BETA6~2", "commitMessage": "Extract Fragment listening concern into dedicated interfaces, close #655\n", "commitParents": ["b86c5e7f184e2d731198ffa7caccbd9fbf265961"], "spoonStatsSkippedReason": "", "commitHash": "10ce13c253314c60fb759cf6c67f3e897bdbcfb7", "authoredDateTime": "2014-07-30 13:22:00", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 8, "lines": 8, "filePath": "src/main/java/com/ning/http/client/websocket/WebSocketTextListener.java"}, {"insertions": 26, "deletions": 0, "lines": 26, "filePath": "src/main/java/com/ning/http/client/websocket/WebSocketTextFragmentListener.java"}, {"insertions": 0, "deletions": 4, "lines": 4, "filePath": "src/test/java/com/ning/http/client/websocket/ProxyTunnellingTest.java"}, {"insertions": 0, "deletions": 8, "lines": 8, "filePath": "src/test/java/com/ning/http/client/websocket/CloseCodeReasonMessageTest.java"}, {"insertions": 0, "deletions": 8, "lines": 8, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java"}, {"insertions": 0, "deletions": 10, "lines": 10, "filePath": "src/main/java/com/ning/http/client/websocket/DefaultWebSocketListener.java"}, {"insertions": 5, "deletions": 19, "lines": 24, "filePath": "src/test/java/com/ning/http/client/websocket/ByteMessageTest.java"}, {"insertions": 0, "deletions": 123, "lines": 123, "filePath": "src/main/java/com/ning/http/client/providers/netty/ws/DefaultNettyWebSocket.java"}, {"insertions": 26, "deletions": 0, "lines": 26, "filePath": "src/main/java/com/ning/http/client/websocket/WebSocketByteFragmentListener.java"}, {"insertions": 0, "deletions": 8, "lines": 8, "filePath": "src/main/java/com/ning/http/client/websocket/WebSocketByteListener.java"}, {"insertions": 1, "deletions": 27, "lines": 28, "filePath": "src/test/java/com/ning/http/client/websocket/TextMessageTest.java"}, {"insertions": 151, "deletions": 20, "lines": 171, "filePath": "src/main/java/com/ning/http/client/providers/netty/ws/NettyWebSocket.java"}, {"insertions": 1, "deletions": 2, "lines": 3, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProviderConfig.java"}], "commitDateTime": "2014-07-30 13:22:00", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.websocket.ProxyTunnellingTest.runTest(java.lang.String).2.onFragment(java.lang.String,boolean)"}], "spoonFilePath": "ProxyTunnellingTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.websocket"}], "spoonFilePath": "WebSocketTextFragmentListener.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.websocket.onFragment(byte[],boolean)"}], "spoonFilePath": "WebSocketByteListener.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.websocket.DefaultWebSocketListener.onFragment(java.lang.String,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.websocket.DefaultWebSocketListener.onFragment(byte[],boolean)"}], "spoonFilePath": "DefaultWebSocketListener.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AHCWebSocketListenerAdapter.onFragment(org.glassfish.grizzly.websockets.WebSocket,byte[],boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AHCWebSocketListenerAdapter.onFragment(org.glassfish.grizzly.websockets.WebSocket,java.lang.String,boolean)"}], "spoonFilePath": "GrizzlyAsyncHttpProvider.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.websocket"}], "spoonFilePath": "WebSocketByteFragmentListener.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.websocket.onFragment(java.lang.String,boolean)"}], "spoonFilePath": "WebSocketTextListener.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.ws.DefaultNettyWebSocket"}], "spoonFilePath": "DefaultNettyWebSocket.java"}, {"spoonMethods": [], "spoonFilePath": "NettyAsyncHttpProviderConfig.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.websocket.CloseCodeReasonMessageTest.wrongStatusCode().1.onFragment(java.lang.String,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.websocket.CloseCodeReasonMessageTest.wrongProtocolCode().2.onFragment(java.lang.String,boolean)"}], "spoonFilePath": "CloseCodeReasonMessageTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.websocket.ByteMessageTest.echoByte().2.onFragment(byte[],boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.websocket.ByteMessageTest.echoFragments().5.onFragment(byte[],boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.websocket.ByteMessageTest.echoTwoMessagesTest().3.onFragment(byte[],boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.websocket.ByteMessageTest.echoOnOpenMessagesTest().4.onFragment(byte[],boolean)"}], "spoonFilePath": "ByteMessageTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.websocket.TextMessageTest.echoTwoMessagesTest().8.onFragment(java.lang.String,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.websocket.TextMessageTest.echoTextAndThenClose().10.onFragment(java.lang.String,boolean)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.websocket.TextMessageTest.onOpen()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.websocket.TextMessageTest.echoTwoMessagesTest().8"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.websocket.TextMessageTest.echoText().5.onFragment(java.lang.String,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.websocket.TextMessageTest.echoFragments().9.onFragment(java.lang.String,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.websocket.TextMessageTest.echoDoubleListenerText().7.onFragment(java.lang.String,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.websocket.TextMessageTest.echoDoubleListenerText().6.onFragment(java.lang.String,boolean)"}], "spoonFilePath": "TextMessageTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.ws.NettyWebSocket.fragments()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.ws.NettyWebSocket.notifyTextListeners(org.jboss.netty.buffer.ChannelBuffer)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.ws.NettyWebSocket.bufferFragment(org.jboss.netty.buffer.ChannelBuffer)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.ws.NettyWebSocket.reset()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.ws.NettyWebSocket.hasWebSocketByteListener()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.ws.NettyWebSocket.notifyByteListeners(org.jboss.netty.buffer.ChannelBuffer)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.ws.NettyWebSocket.hasWebSocketTextListener()"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.ws.NettyWebSocket.removeWebSocketListener(com.ning.http.client.websocket.WebSocketListener)"}, {"UPD": 0, "TOT": 4, "MOV": 1, "INS": 2, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.ws.NettyWebSocket.onBinaryFragment(com.ning.http.client.HttpResponseBodyPart)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.ws.NettyWebSocket.addWebSocketListener(com.ning.http.client.websocket.WebSocketListener)"}, {"UPD": 0, "TOT": 4, "MOV": 1, "INS": 2, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.ws.NettyWebSocket.onTextFragment(com.ning.http.client.HttpResponseBodyPart)"}, {"UPD": 1, "TOT": 9, "MOV": 1, "INS": 6, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.ws.NettyWebSocket"}], "spoonFilePath": "NettyWebSocket.java"}]}, {"nameRev": "0e4aa68fb9917f60b88e114b41eb9f3b97b4babe tags/2.0.0-alpha1~306", "commitMessage": "Extract Fragment listening concern into dedicated interfaces, close #655\n", "commitParents": ["2c38d0148108c4f1aae609a54f14bc8aa6e78818"], "spoonStatsSkippedReason": "", "commitHash": "0e4aa68fb9917f60b88e114b41eb9f3b97b4babe", "authoredDateTime": "2014-07-30 15:59:10", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 163, "deletions": 23, "lines": 186, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/ws/NettyWebSocket.java"}, {"insertions": 0, "deletions": 24, "lines": 24, "filePath": "api/src/test/java/org/asynchttpclient/websocket/TextMessageTest.java"}, {"insertions": 0, "deletions": 14, "lines": 14, "filePath": "api/src/main/java/org/asynchttpclient/websocket/DefaultWebSocketListener.java"}, {"insertions": 0, "deletions": 8, "lines": 8, "filePath": "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/websocket/AHCWebSocketListenerAdapter.java"}, {"insertions": 26, "deletions": 0, "lines": 26, "filePath": "api/src/main/java/org/asynchttpclient/websocket/WebSocketTextFragmentListener.java"}, {"insertions": 0, "deletions": 8, "lines": 8, "filePath": "api/src/main/java/org/asynchttpclient/websocket/WebSocketTextListener.java"}, {"insertions": 0, "deletions": 4, "lines": 4, "filePath": "api/src/test/java/org/asynchttpclient/websocket/ProxyTunnellingTest.java"}, {"insertions": 26, "deletions": 0, "lines": 26, "filePath": "api/src/main/java/org/asynchttpclient/websocket/WebSocketByteFragmentListener.java"}, {"insertions": 0, "deletions": 8, "lines": 8, "filePath": "api/src/test/java/org/asynchttpclient/websocket/CloseCodeReasonMessageTest.java"}, {"insertions": 1, "deletions": 8, "lines": 9, "filePath": "api/src/main/java/org/asynchttpclient/websocket/WebSocketByteListener.java"}, {"insertions": 1, "deletions": 2, "lines": 3, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/NettyAsyncHttpProviderConfig.java"}, {"insertions": 0, "deletions": 124, "lines": 124, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/ws/DefaultNettyWebSocket.java"}, {"insertions": 0, "deletions": 12, "lines": 12, "filePath": "api/src/test/java/org/asynchttpclient/websocket/ByteMessageTest.java"}], "commitDateTime": "2014-07-30 15:59:11", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.websocket.TextMessageTest.echoFragments().9.onFragment(java.lang.String,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.websocket.TextMessageTest.echoDoubleListenerText().6.onFragment(java.lang.String,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.websocket.TextMessageTest.echoTextAndThenClose().10.onFragment(java.lang.String,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.websocket.TextMessageTest.echoTwoMessagesTest().8.onFragment(java.lang.String,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.websocket.TextMessageTest.echoText().5.onFragment(java.lang.String,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.websocket.TextMessageTest.echoDoubleListenerText().7.onFragment(java.lang.String,boolean)"}], "spoonFilePath": "TextMessageTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.DefaultNettyWebSocket"}], "spoonFilePath": "DefaultNettyWebSocket.java"}, {"spoonMethods": [], "spoonFilePath": "NettyAsyncHttpProviderConfig.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.websocket.onFragment(byte[],boolean)"}], "spoonFilePath": "WebSocketByteListener.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.websocket.DefaultWebSocketListener.onFragment(byte[],boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.websocket.DefaultWebSocketListener.onFragment(java.lang.String,boolean)"}], "spoonFilePath": "DefaultWebSocketListener.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.websocket"}], "spoonFilePath": "WebSocketByteFragmentListener.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.websocket.onFragment(java.lang.String,boolean)"}], "spoonFilePath": "WebSocketTextListener.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.websocket"}], "spoonFilePath": "WebSocketTextFragmentListener.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.grizzly.websocket.AHCWebSocketListenerAdapter.onFragment(org.glassfish.grizzly.websockets.WebSocket,java.lang.String,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.grizzly.websocket.AHCWebSocketListenerAdapter.onFragment(org.glassfish.grizzly.websockets.WebSocket,byte[],boolean)"}], "spoonFilePath": "AHCWebSocketListenerAdapter.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.websocket.CloseCodeReasonMessageTest.wrongProtocolCode().3.onFragment(java.lang.String,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.websocket.CloseCodeReasonMessageTest.wrongStatusCode().2.onFragment(java.lang.String,boolean)"}], "spoonFilePath": "CloseCodeReasonMessageTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.websocket.ByteMessageTest.echoTwoMessagesTest().3.onFragment(byte[],boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.websocket.ByteMessageTest.echoOnOpenMessagesTest().4.onFragment(byte[],boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.websocket.ByteMessageTest.echoByte().2.onFragment(byte[],boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.websocket.ByteMessageTest.echoFragments().5.onFragment(byte[],boolean)"}], "spoonFilePath": "ByteMessageTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.websocket.ProxyTunnellingTest.runTest(boolean).2.onFragment(java.lang.String,boolean)"}], "spoonFilePath": "ProxyTunnellingTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket.sendMessage(byte[])"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket.hasWebSocketByteListener()"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket.sendPong(byte[])"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket.reset()"}, {"UPD": 2, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket.sendPing(byte[])"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket.fragmentsBytes()"}, {"UPD": 1, "TOT": 9, "MOV": 1, "INS": 6, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket.notifyTextListeners(byte[])"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket.notifyByteListeners(byte[])"}, {"UPD": 0, "TOT": 4, "MOV": 1, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket.onTextFragment(org.asynchttpclient.HttpResponseBodyPart)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket.fragments()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket.bufferFragment(byte[])"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket.hasWebSocketTextListener()"}, {"UPD": 0, "TOT": 4, "MOV": 1, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket.onBinaryFragment(org.asynchttpclient.HttpResponseBodyPart)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket.removeWebSocketListener(org.asynchttpclient.websocket.WebSocketListener)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket.addWebSocketListener(org.asynchttpclient.websocket.WebSocketListener)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket.sendTextMessage(java.lang.String)"}], "spoonFilePath": "NettyWebSocket.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/655", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 204, "deletions": 179, "lines": 383, "gitFilesChange": 9}, "title": "Netty WebSocket decodes partial text frames", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/grizzly", "src/main/java/com/ning/http/client/providers/netty/ws", "src/main/java/com/ning/http/client/providers/netty", "src/main/java/com/ning/http/client/websocket"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 20, "TOT": 37, "MOV": 5, "INS": 21, "DEL": 10, "spoonFilesChanged": 8}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "From http://tools.ietf.org/html/rfc6455 5.6:\n\n> The \"Payload data\" is text data encoded as UTF-8.  Note that a particular text frame might include a partial UTF-8 sequence; however, the whole message MUST contain valid UTF-8.\n\nBut Netty provider decodes every text frame data into UTF-8.\nLooks like a bug to me. @jfarcand WDYT?\n", "labels": ["Defect", "Netty"]}, {"created": "2014-07-28 10:15:00", "commits": {"80441ac634efd81efa38633164463eba1e0c2213": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2014-07-28 10:17:02", "filteredCommits": [], "commitsDetails": [{"nameRev": "80441ac634efd81efa38633164463eba1e0c2213 tags/async-http-client-1.9.0-BETA6~23", "commitMessage": "NettyFileBody ignores offset parameter, close #653, close #650\n", "commitParents": ["014201425e2de2763ffb7d6e28c1bc31437c83c6"], "spoonStatsSkippedReason": "", "commitHash": "80441ac634efd81efa38633164463eba1e0c2213", "authoredDateTime": "2014-07-28 12:16:07", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 4, "lines": 6, "filePath": "src/main/java/com/ning/http/client/providers/netty/request/body/NettyFileBody.java"}], "commitDateTime": "2014-07-28 12:16:07", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.body.NettyFileBody"}, {"UPD": 1, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.request.body.NettyFileBody.write(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,com.ning.http.client.AsyncHttpClientConfig)"}], "spoonFilePath": "NettyFileBody.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/653", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "NettyFileBody ignores offset parameter", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2014-07-28 09:04:16", "commits": {"eaf6109e3081d56df0da99b305d80d8d00bac3e9": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "d1a4182b91d1f73e44616aaca946fa00318c97d9": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.multipart.StringPart.charsetOrDefault(java.lang.String)", "org.asynchttpclient.multipart.StringPart"], "closed": "2014-07-28 09:17:27", "filteredCommits": ["eaf6109e3081d56df0da99b305d80d8d00bac3e9"], "commitsDetails": [{"nameRev": "eaf6109e3081d56df0da99b305d80d8d00bac3e9 tags/2.0.0-alpha1~326", "commitMessage": "Fix NPE when passing a null charset, close #651\n", "commitParents": ["cec8290eb87c56100656f40c85416a0432ded6e1"], "spoonStatsSkippedReason": "", "commitHash": "eaf6109e3081d56df0da99b305d80d8d00bac3e9", "authoredDateTime": "2014-07-28 11:17:23", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 11, "deletions": 7, "lines": 18, "filePath": "api/src/main/java/org/asynchttpclient/multipart/StringPart.java"}], "commitDateTime": "2014-07-28 11:17:23", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.multipart.StringPart.charsetOrDefault(java.lang.String)"}, {"UPD": 1, "TOT": 8, "MOV": 2, "INS": 3, "DEL": 2, "spoonMethodName": "org.asynchttpclient.multipart.StringPart"}], "spoonFilePath": "StringPart.java"}]}, {"nameRev": "d1a4182b91d1f73e44616aaca946fa00318c97d9 tags/async-http-client-1.9.0-BETA6~26", "commitMessage": "Fix NPE when passing a null charset, close #651\n", "commitParents": ["d536b47a031c69b3ef995aea62980fe9d17376e7"], "spoonStatsSkippedReason": "", "commitHash": "d1a4182b91d1f73e44616aaca946fa00318c97d9", "authoredDateTime": "2014-07-28 11:14:12", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 13, "deletions": 7, "lines": 20, "filePath": "src/main/java/com/ning/http/client/multipart/StringPart.java"}], "commitDateTime": "2014-07-28 11:14:12", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 8, "MOV": 2, "INS": 3, "DEL": 2, "spoonMethodName": "com.ning.http.client.multipart.StringPart"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.multipart.StringPart.charsetOrDefault(java.lang.String)"}], "spoonFilePath": "StringPart.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/651", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 11, "deletions": 7, "lines": 18, "gitFilesChange": 1}, "title": "Null charset not allowed for StringPart", "statsSkippedReason": "", "user": "jeffmaury", "changesInPackagesGIT": ["api/src/main/java/org/asynchttpclient/multipart"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 2, "TOT": 9, "MOV": 2, "INS": 4, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Although a default charset is defined for StringPart, the given null charset parameter is used for conversion in the late initialisation causing a NPE\n", "labels": ["Defect"]}, {"created": "2014-07-25 11:24:49", "commits": {"41e4c4716cb0876be4b5f97639572be86312a9e2": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "5ec89ae2912ecf9038f2d3939dff18af9774b581": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.AsyncHttpClientConfig.Builder", "org.asynchttpclient.AsyncHttpClientConfig.Builder.build()", "org.asynchttpclient.util.AllowAllHostnameVerifier", "org.asynchttpclient.AsyncHttpClientConfigBean.configureDefaults()", "org.asynchttpclient.AsyncHttpClientConfigDefaults.defaultHostnameVerifier()"], "closed": "2014-07-25 12:18:43", "filteredCommits": ["41e4c4716cb0876be4b5f97639572be86312a9e2"], "commitsDetails": [{"nameRev": "41e4c4716cb0876be4b5f97639572be86312a9e2 tags/2.0.0-alpha1~328", "commitMessage": "Make acceptAnyCertificate doesn't disable HostnameVerifier, close #649\n", "commitParents": ["e19c611843dc12b2702045896e4c992dba78e6ca"], "spoonStatsSkippedReason": "", "commitHash": "41e4c4716cb0876be4b5f97639572be86312a9e2", "authoredDateTime": "2014-07-25 14:18:38", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 0, "deletions": 1, "lines": 1, "filePath": "api/src/main/java/org/asynchttpclient/AsyncHttpClientConfigBean.java"}, {"insertions": 19, "deletions": 16, "lines": 35, "filePath": "api/src/main/java/org/asynchttpclient/AsyncHttpClientConfig.java"}, {"insertions": 0, "deletions": 22, "lines": 22, "filePath": "api/src/main/java/org/asynchttpclient/util/AllowAllHostnameVerifier.java"}, {"insertions": 0, "deletions": 4, "lines": 4, "filePath": "api/src/main/java/org/asynchttpclient/AsyncHttpClientConfigDefaults.java"}], "commitDateTime": "2014-07-25 14:18:38", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.AsyncHttpClientConfigDefaults.defaultHostnameVerifier()"}], "spoonFilePath": "AsyncHttpClientConfigDefaults.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.AsyncHttpClientConfig.Builder"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.AsyncHttpClientConfig.Builder.build()"}], "spoonFilePath": "AsyncHttpClientConfig.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.util.AllowAllHostnameVerifier"}], "spoonFilePath": "AllowAllHostnameVerifier.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.AsyncHttpClientConfigBean.configureDefaults()"}], "spoonFilePath": "AsyncHttpClientConfigBean.java"}]}, {"nameRev": "5ec89ae2912ecf9038f2d3939dff18af9774b581 tags/async-http-client-1.9.0-BETA5~2", "commitMessage": "Make acceptAnyCertificate doesn't disable HostnameVerifier, close #649\n", "commitParents": ["884744175d50ced5ccfe4babc728b00d6d0275df"], "spoonStatsSkippedReason": "", "commitHash": "5ec89ae2912ecf9038f2d3939dff18af9774b581", "authoredDateTime": "2014-07-25 13:29:06", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 22, "lines": 22, "filePath": "src/main/java/com/ning/http/util/AllowAllHostnameVerifier.java"}, {"insertions": 0, "deletions": 8, "lines": 8, "filePath": "src/main/java/com/ning/http/client/AsyncHttpClientConfigDefaults.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "src/main/java/com/ning/http/client/AsyncHttpClientConfigBean.java"}, {"insertions": 11, "deletions": 8, "lines": 19, "filePath": "src/main/java/com/ning/http/client/AsyncHttpClientConfig.java"}], "commitDateTime": "2014-07-25 13:29:06", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.AsyncHttpClientConfigDefaults.defaultHostnameVerifier()"}], "spoonFilePath": "AsyncHttpClientConfigDefaults.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.AsyncHttpClientConfig.Builder"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.AsyncHttpClientConfig.Builder.build()"}], "spoonFilePath": "AsyncHttpClientConfig.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.util.AllowAllHostnameVerifier"}], "spoonFilePath": "AllowAllHostnameVerifier.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.AsyncHttpClientConfigBean.configureDefaults()"}], "spoonFilePath": "AsyncHttpClientConfigBean.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/649", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 19, "deletions": 43, "lines": 62, "gitFilesChange": 4}, "title": "acceptAnyCertificate doesn't disable HostnameVerifier", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["api/src/main/java/org/asynchttpclient", "api/src/main/java/org/asynchttpclient/util"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 5, "TOT": 5, "MOV": 0, "INS": 1, "DEL": 4, "spoonFilesChanged": 4}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2014-07-24 12:30:30", "commits": {"dc8e3a82c274149323a3d5d2ac978e4414d63a68": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "92023dabaacceee52c56d1702bec45fe11aad664": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.multipart.ByteArrayPart", "com.ning.http.client.multipart.AbstractFilePart", "com.ning.http.client.multipart.StringPart", "com.ning.http.client.multipart.FilePart", "com.ning.http.client.multipart.PartBase"], "closed": "2014-07-24 12:37:09", "filteredCommits": ["dc8e3a82c274149323a3d5d2ac978e4414d63a68"], "commitsDetails": [{"nameRev": "dc8e3a82c274149323a3d5d2ac978e4414d63a68 tags/async-http-client-1.9.0-BETA4~2", "commitMessage": "Make transferEncoding configurable, fix FilePart constructors, close #647\n", "commitParents": ["2655fcf5382cd385661c0f462bcb08c4374b9582"], "spoonStatsSkippedReason": "", "commitHash": "dc8e3a82c274149323a3d5d2ac978e4414d63a68", "authoredDateTime": "2014-07-24 14:30:43", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 2, "lines": 3, "filePath": "src/main/java/com/ning/http/client/multipart/StringPart.java"}, {"insertions": 7, "deletions": 4, "lines": 11, "filePath": "src/main/java/com/ning/http/client/multipart/ByteArrayPart.java"}, {"insertions": 7, "deletions": 3, "lines": 10, "filePath": "src/main/java/com/ning/http/client/multipart/PartBase.java"}, {"insertions": 6, "deletions": 3, "lines": 9, "filePath": "src/main/java/com/ning/http/client/multipart/AbstractFilePart.java"}, {"insertions": 14, "deletions": 13, "lines": 27, "filePath": "src/main/java/com/ning/http/client/multipart/FilePart.java"}], "commitDateTime": "2014-07-24 14:30:43", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 2, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.multipart.PartBase"}], "spoonFilePath": "PartBase.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.multipart.StringPart"}], "spoonFilePath": "StringPart.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 0, "INS": 3, "DEL": 2, "spoonMethodName": "com.ning.http.client.multipart.AbstractFilePart"}], "spoonFilePath": "AbstractFilePart.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 9, "MOV": 1, "INS": 4, "DEL": 4, "spoonMethodName": "com.ning.http.client.multipart.FilePart"}], "spoonFilePath": "FilePart.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.ning.http.client.multipart.ByteArrayPart"}], "spoonFilePath": "ByteArrayPart.java"}]}, {"nameRev": "92023dabaacceee52c56d1702bec45fe11aad664 tags/2.0.0-alpha1~334", "commitMessage": "Make transferEncoding configurable, fix FilePart constructors, close #647\n", "commitParents": ["e57085973be212c20dc5af95c5aa2e9fc49790c4"], "spoonStatsSkippedReason": "", "commitHash": "92023dabaacceee52c56d1702bec45fe11aad664", "authoredDateTime": "2014-07-24 14:37:01", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 3, "lines": 6, "filePath": "api/src/main/java/org/asynchttpclient/multipart/PartBase.java"}, {"insertions": 6, "deletions": 3, "lines": 9, "filePath": "api/src/main/java/org/asynchttpclient/multipart/AbstractFilePart.java"}, {"insertions": 7, "deletions": 4, "lines": 11, "filePath": "api/src/main/java/org/asynchttpclient/multipart/ByteArrayPart.java"}, {"insertions": 14, "deletions": 13, "lines": 27, "filePath": "api/src/main/java/org/asynchttpclient/multipart/FilePart.java"}], "commitDateTime": "2014-07-24 14:37:01", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.multipart.PartBase"}], "spoonFilePath": "PartBase.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 0, "INS": 3, "DEL": 2, "spoonMethodName": "org.asynchttpclient.multipart.AbstractFilePart"}], "spoonFilePath": "AbstractFilePart.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 9, "MOV": 1, "INS": 4, "DEL": 4, "spoonMethodName": "org.asynchttpclient.multipart.FilePart"}], "spoonFilePath": "FilePart.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.multipart.ByteArrayPart"}], "spoonFilePath": "ByteArrayPart.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/647", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 35, "deletions": 25, "lines": 60, "gitFilesChange": 5}, "title": "FilePart constructors buggy + transfertEncoding not configurable", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/multipart"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 5, "TOT": 22, "MOV": 3, "INS": 12, "DEL": 7, "spoonFilesChanged": 5}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Enhancement"]}, {"created": "2014-07-24 12:02:50", "commits": {"d0b727d6f0605dacf71e4fdd066e73ad643ddb62": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.NettyAsyncHttpProviderConfig.getSslEngineFactory()", "com.ning.http.client.providers.netty.NettyAsyncHttpProviderConfig", "com.ning.http.client", "com.ning.http.client.providers.netty.NettyAsyncHttpProviderConfig.setSslEngineFactory(com.ning.http.client.SSLEngineFactory)", "com.ning.http.client.providers.netty.channel.ChannelManager.createSslHandler(java.lang.String,int)"], "closed": "2014-07-24 12:03:34", "filteredCommits": ["d0b727d6f0605dacf71e4fdd066e73ad643ddb62"], "commitsDetails": [{"nameRev": "d0b727d6f0605dacf71e4fdd066e73ad643ddb62 tags/async-http-client-1.9.0-BETA4~4", "commitMessage": "Properly set SSLEngine client mode, back port SSLEngineFactory, close #646\n", "commitParents": ["d78a94bdd3776f2d782e2074dd0966c58b274bbf"], "spoonStatsSkippedReason": "", "commitHash": "d0b727d6f0605dacf71e4fdd066e73ad643ddb62", "authoredDateTime": "2014-07-24 14:03:24", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 15, "deletions": 4, "lines": 19, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProviderConfig.java"}, {"insertions": 31, "deletions": 0, "lines": 31, "filePath": "src/main/java/com/ning/http/client/SSLEngineFactory.java"}, {"insertions": 14, "deletions": 1, "lines": 15, "filePath": "src/main/java/com/ning/http/client/providers/netty/channel/ChannelManager.java"}], "commitDateTime": "2014-07-24 14:03:24", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProviderConfig"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProviderConfig.getSslEngineFactory()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProviderConfig.setSslEngineFactory(com.ning.http.client.SSLEngineFactory)"}], "spoonFilePath": "NettyAsyncHttpProviderConfig.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client"}], "spoonFilePath": "SSLEngineFactory.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 2, "INS": 2, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.channel.ChannelManager.createSslHandler(java.lang.String,int)"}], "spoonFilePath": "ChannelManager.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/646", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 60, "deletions": 5, "lines": 65, "gitFilesChange": 3}, "title": "SslEngine client mode not set", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/channel", "src/main/java/com/ning/http/client", "src/main/java/com/ning/http/client/providers/netty"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 5, "TOT": 10, "MOV": 3, "INS": 6, "DEL": 1, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "In 1.9.0-BETA3\n", "labels": ["Defect", "Netty"]}, {"created": "2014-07-22 01:27:54", "commits": {"399d78c9dd79d30d3e5e63363d1e27ad1bd2cd84": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}, "b86ca63c239e726cccb5f7045dba6886cd108d8f": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}, "765d4003c5c0c50580744468e7b37a806e30dda1": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}}, "numCommits": 3, "changesInPackagesSPOON": ["org.asynchttpclient.providers.grizzly.EventHandler.onHttpHeaderParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.Buffer,org.glassfish.grizzly.filterchain.FilterChainContext)", "org.asynchttpclient.providers.grizzly.filters.TunnelFilter.handleEvent(org.glassfish.grizzly.filterchain.FilterChainContext,org.glassfish.grizzly.filterchain.FilterChainEvent)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpHeaderParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.Buffer,org.glassfish.grizzly.filterchain.FilterChainContext)", "org.asynchttpclient.providers.grizzly.filters.ProxyFilter.generateAuthHeader(org.asynchttpclient.Realm)", "org.asynchttpclient.providers.grizzly.filters.AsyncHttpClientEventFilter.onHttpHeaderParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.Buffer,org.glassfish.grizzly.filterchain.FilterChainContext)"], "closed": "2014-07-22 23:36:23", "filteredCommits": ["b86ca63c239e726cccb5f7045dba6886cd108d8f", "765d4003c5c0c50580744468e7b37a806e30dda1", "399d78c9dd79d30d3e5e63363d1e27ad1bd2cd84"], "commitsDetails": [{"nameRev": "399d78c9dd79d30d3e5e63363d1e27ad1bd2cd84 tags/2.0.0-alpha1~340", "commitMessage": "[master] + fix issue #637\nhttps://github.com/AsyncHttpClient/async-http-client/issues/637\n\"AHC with Grizzly provider not handling SSL Connect/tunnelling with Proxy\"", "commitParents": ["4ae7bc92e8a7b0e6b45e535ac2488bd1e8b929ff"], "spoonStatsSkippedReason": "", "commitHash": "399d78c9dd79d30d3e5e63363d1e27ad1bd2cd84", "authoredDateTime": "2014-07-22 11:58:28", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/filters/ProxyFilter.java"}, {"insertions": 8, "deletions": 0, "lines": 8, "filePath": "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/filters/AsyncHttpClientEventFilter.java"}, {"insertions": 15, "deletions": 0, "lines": 15, "filePath": "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/EventHandler.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/filters/TunnelFilter.java"}], "commitDateTime": "2014-07-22 11:58:28", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.grizzly.filters.ProxyFilter.generateAuthHeader(org.asynchttpclient.Realm)"}], "spoonFilePath": "ProxyFilter.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.grizzly.filters.TunnelFilter.handleEvent(org.glassfish.grizzly.filterchain.FilterChainContext,org.glassfish.grizzly.filterchain.FilterChainEvent)"}], "spoonFilePath": "TunnelFilter.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.grizzly.EventHandler.onHttpHeaderParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.Buffer,org.glassfish.grizzly.filterchain.FilterChainContext)"}], "spoonFilePath": "EventHandler.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.grizzly.filters.AsyncHttpClientEventFilter.onHttpHeaderParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.Buffer,org.glassfish.grizzly.filterchain.FilterChainContext)"}], "spoonFilePath": "AsyncHttpClientEventFilter.java"}]}, {"nameRev": "b86ca63c239e726cccb5f7045dba6886cd108d8f tags/async-http-client-1.9.0-BETA3~15", "commitMessage": "[1.9.x] + fix issue #637\nhttps://github.com/AsyncHttpClient/async-http-client/issues/637\n\"AHC with Grizzly provider not handling SSL Connect/tunnelling with Proxy\"\n", "commitParents": ["da26da02444b9e6c1313233e5ef65ace9b7f1950"], "spoonStatsSkippedReason": "", "commitHash": "b86ca63c239e726cccb5f7045dba6886cd108d8f", "authoredDateTime": "2014-07-21 18:28:42", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 16, "deletions": 0, "lines": 16, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java"}], "commitDateTime": "2014-07-21 18:57:57", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpHeaderParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.Buffer,org.glassfish.grizzly.filterchain.FilterChainContext)"}], "spoonFilePath": "GrizzlyAsyncHttpProvider.java"}]}, {"nameRev": "765d4003c5c0c50580744468e7b37a806e30dda1 tags/async-http-client-1.8.13~3", "commitMessage": "[1.8.x] + fix issue #637\nhttps://github.com/AsyncHttpClient/async-http-client/issues/637\n\"AHC with Grizzly provider not handling SSL Connect/tunnelling with Proxy\"", "commitParents": ["3cb79519cef8e7b268754770c9e4925b9d3ca9d2"], "spoonStatsSkippedReason": "", "commitHash": "765d4003c5c0c50580744468e7b37a806e30dda1", "authoredDateTime": "2014-07-21 18:39:02", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 16, "deletions": 1, "lines": 17, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java"}], "commitDateTime": "2014-07-21 18:39:02", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpHeaderParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.Buffer,org.glassfish.grizzly.filterchain.FilterChainContext)"}], "spoonFilePath": "GrizzlyAsyncHttpProvider.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/637", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 58, "deletions": 4, "lines": 62, "gitFilesChange": 5}, "title": "[grizzly-provider] AHC with Grizzly provider not handling SSL Connect/tunnelling with Proxy", "statsSkippedReason": "", "user": "oleksiys", "changesInPackagesGIT": ["providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly", "src/main/java/com/ning/http/client/providers/grizzly", "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/filters"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 5, "TOT": 8, "MOV": 1, "INS": 6, "DEL": 1, "spoonFilesChanged": 5}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "as per the summary\n", "labels": ["Defect", "Grizzly"]}, {"created": "2014-07-21 10:47:18", "user": "thekiki", "body": "got exception error message as below, different parts of the message point to different hosts (pd1025, pd1036), anyone can help me to find out what probably be the root cause of this issue?\n\nI am using version 1.8.4 and send requests to different hosts with single client instance. \n\nhttp client execution error\njava.util.concurrent.ExecutionException: java.net.ConnectException: connection timed out: pd1025.xxx.com/10.220.71.23:4081 to http://pd1036.xxx.com:4081/event/feed?format=ffi\nat com.ning.http.client.providers.netty.NettyResponseFuture.abort(NettyResponseFuture.java:341)\nat com.ning.http.client.providers.netty.NettyConnectListener.operationComplete(NettyConnectListener.java:107)\nat org.jboss.netty.channel.DefaultChannelFuture.notifyListener(DefaultChannelFuture.java:427)\nat org.jboss.netty.channel.DefaultChannelFuture.notifyListeners(DefaultChannelFuture.java:418)\nat org.jboss.netty.channel.DefaultChannelFuture.setFailure(DefaultChannelFuture.java:380)\nat org.jboss.netty.channel.socket.nio.NioClientBoss.processConnectTimeout(NioClientBoss.java:140)\nat org.jboss.netty.channel.socket.nio.NioClientBoss.process(NioClientBoss.java:83)\nat org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:318)\nat org.jboss.netty.channel.socket.nio.NioClientBoss.run(NioClientBoss.java:42)\nat org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\nat org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\nat java.lang.Thread.run(Thread.java:745)\nCaused by: java.net.ConnectException: connection timed out: pd1025.xxx.com/10.220.71.23:4081 to http://pd1036.xxx.com:4081/event/feed?format=ffi\nat com.ning.http.client.providers.netty.NettyConnectListener.operationComplete(NettyConnectListener.java:103)\n... 12 more\nCaused by: org.jboss.netty.channel.ConnectTimeoutException: connection timed out: pd1025.xxx.com/10.220.71.23:4081\nat org.jboss.netty.channel.socket.nio.NioClientBoss.processConnectTimeout(NioClientBoss.java:137)\nat org.jboss.netty.channel.socket.nio.NioClientBoss.process(NioClientBoss.java:83)\nat org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:318)\n", "closed": "2014-08-23 11:50:26", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/634", "ttf": 33.000277777777775, "commits": {}, "labels": ["Defect", "Netty"], "title": "Conflicted error message from ConnectionException"}, {"created": "2014-07-17 13:25:23", "commits": {"3fe163435c14e1c7ad59f3efa00b2c95f8f0ff50": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}, "5243cc436c87667a945fe90091138aaba524142a": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "e6f542bfc8e90dcd71d987382c01158cac7fc249": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}, "04df4e266e36704e74bea7b5db6f96913ff35875": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 2, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.future.NettyResponseFuture.isDone()", "com.ning.http.client.providers.netty.future.NettyResponseFuture.getContent()", "com.ning.http.client.providers.netty.future.NettyResponseFuture.abort(java.lang.Throwable)"], "closed": "2015-01-15 08:06:21", "filteredCommits": ["5243cc436c87667a945fe90091138aaba524142a", "e6f542bfc8e90dcd71d987382c01158cac7fc249", "3fe163435c14e1c7ad59f3efa00b2c95f8f0ff50"], "commitsDetails": [{"nameRev": "3fe163435c14e1c7ad59f3efa00b2c95f8f0ff50 tags/async-http-client-1.9.6~7", "commitMessage": "[1.9.x] + fix the test for issue #633\nhttps://github.com/AsyncHttpClient/async-http-client/issues/633\n\"AHC Future.get should throw CancellationException when it was cancelled\"", "commitParents": ["e6f542bfc8e90dcd71d987382c01158cac7fc249"], "spoonStatsSkippedReason": "", "commitHash": "3fe163435c14e1c7ad59f3efa00b2c95f8f0ff50", "authoredDateTime": "2015-01-14 15:30:17", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 8, "deletions": 3, "lines": 11, "filePath": "src/test/java/com/ning/http/client/async/AsyncProvidersBasicTest.java"}], "commitDateTime": "2015-01-14 15:30:31", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 7, "MOV": 3, "INS": 1, "DEL": 2, "spoonMethodName": "com.ning.http.client.async.AsyncProvidersBasicTest.asyncDoPostDelayCancelTest()"}], "spoonFilePath": "AsyncProvidersBasicTest.java"}]}, {"nameRev": "5243cc436c87667a945fe90091138aaba524142a tags/async-http-client-1.9.6~5", "commitMessage": "AHC Future.get should throw CancellationException when it was cancelled, close #633\n", "commitParents": ["8f21dfd2fcd89825b33282564ab84ab1559d0960"], "spoonStatsSkippedReason": "", "commitHash": "5243cc436c87667a945fe90091138aaba524142a", "authoredDateTime": "2015-01-15 08:59:29", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 5, "deletions": 2, "lines": 7, "filePath": "src/main/java/com/ning/http/client/providers/netty/future/NettyResponseFuture.java"}, {"insertions": 3, "deletions": 8, "lines": 11, "filePath": "src/test/java/com/ning/http/client/async/AsyncProvidersBasicTest.java"}], "commitDateTime": "2015-01-15 08:59:29", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.async.AsyncProvidersBasicTest.asyncDoPostDelayCancelTest()"}], "spoonFilePath": "AsyncProvidersBasicTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.future.NettyResponseFuture.isDone()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.future.NettyResponseFuture.getContent()"}, {"UPD": 1, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.future.NettyResponseFuture.abort(java.lang.Throwable)"}], "spoonFilePath": "NettyResponseFuture.java"}]}, {"nameRev": "e6f542bfc8e90dcd71d987382c01158cac7fc249 tags/async-http-client-1.9.6~8", "commitMessage": "[1.9.x]\n+ Integrate Grizzly 2.3.18\n+ Grizzly minor refactoring\n+ fix issue #633 (Grizzly)\nhttps://github.com/AsyncHttpClient/async-http-client/issues/633\n\"AHC Future.get should throw CancellationException when it was cancelled\"\n", "commitParents": ["66fed01a1b6733ffa3845275ac8c702acb622681"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "e6f542bfc8e90dcd71d987382c01158cac7fc249", "authoredDateTime": "2015-01-14 13:39:23", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "pom.xml"}, {"insertions": 2, "deletions": 6, "lines": 8, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyResponseStatus.java"}, {"insertions": 49, "deletions": 56, "lines": 105, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyResponseFuture.java"}, {"insertions": 33, "deletions": 0, "lines": 33, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/StatusHandler.java"}, {"insertions": 195, "deletions": 0, "lines": 195, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/HttpTransactionContext.java"}, {"insertions": 7, "deletions": 8, "lines": 15, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/FeedableBodyGenerator.java"}, {"insertions": 5, "deletions": 5, "lines": 10, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyResponseHeaders.java"}, {"insertions": 56, "deletions": 215, "lines": 271, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java"}, {"insertions": 12, "deletions": 15, "lines": 27, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyResponse.java"}], "commitDateTime": "2015-01-14 13:40:14", "commitUser": "oleksiys", "commitSpoonAstDiffStats": []}, {"nameRev": "04df4e266e36704e74bea7b5db6f96913ff35875 tags/2.0.0-alpha1~142", "commitMessage": "AHC Future.get should throw CancellationException when it was cancelled, close #633\n", "commitParents": ["db341f130e9456dc17b0b00823bfa7f7e92bf06f"], "spoonStatsSkippedReason": "", "commitHash": "04df4e266e36704e74bea7b5db6f96913ff35875", "authoredDateTime": "2015-01-15 09:06:16", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 3, "lines": 6, "filePath": "api/src/test/java/org/asynchttpclient/async/AsyncProvidersBasicTest.java"}, {"insertions": 11, "deletions": 7, "lines": 18, "filePath": "providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/future/NettyResponseFuture.java"}, {"insertions": 11, "deletions": 7, "lines": 18, "filePath": "providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/future/NettyResponseFuture.java"}], "commitDateTime": "2015-01-15 09:06:16", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 1, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.async.AsyncProvidersBasicTest.asyncDoPostDelayCancelTest()"}], "spoonFilePath": "AsyncProvidersBasicTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 2, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.future.NettyResponseFuture.done()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.future.NettyResponseFuture.getContent()"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.netty3.future.NettyResponseFuture.abort(java.lang.Throwable)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.future.NettyResponseFuture.terminateAndExit()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty3.future.NettyResponseFuture.isDone()"}], "spoonFilePath": "NettyResponseFuture.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/633", "ttf": 181.00027777777777, "gitStatsSummary": {"insertions": 364, "deletions": 307, "lines": 671, "gitFilesChange": 9}, "title": "AHC Future.get should throw CancellationException when it was cancelled", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/future", "src/main/java/com/ning/http/client/providers/grizzly"], "spoonStatsSummary": {"UPD": 1.0, "spoonMethodsChanged": 3, "TOT": 5.0, "MOV": 1.0, "INS": 2.0, "DEL": 1.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "As per `java.util.concurrent.Future.get` javadoc:\n\n> @throws CancellationException if the computation was cancelled\n\nThe problem with the Netty provider is that NettyResponseFuture uses the same field for describing \"the future was cancelled by the user\" and \"the request crashed\".\n\nBehavior change, Grizzly is also impacted.\n", "labels": ["Defect", "Grizzly", "Netty"]}, {"created": "2014-07-17 09:50:30", "commits": {"486cc11e030479c1aeeabd67e2c712d60a91e12d": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}, "c89a348291229f44e03b190486f083212f3637e5": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "34a95f04c22198b6575c9fd82f0f2ef117e1cbed": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}, "8c07188c1862a4d9efa488e67f809e8b36026782": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}}, "numCommits": 3, "changesInPackagesSPOON": ["com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.convertCookies(java.util.Collection,com.ning.http.client.providers.grizzly.glassfish[])", "org.asynchttpclient.providers.grizzly.EventHandler.onHttpHeadersParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpHeadersParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)", "org.asynchttpclient.providers.grizzly.EventHandler.onInitialLineParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onInitialLineParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpPacketParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)", "org.asynchttpclient.providers.grizzly.EventHandler.onHttpPacketParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)", "org.asynchttpclient.providers.grizzly.filters.AsyncHttpClientFilter.convertCookies(java.util.Collection,org.asynchttpclient.providers.grizzly.filters.glassfish[])"], "closed": "2014-07-23 04:43:57", "filteredCommits": ["486cc11e030479c1aeeabd67e2c712d60a91e12d", "8c07188c1862a4d9efa488e67f809e8b36026782", "c89a348291229f44e03b190486f083212f3637e5", "34a95f04c22198b6575c9fd82f0f2ef117e1cbed"], "commitsDetails": [{"nameRev": "486cc11e030479c1aeeabd67e2c712d60a91e12d tags/async-http-client-1.8.13~2", "commitMessage": "[1.8.x] + fix issue #631\nhttps://github.com/AsyncHttpClient/async-http-client/issues/631\n\"Grizzly provider aggressively set cookie missing domain and path to /\"", "commitParents": ["765d4003c5c0c50580744468e7b37a806e30dda1"], "spoonStatsSkippedReason": "", "commitHash": "486cc11e030479c1aeeabd67e2c712d60a91e12d", "authoredDateTime": "2014-07-22 21:42:32", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 5, "deletions": 12, "lines": 17, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java"}, {"insertions": 1, "deletions": 6, "lines": 7, "filePath": "src/test/java/com/ning/http/client/async/grizzly/GrizzlyAsyncProviderBasicTest.java"}], "commitDateTime": "2014-07-22 21:42:32", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onInitialLineParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpHeadersParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)"}, {"UPD": 0, "TOT": 10, "MOV": 2, "INS": 0, "DEL": 8, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.convertCookies(java.util.Collection,com.ning.http.client.providers.grizzly.glassfish[])"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpPacketParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)"}], "spoonFilePath": "GrizzlyAsyncHttpProvider.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.async.grizzly.GrizzlyAsyncProviderBasicTest.asyncDoGetCookieTest()"}], "spoonFilePath": "GrizzlyAsyncProviderBasicTest.java"}]}, {"nameRev": "c89a348291229f44e03b190486f083212f3637e5 tags/async-http-client-1.9.0-BETA2~13", "commitMessage": "Add comment, see #631\n", "commitParents": ["5facba9c056ad95f2e477a7ec03eb8d5b606d654"], "spoonStatsSkippedReason": "", "commitHash": "c89a348291229f44e03b190486f083212f3637e5", "authoredDateTime": "2014-07-17 11:51:09", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 0, "lines": 1, "filePath": "src/test/java/com/ning/http/client/async/grizzly/GrizzlyAsyncProviderBasicTest.java"}], "commitDateTime": "2014-07-17 11:51:09", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "GrizzlyAsyncProviderBasicTest.java"}]}, {"nameRev": "8c07188c1862a4d9efa488e67f809e8b36026782 tags/async-http-client-1.9.0-BETA3~5", "commitMessage": "[1.9.x] + fix issue #631\nhttps://github.com/AsyncHttpClient/async-http-client/issues/631\n\"Grizzly provider aggressively set cookie missing domain and path to /\"", "commitParents": ["803d64a9a9ebab30f372772c6b46106abeaa0963"], "spoonStatsSkippedReason": "", "commitHash": "8c07188c1862a4d9efa488e67f809e8b36026782", "authoredDateTime": "2014-07-22 21:29:23", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 10, "lines": 13, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java"}, {"insertions": 1, "deletions": 8, "lines": 9, "filePath": "src/test/java/com/ning/http/client/async/grizzly/GrizzlyAsyncProviderBasicTest.java"}], "commitDateTime": "2014-07-22 21:29:23", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 10, "MOV": 2, "INS": 0, "DEL": 8, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.convertCookies(java.util.Collection,com.ning.http.client.providers.grizzly.glassfish[])"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpPacketParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)"}], "spoonFilePath": "GrizzlyAsyncHttpProvider.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.async.grizzly.GrizzlyAsyncProviderBasicTest.asyncDoGetCookieTest()"}], "spoonFilePath": "GrizzlyAsyncProviderBasicTest.java"}]}, {"nameRev": "34a95f04c22198b6575c9fd82f0f2ef117e1cbed tags/2.0.0-alpha1~339", "commitMessage": "[master] + fix issue #631\nhttps://github.com/AsyncHttpClient/async-http-client/issues/631\n\"Grizzly provider aggressively set cookie missing domain and path to /\"", "commitParents": ["399d78c9dd79d30d3e5e63363d1e27ad1bd2cd84"], "spoonStatsSkippedReason": "", "commitHash": "34a95f04c22198b6575c9fd82f0f2ef117e1cbed", "authoredDateTime": "2014-07-22 21:37:16", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 8, "lines": 12, "filePath": "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/filters/AsyncHttpClientFilter.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/EventHandler.java"}], "commitDateTime": "2014-07-22 21:37:16", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 9, "MOV": 2, "INS": 0, "DEL": 7, "spoonMethodName": "org.asynchttpclient.providers.grizzly.filters.AsyncHttpClientFilter.convertCookies(java.util.Collection,org.asynchttpclient.providers.grizzly.filters.glassfish[])"}], "spoonFilePath": "AsyncHttpClientFilter.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.grizzly.EventHandler.onInitialLineParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.grizzly.EventHandler.onHttpHeadersParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.grizzly.EventHandler.onHttpPacketParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)"}], "spoonFilePath": "EventHandler.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/631", "ttf": 5.000277777777778, "gitStatsSummary": {"insertions": 15, "deletions": 33, "lines": 48, "gitFilesChange": 3}, "title": "Grizzly provider aggressively set cookie missing domain and path to /", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly", "src/main/java/com/ning/http/client/providers/grizzly", "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/filters"], "spoonStatsSummary": {"UPD": 7.0, "spoonMethodsChanged": 8, "TOT": 36.0, "MOV": 6.0, "INS": 0.0, "DEL": 23.0, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "See https://github.com/AsyncHttpClient/async-http-client/blob/1.9.x/src/test/java/com/ning/http/client/async/grizzly/GrizzlyAsyncProviderBasicTest.java#L56\n", "labels": ["Defect", "Grizzly"]}, {"created": "2014-07-17 08:50:53", "commits": {"c9e37aefaefdff8484640da696f580cd28a6b0bc": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2014-07-17 09:22:27", "filteredCommits": [], "commitsDetails": [{"nameRev": "c9e37aefaefdff8484640da696f580cd28a6b0bc tags/async-http-client-1.9.0-BETA2~15", "commitMessage": " Stop re-setting the pipeline factory on every secure request, close #628, close #629\n", "commitParents": ["0e1ecce2c2d0a75a70d1e078d89c94d3622a9c38"], "spoonStatsSkippedReason": "", "commitHash": "c9e37aefaefdff8484640da696f580cd28a6b0bc", "authoredDateTime": "2014-07-17 10:55:59", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 31, "deletions": 48, "lines": 79, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java"}], "commitDateTime": "2014-07-17 11:20:51", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 6, "TOT": 10, "MOV": 2, "INS": 0, "DEL": 2, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.constructSSLPipeline(com.ning.http.client.providers.netty.NettyConnectListener).3.getPipeline()"}, {"UPD": 4, "TOT": 16, "MOV": 7, "INS": 0, "DEL": 5, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.constructSSLPipeline(com.ning.http.client.providers.netty.NettyConnectListener)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.configureNetty().3.getPipeline()"}, {"UPD": 2, "TOT": 13, "MOV": 7, "INS": 3, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.configureNetty()"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.configureNetty().1.getPipeline()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.doConnect(com.ning.http.client.Request,com.ning.http.client.AsyncHandler,com.ning.http.client.providers.netty.NettyResponseFuture,boolean,boolean)"}], "spoonFilePath": "NettyAsyncHttpProvider.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/629", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "webSocketBootstrap ignores Netty props", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2014-07-17 08:48:12", "commits": {"c9e37aefaefdff8484640da696f580cd28a6b0bc": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2014-07-17 09:25:53", "filteredCommits": [], "commitsDetails": [{"nameRev": "c9e37aefaefdff8484640da696f580cd28a6b0bc tags/async-http-client-1.9.0-BETA2~15", "commitMessage": " Stop re-setting the pipeline factory on every secure request, close #628, close #629\n", "commitParents": ["0e1ecce2c2d0a75a70d1e078d89c94d3622a9c38"], "spoonStatsSkippedReason": "", "commitHash": "c9e37aefaefdff8484640da696f580cd28a6b0bc", "authoredDateTime": "2014-07-17 10:55:59", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 31, "deletions": 48, "lines": 79, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java"}], "commitDateTime": "2014-07-17 11:20:51", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 6, "TOT": 10, "MOV": 2, "INS": 0, "DEL": 2, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.constructSSLPipeline(com.ning.http.client.providers.netty.NettyConnectListener).3.getPipeline()"}, {"UPD": 4, "TOT": 16, "MOV": 7, "INS": 0, "DEL": 5, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.constructSSLPipeline(com.ning.http.client.providers.netty.NettyConnectListener)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.configureNetty().3.getPipeline()"}, {"UPD": 2, "TOT": 13, "MOV": 7, "INS": 3, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.configureNetty()"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.configureNetty().1.getPipeline()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.doConnect(com.ning.http.client.Request,com.ning.http.client.AsyncHandler,com.ning.http.client.providers.netty.NettyResponseFuture,boolean,boolean)"}], "spoonFilePath": "NettyAsyncHttpProvider.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/628", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Stop re-setting the pipeline factory on every secure request", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2014-07-16 23:32:42", "commits": {"6be39c58d044680bad36e2619e82ca9eb266be84": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "c595aabb7435acaf735e327e87622db8b79e021a": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.util.AuthenticatorUtils.computeRealmURI(org.asynchttpclient.Realm)"], "closed": "2014-07-16 23:35:42", "filteredCommits": ["6be39c58d044680bad36e2619e82ca9eb266be84"], "commitsDetails": [{"nameRev": "6be39c58d044680bad36e2619e82ca9eb266be84 tags/2.0.0-alpha1~358", "commitMessage": "Properly compute Realm URI, close #626\n", "commitParents": ["ee3f56dad3c15d40cc8df7a0c96b0daab45073d6"], "spoonStatsSkippedReason": "", "commitHash": "6be39c58d044680bad36e2619e82ca9eb266be84", "authoredDateTime": "2014-07-17 01:35:36", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 4, "deletions": 4, "lines": 8, "filePath": "api/src/main/java/org/asynchttpclient/util/AuthenticatorUtils.java"}], "commitDateTime": "2014-07-17 01:35:36", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 6, "MOV": 1, "INS": 1, "DEL": 3, "spoonMethodName": "org.asynchttpclient.util.AuthenticatorUtils.computeRealmURI(org.asynchttpclient.Realm)"}], "spoonFilePath": "AuthenticatorUtils.java"}]}, {"nameRev": "c595aabb7435acaf735e327e87622db8b79e021a tags/async-http-client-1.9.0-BETA2~21", "commitMessage": "Properly compute Realm URI, close #626\n", "commitParents": ["a5f36f976ef1112b20ba84f9e34330b8160b5484"], "spoonStatsSkippedReason": "", "commitHash": "c595aabb7435acaf735e327e87622db8b79e021a", "authoredDateTime": "2014-07-17 01:33:12", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 3, "lines": 5, "filePath": "src/main/java/com/ning/http/util/AuthenticatorUtils.java"}], "commitDateTime": "2014-07-17 01:36:07", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 1, "INS": 1, "DEL": 3, "spoonMethodName": "com.ning.http.util.AuthenticatorUtils.computeRealmURI(com.ning.http.client.Realm)"}], "spoonFilePath": "AuthenticatorUtils.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/626", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 4, "deletions": 4, "lines": 8, "gitFilesChange": 1}, "title": "Realm URI isn't properly computed", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["api/src/main/java/org/asynchttpclient/util"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 6, "MOV": 1, "INS": 1, "DEL": 3, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "See https://github.com/AsyncHttpClient/async-http-client/pull/553#issuecomment-49144781\n", "labels": ["Defect"]}, {"created": "2014-07-16 14:11:18", "commits": {"45435f6844867b381620842875a0047673558852": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "7da9677a2d8f32fcfe91aad37350697f2377733e": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2014-07-17 13:27:53", "filteredCommits": ["7da9677a2d8f32fcfe91aad37350697f2377733e", "45435f6844867b381620842875a0047673558852"], "commitsDetails": [{"nameRev": "45435f6844867b381620842875a0047673558852 tags/async-http-client-1.9.0-BETA2~27^2~14", "commitMessage": "Disable GrizzlyBodyDeferringAsyncHandlerTest for Grizzly, see #625\n", "commitParents": ["c3248bde49ac7e7d7cf120a2fe6305a621d0e21a"], "spoonStatsSkippedReason": "", "commitHash": "45435f6844867b381620842875a0047673558852", "authoredDateTime": "2014-07-15 22:39:28", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 19, "deletions": 0, "lines": 19, "filePath": "src/test/java/com/ning/http/client/async/grizzly/GrizzlyBodyDeferringAsyncHandlerTest.java"}], "commitDateTime": "2014-07-16 16:12:17", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.grizzly.GrizzlyBodyDeferringAsyncHandlerTest.deferredInputStreamTrickWithFailure()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.grizzly.GrizzlyBodyDeferringAsyncHandlerTest.deferredInputStreamTrick()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.grizzly.GrizzlyBodyDeferringAsyncHandlerTest.deferredSimple()"}], "spoonFilePath": "GrizzlyBodyDeferringAsyncHandlerTest.java"}]}, {"nameRev": "7da9677a2d8f32fcfe91aad37350697f2377733e tags/async-http-client-1.9.0-BETA2~17", "commitMessage": "Re-enable GrizzlyBodyDeferringAsyncHandlerTest, see #625\n", "commitParents": ["9dfb987837485fac2d44cfe88219b4224a0b14ca"], "spoonStatsSkippedReason": "", "commitHash": "7da9677a2d8f32fcfe91aad37350697f2377733e", "authoredDateTime": "2014-07-17 10:10:08", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 21, "lines": 21, "filePath": "src/test/java/com/ning/http/client/async/grizzly/GrizzlyBodyDeferringAsyncHandlerTest.java"}], "commitDateTime": "2014-07-17 10:10:08", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.async.grizzly.GrizzlyBodyDeferringAsyncHandlerTest.deferredInputStreamTrickWithFailure()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.async.grizzly.GrizzlyBodyDeferringAsyncHandlerTest.deferredInputStreamTrick()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.async.grizzly.GrizzlyBodyDeferringAsyncHandlerTest.deferredSimple()"}], "spoonFilePath": "GrizzlyBodyDeferringAsyncHandlerTest.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/625", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "GrizzlyBodyDeferringAsyncHandlerTest randomly hangs on 1.9.x", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Grizzly"]}, {"created": "2014-07-15 13:15:35", "commits": {"cfb590f7e57ebc15bb3601343faf34ebddbf4598": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "ee3f56dad3c15d40cc8df7a0c96b0daab45073d6": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2014-07-16 20:55:49", "filteredCommits": [], "commitsDetails": [{"nameRev": "cfb590f7e57ebc15bb3601343faf34ebddbf4598 tags/async-http-client-1.9.0-BETA2~27", "commitMessage": "Merge pull request #624 from AsyncHttpClient/1.9.x-netty-pool\n\nRefactor Netty channel pool for 1.9, close #201, close #623", "commitParents": ["68cf0904229dc5429114363f51a15bd3543f4976", "ecece3d5452729742dadd99d896095e20a8c9228"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "cfb590f7e57ebc15bb3601343faf34ebddbf4598", "authoredDateTime": "2014-07-16 16:13:21", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 84, "deletions": 182, "lines": 266, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java"}, {"insertions": 13, "deletions": 16, "lines": 29, "filePath": "src/main/java/com/ning/http/client/providers/netty/{ => pool}/ChannelPool.java"}, {"insertions": 57, "deletions": 86, "lines": 143, "filePath": "src/main/java/com/ning/http/client/providers/netty/{ => pool}/DefaultChannelPool.java"}, {"insertions": 19, "deletions": 0, "lines": 19, "filePath": "src/test/java/com/ning/http/client/async/grizzly/GrizzlyBodyDeferringAsyncHandlerTest.java"}, {"insertions": 52, "deletions": 67, "lines": 119, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyConnectListener.java"}, {"insertions": 2, "deletions": 1, "lines": 3, "filePath": "src/main/java/com/ning/http/client/uri/UriComponents.java"}, {"insertions": 38, "deletions": 0, "lines": 38, "filePath": "src/main/java/com/ning/http/client/providers/netty/pool/NoopChannelPool.java"}, {"insertions": 17, "deletions": 22, "lines": 39, "filePath": "src/main/java/com/ning/http/client/providers/netty/timeout/IdleConnectionTimeoutTimerTask.java"}, {"insertions": 3, "deletions": 9, "lines": 12, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyResponseFuture.java"}, {"insertions": 5, "deletions": 5, "lines": 10, "filePath": "src/test/java/com/ning/http/client/async/netty/NettyConnectionPoolTest.java"}, {"insertions": 31, "deletions": 29, "lines": 60, "filePath": "src/test/java/com/ning/http/client/async/MaxTotalConnectionTest.java"}, {"insertions": 0, "deletions": 2, "lines": 2, "filePath": "src/test/java/com/ning/http/client/async/BasicHttpsTest.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "src/main/java/com/ning/http/client/uri/UriComponentsParser.java"}, {"insertions": 5, "deletions": 7, "lines": 12, "filePath": "src/main/java/com/ning/http/client/providers/netty/timeout/RequestTimeoutTimerTask.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProviderConfig.java"}, {"insertions": 174, "deletions": 0, "lines": 174, "filePath": "src/main/java/com/ning/http/client/providers/netty/pool/ChannelManager.java"}], "commitDateTime": "2014-07-16 16:13:21", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "ee3f56dad3c15d40cc8df7a0c96b0daab45073d6 tags/2.0.0-alpha1~359", "commitMessage": "Refactor Netty channel pool, port #624 on master, close #201, close #623\n", "commitParents": ["4393106266c50f98d7b88b1092d4512d4dec60f1"], "spoonStatsSkippedReason": "", "commitHash": "ee3f56dad3c15d40cc8df7a0c96b0daab45073d6", "authoredDateTime": "2014-07-16 22:55:44", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 50, "deletions": 106, "lines": 156, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/channel/Channels.java"}, {"insertions": 15, "deletions": 15, "lines": 30, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/channel/{ => pool}/ChannelPool.java"}, {"insertions": 9, "deletions": 11, "lines": 20, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/handler/HttpProtocol.java"}, {"insertions": 168, "deletions": 0, "lines": 168, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/channel/ChannelManager.java"}, {"insertions": 39, "deletions": 9, "lines": 48, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/request/NettyConnectListener.java"}, {"insertions": 52, "deletions": 84, "lines": 136, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/channel/{ => pool}/DefaultChannelPool.java"}, {"insertions": 6, "deletions": 6, "lines": 12, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/channel/{NonChannelPool.java => pool/NoopChannelPool.java}"}, {"insertions": 1, "deletions": 12, "lines": 13, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/NettyAsyncHttpProvider.java"}, {"insertions": 3, "deletions": 9, "lines": 12, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/handler/Protocol.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/handler/Processor.java"}, {"insertions": 9, "deletions": 9, "lines": 18, "filePath": "providers/netty/src/test/java/org/asynchttpclient/providers/netty/NettyConnectionPoolTest.java"}, {"insertions": 47, "deletions": 46, "lines": 93, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/request/NettyRequestSender.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/NettyAsyncHttpProviderConfig.java"}], "commitDateTime": "2014-07-16 22:55:44", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.HttpProtocol.handle(io.netty.channel.Channel,org.asynchttpclient.providers.netty.future.NettyResponseFuture,java.lang.Object)"}, {"UPD": 2, "TOT": 11, "MOV": 4, "INS": 3, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.HttpProtocol.finishUpdate(org.asynchttpclient.providers.netty.future.NettyResponseFuture,io.netty.channel.Channel,boolean)"}], "spoonFilePath": "HttpProtocol.java"}, {"spoonMethods": [{"UPD": 3, "TOT": 5, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.IdleChannelDetector.closeChannels(java.util.List)"}, {"UPD": 8, "TOT": 11, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.destroy()"}, {"UPD": 6, "TOT": 6, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.ChannelCreation"}, {"UPD": 0, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 3, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.IdleChannelDetector.isChannelCloseable(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.pool.DefaultChannelPool.isOpen()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.toString()"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.isTTLExpired(io.netty.channel.Channel,long)"}, {"UPD": 8, "TOT": 12, "MOV": 3, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.poll(java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.pool.DefaultChannelPool.offer(io.netty.channel.Channel,java.lang.String)"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.IdleChannelDetector.isIdleTimeoutExpired(org.asynchttpclient.providers.netty.channel.DefaultChannelPool$IdleChannel,long)"}, {"UPD": 19, "TOT": 32, "MOV": 2, "INS": 0, "DEL": 11, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool"}, {"UPD": 12, "TOT": 18, "MOV": 3, "INS": 0, "DEL": 3, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.IdleChannelDetector.run(io.netty.util.Timeout)"}, {"UPD": 6, "TOT": 6, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.removeAll(io.netty.channel.Channel)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.scheduleNewIdleChannelDetector(io.netty.util.TimerTask)"}, {"UPD": 4, "TOT": 6, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.IdleChannelDetector.expiredChannels(java.util.concurrent.ConcurrentLinkedQueue,long)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.pool.DefaultChannelPool.getPoolForKey(java.lang.String)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.IdleChannel.hashCode()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.pool.DefaultChannelPool"}, {"UPD": 2, "TOT": 5, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.canCacheConnection()"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.IdleChannel.equals(java.lang.Object)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.pool.DefaultChannelPool.poll(java.lang.String)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.pool.DefaultChannelPool.IdleChannelDetector.run(io.netty.util.Timeout)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.isRemotelyClosed(io.netty.channel.Channel)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.IdleChannel"}, {"UPD": 5, "TOT": 9, "MOV": 3, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.addIdleChannel(java.util.concurrent.ConcurrentLinkedQueue,java.lang.String,io.netty.channel.Channel,long)"}, {"UPD": 11, "TOT": 20, "MOV": 6, "INS": 0, "DEL": 3, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.offer(java.lang.String,io.netty.channel.Channel)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.close(io.netty.channel.Channel)"}], "spoonFilePath": "DefaultChannelPool.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyAsyncHttpProvider.toString()"}, {"UPD": 0, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 3, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyAsyncHttpProvider"}], "spoonFilePath": "NettyAsyncHttpProvider.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyAsyncHttpProviderConfig"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyAsyncHttpProviderConfig.getChannelPool()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyAsyncHttpProviderConfig.setChannelPool(org.asynchttpclient.providers.netty.channel.ChannelPool)"}], "spoonFilePath": "NettyAsyncHttpProviderConfig.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 4, "MOV": 0, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.Protocol.handleRedirectAndExit(org.asynchttpclient.Request,org.asynchttpclient.providers.netty.future.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,io.netty.channel.Channel)"}, {"UPD": 2, "TOT": 6, "MOV": 4, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.Protocol.handleRedirectAndExit(org.asynchttpclient.Request,org.asynchttpclient.providers.netty.future.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,io.netty.channel.Channel).1.call()"}], "spoonFilePath": "Protocol.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.ChannelManager"}], "spoonFilePath": "ChannelManager.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testValidConnectionsPool().2.poll(java.lang.String)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testInvalidConnectionsPool().1.poll(java.lang.String)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testValidConnectionsPool().2.removeAll(io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testInvalidConnectionsPool().1.removeAll(io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testValidConnectionsPool().2"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testInvalidConnectionsPool().1"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testInvalidConnectionsPool().1.offer(java.lang.String,io.netty.channel.Channel)"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testValidConnectionsPool().2.offer(java.lang.String,io.netty.channel.Channel)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testValidConnectionsPool()"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testInvalidConnectionsPool()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testInvalidConnectionsPool().1.canCacheConnection()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testValidConnectionsPool().2.canCacheConnection()"}], "spoonFilePath": "NettyConnectionPoolTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.closeChannel(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.preemptChannel(org.asynchttpclient.AsyncHandler,java.lang.String)"}, {"UPD": 0, "TOT": 5, "MOV": 3, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.configureProcessor(org.asynchttpclient.providers.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean).3.initChannel(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.setDiscard(io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.close()"}, {"UPD": 6, "TOT": 14, "MOV": 2, "INS": 1, "DEL": 5, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.configureProcessor(org.asynchttpclient.providers.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean).2.initChannel(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.registerChannel(io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.removeAll(io.netty.channel.Channel)"}, {"UPD": 4, "TOT": 6, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.removeFromPool(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.configureProcessor(org.asynchttpclient.providers.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean).4.initChannel(io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 5, "MOV": 4, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.drainChannel(io.netty.channel.Channel,org.asynchttpclient.providers.netty.future.NettyResponseFuture).6.call()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.pollAndVerifyCachedChannel(org.asynchttpclient.uri.UriComponents,org.asynchttpclient.ProxyServer,org.asynchttpclient.ConnectionPoolKeyStrategy)"}, {"UPD": 9, "TOT": 13, "MOV": 4, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.offerToPool(java.lang.String,io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.configureProcessor(org.asynchttpclient.providers.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean).5.initChannel(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.registerOpenChannel(io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.configureProcessor(org.asynchttpclient.providers.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean).4"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.configureProcessor(org.asynchttpclient.providers.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean).3"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.configureProcessor(org.asynchttpclient.providers.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean).5"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.releaseFreeConnections()"}, {"UPD": 2, "TOT": 17, "MOV": 12, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.abort(org.asynchttpclient.providers.netty.future.NettyResponseFuture,java.lang.Throwable)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.drainChannel(io.netty.channel.Channel,org.asynchttpclient.providers.netty.future.NettyResponseFuture)"}, {"UPD": 4, "TOT": 7, "MOV": 3, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.finishChannel(io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.configureProcessor(org.asynchttpclient.providers.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean).2"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.configureProcessor(org.asynchttpclient.providers.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean).1.initChannel(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.newDrainCallable(org.asynchttpclient.providers.netty.future.NettyResponseFuture,io.netty.channel.Channel,boolean,java.lang.String)"}, {"UPD": 7, "TOT": 17, "MOV": 5, "INS": 0, "DEL": 5, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.acquireConnection(org.asynchttpclient.AsyncHandler)"}], "spoonFilePath": "Channels.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.Processor.channelInactive(io.netty.channel.ChannelHandlerContext)"}], "spoonFilePath": "Processor.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.canCacheConnection()"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.offer(java.lang.String,io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.removeAll(io.netty.channel.Channel)"}], "spoonFilePath": "ChannelPool.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 8, "MOV": 5, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyConnectListener.onFutureSuccess(io.netty.channel.Channel).1.operationComplete(io.netty.util.concurrent.Future)"}, {"UPD": 0, "TOT": 9, "MOV": 0, "INS": 9, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyConnectListener"}, {"UPD": 3, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyConnectListener.future()"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyConnectListener.onFutureSuccess(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyConnectListener.onFutureFailure(io.netty.channel.Channel,java.lang.Throwable)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyConnectListener.abortChannelPreemption(java.lang.String)"}], "spoonFilePath": "NettyConnectListener.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.NonChannelPool"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.NonChannelPool.removeAll(io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.NonChannelPool.poll(java.lang.String)"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.NonChannelPool.offer(java.lang.String,io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.NonChannelPool.canCacheConnection()"}], "spoonFilePath": "NoopChannelPool.java"}, {"spoonMethods": [{"UPD": 8, "TOT": 37, "MOV": 17, "INS": 4, "DEL": 8, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyRequestSender.sendRequestWithNewChannel(org.asynchttpclient.Request,org.asynchttpclient.uri.UriComponents,org.asynchttpclient.ProxyServer,boolean,org.asynchttpclient.providers.netty.future.NettyResponseFuture,org.asynchttpclient.AsyncHandler,boolean)"}, {"UPD": 0, "TOT": 12, "MOV": 4, "INS": 4, "DEL": 4, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyRequestSender.retry(org.asynchttpclient.providers.netty.future.NettyResponseFuture,io.netty.channel.Channel)"}], "spoonFilePath": "NettyRequestSender.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/623", "ttf": 1.0002777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Netty: refactor connection limits", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 0, "TOT": 0.0, "MOV": 0.0, "INS": 0.0, "DEL": 0.0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 2, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2014-07-11 08:32:28", "user": "cngddflzw", "body": "In this processConnectTimeout() in NioClientBoss . the \"Cause\" message sometimes show \"org.jboss.netty.channel.ConnectTimeoutException: connection timed out: /181.30.3.90:8080\". However, the value of ch.requestedRemoteAddress is \"/140.130.13.66:8080\" . This /181.30.3.90:8080 IP is the ip of proxy of previous timeout request. And the Cause message is the same with previous timeout request using the wrong ip address \"/181.30.3.90:8080\" but not the correct address \"/140.130.13.66:8080\"\n\n``` java\n    private static void processConnectTimeout(Set<SelectionKey> keys, long currentTimeNanos) {\n        ConnectException cause = null;\n        for (SelectionKey k: keys) {\n            if (!k.isValid()) {\n                // Comment the close call again as it gave us major problems\n                // with ClosedChannelExceptions.\n                //\n                // See:\n                // * https://github.com/netty/netty/issues/142\n                // * https://github.com/netty/netty/issues/138\n                //\n                // close(k);\n                continue;\n            }\n\n            NioClientSocketChannel ch = (NioClientSocketChannel) k.attachment();\n            if (ch.connectDeadlineNanos > 0 &&\n                    currentTimeNanos >= ch.connectDeadlineNanos) {\n\n                if (cause == null) {\n                    cause = new ConnectTimeoutException(\"connection timed out: \" + ch.requestedRemoteAddress);\n                }\n\n                ch.connectFuture.setFailure(cause);\n                fireExceptionCaught(ch, cause);\n                ch.worker.close(ch, succeededFuture(ch));\n            }\n        }\n    }\n```\n", "closed": "2014-08-23 11:50:44", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/611", "ttf": 43.000277777777775, "commits": {}, "labels": ["Defect", "Netty"], "title": "Same \"Throwable\" error message in different request through different proxy when connect timeout "}, {"created": "2014-07-09 21:06:08", "commits": {"4393106266c50f98d7b88b1092d4512d4dec60f1": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}, "5914bc37ebc4d8f34131659ad1ebb471158e5774": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "45554ba0ef2d889c686b1e32d0675cc66965eaed": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}}, "numCommits": 2, "changesInPackagesSPOON": ["org.asynchttpclient.providers.grizzly.filters.ProxyFilter.handleWrite(org.glassfish.grizzly.filterchain.FilterChainContext)", "org.asynchttpclient.providers.grizzly.filters.AsyncHttpClientFilter.convertToUpgradeRequest(org.asynchttpclient.providers.grizzly.HttpTxContext)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.convertToUpgradeRequest(com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider$HttpTransactionContext)"], "closed": "2014-07-16 14:16:49", "filteredCommits": ["5914bc37ebc4d8f34131659ad1ebb471158e5774", "4393106266c50f98d7b88b1092d4512d4dec60f1", "45554ba0ef2d889c686b1e32d0675cc66965eaed"], "commitsDetails": [{"nameRev": "45554ba0ef2d889c686b1e32d0675cc66965eaed tags/async-http-client-1.9.0-BETA2~29", "commitMessage": "[1.9.x] fix issue #608\nhttps://github.com/AsyncHttpClient/async-http-client/issues/608\n\"Grizzly provider can't deal with wss + proxy\"\n", "commitParents": ["0305e644b4209aa74363020fb3661fd10a8c01bf"], "spoonStatsSkippedReason": "", "commitHash": "45554ba0ef2d889c686b1e32d0675cc66965eaed", "authoredDateTime": "2014-07-15 22:53:21", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 6, "deletions": 4, "lines": 10, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java"}, {"insertions": 0, "deletions": 5, "lines": 5, "filePath": "src/test/java/com/ning/http/client/websocket/grizzly/GrizzlyProxyTunnellingTest.java"}], "commitDateTime": "2014-07-15 22:55:46", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.websocket.grizzly.GrizzlyProxyTunnellingTest.echoText()"}], "spoonFilePath": "GrizzlyProxyTunnellingTest.java"}, {"spoonMethods": [{"UPD": 4, "TOT": 7, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientFilter.convertToUpgradeRequest(com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider$HttpTransactionContext)"}], "spoonFilePath": "GrizzlyAsyncHttpProvider.java"}]}, {"nameRev": "5914bc37ebc4d8f34131659ad1ebb471158e5774 tags/async-http-client-1.9.0-BETA1~10", "commitMessage": "Disable GrizzlyProxyTunnellingTest for now, see #608\n", "commitParents": ["d60c8db271366db43df256a698524a6f527f22f0"], "spoonStatsSkippedReason": "", "commitHash": "5914bc37ebc4d8f34131659ad1ebb471158e5774", "authoredDateTime": "2014-07-09 23:06:39", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 5, "deletions": 0, "lines": 5, "filePath": "src/test/java/com/ning/http/client/websocket/grizzly/GrizzlyProxyTunnellingTest.java"}], "commitDateTime": "2014-07-09 23:07:41", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.websocket.grizzly.GrizzlyProxyTunnellingTest.echoText()"}], "spoonFilePath": "GrizzlyProxyTunnellingTest.java"}]}, {"nameRev": "4393106266c50f98d7b88b1092d4512d4dec60f1 tags/2.0.0-alpha1~360", "commitMessage": "[master] fix issue #608\nhttps://github.com/AsyncHttpClient/async-http-client/issues/608\n\"Grizzly provider can't deal with wss + proxy\"", "commitParents": ["f171c9a13a150824f0b4d898dcbc03ddd2af6e4a"], "spoonStatsSkippedReason": "", "commitHash": "4393106266c50f98d7b88b1092d4512d4dec60f1", "authoredDateTime": "2014-07-15 23:40:43", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 5, "lines": 5, "filePath": "providers/grizzly/src/test/java/org/asynchttpclient/providers/grizzly/websocket/GrizzlyProxyTunnellingTest.java"}, {"insertions": 7, "deletions": 4, "lines": 11, "filePath": "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/filters/AsyncHttpClientFilter.java"}, {"insertions": 16, "deletions": 9, "lines": 25, "filePath": "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/filters/ProxyFilter.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/grizzly/pom.xml"}], "commitDateTime": "2014-07-15 23:40:43", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.grizzly.websocket.GrizzlyProxyTunnellingTest.echoText()"}], "spoonFilePath": "GrizzlyProxyTunnellingTest.java"}, {"spoonMethods": [{"UPD": 4, "TOT": 7, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.grizzly.filters.AsyncHttpClientFilter.convertToUpgradeRequest(org.asynchttpclient.providers.grizzly.HttpTxContext)"}], "spoonFilePath": "AsyncHttpClientFilter.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 15, "MOV": 9, "INS": 2, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.grizzly.filters.ProxyFilter.handleWrite(org.glassfish.grizzly.filterchain.FilterChainContext)"}], "spoonFilePath": "ProxyFilter.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/608", "ttf": 6.000277777777778, "gitStatsSummary": {"insertions": 29, "deletions": 17, "lines": 46, "gitFilesChange": 3}, "title": "Grizzly provider can't deal with wss + proxy", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/grizzly", "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/filters"], "spoonStatsSummary": {"UPD": 10, "spoonMethodsChanged": 3, "TOT": 29, "MOV": 11, "INS": 4, "DEL": 4, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "See dde2652255a945d65e1edb9da663924c3715c0bd and 140ad357463c767f442431dd5917e70c8d20a1ca. I thought Grizzly was fine on 1.8 and only broken on master, but I can now reproduce on 1.9.\n\n@oleksiys Sorry to ping, but I can't fix this myself.\n", "labels": ["Defect", "Grizzly"]}, {"created": "2014-07-09 19:34:09", "commits": {"b65a7a3adfdb0a59db779b0ec6b3dbbf3a7bf7ad": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "888ea0b55079f87e143d0b9fa500530f803f10f1": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.providers.grizzly.statushandler.ProxyAuthorizationHandler.handleStatus(org.glassfish.grizzly.http.HttpResponsePacket,org.asynchttpclient.providers.grizzly.HttpTxContext,org.glassfish.grizzly.filterchain.FilterChainContext)", "org.asynchttpclient.providers.netty.handler.HttpProtocol.handleUnauthorizedAndExit(int,org.asynchttpclient.Realm,org.asynchttpclient.Request,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.providers.netty.future.NettyResponseFuture,org.asynchttpclient.ProxyServer,io.netty.channel.Channel)", "org.asynchttpclient.providers.netty.handler.HttpProtocol.ntlmProxyChallenge(java.util.List,org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,org.asynchttpclient.FluentCaseInsensitiveStringsMap,org.asynchttpclient.Realm,org.asynchttpclient.providers.netty.future.NettyResponseFuture,boolean)", "org.asynchttpclient.providers.netty.handler.HttpProtocol.handleProxyAuthenticationRequiredAndExit(int,org.asynchttpclient.Realm,org.asynchttpclient.Request,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.providers.netty.future.NettyResponseFuture,org.asynchttpclient.ProxyServer)", "org.asynchttpclient.providers.netty.handler.HttpProtocol.computeRealmURI(org.asynchttpclient.Realm,org.asynchttpclient.uri.UriComponents)", "org.asynchttpclient.Realm.RealmBuilder.setUri(java.lang.String)", "org.asynchttpclient.Realm", "org.asynchttpclient.Realm.RealmBuilder.getUri()", "org.asynchttpclient.Realm.RealmBuilder.build()", "org.asynchttpclient.providers.netty.handler.HttpProtocol.ntlmChallenge(java.util.List,org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,org.asynchttpclient.FluentCaseInsensitiveStringsMap,org.asynchttpclient.Realm,org.asynchttpclient.providers.netty.future.NettyResponseFuture,boolean)", "org.asynchttpclient.Realm.RealmBuilder", "org.asynchttpclient.providers.netty.handler.HttpProtocol.kerberosChallenge(java.util.List,org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,org.asynchttpclient.FluentCaseInsensitiveStringsMap,org.asynchttpclient.Realm,org.asynchttpclient.providers.netty.future.NettyResponseFuture,boolean)", "org.asynchttpclient.uri.UriComponents.withNewPath(java.lang.String)", "org.asynchttpclient.Realm.getUri()", "org.asynchttpclient.util.AuthenticatorUtils.computeDigestAuthentication(org.asynchttpclient.Realm)", "org.asynchttpclient.providers.grizzly.statushandler.AuthorizationHandler.handleStatus(org.glassfish.grizzly.http.HttpResponsePacket,org.asynchttpclient.providers.grizzly.HttpTxContext,org.glassfish.grizzly.filterchain.FilterChainContext)", "org.asynchttpclient.util.AuthenticatorUtils.computeRealmURI(org.asynchttpclient.Realm)"], "closed": "2014-07-09 21:32:38", "filteredCommits": ["b65a7a3adfdb0a59db779b0ec6b3dbbf3a7bf7ad"], "commitsDetails": [{"nameRev": "b65a7a3adfdb0a59db779b0ec6b3dbbf3a7bf7ad tags/2.0.0-alpha1~372", "commitMessage": "Make all providers honor Realm.isOmitQuery and isUseAbsoluteURI, close #607\n", "commitParents": ["d756d2606f2033690b69d5c024b042c90c520cf3"], "spoonStatsSkippedReason": "", "commitHash": "b65a7a3adfdb0a59db779b0ec6b3dbbf3a7bf7ad", "authoredDateTime": "2014-07-09 23:32:33", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 9, "deletions": 0, "lines": 9, "filePath": "api/src/main/java/org/asynchttpclient/uri/UriComponents.java"}, {"insertions": 7, "deletions": 6, "lines": 13, "filePath": "api/src/main/java/org/asynchttpclient/Realm.java"}, {"insertions": 1, "deletions": 2, "lines": 3, "filePath": "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/statushandler/AuthorizationHandler.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/statushandler/ProxyAuthorizationHandler.java"}, {"insertions": 8, "deletions": 26, "lines": 34, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/handler/HttpProtocol.java"}, {"insertions": 13, "deletions": 1, "lines": 14, "filePath": "api/src/main/java/org/asynchttpclient/util/AuthenticatorUtils.java"}, {"insertions": 3, "deletions": 2, "lines": 5, "filePath": "api/src/test/java/org/asynchttpclient/RealmTest.java"}], "commitDateTime": "2014-07-09 23:32:33", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 1, "INS": 1, "DEL": 3, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.HttpProtocol.handleUnauthorizedAndExit(int,org.asynchttpclient.Realm,org.asynchttpclient.Request,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.providers.netty.future.NettyResponseFuture,org.asynchttpclient.ProxyServer,io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.HttpProtocol.computeRealmURI(org.asynchttpclient.Realm,org.asynchttpclient.uri.UriComponents)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.HttpProtocol.ntlmProxyChallenge(java.util.List,org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,org.asynchttpclient.FluentCaseInsensitiveStringsMap,org.asynchttpclient.Realm,org.asynchttpclient.providers.netty.future.NettyResponseFuture,boolean)"}, {"UPD": 0, "TOT": 6, "MOV": 3, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.HttpProtocol.ntlmChallenge(java.util.List,org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,org.asynchttpclient.FluentCaseInsensitiveStringsMap,org.asynchttpclient.Realm,org.asynchttpclient.providers.netty.future.NettyResponseFuture,boolean)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.HttpProtocol.kerberosChallenge(java.util.List,org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,org.asynchttpclient.FluentCaseInsensitiveStringsMap,org.asynchttpclient.Realm,org.asynchttpclient.providers.netty.future.NettyResponseFuture,boolean)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.HttpProtocol.handleProxyAuthenticationRequiredAndExit(int,org.asynchttpclient.Realm,org.asynchttpclient.Request,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.providers.netty.future.NettyResponseFuture,org.asynchttpclient.ProxyServer)"}], "spoonFilePath": "HttpProtocol.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.AuthenticatorUtils.computeDigestAuthentication(org.asynchttpclient.Realm)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.AuthenticatorUtils.computeRealmURI(org.asynchttpclient.Realm)"}], "spoonFilePath": "AuthenticatorUtils.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.uri.UriComponents.withNewPath(java.lang.String)"}], "spoonFilePath": "UriComponents.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.grizzly.statushandler.AuthorizationHandler.handleStatus(org.glassfish.grizzly.http.HttpResponsePacket,org.asynchttpclient.providers.grizzly.HttpTxContext,org.glassfish.grizzly.filterchain.FilterChainContext)"}], "spoonFilePath": "AuthorizationHandler.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.RealmTest.testStrongDigest()"}, {"UPD": 1, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.RealmTest.testOldDigest(java.lang.String)"}], "spoonFilePath": "RealmTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.grizzly.statushandler.ProxyAuthorizationHandler.handleStatus(org.glassfish.grizzly.http.HttpResponsePacket,org.asynchttpclient.providers.grizzly.HttpTxContext,org.glassfish.grizzly.filterchain.FilterChainContext)"}], "spoonFilePath": "ProxyAuthorizationHandler.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.Realm.RealmBuilder.getUri()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.Realm.RealmBuilder.build()"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.Realm"}, {"UPD": 1, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.Realm.RealmBuilder"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.Realm.getUri()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.Realm.RealmBuilder.setUri(java.lang.String)"}], "spoonFilePath": "Realm.java"}]}, {"nameRev": "888ea0b55079f87e143d0b9fa500530f803f10f1 tags/async-http-client-1.9.0-BETA1~12", "commitMessage": "Make all providers honor Realm.isOmitQuery and isUseAbsoluteURI, close #607\n", "commitParents": ["6dd108e2bc46da279f4362bcbaac9e6686790a2c"], "spoonStatsSkippedReason": "", "commitHash": "888ea0b55079f87e143d0b9fa500530f803f10f1", "authoredDateTime": "2014-07-09 21:38:33", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 8, "deletions": 6, "lines": 14, "filePath": "src/main/java/com/ning/http/client/Realm.java"}, {"insertions": 15, "deletions": 3, "lines": 18, "filePath": "src/main/java/com/ning/http/util/AuthenticatorUtils.java"}, {"insertions": 14, "deletions": 44, "lines": 58, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java"}, {"insertions": 65, "deletions": 60, "lines": 125, "filePath": "src/test/java/com/ning/http/client/RealmTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java"}, {"insertions": 1, "deletions": 2, "lines": 3, "filePath": "src/main/java/com/ning/http/client/providers/jdk/JDKAsyncHttpProvider.java"}], "commitDateTime": "2014-07-09 21:38:33", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.util.AuthenticatorUtils.computeRealmURI(com.ning.http.client.Realm)"}, {"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.util.AuthenticatorUtils.computeDigestAuthentication(com.ning.http.client.Realm)"}], "spoonFilePath": "AuthenticatorUtils.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.jdk.JDKAsyncHttpProvider.AsyncHttpUrlConnection.call()"}], "spoonFilePath": "JDKAsyncHttpProvider.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 7, "MOV": 2, "INS": 0, "DEL": 4, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.ntlmProxyChallenge(java.util.List,com.ning.http.client.Request,com.ning.http.client.ProxyServer,com.ning.http.client.FluentCaseInsensitiveStringsMap,com.ning.http.client.Realm,com.ning.http.client.providers.netty.NettyResponseFuture)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.computeRealmURI(com.ning.http.client.Realm,com.ning.http.client.uri.UriComponents)"}, {"UPD": 0, "TOT": 5, "MOV": 1, "INS": 1, "DEL": 3, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.HttpProtocol.handle(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.MessageEvent)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.kerberosChallenge(java.util.List,com.ning.http.client.Request,com.ning.http.client.ProxyServer,com.ning.http.client.FluentCaseInsensitiveStringsMap,com.ning.http.client.Realm,com.ning.http.client.providers.netty.NettyResponseFuture,boolean)"}, {"UPD": 3, "TOT": 31, "MOV": 14, "INS": 4, "DEL": 10, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.ntlmChallenge(java.util.List,com.ning.http.client.Request,com.ning.http.client.ProxyServer,com.ning.http.client.FluentCaseInsensitiveStringsMap,com.ning.http.client.Realm,com.ning.http.client.providers.netty.NettyResponseFuture,boolean)"}], "spoonFilePath": "NettyAsyncHttpProvider.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.RealmTest.testStrongDigest()"}, {"UPD": 1, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.RealmTest.testOldDigest(java.lang.String)"}], "spoonFilePath": "RealmTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.AuthorizationHandler.handleStatus(org.glassfish.grizzly.http.HttpResponsePacket,com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider$HttpTransactionContext,org.glassfish.grizzly.filterchain.FilterChainContext)"}], "spoonFilePath": "GrizzlyAsyncHttpProvider.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.Realm.getUri()"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.Realm"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.Realm.RealmBuilder.setUri(java.lang.String)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.Realm.RealmBuilder.getUri()"}, {"UPD": 1, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.Realm.RealmBuilder"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.Realm.RealmBuilder.build()"}], "spoonFilePath": "Realm.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/607", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 39, "deletions": 36, "lines": 75, "gitFilesChange": 6}, "title": "Only Netty provider honor Realm.isOmitQuery and isUseAbsoluteURI", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["api/src/main/java/org/asynchttpclient/util", "providers/netty/src/main/java/org/asynchttpclient/providers/netty/handler", "api/src/main/java/org/asynchttpclient", "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/statushandler", "api/src/main/java/org/asynchttpclient/uri"], "spoonStatsSummary": {"UPD": 7, "spoonMethodsChanged": 17, "TOT": 34, "MOV": 10, "INS": 7, "DEL": 10, "spoonFilesChanged": 6}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2014-07-01 08:39:37", "commits": {"e5f188aaaef43f2eca45f5ccdc6548d7d32f6f4f": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "c86f415bcd61b1566148e53572346689ec8babaf": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 2, "closed": "2014-07-01 08:43:11", "filteredCommits": ["e5f188aaaef43f2eca45f5ccdc6548d7d32f6f4f", "c86f415bcd61b1566148e53572346689ec8babaf"], "commitsDetails": [{"nameRev": "e5f188aaaef43f2eca45f5ccdc6548d7d32f6f4f tags/2.0.0-alpha1~399", "commitMessage": "Fix Fluent(CaseInsensitiveStrings)Map.add javadoc, close #581\n", "commitParents": ["9fdf6e79bff1b863c7a8bfba2f57daed8da82ddb"], "spoonStatsSkippedReason": "", "commitHash": "e5f188aaaef43f2eca45f5ccdc6548d7d32f6f4f", "authoredDateTime": "2014-07-01 10:43:06", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 2, "lines": 3, "filePath": "api/src/main/java/org/asynchttpclient/FluentCaseInsensitiveStringsMap.java"}, {"insertions": 2, "deletions": 4, "lines": 6, "filePath": "api/src/main/java/org/asynchttpclient/FluentStringsMap.java"}], "commitDateTime": "2014-07-01 10:43:06", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "FluentStringsMap.java"}, {"spoonMethods": [], "spoonFilePath": "FluentCaseInsensitiveStringsMap.java"}]}, {"nameRev": "c86f415bcd61b1566148e53572346689ec8babaf tags/async-http-client-1.8.12~2", "commitMessage": "Fix Fluent(CaseInsensitive)StringsMap.add javadocs, backport #581\n", "commitParents": ["cced1d4e9b6016fadb38049721d519898b0d08cb"], "spoonStatsSkippedReason": "", "commitHash": "c86f415bcd61b1566148e53572346689ec8babaf", "authoredDateTime": "2014-07-01 10:50:58", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 4, "lines": 6, "filePath": "src/main/java/com/ning/http/client/FluentStringsMap.java"}, {"insertions": 1, "deletions": 2, "lines": 3, "filePath": "src/main/java/com/ning/http/client/FluentCaseInsensitiveStringsMap.java"}], "commitDateTime": "2014-07-01 10:50:58", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "FluentStringsMap.java"}, {"spoonMethods": [], "spoonFilePath": "FluentCaseInsensitiveStringsMap.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/581", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 6, "deletions": 12, "lines": 18, "gitFilesChange": 4}, "title": "Fluent(CaseInsensitive)StringsMap.add javadocs are wrong", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client", "api/src/main/java/org/asynchttpclient"], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "For both, javadoc states that null values are ignored and one should pass an empty String.\n\nActual behaviors are different:\n- FluentStringsMap accepts null values, as of #234. FluentStringsMap is used for query params and form params.\n- FluentCaseInsensitiveStringsMap still turns null into empty Strings, why not... FluentCaseInsensitiveStringsMap is only used for headers.\n", "labels": ["Defect"]}, {"created": "2014-06-18 01:13:04", "commits": {"91ea232210edf7aba9f67085787c9e094690bf38": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.NettyAsyncHttpProvider.construct(com.ning.http.client.AsyncHttpClientConfig,com.ning.http.client.Request,org.jboss.netty.handler.codec.http.HttpMethod,java.net.URI,org.jboss.netty.buffer.ChannelBuffer,com.ning.http.client.ProxyServer)", "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.writeRequest(org.jboss.netty.channel.Channel,com.ning.http.client.AsyncHttpClientConfig,com.ning.http.client.providers.netty.NettyResponseFuture)"], "closed": "2014-06-18 07:48:53", "filteredCommits": ["91ea232210edf7aba9f67085787c9e094690bf38"], "commitsDetails": [{"nameRev": "91ea232210edf7aba9f67085787c9e094690bf38 tags/async-http-client-1.8.12~4", "commitMessage": "InputStream shouldn't be fully read, this is streaming! close #576\n", "commitParents": ["815b7a2ca1d628ca66cb5d21eeb3e0fcb6a50311"], "spoonStatsSkippedReason": "", "commitHash": "91ea232210edf7aba9f67085787c9e094690bf38", "authoredDateTime": "2014-06-18 09:45:07", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 5, "deletions": 6, "lines": 11, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java"}], "commitDateTime": "2014-06-18 09:45:08", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 13, "MOV": 8, "INS": 1, "DEL": 4, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.construct(com.ning.http.client.AsyncHttpClientConfig,com.ning.http.client.Request,org.jboss.netty.handler.codec.http.HttpMethod,java.net.URI,org.jboss.netty.buffer.ChannelBuffer,com.ning.http.client.ProxyServer)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.writeRequest(org.jboss.netty.channel.Channel,com.ning.http.client.AsyncHttpClientConfig,com.ning.http.client.providers.netty.NettyResponseFuture)"}], "spoonFilePath": "NettyAsyncHttpProvider.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/576", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 5, "deletions": 6, "lines": 11, "gitFilesChange": 1}, "title": "Netty: Upload fails on size 2 GB + file with java.lang.NegativeArraySizeException", "statsSkippedReason": "", "user": "charlesk40", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 14, "MOV": 8, "INS": 2, "DEL": 4, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "We are using 1.8.7\nhttps://github.com/AsyncHttpClient/async-http-client/blob/async-http-client-1.8.7/src/main/java/com/ning/http/util/AsyncHttpProviderUtils.java\n\n```\nprivate static byte[] doubleUp(byte[] b) {\n    int len = b.length;\n    byte[] b2 = new byte[len + len];\n    System.arraycopy(b, 0, b2, 0, len);\n    return b2;\n}\n```\n\nlen we get is 1073741824\nand new byte[len + len] throws java.lang.NegativeArraySizeException\n", "labels": ["Defect", "Netty"]}, {"created": "2014-06-13 21:22:11", "user": "lokeshhctm", "body": "The client along with Netty 4.0.19 was way much better than the current one with 4.0.20\nThat may be because now \"setAsyncConnectMode\" is not available (just guess).\n", "closed": "2014-07-12 17:17:57", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/574", "ttf": 28.00027777777778, "commits": {}, "labels": ["Defect", "Netty"], "title": "Performanceof earlier build with Netty 4.0.19 was way much better than the client with 4.0.20"}, {"created": "2014-06-08 13:46:46", "commits": {"e9452c3b3ccbb27e6450093801d08f22123dc304": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "857bdd195f7af88ed9c21e7e323afc9b30816cb4": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.extra.AsyncHandlerWrapper", "org.asynchttpclient.extra.AsyncHandlerWrapper.onCompleted()", "org.asynchttpclient.extra.AsyncHandlerWrapper.onThrowable(java.lang.Throwable)"], "closed": "2014-07-17 00:08:24", "filteredCommits": ["e9452c3b3ccbb27e6450093801d08f22123dc304"], "commitsDetails": [{"nameRev": "e9452c3b3ccbb27e6450093801d08f22123dc304 tags/2.0.0-alpha1~357", "commitMessage": "Make ThrottleRequestFilter properly release Semaphore, close #567\n", "commitParents": ["6be39c58d044680bad36e2619e82ca9eb266be84"], "spoonStatsSkippedReason": "", "commitHash": "e9452c3b3ccbb27e6450093801d08f22123dc304", "authoredDateTime": "2014-07-17 02:08:19", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 16, "deletions": 10, "lines": 26, "filePath": "api/src/main/java/org/asynchttpclient/extra/AsyncHandlerWrapper.java"}], "commitDateTime": "2014-07-17 02:08:19", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.extra.AsyncHandlerWrapper"}, {"UPD": 0, "TOT": 4, "MOV": 1, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.extra.AsyncHandlerWrapper.onCompleted()"}, {"UPD": 3, "TOT": 10, "MOV": 6, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.extra.AsyncHandlerWrapper.onThrowable(java.lang.Throwable)"}], "spoonFilePath": "AsyncHandlerWrapper.java"}]}, {"nameRev": "857bdd195f7af88ed9c21e7e323afc9b30816cb4 tags/async-http-client-1.9.0-BETA2~20", "commitMessage": "Make ThrottleRequestFilter properly release Semaphore, close #567\n", "commitParents": ["c595aabb7435acaf735e327e87622db8b79e021a"], "spoonStatsSkippedReason": "", "commitHash": "857bdd195f7af88ed9c21e7e323afc9b30816cb4", "authoredDateTime": "2014-07-17 02:04:15", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 19, "deletions": 15, "lines": 34, "filePath": "src/main/java/com/ning/http/client/extra/ThrottleRequestFilter.java"}], "commitDateTime": "2014-07-17 02:04:15", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.extra.ThrottleRequestFilter.AsyncHandlerWrapper"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.extra.ThrottleRequestFilter.AsyncHandlerWrapper.complete()"}, {"UPD": 0, "TOT": 7, "MOV": 1, "INS": 1, "DEL": 5, "spoonMethodName": "com.ning.http.client.extra.ThrottleRequestFilter"}, {"UPD": 0, "TOT": 3, "MOV": 2, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.extra.ThrottleRequestFilter.AsyncHandlerWrapper.onThrowable(java.lang.Throwable)"}, {"UPD": 0, "TOT": 4, "MOV": 1, "INS": 1, "DEL": 2, "spoonMethodName": "com.ning.http.client.extra.ThrottleRequestFilter.AsyncHandlerWrapper.onCompleted()"}], "spoonFilePath": "ThrottleRequestFilter.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/567", "ttf": 38.000277777777775, "gitStatsSummary": {"insertions": 16, "deletions": 10, "lines": 26, "gitFilesChange": 1}, "title": "ThrottleRequestFilter not working", "statsSkippedReason": "", "user": "pprun", "changesInPackagesGIT": ["api/src/main/java/org/asynchttpclient/extra"], "spoonStatsSummary": {"UPD": 4, "spoonMethodsChanged": 3, "TOT": 16, "MOV": 7, "INS": 3, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "[In release 1.8.8 & 1.8.9]\nAsyncHttpClient was created with  the following config:\n\n```\nAsyncHttpClientConfig.Builder bc = new AsyncHttpClientConfig.Builder();\n        bc.setAllowPoolingConnection(true);\n        bc.setCompressionEnabled(true);\n        bc.setFollowRedirects(true);\n        bc.setMaximumNumberOfRedirects(5);\n        int timeOutInSecond = 10; // 10 s\n        bc.setConnectionTimeoutInMs(timeOutInSecond * 1000);\n        bc.setRequestTimeoutInMs(timeOutInSecond * 1000);\n        bc.setMaximumConnectionsPerHost(10); \n        //bc.setMaximumConnectionsTotal(200); // bug: https://github.com/AsyncHttpClient/async-http-client/issues/201\n        bc.addRequestFilter(new ThrottleRequestFilter(200, 5*60)); // waiting for 5 minutes for others release\n\nasyncHttpClient = new AsyncHttpClient(bc.build());\n```\n\nAlthough the max connection total is set to 200, the client is currently used by more than 8 threads,  running after a while, the log shows the 'Current Throttling Status' is larger than 200:\n\n```\n2014-06-08 21:38:12,495 DEBUG [com.ning.http.client.extra.ThrottleRequestFilter] (image-crawler-pool-2:) Current Throttling Status 259\n2014-06-08 21:38:12,496 DEBUG [com.ning.http.client.extra.ThrottleRequestFilter] (New I/O worker #23:) Current Throttling Status 259\n2014-06-08 21:38:12,548 DEBUG [com.ning.http.client.extra.ThrottleRequestFilter] (New I/O worker #27:) Current Throttling Status 260\n2014-06-08 21:38:12,975 DEBUG [com.ning.http.client.extra.ThrottleRequestFilter] (image-crawler-pool-7:) Current Throttling Status 260\n....\n```\n", "labels": ["Defect", "Netty"]}, {"created": "2014-06-04 06:56:00", "commits": {"094fcc01e531c5681fe4b9da6456fd6d11bd9beb": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "accba1ab9231d44a21732c902ed7980f1cd9a8bf": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.providers.netty.channel.DefaultChannelPool"], "closed": "2014-06-04 06:57:41", "filteredCommits": ["094fcc01e531c5681fe4b9da6456fd6d11bd9beb"], "commitsDetails": [{"nameRev": "094fcc01e531c5681fe4b9da6456fd6d11bd9beb tags/2.0.0-alpha1~419", "commitMessage": "Only trigger IdleChannelDetector when maxIdleTime is > 0, close #566\n", "commitParents": ["c90cf8628bdcf1bfca6cb512c08ead143914b82f"], "spoonStatsSkippedReason": "", "commitHash": "094fcc01e531c5681fe4b9da6456fd6d11bd9beb", "authoredDateTime": "2014-06-04 08:57:36", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 1, "lines": 4, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/channel/DefaultChannelPool.java"}], "commitDateTime": "2014-06-04 08:57:36", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool"}], "spoonFilePath": "DefaultChannelPool.java"}]}, {"nameRev": "accba1ab9231d44a21732c902ed7980f1cd9a8bf tags/async-http-client-1.8.10~6", "commitMessage": "Only trigger IdleChannelDetector when maxIdleTime is > 0, close #566\n", "commitParents": ["9134f89fa45c69fc6dc8c671a82c86daa3e36352"], "spoonStatsSkippedReason": "", "commitHash": "accba1ab9231d44a21732c902ed7980f1cd9a8bf", "authoredDateTime": "2014-06-04 08:56:22", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 1, "lines": 4, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyConnectionsPool.java"}], "commitDateTime": "2014-06-04 08:56:22", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyConnectionsPool"}], "spoonFilePath": "NettyConnectionsPool.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/566", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 3, "deletions": 1, "lines": 4, "gitFilesChange": 1}, "title": "Only trigger IdleChannelDetector when maxIdleTime is > 0", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["providers/netty/src/main/java/org/asynchttpclient/providers/netty/channel"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2014-05-21 22:37:13", "commits": {"06686213e426f1a65c0b63c81030a3db481df4d2": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "df81d4420432c814c57a1d7acb4b503c5a3a6b1d": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "619bda469c4ba067931d2c6e814de307a811691c": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2014-06-12 08:24:10", "filteredCommits": [], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "06686213e426f1a65c0b63c81030a3db481df4d2", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "df81d4420432c814c57a1d7acb4b503c5a3a6b1d tags/2.0.0-alpha1~413", "commitMessage": "Make NPE message more explicit when passing a null hostname to avoid proxy, close #560, close #561\n", "commitParents": ["77be69e78ee6d6110bd6160aa5633b89d43dae98"], "spoonStatsSkippedReason": "", "commitHash": "df81d4420432c814c57a1d7acb4b503c5a3a6b1d", "authoredDateTime": "2014-06-12 10:23:58", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 6, "deletions": 3, "lines": 9, "filePath": "api/src/main/java/org/asynchttpclient/util/ProxyUtils.java"}], "commitDateTime": "2014-06-12 10:23:58", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.ProxyUtils.avoidProxy(org.asynchttpclient.ProxyServer,java.lang.String)"}], "spoonFilePath": "ProxyUtils.java"}]}, {"nameRev": "619bda469c4ba067931d2c6e814de307a811691c tags/async-http-client-1.8.11~5", "commitMessage": "Make NPE message more explicit when passing a null hostname to avoid proxy, close #560, close #561\n", "commitParents": ["fadedec6418bd7bc4ab62b164ffe11b803792156"], "spoonStatsSkippedReason": "", "commitHash": "619bda469c4ba067931d2c6e814de307a811691c", "authoredDateTime": "2014-06-12 10:20:47", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 6, "deletions": 3, "lines": 9, "filePath": "src/main/java/com/ning/http/util/ProxyUtils.java"}], "commitDateTime": "2014-06-12 16:27:10", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.util.ProxyUtils.avoidProxy(com.ning.http.client.ProxyServer,java.lang.String)"}], "spoonFilePath": "ProxyUtils.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/560", "ttf": 21.00027777777778, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "title": "Calling avoidProxy with illegal URL throws NullPointerException", "statsSkippedReason": "", "user": "scr", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 0, "TOT": 0.0, "MOV": 0.0, "INS": 0.0, "DEL": 0.0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 2, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "Below is a patch to ProxyUtilsTest.java that shows a reduction of the issue.\n\n```\nRunning TestSuite\nTests run: 94, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 13.271 sec <<< FAILURE! - in TestSuite\ntestBasics(org.asynchttpclient.util.ProxyUtilsTest)  Time elapsed: 0.013 sec  <<< FAILURE!\njava.lang.NullPointerException: null\n    at org.asynchttpclient.util.ProxyUtils.avoidProxy(ProxyUtils.java:116)\n    at org.asynchttpclient.util.ProxyUtils.avoidProxy(ProxyUtils.java:101)\n    at org.asynchttpclient.util.ProxyUtilsTest.testBasics(ProxyUtilsTest.java:52)\n\n\nResults :\n\nFailed tests: \n  ProxyUtilsTest.testBasics:52 \u00bb NullPointer\n```\n\n```\n\n---\ndiff --git a/api/src/test/java/org/asynchttpclient/util/ProxyUtilsTest.java b/api/src/test/java/org/asynchttpclient/util/ProxyUtilsTest.java\nindex fdcb888..19db97c 100644\n--- a/api/src/test/java/org/asynchttpclient/util/ProxyUtilsTest.java\n+++ b/api/src/test/java/org/asynchttpclient/util/ProxyUtilsTest.java\n@@ -44,5 +44,11 @@ public class ProxyUtilsTest {\n         proxyServer = new ProxyServer(\"foo\", 1234);\n         proxyServer.addNonProxyHost(\"*.somewhere.org\");\n         assertFalse(ProxyUtils.avoidProxy(proxyServer, req));\n+\n+        // shouldn't crash\n+        req = new RequestBuilder(\"GET\").setUrl(\"http:///badhost/foo\").build();\n+        proxyServer = new ProxyServer(\"foo\", 1234);\n+        proxyServer.addNonProxyHost(\"*.somewhere.org\");\n+        assertFalse(ProxyUtils.avoidProxy(proxyServer, req));\n     }\n }\n```\n", "labels": ["Defect", "Netty"]}, {"created": "2014-05-20 21:00:23", "commits": {"e84ee123f57958fc0cd8f7f2b1df195ec68f94d1": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}, "11f1719ebf5dcbd5d8cfee75e21e4119a9eca243": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}, "d61fe944259fe6593f1ee24d9642750c0231fd0b": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}}, "numCommits": 2, "changesInPackagesSPOON": ["org.asynchttpclient.providers.grizzly.EventHandler.onHttpHeaderError(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext,java.lang.Throwable)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onInitialLineParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpHeadersParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.exceptionOccurred(org.glassfish.grizzly.filterchain.FilterChainContext,java.lang.Throwable)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpPacketParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpHeadersEncoded(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)", "org.asynchttpclient.providers.grizzly.filters.AsyncHttpClientEventFilter.onHttpContentError(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext,java.lang.Throwable)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpContentEncoded(org.glassfish.grizzly.http.HttpContent,org.glassfish.grizzly.filterchain.FilterChainContext)", "org.asynchttpclient.providers.grizzly.filters.AsyncSpdyClientEventFilter.onHttpContentError(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext,java.lang.Throwable)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpContentParsed(org.glassfish.grizzly.http.HttpContent,org.glassfish.grizzly.filterchain.FilterChainContext)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpHeaderError(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext,java.lang.Throwable)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.cleanup(org.glassfish.grizzly.filterchain.FilterChainContext,com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider)", "org.asynchttpclient.providers.grizzly.EventHandler.onHttpContentError(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext,java.lang.Throwable)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpContentError(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext,java.lang.Throwable)"], "closed": "2014-05-21 05:38:21", "filteredCommits": ["11f1719ebf5dcbd5d8cfee75e21e4119a9eca243", "e84ee123f57958fc0cd8f7f2b1df195ec68f94d1"], "commitsDetails": [{"nameRev": "e84ee123f57958fc0cd8f7f2b1df195ec68f94d1 tags/2.0.0-alpha1~425", "commitMessage": "[master] + fix the issue #559\nhttps://github.com/AsyncHttpClient/async-http-client/issues/559\n GrizzlyAsyncHttpProvider hangs on Exception #559", "commitParents": ["3c56c7f883a0c39196cf11d1d190811331e9b9d6"], "spoonStatsSkippedReason": "", "commitHash": "e84ee123f57958fc0cd8f7f2b1df195ec68f94d1", "authoredDateTime": "2014-05-20 22:43:55", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 7, "deletions": 1, "lines": 8, "filePath": "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/filters/AsyncSpdyClientEventFilter.java"}, {"insertions": 5, "deletions": 0, "lines": 5, "filePath": "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/filters/AsyncHttpClientEventFilter.java"}, {"insertions": 7, "deletions": 3, "lines": 10, "filePath": "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/EventHandler.java"}], "commitDateTime": "2014-05-20 22:43:55", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 3, "spoonMethodName": "org.asynchttpclient.providers.grizzly.EventHandler.onHttpHeaderError(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext,java.lang.Throwable)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.grizzly.EventHandler.onHttpContentError(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext,java.lang.Throwable)"}], "spoonFilePath": "EventHandler.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.grizzly.filters.AsyncSpdyClientEventFilter.onHttpContentError(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext,java.lang.Throwable)"}], "spoonFilePath": "AsyncSpdyClientEventFilter.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.grizzly.filters.AsyncHttpClientEventFilter.onHttpContentError(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext,java.lang.Throwable)"}], "spoonFilePath": "AsyncHttpClientEventFilter.java"}]}, {"nameRev": "11f1719ebf5dcbd5d8cfee75e21e4119a9eca243 tags/async-http-client-1.8.10~16", "commitMessage": "[1.8.x] + fix the issue #559\nhttps://github.com/AsyncHttpClient/async-http-client/issues/559\n GrizzlyAsyncHttpProvider hangs on Exception #559 ", "commitParents": ["60dd3c065e005df2f0acaa72d36f7d30d5c128d3"], "spoonStatsSkippedReason": "", "commitHash": "11f1719ebf5dcbd5d8cfee75e21e4119a9eca243", "authoredDateTime": "2014-05-20 22:28:06", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 23, "deletions": 17, "lines": 40, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java"}], "commitDateTime": "2014-05-20 22:28:06", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpContentError(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext,java.lang.Throwable)"}, {"UPD": 1, "TOT": 15, "MOV": 11, "INS": 1, "DEL": 2, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpHeaderError(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext,java.lang.Throwable)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.exceptionOccurred(org.glassfish.grizzly.filterchain.FilterChainContext,java.lang.Throwable)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onInitialLineParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.cleanup(org.glassfish.grizzly.filterchain.FilterChainContext,com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpHeadersEncoded(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpHeadersParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpContentEncoded(org.glassfish.grizzly.http.HttpContent,org.glassfish.grizzly.filterchain.FilterChainContext)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpPacketParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpContentParsed(org.glassfish.grizzly.http.HttpContent,org.glassfish.grizzly.filterchain.FilterChainContext)"}], "spoonFilePath": "GrizzlyAsyncHttpProvider.java"}]}, {"nameRev": "d61fe944259fe6593f1ee24d9642750c0231fd0b tags/async-http-client-1.8.10~15", "commitMessage": "[1.8.x] + fix the issue #559\nhttps://github.com/AsyncHttpClient/async-http-client/issues/559\n GrizzlyAsyncHttpProvider hangs on Exception #559\n", "commitParents": ["11f1719ebf5dcbd5d8cfee75e21e4119a9eca243"], "spoonStatsSkippedReason": "", "commitHash": "d61fe944259fe6593f1ee24d9642750c0231fd0b", "authoredDateTime": "2014-05-20 22:28:06", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/test/java/com/ning/http/client/async/grizzly/GrizzlyFeedableBodyGeneratorTest.java"}], "commitDateTime": "2014-05-20 22:35:28", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "GrizzlyFeedableBodyGeneratorTest.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/559", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 42, "deletions": 21, "lines": 63, "gitFilesChange": 4}, "title": "GrizzlyAsyncHttpProvider hangs on Exception", "statsSkippedReason": "", "user": "gerdriesselmann", "changesInPackagesGIT": ["providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly", "src/main/java/com/ning/http/client/providers/grizzly", "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/filters"], "spoonStatsSummary": {"UPD": 1.0, "spoonMethodsChanged": 14, "TOT": 33.0, "MOV": 12.0, "INS": 6.0, "DEL": 14.0, "spoonFilesChanged": 4}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Under some conditions, an exception\n\n```\nException org.glassfish.grizzly.http.HttpBrokenContentException: Invalid byte representing a hex value within a chunk length encountered : 32\n```\n\nis raised in org.glassfish.grizzly.http.HttpCodecFilter.decodeWithTransferEncoding after which neither onComplete or onThrowable on the AHC As\u00fdncHandler are called. This makes AHC client hanging forever.\n\nThe exact path is as follows:\n- org.glassfish.grizzly.http.HttpCodecFilter.handleRead():510 calls HttpCodecFilter.decodeWithTransferEncoding()\n- Exception is raised\n- Exception is catched on HttpCodecFilter.handleRead():536\n- Code walks on until HttpCodecFilter.handleRead():542\n- It calls org.glassfish.grizzly.http.HttpClientFilter.onHttpContentError(), which itself raises an IllegalStateException\n- Code after org.glassfish.grizzly.http.HttpCodecFilter.handleRead():542 therefore is not executed\n- Now exception bubbles up, next stop is org.glassfish.grizzly.filterchain.DefaultFilterChain.execute():157\n- Which invokes DefaultFilterChain.throwChain():\n- Which in turn first calls DefaultFilterChain.notifyFailure():554, but both context.operationCompletionHandler and context.transportFilterContext.completionHandler are null\n- After that it invokes exceptionOccurs() on other Filters, but none of them does anything in that operation\n- Codes create an result and returns to DefaultFilterChain.process():112\n- Which returns to org.glassfish.grizzly.ProcessorExecutor.execute():77\n- Which steps to ProcessorExecutor.execute():86\n- Which calls complete0(), but there is nothing really happening there, a listener is called in error(), but does nothing.\n- After that codes fades into Thread handling stuff.\n\nThe behavior is new, we successfully handled errors like that in the past, so I suspect that some last changes caused this as a side effect.\n\nI did a diff on the last Git commits, but did find anything obvious.\n\nSince this is all code on the Grizzly side, this may as well be a Grizzly issue, but I did not spot any related changes in the Git.\n", "labels": ["Defect", "Grizzly"]}, {"created": "2014-05-17 03:03:23", "user": "wsargent", "body": "If the hostname verifier returns false, a ConnectException is thrown.  Unfortunately, the DefaultChannelFuture does not do anything with the exception (besides logging) so has no effect on the future.\n\nNot sure what the solution here should be, but perhaps future.abort(e) would return a future failure that WS could work with.\n\nIssue in WS SSL: https://github.com/playframework/playframework/issues/2767\n", "closed": "2014-07-10 13:32:16", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/555", "ttf": 54.000277777777775, "commits": {}, "labels": ["Defect", "Netty"], "title": "NettyConnectListener should not throw exception on hostnameVerifier failure"}, {"created": "2014-05-15 05:12:53", "commits": {"9ec5b43a157f04485f962c826969589df0a4ee1c": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}, "441d7188cf8abfb0c911a3235e18a2011e6f5b65": {"commitGHEventType": "referenced", "commitUser": "oleksiys"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.HttpTransactionContext", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientTransportFilter.handleRead(org.glassfish.grizzly.filterchain.FilterChainContext)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.HttpTransactionContext.isGracefullyFinishResponseOnClose()", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpHeadersParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.handleRead(org.glassfish.grizzly.filterchain.FilterChainContext)", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.GracefulCloseEvent"], "closed": "2014-05-15 08:32:06", "filteredCommits": ["9ec5b43a157f04485f962c826969589df0a4ee1c", "441d7188cf8abfb0c911a3235e18a2011e6f5b65"], "commitsDetails": [{"nameRev": "9ec5b43a157f04485f962c826969589df0a4ee1c tags/async-http-client-1.8.9~9", "commitMessage": "[1.8.x] (rework) fix issue #549\nhttps://github.com/AsyncHttpClient/async-http-client/issues/549\n\"[grizzly-provider] connection abort, when neither transfer-encoding nor content-length is specified\"", "commitParents": ["8c34ad150f18be6127ca0e5f7678da6f5e390e20"], "spoonStatsSkippedReason": "", "commitHash": "9ec5b43a157f04485f962c826969589df0a4ee1c", "authoredDateTime": "2014-05-15 01:31:00", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 108, "deletions": 0, "lines": 108, "filePath": "src/test/java/com/ning/http/client/async/grizzly/GrizzlyNoTransferEncodingTest.java"}, {"insertions": 46, "deletions": 21, "lines": 67, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java"}], "commitDateTime": "2014-05-15 01:31:00", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.HttpTransactionContext"}, {"UPD": 1, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientTransportFilter.handleRead(org.glassfish.grizzly.filterchain.FilterChainContext)"}, {"UPD": 0, "TOT": 7, "MOV": 1, "INS": 4, "DEL": 2, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.HttpTransactionContext.isGracefullyFinishResponseOnClose()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onHttpHeadersParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)"}, {"UPD": 6, "TOT": 13, "MOV": 6, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.handleRead(org.glassfish.grizzly.filterchain.FilterChainContext)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.GracefulCloseEvent"}], "spoonFilePath": "GrizzlyAsyncHttpProvider.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.grizzly.GrizzlyNoTransferEncodingTest"}], "spoonFilePath": "GrizzlyNoTransferEncodingTest.java"}]}, {"nameRev": "441d7188cf8abfb0c911a3235e18a2011e6f5b65 tags/2.0.0-alpha1~433", "commitMessage": "[master] (forgot to add files) fix issue #549\nhttps://github.com/AsyncHttpClient/async-http-client/issues/549\n\"[grizzly-provider] connection abort, when neither transfer-encoding nor content-length is specified\"", "commitParents": ["966176f2366d2c04ca4c6574f182db644bca936d"], "spoonStatsSkippedReason": "", "commitHash": "441d7188cf8abfb0c911a3235e18a2011e6f5b65", "authoredDateTime": "2014-05-15 01:10:57", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 7, "deletions": 1, "lines": 8, "filePath": "providers/grizzly/pom.xml"}, {"insertions": 108, "deletions": 0, "lines": 108, "filePath": "providers/grizzly/src/test/java/org/asynchttpclient/providers/grizzly/GrizzlyNoTransferEncodingTest.java"}], "commitDateTime": "2014-05-15 01:10:57", "commitUser": "oleksiys", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.grizzly.GrizzlyNoTransferEncodingTest"}], "spoonFilePath": "GrizzlyNoTransferEncodingTest.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/549", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 46, "deletions": 21, "lines": 67, "gitFilesChange": 1}, "title": "[grizzly-provider] connection abort, when neither transfer-encoding nor content-length is specified", "statsSkippedReason": "", "user": "oleksiys", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/grizzly"], "spoonStatsSummary": {"UPD": 7, "spoonMethodsChanged": 6, "TOT": 26, "MOV": 8, "INS": 5, "DEL": 6, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "[mirror of https://java.net/jira/browse/GRIZZLY-1679]\n\nWe at Strucr use the Grizzly HTTP Client to crawl a lot of sites, and we again and again have problems where Grizzly incorrectly reports a connection as having been remotely closed, that indeed was not.\n\nThe behavior is triggered by a HTTP response that\n\n```\nhas no content-length, but\nalso has Connection: Close\n```\n\nLike this:\n\nHTTP/1.0 200 OK\nDate: Tue, 29 Apr 2014 22:18:06 GMT\nServer: Apache\nCache-Control: no-cache\nVary: Accept-Encoding\nContent-Encoding: gzip\nConnection: close\nContent-Type: text/plain; charset=UTF-8\n\nThe according request was sent as keep-alive:\n\nGET /robots.txt HTTP/1.1\nHost: www.aroundtheglobe.nl\nConnection: keep-alive\n\nThe issue also occurs if the response is HTTP 1.1.\n\nGrizzyl in this case throws an java.io.IOException: Remotely Closed\n\nThis is the stack trace:\n\ncom.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider$AsyncHttpClientTransportFilter$1.failed(GrizzlyAsyncHttpProvider.java:761),\norg.glassfish.grizzly.filterchain.DefaultFilterChain.notifyFailure(DefaultFilterChain.java:617),\norg.glassfish.grizzly.filterchain.DefaultFilterChain.throwChain(DefaultFilterChain.java:493),\norg.glassfish.grizzly.filterchain.DefaultFilterChain.execute(DefaultFilterChain.java:165),\norg.glassfish.grizzly.filterchain.DefaultFilterChain.process(DefaultFilterChain.java:115),\norg.glassfish.grizzly.ProcessorExecutor.execute(ProcessorExecutor.java:77),\norg.glassfish.grizzly.nio.transport.TCPNIOTransport.fireIOEvent(TCPNIOTransport.java:550),\norg.glassfish.grizzly.strategies.AbstractIOStrategy.fireIOEvent(AbstractIOStrategy.java:112),\norg.glassfish.grizzly.strategies.WorkerThreadIOStrategy.run0(WorkerThreadIOStrategy.java:117),\norg.glassfish.grizzly.strategies.WorkerThreadIOStrategy.access$100(WorkerThreadIOStrategy.java:56),\norg.glassfish.grizzly.strategies.WorkerThreadIOStrategy$WorkerThreadRunnable.run(WorkerThreadIOStrategy.java:137),\njava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1146),\njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615),\njava.lang.Thread.run(Thread.java:701)\n\nThe behavior is reproducible, and we also tested against but do not have the problem with\n\n```\nNetty,\nApache HTTP Client and\nJava URL\n```\n\nAll major browsers work, too.\n\nSince the Content-Length header is not required, but only SHOULD be send in a response, we believe this is a bug of Grizzly.\n", "labels": ["Defect", "Grizzly"]}, {"created": "2014-04-25 14:46:27", "user": "densmnko", "body": "Requests with config like this is broken under 1.8.7 (works fine in 1.8.6) : \n\n```\nnew AsyncHttpClientConfig.Builder()\n            .setMaximumConnectionsPerHost(100)\n            .addRequestFilter(new ThrottleRequestFilter(1000))\n            .setAllowPoolingConnection(true)\n            .setFollowRedirects(false)\n            .setConnectionTimeoutInMs(15000)\n            .setRequestTimeoutInMs(45000)\n            .setMaxRequestRetry(0)\n            .build();\n```\n", "closed": "2014-04-30 03:37:42", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/542", "ttf": 4.000277777777778, "commits": {}, "labels": ["Defect", "Netty"], "title": "Request is stalled if requestTimeoutInMs < 60000 ms in 1.8.7 "}, {"created": "2014-04-12 20:51:45", "commits": {"63c51410d8a73e9406f996a06d4431ac70c14a9e": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "1643fa23e827ea550a1c59917f6d24be2710eac7": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "3b41defac647ead03343da8b81c7fae9da8b5cb1": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "051792f0f4a3cf709c334761e133598075217caa": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 2, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.timeout.TimeoutsHolder.cancel()", "com.ning.http.client.providers.netty.timeout.TimeoutsHolder", "org.asynchttpclient.providers.netty.request.timeout.TimeoutsHolder.cancel()", "org.asynchttpclient.providers.netty.request.timeout.TimeoutsHolder"], "closed": "2014-04-18 08:32:32", "filteredCommits": ["63c51410d8a73e9406f996a06d4431ac70c14a9e", "1643fa23e827ea550a1c59917f6d24be2710eac7"], "commitsDetails": [{"nameRev": "63c51410d8a73e9406f996a06d4431ac70c14a9e tags/2.0.0-alpha1~441", "commitMessage": "idleConnectionTimeout might have been dropped or not set, close #534\n", "commitParents": ["56b7228f52e34300ce209c25fdc55775dff90e16"], "spoonStatsSkippedReason": "", "commitHash": "63c51410d8a73e9406f996a06d4431ac70c14a9e", "authoredDateTime": "2014-04-18 10:32:33", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 9, "deletions": 5, "lines": 14, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/request/timeout/TimeoutsHolder.java"}], "commitDateTime": "2014-04-18 10:32:33", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 4, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.request.timeout.TimeoutsHolder.cancel()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.timeout.TimeoutsHolder"}], "spoonFilePath": "TimeoutsHolder.java"}]}, {"nameRev": "1643fa23e827ea550a1c59917f6d24be2710eac7 tags/async-http-client-1.8.7~1", "commitMessage": "MakeTimeoutsHolder threadsafe, close #534\n", "commitParents": ["e025988b591add12a819e9a4af8ec09ea3d3cb0e"], "spoonStatsSkippedReason": "", "commitHash": "1643fa23e827ea550a1c59917f6d24be2710eac7", "authoredDateTime": "2014-04-12 22:52:09", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 5, "deletions": 4, "lines": 9, "filePath": "src/main/java/com/ning/http/client/providers/netty/timeout/TimeoutsHolder.java"}], "commitDateTime": "2014-04-12 22:52:09", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 3, "INS": 1, "DEL": 2, "spoonMethodName": "com.ning.http.client.providers.netty.timeout.TimeoutsHolder.cancel()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.timeout.TimeoutsHolder"}], "spoonFilePath": "TimeoutsHolder.java"}]}, {"nameRev": "3b41defac647ead03343da8b81c7fae9da8b5cb1 tags/2.0.0-alpha1~444", "commitMessage": "MakeTimeoutsHolder threadsafe, close #534\n", "commitParents": ["710a19fd4a048208f4924f9514e0a97b086230d0"], "spoonStatsSkippedReason": "", "commitHash": "3b41defac647ead03343da8b81c7fae9da8b5cb1", "authoredDateTime": "2014-04-12 22:54:03", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 5, "deletions": 4, "lines": 9, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/request/timeout/TimeoutsHolder.java"}], "commitDateTime": "2014-04-12 22:54:03", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 3, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.netty.request.timeout.TimeoutsHolder.cancel()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.timeout.TimeoutsHolder"}], "spoonFilePath": "TimeoutsHolder.java"}]}, {"nameRev": "051792f0f4a3cf709c334761e133598075217caa tags/async-http-client-1.8.8~5", "commitMessage": "idleConnectionTimeout might have been dropped or not set, close #534\n", "commitParents": ["93652c385e2462211ea2586ec41cffc2da0803ac"], "spoonStatsSkippedReason": "", "commitHash": "051792f0f4a3cf709c334761e133598075217caa", "authoredDateTime": "2014-04-18 10:31:04", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 9, "deletions": 5, "lines": 14, "filePath": "src/main/java/com/ning/http/client/providers/netty/timeout/TimeoutsHolder.java"}], "commitDateTime": "2014-04-18 10:31:04", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 4, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.timeout.TimeoutsHolder.cancel()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.timeout.TimeoutsHolder"}], "spoonFilePath": "TimeoutsHolder.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/534", "ttf": 5.000277777777778, "gitStatsSummary": {"insertions": 14, "deletions": 9, "lines": 23, "gitFilesChange": 2}, "title": "TimeoutsHolder isn't threadsafe", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["providers/netty/src/main/java/org/asynchttpclient/providers/netty/request", "src/main/java/com/ning/http/client/providers/netty/timeout"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 4, "TOT": 14, "MOV": 7, "INS": 4, "DEL": 3, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 2, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Causing NPE:\n\n```\njava.lang.NullPointerException\n    at com.ning.http.client.providers.netty.timeout.TimeoutsHolder.cancel(TimeoutsHolder.java:27)\n    at com.ning.http.client.providers.netty.timeout.IdleConnectionTimeoutTimerTask.run(IdleConnectionTimeoutTimerTask.java:66)\n```\n", "labels": ["Defect", "Netty"]}, {"created": "2014-04-09 10:25:26", "commits": {"e025988b591add12a819e9a4af8ec09ea3d3cb0e": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "a4d487df6565473a09cf580f4dd134d258906234": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2014-04-09 17:17:39", "filteredCommits": [], "commitsDetails": [{"nameRev": "e025988b591add12a819e9a4af8ec09ea3d3cb0e tags/async-http-client-1.8.7~2", "commitMessage": "Merge pull request #530 from raulk/hotfix/digest-auth-fixes\n\n#529 DIGEST Auth does not work if server doesn't indicate algorithm + fix in URI usage in Netty provider.", "commitParents": ["22e24a879a026673c9a8e9a478cdc8e35d93f076", "97e62f38d470d488a2d1132ed7591b8055c23156"], "spoonStatsSkippedReason": "", "commitHash": "e025988b591add12a819e9a4af8ec09ea3d3cb0e", "authoredDateTime": "2014-04-09 19:16:49", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 3, "lines": 7, "filePath": "src/main/java/com/ning/http/client/Realm.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java"}], "commitDateTime": "2014-04-09 19:16:49", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 2, "INS": 2, "DEL": 1, "spoonMethodName": "com.ning.http.client.Realm.RealmBuilder.parseWWWAuthenticateHeader(java.lang.String)"}], "spoonFilePath": "Realm.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.HttpProtocol.handle(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.MessageEvent)"}], "spoonFilePath": "NettyAsyncHttpProvider.java"}]}, {"nameRev": "a4d487df6565473a09cf580f4dd134d258906234 tags/2.0.0-alpha1~447", "commitMessage": "Port #530 on master, close #529\n", "commitParents": ["33caaf4356ad2f38b990e9763f09acfa51bcf1d5"], "spoonStatsSkippedReason": "", "commitHash": "a4d487df6565473a09cf580f4dd134d258906234", "authoredDateTime": "2014-04-09 19:24:09", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/handler/HttpProtocol.java"}, {"insertions": 4, "deletions": 1, "lines": 5, "filePath": "api/src/main/java/org/asynchttpclient/Realm.java"}], "commitDateTime": "2014-04-09 19:24:09", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.HttpProtocol.handleUnauthorizedAndExit(int,org.asynchttpclient.Realm,org.asynchttpclient.Request,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.providers.netty.future.NettyResponseFuture,org.asynchttpclient.ProxyServer,io.netty.channel.Channel)"}], "spoonFilePath": "HttpProtocol.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 2, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.Realm.RealmBuilder.parseWWWAuthenticateHeader(java.lang.String)"}], "spoonFilePath": "Realm.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/529", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "DIGEST Auth does not work if server doesn't indicate algorithm", "statsSkippedReason": "", "user": "raulk", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 2, "alsoFixesPhrase": 0}, "body": "According to the RFC2617, page 10:\n\n>   algorithm\n>     A string indicating a pair of algorithms used to produce the digest\n>     and a checksum. **If this is not present it is assumed to be \"MD5\".** If the algorithm is not understood, the challenge should be ignored (and a different one used, if there is more than one).\n\nUnfortunately, the following WWW-Authenticate...\n\n```\nWWW-Authenticate: Digest realm=\"Internal\", qop=\"auth\", \n      nonce=\"1397037543433:d6d289782982db1f0102962ffda359b3\",\n      opaque=\"42D866E41804F5DB06646D2B0EB26C3F\"\n```\n\n... will lead to the following Authentication to be sent ...\n\n```\nAuthorization: Digest username=\"abc\", \n     realm=\"Internal\", \n     nonce=\"1397037543433:d6d289782982db1f0102962ffda359b3\", \n     uri=\"http://localhost/abc\", \n     algorithm=,                    <=== Algorithm is empty!\n     response=\"c122f753b2cd3f4e26bdaa5c333c4b64\", \n     opaque=\"42D866E41804F5DB06646D2B0EB26C3F\", \n     qop=auth, nc=00000001, \n     cnonce=\"a612b9d1d6dd80922f307c0c24fb4014\"\n```\n\nThis breaks the DIGEST authentication because RFC2617 section 3.2.2 indicates the following:\n\n> [In the Authorization header,] the values of the opaque and algorithm fields must be those supplied in the WWW-Authenticate response header for the entity being requested.\n\nAsync HTTP Client should either send NO algorithm or the default one (algorithm=MD5), but not an empty algorithm value because this is not what the server communicated in WWW-Authentication.\n\nThe fix would be in RealmBuilder#parseWWWAuthenticateHeader.\n", "labels": ["Defect"]}, {"created": "2014-03-29 00:59:51", "commits": {"fedda6a59a211bbe52a803e16cd3ebd38c6c22c3": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "7a067549012c4474a1a01c8c9beaf45c471962bb": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.ws.NettyWebSocket.onPong(com.ning.http.client.HttpResponseBodyPart)", "com.ning.http.client.providers.netty.ws.NettyWebSocket.onPing(com.ning.http.client.HttpResponseBodyPart)", "com.ning.http.client.providers.netty.handler.WebSocketProtocol.handle(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,java.lang.Object)"], "closed": "2014-07-30 14:28:43", "filteredCommits": ["fedda6a59a211bbe52a803e16cd3ebd38c6c22c3"], "commitsDetails": [{"nameRev": "fedda6a59a211bbe52a803e16cd3ebd38c6c22c3 tags/async-http-client-1.9.0-BETA7~16", "commitMessage": "Notify Pings and Pongs, close #517\n", "commitParents": ["705abd2f2cb1c8dc0d2e210f4558762a981d383f"], "spoonStatsSkippedReason": "", "commitHash": "fedda6a59a211bbe52a803e16cd3ebd38c6c22c3", "authoredDateTime": "2014-07-30 16:28:56", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 18, "deletions": 0, "lines": 18, "filePath": "src/main/java/com/ning/http/client/providers/netty/ws/NettyWebSocket.java"}, {"insertions": 13, "deletions": 6, "lines": 19, "filePath": "src/main/java/com/ning/http/client/providers/netty/handler/WebSocketProtocol.java"}], "commitDateTime": "2014-07-30 16:28:56", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 4, "TOT": 8, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.handler.WebSocketProtocol.handle(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,java.lang.Object)"}], "spoonFilePath": "WebSocketProtocol.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.ws.NettyWebSocket.onPong(com.ning.http.client.HttpResponseBodyPart)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.ws.NettyWebSocket.onPing(com.ning.http.client.HttpResponseBodyPart)"}], "spoonFilePath": "NettyWebSocket.java"}]}, {"nameRev": "7a067549012c4474a1a01c8c9beaf45c471962bb tags/2.0.0-alpha1~303", "commitMessage": "Notify Pings and Pongs, close #517\n", "commitParents": ["ce539ee0954329b92bff5e2237bf1836cb526524"], "spoonStatsSkippedReason": "", "commitHash": "7a067549012c4474a1a01c8c9beaf45c471962bb", "authoredDateTime": "2014-07-30 16:28:38", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 18, "deletions": 0, "lines": 18, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/ws/NettyWebSocket.java"}, {"insertions": 16, "deletions": 9, "lines": 25, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/handler/WebSocketProtocol.java"}], "commitDateTime": "2014-07-30 16:28:38", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 4, "TOT": 8, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.WebSocketProtocol.handle(io.netty.channel.Channel,org.asynchttpclient.providers.netty.future.NettyResponseFuture,java.lang.Object)"}], "spoonFilePath": "WebSocketProtocol.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket.onPing(org.asynchttpclient.HttpResponseBodyPart)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket.onPong(org.asynchttpclient.HttpResponseBodyPart)"}], "spoonFilePath": "NettyWebSocket.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/517", "ttf": 123.00027777777778, "gitStatsSummary": {"insertions": 31, "deletions": 6, "lines": 37, "gitFilesChange": 2}, "title": "WebSocketPingListener.onPing Isn't Getting Called", "statsSkippedReason": "", "user": "michaelahlers", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty/handler", "src/main/java/com/ning/http/client/providers/netty/ws"], "spoonStatsSummary": {"UPD": 4, "spoonMethodsChanged": 3, "TOT": 10, "MOV": 2, "INS": 3, "DEL": 1, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "After upgrading to 1.8.4 (from 1.7.18), my `WebSocketPingListener` implementation stopped receiving pings.\n\nStepping through `NettyAsyncHttpProvider` and reaching line [2349](https://github.com/AsyncHttpClient/async-http-client/blob/async-http-client-1.8.4/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java#L2349) I saw `pendingOpcode` remained `OPCODE_UNKNOWN` (-1), with `frame` having type `org.jboss.netty.handler.codec.http.websocketx.PingWebSocketFrame`. It then goes on un-handled and `onPing` never gets called. (Soon after, binary, text, and close frames are dispatched to listeners properly.)\n\nIn case it helps, I've got a socket open to DataSift, and these ping messages were coming through to the listener.\n", "labels": ["Defect", "Netty"]}, {"created": "2014-03-21 17:39:24", "commits": {"6901b9f64ec9326cec9688654644d9f11094f1cc": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "595a0613fcc7ad14c878ffde1dd0bf09a982990e": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.AsyncHttpClientConfig.Builder", "com.ning.http.util.MiscUtil.getBoolean(java.lang.String,boolean)"], "closed": "2014-03-21 17:48:30", "filteredCommits": ["6901b9f64ec9326cec9688654644d9f11094f1cc"], "commitsDetails": [{"nameRev": "6901b9f64ec9326cec9688654644d9f11094f1cc tags/async-http-client-1.8.5~9", "commitMessage": "When talking to a SSL proxy, AHC should use relative URIs by default, close #509\n", "commitParents": ["20e6a182073ce842cc154d3912bd49d1607dd881"], "spoonStatsSkippedReason": "", "commitHash": "6901b9f64ec9326cec9688654644d9f11094f1cc", "authoredDateTime": "2014-03-21 18:46:38", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 6, "deletions": 1, "lines": 7, "filePath": "src/main/java/com/ning/http/util/MiscUtil.java"}, {"insertions": 3, "deletions": 1, "lines": 4, "filePath": "src/main/java/com/ning/http/client/AsyncHttpClientConfig.java"}], "commitDateTime": "2014-03-21 18:46:38", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.util.MiscUtil.getBoolean(java.lang.String,boolean)"}], "spoonFilePath": "MiscUtil.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.AsyncHttpClientConfig.Builder"}], "spoonFilePath": "AsyncHttpClientConfig.java"}]}, {"nameRev": "595a0613fcc7ad14c878ffde1dd0bf09a982990e tags/2.0.0-alpha1~462", "commitMessage": "When talking to a SSL proxy, AHC should use relative URIs by default, close #509\n", "commitParents": ["632764093bece2d4a1075854353425530872bdd7"], "spoonStatsSkippedReason": "", "commitHash": "595a0613fcc7ad14c878ffde1dd0bf09a982990e", "authoredDateTime": "2014-03-21 18:48:25", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 1, "lines": 4, "filePath": "api/src/main/java/org/asynchttpclient/AsyncHttpClientConfig.java"}, {"insertions": 5, "deletions": 0, "lines": 5, "filePath": "api/src/main/java/org/asynchttpclient/util/MiscUtil.java"}], "commitDateTime": "2014-03-21 18:48:25", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.MiscUtil.getBoolean(java.lang.String,boolean)"}], "spoonFilePath": "MiscUtil.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.AsyncHttpClientConfig.Builder"}], "spoonFilePath": "AsyncHttpClientConfig.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/509", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 9, "deletions": 2, "lines": 11, "gitFilesChange": 2}, "title": "When talking to a SSL proxy, AHC should use relative URIs by default", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client", "src/main/java/com/ning/http/util"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 2, "TOT": 3, "MOV": 0, "INS": 2, "DEL": 0, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2014-03-19 10:58:04", "commits": {"6b90b0a2360c52960296aba1fbf37269e63a32aa": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.NettyAsyncHttpProvider.buildNettyResponseFutureWithCachedChannel(com.ning.http.client.Request,com.ning.http.client.AsyncHandler,com.ning.http.client.providers.netty.NettyResponseFuture,com.ning.http.client.ProxyServer,java.net.URI,org.jboss.netty.buffer.ChannelBuffer,int)", "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.lookupInCache(java.net.URI,com.ning.http.client.ProxyServer,com.ning.http.client.ConnectionPoolKeyStrategy)", "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.getPoolKey(com.ning.http.client.providers.netty.NettyResponseFuture)", "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.getPoolKey(java.net.URI,com.ning.http.client.ProxyServer,com.ning.http.client.ConnectionPoolKeyStrategy)", "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.lookupInCache(java.net.URI,com.ning.http.client.ConnectionPoolKeyStrategy)"], "closed": "2014-03-19 11:03:32", "filteredCommits": ["6b90b0a2360c52960296aba1fbf37269e63a32aa"], "commitsDetails": [{"nameRev": "6b90b0a2360c52960296aba1fbf37269e63a32aa tags/async-http-client-1.8.4~1", "commitMessage": "Pool key is not properly computed when proxy is defined, close #508\n", "commitParents": ["d850e4eacd5ef43fb5f4aca027ca3dcb431a8fb5"], "spoonStatsSkippedReason": "", "commitHash": "6b90b0a2360c52960296aba1fbf37269e63a32aa", "authoredDateTime": "2014-03-19 11:58:58", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 8, "deletions": 8, "lines": 16, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java"}], "commitDateTime": "2014-03-19 11:58:58", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.buildNettyResponseFutureWithCachedChannel(com.ning.http.client.Request,com.ning.http.client.AsyncHandler,com.ning.http.client.providers.netty.NettyResponseFuture,com.ning.http.client.ProxyServer,java.net.URI,org.jboss.netty.buffer.ChannelBuffer,int)"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.lookupInCache(java.net.URI,com.ning.http.client.ConnectionPoolKeyStrategy)"}, {"UPD": 0, "TOT": 6, "MOV": 4, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.getPoolKey(com.ning.http.client.providers.netty.NettyResponseFuture)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.lookupInCache(java.net.URI,com.ning.http.client.ProxyServer,com.ning.http.client.ConnectionPoolKeyStrategy)"}, {"UPD": 0, "TOT": 5, "MOV": 0, "INS": 5, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.getPoolKey(java.net.URI,com.ning.http.client.ProxyServer,com.ning.http.client.ConnectionPoolKeyStrategy)"}], "spoonFilePath": "NettyAsyncHttpProvider.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/508", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 8, "deletions": 8, "lines": 16, "gitFilesChange": 1}, "title": "Netty: pool key is not properly computed when proxy is defined", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty"], "spoonStatsSummary": {"UPD": 5, "spoonMethodsChanged": 5, "TOT": 19, "MOV": 4, "INS": 8, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2014-03-19 09:54:09", "commits": {"9725d77e1d162437d2612e1fdc5f13e9b550ede6": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.oauth.OAuthSignatureCalculator.constructAuthHeader(java.lang.String,java.lang.String,long)", "com.ning.http.client.oauth.OAuthSignatureCalculator.calculateSignature(java.lang.String,java.lang.String,long,java.lang.String,com.ning.http.client.FluentStringsMap,com.ning.http.client.FluentStringsMap)"], "closed": "2014-03-19 09:55:45", "filteredCommits": ["9725d77e1d162437d2612e1fdc5f13e9b550ede6"], "commitsDetails": [{"nameRev": "9725d77e1d162437d2612e1fdc5f13e9b550ede6 tags/async-http-client-1.8.4~3", "commitMessage": "Backport OAuthSignatureCalculator fix, close #506\n", "commitParents": ["90b67d9d566676a4b30fe145af6133e43a3fc3ad"], "spoonStatsSkippedReason": "", "commitHash": "9725d77e1d162437d2612e1fdc5f13e9b550ede6", "authoredDateTime": "2014-03-19 10:55:37", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 6, "deletions": 2, "lines": 8, "filePath": "src/main/java/com/ning/http/client/oauth/OAuthSignatureCalculator.java"}], "commitDateTime": "2014-03-19 10:55:37", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.oauth.OAuthSignatureCalculator.constructAuthHeader(java.lang.String,java.lang.String,long)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.oauth.OAuthSignatureCalculator.calculateSignature(java.lang.String,java.lang.String,long,java.lang.String,com.ning.http.client.FluentStringsMap,com.ning.http.client.FluentStringsMap)"}], "spoonFilePath": "OAuthSignatureCalculator.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/506", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 6, "deletions": 2, "lines": 8, "gitFilesChange": 1}, "title": "Backport OAuthSignatureCalculator fix", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/oauth"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 4, "MOV": 2, "INS": 2, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2014-03-19 09:51:23", "commits": {"90b67d9d566676a4b30fe145af6133e43a3fc3ad": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.date.RFC2616DateParser.tokenize()"], "closed": "2014-03-19 09:53:37", "filteredCommits": ["90b67d9d566676a4b30fe145af6133e43a3fc3ad"], "commitsDetails": [{"nameRev": "90b67d9d566676a4b30fe145af6133e43a3fc3ad tags/async-http-client-1.8.4~4", "commitMessage": "Backport RFC2616DateParser fix, close #505\n", "commitParents": ["8aabac41ee8712dc704d99fe1287a898193b7354"], "spoonStatsSkippedReason": "", "commitHash": "90b67d9d566676a4b30fe145af6133e43a3fc3ad", "authoredDateTime": "2014-03-19 10:53:27", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/date/RFC2616DateParser.java"}], "commitDateTime": "2014-03-19 10:53:27", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.date.RFC2616DateParser.tokenize()"}], "spoonFilePath": "RFC2616DateParser.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/505", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "Backport RFC2616DateParser fix", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/date"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2014-02-26 19:23:47", "commits": {"88ac2d9cf2b873d69be306bd2e4ccd74d5a9d05b": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.resumable.ResumableAsyncHandler.onHeadersReceived(com.ning.http.client.HttpResponseHeaders)", "com.ning.http.client.resumable.ResumableAsyncHandler"], "closed": "2014-02-27 10:15:35", "filteredCommits": ["88ac2d9cf2b873d69be306bd2e4ccd74d5a9d05b"], "commitsDetails": [{"nameRev": "88ac2d9cf2b873d69be306bd2e4ccd74d5a9d05b tags/async-http-client-1.8.4~8", "commitMessage": "Backport #492\n", "commitParents": ["568fc84c0ff1dc824f0459c64a0b8399c1b5cba6"], "spoonStatsSkippedReason": "", "commitHash": "88ac2d9cf2b873d69be306bd2e4ccd74d5a9d05b", "authoredDateTime": "2014-02-27 11:19:52", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 3, "lines": 4, "filePath": "src/main/java/com/ning/http/client/resumable/ResumableAsyncHandler.java"}], "commitDateTime": "2014-02-27 11:19:52", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 5, "MOV": 1, "INS": 1, "DEL": 2, "spoonMethodName": "com.ning.http.client.resumable.ResumableAsyncHandler.onHeadersReceived(com.ning.http.client.HttpResponseHeaders)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.resumable.ResumableAsyncHandler"}], "spoonFilePath": "ResumableAsyncHandler.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/492", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 3, "lines": 4, "gitFilesChange": 1}, "title": "ResumableAsyncHandler can't handle large files", "statsSkippedReason": "", "user": "mattinger", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/resumable"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 2, "TOT": 6, "MOV": 1, "INS": 1, "DEL": 3, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "The ResumableAsyncHandler can't handle files with bytecount > Integer.MAX_INT\n\nI've tracked it down to this code, which parses the Content-Length header as an Integer value.  It should be a Long value instead, and parsed with Long.valueOf.  the \"contentLength\" variable is not used outside of this method, so i'm not sure why it's even a member variable, but changing it to a Long should not cause any issues, since no other method is using it.\n\n<pre>\n<code>\n   public AsyncHandler.STATE onHeadersReceived(HttpResponseHeaders headers) throws Exception {\n        responseBuilder.accumulate(headers);\n        String contentLengthHeader = headers.getHeaders().getFirstValue(\"Content-Length\");\n        if (contentLengthHeader != null) {\n            contentLength = Integer.valueOf(contentLengthHeader);\n            if (contentLength == null || contentLength == -1) {\n                return AsyncHandler.STATE.ABORT;\n            }\n        }\n        if (decoratedAsyncHandler != null) {\n            return decoratedAsyncHandler.onHeadersReceived(headers);\n        }\n        return AsyncHandler.STATE.CONTINUE;\n    }\n</code>\n</pre>\n", "labels": ["Defect"]}, {"created": "2014-02-23 12:27:51", "commits": {"22b922a4c5819dc2f1678a3bfcc7eabf3f5efd00": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "c3589e01b878030dddad8ebefb8ed5eef8a375fc": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.NettyResponseFuture.get()", "com.ning.http.client.providers.netty.NettyResponseFuture.get(long,java.util.concurrent.TimeUnit)"], "closed": "2014-07-21 12:33:00", "filteredCommits": ["22b922a4c5819dc2f1678a3bfcc7eabf3f5efd00"], "commitsDetails": [{"nameRev": "22b922a4c5819dc2f1678a3bfcc7eabf3f5efd00 tags/async-http-client-1.9.0-BETA3~19", "commitMessage": "NettyResponseFuture.get should always block on the latch, close #489\n", "commitParents": ["876db0ed7465c5ad1cb3db8d53af015599e11822"], "spoonStatsSkippedReason": "", "commitHash": "22b922a4c5819dc2f1678a3bfcc7eabf3f5efd00", "authoredDateTime": "2014-07-21 14:31:00", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 3, "lines": 5, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyResponseFuture.java"}], "commitDateTime": "2014-07-21 14:31:00", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.NettyResponseFuture.get()"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.NettyResponseFuture.get(long,java.util.concurrent.TimeUnit)"}], "spoonFilePath": "NettyResponseFuture.java"}]}, {"nameRev": "c3589e01b878030dddad8ebefb8ed5eef8a375fc tags/2.0.0-alpha1~342", "commitMessage": "NettyResponseFuture.get should always block on the latch, close #489\n", "commitParents": ["e1c7f4aeef9e07c98d33f8d1121dbd77559efb6b"], "spoonStatsSkippedReason": "", "commitHash": "c3589e01b878030dddad8ebefb8ed5eef8a375fc", "authoredDateTime": "2014-07-21 14:32:55", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 2, "deletions": 3, "lines": 5, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/future/NettyResponseFuture.java"}], "commitDateTime": "2014-07-21 14:32:55", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture.get()"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture.get(long,java.util.concurrent.TimeUnit)"}], "spoonFilePath": "NettyResponseFuture.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/489", "ttf": 148.00027777777777, "gitStatsSummary": {"insertions": 2, "deletions": 3, "lines": 5, "gitFilesChange": 1}, "title": "Exception thrown in \"onCompleted()\" not re-thrown by the ListenableFuture using Netty", "statsSkippedReason": "", "user": "pfumagalli", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 4, "MOV": 2, "INS": 0, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I have an `AsyncHandler<Foo>` which does:\n\n```\npublic Response<T> onCompleted() throws Exception {\n    throw new IOException(\"Expletive deleted\");\n}\n```\n\nThe `ListenableFuture` I get when calling `client.execute(myRequest, myAsyncHandler)` never throws the `IOException`, but simply returns `null`\n\n```\nListenableFuture<T> future = client.execute(myRequest, myAsyncHandler);\nT stuff = future.get();\nassertNotNull(stuff);\n```\n\nThe future in question is a `com.ning.http.client.providers.netty.NettyResponseFuture`\n", "labels": ["Defect", "Netty"]}, {"created": "2014-02-20 12:18:55", "user": "srirama-rayaprolu", "body": "Under Heavy load the apache provider throwing NPE. It is also observed, it is opening more number of threads like 10000 threads.\n\nVersion: async-http-client-1.8.3\n\njava.lang.NullPointerException\n        at com.ning.http.client.providers.apache.ApacheAsyncHttpProvider.execute(ApacheAsyncHttpProvider.java:211)\n        at com.ning.http.client.AsyncHttpClient.executeRequest(AsyncHttpClient.java:524)\n        at com.ning.http.client.AsyncHttpClient$BoundRequestBuilder.execute(AsyncHttpClient.java:236)\n", "closed": "2015-02-05 12:07:26", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/485", "ttf": 349.0002777777778, "commits": {}, "labels": ["Contributions Welcome!", "Defect"], "title": "ApacheAsyncHttpProvider NPE"}, {"created": "2014-02-20 12:03:35", "user": "pfumagalli", "body": "This seems strange, I'm sure I'm doing something wrong...\n\nI'm executing a \"GET\" right after (or precisely at the same time) the remote host closes the connection, and my AsyncHttpHandler never receives any notification.\n\nI see that Grizzly sees the exception by turining on tracing:\n\n```\n20:45:51.394 [DEBUG] org.glassfish.grizzly.filterchain.DefaultFilterChain: execute:163 -> GRIZZLY0013: Exception during FilterChain execution\njava.io.EOFException: null\n    at org.glassfish.grizzly.nio.transport.TCPNIOTransport.read(TCPNIOTransport.java:621) [org.glassfish.grizzly-framework-2.3.11-bin.jar:2.3.11]\n    at org.glassfish.grizzly.nio.transport.TCPNIOTransportFilter.handleRead(TCPNIOTransportFilter.java:75) ~[org.glassfish.grizzly-framework-2.3.11-bin.jar:2.3.11]\n    at org.glassfish.grizzly.filterchain.TransportFilter.handleRead(TransportFilter.java:173) ~[org.glassfish.grizzly-framework-2.3.11-bin.jar:2.3.11]\n    at com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider$AsyncHttpClientTransportFilter.handleRead(GrizzlyAsyncHttpProvider.java:748) ~[com.ning.async-http-client-1.8.3-bin.jar:na]\n    at org.glassfish.grizzly.filterchain.ExecutorResolver$9.execute(ExecutorResolver.java:119) ~[org.glassfish.grizzly-framework-2.3.11-bin.jar:2.3.11]\n    at org.glassfish.grizzly.filterchain.DefaultFilterChain.executeFilter(DefaultFilterChain.java:291) [org.glassfish.grizzly-framework-2.3.11-bin.jar:2.3.11]\n    at org.glassfish.grizzly.filterchain.DefaultFilterChain.executeChainPart(DefaultFilterChain.java:209) [org.glassfish.grizzly-framework-2.3.11-bin.jar:2.3.11]\n    at org.glassfish.grizzly.filterchain.DefaultFilterChain.execute(DefaultFilterChain.java:137) [org.glassfish.grizzly-framework-2.3.11-bin.jar:2.3.11]\n    at org.glassfish.grizzly.filterchain.DefaultFilterChain.process(DefaultFilterChain.java:115) [org.glassfish.grizzly-framework-2.3.11-bin.jar:2.3.11]\n    at org.glassfish.grizzly.ProcessorExecutor.execute(ProcessorExecutor.java:77) [org.glassfish.grizzly-framework-2.3.11-bin.jar:2.3.11]\n    at org.glassfish.grizzly.nio.transport.TCPNIOTransport.fireIOEvent(TCPNIOTransport.java:550) [org.glassfish.grizzly-framework-2.3.11-bin.jar:2.3.11]\n    at org.glassfish.grizzly.strategies.AbstractIOStrategy.fireIOEvent(AbstractIOStrategy.java:112) [org.glassfish.grizzly-framework-2.3.11-bin.jar:2.3.11]\n    at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.run0(WorkerThreadIOStrategy.java:117) [org.glassfish.grizzly-framework-2.3.11-bin.jar:2.3.11]\n    at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.access$100(WorkerThreadIOStrategy.java:56) [org.glassfish.grizzly-framework-2.3.11-bin.jar:2.3.11]\n    at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy$WorkerThreadRunnable.run(WorkerThreadIOStrategy.java:137) [org.glassfish.grizzly-framework-2.3.11-bin.jar:2.3.11]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_51]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_51]\n    at java.lang.Thread.run(Thread.java:744) [na:1.7.0_51]\n```\n\nBut in my nothing gets called on the handler I pass at `execute(...)``. When using the JDK or Netty providers, they simply retry and never even see the exception.\n", "closed": "2014-07-16 14:18:46", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/484", "ttf": 146.00027777777777, "commits": {}, "labels": ["Defect", "Grizzly"], "title": "Grizzly provider: AsyncHttpHandler never called when remote closes the connection?"}, {"created": "2014-02-07 15:33:33", "commits": {"d9790c2b387fe3a7f51f45867bbb7ba95c747a30": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.NettyResponseFuture.cancel(boolean)", "com.ning.http.client.providers.netty.NettyResponseFuture.abort(java.lang.Throwable)"], "closed": "2014-02-07 15:43:10", "filteredCommits": ["d9790c2b387fe3a7f51f45867bbb7ba95c747a30"], "commitsDetails": [{"nameRev": "d9790c2b387fe3a7f51f45867bbb7ba95c747a30 tags/async-http-client-1.8.2~2", "commitMessage": "Abort and cancel should set cancelled early, close #477\n", "commitParents": ["c041a2d2f0b843b4bb99cf5e6eee71e0755a0e86"], "spoonStatsSkippedReason": "", "commitHash": "d9790c2b387fe3a7f51f45867bbb7ba95c747a30", "authoredDateTime": "2014-02-07 16:40:58", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 5, "lines": 8, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyResponseFuture.java"}], "commitDateTime": "2014-02-07 16:42:53", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.NettyResponseFuture.cancel(boolean)"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyResponseFuture.abort(java.lang.Throwable)"}], "spoonFilePath": "NettyResponseFuture.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/477", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 3, "deletions": 5, "lines": 8, "gitFilesChange": 1}, "title": "NettyResponseFuture cancel and abort should set cancelled ASAP", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 2, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2014-02-01 17:17:57", "commits": {"babb5be9c7dda2adc2fbf646dff952b48f8802ae": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "47c55ba03259e3c2fd7b6eff30ad1737b9fb0036": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.providers.netty.channel.ChannelManager.upgradePipelineForWebSockets(io.netty.channel.ChannelPipeline)", "org.asynchttpclient.providers.netty.channel.ChannelManager.upgradeProtocol(io.netty.channel.ChannelPipeline,java.lang.String,java.lang.String,int)"], "closed": "2014-08-23 11:39:00", "filteredCommits": ["babb5be9c7dda2adc2fbf646dff952b48f8802ae"], "commitsDetails": [{"nameRev": "babb5be9c7dda2adc2fbf646dff952b48f8802ae tags/2.0.0-alpha1~296", "commitMessage": "Don't use replace but addAfter+remove so that first frame is not lost, close #471\n", "commitParents": ["3014f512f2764ceb5b7893684e278fc536867927"], "spoonStatsSkippedReason": "", "commitHash": "babb5be9c7dda2adc2fbf646dff952b48f8802ae", "authoredDateTime": "2014-08-23 13:36:40", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 6, "deletions": 3, "lines": 9, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/channel/ChannelManager.java"}], "commitDateTime": "2014-08-23 13:36:40", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.ChannelManager.upgradePipelineForWebSockets(io.netty.channel.ChannelPipeline)"}, {"UPD": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.ChannelManager.upgradeProtocol(io.netty.channel.ChannelPipeline,java.lang.String,java.lang.String,int)"}], "spoonFilePath": "ChannelManager.java"}]}, {"nameRev": "47c55ba03259e3c2fd7b6eff30ad1737b9fb0036 tags/async-http-client-1.9.0-BETA7~9", "commitMessage": "Don't use replace but addAfter+remove so that first frame is not lost, close #471\n", "commitParents": ["20baaa64111dc30caafb1f9ead33e917ae56a573"], "spoonStatsSkippedReason": "", "commitHash": "47c55ba03259e3c2fd7b6eff30ad1737b9fb0036", "authoredDateTime": "2014-08-23 13:31:23", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 6, "deletions": 3, "lines": 9, "filePath": "src/main/java/com/ning/http/client/providers/netty/channel/ChannelManager.java"}], "commitDateTime": "2014-08-23 13:31:23", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.channel.ChannelManager.upgradeProtocol(org.jboss.netty.channel.ChannelPipeline,java.lang.String,java.lang.String,int)"}, {"UPD": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.channel.ChannelManager.upgradePipelineForWebSockets(org.jboss.netty.channel.ChannelPipeline)"}], "spoonFilePath": "ChannelManager.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/471", "ttf": 202.00027777777777, "gitStatsSummary": {"insertions": 6, "deletions": 3, "lines": 9, "gitFilesChange": 1}, "title": "[websocket] Message get lost when Netty's read the Handshake and First message in single Selector read", "statsSkippedReason": "", "user": "jfarcand", "changesInPackagesGIT": ["providers/netty/src/main/java/org/asynchttpclient/providers/netty/channel"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 2, "TOT": 4, "MOV": 0, "INS": 2, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "If Netty/the NIO Selector reads the following message in a single read\n\n```\nT 127.0.0.1:8080 -> 127.0.0.1:51295 [AP]\nHTTP/1.1 101 Switching Protocols.\nUpgrade: websocket.\nConnection: Upgrade.\nSec-WebSocket-Accept: mFFTAW8KVZebToQFZZcFVWmJh8Y=.\n                                 .\n\nT 127.0.0.1:8080 -> 127.0.0.1:51295 [AP]\n.21808c569-099b-4d8f-b657-c5965df40449|1391270901601\n```\n\nThe `21808c569-099b-4d8f-b657-c5965df40449|1391270901601` won't be decoded by Netty's Decoder and will get lost. The workaround is to add a whitespace payload between the handshake's headers and the first websocket message.\n", "labels": ["Defect", "Netty"]}, {"created": "2014-01-27 08:19:51", "commits": {"8877ef4c16094a42957c412cdd67779b0aebfbc7": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "eca83e441260945cc6a3100fdfe2aeaae8aba916": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.resumable.PropertiesBasedResumableProcessor.load()"], "closed": "2014-01-27 08:21:47", "filteredCommits": ["8877ef4c16094a42957c412cdd67779b0aebfbc7"], "commitsDetails": [{"nameRev": "8877ef4c16094a42957c412cdd67779b0aebfbc7 tags/async-http-client-1.8.0~8", "commitMessage": "Close Scanner/File in PropertiesBasedResumableProcessor.load, close #467\n", "commitParents": ["9c964835e9372d6bacc4d3af3913fa428ecbd0fa"], "spoonStatsSkippedReason": "", "commitHash": "8877ef4c16094a42957c412cdd67779b0aebfbc7", "authoredDateTime": "2014-01-27 09:20:15", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 5, "deletions": 1, "lines": 6, "filePath": "src/main/java/com/ning/http/client/resumable/PropertiesBasedResumableProcessor.java"}], "commitDateTime": "2014-01-30 15:38:40", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 1, "INS": 3, "DEL": 1, "spoonMethodName": "com.ning.http.client.resumable.PropertiesBasedResumableProcessor.load()"}], "spoonFilePath": "PropertiesBasedResumableProcessor.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "eca83e441260945cc6a3100fdfe2aeaae8aba916", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/467", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 5.0, "deletions": 1.0, "lines": 6.0, "gitFilesChange": 1}, "title": "PropertiesBasedResumableProcessor.load doesn't close the Scanner", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/resumable"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 1, "TOT": 5.0, "MOV": 1.0, "INS": 3.0, "DEL": 1.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect"]}, {"created": "2014-01-24 15:44:19", "commits": {"e66b7ffcea8c22adec38c243546628e1ce0af024": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "59108dbd26e82b510c0143be8996252ab5a5b507": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.multipart.MultipartBody.handlePartSource(java.nio.channels.WritableByteChannel,com.ning.http.multipart.FilePart)"], "closed": "2014-01-24 15:44:52", "filteredCommits": ["e66b7ffcea8c22adec38c243546628e1ce0af024"], "commitsDetails": [{"nameRev": "e66b7ffcea8c22adec38c243546628e1ce0af024 tags/async-http-client-1.8.0~15", "commitMessage": "MultipartBody doesn't account for byte[] size when handling a ByteArrayPartSource, close #464\n", "commitParents": ["fb21db166ca0cf125a7a07525ff3b342afcc3b05"], "spoonStatsSkippedReason": "", "commitHash": "e66b7ffcea8c22adec38c243546628e1ce0af024", "authoredDateTime": "2014-01-24 16:44:31", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/multipart/MultipartBody.java"}], "commitDateTime": "2014-01-30 15:38:01", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.multipart.MultipartBody.handlePartSource(java.nio.channels.WritableByteChannel,com.ning.http.multipart.FilePart)"}], "spoonFilePath": "MultipartBody.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "59108dbd26e82b510c0143be8996252ab5a5b507", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/464", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1.0, "deletions": 1.0, "lines": 2.0, "gitFilesChange": 1}, "title": "MultipartBody doesn't account for byte[] size when handling a ByteArrayPartSource", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["src/main/java/com/ning/http/multipart"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 1, "TOT": 2.0, "MOV": 1.0, "INS": 1.0, "DEL": 0.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Defect", "Netty"]}, {"created": "2014-01-24 11:32:22", "commits": {"b2f3f391491043a7f3f14763e688aab212b712e2": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "97f5cd6ee2b44435b755ab3a8fbec8afb09835d5": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 0, "closed": "2014-01-24 11:40:53", "filteredCommits": [], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "b2f3f391491043a7f3f14763e688aab212b712e2", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "97f5cd6ee2b44435b755ab3a8fbec8afb09835d5 tags/async-http-client-1.8.0~17", "commitMessage": "Revert race condition introduced in #420, close #463\n", "commitParents": ["32b3ccb71b4dec8a832c1bd268ede26c9f5470a2"], "spoonStatsSkippedReason": "", "commitHash": "97f5cd6ee2b44435b755ab3a8fbec8afb09835d5", "authoredDateTime": "2014-01-24 12:35:42", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 3, "lines": 3, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java"}], "commitDateTime": "2014-01-30 15:37:45", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "NettyAsyncHttpProvider.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/463", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "title": "Race condition on 401 introduced in #420", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": [], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "PR #420 introduced a race condition on channel usage.\n\nThe author of this PR claimed that a new socket was open on 401, but this is not the case:\n- the callback calls drainChannel: https://github.com/AsyncHttpClient/async-http-client/blob/ahc-1.7.x/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java#L2084\n- when the channel is drained, if keep-alive is used, it's offered to the pool: https://github.com/AsyncHttpClient/async-http-client/blob/ahc-1.7.x/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java#L1315\n\nSo the client doesn't necessarily open a new socket. It only does so if some other request got the connection from the pool before the next request is indeed performed: https://github.com/AsyncHttpClient/async-http-client/blob/ahc-1.7.x/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java#L1355\n\nThis change cause a race condition, where nextRequest tries to reuse the previous channel while it has been offered to the pool and is eventually used by someone else.\n", "labels": ["Defect", "Netty"]}, {"created": "2014-01-24 10:03:27", "commits": {"e7de51893921e1c127629d259238022d950f5cfd": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "2deb5d55dc21352f190b4c9220a73a1c0e6e807f": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "a853b2723cdc218880d535107478bb044136627a": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.providers.netty.handler.HttpProtocol.addNTLMAuthorizationHeader(org.asynchttpclient.FluentCaseInsensitiveStringsMap,java.lang.String)", "org.asynchttpclient.providers.netty.handler.HttpProtocol.addType3NTLMAuthorizationHeader(java.util.List,org.asynchttpclient.FluentCaseInsensitiveStringsMap,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "org.asynchttpclient.providers.netty.handler.HttpProtocol.ntlmChallenge(java.util.List,org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,org.asynchttpclient.FluentCaseInsensitiveStringsMap,org.asynchttpclient.Realm,org.asynchttpclient.providers.netty.future.NettyResponseFuture)"], "closed": "2014-01-24 10:16:44", "filteredCommits": ["e7de51893921e1c127629d259238022d950f5cfd"], "commitsDetails": [{"nameRev": "e7de51893921e1c127629d259238022d950f5cfd tags/2.0.0-alpha1~529", "commitMessage": "Fix NTLM regression, close #462\n", "commitParents": ["53a689db2781b1c361965fbd0622a559e2e6c2d9"], "spoonStatsSkippedReason": "", "commitHash": "e7de51893921e1c127629d259238022d950f5cfd", "authoredDateTime": "2014-01-24 11:16:42", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 8, "deletions": 4, "lines": 12, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/handler/HttpProtocol.java"}], "commitDateTime": "2014-01-24 11:16:42", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.HttpProtocol.addNTLMAuthorizationHeader(org.asynchttpclient.FluentCaseInsensitiveStringsMap,java.lang.String)"}, {"UPD": 1, "TOT": 5, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.HttpProtocol.addType3NTLMAuthorizationHeader(java.util.List,org.asynchttpclient.FluentCaseInsensitiveStringsMap,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.HttpProtocol.ntlmChallenge(java.util.List,org.asynchttpclient.Request,org.asynchttpclient.ProxyServer,org.asynchttpclient.FluentCaseInsensitiveStringsMap,org.asynchttpclient.Realm,org.asynchttpclient.providers.netty.future.NettyResponseFuture)"}], "spoonFilePath": "HttpProtocol.java"}]}, {"nameRev": "2deb5d55dc21352f190b4c9220a73a1c0e6e807f tags/async-http-client-1.8.0~19", "commitMessage": "Fix NTLM regression, close #462\n", "commitParents": ["f5a0b16b0184bd4555e55eff2d8c189e370030c8"], "spoonStatsSkippedReason": "", "commitHash": "2deb5d55dc21352f190b4c9220a73a1c0e6e807f", "authoredDateTime": "2014-01-24 11:11:22", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 8, "deletions": 4, "lines": 12, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java"}], "commitDateTime": "2014-01-30 15:37:27", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.addNTLMAuthorization(com.ning.http.client.FluentCaseInsensitiveStringsMap,java.lang.String)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.ntlmChallenge(java.util.List,com.ning.http.client.Request,com.ning.http.client.ProxyServer,com.ning.http.client.FluentCaseInsensitiveStringsMap,com.ning.http.client.Realm,com.ning.http.client.providers.netty.NettyResponseFuture)"}, {"UPD": 0, "TOT": 5, "MOV": 2, "INS": 2, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.addType3NTLMAuthorizationHeader(java.util.List,com.ning.http.client.FluentCaseInsensitiveStringsMap,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"}], "spoonFilePath": "NettyAsyncHttpProvider.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "a853b2723cdc218880d535107478bb044136627a", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/462", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 8.0, "deletions": 4.0, "lines": 12.0, "gitFilesChange": 1}, "title": "Regression in NTML", "statsSkippedReason": "", "user": "slandelle", "changesInPackagesGIT": ["providers/netty/src/main/java/org/asynchttpclient/providers/netty/handler"], "spoonStatsSummary": {"UPD": 1.0, "spoonMethodsChanged": 3, "TOT": 8.0, "MOV": 3.0, "INS": 3.0, "DEL": 1.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 2, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "This was introduced in 3fd63d0f5dbb1b93cb3c355b4e8b046ea041559a\n", "labels": ["Defect", "Netty"]}, {"created": "2013-11-08 15:56:28", "commits": {"931d8d1670d017d83573217a628005b1ff061abb": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "5507fae093299f9ac6b39483623296f110e11aa4": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "0f0f7a7db1c8ea71704a5fc19ab9bd4232082a19": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.NettyResponseFuture", "com.ning.http.client.providers.netty.NettyResponseFuture.abort(java.lang.Throwable)", "com.ning.http.client.providers.netty.NettyResponseFuture.cancel(boolean)", "com.ning.http.client.providers.netty.NettyResponseFuture.getContent()", "com.ning.http.client.providers.netty.NettyResponseFuture.isDone()", "com.ning.http.client.providers.netty.NettyResponseFuture.get(long,java.util.concurrent.TimeUnit)"], "closed": "2014-01-23 12:32:07", "filteredCommits": ["5507fae093299f9ac6b39483623296f110e11aa4"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "931d8d1670d017d83573217a628005b1ff061abb", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "5507fae093299f9ac6b39483623296f110e11aa4 tags/async-http-client-1.8.0~27", "commitMessage": "NettyResponseFuture.isDone should return true when cancelled, close #417\n", "commitParents": ["13851e82b49a32de80bf4b800da372b14134828a"], "spoonStatsSkippedReason": "", "commitHash": "5507fae093299f9ac6b39483623296f110e11aa4", "authoredDateTime": "2014-01-23 13:12:30", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 6, "deletions": 6, "lines": 12, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyResponseFuture.java"}], "commitDateTime": "2014-01-30 15:36:18", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyResponseFuture.isDone()"}, {"UPD": 1, "TOT": 5, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.NettyResponseFuture.abort(java.lang.Throwable)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyResponseFuture"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyResponseFuture.getContent()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyResponseFuture.cancel(boolean)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyResponseFuture.get(long,java.util.concurrent.TimeUnit)"}], "spoonFilePath": "NettyResponseFuture.java"}]}, {"nameRev": "0f0f7a7db1c8ea71704a5fc19ab9bd4232082a19 tags/2.0.0-alpha1~539", "commitMessage": "NettyResponseFuture.isDone should return true when cancelled, close #417\n", "commitParents": ["3bb534ea5dfdcaecb7b7772bbd5ecaf384ae5a39"], "spoonStatsSkippedReason": "", "commitHash": "0f0f7a7db1c8ea71704a5fc19ab9bd4232082a19", "authoredDateTime": "2014-01-23 13:32:02", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 6, "deletions": 6, "lines": 12, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/future/NettyResponseFuture.java"}], "commitDateTime": "2014-01-23 13:32:02", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture.isDone()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture.get(long,java.util.concurrent.TimeUnit)"}, {"UPD": 1, "TOT": 5, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture.abort(java.lang.Throwable)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture.getContent()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture.cancel(boolean)"}], "spoonFilePath": "NettyResponseFuture.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/417", "ttf": 75.00027777777778, "gitStatsSummary": {"insertions": 6.0, "deletions": 6.0, "lines": 12.0, "gitFilesChange": 1}, "title": "NettyResponseFuture isDone returns false when it has been aborted by netty", "statsSkippedReason": "", "user": "hvesalai", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty"], "spoonStatsSummary": {"UPD": 5.0, "spoonMethodsChanged": 6, "TOT": 11.0, "MOV": 3.0, "INS": 2.0, "DEL": 1.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 2, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Acording to the API documentation of `java.util.concurrent.Future` (which `NettyResponseFuture` promises to implement), the `isDone()` method should return `true` also when the future has been cancelled.\n\n[Future.html#isDone()](http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/Future.html#isDone%28%29)\n\nThis is not the case for `NettyResponseFuture`, whose `isDone()` method looks only at the `isDone` instance variable, which is not set to true when `abort(Throwable t)` is called to cancel the future.\n\n[NettyResponseFuture.java#L141](https://github.com/AsyncHttpClient/async-http-client/blob/async-http-client-1.7.21/src/main/java/com/ning/http/client/providers/netty/NettyResponseFuture.java#L141)\n\n[NettyResponseFuture.java#L322](https://github.com/AsyncHttpClient/async-http-client/blob/async-http-client-1.7.21/src/main/java/com/ning/http/client/providers/netty/NettyResponseFuture.java#L322)\n", "labels": ["Defect", "Netty"]}, {"created": "2013-09-03 11:59:47", "commits": {"edb091ddc033b38f97d6a1049e8c67f52be278e6": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "2834f03eeb3ec91464139daa96643d58de873c92": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.providers.netty.future.NettyResponseFuture.touch()", "org.asynchttpclient.providers.netty.future.NettyResponseFuture.getContent()", "org.asynchttpclient.providers.netty.future.NettyResponseFuture.cancel(boolean)", "org.asynchttpclient.providers.netty.future.NettyResponseFuture.get(long,java.util.concurrent.TimeUnit)", "org.asynchttpclient.providers.netty.future.NettyResponseFuture.getRequestTimeoutInMs()", "org.asynchttpclient.providers.netty.future.NettyResponseFuture.abort(java.lang.Throwable)", "org.asynchttpclient.providers.netty.request.timeout.RequestTimeoutTimerTask.run(io.netty.util.Timeout)", "org.asynchttpclient.providers.netty.request.NettyRequestSender.scheduleTimeouts(org.asynchttpclient.providers.netty.future.NettyResponseFuture)", "org.asynchttpclient.providers.netty.future.NettyResponseFuture.isDone()", "org.asynchttpclient.providers.netty.future.NettyResponseFuture.toString()", "org.asynchttpclient.providers.netty.future.NettyResponseFuture.done()", "org.asynchttpclient.providers.netty.request.NettyRequestSender.newNettyResponseFuture(org.asynchttpclient.uri.UriComponents,org.asynchttpclient.Request,org.asynchttpclient.AsyncHandler,org.asynchttpclient.providers.netty.request.NettyRequest,org.asynchttpclient.ProxyServer)", "org.asynchttpclient.providers.netty.request.timeout.RequestTimeoutTimerTask", "org.asynchttpclient.providers.netty.future.NettyResponseFuture.get()", "org.asynchttpclient.providers.netty.future.NettyResponseFuture", "org.asynchttpclient.providers.netty.future.NettyResponseFuture.isCancelled()"], "closed": "2014-07-17 13:23:06", "filteredCommits": ["2834f03eeb3ec91464139daa96643d58de873c92"], "commitsDetails": [{"nameRev": "edb091ddc033b38f97d6a1049e8c67f52be278e6 tags/async-http-client-1.9.0-BETA2~9", "commitMessage": "NettyResponseFuture.get timeout shouldn't cancel http request, close #370 + revert #632\n", "commitParents": ["5d6816a72440a0a89ecb958e36cca0e6e8bbe934"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "edb091ddc033b38f97d6a1049e8c67f52be278e6", "authoredDateTime": "2014-07-17 15:07:37", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 5, "deletions": 3, "lines": 8, "filePath": "src/main/java/com/ning/http/client/providers/netty/timeout/RequestTimeoutTimerTask.java"}, {"insertions": 98, "deletions": 170, "lines": 268, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyResponseFuture.java"}, {"insertions": 3, "deletions": 0, "lines": 3, "filePath": "src/test/java/com/ning/http/client/async/netty/NettyAsyncProviderBasicTest.java"}, {"insertions": 7, "deletions": 10, "lines": 17, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "src/main/java/com/ning/http/client/providers/netty/timeout/IdleConnectionTimeoutTimerTask.java"}], "commitDateTime": "2014-07-17 15:07:37", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "2834f03eeb3ec91464139daa96643d58de873c92 tags/2.0.0-alpha1~352", "commitMessage": "NettyResponseFuture.get timeout shouldn't cancel http request, close #370\n", "commitParents": ["2da66bf266376470e18db04e472989aea34321ed"], "spoonStatsSkippedReason": "", "commitHash": "2834f03eeb3ec91464139daa96643d58de873c92", "authoredDateTime": "2014-07-17 15:23:01", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 82, "deletions": 118, "lines": 200, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/future/NettyResponseFuture.java"}, {"insertions": 2, "deletions": 4, "lines": 6, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/request/NettyRequestSender.java"}, {"insertions": 6, "deletions": 2, "lines": 8, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/request/timeout/RequestTimeoutTimerTask.java"}], "commitDateTime": "2014-07-17 15:23:01", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture.isCancelled()"}, {"UPD": 1, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture.getContent()"}, {"UPD": 1, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture.cancel(boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture.isDone()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture.getRequestTimeoutInMs()"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture.touch()"}, {"UPD": 23, "TOT": 26, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture.toString()"}, {"UPD": 1, "TOT": 11, "MOV": 6, "INS": 1, "DEL": 3, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture.get(long,java.util.concurrent.TimeUnit)"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture.abort(java.lang.Throwable)"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture.done()"}, {"UPD": 0, "TOT": 6, "MOV": 3, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture.get()"}, {"UPD": 4, "TOT": 9, "MOV": 1, "INS": 0, "DEL": 4, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture"}], "spoonFilePath": "NettyResponseFuture.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyRequestSender.scheduleTimeouts(org.asynchttpclient.providers.netty.future.NettyResponseFuture)"}, {"UPD": 0, "TOT": 5, "MOV": 1, "INS": 1, "DEL": 3, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyRequestSender.newNettyResponseFuture(org.asynchttpclient.uri.UriComponents,org.asynchttpclient.Request,org.asynchttpclient.AsyncHandler,org.asynchttpclient.providers.netty.request.NettyRequest,org.asynchttpclient.ProxyServer)"}], "spoonFilePath": "NettyRequestSender.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.timeout.RequestTimeoutTimerTask"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.request.timeout.RequestTimeoutTimerTask.run(io.netty.util.Timeout)"}], "spoonFilePath": "RequestTimeoutTimerTask.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/370", "ttf": 317.0002777777778, "gitStatsSummary": {"insertions": 90, "deletions": 124, "lines": 214, "gitFilesChange": 3}, "title": "NettyResponseFuture.get() timeout shouldn't cancel http request", "statsSkippedReason": "", "user": "sv3k", "changesInPackagesGIT": ["providers/netty/src/main/java/org/asynchttpclient/providers/netty/request", "providers/netty/src/main/java/org/asynchttpclient/providers/netty/future"], "spoonStatsSummary": {"UPD": 31.0, "spoonMethodsChanged": 16, "TOT": 76.0, "MOV": 21.0, "INS": 9.0, "DEL": 15.0, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "From `Future.get(long timeout, TimeUnit unit)` javadoc:\n\n> Waits if necessary for at most the given time for the computation to complete, and then retrieves its result, if available.\n\nIf result is not available after timeout, future shouldn't be cancelled. There's no restriction that future.get with timeout can be called only once. User should have ability to call future multiple times with timeouts or cancel future if he need this.\n\nNow `NettyResponseFuture.get(long timeout, TimeUnit unit)` on timeout for some reason cancels the future and http request.\n", "labels": ["Defect", "Netty"]}, {"created": "2013-08-01 10:54:07", "commits": {"8b6fcee02d2134f465231496cd9eeccc5ad68245": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "356fec7ef7c22a0ad7748bbf39fead7d2d1a3b18": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2014-07-16 14:20:57", "filteredCommits": ["8b6fcee02d2134f465231496cd9eeccc5ad68245"], "commitsDetails": [{"nameRev": "8b6fcee02d2134f465231496cd9eeccc5ad68245 tags/2.0.0-alpha1~368", "commitMessage": "Add #355 test on master: both Netty and Grizzly are OK\n", "commitParents": ["683e24c86d7f8b03886a2a5a080938f9a2a39ade"], "spoonStatsSkippedReason": "", "commitHash": "8b6fcee02d2134f465231496cd9eeccc5ad68245", "authoredDateTime": "2014-07-10 13:54:31", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 32, "deletions": 0, "lines": 32, "filePath": "api/src/test/java/org/asynchttpclient/async/BasicHttpsTest.java"}], "commitDateTime": "2014-07-10 13:54:31", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.async.BasicHttpsTest.failInstantlyIfHostNamesDiffer()"}], "spoonFilePath": "BasicHttpsTest.java"}]}, {"nameRev": "356fec7ef7c22a0ad7748bbf39fead7d2d1a3b18 tags/async-http-client-1.9.0-BETA1~2", "commitMessage": "Add #355 test on 1.9: Netty OK, Grizzly KO, see #610\n", "commitParents": ["300ba99b265d030214031a4eed36c8f051c5df60"], "spoonStatsSkippedReason": "", "commitHash": "356fec7ef7c22a0ad7748bbf39fead7d2d1a3b18", "authoredDateTime": "2014-07-10 13:51:52", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 6, "deletions": 0, "lines": 6, "filePath": "src/test/java/com/ning/http/client/async/grizzly/GrizzlyBasicHttpsTest.java"}, {"insertions": 32, "deletions": 0, "lines": 32, "filePath": "src/test/java/com/ning/http/client/async/BasicHttpsTest.java"}], "commitDateTime": "2014-07-10 13:51:52", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.BasicHttpsTest.failInstantlyIfHostNamesDiffer()"}], "spoonFilePath": "BasicHttpsTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.grizzly.GrizzlyBasicHttpsTest.failInstantlyIfHostNamesDiffer()"}], "spoonFilePath": "GrizzlyBasicHttpsTest.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/355", "ttf": 349.0002777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Reading of response blocks until timeout in case SSL host name verifier returns false", "statsSkippedReason": "", "user": "617m4rc", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "I noticed this behavior when using Netty but haven't tried any other providers. Thread gets stuck in NettyResponseFuture waiting for latch to be counted down. NettyConnectListener throws a ConnectException but doesn't interrupt thread waiting at latch.\n", "labels": ["Defect", "Grizzly"]}, {"created": "2013-07-29 23:33:22", "commits": {"dfacb8e05d0822c7b2024c452554bd8e1d6221d8": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "df6ed70e86c8fc340ed75563e016c8baa94d7e72": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.util.SslUtils.getLooseSSLContext()", "com.ning.http.client.AsyncHttpClientConfig.Builder", "com.ning.http.util.MiscUtils.withDefault(java.lang.Object,java.lang.Object)", "com.ning.http.client.AsyncHttpClientConfig.Builder.build()", "com.ning.http.client", "com.ning.http.util.SslUtils.SSLConfig", "com.ning.http.client.AsyncHttpClientConfig.getSSLEngineFactory()", "com.ning.http.util.SslUtils.getSSLContext(boolean)", "com.ning.http.client.AsyncHttpClientConfigBean.configureDefaults()", "com.ning.http.util.SslUtils.getSSLContext()", "com.ning.http.client.AsyncHttpClientConfig", "com.ning.http.client.AsyncHttpClientConfig.Builder.setSSLEngineFactory(com.ning.http.client.SSLEngineFactory)", "com.ning.http.client.providers.jdk.JDKAsyncHttpProvider.createUrlConnection(com.ning.http.client.Request)", "com.ning.http.client.AsyncHttpClientConfigBean.setSslEngineFactory(com.ning.http.client.SSLEngineFactory)", "com.ning.http.client.AsyncHttpClientConfig.Builder.setSSLContext(javax.net.ssl.SSLContext)", "com.ning.http.util.SslUtils.LooseTrustManager", "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.constructSSLPipeline(com.ning.http.client.providers.netty.NettyConnectListener).4.getPipeline()", "com.ning.http.util.SslUtils.getInstance()", "com.ning.http.client.AsyncHttpClientConfig.getSSLEngineFactory().1.newSSLEngine()", "com.ning.http.util.SslUtils.createClientSSLEngine(com.ning.http.client.AsyncHttpClientConfig)", "com.ning.http.util.SslUtils", "com.ning.http.util.SslUtils.getStrictSSLContext(com.ning.http.util.SslUtils$SSLConfig)", "com.ning.http.util.SslUtils.looseTrustManagerSSLContext()", "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.upgradeProtocol(org.jboss.netty.channel.ChannelPipeline,java.lang.String)", "com.ning.http.client.SimpleAsyncHttpClient.Builder.setSSLEngineFactory(com.ning.http.client.SSLEngineFactory)", "com.ning.http.util.SslUtils.SingletonHolder", "com.ning.http.util.SslUtils.getSSLEngine()", "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.initializeTransport(com.ning.http.client.AsyncHttpClientConfig)", "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.verifyChannelPipeline(org.jboss.netty.channel.Channel,java.lang.String)", "com.ning.http.client.AsyncHttpClientConfig.Builder.setAcceptAnyCertificate(boolean)", "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.constructSSLPipeline(com.ning.http.client.providers.netty.NettyConnectListener).5.getPipeline()", "com.ning.http.client.AsyncHttpClientConfig.Builder.build().2", "com.ning.http.client.AsyncHttpClientConfigDefaults.defaultAcceptAnyCertificate()", "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.createSSLEngine()"], "closed": "2014-06-13 11:06:10", "filteredCommits": ["dfacb8e05d0822c7b2024c452554bd8e1d6221d8"], "commitsDetails": [{"nameRev": "dfacb8e05d0822c7b2024c452554bd8e1d6221d8 tags/async-http-client-1.9.0-BETA1~4", "commitMessage": "Introduce acceptAnyCertificate config, defaulting to false, backport df6ed70e86c8fc340ed75563e016c8baa94d7e72, close #352\n", "commitParents": ["a894583921c11c3b01f160ada36a8bb9d5158e96"], "spoonStatsSkippedReason": "", "commitHash": "dfacb8e05d0822c7b2024c452554bd8e1d6221d8", "authoredDateTime": "2014-07-10 11:55:10", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 27, "deletions": 123, "lines": 150, "filePath": "src/main/java/com/ning/http/util/SslUtils.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/test/java/com/ning/http/client/websocket/ProxyTunnellingTest.java"}, {"insertions": 4, "deletions": 12, "lines": 16, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java"}, {"insertions": 52, "deletions": 83, "lines": 135, "filePath": "src/main/java/com/ning/http/client/AsyncHttpClientConfig.java"}, {"insertions": 15, "deletions": 3, "lines": 18, "filePath": "src/test/java/com/ning/http/client/async/HttpToHttpsRedirectTest.java"}, {"insertions": 4, "deletions": 0, "lines": 4, "filePath": "src/main/java/com/ning/http/util/MiscUtils.java"}, {"insertions": 5, "deletions": 5, "lines": 10, "filePath": "src/main/java/com/ning/http/client/SimpleAsyncHttpClient.java"}, {"insertions": 0, "deletions": 32, "lines": 32, "filePath": "src/main/java/com/ning/http/client/SSLEngineFactory.java"}, {"insertions": 4, "deletions": 0, "lines": 4, "filePath": "src/main/java/com/ning/http/client/AsyncHttpClientConfigDefaults.java"}, {"insertions": 24, "deletions": 11, "lines": 35, "filePath": "src/test/java/com/ning/http/client/async/ProxyTunnellingTest.java"}, {"insertions": 2, "deletions": 0, "lines": 2, "filePath": "src/test/java/com/ning/http/client/async/grizzly/GrizzlyFeedableBodyGeneratorTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/providers/jdk/JDKAsyncHttpProvider.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java"}, {"insertions": 6, "deletions": 5, "lines": 11, "filePath": "src/main/java/com/ning/http/client/AsyncHttpClientConfigBean.java"}], "commitDateTime": "2014-07-10 12:14:16", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 1, "INS": 2, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.initializeTransport(com.ning.http.client.AsyncHttpClientConfig)"}], "spoonFilePath": "GrizzlyAsyncHttpProvider.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 1, "INS": 2, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.jdk.JDKAsyncHttpProvider.createUrlConnection(com.ning.http.client.Request)"}], "spoonFilePath": "JDKAsyncHttpProvider.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.createSSLEngine()"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.upgradeProtocol(org.jboss.netty.channel.ChannelPipeline,java.lang.String)"}, {"UPD": 3, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.verifyChannelPipeline(org.jboss.netty.channel.Channel,java.lang.String)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.constructSSLPipeline(com.ning.http.client.providers.netty.NettyConnectListener).4.getPipeline()"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.constructSSLPipeline(com.ning.http.client.providers.netty.NettyConnectListener).5.getPipeline()"}], "spoonFilePath": "NettyAsyncHttpProvider.java"}, {"spoonMethods": [{"UPD": 3, "TOT": 7, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.AsyncHttpClientConfig.Builder"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.AsyncHttpClientConfig.Builder.setSSLEngineFactory(com.ning.http.client.SSLEngineFactory)"}, {"UPD": 2, "TOT": 8, "MOV": 5, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client.AsyncHttpClientConfig.Builder.setSSLContext(javax.net.ssl.SSLContext)"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.AsyncHttpClientConfig.getSSLEngineFactory().1.newSSLEngine()"}, {"UPD": 2, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.AsyncHttpClientConfig.getSSLEngineFactory()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.AsyncHttpClientConfig.Builder.build().2"}, {"UPD": 6, "TOT": 9, "MOV": 3, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.AsyncHttpClientConfig"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.AsyncHttpClientConfig.Builder.setAcceptAnyCertificate(boolean)"}, {"UPD": 3, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.AsyncHttpClientConfig.Builder.build()"}], "spoonFilePath": "AsyncHttpClientConfig.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 11, "MOV": 8, "INS": 0, "DEL": 2, "spoonMethodName": "com.ning.http.util.SslUtils.getLooseSSLContext()"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.util.SslUtils.LooseTrustManager"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.util.SslUtils.SSLConfig"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.util.SslUtils"}, {"UPD": 4, "TOT": 8, "MOV": 3, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.util.SslUtils.getStrictSSLContext(com.ning.http.util.SslUtils$SSLConfig)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.util.SslUtils.getSSLContext(boolean)"}, {"UPD": 0, "TOT": 6, "MOV": 4, "INS": 0, "DEL": 2, "spoonMethodName": "com.ning.http.util.SslUtils.getSSLContext()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.ning.http.util.SslUtils.looseTrustManagerSSLContext()"}, {"UPD": 8, "TOT": 15, "MOV": 6, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.util.SslUtils.getSSLEngine()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.util.SslUtils.getInstance()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.util.SslUtils.SingletonHolder"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.ning.http.util.SslUtils.createClientSSLEngine(com.ning.http.client.AsyncHttpClientConfig)"}], "spoonFilePath": "SslUtils.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.HttpToHttpsRedirectTest.httpToHttpsProperConfig()"}, {"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.HttpToHttpsRedirectTest.relativeLocationUrl()"}, {"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.HttpToHttpsRedirectTest.httpToHttpsRedirect()"}], "spoonFilePath": "HttpToHttpsRedirectTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.AsyncHttpClientConfigDefaults.defaultAcceptAnyCertificate()"}], "spoonFilePath": "AsyncHttpClientConfigDefaults.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.grizzly.GrizzlyFeedableBodyGeneratorTest.doSimpleFeeder(boolean)"}, {"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.grizzly.GrizzlyFeedableBodyGeneratorTest.doNonBlockingFeeder(boolean)"}], "spoonFilePath": "GrizzlyFeedableBodyGeneratorTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.util.MiscUtils.withDefault(java.lang.Object,java.lang.Object)"}], "spoonFilePath": "MiscUtils.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 2, "DEL": 1, "spoonMethodName": "com.ning.http.client.async.ProxyTunnellingTest.testNonProxyHostsSsl()"}, {"UPD": 3, "TOT": 5, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.async.ProxyTunnellingTest.testSimpleAHCConfigProxy()"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 1, "DEL": 3, "spoonMethodName": "com.ning.http.client.async.ProxyTunnellingTest.testRequestProxy()"}, {"UPD": 1, "TOT": 11, "MOV": 4, "INS": 1, "DEL": 5, "spoonMethodName": "com.ning.http.client.async.ProxyTunnellingTest.testConfigProxy()"}], "spoonFilePath": "ProxyTunnellingTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.ning.http.client"}], "spoonFilePath": "SSLEngineFactory.java"}, {"spoonMethods": [{"UPD": 5, "TOT": 6, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.SimpleAsyncHttpClient.Builder.setSSLEngineFactory(com.ning.http.client.SSLEngineFactory)"}], "spoonFilePath": "SimpleAsyncHttpClient.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.AsyncHttpClientConfigBean.configureDefaults()"}, {"UPD": 5, "TOT": 6, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.ning.http.client.AsyncHttpClientConfigBean.setSslEngineFactory(com.ning.http.client.SSLEngineFactory)"}], "spoonFilePath": "AsyncHttpClientConfigBean.java"}]}, {"nameRev": "df6ed70e86c8fc340ed75563e016c8baa94d7e72 tags/2.0.0-alpha1~409^2", "commitMessage": "Introduce acceptAnyCertificate config, defaulting to false, close #526, close #352\n", "commitParents": ["e5e6489941e222d4b510ba09ce7b53e9eed02601"], "spoonStatsSkippedReason": "", "commitHash": "df6ed70e86c8fc340ed75563e016c8baa94d7e72", "authoredDateTime": "2014-06-12 21:47:02", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 4, "lines": 7, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/channel/Channels.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/GrizzlyAsyncHttpProvider.java"}, {"insertions": 16, "deletions": 2, "lines": 18, "filePath": "api/src/main/java/org/asynchttpclient/AsyncHttpClientConfig.java"}, {"insertions": 5, "deletions": 0, "lines": 5, "filePath": "api/src/main/java/org/asynchttpclient/SimpleAsyncHttpClient.java"}, {"insertions": 6, "deletions": 0, "lines": 6, "filePath": "api/src/main/java/org/asynchttpclient/AsyncHttpClientConfigBean.java"}, {"insertions": 4, "deletions": 0, "lines": 4, "filePath": "api/src/main/java/org/asynchttpclient/util/MiscUtil.java"}, {"insertions": 4, "deletions": 0, "lines": 4, "filePath": "api/src/main/java/org/asynchttpclient/AsyncHttpClientConfigDefaults.java"}, {"insertions": 15, "deletions": 3, "lines": 18, "filePath": "api/src/test/java/org/asynchttpclient/async/HttpToHttpsRedirectTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "api/src/test/java/org/asynchttpclient/websocket/ProxyTunnellingTest.java"}, {"insertions": 35, "deletions": 2, "lines": 37, "filePath": "api/src/main/java/org/asynchttpclient/util/SslUtils.java"}, {"insertions": 2, "deletions": 0, "lines": 2, "filePath": "providers/grizzly/src/test/java/org/asynchttpclient/providers/grizzly/GrizzlyFeedableBodyGeneratorTest.java"}, {"insertions": 12, "deletions": 4, "lines": 16, "filePath": "api/src/test/java/org/asynchttpclient/async/ProxyTunnellingTest.java"}], "commitDateTime": "2014-06-12 21:47:02", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.grizzly.GrizzlyAsyncHttpProvider.initializeTransport(org.asynchttpclient.AsyncHttpClientConfig)"}], "spoonFilePath": "GrizzlyAsyncHttpProvider.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.AsyncHttpClientConfig.Builder"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.AsyncHttpClientConfig"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.AsyncHttpClientConfig.isAcceptAnyCertificate()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.AsyncHttpClientConfig.Builder.setAcceptAnyCertificate(boolean)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.AsyncHttpClientConfig.Builder.build()"}], "spoonFilePath": "AsyncHttpClientConfig.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.SslUtils.LooseTrustManager"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.SslUtils.getSSLContext()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.SslUtils.looseTrustManagerSSLContext()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.SslUtils"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.SslUtils.getSSLContext(boolean)"}], "spoonFilePath": "SslUtils.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.util.MiscUtil.withDefault(java.lang.Object,java.lang.Object)"}], "spoonFilePath": "MiscUtil.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.async.HttpToHttpsRedirectTest.relativeLocationUrl()"}, {"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.async.HttpToHttpsRedirectTest.httpToHttpsProperConfig()"}, {"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.async.HttpToHttpsRedirectTest.httpToHttpsRedirect()"}], "spoonFilePath": "HttpToHttpsRedirectTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.createSSLEngine()"}], "spoonFilePath": "Channels.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.AsyncHttpClientConfigDefaults.defaultAcceptAnyCertificate()"}], "spoonFilePath": "AsyncHttpClientConfigDefaults.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.grizzly.GrizzlyFeedableBodyGeneratorTest.doSimpleFeeder(boolean)"}, {"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.grizzly.GrizzlyFeedableBodyGeneratorTest.doNonBlockingFeeder(boolean)"}], "spoonFilePath": "GrizzlyFeedableBodyGeneratorTest.java"}, {"spoonMethods": [{"UPD": 3, "TOT": 5, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.async.ProxyTunnellingTest.testSimpleAHCConfigProxy()"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 1, "DEL": 3, "spoonMethodName": "org.asynchttpclient.async.ProxyTunnellingTest.testRequestProxy()"}, {"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.async.ProxyTunnellingTest.testConfigProxy()"}], "spoonFilePath": "ProxyTunnellingTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.SimpleAsyncHttpClient.Builder.setAcceptAnyCertificate(boolean)"}], "spoonFilePath": "SimpleAsyncHttpClient.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.AsyncHttpClientConfigBean.configureDefaults()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.AsyncHttpClientConfigBean.setAcceptAnyCertificate(boolean)"}], "spoonFilePath": "AsyncHttpClientConfigBean.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/352", "ttf": 318.0002777777778, "gitStatsSummary": {"insertions": 104, "deletions": 262, "lines": 366, "gitFilesChange": 10}, "title": "SSL/TLS certificate verification disabled", "statsSkippedReason": "", "user": "harbulot", "changesInPackagesGIT": ["src/main/java/com/ning/http/client", "src/main/java/com/ning/http/client/providers/grizzly", "src/main/java/com/ning/http/client/providers/jdk", "src/main/java/com/ning/http/client/providers/netty", "src/main/java/com/ning/http/util"], "spoonStatsSummary": {"UPD": 49, "spoonMethodsChanged": 34, "TOT": 120, "MOV": 41, "INS": 17, "DEL": 13, "spoonFilesChanged": 10}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "The SSL/TLS certificate verification is disabled. This is a security issue (which makes connections vulnerable to MITM attacks).\n\nHere is a quick test that can be tested with a server that has a self-signed certificate or issued by a CA that's not in the default truststore. `URLConnection` will fail as expected (`sun.security.validator.ValidatorException: PKIX path building failed`), whereas `SimpleAsyncHttpClient` will work just fine.\n\n```\nString hostname = \"https://somehost/\";\n\ntry {\n    URLConnection connection = new URL(hostname).openConnection();\n    connection.connect();\n} catch (Exception e) {\n    e.printStackTrace();\n}\n\nSimpleAsyncHttpClient client = new SimpleAsyncHttpClient.Builder()\n        .setUrl(hostname).build();\nclient.get(new BodyConsumer() {\n    @Override\n    public void consume(ByteBuffer buffer) throws IOException {\n        System.out.print(new String(buffer.array(), \"UTF-8\"));\n    }\n\n    @Override\n    public void close() throws IOException {\n    }\n});\n```\n\nPlease remove anything that has to do with the `TrustingSSLSocketFactory` in `com.ning.http.client.providers.apache.TrustingSSLSocketFactory`.\n", "labels": ["Defect", "Grizzly", "Netty"]}, {"created": "2013-05-23 16:49:53", "commits": {"dcb6156bc52bca437f3f00098bf32b192331db35": {"commitGHEventType": "referenced", "commitUser": "jfarcand"}, "cb25225e4598a72b14ea65f49108c62eb952d410": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "1325729b7cdb5e3a1dd44c2c049f30c2268b5e9b": {"commitGHEventType": "referenced", "commitUser": "jfarcand"}}, "numCommits": 2, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.NettyWebSocket.onBinaryFragment(byte[],boolean)", "org.asynchttpclient.providers.netty.ws.NettyWebSocket.onBinaryFragment(byte[],boolean)", "com.ning.http.client.providers.netty.NettyWebSocket", "com.ning.http.client.providers.netty.NettyWebSocket.onTextFragment(java.lang.String,boolean)", "org.asynchttpclient.providers.netty.ws.NettyWebSocket.onTextFragment(java.lang.String,boolean)", "org.asynchttpclient.providers.netty.ws.NettyWebSocket"], "closed": "2014-01-27 08:35:41", "filteredCommits": ["cb25225e4598a72b14ea65f49108c62eb952d410", "1325729b7cdb5e3a1dd44c2c049f30c2268b5e9b"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "dcb6156bc52bca437f3f00098bf32b192331db35", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "jfarcand", "commitSpoonAstDiffStats": []}, {"nameRev": "cb25225e4598a72b14ea65f49108c62eb952d410 tags/2.0.0-alpha1~527", "commitMessage": "Port dcb6156bc52bca437f3f00098bf32b192331db35 on master, close #301\n", "commitParents": ["b64a2dcdf4b99adca03c2cd2878dd47c434d02b2"], "spoonStatsSkippedReason": "", "commitHash": "cb25225e4598a72b14ea65f49108c62eb952d410", "authoredDateTime": "2014-01-27 09:35:36", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 62, "deletions": 40, "lines": 102, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/ws/NettyWebSocket.java"}], "commitDateTime": "2014-01-27 09:35:36", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 30, "MOV": 15, "INS": 8, "DEL": 6, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket.onBinaryFragment(byte[],boolean)"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 4, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket"}, {"UPD": 2, "TOT": 31, "MOV": 15, "INS": 7, "DEL": 7, "spoonMethodName": "org.asynchttpclient.providers.netty.ws.NettyWebSocket.onTextFragment(java.lang.String,boolean)"}], "spoonFilePath": "NettyWebSocket.java"}]}, {"nameRev": "1325729b7cdb5e3a1dd44c2c049f30c2268b5e9b tags/async-http-client-1.8.0~12", "commitMessage": "Fixes #301\n", "commitParents": ["21a0fdfa1b95506a5b6481610fcda8d9dd2359bb"], "spoonStatsSkippedReason": "", "commitHash": "1325729b7cdb5e3a1dd44c2c049f30c2268b5e9b", "authoredDateTime": "2014-01-24 16:26:20", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 65, "deletions": 43, "lines": 108, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyWebSocket.java"}], "commitDateTime": "2014-01-30 15:38:16", "commitUser": "jfarcand", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 30, "MOV": 15, "INS": 8, "DEL": 6, "spoonMethodName": "com.ning.http.client.providers.netty.NettyWebSocket.onBinaryFragment(byte[],boolean)"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 4, "DEL": 0, "spoonMethodName": "com.ning.http.client.providers.netty.NettyWebSocket"}, {"UPD": 2, "TOT": 31, "MOV": 15, "INS": 7, "DEL": 7, "spoonMethodName": "com.ning.http.client.providers.netty.NettyWebSocket.onTextFragment(java.lang.String,boolean)"}], "spoonFilePath": "NettyWebSocket.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/301", "ttf": 248.00027777777777, "gitStatsSummary": {"insertions": 127.0, "deletions": 83.0, "lines": 210.0, "gitFilesChange": 2}, "title": "WebSocketByteListener invokes both onMessage() and onFragment()", "statsSkippedReason": "", "user": "vpnwr", "changesInPackagesGIT": ["providers/netty/src/main/java/org/asynchttpclient/providers/netty/ws", "src/main/java/com/ning/http/client/providers/netty"], "spoonStatsSummary": {"UPD": 6.0, "spoonMethodsChanged": 6, "TOT": 130.0, "MOV": 60.0, "INS": 38.0, "DEL": 26.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "(1) When the message is not fragmented, onFragment should not be invoked.\n(2) And when a message is fragmented, onMessage() shouldn't be called.\n\nobserved in ning 1.7.15\n", "labels": ["Defect"]}, {"created": "2013-04-10 15:56:06", "commits": {"7e2326c64492f69d59edbe1067d5702eac3ebebf": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "1196a96816d912ad4b454acb25a848fa0f9cdd86": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.ning.http.client.providers.netty.NettyResponseFuture.getContent()"], "closed": "2014-07-17 13:45:25", "filteredCommits": ["7e2326c64492f69d59edbe1067d5702eac3ebebf"], "commitsDetails": [{"nameRev": "7e2326c64492f69d59edbe1067d5702eac3ebebf tags/async-http-client-1.9.0-BETA2~8", "commitMessage": "NettyResponseFuture.getContent shouldn't lose registered exception, close #271\n", "commitParents": ["edb091ddc033b38f97d6a1049e8c67f52be278e6"], "spoonStatsSkippedReason": "", "commitHash": "7e2326c64492f69d59edbe1067d5702eac3ebebf", "authoredDateTime": "2014-07-17 15:44:05", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 6, "lines": 10, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyResponseFuture.java"}], "commitDateTime": "2014-07-17 15:44:05", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 2, "INS": 0, "DEL": 2, "spoonMethodName": "com.ning.http.client.providers.netty.NettyResponseFuture.getContent()"}], "spoonFilePath": "NettyResponseFuture.java"}]}, {"nameRev": "1196a96816d912ad4b454acb25a848fa0f9cdd86 tags/2.0.0-alpha1~351", "commitMessage": "NettyResponseFuture.getContent shouldn't lose registered exception, close #271\n", "commitParents": ["2834f03eeb3ec91464139daa96643d58de873c92"], "spoonStatsSkippedReason": "", "commitHash": "1196a96816d912ad4b454acb25a848fa0f9cdd86", "authoredDateTime": "2014-07-17 15:45:19", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 4, "deletions": 5, "lines": 9, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/future/NettyResponseFuture.java"}], "commitDateTime": "2014-07-17 15:45:19", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 2, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture.getContent()"}], "spoonFilePath": "NettyResponseFuture.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/271", "ttf": 462.0002777777778, "gitStatsSummary": {"insertions": 4, "deletions": 6, "lines": 10, "gitFilesChange": 1}, "title": "NettyResponseFuture does not respect contract of ListenableFuture interface", "statsSkippedReason": "", "user": "amakarenko", "changesInPackagesGIT": ["src/main/java/com/ning/http/client/providers/netty"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 4, "MOV": 2, "INS": 0, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "ListenableFuture returned from BoundRequestBuilder.execute() in case of Netty provider does not provide consistent behavior for Runnables attached to it with addListener() method.\n\nOnly first Listener of a NettyResponseFuture gets Exception occurred during processing of Request. All subsequent Listeners get **null** as a result of Future execution.\n\nThat is somehow confusing and counter intuitive, and not clearly specified in ListenableFuture.addListener() documentation. I'm personally consider it as a bug.\n\nThe reason for this is inside implementation of NettyResponseFuture.getContent() method\n\n``` java\n    V getContent() throws ExecutionException {\n        ExecutionException e = exEx.getAndSet(null);\n        if (e != null) {\n            throw e;\n        }\n        ...\n    }\n```\n\nRight at the beggining of this method `exEx.getAndSet(null)` will clear occurred Exception, so subsequent calls to `getContent()` won't see it, and will return **null**, instead of throwing Exception.\n", "labels": ["Defect", "Netty"]}, {"created": "2013-03-09 16:45:37", "commits": {"712c04aef1c0588ce1cff0e5d7ba9ba5a9569556": {"commitGHEventType": "closed", "commitUser": "slandelle"}, "abc7fbd66161921a11866b9ae3720cd14f1492cc": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 1, "changesInPackagesSPOON": ["org.asynchttpclient.providers.netty.future.NettyResponseFuture.done()"], "closed": "2014-07-17 14:16:51", "filteredCommits": ["712c04aef1c0588ce1cff0e5d7ba9ba5a9569556"], "commitsDetails": [{"nameRev": "712c04aef1c0588ce1cff0e5d7ba9ba5a9569556 tags/2.0.0-alpha1~350", "commitMessage": "Make NettyResponseFuture done and abort mutually exclusive, close #247\n", "commitParents": ["1196a96816d912ad4b454acb25a848fa0f9cdd86"], "spoonStatsSkippedReason": "", "commitHash": "712c04aef1c0588ce1cff0e5d7ba9ba5a9569556", "authoredDateTime": "2014-07-17 16:16:47", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 7, "deletions": 6, "lines": 13, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/future/NettyResponseFuture.java"}], "commitDateTime": "2014-07-17 16:16:47", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 3, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.netty.future.NettyResponseFuture.done()"}], "spoonFilePath": "NettyResponseFuture.java"}]}, {"nameRev": "abc7fbd66161921a11866b9ae3720cd14f1492cc tags/async-http-client-1.9.0-BETA2~7", "commitMessage": "Make NettyResponseFuture done and abort mutually exclusive, close #247\n", "commitParents": ["7e2326c64492f69d59edbe1067d5702eac3ebebf"], "spoonStatsSkippedReason": "", "commitHash": "abc7fbd66161921a11866b9ae3720cd14f1492cc", "authoredDateTime": "2014-07-17 16:21:04", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 4, "lines": 8, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyResponseFuture.java"}], "commitDateTime": "2014-07-17 16:21:04", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 2, "INS": 1, "DEL": 2, "spoonMethodName": "com.ning.http.client.providers.netty.NettyResponseFuture.done()"}], "spoonFilePath": "NettyResponseFuture.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/247", "ttf": 494.0002777777778, "gitStatsSummary": {"insertions": 7, "deletions": 6, "lines": 13, "gitFilesChange": 1}, "title": "In NettyResponseFuture, abort and done methods are not mutually exclusive", "statsSkippedReason": "", "user": "PierreCoquentin", "changesInPackagesGIT": ["providers/netty/src/main/java/org/asynchttpclient/providers/netty/future"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 6, "MOV": 3, "INS": 1, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi,\n\nWe are using async-http-client 1.7.10 with netty as provider.\nIn NettyResponseFuture, abort and done methods are not mutually exclusive. If the reaper wakes up at the same time we received the response, then the asyncHandler onThrowable method (line 314) and onCompleted method (line 262) are called. Indeed, the AtomicBoolean \"done\" is only set after the completion of getContent method. More precisely, if the reaper thread preempts the worker thread while executing the handler method onCompleted, it seems that nothing prevents the method onThrowable of the handler to be called by the reaper.\n\n``` java\n   V getContent() throws ExecutionException {\n        ExecutionException e = exEx.getAndSet(null);\n        if (e != null) {\n            throw e;\n        }\n\n        V update = content.get();\n        // No more retry\n        currentRetry.set(maxRetry);\n        if (exEx.get() == null && !contentProcessed.getAndSet(true)) {\n            try {\n// Line 262 : The worker is preempted by the reaper thread here (The exception has not been set)\n                update = asyncHandler.onCompleted();\n            } catch (Throwable ex) {\n                if (!throwableCalled.getAndSet(true)) {\n                    try {\n                        asyncHandler.onThrowable(ex);\n                    } catch (Throwable t) {\n                        logger.debug(\"asyncHandler.onThrowable\", t);\n                    } finally {\n                        cancelReaper();\n                        throw new RuntimeException(ex);\n                    }\n                }\n            }\n            content.compareAndSet(null, update);\n        }\n        return update;\n    }\n\n    public final void done(Callable callable) {\n        try {\n            cancelReaper();\n\n            if (exEx.get() != null) {\n                return;\n            }\n            getContent();\n            isDone.set(true);\n            if (callable != null) {\n                try {\n                    callable.call();\n                } catch (Exception ex) {\n                    throw new RuntimeException(ex);\n                }\n            }\n        } catch (ExecutionException t) {\n            return;\n        } catch (RuntimeException t) {\n            exEx.compareAndSet(null, new ExecutionException(t));\n        } finally {\n            latch.countDown();\n        }\n        super.done();\n    }\n\n    public final void abort(final Throwable t) {\n        cancelReaper();\n\n// The done boolean has not been set by the worker thread\n        if (isDone.get() || isCancelled.get()) return;\n// It's too late to set the exception as the worker thread has already checked\n        exEx.compareAndSet(null, new ExecutionException(t));\n        if (!throwableCalled.getAndSet(true)) {\n            try {\n// (line 314) Finally the reaper thread executes the onThrowable method\n                asyncHandler.onThrowable(t);\n            } catch (Throwable te) {\n                logger.debug(\"asyncHandler.onThrowable\", te);\n            } finally {\n                isCancelled.set(true);\n            }\n        }\n        latch.countDown();\n        super.done();\n    }\n```\n\nRegards\nPierre\n", "labels": ["Defect", "Netty"]}, {"created": "2013-02-26 11:39:04", "user": "solosky", "body": "I make it shortly.\n\nI used AsyncHttpClient to upload a file to server, and want show the upload progress to UI,\nso I worked with ProgressAsyncHandler, But it did not call \"onContentWriteProgress\" method.  Did I do something wrong ? please help me out. \n\n_UploadFileTest .java_\n\n``` java\n    package iqq.im;\n\n    import java.io.File;\n    import java.io.FileNotFoundException;\n    import java.io.IOException;\n    import java.util.concurrent.Executors;\n\n    import com.ning.http.client.AsyncHttpClient;\n    import com.ning.http.client.AsyncHttpClientConfig;\n    import com.ning.http.client.HttpResponseBodyPart;\n    import com.ning.http.client.HttpResponseHeaders;\n    import com.ning.http.client.HttpResponseStatus;\n    import com.ning.http.client.ProgressAsyncHandler;\n    import com.ning.http.client.AsyncHttpClient.BoundRequestBuilder;\n    import com.ning.http.client.providers.netty.NettyAsyncHttpProvider;\n    import com.ning.http.multipart.FilePart;\n\n    public class UploadFileTest {\n\n    public static void main(String[] args) throws IllegalArgumentException, IOException {\n        AsyncHttpClientConfig config = new AsyncHttpClientConfig.Builder()\n        .setExecutorService(Executors.newFixedThreadPool(1))\n        .setRequestTimeoutInMs(70000)\n        .build();\n        AsyncHttpClient asyncHttpClient = new AsyncHttpClient(new NettyAsyncHttpProvider(config));\n        BoundRequestBuilder builder = asyncHttpClient.preparePost(\"http://localhost/upload.php\");\n        builder.addBodyPart(new FilePart(\"dj2.exe\", new File(\"dj2.exe\")));\n        asyncHttpClient.executeRequest(builder.build(), new MyAsyncHandler());\n    }\n\n\n\n    static class MyAsyncHandler implements ProgressAsyncHandler{\n\n        @Override\n        public STATE onBodyPartReceived(HttpResponseBodyPart arg0)\n                throws Exception {\n            //System.out.println(\"onBodyPartReceived:\" + new String(arg0.getBodyPartBytes()));\n            System.out.println(\"onBodyPartReceived:\" + arg0.length());\n            return STATE.CONTINUE;\n        }\n\n        @Override\n        public Object onCompleted() throws Exception {\n            System.out.println(\"onCompleted:\");\n            return STATE.CONTINUE;\n        }\n\n        @Override\n        public STATE onHeadersReceived(HttpResponseHeaders arg0)\n                throws Exception {\n            System.out.println(\"onHeadersReceived:\");\n            return STATE.CONTINUE;\n        }\n\n        @Override\n        public STATE onStatusReceived(HttpResponseStatus arg0) throws Exception {\n            System.out.println(\"onStatusReceived:\");\n            return STATE.CONTINUE;\n        }\n\n        @Override\n        public void onThrowable(Throwable arg0) {\n            System.out.println(\"onThrowable:\");\n            arg0.printStackTrace();\n\n        }\n\n        @Override\n        public STATE onContentWriteCompleted() {\n            System.out.println(\"onContentWriteCompleted:\");\n            return STATE.CONTINUE;\n        }\n\n        @Override\n        public STATE onContentWriteProgress(long arg0, long arg1, long arg2) {\n            System.out.println(\"onContentWriteProgress: \"+ arg0+\", \"+arg1+\",\" + arg2);\n            return STATE.CONTINUE;\n        }\n\n        @Override\n        public STATE onHeaderWriteCompleted() {\n            System.out.println(\"onHeaderWriteCompleted:\");\n            return STATE.CONTINUE;\n        }   \n    }\n}\n```\n\n_upload.php_\nThis php script simply reading first uploaded file and writing it back to response.\nIf did not have php server, XAMPP is suggested.\n http://www.apachefriends.org/zh_cn/index.html\n\n``` php\n    <?php\n    if(count($_FILES) > 0){\n\n        $keys = array_keys($_FILES);\n        $key = $keys[0];\n\n        $fp = fopen($_FILES[$key][\"tmp_name\"], \"rb\");\n        if(! $fp ){\n            echo \"Error!!\";\n            exit(0);\n        }\n\n        Header(\"Content-type: application/octet-stream\"); \n        header(\"Content-Length: \" . $_FILES[$key][\"size\"]);\n        while(!feof($fp)){\n            echo fread($fp, 10240);\n        }\n    }else{\n       echo \"NoFiles!!\";\n    }\n    ?>\n```\n\nThanks.\n\nsolosky\n", "closed": "2015-10-05 09:19:05", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/233", "ttf": 950.0002777777778, "commits": {}, "labels": ["Defect", "Netty"], "title": "why didn't fire the \"onContentWriteProgress\" event ?"}, {"created": "2013-01-14 07:22:33", "commits": {"cfb590f7e57ebc15bb3601343faf34ebddbf4598": {"commitGHEventType": "referenced", "commitUser": "slandelle"}, "ee3f56dad3c15d40cc8df7a0c96b0daab45073d6": {"commitGHEventType": "closed", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2014-07-16 20:55:49", "filteredCommits": [], "commitsDetails": [{"nameRev": "cfb590f7e57ebc15bb3601343faf34ebddbf4598 tags/async-http-client-1.9.0-BETA2~27", "commitMessage": "Merge pull request #624 from AsyncHttpClient/1.9.x-netty-pool\n\nRefactor Netty channel pool for 1.9, close #201, close #623", "commitParents": ["68cf0904229dc5429114363f51a15bd3543f4976", "ecece3d5452729742dadd99d896095e20a8c9228"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "cfb590f7e57ebc15bb3601343faf34ebddbf4598", "authoredDateTime": "2014-07-16 16:13:21", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 84, "deletions": 182, "lines": 266, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java"}, {"insertions": 13, "deletions": 16, "lines": 29, "filePath": "src/main/java/com/ning/http/client/providers/netty/{ => pool}/ChannelPool.java"}, {"insertions": 57, "deletions": 86, "lines": 143, "filePath": "src/main/java/com/ning/http/client/providers/netty/{ => pool}/DefaultChannelPool.java"}, {"insertions": 19, "deletions": 0, "lines": 19, "filePath": "src/test/java/com/ning/http/client/async/grizzly/GrizzlyBodyDeferringAsyncHandlerTest.java"}, {"insertions": 52, "deletions": 67, "lines": 119, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyConnectListener.java"}, {"insertions": 2, "deletions": 1, "lines": 3, "filePath": "src/main/java/com/ning/http/client/uri/UriComponents.java"}, {"insertions": 38, "deletions": 0, "lines": 38, "filePath": "src/main/java/com/ning/http/client/providers/netty/pool/NoopChannelPool.java"}, {"insertions": 17, "deletions": 22, "lines": 39, "filePath": "src/main/java/com/ning/http/client/providers/netty/timeout/IdleConnectionTimeoutTimerTask.java"}, {"insertions": 3, "deletions": 9, "lines": 12, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyResponseFuture.java"}, {"insertions": 5, "deletions": 5, "lines": 10, "filePath": "src/test/java/com/ning/http/client/async/netty/NettyConnectionPoolTest.java"}, {"insertions": 31, "deletions": 29, "lines": 60, "filePath": "src/test/java/com/ning/http/client/async/MaxTotalConnectionTest.java"}, {"insertions": 0, "deletions": 2, "lines": 2, "filePath": "src/test/java/com/ning/http/client/async/BasicHttpsTest.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "src/main/java/com/ning/http/client/uri/UriComponentsParser.java"}, {"insertions": 5, "deletions": 7, "lines": 12, "filePath": "src/main/java/com/ning/http/client/providers/netty/timeout/RequestTimeoutTimerTask.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProviderConfig.java"}, {"insertions": 174, "deletions": 0, "lines": 174, "filePath": "src/main/java/com/ning/http/client/providers/netty/pool/ChannelManager.java"}], "commitDateTime": "2014-07-16 16:13:21", "commitUser": "slandelle", "commitSpoonAstDiffStats": []}, {"nameRev": "ee3f56dad3c15d40cc8df7a0c96b0daab45073d6 tags/2.0.0-alpha1~359", "commitMessage": "Refactor Netty channel pool, port #624 on master, close #201, close #623\n", "commitParents": ["4393106266c50f98d7b88b1092d4512d4dec60f1"], "spoonStatsSkippedReason": "", "commitHash": "ee3f56dad3c15d40cc8df7a0c96b0daab45073d6", "authoredDateTime": "2014-07-16 22:55:44", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 50, "deletions": 106, "lines": 156, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/channel/Channels.java"}, {"insertions": 15, "deletions": 15, "lines": 30, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/channel/{ => pool}/ChannelPool.java"}, {"insertions": 9, "deletions": 11, "lines": 20, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/handler/HttpProtocol.java"}, {"insertions": 168, "deletions": 0, "lines": 168, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/channel/ChannelManager.java"}, {"insertions": 39, "deletions": 9, "lines": 48, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/request/NettyConnectListener.java"}, {"insertions": 52, "deletions": 84, "lines": 136, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/channel/{ => pool}/DefaultChannelPool.java"}, {"insertions": 6, "deletions": 6, "lines": 12, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/channel/{NonChannelPool.java => pool/NoopChannelPool.java}"}, {"insertions": 1, "deletions": 12, "lines": 13, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/NettyAsyncHttpProvider.java"}, {"insertions": 3, "deletions": 9, "lines": 12, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/handler/Protocol.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/handler/Processor.java"}, {"insertions": 9, "deletions": 9, "lines": 18, "filePath": "providers/netty/src/test/java/org/asynchttpclient/providers/netty/NettyConnectionPoolTest.java"}, {"insertions": 47, "deletions": 46, "lines": 93, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/request/NettyRequestSender.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/NettyAsyncHttpProviderConfig.java"}], "commitDateTime": "2014-07-16 22:55:44", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.HttpProtocol.handle(io.netty.channel.Channel,org.asynchttpclient.providers.netty.future.NettyResponseFuture,java.lang.Object)"}, {"UPD": 2, "TOT": 11, "MOV": 4, "INS": 3, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.HttpProtocol.finishUpdate(org.asynchttpclient.providers.netty.future.NettyResponseFuture,io.netty.channel.Channel,boolean)"}], "spoonFilePath": "HttpProtocol.java"}, {"spoonMethods": [{"UPD": 3, "TOT": 5, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.IdleChannelDetector.closeChannels(java.util.List)"}, {"UPD": 8, "TOT": 11, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.destroy()"}, {"UPD": 6, "TOT": 6, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.ChannelCreation"}, {"UPD": 0, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 3, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.IdleChannelDetector.isChannelCloseable(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.pool.DefaultChannelPool.isOpen()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.toString()"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.isTTLExpired(io.netty.channel.Channel,long)"}, {"UPD": 8, "TOT": 12, "MOV": 3, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.poll(java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.pool.DefaultChannelPool.offer(io.netty.channel.Channel,java.lang.String)"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.IdleChannelDetector.isIdleTimeoutExpired(org.asynchttpclient.providers.netty.channel.DefaultChannelPool$IdleChannel,long)"}, {"UPD": 19, "TOT": 32, "MOV": 2, "INS": 0, "DEL": 11, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool"}, {"UPD": 12, "TOT": 18, "MOV": 3, "INS": 0, "DEL": 3, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.IdleChannelDetector.run(io.netty.util.Timeout)"}, {"UPD": 6, "TOT": 6, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.removeAll(io.netty.channel.Channel)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.scheduleNewIdleChannelDetector(io.netty.util.TimerTask)"}, {"UPD": 4, "TOT": 6, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.IdleChannelDetector.expiredChannels(java.util.concurrent.ConcurrentLinkedQueue,long)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.pool.DefaultChannelPool.getPoolForKey(java.lang.String)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.IdleChannel.hashCode()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.pool.DefaultChannelPool"}, {"UPD": 2, "TOT": 5, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.canCacheConnection()"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.IdleChannel.equals(java.lang.Object)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.pool.DefaultChannelPool.poll(java.lang.String)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.pool.DefaultChannelPool.IdleChannelDetector.run(io.netty.util.Timeout)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.isRemotelyClosed(io.netty.channel.Channel)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.IdleChannel"}, {"UPD": 5, "TOT": 9, "MOV": 3, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.addIdleChannel(java.util.concurrent.ConcurrentLinkedQueue,java.lang.String,io.netty.channel.Channel,long)"}, {"UPD": 11, "TOT": 20, "MOV": 6, "INS": 0, "DEL": 3, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.offer(java.lang.String,io.netty.channel.Channel)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.DefaultChannelPool.close(io.netty.channel.Channel)"}], "spoonFilePath": "DefaultChannelPool.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyAsyncHttpProvider.toString()"}, {"UPD": 0, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 3, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyAsyncHttpProvider"}], "spoonFilePath": "NettyAsyncHttpProvider.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyAsyncHttpProviderConfig"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyAsyncHttpProviderConfig.getChannelPool()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyAsyncHttpProviderConfig.setChannelPool(org.asynchttpclient.providers.netty.channel.ChannelPool)"}], "spoonFilePath": "NettyAsyncHttpProviderConfig.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 4, "MOV": 0, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.Protocol.handleRedirectAndExit(org.asynchttpclient.Request,org.asynchttpclient.providers.netty.future.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,io.netty.channel.Channel)"}, {"UPD": 2, "TOT": 6, "MOV": 4, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.Protocol.handleRedirectAndExit(org.asynchttpclient.Request,org.asynchttpclient.providers.netty.future.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,io.netty.channel.Channel).1.call()"}], "spoonFilePath": "Protocol.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.ChannelManager"}], "spoonFilePath": "ChannelManager.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testValidConnectionsPool().2.poll(java.lang.String)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testInvalidConnectionsPool().1.poll(java.lang.String)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testValidConnectionsPool().2.removeAll(io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testInvalidConnectionsPool().1.removeAll(io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testValidConnectionsPool().2"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testInvalidConnectionsPool().1"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testInvalidConnectionsPool().1.offer(java.lang.String,io.netty.channel.Channel)"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testValidConnectionsPool().2.offer(java.lang.String,io.netty.channel.Channel)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testValidConnectionsPool()"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testInvalidConnectionsPool()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testInvalidConnectionsPool().1.canCacheConnection()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.NettyConnectionPoolTest.testValidConnectionsPool().2.canCacheConnection()"}], "spoonFilePath": "NettyConnectionPoolTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.closeChannel(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.preemptChannel(org.asynchttpclient.AsyncHandler,java.lang.String)"}, {"UPD": 0, "TOT": 5, "MOV": 3, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.configureProcessor(org.asynchttpclient.providers.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean).3.initChannel(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.setDiscard(io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.close()"}, {"UPD": 6, "TOT": 14, "MOV": 2, "INS": 1, "DEL": 5, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.configureProcessor(org.asynchttpclient.providers.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean).2.initChannel(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.registerChannel(io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.removeAll(io.netty.channel.Channel)"}, {"UPD": 4, "TOT": 6, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.removeFromPool(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.configureProcessor(org.asynchttpclient.providers.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean).4.initChannel(io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 5, "MOV": 4, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.drainChannel(io.netty.channel.Channel,org.asynchttpclient.providers.netty.future.NettyResponseFuture).6.call()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.pollAndVerifyCachedChannel(org.asynchttpclient.uri.UriComponents,org.asynchttpclient.ProxyServer,org.asynchttpclient.ConnectionPoolKeyStrategy)"}, {"UPD": 9, "TOT": 13, "MOV": 4, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.offerToPool(java.lang.String,io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.configureProcessor(org.asynchttpclient.providers.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean).5.initChannel(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.registerOpenChannel(io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.configureProcessor(org.asynchttpclient.providers.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean).4"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.configureProcessor(org.asynchttpclient.providers.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean).3"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.configureProcessor(org.asynchttpclient.providers.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean).5"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.releaseFreeConnections()"}, {"UPD": 2, "TOT": 17, "MOV": 12, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.abort(org.asynchttpclient.providers.netty.future.NettyResponseFuture,java.lang.Throwable)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.drainChannel(io.netty.channel.Channel,org.asynchttpclient.providers.netty.future.NettyResponseFuture)"}, {"UPD": 4, "TOT": 7, "MOV": 3, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.finishChannel(io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.configureProcessor(org.asynchttpclient.providers.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean).2"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.configureProcessor(org.asynchttpclient.providers.netty.request.NettyRequestSender,java.util.concurrent.atomic.AtomicBoolean).1.initChannel(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.newDrainCallable(org.asynchttpclient.providers.netty.future.NettyResponseFuture,io.netty.channel.Channel,boolean,java.lang.String)"}, {"UPD": 7, "TOT": 17, "MOV": 5, "INS": 0, "DEL": 5, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.Channels.acquireConnection(org.asynchttpclient.AsyncHandler)"}], "spoonFilePath": "Channels.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.Processor.channelInactive(io.netty.channel.ChannelHandlerContext)"}], "spoonFilePath": "Processor.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.canCacheConnection()"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.offer(java.lang.String,io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.removeAll(io.netty.channel.Channel)"}], "spoonFilePath": "ChannelPool.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 8, "MOV": 5, "INS": 2, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyConnectListener.onFutureSuccess(io.netty.channel.Channel).1.operationComplete(io.netty.util.concurrent.Future)"}, {"UPD": 0, "TOT": 9, "MOV": 0, "INS": 9, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyConnectListener"}, {"UPD": 3, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyConnectListener.future()"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyConnectListener.onFutureSuccess(io.netty.channel.Channel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyConnectListener.onFutureFailure(io.netty.channel.Channel,java.lang.Throwable)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyConnectListener.abortChannelPreemption(java.lang.String)"}], "spoonFilePath": "NettyConnectListener.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.NonChannelPool"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.NonChannelPool.removeAll(io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.NonChannelPool.poll(java.lang.String)"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.NonChannelPool.offer(java.lang.String,io.netty.channel.Channel)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "org.asynchttpclient.providers.netty.channel.NonChannelPool.canCacheConnection()"}], "spoonFilePath": "NoopChannelPool.java"}, {"spoonMethods": [{"UPD": 8, "TOT": 37, "MOV": 17, "INS": 4, "DEL": 8, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyRequestSender.sendRequestWithNewChannel(org.asynchttpclient.Request,org.asynchttpclient.uri.UriComponents,org.asynchttpclient.ProxyServer,boolean,org.asynchttpclient.providers.netty.future.NettyResponseFuture,org.asynchttpclient.AsyncHandler,boolean)"}, {"UPD": 0, "TOT": 12, "MOV": 4, "INS": 4, "DEL": 4, "spoonMethodName": "org.asynchttpclient.providers.netty.request.NettyRequestSender.retry(org.asynchttpclient.providers.netty.future.NettyResponseFuture,io.netty.channel.Channel)"}], "spoonFilePath": "NettyRequestSender.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/201", "ttf": 548.0002777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "defaultMaxConnectionsPerHost is not respected on Netty", "statsSkippedReason": "", "user": "alexwei", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 0, "TOT": 0.0, "MOV": 0.0, "INS": 0.0, "DEL": 0.0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 2, "alsoFixesPhrase": 0}, "body": "The system property com.ning.http.client.AsyncHttpClientConfig.defaultMaxConnectionsPerHost is not respected on Netty.\n\nIn our Play! application, we have 300+ requests to be sent to another server asynchronously. \n\nThe Play log shows:\nplay.api.Application$$anon$1: Execution exception[[ConnectException: Connection reset by peer to http://localhost:xxxx/...\n\nAnd the other server has the following error messages in the log:\norg.apache.tomcat.util.net.JIoEndpoint createWorkerThread\nINFO: Maximum number of threads (200) created for connector with address null and port xxxx\n\nSetting the defaultMaxConnectionsPerHost to 10 or even 1 makes no difference. All the requests are still sent out immediately with no queuing or waiting.\n\nTested on: 1.7.6\n", "labels": ["Defect", "Netty"]}, {"created": "2012-10-23 06:57:20", "commits": {"9f6ecee28abf9d61cda5332c0261db9c57e99d76": {"commitGHEventType": "referenced", "commitUser": "jfarcand"}, "b64a2dcdf4b99adca03c2cd2878dd47c434d02b2": {"commitGHEventType": "closed", "commitUser": "jfarcand"}, "21a0fdfa1b95506a5b6481610fcda8d9dd2359bb": {"commitGHEventType": "referenced", "commitUser": "jfarcand"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2014-01-24 17:53:19", "filteredCommits": [], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "9f6ecee28abf9d61cda5332c0261db9c57e99d76", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "jfarcand", "commitSpoonAstDiffStats": []}, {"nameRev": "b64a2dcdf4b99adca03c2cd2878dd47c434d02b2 tags/2.0.0-alpha1~528", "commitMessage": "Improve fixed for #110. Also fixes #156 by properly invoking the AsyncHandler/WebSocketListener\n", "commitParents": ["e7de51893921e1c127629d259238022d950f5cfd"], "spoonStatsSkippedReason": "", "commitHash": "b64a2dcdf4b99adca03c2cd2878dd47c434d02b2", "authoredDateTime": "2014-01-24 12:53:25", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 16, "deletions": 7, "lines": 23, "filePath": "providers/netty/src/main/java/org/asynchttpclient/providers/netty/handler/WebSocketProtocol.java"}, {"insertions": 6, "deletions": 2, "lines": 8, "filePath": "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/EventHandler.java"}, {"insertions": 40, "deletions": 1, "lines": 41, "filePath": "api/src/test/java/org/asynchttpclient/websocket/CloseCodeReasonMessageTest.java"}], "commitDateTime": "2014-01-24 12:53:25", "commitUser": "jfarcand", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 7, "MOV": 3, "INS": 2, "DEL": 2, "spoonMethodName": "org.asynchttpclient.providers.netty.handler.WebSocketProtocol.handle(io.netty.channel.ChannelHandlerContext,org.asynchttpclient.providers.netty.future.NettyResponseFuture,java.lang.Object)"}], "spoonFilePath": "WebSocketProtocol.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "org.asynchttpclient.providers.grizzly.EventHandler.onInitialLineParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)"}], "spoonFilePath": "EventHandler.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "org.asynchttpclient.websocket.CloseCodeReasonMessageTest.wrongProtocolCode()"}], "spoonFilePath": "CloseCodeReasonMessageTest.java"}]}, {"nameRev": "21a0fdfa1b95506a5b6481610fcda8d9dd2359bb tags/async-http-client-1.8.0~13", "commitMessage": "Improve fixed for #110. Also fixes #156 by properly invoking the AsyncHandler/WebSocketListener\n", "commitParents": ["8978a541df387970b2989408e9a1281006aa4515"], "spoonStatsSkippedReason": "", "commitHash": "21a0fdfa1b95506a5b6481610fcda8d9dd2359bb", "authoredDateTime": "2014-01-24 12:45:47", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 40, "deletions": 0, "lines": 40, "filePath": "src/test/java/com/ning/http/client/websocket/CloseCodeReasonMessageTest.java"}, {"insertions": 6, "deletions": 1, "lines": 7, "filePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java"}, {"insertions": 101, "deletions": 93, "lines": 194, "filePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java"}], "commitDateTime": "2014-01-30 15:38:12", "commitUser": "jfarcand", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider.AsyncHttpClientEventFilter.onInitialLineParsed(org.glassfish.grizzly.http.HttpHeader,org.glassfish.grizzly.filterchain.FilterChainContext)"}], "spoonFilePath": "GrizzlyAsyncHttpProvider.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.ning.http.client.websocket.CloseCodeReasonMessageTest.wrongProtocolCode()"}], "spoonFilePath": "CloseCodeReasonMessageTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 8, "MOV": 3, "INS": 3, "DEL": 2, "spoonMethodName": "com.ning.http.client.providers.netty.NettyAsyncHttpProvider.WebSocketProtocol.handle(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.MessageEvent)"}], "spoonFilePath": "NettyAsyncHttpProvider.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/156", "ttf": 458.0002777777778, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "title": "Implement isBound() / isConnected() for WebSocket", "statsSkippedReason": "", "user": "svenjacobs", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 0, "TOT": 0.0, "MOV": 0.0, "INS": 0.0, "DEL": 0.0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 2, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "Opening a WebSocket on an actual Web resource which however is not a WebSocket resource (for example `ws://www.google.com/`) yields `isOpen() == true`.\n\nThe channel might be opened but how do I found out whether the WebSocket protocol has been successfully established?\n\n[WebSocket](https://github.com/sonatype/async-http-client/blob/master/api/src/main/java/com/ning/http/client/websocket/WebSocket.java) should declare `isBound()` and `isConnected()` and the Netty implementation just pass through the state of the Netty Channel.\n\nNot sure how to do this for `GrizzlyWebSocketAdapter` however.\n", "labels": ["Defect", "Netty"]}, {"created": "2012-10-05 14:42:02", "user": "kevinoid", "body": "When encountering an SSL error caused by an invalid certificate sent by a server/attacker on the local machine while using the Netty backend (I have not tested with the other backends), AsyncHttpClient throws the following error:\n\n``` java\n    java.util.concurrent.ExecutionException: java.io.IOException: Remotely Closed [id: 0x019b5217, /127.0.0.1:58141 :> localhost/127.0.0.1:8088]\n    at com.ning.http.client.providers.netty.NettyResponseFuture.abort(NettyResponseFuture.java:297)\n    at com.ning.http.client.providers.netty.NettyAsyncHttpProvider.abort(NettyAsyncHttpProvider.java:1326)\n    at com.ning.http.client.providers.netty.NettyAsyncHttpProvider.channelClosed(NettyAsyncHttpProvider.java:1389)\n    at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:93)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:792)\n    at org.jboss.netty.handler.stream.ChunkedWriteHandler.handleUpstream(ChunkedWriteHandler.java:141)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:792)\n    at org.jboss.netty.handler.codec.replay.ReplayingDecoder.cleanup(ReplayingDecoder.java:636)\n    at org.jboss.netty.handler.codec.replay.ReplayingDecoder.channelClosed(ReplayingDecoder.java:533)\n    at org.jboss.netty.handler.codec.http.HttpClientCodec$Decoder.channelClosed(HttpClientCodec.java:218)\n    at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:93)\n    at org.jboss.netty.handler.codec.http.HttpClientCodec.handleUpstream(HttpClientCodec.java:92)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:792)\n    at org.jboss.netty.handler.codec.frame.FrameDecoder.cleanup(FrameDecoder.java:379)\n    at org.jboss.netty.handler.codec.frame.FrameDecoder.channelClosed(FrameDecoder.java:267)\n    at org.jboss.netty.handler.ssl.SslHandler.channelClosed(SslHandler.java:1313)\n    at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:93)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)\n    at org.jboss.netty.channel.Channels.fireChannelClosed(Channels.java:476)\n    at org.jboss.netty.channel.socket.nio.AbstractNioWorker.close(AbstractNioWorker.java:631)\n    at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:101)\n    at org.jboss.netty.channel.socket.nio.AbstractNioWorker.processSelectedKeys(AbstractNioWorker.java:372)\n    at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:246)\n    at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:38)\n    at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:102)\n    at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n    at java.lang.Thread.run(Thread.java:679)\n    Caused by: java.io.IOException: Remotely Closed [id: 0x019b5217, /127.0.0.1:58141 :> localhost/127.0.0.1:8088]\n    ... 31 more\n```\n\nThis is very misleading and can increase debug times for developers unfamiliar with packet capture techniquies for finding the source of the error.  For comparison, when encountering the error for non-local connections the exception that is thrown is:\n\n``` java\n    java.util.concurrent.ExecutionException: java.net.ConnectException: General SSLEngine problem to <url>\n```\n\nOne easy way to reproduce the issue is using a tool such as [mitmproxy](http://mitmproxy.org/) to \"attack\" a test program.  The issue is completely reproducible on my system.\n", "closed": "2014-07-10 11:58:59", "commitsDetails": [], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/145", "ttf": 642.0002777777778, "commits": {}, "labels": ["Defect", "Netty"], "title": "Netty throws \"Remotely Closed\" instead of \"General SSLEngine problem\" for local MITM"}, {"created": "2012-04-25 16:15:36", "commits": {"01611a0a6ab0d8b74b97882f290150bc48f2fbef": {"commitGHEventType": "referenced", "commitUser": "slandelle"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2012-10-11 20:02:28", "filteredCommits": [], "commitsDetails": [{"nameRev": "01611a0a6ab0d8b74b97882f290150bc48f2fbef tags/async-http-client-1.8.4~6", "commitMessage": "Back SpnegoEngine thread safety fix from #95, close #94\n", "commitParents": ["f4abc373f1cf26e3b0d7d670ac60c55e95966101"], "spoonStatsSkippedReason": "", "commitHash": "01611a0a6ab0d8b74b97882f290150bc48f2fbef", "authoredDateTime": "2014-03-07 15:28:52", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 9, "lines": 13, "filePath": "src/main/java/com/ning/http/client/providers/netty/spnego/SpnegoEngine.java"}], "commitDateTime": "2014-03-07 15:28:52", "commitUser": "slandelle", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 3, "spoonMethodName": "com.ning.http.client.providers.netty.spnego.SpnegoEngine"}, {"UPD": 0, "TOT": 67, "MOV": 17, "INS": 25, "DEL": 25, "spoonMethodName": "com.ning.http.client.providers.netty.spnego.SpnegoEngine.generateToken(java.lang.String)"}], "spoonFilePath": "SpnegoEngine.java"}]}], "url": "https://github.com/AsyncHttpClient/async-http-client/issues/94", "ttf": 169.00027777777777, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "SpnegoEngine thread safety", "statsSkippedReason": "", "user": "fabienbancharel", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "Hello,\nUsing gatling to load test a CAS with Spnego, I start to have NullPointerException at 20 concurrent users (all using my credentials).\n\nThe exception is :\njava.io.IOException\n        at com.ning.http.client.providers.netty.NettyAsyncHttpProvider.construct\n(NettyAsyncHttpProvider.java:658)\nCaused by: java.lang.NullPointerException\n        at sun.security.jgss.GSSContextImpl.initSecContext(GSSContextImpl.java:2\n36)\n        at sun.security.jgss.GSSContextImpl.initSecContext(GSSContextImpl.java:1\n62)\n        at com.ning.http.client.providers.netty.spnego.SpnegoEngine.generateToke\nn(SpnegoEngine.java:343)\n        at com.ning.http.client.providers.netty.NettyAsyncHttpProvider.construct\n(NettyAsyncHttpProvider.java:656)\n        ... 18 more\n\nI identified two attributes in SpnegoEngine that make it non thread safe (gatling use only one NettyAsyncHttpProvider) :\nprivate GSSContext gssContext = null;\nprivate byte[] token;\n\nThey can be defined as local variables in generateToken method : NPE disappears, and it solves the load problem with gatling.\nCould you integrate this modification ?\n\nAs I can now load test our CAS Spnego server, this makes my issue (https://github.com/sonatype/async-http-client/issues/83) less important (I dont succeed by the way).\n\nThanks for gatling users,\nFabien.\n", "labels": ["Defect", "Netty"]}]}