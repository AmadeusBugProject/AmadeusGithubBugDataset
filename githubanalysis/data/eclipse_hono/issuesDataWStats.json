{"projectName": "eclipse/hono", "bugLabels": ["bug", "not a bug"], "captureTime": "Sat Jul  4 18:30:37 2020", "issues": [{"title": "Delay between HonoConnection reconnect attempts drops to 0", "body": "The exponential backoff mechanism concerning `HonoConnection` reconnect attempts has a bug so that after the 58th attempt, the delay between reconnect attempts drops to 0 (that is with the default `reconnectDelayIncrement` of `100`).\r\n\r\nWith a higher `reconnectDelayIncrement` the issue occurs sooner, with `reconnectDelayIncrement` set `1` the issue doesn't occur.", "url": "https://github.com/eclipse/hono/issues/2032", "user": "calohmn", "labels": ["Client", "bug"], "created": "2020-06-13 10:16:31", "closed": "2020-06-17 06:55:08", "commits": {"ce1ca1be9901a9ff6717a1959364252ceba34db5": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "2453730e794865eede2b3f48e943f6653a1e7f47": {"commitGHEventType": "referenced", "commitUser": "calohmn"}, "66c09d013382c11c742b3e96901e16a7a2ef0451": {"commitGHEventType": "referenced", "commitUser": "calohmn"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "ce1ca1be9901a9ff6717a1959364252ceba34db5", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["1f39db27c9f265fbc20e124697f7dc00a5e0dd89"], "nameRev": "ce1ca1be9901a9ff6717a1959364252ceba34db5 tags/1.3.0-M3~24", "commitMessage": "[#2032] Fix error in reconnect delay calculation.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-06-17 08:55:06", "authoredDateTime": "2020-06-13 12:21:25", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoConnectionImpl.java", "insertions": 28, "deletions": 15, "lines": 43}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/HonoConnectionImplTest.java", "insertions": 22, "deletions": 0, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoConnectionImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.reconnect(java.lang.Throwable,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 20, "UPD": 6, "INS": 1, "MOV": 11, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.getReconnectMaxDelay(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoConnectionImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImplTest.testGetReconnectMaxDelay()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "2453730e794865eede2b3f48e943f6653a1e7f47", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["9fd8e48c4165e9d0d5f4f23b1898e949970ba967"], "nameRev": "2453730e794865eede2b3f48e943f6653a1e7f47 remotes/origin/1.2.x~4", "commitMessage": "[#2032] Fix error in reconnect delay calculation.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n(cherry picked from commit ce1ca1be9901a9ff6717a1959364252ceba34db5)\n", "commitDateTime": "2020-06-22 07:55:59", "authoredDateTime": "2020-06-13 12:21:25", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoConnectionImpl.java", "insertions": 28, "deletions": 15, "lines": 43}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/HonoConnectionImplTest.java", "insertions": 22, "deletions": 0, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoConnectionImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.reconnect(java.lang.Throwable,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 20, "UPD": 6, "INS": 1, "MOV": 11, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.getReconnectMaxDelay(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoConnectionImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImplTest.testGetReconnectMaxDelay()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "66c09d013382c11c742b3e96901e16a7a2ef0451", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["2453730e794865eede2b3f48e943f6653a1e7f47"], "nameRev": "66c09d013382c11c742b3e96901e16a7a2ef0451 remotes/origin/1.2.x~3", "commitMessage": "[#2032] Update release notes.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-06-22 09:23:13", "authoredDateTime": "2020-06-22 09:23:13", "commitGitStats": [{"filePath": "site/homepage/content/release-notes.md", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ce1ca1be9901a9ff6717a1959364252ceba34db5", "66c09d013382c11c742b3e96901e16a7a2ef0451"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 28, "deletions": 15, "lines": 43, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 21.0, "UPD": 6.0, "INS": 2.0, "MOV": 11.0, "DEL": 2.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.HonoConnectionImpl.reconnect(java.lang.Throwable,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoConnectionImpl.getReconnectMaxDelay(int)"]}, {"title": "ConcurrentModificationException in handleTenantTimeout", "body": "We saw the following exception in a protocol adapter log:\r\n````\r\nERROR io.vertx.core.impl.ContextImpl Unhandled exception\r\njava.util.ConcurrentModificationException: null\r\n\tat java.base/java.util.HashMap$ValueSpliterator.forEachRemaining(Unknown Source)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(Unknown Source)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(Unknown Source)\r\n\tat org.eclipse.hono.client.impl.ProtocolAdapterCommandConsumerFactoryImpl.handleTenantTimeout(ProtocolAdapterCommandConsumerFactoryImpl.java:311)\r\n\tat io.vertx.core.eventbus.impl.HandlerRegistration.deliver(HandlerRegistration.java:271)\r\n\tat io.vertx.core.eventbus.impl.HandlerRegistration.handle(HandlerRegistration.java:249)\r\n\tat io.vertx.core.eventbus.impl.EventBusImpl$InboundDeliveryContext.next(EventBusImpl.java:573)\r\n\tat io.vertx.core.eventbus.impl.EventBusImpl.lambda$deliverToHandler$5(EventBusImpl.java:532)\r\n\tat io.vertx.core.impl.ContextImpl.executeTask(ContextImpl.java:369)\r\n[...]\r\n````\r\n", "url": "https://github.com/eclipse/hono/issues/2031", "user": "calohmn", "labels": ["C&C", "bug", "help wanted"], "created": "2020-06-12 12:10:16", "closed": "2020-06-22 09:34:41", "commits": {"6c5b1371a10ecaa68f5cbc2e71f388f82a0ac643": {"commitGHEventType": "referenced", "commitUser": "calohmn"}, "57537934d6e9402ef56e15dd89177e7bd6bef53f": {"commitGHEventType": "referenced", "commitUser": "calohmn"}, "187757ed93a183246bac0931e43f5c31e5b36560": {"commitGHEventType": "referenced", "commitUser": "calohmn"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "6c5b1371a10ecaa68f5cbc2e71f388f82a0ac643", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["580bac1eb72592b8b3afdd7bd05203e9e2e66794"], "nameRev": "6c5b1371a10ecaa68f5cbc2e71f388f82a0ac643 tags/1.3.0-M3~16", "commitMessage": "[#2031] Fix ConcurrentModificationException.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-06-22 10:49:58", "authoredDateTime": "2020-06-22 10:49:58", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java", "insertions": 7, "deletions": 5, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ProtocolAdapterCommandConsumerFactoryImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.ProtocolAdapterCommandConsumerFactoryImpl.handleTenantTimeout(io.vertx.core.eventbus.Message)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "57537934d6e9402ef56e15dd89177e7bd6bef53f", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["66c09d013382c11c742b3e96901e16a7a2ef0451"], "nameRev": "57537934d6e9402ef56e15dd89177e7bd6bef53f remotes/origin/1.2.x~2", "commitMessage": "[#2031] Fix ConcurrentModificationException.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-06-22 11:09:12", "authoredDateTime": "2020-06-22 10:49:58", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java", "insertions": 7, "deletions": 5, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ProtocolAdapterCommandConsumerFactoryImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.ProtocolAdapterCommandConsumerFactoryImpl.handleTenantTimeout(io.vertx.core.eventbus.Message)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "187757ed93a183246bac0931e43f5c31e5b36560", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["57537934d6e9402ef56e15dd89177e7bd6bef53f"], "nameRev": "187757ed93a183246bac0931e43f5c31e5b36560 remotes/origin/1.2.x~1", "commitMessage": "[#2031] Update release notes.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-06-22 11:31:44", "authoredDateTime": "2020-06-22 11:31:44", "commitGitStats": [{"filePath": "site/homepage/content/release-notes.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6c5b1371a10ecaa68f5cbc2e71f388f82a0ac643", "187757ed93a183246bac0931e43f5c31e5b36560"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 5, "lines": 12, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3.0, "UPD": 0.0, "INS": 2.0, "MOV": 1.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.ProtocolAdapterCommandConsumerFactoryImpl.handleTenantTimeout(io.vertx.core.eventbus.Message)"]}, {"title": "Device Registry does not handle malformed payload", "body": "The device management endpoint of the example registry returns a `500` status code when trying to register a device that contains additional (unknown) properties like\r\n```json\r\n{\r\n  \"unexpected\": \"property\"\r\n}\r\n```\r\nHowever, it should return a `400` (Bad Request) in this case.\r\n\r\nThe tenant management endpoint of the example registry returns a `201` status code when trying to register a tenant that contains additional (unknown) properties like\r\n```json\r\n{\r\n  \"unexpected\": \"property\"\r\n}\r\n```\r\nHowever, it should return a `400` (Bad Request) in this case.", "url": "https://github.com/eclipse/hono/issues/2020", "user": "sophokles73", "labels": ["Device Registry", "bug"], "created": "2020-06-05 13:08:46", "closed": "2020-06-24 12:32:22", "commits": {"b25f3d16170dd95b20dccc219062483db03893d6": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "c110578aed6e4a486b0435527917053b189a00d5": {"commitGHEventType": "closed", "commitUser": "sophokles73"}, "c2676800daaca47777a813f0bc383b0c6ea26c07": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 18.00027777777778, "commitsDetails": [{"commitHash": "b25f3d16170dd95b20dccc219062483db03893d6", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["7025c4db63484d1d7237e697732ea7fd2410cc59"], "nameRev": "b25f3d16170dd95b20dccc219062483db03893d6 tags/1.3.0-M3~12", "commitMessage": "[#2020] Reject unknown properties in Tenant Management HTTP endpoint\n\nAdded explicit error handling in case of failure to process requests.\r\nRemoved obsolete request payload parsing/modification.\r\nImproved integration tests.\r\n\r\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-06-24 13:02:37", "authoredDateTime": "2020-06-24 13:02:37", "commitGitStats": [{"filePath": "core/src/main/java/org/eclipse/hono/util/Adapter.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "core/src/main/java/org/eclipse/hono/util/RegistryManagementConstants.java", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/http/AbstractHttpEndpoint.java", "insertions": 89, "deletions": 0, "lines": 89}, {"filePath": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/AbstractDelegatingRegistryHttpEndpoint.java", "insertions": 102, "deletions": 24, "lines": 126}, {"filePath": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/Id.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DelegatingDeviceManagementHttpEndpoint.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/tenant/DelegatingTenantManagementHttpEndpoint.java", "insertions": 91, "deletions": 171, "lines": 262}, {"filePath": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/tenant/Tenant.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "services/device-registry-base/src/test/java/org/eclipse/hono/service/management/tenant/TenantTest.java", "insertions": 91, "deletions": 50, "lines": 141}, {"filePath": "services/device-registry-base/src/test/java/org/eclipse/hono/service/management/tenant/TrustedCertificateAuthorityTest.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "services/device-registry-file/src/main/java/org/eclipse/hono/deviceregistry/file/FileBasedTenantService.java", "insertions": 27, "deletions": 22, "lines": 49}, {"filePath": "services/device-registry-file/src/test/java/org/eclipse/hono/deviceregistry/file/FileBasedTenantServiceTest.java", "insertions": 34, "deletions": 38, "lines": 72}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/DeviceRegistryHttpClient.java", "insertions": 95, "deletions": 21, "lines": 116}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/IntegrationTestSupport.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/registry/DeviceManagementIT.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/registry/TenantManagementIT.java", "insertions": 129, "deletions": 70, "lines": 199}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}, {"commitHash": "c110578aed6e4a486b0435527917053b189a00d5", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["3178b39eff0ac2486939704662e28528c47205c5"], "nameRev": "c110578aed6e4a486b0435527917053b189a00d5 tags/1.3.0-M3~6", "commitMessage": "[#2020] Reject unknown properties in Device Management HTTP endpoint\n\nAdded explicit error handling in case of failure to process requests.\nRemoved obsolete request payload parsing/modification.\nImproved integration tests.\n\nFixes #2020\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-06-24 14:32:19", "authoredDateTime": "2020-06-08 08:14:49", "commitGitStats": [{"filePath": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DelegatingDeviceManagementHttpEndpoint.java", "insertions": 91, "deletions": 113, "lines": 204}, {"filePath": "services/device-registry-base/src/test/java/org/eclipse/hono/service/management/device/DeviceTest.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/IntegrationTestSupport.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/registry/DeviceManagementIT.java", "insertions": 87, "deletions": 57, "lines": 144}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DelegatingDeviceManagementHttpEndpoint.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.device.DelegatingDeviceManagementHttpEndpoint.doCreateDevice(io.vertx.ext.web.RoutingContext)", "TOT": 55, "UPD": 21, "INS": 5, "MOV": 23, "DEL": 6}, {"spoonMethodName": "org.eclipse.hono.service.management.device.DelegatingDeviceManagementHttpEndpoint.doUpdateDevice(io.vertx.ext.web.RoutingContext)", "TOT": 33, "UPD": 11, "INS": 2, "MOV": 16, "DEL": 4}, {"spoonMethodName": "org.eclipse.hono.service.management.device.DelegatingDeviceManagementHttpEndpoint.fromPayload(io.vertx.core.json.JsonObject)", "TOT": 9, "UPD": 3, "INS": 0, "MOV": 3, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.service.management.device.DelegatingDeviceManagementHttpEndpoint.doGetDevice(io.vertx.ext.web.RoutingContext)", "TOT": 35, "UPD": 12, "INS": 2, "MOV": 18, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.service.management.device.DelegatingDeviceManagementHttpEndpoint.doDeleteDevice(io.vertx.ext.web.RoutingContext)", "TOT": 29, "UPD": 7, "INS": 2, "MOV": 15, "DEL": 5}, {"spoonMethodName": "org.eclipse.hono.service.management.device.DelegatingDeviceManagementHttpEndpoint.fromPayload(io.vertx.ext.web.RoutingContext)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DeviceTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.device.DeviceTest.testDecodeFailsForUnknownProperties()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IntegrationTestSupport.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.IntegrationTestSupport.addDeviceIdForRemoval(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.IntegrationTestSupport.getRandomDeviceId(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "DeviceManagementIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.testDeregisterDeviceFailsForNonExistingDevice(io.vertx.junit5.VertxTestContext)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.testDeregisterDeviceFailsForMissingDeviceId(io.vertx.junit5.VertxTestContext)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.removeDevice(io.vertx.junit5.VertxTestContext)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.setUpClient()", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.testAddDeviceSucceeds(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.testAddDeviceSucceedsWithoutDeviceId(io.vertx.junit5.VertxTestContext)", "TOT": 21, "UPD": 6, "INS": 2, "MOV": 9, "DEL": 4}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.testAddDeviceFailsForMissingContentType(io.vertx.junit5.VertxTestContext)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.testAddDeviceSucceedsForEmptyBody(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.testAddDeviceSucceedsForEmptyBodyAndContentType(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.testGetDeviceFailsForNonExistingDevice(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.testGetDeviceFailsForMissingDeviceId(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.testUpdateDeviceFailsForNonExistingDevice(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.testUpdateDeviceFailsForMissingDeviceId(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.testAddDeviceFailsForInvalidDeviceId(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.testAddDeviceFailsForDuplicateDevice(io.vertx.junit5.VertxTestContext)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.testUpdateDeviceFailsForMissingContentType(io.vertx.junit5.VertxTestContext)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.testGetDeviceContainsRegisteredInfo(io.vertx.junit5.VertxTestContext)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.testUpdateDeviceSucceeds(io.vertx.junit5.VertxTestContext)", "TOT": 22, "UPD": 5, "INS": 8, "MOV": 7, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.testDeregisterDeviceSucceeds(io.vertx.junit5.VertxTestContext)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.setUp(org.junit.jupiter.api.TestInfo)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.testAddDeviceWithoutPayloadSucceeds(io.vertx.junit5.VertxTestContext)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.testAddDeviceFailsForUnknownProperties(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceManagementIT.assertLocationHeader(io.vertx.core.MultiMap,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "c2676800daaca47777a813f0bc383b0c6ea26c07", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["c110578aed6e4a486b0435527917053b189a00d5"], "nameRev": "c2676800daaca47777a813f0bc383b0c6ea26c07 tags/1.3.0-M3~5", "commitMessage": "[#2020] Reject unknown properties in Credentials Management endpoint\n\nAdded explicit error handling in case of failure to process requests.\nImproved integration tests.\nImproved credentials and secret data objects to implicitly check\nconstraints on property values during de-serialization/instantiation.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-06-24 17:14:30", "authoredDateTime": "2020-06-08 15:41:47", "commitGitStats": [{"filePath": "core/src/main/java/org/eclipse/hono/util/CredentialsConstants.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/http/AbstractHttpEndpoint.java", "insertions": 7, "deletions": 95, "lines": 102}, {"filePath": "services/base-jdbc/src/test/java/org/eclipse/hono/service/base/jdbc/store/device/JsonStoreTest.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/AbstractDelegatingRegistryHttpEndpoint.java", "insertions": 5, "deletions": 63, "lines": 68}, {"filePath": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonCredential.java", "insertions": 61, "deletions": 8, "lines": 69}, {"filePath": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/DelegatingCredentialsManagementHttpEndpoint.java", "insertions": 85, "deletions": 137, "lines": 222}, {"filePath": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/GenericCredential.java", "insertions": 32, "deletions": 15, "lines": 47}, {"filePath": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/PasswordCredential.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/PskCredential.java", "insertions": 14, "deletions": 3, "lines": 17}, {"filePath": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/X509CertificateCredential.java", "insertions": 29, "deletions": 2, "lines": 31}, {"filePath": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/AutoProvisioningEnabledDeviceBackend.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "services/device-registry-base/src/test/java/org/eclipse/hono/service/credentials/AbstractCredentialsServiceTest.java", "insertions": 7, "deletions": 14, "lines": 21}, {"filePath": "services/device-registry-base/src/test/java/org/eclipse/hono/service/management/credentials/CredentialsTest.java", "insertions": 114, "deletions": 26, "lines": 140}, {"filePath": "services/device-registry-file/src/test/java/org/eclipse/hono/deviceregistry/file/FileBasedCredentialsServiceTest.java", "insertions": 4, "deletions": 8, "lines": 12}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/DeviceRegistryHttpClient.java", "insertions": 6, "deletions": 10, "lines": 16}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/mqtt/MqttConnectionIT.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/registry/CredentialsApiTests.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/registry/CredentialsManagementIT.java", "insertions": 239, "deletions": 151, "lines": 390}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": ["b25f3d16170dd95b20dccc219062483db03893d6", "c110578aed6e4a486b0435527917053b189a00d5", "c2676800daaca47777a813f0bc383b0c6ea26c07"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 732, "deletions": 674, "lines": 1406, "gitFilesChange": 17}, "spoonStatsSummary": {"TOT": 266.0, "UPD": 94.0, "INS": 34.0, "MOV": 106.0, "DEL": 32.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 30}, "statsSkippedReason": "", "changesInPackagesGIT": ["services/device-registry-base/src/main/java/org/eclipse/hono/service/management", "service-base/src/main/java/org/eclipse/hono/service/http", "core/src/main/java/org/eclipse/hono/util", "services/device-registry-file/src/main/java/org/eclipse/hono/deviceregistry/file"], "changesInPackagesSPOON": ["org.eclipse.hono.tests.registry.DeviceManagementIT.testUpdateDeviceFailsForMissingContentType(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.tests.registry.DeviceManagementIT", "org.eclipse.hono.tests.registry.DeviceManagementIT.testAddDeviceSucceedsWithoutDeviceId(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.tests.registry.DeviceManagementIT.testAddDeviceFailsForMissingContentType(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.service.management.device.DelegatingDeviceManagementHttpEndpoint.doUpdateDevice(io.vertx.ext.web.RoutingContext)", "org.eclipse.hono.tests.registry.DeviceManagementIT.testAddDeviceFailsForDuplicateDevice(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.tests.registry.DeviceManagementIT.testUpdateDeviceFailsForNonExistingDevice(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.tests.registry.DeviceManagementIT.testDeregisterDeviceSucceeds(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.tests.registry.DeviceManagementIT.testAddDeviceSucceedsForEmptyBodyAndContentType(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.tests.registry.DeviceManagementIT.testGetDeviceContainsRegisteredInfo(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.service.management.device.DelegatingDeviceManagementHttpEndpoint.fromPayload(io.vertx.core.json.JsonObject)", "org.eclipse.hono.service.management.device.DelegatingDeviceManagementHttpEndpoint.doCreateDevice(io.vertx.ext.web.RoutingContext)", "org.eclipse.hono.tests.registry.DeviceManagementIT.testAddDeviceFailsForInvalidDeviceId(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.tests.registry.DeviceManagementIT.testAddDeviceSucceeds(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.tests.registry.DeviceManagementIT.testAddDeviceSucceedsForEmptyBody(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.tests.registry.DeviceManagementIT.setUp(org.junit.jupiter.api.TestInfo)", "org.eclipse.hono.tests.registry.DeviceManagementIT.testGetDeviceFailsForNonExistingDevice(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.service.management.device.DelegatingDeviceManagementHttpEndpoint.doDeleteDevice(io.vertx.ext.web.RoutingContext)", "org.eclipse.hono.tests.registry.DeviceManagementIT.assertLocationHeader(io.vertx.core.MultiMap,java.lang.String)", "org.eclipse.hono.tests.registry.DeviceManagementIT.testUpdateDeviceSucceeds(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.tests.registry.DeviceManagementIT.testDeregisterDeviceFailsForNonExistingDevice(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.service.management.device.DelegatingDeviceManagementHttpEndpoint.doGetDevice(io.vertx.ext.web.RoutingContext)", "org.eclipse.hono.tests.registry.DeviceManagementIT.testUpdateDeviceFailsForMissingDeviceId(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.tests.registry.DeviceManagementIT.setUpClient()", "org.eclipse.hono.tests.registry.DeviceManagementIT.testGetDeviceFailsForMissingDeviceId(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.tests.registry.DeviceManagementIT.removeDevice(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.service.management.device.DelegatingDeviceManagementHttpEndpoint.fromPayload(io.vertx.ext.web.RoutingContext)", "org.eclipse.hono.tests.registry.DeviceManagementIT.testAddDeviceWithoutPayloadSucceeds(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.tests.registry.DeviceManagementIT.testDeregisterDeviceFailsForMissingDeviceId(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.tests.registry.DeviceManagementIT.testAddDeviceFailsForUnknownProperties(io.vertx.junit5.VertxTestContext)"]}, {"title": "Command & Control errors after reconnect to AMQP messaging network", "body": "After the Command & Control connection to the AMQP messaging network is lost and reconnected, the internal command routing on the \"command_internal/[adapterId]\" address in the protocol adapters doesn't seem to work in some cases - there is a timeout waiting for the delivery update.\r\n\r\nThere seems to be an issue with closing/recreating the \"command_internal/[adapterId]\" sender and receiver links.", "url": "https://github.com/eclipse/hono/issues/2017", "user": "calohmn", "labels": ["C&C", "bug"], "created": "2020-06-04 21:13:14", "closed": "2020-06-05 12:00:58", "commits": {"7b31c16e9adcd235157a23d27dec0290dca94132": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "3049e20d9d2508c455b42024126000f9a0c75930": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "51e0d63d25e5b7582563ec584c5113ea84a93f9d": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "5a5f9693b0890e17e7e710be441feeb363c82a6f": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "7b31c16e9adcd235157a23d27dec0290dca94132", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["bdc9770a296fb087720ca386f124c439058a2ab3"], "nameRev": "7b31c16e9adcd235157a23d27dec0290dca94132 tags/1.2.3~2", "commitMessage": "[#2017] Fix reconnect-handling concerning command_internal links.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-06-05 14:00:35", "authoredDateTime": "2020-06-04 23:24:11", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/DelegatedCommandSenderImpl.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/MappingAndDelegatingCommandHandler.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java", "insertions": 1, "deletions": 3, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DelegatedCommandSenderImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.DelegatedCommandSenderImpl.create(org.eclipse.hono.client.HonoConnection,java.lang.String,io.vertx.core.Handler)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MappingAndDelegatingCommandHandler.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.MappingAndDelegatingCommandHandler.getOrCreateDelegatedCommandSender(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.MappingAndDelegatingCommandHandler", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProtocolAdapterCommandConsumerFactoryImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.ProtocolAdapterCommandConsumerFactoryImpl.onDisconnect()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "3049e20d9d2508c455b42024126000f9a0c75930", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["d35cbad23c8cde04be44ccd5702c09d5cadf0da6"], "nameRev": "3049e20d9d2508c455b42024126000f9a0c75930 tags/1.3.0-M3~33", "commitMessage": "[#2017] Fix reconnect-handling concerning command_internal links.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-06-05 14:00:57", "authoredDateTime": "2020-06-04 23:16:29", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/DelegatedCommandSenderImpl.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/MappingAndDelegatingCommandHandler.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java", "insertions": 1, "deletions": 3, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DelegatedCommandSenderImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.DelegatedCommandSenderImpl.create(org.eclipse.hono.client.HonoConnection,java.lang.String,io.vertx.core.Handler)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MappingAndDelegatingCommandHandler.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.MappingAndDelegatingCommandHandler.getOrCreateDelegatedCommandSender(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.MappingAndDelegatingCommandHandler", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProtocolAdapterCommandConsumerFactoryImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.ProtocolAdapterCommandConsumerFactoryImpl.onDisconnect()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "51e0d63d25e5b7582563ec584c5113ea84a93f9d", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["165bbff219dcf44138bd0ce22e70cbc9f1273a15"], "nameRev": "51e0d63d25e5b7582563ec584c5113ea84a93f9d tags/1.3.0-M3~31", "commitMessage": "[#2017] Update release notes\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-06-09 08:22:38", "authoredDateTime": "2020-06-08 08:18:27", "commitGitStats": [{"filePath": "site/homepage/content/release-notes.md", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5a5f9693b0890e17e7e710be441feeb363c82a6f", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["7b31c16e9adcd235157a23d27dec0290dca94132"], "nameRev": "5a5f9693b0890e17e7e710be441feeb363c82a6f tags/1.2.3~1", "commitMessage": "[#2017] Update release notes\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-06-09 08:26:29", "authoredDateTime": "2020-06-08 08:19:40", "commitGitStats": [{"filePath": "site/homepage/content/release-notes.md", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7b31c16e9adcd235157a23d27dec0290dca94132", "51e0d63d25e5b7582563ec584c5113ea84a93f9d"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 7, "lines": 15, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 7.0, "UPD": 2.0, "INS": 3.0, "MOV": 0.0, "DEL": 2.0, "spoonFilesChanged": 3, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.ProtocolAdapterCommandConsumerFactoryImpl.onDisconnect()", "org.eclipse.hono.client.impl.MappingAndDelegatingCommandHandler.getOrCreateDelegatedCommandSender(java.lang.String)", "org.eclipse.hono.client.impl.MappingAndDelegatingCommandHandler", "org.eclipse.hono.client.impl.DelegatedCommandSenderImpl.create(org.eclipse.hono.client.HonoConnection,java.lang.String,io.vertx.core.Handler)"]}, {"title": "Set explicit expiration for Device Connection cache entries (prevent timeout exceptions with Infinispan 9.4))", "body": "\"Last-known-gateway\" entries in the cache used for the Device Connection API implementation should expire after a certain time. To achieve this, the \"device-connection\" cache definition for the Infinispan server was set up accordingly, using a `<expiration max-idle=\"2419200000\" />` definition (see the corresponding file in the iot-packages repo: https://github.com/eclipse/packages/blob/ca4113c01064e16c0a9f8fc078004f83e4b0aae7/charts/hono/templates/example-data-grid/configmap.yaml#L274).\r\n\r\nThere are 2 issues with that:\r\n- as described in the Infinspan HotRod protocol implementation javadoc (https://docs.jboss.org/infinispan/10.1/apidocs/org/infinispan/client/hotrod/RemoteCache.html), the `maxIdle` definition in the server will be ignored when using the HotRod client. Workaround is to set the desired maxIdle in each remote cache operation.\r\n- the `RemoteCache#removeWithVersionAsync` operation will result in a timeout in an Infinispan 9.4 server having been configured with `<expiration max-idle=\"2419200000\" />` (there is no timeout without that configuration).\r\n\r\nTherefore we should set a `maxIdle` value on each cache operation, instead of relying on the server configuration to set the expiration.", "url": "https://github.com/eclipse/hono/issues/1998", "user": "calohmn", "labels": ["Device Connection", "bug"], "created": "2020-06-02 12:32:37", "closed": "2020-06-02 17:53:17", "commits": {"66321b3272fd0c30a7471366348962a97feacb5e": {"commitGHEventType": "referenced", "commitUser": "calohmn"}, "c058c7579b0eb185c5a4e5f954a506621078a783": {"commitGHEventType": "referenced", "commitUser": "calohmn"}, "3e43d578df6fb5ce40ba6d0e648885fc822692f7": {"commitGHEventType": "referenced", "commitUser": "calohmn"}, "dbac8af412f07f67abee98d6df470d5c76e91c23": {"commitGHEventType": "referenced", "commitUser": "calohmn"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "66321b3272fd0c30a7471366348962a97feacb5e", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["bd3cfa41a1e701043b2462bc50b464489e55d92d"], "nameRev": "66321b3272fd0c30a7471366348962a97feacb5e tags/1.3.0-M2~9", "commitMessage": "[#1998] Set lifespan for lastKnownGateway cache entries.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-06-02 19:53:16", "authoredDateTime": "2020-06-02 15:31:14", "commitGitStats": [{"filePath": "client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client/CacheBasedDeviceConnectionInfo.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/CacheBasedDeviceConnectionInfoTest.java", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CacheBasedDeviceConnectionInfo.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.CacheBasedDeviceConnectionInfo", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.CacheBasedDeviceConnectionInfo.setLastKnownGatewayForDevice(java.lang.String,java.lang.String,java.lang.String,io.opentracing.SpanContext)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CacheBasedDeviceConnectionInfoTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.CacheBasedDeviceConnectionInfoTest.testSetLastKnownGatewaySucceeds(io.vertx.junit5.VertxTestContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.CacheBasedDeviceConnectionInfoTest.testSetLastKnownGatewayFails(io.vertx.junit5.VertxTestContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "c058c7579b0eb185c5a4e5f954a506621078a783", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["19ae5caca2b267d801fabad280da0a2a1ece5b98"], "nameRev": "c058c7579b0eb185c5a4e5f954a506621078a783 tags/1.2.3~8", "commitMessage": "[#1998] Set lifespan for lastKnownGateway cache entries.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-06-02 20:42:12", "authoredDateTime": "2020-06-02 15:31:14", "commitGitStats": [{"filePath": "client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client/HotrodBasedDeviceConnectionInfo.java", "insertions": 9, "deletions": 1, "lines": 10}, {"filePath": "client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client/HotrodCache.java", "insertions": 44, "deletions": 0, "lines": 44}, {"filePath": "client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client/RemoteCache.java", "insertions": 21, "deletions": 1, "lines": 22}, {"filePath": "client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/HotrodBasedDeviceConnectionInfoTest.java", "insertions": 12, "deletions": 5, "lines": 17}, {"filePath": "client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/HotrodCacheTest.java", "insertions": 22, "deletions": 0, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HotrodBasedDeviceConnectionInfo.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.HotrodBasedDeviceConnectionInfo", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.HotrodBasedDeviceConnectionInfo.setLastKnownGatewayForDevice(java.lang.String,java.lang.String,java.lang.String,io.opentracing.SpanContext)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HotrodCache.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.HotrodCache.put(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.HotrodCache.put(java.lang.Object,java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.HotrodCache.removeWithVersion(java.lang.Object,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.HotrodCache.get(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.HotrodCache.getWithVersion(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.HotrodCache.getAll(java.util.Set)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RemoteCache.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.put(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HotrodBasedDeviceConnectionInfoTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.HotrodBasedDeviceConnectionInfoTest.SimpleTestRemoteCache.put(java.lang.String,java.lang.String,long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.HotrodBasedDeviceConnectionInfoTest.testSetLastKnownGatewaySucceeds(io.vertx.junit5.VertxTestContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.HotrodBasedDeviceConnectionInfoTest.testSetLastKnownGatewayFails(io.vertx.junit5.VertxTestContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HotrodCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.HotrodCacheTest.testPutWithLifespanSucceeds(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "3e43d578df6fb5ce40ba6d0e648885fc822692f7", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["c058c7579b0eb185c5a4e5f954a506621078a783"], "nameRev": "3e43d578df6fb5ce40ba6d0e648885fc822692f7 tags/1.2.3~7", "commitMessage": "[#1998] Add release notes entry.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-06-02 20:57:12", "authoredDateTime": "2020-06-02 20:57:12", "commitGitStats": [{"filePath": "site/homepage/content/release-notes.md", "insertions": 5, "deletions": 2, "lines": 7}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "dbac8af412f07f67abee98d6df470d5c76e91c23", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["66321b3272fd0c30a7471366348962a97feacb5e"], "nameRev": "dbac8af412f07f67abee98d6df470d5c76e91c23 tags/1.3.0-M2~8", "commitMessage": "[#1998] Add release notes entry.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-06-02 21:02:14", "authoredDateTime": "2020-06-02 21:02:14", "commitGitStats": [{"filePath": "site/homepage/content/release-notes.md", "insertions": 5, "deletions": 2, "lines": 7}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["66321b3272fd0c30a7471366348962a97feacb5e", "3e43d578df6fb5ce40ba6d0e648885fc822692f7"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 1, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4.0, "UPD": 0.0, "INS": 4.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client"], "changesInPackagesSPOON": ["org.eclipse.hono.deviceconnection.infinispan.client.CacheBasedDeviceConnectionInfo", "org.eclipse.hono.deviceconnection.infinispan.client.CacheBasedDeviceConnectionInfo.setLastKnownGatewayForDevice(java.lang.String,java.lang.String,java.lang.String,io.opentracing.SpanContext)"]}, {"title": "DeviceConnectionService returns 500 for non-existing last-gateway entry", "body": "When trying to retrieve the last known gateway for a device, the DeviceConnectionService returns a 500 error code if no entry for the device exists. However, according to the API spec it should return a 404 in that case.", "url": "https://github.com/eclipse/hono/issues/1988", "user": "sophokles73", "labels": ["Device Connection", "bug"], "created": "2020-05-28 11:59:05", "closed": "2020-05-28 12:23:54", "commits": {"69be65eb2ad51188c29abf09c38a22990a2214b3": {"commitGHEventType": "closed", "commitUser": "sophokles73"}, "8dfd7806fa6a486bcf563f157138d6b4d3f6498d": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "c02daeb04d4d765045f67f9ca6155a22069861ff": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "69be65eb2ad51188c29abf09c38a22990a2214b3", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["8d40e142fc5ead20a941c25d67d2874fdc3bebe3"], "nameRev": "69be65eb2ad51188c29abf09c38a22990a2214b3 tags/1.3.0-M2~26", "commitMessage": "[#1988] Fix handling of null result from cache\n\nThe CacheBasedDeviceConnectionInfo now correctly returns a 404\nClientErrorException if no entry is found in the cache instead of a 500\nServerErrorException.\n\nFixes #1988\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-05-28 14:22:58", "authoredDateTime": "2020-05-28 14:17:55", "commitGitStats": [{"filePath": "client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client/CacheBasedDeviceConnectionInfo.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/CacheBasedDeviceConnectionInfoTest.java", "insertions": 28, "deletions": 3, "lines": 31}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CacheBasedDeviceConnectionInfo.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.CacheBasedDeviceConnectionInfo.getLastKnownGatewayForDevice(java.lang.String,java.lang.String,io.opentracing.SpanContext)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "CacheBasedDeviceConnectionInfoTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.CacheBasedDeviceConnectionInfoTest.testGetLastKnownGatewayFails(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.CacheBasedDeviceConnectionInfoTest.testGetLastKnownGatewayFailsForNonExistingEntry(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.CacheBasedDeviceConnectionInfoTest.testGetLastKnownGatewayFailsForCacheAccessException(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "8dfd7806fa6a486bcf563f157138d6b4d3f6498d", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["220172543a4c812b3bc528f27202cc67f808bcdd"], "nameRev": "8dfd7806fa6a486bcf563f157138d6b4d3f6498d tags/1.2.3~10", "commitMessage": "[#1988] Fix handling of null result from cache\n\nThe CacheBasedDeviceConnectionInfo now correctly returns a 404\nClientErrorException if no entry is found in the cache instead of a 500\nServerErrorException.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-05-28 17:18:27", "authoredDateTime": "2020-05-28 16:48:11", "commitGitStats": [{"filePath": "client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client/HotrodBasedDeviceConnectionInfo.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/HotrodBasedDeviceConnectionInfoTest.java", "insertions": 36, "deletions": 7, "lines": 43}, {"filePath": "site/homepage/content/release-notes.md", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HotrodBasedDeviceConnectionInfo.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.HotrodBasedDeviceConnectionInfo.getLastKnownGatewayForDevice(java.lang.String,java.lang.String,io.opentracing.SpanContext)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "HotrodBasedDeviceConnectionInfoTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.HotrodBasedDeviceConnectionInfoTest.testGetLastKnownGatewayFails(io.vertx.junit5.VertxTestContext)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.HotrodBasedDeviceConnectionInfoTest.testGetLastKnownGatewayFailsForNonExistingEntry(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.HotrodBasedDeviceConnectionInfoTest.testSetLastKnownGatewayFails(io.vertx.junit5.VertxTestContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.HotrodBasedDeviceConnectionInfoTest.testGetLastKnownGatewaySucceeds(io.vertx.junit5.VertxTestContext)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.HotrodBasedDeviceConnectionInfoTest.testGetLastKnownGatewayFailsForCacheAccessException(io.vertx.junit5.VertxTestContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.HotrodBasedDeviceConnectionInfoTest.setUp()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "c02daeb04d4d765045f67f9ca6155a22069861ff", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["1d03e37c576b68af91253a9b551e2cbe2e22de04"], "nameRev": "c02daeb04d4d765045f67f9ca6155a22069861ff tags/1.3.0-M2~23", "commitMessage": "[#1988] Document fix in release notes\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-05-28 17:25:21", "authoredDateTime": "2020-05-28 17:24:41", "commitGitStats": [{"filePath": "site/homepage/content/release-notes.md", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["69be65eb2ad51188c29abf09c38a22990a2214b3", "c02daeb04d4d765045f67f9ca6155a22069861ff"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 5, "lines": 10, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5.0, "UPD": 0.0, "INS": 1.0, "MOV": 3.0, "DEL": 1.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client"], "changesInPackagesSPOON": ["org.eclipse.hono.deviceconnection.infinispan.client.CacheBasedDeviceConnectionInfo.getLastKnownGatewayForDevice(java.lang.String,java.lang.String,io.opentracing.SpanContext)"]}, {"title": "Hotrod DeviceConnectionClient: UnsupportedOperationException", "body": "Our `org.eclipse.hono.deviceconnection.infinispan.client.BasicCache` class invokes `org.infinispan.commons.api.AsyncCache#removeAsync(key, value)`. For a `RemoteCache` instance, as used by the Hotrod client, this method throws a `UnsupportedOperationException`.\r\n````\r\njava.lang.UnsupportedOperationException: null\r\n\tat org.infinispan.client.hotrod.impl.RemoteCacheSupport.removeAsync(RemoteCacheSupport.java:145)\r\n````\r\nSee also https://infinispan.org/docs/dev/titles/hotrod_java/hotrod_java.html#hotrod_unsupported_methods\r\n", "url": "https://github.com/eclipse/hono/issues/1977", "user": "calohmn", "labels": ["Device Connection", "bug"], "created": "2020-05-25 14:53:41", "closed": "2020-06-02 11:59:41", "commits": {"bd3cfa41a1e701043b2462bc50b464489e55d92d": {"commitGHEventType": "referenced", "commitUser": "calohmn"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "bd3cfa41a1e701043b2462bc50b464489e55d92d", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["358e1e5eede85ac261842bdaa59246bb94da7684"], "nameRev": "bd3cfa41a1e701043b2462bc50b464489e55d92d tags/1.3.0-M2~10", "commitMessage": "[#1977] Implement remove(key,value) for a RemoteCache.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-06-02 13:59:40", "authoredDateTime": "2020-06-02 12:10:51", "commitGitStats": [{"filePath": "client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client/HotrodCache.java", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/AbstractBasicCacheTest.java", "insertions": 16, "deletions": 4, "lines": 20}, {"filePath": "client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/HotrodCacheTest.java", "insertions": 33, "deletions": 0, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HotrodCache.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.HotrodCache.remove(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractBasicCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.AbstractBasicCacheTest.testRemoveWithValueFails(io.vertx.junit5.VertxTestContext)", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.AbstractBasicCacheTest.testRemoveWithValueSucceeds(io.vertx.junit5.VertxTestContext)", "TOT": 14, "UPD": 4, "INS": 1, "MOV": 7, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.AbstractBasicCacheTest.mockRemoveWithValue(org.infinispan.commons.api.BasicCache,java.lang.String,java.lang.Object,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.AbstractBasicCacheTest.verifyRemoveWithValue(org.infinispan.commons.api.BasicCache,java.lang.String,java.lang.Object,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HotrodCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.HotrodCacheTest.mockRemoveWithValue(org.infinispan.commons.api.BasicCache,java.lang.String,java.lang.Object,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceconnection.infinispan.client.HotrodCacheTest.verifyRemoveWithValue(org.infinispan.commons.api.BasicCache,java.lang.String,java.lang.Object,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bd3cfa41a1e701043b2462bc50b464489e55d92d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 22, "deletions": 0, "lines": 22, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client"], "changesInPackagesSPOON": ["org.eclipse.hono.deviceconnection.infinispan.client.HotrodCache.remove(java.lang.Object,java.lang.Object)"]}, {"title": "Remove get operation from RegistrationClient", "body": "The `org.eclipse.hono.client.RegistrationClient` interface still contains a *get* operation for retrieving registration information for a device. However, the Device Registration API does not support this operation (anymore). In order to prevent developers from relying on this (unsupported) operation, we should remove it from the interface.", "url": "https://github.com/eclipse/hono/issues/1971", "user": "sophokles73", "labels": ["Client", "bug"], "created": "2020-05-20 08:06:41", "closed": "2020-06-02 06:45:09", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "AMQP adapter: check credits before sending command to device", "body": "Currently there is no check for available credits when the AMQP adapter is trying to send a command to a device.\r\nThe underlying proton implementation won't send the command message here, but this case misleadingly appears as \"timeout waiting for delivery update from device\" error in the log and in the traces. The downstream application will only get the \"released\" outcome for the command after the \"SendMessageToDeviceTimeout\" has elapsed.", "url": "https://github.com/eclipse/hono/issues/1953", "user": "calohmn", "labels": ["AMQP Adapter", "C&C", "bug"], "created": "2020-05-12 06:24:42", "closed": "2020-05-19 09:19:05", "commits": {"91a210f9e458f183286ee21b734cd3341e2cec59": {"commitGHEventType": "referenced", "commitUser": "calohmn"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "91a210f9e458f183286ee21b734cd3341e2cec59", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["52390b5aeee637ff1fe1e753c7cd3b8082687223"], "nameRev": "91a210f9e458f183286ee21b734cd3341e2cec59 tags/1.3.0-M2~49", "commitMessage": "[#1953] Check credits before sending command to device.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-05-19 11:19:04", "authoredDateTime": "2020-05-12 08:26:00", "commitGitStats": [{"filePath": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java", "insertions": 64, "deletions": 56, "lines": 120}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/amqp/CommandAndControlAmqpIT.java", "insertions": 115, "deletions": 29, "lines": 144}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VertxBasedAmqpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.onCommandReceived(org.eclipse.hono.util.TenantObject,io.vertx.proton.ProtonSender,org.eclipse.hono.client.CommandContext)", "TOT": 20, "UPD": 4, "INS": 5, "MOV": 9, "DEL": 2}]}, {"spoonFilePath": "CommandAndControlAmqpIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.createCommandConsumer(io.vertx.junit5.VertxTestContext,io.vertx.proton.ProtonSender)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.connectAndSubscribe(io.vertx.junit5.VertxTestContext,java.lang.String,org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,java.util.function.Function)", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendCommandSucceeds(io.vertx.junit5.VertxTestContext,java.lang.String,org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,java.util.function.Function,java.util.function.Function,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.subscribeToCommands(org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,java.lang.String,java.lang.String,io.vertx.proton.ProtonMessageHandler)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendOneWayCommandSucceeds(org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,io.vertx.junit5.VertxTestContext)", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendAsyncCommandsSucceeds(org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,io.vertx.junit5.VertxTestContext)", "TOT": 4, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendCommandSucceeds(org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,io.vertx.junit5.VertxTestContext)", "TOT": 4, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendCommandFailsForCommandRejectedByDevice(org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,io.vertx.junit5.VertxTestContext)", "TOT": 10, "UPD": 1, "INS": 4, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendCommandFailsForCommandNotAcknowledgedByDevice(io.vertx.junit5.VertxTestContext)", "TOT": 10, "UPD": 1, "INS": 4, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendCommandFailsForMalformedMessage(org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,io.vertx.junit5.VertxTestContext)", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.connectToAdapter(java.lang.String,org.eclipse.hono.service.management.tenant.Tenant,java.lang.String,java.lang.String,java.util.function.Supplier)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendCommandFailsWhenNoCredit(org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.createCommandConsumer(io.vertx.junit5.VertxTestContext,io.vertx.proton.ProtonReceiver,io.vertx.proton.ProtonSender)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.createRejectingCommandConsumer(io.vertx.junit5.VertxTestContext,io.vertx.proton.ProtonReceiver)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.createNotSendingDeliveryUpdateCommandConsumer(io.vertx.junit5.VertxTestContext,io.vertx.proton.ProtonReceiver,java.util.concurrent.atomic.AtomicInteger)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.connectAndSubscribe(io.vertx.junit5.VertxTestContext,java.lang.String,org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,java.util.function.BiFunction)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["91a210f9e458f183286ee21b734cd3341e2cec59"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 64, "deletions": 56, "lines": 120, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 83, "UPD": 17, "INS": 29, "MOV": 30, "DEL": 7, "spoonFilesChanged": 2, "spoonMethodsChanged": 17}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp"], "changesInPackagesSPOON": ["org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.connectToAdapter(java.lang.String,org.eclipse.hono.service.management.tenant.Tenant,java.lang.String,java.lang.String,java.util.function.Supplier)", "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendCommandFailsWhenNoCredit(org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendCommandFailsForCommandNotAcknowledgedByDevice(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendCommandSucceeds(io.vertx.junit5.VertxTestContext,java.lang.String,org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,java.util.function.Function,java.util.function.Function,int)", "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.createCommandConsumer(io.vertx.junit5.VertxTestContext,io.vertx.proton.ProtonReceiver,io.vertx.proton.ProtonSender)", "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.connectAndSubscribe(io.vertx.junit5.VertxTestContext,java.lang.String,org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,java.util.function.BiFunction)", "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendCommandFailsForMalformedMessage(org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.onCommandReceived(org.eclipse.hono.util.TenantObject,io.vertx.proton.ProtonSender,org.eclipse.hono.client.CommandContext)", "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.createCommandConsumer(io.vertx.junit5.VertxTestContext,io.vertx.proton.ProtonSender)", "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.createRejectingCommandConsumer(io.vertx.junit5.VertxTestContext,io.vertx.proton.ProtonReceiver)", "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.connectAndSubscribe(io.vertx.junit5.VertxTestContext,java.lang.String,org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,java.util.function.Function)", "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendAsyncCommandsSucceeds(org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendCommandFailsForCommandRejectedByDevice(org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.subscribeToCommands(org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,java.lang.String,java.lang.String,io.vertx.proton.ProtonMessageHandler)", "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendCommandSucceeds(org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.createNotSendingDeliveryUpdateCommandConsumer(io.vertx.junit5.VertxTestContext,io.vertx.proton.ProtonReceiver,java.util.concurrent.atomic.AtomicInteger)", "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendOneWayCommandSucceeds(org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,io.vertx.junit5.VertxTestContext)"]}, {"title": "AMQP adapter: gateways with >1 command consumers over same connection not fully supported", "body": "The scenario here involves an authenticated gateway opening multiple command consumer links for specific devices (i.e. multiple links of the form `command/${tenant}/${device-id}`) over the same AMQP connection.\r\nIn that case, closing that connection means that only the last created consumer link gets its associated resources properly closed with the corresponding notification getting sent downstream.\r\n\r\nIn the code this becomes apparent by the fact that there is only one `connectionLossHandler` per connection, handling removal of the resources for _one_ command consumer.", "url": "https://github.com/eclipse/hono/issues/1951", "user": "calohmn", "labels": ["AMQP Adapter", "C&C", "bug"], "created": "2020-05-11 09:30:00", "closed": "2020-05-19 12:54:39", "commits": {"cd8586f73bff6c0a8f54f3c78cfd60cf2260e274": {"commitGHEventType": "referenced", "commitUser": "calohmn"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "cd8586f73bff6c0a8f54f3c78cfd60cf2260e274", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["91a210f9e458f183286ee21b734cd3341e2cec59"], "nameRev": "cd8586f73bff6c0a8f54f3c78cfd60cf2260e274 tags/1.3.0-M2~48", "commitMessage": "[#1951] Close all command consumers on connection close.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-05-19 14:54:38", "authoredDateTime": "2020-05-18 07:04:02", "commitGitStats": [{"filePath": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java", "insertions": 53, "deletions": 34, "lines": 87}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VertxBasedAmqpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.onCommandConnectionClose(java.lang.String,java.lang.String,org.eclipse.hono.auth.Device,org.eclipse.hono.client.ProtocolAdapterCommandConsumer,java.util.OptionalInt)", "TOT": 21, "UPD": 8, "INS": 0, "MOV": 13, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.setConnectionLossHandler(io.vertx.proton.ProtonConnection,io.vertx.core.Handler)", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.getConnectionLossHandler(io.vertx.proton.ProtonConnection)", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.newSpan(java.lang.String,org.eclipse.hono.auth.Device,java.util.OptionalInt,io.opentracing.SpanContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.getAuthenticatedDevice(io.vertx.proton.ProtonConnection)", "TOT": 11, "UPD": 3, "INS": 2, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.handleRemoteSenderOpenForCommands(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSender)", "TOT": 19, "UPD": 2, "INS": 6, "MOV": 9, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.onConnectRequest(io.vertx.proton.ProtonConnection)", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.handleRemoteReceiverOpen(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonReceiver)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.onConnectionLoss(io.vertx.proton.ProtonConnection)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.getTraceSamplingPriority(io.vertx.proton.ProtonConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.openCommandSenderLink(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSender,org.eclipse.hono.util.ResourceIdentifier,org.eclipse.hono.auth.Device,io.opentracing.Span,java.util.OptionalInt)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cd8586f73bff6c0a8f54f3c78cfd60cf2260e274"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 53, "deletions": 34, "lines": 87, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 81, "UPD": 20, "INS": 17, "MOV": 39, "DEL": 5, "spoonFilesChanged": 1, "spoonMethodsChanged": 12}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.handleRemoteReceiverOpen(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonReceiver)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.onCommandConnectionClose(java.lang.String,java.lang.String,org.eclipse.hono.auth.Device,org.eclipse.hono.client.ProtocolAdapterCommandConsumer,java.util.OptionalInt)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.getAuthenticatedDevice(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.newSpan(java.lang.String,org.eclipse.hono.auth.Device,java.util.OptionalInt,io.opentracing.SpanContext)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.onConnectRequest(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.handleRemoteSenderOpenForCommands(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSender)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.getTraceSamplingPriority(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.setConnectionLossHandler(io.vertx.proton.ProtonConnection,io.vertx.core.Handler)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.onConnectionLoss(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.getConnectionLossHandler(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.openCommandSenderLink(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSender,org.eclipse.hono.util.ResourceIdentifier,org.eclipse.hono.auth.Device,io.opentracing.Span,java.util.OptionalInt)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter"]}, {"title": "Remove defining password secrets with user provided password hash, function and salt", "body": "The credentials management API states that defining password secrets with user provided password hash, function and salt is already deprecated and to be removed in the next upcoming versions. The _pwd-plain_ property is to be used going forward. This issue is created for the removal of the deprecated provision.", "url": "https://github.com/eclipse/hono/issues/1929", "user": "kaniyan", "labels": ["Management API", "bug", "documentation"], "created": "2020-04-29 08:12:31", "closed": "2020-04-29 11:23:05", "commits": {"8270545ffc20cd728fcc312c8c755bae0ef7b17a": {"commitGHEventType": "referenced", "commitUser": "dejanb"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8270545ffc20cd728fcc312c8c755bae0ef7b17a", "commitGHEventType": "referenced", "commitUser": "dejanb", "commitParents": ["533f44e25465827336c9a081d8c1f3820bec120d"], "nameRev": "8270545ffc20cd728fcc312c8c755bae0ef7b17a tags/1.3.0-M2~103", "commitMessage": "[#1929] remove hashed password deprecation comment\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>\n", "commitDateTime": "2020-04-29 13:23:04", "authoredDateTime": "2020-04-29 11:48:21", "commitGitStats": [{"filePath": "site/documentation/content/api/management/device-registry-v1.yaml", "insertions": 0, "deletions": 4, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8270545ffc20cd728fcc312c8c755bae0ef7b17a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0, "deletions": 4, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["site/documentation/content/api/management/device-registry-v1.yaml"]}, {"title": "AMQP adapter does not support selection of Connection Event producer", "body": "The AMQP adapter user guide states\r\n\r\n> The AMQP Adapter can send a Connection Event once the connection with a device has been successfully established or ended. Note that this requires the HONO_CONNECTION_EVENTS_PRODUCER configuration property to be explicitly set to events.\r\n\r\nHowever, setting that variable has no effect.\r\nThe Kura adapter is affected as well.", "url": "https://github.com/eclipse/hono/issues/1928", "user": "sophokles73", "labels": ["AMQP Adapter", "Kura Adapter", "bug"], "created": "2020-04-29 06:28:00", "closed": "2020-04-29 07:58:15", "commits": {"1a7383a9e892444c5811e8ed74b946085d8bed24": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "1a7383a9e892444c5811e8ed74b946085d8bed24", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["638a919f8325bc18187757ee9cb6331779f1d1de"], "nameRev": "1a7383a9e892444c5811e8ed74b946085d8bed24 tags/1.3.0-M2~106", "commitMessage": "[#1928] Support Connection Events in all protocol adapters\n\nAlso moved configuration description to Common Adapter Config section.\n\nFixes #1928\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-04-29 09:57:47", "authoredDateTime": "2020-04-29 09:57:23", "commitGitStats": [{"filePath": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/Config.java", "insertions": 0, "deletions": 14, "lines": 14}, {"filePath": "adapters/mqtt-vertx/src/main/java/org/eclipse/hono/adapter/mqtt/impl/Config.java", "insertions": 1, "deletions": 29, "lines": 30}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/AbstractAdapterConfig.java", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/AbstractProtocolAdapterBase.java", "insertions": 8, "deletions": 2, "lines": 10}, {"filePath": "site/documentation/content/admin-guide/common-config.md", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "site/documentation/content/user-guide/amqp-adapter.md", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "site/documentation/content/user-guide/kura-adapter.md", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "site/documentation/content/user-guide/mqtt-adapter.md", "insertions": 6, "deletions": 5, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Config.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.impl.Config.connectionEventProducerLogging()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.impl.Config.connectionEventProducerEvents()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AbstractAdapterConfig.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.AbstractAdapterConfig.connectionEventProducerLogging()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.AbstractAdapterConfig.connectionEventProducerEvents()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractProtocolAdapterBase.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBase.setConnectionEventProducer(org.eclipse.hono.service.monitoring.ConnectionEventProducer)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1a7383a9e892444c5811e8ed74b946085d8bed24"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 36, "deletions": 45, "lines": 81, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 3, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service", "adapters/mqtt-vertx/src/main/java/org/eclipse/hono/adapter/mqtt", "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp"], "changesInPackagesSPOON": ["org.eclipse.hono.service.AbstractAdapterConfig.connectionEventProducerLogging()", "org.eclipse.hono.service.AbstractAdapterConfig.connectionEventProducerEvents()", "org.eclipse.hono.service.AbstractProtocolAdapterBase.setConnectionEventProducer(org.eclipse.hono.service.monitoring.ConnectionEventProducer)", "org.eclipse.hono.adapter.mqtt.impl.Config.connectionEventProducerLogging()", "org.eclipse.hono.adapter.mqtt.impl.Config.connectionEventProducerEvents()"]}, {"title": "coap-adapter - tracing -NullPointerException", "body": "> java.lang.NullPointerException: null\r\n> \tat io.jaegertracing.internal.propagation.BinaryCodec.extract(BinaryCodec.java:179)\r\n> \tat io.jaegertracing.internal.propagation.BinaryCodec.extract(BinaryCodec.java:45)\r\n> \tat io.jaegertracing.internal.PropagationRegistry$ExceptionCatchingExtractorDecorator.extract(PropagationRegistry.java:57)\r\n> \tat io.jaegertracing.internal.JaegerTracer.extract(JaegerTracer.java:217)\r\n> \tat io.jaegertracing.internal.JaegerTracer.extract(JaegerTracer.java:63)\r\n> \tat org.eclipse.hono.adapter.coap.TracingSupportingHonoResource.extractSpanContextFromRequest(TracingSupportingHonoResource.java:82)\r\n> \tat org.eclipse.hono.adapter.coap.TracingSupportingHonoResource.newSpan(TracingSupportingHonoResource.java:88)\r\n> \tat org.eclipse.hono.adapter.coap.TracingSupportingHonoResource.handleRequest(TracingSupportingHonoResource.java:102)\r\n> \tat org.eclipse.hono.adapter.coap.VertxCoapResource.lambda$handleRequest$0(VertxCoapResource.java:80)\r\n> ", "url": "https://github.com/eclipse/hono/issues/1873", "user": "boaks", "labels": ["CoAP Adapter", "Tracing", "bug"], "created": "2020-04-02 14:25:46", "closed": "2020-04-03 12:54:30", "commits": {"72c66e043ba7ff8982110acc410a43153065a855": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "72c66e043ba7ff8982110acc410a43153065a855", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["1db953af12ba6c68adefb0c6ef1eafbfb815e372"], "nameRev": "72c66e043ba7ff8982110acc410a43153065a855 tags/1.3.0-M1~81", "commitMessage": "[#1873] Fix extraction of SpanContext from CoAP options\n\nThe Jaeger Tracer implementation threw a NullPointerException when\ntrying to extract a SpanContext from a CoAP option set that doesn't\ncontain a binary encoded trace context.\n\nThis has been fixed.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-04-03 11:02:37", "authoredDateTime": "2020-04-03 10:50:14", "commitGitStats": [{"filePath": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapOptionInjectExtractAdapter.java", "insertions": 56, "deletions": 13, "lines": 69}, {"filePath": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/TracingSupportingHonoResource.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "adapters/coap-vertx-base/src/test/java/org/eclipse/hono/adapter/coap/CoapOptionInjectExtractAdapterTest.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "adapters/coap-vertx-base/src/test/java/org/eclipse/hono/adapter/coap/TracingSupportingHonoResourceTest.java", "insertions": 32, "deletions": 13, "lines": 45}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CoapOptionInjectExtractAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.coap.CoapOptionInjectExtractAdapter.extractionBuffer()", "TOT": 15, "UPD": 5, "INS": 1, "MOV": 5, "DEL": 4}, {"spoonMethodName": "org.eclipse.hono.adapter.coap.CoapOptionInjectExtractAdapter", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.coap.CoapOptionInjectExtractAdapter.forInjection(org.eclipse.californium.core.coap.OptionSet)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.coap.CoapOptionInjectExtractAdapter.getTraceContextOption(org.eclipse.californium.core.coap.OptionSet)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.coap.CoapOptionInjectExtractAdapter.injectionBuffer(int)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.coap.CoapOptionInjectExtractAdapter.forExtraction(org.eclipse.californium.core.coap.OptionSet)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TracingSupportingHonoResource.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.coap.TracingSupportingHonoResource.extractSpanContextFromRequest(org.eclipse.californium.core.coap.OptionSet)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "CoapOptionInjectExtractAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.coap.CoapOptionInjectExtractAdapterTest.testJaegerTracerCanUseAdapter()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.adapter.coap.CoapOptionInjectExtractAdapterTest.testJaegerTracerInjectsAndExtractsSpanContext()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TracingSupportingHonoResourceTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.coap.TracingSupportingHonoResourceTest.testExtractTraceContext()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.coap.TracingSupportingHonoResourceTest.testExtractFromEmptyOptionSet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["72c66e043ba7ff8982110acc410a43153065a855"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 59, "deletions": 14, "lines": 73, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 35, "UPD": 6, "INS": 10, "MOV": 12, "DEL": 7, "spoonFilesChanged": 2, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.coap.CoapOptionInjectExtractAdapter.forExtraction(org.eclipse.californium.core.coap.OptionSet)", "org.eclipse.hono.adapter.coap.CoapOptionInjectExtractAdapter.getTraceContextOption(org.eclipse.californium.core.coap.OptionSet)", "org.eclipse.hono.adapter.coap.CoapOptionInjectExtractAdapter.extractionBuffer()", "org.eclipse.hono.adapter.coap.CoapOptionInjectExtractAdapter.forInjection(org.eclipse.californium.core.coap.OptionSet)", "org.eclipse.hono.adapter.coap.TracingSupportingHonoResource.extractSpanContextFromRequest(org.eclipse.californium.core.coap.OptionSet)", "org.eclipse.hono.adapter.coap.CoapOptionInjectExtractAdapter", "org.eclipse.hono.adapter.coap.CoapOptionInjectExtractAdapter.injectionBuffer(int)"]}, {"title": "JaegerTracer.extract: UnsupportedFormatException: Builtin.BINARY_EXTRACT", "body": "> 19:32:30.879 [CoapServer(main)#1] DEBUG o.e.h.adapter.coap.VertxCoapResource - running handler for resource [/telemetry] on vert.x context\r\n> 19:32:30.882 [vert.x-eventloop-thread-0] ERROR io.vertx.core.impl.ContextImpl - Unhandled exception\r\n> io.jaegertracing.internal.exceptions.UnsupportedFormatException: Builtin.BINARY_EXTRACT\r\n> \tat io.jaegertracing.internal.JaegerTracer.extract(JaegerTracer.java:215)\r\n> \tat io.jaegertracing.internal.JaegerTracer.extract(JaegerTracer.java:63)\r\n> \tat org.eclipse.hono.adapter.coap.TracingSupportingHonoResource.extractSpanContextFromRequest(TracingSupportingHonoResource.java:81)\r\n> \tat org.eclipse.hono.adapter.coap.TracingSupportingHonoResource.newSpan(TracingSupportingHonoResource.java:87)\r\n> \tat org.eclipse.hono.adapter.coap.TracingSupportingHonoResource.handleRequest(TracingSupportingHonoResource.java:101)\r\n> \tat org.eclipse.hono.adapter.coap.VertxCoapResource.lambda$handleRequest$0(VertxCoapResource.java:80)\r\n> \r\n\r\nI tried to test the current coap-adapter with:\r\n\r\n```\r\nPOST coaps://localhost:30684/telemetry\r\n```\r\n\r\nWireshark show a succesful handshake, but then I get \"No response received.\"\r\nThe coap-adapter logs contains the above exception.", "url": "https://github.com/eclipse/hono/issues/1869", "user": "boaks", "labels": ["CoAP Adapter", "Tracing", "bug"], "created": "2020-04-01 19:44:16", "closed": "2020-04-02 08:20:24", "commits": {"85708cc1714f19bfb8a34862f7fd38cbaa6c5f5b": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "91ffbc0eb9440d68526e3de83138aa2c41e2f12b": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "85708cc1714f19bfb8a34862f7fd38cbaa6c5f5b", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "91ffbc0eb9440d68526e3de83138aa2c41e2f12b", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["9238ac4507dddca2c0323742a1800ce24d4dd0a0"], "nameRev": "91ffbc0eb9440d68526e3de83138aa2c41e2f12b tags/1.3.0-M1~85", "commitMessage": "[#1869] Fix extraction of trace context from CoAP request\n\nThe TracingSupportingHonoResource used a carrier format that is defined\nby OpenTracing, but not supported by Jaeger. It now uses the standard\nBINARY format.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-04-02 09:35:58", "authoredDateTime": "2020-04-02 08:15:45", "commitGitStats": [{"filePath": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapOptionInjectExtractAdapter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/TracingSupportingHonoResource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "adapters/coap-vertx-base/src/test/java/org/eclipse/hono/adapter/coap/TracingSupportingHonoResourceTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CoapOptionInjectExtractAdapter.java", "spoonMethods": []}, {"spoonFilePath": "TracingSupportingHonoResource.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.coap.TracingSupportingHonoResource.extractSpanContextFromRequest(org.eclipse.californium.core.coap.OptionSet)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TracingSupportingHonoResourceTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.coap.TracingSupportingHonoResourceTest.testExtractTraceContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["91ffbc0eb9440d68526e3de83138aa2c41e2f12b"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2.0, "deletions": 2.0, "lines": 4.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 1.0, "UPD": 1.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.coap.TracingSupportingHonoResource.extractSpanContextFromRequest(org.eclipse.californium.core.coap.OptionSet)"]}, {"title": "Command & Control errors if adapter configured with maxInstances > 1", "body": "If a protocol adapter is configured with a `hono.app.maxInstances` value greater 1, there are errors receiving Command & Control messages.\r\n\r\nCan be reproduced with the integration tests, adapting the configuration accordingly.", "url": "https://github.com/eclipse/hono/issues/1860", "user": "calohmn", "labels": ["C&C", "bug"], "created": "2020-03-27 09:21:00", "closed": "2020-04-08 12:03:16", "commits": {"70f8033b9d557725bbdc8fef41e764640f93dfe6": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "0f5fa07dd4ff9c4ed742304746bbc89358bbb6f9": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "c2546c62506166f39d6c3aa8b1e195427aefe193": {"commitGHEventType": "referenced", "commitUser": "calohmn"}, "2f3d404c04a0a882942c125883247465b787cdc7": {"commitGHEventType": "referenced", "commitUser": "calohmn"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "70f8033b9d557725bbdc8fef41e764640f93dfe6", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["995d43a0ff2af46f5feadb688ec75b600b609862"], "nameRev": "70f8033b9d557725bbdc8fef41e764640f93dfe6 tags/1.2.2~7", "commitMessage": "[#1860] Use unique adapter instance id per consumer factory.\n\nThis fixes Command & Control errors if the protocol adapter\nis configured with hono.app.maxInstances > 1.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-04-07 13:11:58", "authoredDateTime": "2020-04-02 12:42:42", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/AbstractAdapterConfig.java", "insertions": 10, "deletions": 1, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractAdapterConfig.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.AbstractAdapterConfig.commandConsumerFactory()", "TOT": 10, "UPD": 2, "INS": 4, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.AbstractAdapterConfig.getAdapterInstanceId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "0f5fa07dd4ff9c4ed742304746bbc89358bbb6f9", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["faf8286e68b20563c712683df0cbd4b2c75cec50"], "nameRev": "0f5fa07dd4ff9c4ed742304746bbc89358bbb6f9 tags/1.3.0-M1~67", "commitMessage": "[#1860] Update release notes\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-04-07 13:29:52", "authoredDateTime": "2020-04-07 13:29:52", "commitGitStats": [{"filePath": "site/homepage/content/release-notes.md", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c2546c62506166f39d6c3aa8b1e195427aefe193", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["f1ba3215d5e8c82a83e11f426dbcfd1881bcf4cc"], "nameRev": "c2546c62506166f39d6c3aa8b1e195427aefe193 tags/1.3.0-M1~62", "commitMessage": "[#1860] Update release notes.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-04-08 10:46:50", "authoredDateTime": "2020-04-08 10:46:50", "commitGitStats": [{"filePath": "site/homepage/content/release-notes.md", "insertions": 2, "deletions": 3, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "2f3d404c04a0a882942c125883247465b787cdc7", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["c2546c62506166f39d6c3aa8b1e195427aefe193"], "nameRev": "2f3d404c04a0a882942c125883247465b787cdc7 tags/1.3.0-M1~61", "commitMessage": "[#1860] Use unique adapter instance id per consumer factory.\n\nThis fixes Command & Control errors if the protocol adapter\nis configured with hono.app.maxInstances > 1.\nFurthermore, a single HonoConnection now uses the same\ncontainer id in the AMQP open frame every time the connection\nis reestablished.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-04-08 12:59:50", "authoredDateTime": "2020-04-02 22:12:02", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/HonoConnection.java", "insertions": 10, "deletions": 5, "lines": 15}, {"filePath": "client/src/main/java/org/eclipse/hono/client/ProtocolAdapterCommandConsumerFactory.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractHonoClient.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AdapterInstanceCommandHandler.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoConnectionImpl.java", "insertions": 13, "deletions": 1, "lines": 14}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java", "insertions": 8, "deletions": 3, "lines": 11}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/DisconnectHandlerProvidingConnectionFactory.java", "insertions": 12, "deletions": 5, "lines": 17}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/HonoConnectionImplTest.java", "insertions": 7, "deletions": 4, "lines": 11}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImplTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "core/src/main/java/org/eclipse/hono/config/ClientConfigProperties.java", "insertions": 0, "deletions": 16, "lines": 16}, {"filePath": "core/src/main/java/org/eclipse/hono/connection/ConnectionFactory.java", "insertions": 48, "deletions": 9, "lines": 57}, {"filePath": "core/src/main/java/org/eclipse/hono/connection/impl/ConnectionFactoryImpl.java", "insertions": 22, "deletions": 8, "lines": 30}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/AbstractAdapterConfig.java", "insertions": 1, "deletions": 15, "lines": 16}, {"filePath": "site/homepage/content/release-notes.md", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoConnection.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.getRemoteContainer()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.getContainerId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.getRemoteContainerId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProtocolAdapterCommandConsumerFactory.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.create(org.eclipse.hono.client.HonoConnection,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "AbstractHonoClient.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractHonoClient.newSpan(io.opentracing.SpanContext,java.lang.String,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AdapterInstanceCommandHandler.java", "spoonMethods": []}, {"spoonFilePath": "HonoConnectionImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.getRemoteContainer()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.getContainerId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.connect(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProtocolAdapterCommandConsumerFactoryImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.ProtocolAdapterCommandConsumerFactoryImpl", "TOT": 7, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 3}]}, {"spoonFilePath": "DisconnectHandlerProvidingConnectionFactory.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.DisconnectHandlerProvidingConnectionFactory.getName()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.DisconnectHandlerProvidingConnectionFactory.connect(io.vertx.proton.ProtonClientOptions,java.lang.String,java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.DisconnectHandlerProvidingConnectionFactory.connect(io.vertx.proton.ProtonClientOptions,java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "HonoConnectionImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImplTest.testClientDoesNotTriggerReconnectionAfterShutdown(io.vertx.junit5.VertxTestContext)", "TOT": 6, "UPD": 1, "INS": 3, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImplTest.testIsConnectedWithTimeoutSucceedsAfterConcurrentReconnectSucceeded(io.vertx.junit5.VertxTestContext).1.connect(io.vertx.proton.ProtonClientOptions,java.lang.String,java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImplTest.testIsConnectedWithTimeoutFailsAfterConcurrentReconnectFailed(io.vertx.junit5.VertxTestContext).2.connect(io.vertx.proton.ProtonClientOptions,java.lang.String,java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProtocolAdapterCommandConsumerFactoryImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.ProtocolAdapterCommandConsumerFactoryImplTest.setUp()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ClientConfigProperties.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.config.ClientConfigProperties", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.config.ClientConfigProperties.getContainerId()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ConnectionFactory.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.connection.getName()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.connect(io.vertx.proton.ProtonClientOptions,java.lang.String,java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionFactoryImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.connection.impl.ConnectionFactoryImpl.getName()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.impl.ConnectionFactoryImpl.handleConnectionAttemptResult(io.vertx.core.AsyncResult,java.lang.Long,java.util.concurrent.atomic.AtomicBoolean,io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.impl.ConnectionFactoryImpl.connect(io.vertx.proton.ProtonClientOptions,java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.impl.ConnectionFactoryImpl.connect(io.vertx.proton.ProtonClientOptions,java.lang.String,java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.impl.ConnectionFactoryImpl.handleConnectionAttemptResult(io.vertx.core.AsyncResult,java.lang.String,java.lang.Long,java.util.concurrent.atomic.AtomicBoolean,io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.impl.ConnectionFactoryImpl.getContainerIdDefault()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractAdapterConfig.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.AbstractAdapterConfig.commandConsumerFactory()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.AbstractAdapterConfig.getAdapterInstanceId()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["70f8033b9d557725bbdc8fef41e764640f93dfe6", "0f5fa07dd4ff9c4ed742304746bbc89358bbb6f9", "c2546c62506166f39d6c3aa8b1e195427aefe193"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 1, "lines": 11, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 11.0, "UPD": 2.0, "INS": 5.0, "MOV": 3.0, "DEL": 1.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service"], "changesInPackagesSPOON": ["org.eclipse.hono.service.AbstractAdapterConfig.getAdapterInstanceId()", "org.eclipse.hono.service.AbstractAdapterConfig.commandConsumerFactory()"]}, {"title": "AMQP metrics report negative number of authenticated connections ", "body": "Periodically(I would say rather sporadically !) AMQP adapter report a negative metric number for authenticated connections. Unfortunately, for a while I tried to find the cause and reproduce this but without success. But anyway, when I took a look at  [MicrometerBasedMetrics.java](https://github.com/eclipse/hono/blob/master/service-base/src/main/java/org/eclipse/hono/service/metric/MicrometerBasedMetrics.java), I would like to propose to have more _safe_ incremental and detrimental operations for connections counters, something like this: \r\n\r\n```\r\nprivate void tryToDecrement(AtomicLong longValue) {\r\n   longValue.getAndUpdate(oldValue -> oldValue > 0 ? oldValue - 1 : 0);\r\n}\r\n```\r\n\r\n```\r\nprivate void tryToIncrement(AtomicLong longValue)\r\n {\r\n  longValue.getAndUpdate(oldValue -> {\r\n   if (oldValue == Long.MAX_VALUE) {\r\n    throw new IllegalStateException(\"Long value overflow!\");\r\n   }\r\n   return oldValue + 1L;\r\n  });\r\n }\r\n}\r\n```", "url": "https://github.com/eclipse/hono/issues/1856", "user": "bordeuax", "labels": ["Metrics", "bug"], "created": "2020-03-25 10:40:11", "closed": "2020-06-25 06:09:45", "commits": {"4e6247181645747323c9f4108d9e7a5bd495412c": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 91.00027777777778, "commitsDetails": [{"commitHash": "4e6247181645747323c9f4108d9e7a5bd495412c", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["c2676800daaca47777a813f0bc383b0c6ea26c07"], "nameRev": "4e6247181645747323c9f4108d9e7a5bd495412c tags/1.3.0-M3~4", "commitMessage": "[#1856] Fix negative authenticated AMQP connection count\n\nConnection count was erroneously not incremented when a connection was rejected due to the connection limit of an adapter, but was decremented in that case as well which lead to negative connection counts.\r\n\r\nFixes #1856 \r\n\r\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "commitDateTime": "2020-06-25 08:09:44", "authoredDateTime": "2020-06-25 08:09:44", "commitGitStats": [{"filePath": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java", "insertions": 7, "deletions": 5, "lines": 12}, {"filePath": "adapters/amqp-vertx/src/test/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapterTest.java", "insertions": 11, "deletions": 1, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VertxBasedAmqpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.onConnectRequest(io.vertx.proton.ProtonConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.processRemoteOpen(io.vertx.proton.ProtonConnection)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "VertxBasedAmqpProtocolAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapterTest.testConnectionFailsIfAdapterLevelConnectionLimitIsExceeded()", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4e6247181645747323c9f4108d9e7a5bd495412c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 5, "lines": 12, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.onConnectRequest(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.processRemoteOpen(io.vertx.proton.ProtonConnection)"]}, {"title": "AMQP adapter does not report metrics", "body": "starting with Hono 1.2.0 the AMQP protocol adapter does not report any metrics anymore.", "url": "https://github.com/eclipse/hono/issues/1855", "user": "sophokles73", "labels": ["AMQP Adapter", "bug"], "created": "2020-03-25 09:38:31", "closed": "2020-03-25 10:05:28", "commits": {"a72ec279aa31c5a0a10a5440bbe6dd895b26a0ff": {"commitGHEventType": "closed", "commitUser": "sophokles73"}, "5f57d712875f3ab88673f1af299f3459667dade4": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "222128ce8ccc4a3ad8c47a7e6d7a5c1ab793d639": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a72ec279aa31c5a0a10a5440bbe6dd895b26a0ff", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["f92414e4e06d17b31b8cfbadbdce26d93e78ba02"], "nameRev": "a72ec279aa31c5a0a10a5440bbe6dd895b26a0ff tags/1.3.0-M1~102", "commitMessage": "[#1855] Include metrics package in component scan\n\nFixes #1855\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-03-25 10:42:59", "authoredDateTime": "2020-03-25 10:42:59", "commitGitStats": [{"filePath": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/Application.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Application.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.Application", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "5f57d712875f3ab88673f1af299f3459667dade4", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "222128ce8ccc4a3ad8c47a7e6d7a5c1ab793d639", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["846ddfde524750ce296bfb8ed223fb5cfc42cf7b"], "nameRev": "222128ce8ccc4a3ad8c47a7e6d7a5c1ab793d639 tags/1.2.1~3", "commitMessage": "[#1855] Include metrics package in component scan\n\nFixes #1855\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-03-25 14:45:38", "authoredDateTime": "2020-03-25 10:42:59", "commitGitStats": [{"filePath": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/Application.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Application.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.Application", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a72ec279aa31c5a0a10a5440bbe6dd895b26a0ff"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1.0, "deletions": 1.0, "lines": 2.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1.0, "UPD": 1.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.amqp.impl.Application"]}, {"title": "Prometheus resource limit check ignoring minimal message size", "body": "At the moment minimal message size is considering only when we query Prometheus but also this should be taken in account when we cheeking if the message exceeded allowedMaxBytes. \r\nLike reference in the code  please see [PrometheusBasedResourceLimitChecks.java#L457](https://github.com/eclipse/hono/blob/master/service-base/src/main/java/org/eclipse/hono/service/resourcelimits/PrometheusBasedResourceLimitChecks.java#L457) ", "url": "https://github.com/eclipse/hono/issues/1823", "user": "bordeuax", "labels": ["Metrics", "bug"], "created": "2020-03-10 09:38:52", "closed": "2020-03-11 09:19:55", "commits": {"46e554ca905b06bf1034f8249e80fc03287e44fb": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "1225209242d6e11447d160e517fc71384613997c": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "46e554ca905b06bf1034f8249e80fc03287e44fb", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["14ad3b6f4e9d76ed110fc61735ed2d3318f076bc"], "nameRev": "46e554ca905b06bf1034f8249e80fc03287e44fb tags/1.2.0~46", "commitMessage": "[#1823] Calculate payload size of the incoming message based on the configured minimum message size for the message limit verification.\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>\n", "commitDateTime": "2020-03-11 10:18:36", "authoredDateTime": "2020-03-10 13:13:35", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/AbstractProtocolAdapterBase.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/metric/MicrometerBasedMetrics.java", "insertions": 4, "deletions": 36, "lines": 40}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/util/ServiceBaseUtils.java", "insertions": 58, "deletions": 0, "lines": 58}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/AbstractProtocolAdapterBaseTest.java", "insertions": 39, "deletions": 1, "lines": 40}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractProtocolAdapterBase.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBase.checkMessageLimit(org.eclipse.hono.util.TenantObject,long,io.opentracing.SpanContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MicrometerBasedMetrics.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.metric.MicrometerBasedMetrics.reportTelemetry(org.eclipse.hono.service.metric.MetricsTags$EndpointType,java.lang.String,org.eclipse.hono.util.TenantObject,org.eclipse.hono.service.metric.MetricsTags$ProcessingOutcome,org.eclipse.hono.service.metric.MetricsTags$QoS,int,org.eclipse.hono.service.metric.MetricsTags$TtdStatus,io.micrometer.core.instrument.Timer.Sample)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.metric.MicrometerBasedMetrics.reportCommand(org.eclipse.hono.service.metric.MetricsTags.Direction,java.lang.String,org.eclipse.hono.util.TenantObject,org.eclipse.hono.service.metric.MetricsTags.ProcessingOutcome,int,io.micrometer.core.instrument.Timer.Sample)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.metric.MicrometerBasedMetrics.calculatePayloadSize(int,org.eclipse.hono.util.TenantObject)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ServiceBaseUtils.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.util.ServiceBaseUtils", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractProtocolAdapterBaseTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBaseTest.testCheckMessageLimitFailsIfMessageLimitIsReached(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "1225209242d6e11447d160e517fc71384613997c", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["436acde7dd4ee8469792635c928bb368c99a638d"], "nameRev": "1225209242d6e11447d160e517fc71384613997c tags/1.2.0~44", "commitMessage": "[#1823] Update release notes.\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>\n", "commitDateTime": "2020-03-11 14:51:59", "authoredDateTime": "2020-03-11 12:06:10", "commitGitStats": [{"filePath": "site/homepage/content/release-notes.md", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["46e554ca905b06bf1034f8249e80fc03287e44fb", "1225209242d6e11447d160e517fc71384613997c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 67, "deletions": 37, "lines": 104, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 6.0, "UPD": 2.0, "INS": 2.0, "MOV": 1.0, "DEL": 1.0, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service/metric", "service-base/src/main/java/org/eclipse/hono/service/util", "service-base/src/main/java/org/eclipse/hono/service"], "changesInPackagesSPOON": ["org.eclipse.hono.service.AbstractProtocolAdapterBase.checkMessageLimit(org.eclipse.hono.util.TenantObject,long,io.opentracing.SpanContext)", "org.eclipse.hono.service.metric.MicrometerBasedMetrics.reportTelemetry(org.eclipse.hono.service.metric.MetricsTags$EndpointType,java.lang.String,org.eclipse.hono.util.TenantObject,org.eclipse.hono.service.metric.MetricsTags$ProcessingOutcome,org.eclipse.hono.service.metric.MetricsTags$QoS,int,org.eclipse.hono.service.metric.MetricsTags$TtdStatus,io.micrometer.core.instrument.Timer.Sample)", "org.eclipse.hono.service.util.ServiceBaseUtils", "org.eclipse.hono.service.metric.MicrometerBasedMetrics.reportCommand(org.eclipse.hono.service.metric.MetricsTags.Direction,java.lang.String,org.eclipse.hono.util.TenantObject,org.eclipse.hono.service.metric.MetricsTags.ProcessingOutcome,int,io.micrometer.core.instrument.Timer.Sample)", "org.eclipse.hono.service.metric.MicrometerBasedMetrics.calculatePayloadSize(int,org.eclipse.hono.util.TenantObject)"]}, {"title": "AMQP adapter: command response from gateway has wrong device id property", "body": "When a northbound application sends a command to a device that is connected via a gateway, the device gets the command with a `reply-to` address that contains the gateway id instead of the device id.\r\nWhen processing a command response message with that address, the AMQP adapter will then set the `device_id` property to the gateway id, not the device id.\r\nThis leads to the northbound application getting a command response message with the wrong `device_id` property value in such a scenario.", "url": "https://github.com/eclipse/hono/issues/1785", "user": "calohmn", "labels": ["AMQP Adapter", "C&C", "bug"], "created": "2020-02-24 07:31:09", "closed": "2020-02-24 12:40:39", "commits": {"9e40d0cb5a7d005d5a0c35fa0c172347e2f1b79f": {"commitGHEventType": "referenced", "commitUser": "calohmn"}, "efda8af18eabccd99c5b120818f60d57794035d1": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "9e40d0cb5a7d005d5a0c35fa0c172347e2f1b79f", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["aa8f3113676b61acfa6b0574a70f6d0a45838073"], "nameRev": "9e40d0cb5a7d005d5a0c35fa0c172347e2f1b79f tags/1.2.0~98", "commitMessage": "[#1785] Fix gateway id getting set in reply-to address.\n\nThe target device id instead of the gateway id has to be\nset in the reply-to address. Otherwise command response\nmessages will get the wrong device_id property value.\nAMQP integration tests now check for the correct property\nvalue.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-02-24 13:40:38", "authoredDateTime": "2020-02-24 08:38:39", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/Command.java", "insertions": 12, "deletions": 5, "lines": 17}, {"filePath": "client/src/test/java/org/eclipse/hono/client/CommandTest.java", "insertions": 35, "deletions": 0, "lines": 35}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/amqp/CommandAndControlAmqpIT.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Command.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.Command.from(org.apache.qpid.proton.message.Message,java.lang.String,java.lang.String)", "TOT": 4, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.Command", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "CommandTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.CommandTest.testFromMessageSucceedsWithDifferingDeviceId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.CommandTest.testFromMessageSucceeds()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandAndControlAmqpIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendCommandSucceeds(org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,io.vertx.junit5.VertxTestContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "efda8af18eabccd99c5b120818f60d57794035d1", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["122f88b6d33fa29567a561e419a5ce5bde12ae40"], "nameRev": "efda8af18eabccd99c5b120818f60d57794035d1 tags/1.1.1~4", "commitMessage": "[#1785] Fix gateway id getting set in reply-to address.\n\nThe target device id instead of the gateway id has to be\nset in the reply-to address. Otherwise command response\nmessages will get the wrong device_id property value.\nAMQP integration tests now check for the correct property\nvalue.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-02-28 15:03:21", "authoredDateTime": "2020-02-24 08:38:39", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/Command.java", "insertions": 12, "deletions": 5, "lines": 17}, {"filePath": "client/src/test/java/org/eclipse/hono/client/CommandTest.java", "insertions": 35, "deletions": 0, "lines": 35}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/amqp/CommandAndControlAmqpIT.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Command.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.Command.from(org.apache.qpid.proton.message.Message,java.lang.String,java.lang.String)", "TOT": 4, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.Command", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "CommandTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.CommandTest.testFromMessageSucceedsWithDifferingDeviceId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.CommandTest.testFromMessageSucceeds()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandAndControlAmqpIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendCommandSucceeds(org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,io.vertx.junit5.VertxTestContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9e40d0cb5a7d005d5a0c35fa0c172347e2f1b79f"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 5, "lines": 17, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 2, "INS": 5, "MOV": 0, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client"], "changesInPackagesSPOON": ["org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendCommandSucceeds(org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.client.Command.from(org.apache.qpid.proton.message.Message,java.lang.String,java.lang.String)", "org.eclipse.hono.client.Command"]}, {"title": "MQTT: Gateway sending command response causes exception", "body": "When an authenticated gateway sends a command response via MQTT to the topic `command//${device-id}/res/${req-id}/${status}` (as described in the MQTT Adapter documentation), there is an internal exception and the MQTT connection gets disconnected.\r\n\r\nLog excerpt:\r\n````\r\n16:01:16.032 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.m.i.VertxBasedMqttProtocolAdapter - Published command to device [tenant-id: df6a2ec2-4cd6-4003-9707-384d53ebcf50, device-id: e6ffddcc-96de-41a3-be0d-e9da51ff3a7a, MQTT client-id: a0faa2d2-f46e-450a-ae1c-4c6e4064803c, QoS: AT_MOST_ONCE]\r\n16:01:16.043 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.m.i.VertxBasedMqttProtocolAdapter - discarding message [topic: command//1605be98-4327-4d68-9f3d-293becf9cdad/res/001080901f89-4144-4c25-8598-3e3cfdd3b80d/200] from device: device [device-id: e6ffddcc-96de-41a3-be0d-e9da51ff3a7a, tenant-id: df6a2ec2-4cd6-4003-9707-384d53ebcf50]\r\njava.lang.NullPointerException: null\r\n\tat java.base/java.util.Objects.requireNonNull(Unknown Source)\r\n\tat org.eclipse.hono.util.MessageHelper.addProperty(MessageHelper.java:575)\r\n\tat org.eclipse.hono.client.CommandResponse.<init>(CommandResponse.java:48)\r\n\tat org.eclipse.hono.client.CommandResponse.from(CommandResponse.java:100)\r\n\tat org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.uploadCommandResponseMessage(AbstractVertxBasedMqttProtocolAdapter.java:1056)\r\n\tat org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.uploadMessage(AbstractVertxBasedMqttProtocolAdapter.java:893)\r\n\tat org.eclipse.hono.adapter.mqtt.impl.VertxBasedMqttProtocolAdapter.lambda$onPublishedMessage$1(VertxBasedMqttProtocolAdapter.java:53)\r\n````\r\n(NPE because tenant id is `null`.)\r\n\r\nWhen using a topic _without_ the device id (i.e. `command///res/${req-id}/${status}`), sending the command response succeeds.", "url": "https://github.com/eclipse/hono/issues/1781", "user": "calohmn", "labels": ["C&C", "MQTT Adapter", "bug"], "created": "2020-02-21 16:31:28", "closed": "2020-02-24 12:40:23", "commits": {"aa8f3113676b61acfa6b0574a70f6d0a45838073": {"commitGHEventType": "referenced", "commitUser": "calohmn"}, "122f88b6d33fa29567a561e419a5ce5bde12ae40": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "aa8f3113676b61acfa6b0574a70f6d0a45838073", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["3d198a4610e8a56e90f20aca08121c54bc214b12"], "nameRev": "aa8f3113676b61acfa6b0574a70f6d0a45838073 tags/1.2.0~99", "commitMessage": "[#1781] Fix use of command response topic with device but no tenant.\n\nSuch a topic is to be used by authenticated gateways.\nAlso fixes integration tests - that topic wasn't used there.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-02-24 13:40:22", "authoredDateTime": "2020-02-24 08:18:42", "commitGitStats": [{"filePath": "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "client/src/main/java/org/eclipse/hono/client/CommandResponse.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/AbstractProtocolAdapterBase.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/AbstractProtocolAdapterBaseTest.java", "insertions": 22, "deletions": 2, "lines": 24}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/mqtt/CommandAndControlMqttIT.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/mqtt/MqttCommandEndpointConfiguration.java", "insertions": 4, "deletions": 3, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractVertxBasedMqttProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.handlePublishedMessage(org.eclipse.hono.adapter.mqtt.MqttContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CommandResponse.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.CommandResponse.from(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.buffer.Buffer,java.lang.String,java.lang.Integer)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractProtocolAdapterBase.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBase.validateAddress(org.eclipse.hono.util.ResourceIdentifier,org.eclipse.hono.auth.Device)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "AbstractProtocolAdapterBaseTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBaseTest.testValidateAddressUsesDeviceIdentityForAddressWithoutTenant(io.vertx.junit5.VertxTestContext)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandAndControlMqttIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.mqtt.CommandAndControlMqttIT.testSendCommandSucceeds(io.vertx.junit5.VertxTestContext,org.eclipse.hono.tests.mqtt.MqttCommandEndpointConfiguration,io.netty.handler.codec.mqtt.MqttQoS)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MqttCommandEndpointConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.mqtt.MqttCommandEndpointConfiguration.getResponseTopic(java.lang.String,java.lang.String,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "122f88b6d33fa29567a561e419a5ce5bde12ae40", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["8fb626303a6e9fc57458d808cce8984be79ac7ab"], "nameRev": "122f88b6d33fa29567a561e419a5ce5bde12ae40 tags/1.1.1~5", "commitMessage": "[#1781] Fix use of command response topic with device but no tenant.\n\nSuch a topic is to be used by authenticated gateways.\nAlso fixes integration tests - that topic wasn't used there.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-02-28 15:03:08", "authoredDateTime": "2020-02-24 08:18:42", "commitGitStats": [{"filePath": "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "client/src/main/java/org/eclipse/hono/client/CommandResponse.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/AbstractProtocolAdapterBase.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/AbstractProtocolAdapterBaseTest.java", "insertions": 22, "deletions": 2, "lines": 24}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/mqtt/CommandAndControlMqttIT.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/mqtt/MqttCommandEndpointConfiguration.java", "insertions": 4, "deletions": 3, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractVertxBasedMqttProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.handlePublishedMessage(org.eclipse.hono.adapter.mqtt.MqttContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CommandResponse.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.CommandResponse.from(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.buffer.Buffer,java.lang.String,java.lang.Integer)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractProtocolAdapterBase.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBase.validateAddress(org.eclipse.hono.util.ResourceIdentifier,org.eclipse.hono.auth.Device)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "AbstractProtocolAdapterBaseTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBaseTest.testValidateAddressUsesDeviceIdentityForAddressWithoutTenant(io.vertx.junit5.VertxTestContext)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandAndControlMqttIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.mqtt.CommandAndControlMqttIT.testSendCommandSucceeds(io.vertx.junit5.VertxTestContext,org.eclipse.hono.tests.mqtt.MqttCommandEndpointConfiguration,io.netty.handler.codec.mqtt.MqttQoS)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MqttCommandEndpointConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.mqtt.MqttCommandEndpointConfiguration.getResponseTopic(java.lang.String,java.lang.String,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["aa8f3113676b61acfa6b0574a70f6d0a45838073"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 1, "lines": 11, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 12, "UPD": 0, "INS": 7, "MOV": 4, "DEL": 1, "spoonFilesChanged": 5, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client", "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt", "service-base/src/main/java/org/eclipse/hono/service"], "changesInPackagesSPOON": ["org.eclipse.hono.tests.mqtt.MqttCommandEndpointConfiguration.getResponseTopic(java.lang.String,java.lang.String,int)", "org.eclipse.hono.client.CommandResponse.from(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.buffer.Buffer,java.lang.String,java.lang.Integer)", "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.handlePublishedMessage(org.eclipse.hono.adapter.mqtt.MqttContext)", "org.eclipse.hono.tests.mqtt.CommandAndControlMqttIT.testSendCommandSucceeds(io.vertx.junit5.VertxTestContext,org.eclipse.hono.tests.mqtt.MqttCommandEndpointConfiguration,io.netty.handler.codec.mqtt.MqttQoS)", "org.eclipse.hono.service.AbstractProtocolAdapterBase.validateAddress(org.eclipse.hono.util.ResourceIdentifier,org.eclipse.hono.auth.Device)"]}, {"title": "honoServicePrincipal in azure", "body": "Dear All, I am following instructions [here ](https://www.eclipse.org/hono/docs/deployment/create-kubernetes-cluster/#setup)to setup service principal for my hono instance in azure. After running the command \r\n`object_id_principal=`az ad sp show --id $app_id_principal --query objectId --output tsv``\r\n\r\nI get this error\r\n```\r\naz: error: unrecognized arguments: honoServicePrincipal http://honoServicePrincipal 89f90a0b-2111-4df3-bebe-3d919 4e240c11-fab3-44d8-812f-f2bfb6b5\r\nusage: az [-h] [--verbose] [--debug]\r\n          [--output {json,jsonc,table,tsv,yaml,yamlc,none}] [--query JMESPATH]\r\n          {ad} ...\r\n```\r\nany thought how to resolve it? P.S. I faked the number, just in case.\r\n\r\nfollowing the guids in [[1](https://www.eclipse.org/hono/docs/deployment/helm-based-deployment/#deploying-to-azure-kubernetes-service-aks)] and [[2](https://www.eclipse.org/hono/docs/deployment/create-kubernetes-cluster/)] it is also not clear where exactly the Azure container registry is created. could please elaborate on that?\r\n\r\nBest regards\r\nSoheila\r\n\r\n", "url": "https://github.com/eclipse/hono/issues/1780", "user": "soheilade", "labels": ["Deployment", "bug"], "created": "2020-02-21 10:19:24", "closed": "2020-03-20 10:31:54", "commits": {"dc4cf02a77ad22bc5a33179df06c9b80d75779da": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "239e7852194de2ca9fb618708605d94e2d463032": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "1c307ddd5c29299ebde69b30200e0dfbcbe08ff7": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "7309c9b6d73dd2ba23cb4e756065e4d4f7934a0a": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 28.00027777777778, "commitsDetails": [{"commitHash": "dc4cf02a77ad22bc5a33179df06c9b80d75779da", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["9d50f1e27a76ba48cbc0666cbcf8330d9e83fd6c"], "nameRev": "dc4cf02a77ad22bc5a33179df06c9b80d75779da tags/1.2.0~87", "commitMessage": "[#1780] Fix AKS setup guide\n\nFixed small issues with bash scripts, ARM resource files and\ninstallation instructions.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-02-26 13:37:43", "authoredDateTime": "2020-02-26 13:25:49", "commitGitStats": [{"filePath": "deploy/src/main/deploy/azure/arm/honoInfrastructureDeployment.json", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "site/documentation/content/deployment/create-kubernetes-cluster.md", "insertions": 11, "deletions": 10, "lines": 21}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "239e7852194de2ca9fb618708605d94e2d463032", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["a215b361fd918135f6aadfdf1d2196a1e60dd3e9"], "nameRev": "239e7852194de2ca9fb618708605d94e2d463032 tags/1.1.1~10", "commitMessage": "[#1780] Fix AKS setup guide\n\nFixed small issues with bash scripts, ARM resource files and\ninstallation instructions.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-02-26 13:40:28", "authoredDateTime": "2020-02-26 13:25:49", "commitGitStats": [{"filePath": "deploy/src/main/deploy/azure/arm/honoInfrastructureDeployment.json", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "site/documentation/content/deployment/create-kubernetes-cluster.md", "insertions": 11, "deletions": 10, "lines": 21}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1c307ddd5c29299ebde69b30200e0dfbcbe08ff7", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["239e7852194de2ca9fb618708605d94e2d463032"], "nameRev": "1c307ddd5c29299ebde69b30200e0dfbcbe08ff7 tags/1.1.1~9", "commitMessage": "[#1780] Fix AKS setup guide\n\nAdded missing parameter to cut command for assigning values to\nvariables.\nAdded missing command for creating container registry.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-02-26 14:15:27", "authoredDateTime": "2020-02-26 14:15:27", "commitGitStats": [{"filePath": "site/documentation/content/deployment/create-kubernetes-cluster.md", "insertions": 29, "deletions": 19, "lines": 48}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "7309c9b6d73dd2ba23cb4e756065e4d4f7934a0a", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["dc4cf02a77ad22bc5a33179df06c9b80d75779da"], "nameRev": "7309c9b6d73dd2ba23cb4e756065e4d4f7934a0a tags/1.2.0~86", "commitMessage": "[#1780] Fix AKS setup guide\n\nAdded missing parameter to cut command for assigning values to\nvariables.\nAdded missing command for creating container registry.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-02-26 14:25:25", "authoredDateTime": "2020-02-26 14:15:27", "commitGitStats": [{"filePath": "site/documentation/content/deployment/create-kubernetes-cluster.md", "insertions": 29, "deletions": 19, "lines": 48}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dc4cf02a77ad22bc5a33179df06c9b80d75779da"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["deploy/src/main/deploy/azure/arm/honoInfrastructureDeployment.json"]}, {"title": "Upgrade to Netty >= 4.1.44", "body": "", "url": "https://github.com/eclipse/hono/issues/1755", "user": "sophokles73", "labels": ["bug"], "created": "2020-02-07 08:55:53", "closed": "2020-03-20 09:48:22", "commits": {"9ec5ce35495aabec0fad1a614c436d2a28e50d57": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 42.000277777777775, "commitsDetails": [{"commitHash": "9ec5ce35495aabec0fad1a614c436d2a28e50d57", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["59f2d26767b55d0d0819aac6f6c666e2960aa2f9"], "nameRev": "9ec5ce35495aabec0fad1a614c436d2a28e50d57 tags/1.2.0~21", "commitMessage": "[#1755] Upgrade to Netty 4.1.48.Final\n\nAlso upgraded netty-tcnative to 2.0.30.Final.\n\nFixes #1755\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-03-20 10:44:22", "authoredDateTime": "2020-03-20 10:25:22", "commitGitStats": [{"filePath": "bom/pom.xml", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9ec5ce35495aabec0fad1a614c436d2a28e50d57"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "HonoConnection.shutdown() blocks for 5s if called on event loop thread", "body": "`HonoConnection.shutdown()` blocks the current thread for 5s waiting for the close frame from the remote peer.\r\nIf the current thread is the thread of the vertx context that the HonoConnection operates on, the response from the remote peer can't be processed while the thread is blocked, causing for the 5s timeout to occur.\r\n\r\nSame applies to the `disconnect` method.", "url": "https://github.com/eclipse/hono/issues/1750", "user": "calohmn", "labels": ["Client", "bug"], "created": "2020-02-06 08:12:51", "closed": "2020-02-06 11:47:02", "commits": {"a661f8d928a3e695e294de5e30560de79f069759": {"commitGHEventType": "referenced", "commitUser": "calohmn"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a661f8d928a3e695e294de5e30560de79f069759", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["a7da2777eeb8eb0e48c055d3eefd36fc5607056c"], "nameRev": "a661f8d928a3e695e294de5e30560de79f069759 tags/1.1.0~17", "commitMessage": "[#1750] Fix shutdown/disconnect if used on event loop thread.\n\nThe timeout used in closeConnection() and in shutdown(), disconnect()\nhas also been reduced to half the connect timeout.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-02-06 12:47:00", "authoredDateTime": "2020-02-06 12:06:24", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/HonoConnection.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoConnectionImpl.java", "insertions": 44, "deletions": 20, "lines": 64}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoConnection.java", "spoonMethods": []}, {"spoonFilePath": "HonoConnectionImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.disconnect()", "TOT": 15, "UPD": 6, "INS": 3, "MOV": 3, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.shutdown()", "TOT": 20, "UPD": 3, "INS": 6, "MOV": 8, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.closeConnection(io.vertx.core.Handler)", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.getCloseConnectionTimeout()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a661f8d928a3e695e294de5e30560de79f069759"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 51, "deletions": 22, "lines": 73, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 41, "UPD": 9, "INS": 13, "MOV": 11, "DEL": 8, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client", "client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.HonoConnectionImpl.disconnect()", "org.eclipse.hono.client.impl.HonoConnectionImpl.shutdown()", "org.eclipse.hono.client.impl.HonoConnectionImpl.getCloseConnectionTimeout()", "org.eclipse.hono.client.impl.HonoConnectionImpl.closeConnection(io.vertx.core.Handler)"]}, {"title": "HTTP adapter \"upload Command response\" span doesn't get finished", "body": "The tracing span \"upload Command response\" created in the HTTP protocol adapter doesn't get finished.", "url": "https://github.com/eclipse/hono/issues/1740", "user": "calohmn", "labels": ["HTTP Adapter", "bug"], "created": "2020-02-04 08:48:57", "closed": "2020-02-04 08:56:56", "commits": {"f613f23b29b7931d4bb85f94f6c6daad8cbea6a2": {"commitGHEventType": "referenced", "commitUser": "calohmn"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "f613f23b29b7931d4bb85f94f6c6daad8cbea6a2", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["69726e91d2160dfd728f2e70fcdd0cc1545bc05e"], "nameRev": "f613f23b29b7931d4bb85f94f6c6daad8cbea6a2 tags/1.1.0~26", "commitMessage": "[#1740] Finish \"upload Command response\" span.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-02-04 09:55:30", "authoredDateTime": "2020-02-04 09:55:30", "commitGitStats": [{"filePath": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapter.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractVertxBasedHttpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.uploadCommandResponseMessage(io.vertx.ext.web.RoutingContext,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f613f23b29b7931d4bb85f94f6c6daad8cbea6a2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 0, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.uploadCommandResponseMessage(io.vertx.ext.web.RoutingContext,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)"]}, {"title": "Align Tenant management API implementation with the spec", "body": "At the moment Tenant management API specification defines that payload (without any mandatory parameters) is required during tenant creation. The implementation at the moment accepts empty body and adds 'enabled' field in that case. Empty body is also used in getting started examples.\r\n\r\nWe need to align specification with the implementation and examples.", "url": "https://github.com/eclipse/hono/issues/1736", "user": "dejanb", "labels": ["Device Registry", "Management API", "bug"], "created": "2020-01-31 15:37:09", "closed": "2020-02-24 16:19:14", "commits": {"dc312233c986d11a37115e1ed3f2489fad8c6350": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 24.00027777777778, "commitsDetails": [{"commitHash": "dc312233c986d11a37115e1ed3f2489fad8c6350", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["446e9143c24b99aa54b871646540306ec534c3cc"], "nameRev": "dc312233c986d11a37115e1ed3f2489fad8c6350 tags/1.2.0~102", "commitMessage": "[#1736] Management api : make the body optional in the creation request for a tenant\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>\n", "commitDateTime": "2020-02-20 11:41:43", "authoredDateTime": "2020-02-12 15:58:06", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/management/tenant/AbstractTenantManagementHttpEndpoint.java", "insertions": 1, "deletions": 6, "lines": 7}, {"filePath": "site/documentation/content/api/management/device-registry-v1.yaml", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "site/documentation/content/user-guide/device-registry.md", "insertions": 28, "deletions": 3, "lines": 31}, {"filePath": "site/homepage/content/release-notes.md", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/DeviceRegistryHttpClient.java", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/registry/DeviceRegistrationHttpIT.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/registry/TenantHttpIT.java", "insertions": 33, "deletions": 0, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractTenantManagementHttpEndpoint.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.tenant.AbstractTenantManagementHttpEndpoint.createTenant(io.vertx.ext.web.RoutingContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.management.tenant.AbstractTenantManagementHttpEndpoint.addNotPresentFieldsWithDefaultValuesForTenant(io.vertx.core.json.JsonObject)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DeviceRegistryHttpClient.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.DeviceRegistryHttpClient.addTenant(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DeviceRegistrationHttpIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceRegistrationHttpIT.testAddDeviceWithoutPayloadSucceeds(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TenantHttpIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.registry.TenantHttpIT.testAddTenantSucceedsWithNoRequestBody(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.TenantHttpIT.testAddTenantSucceedsWithAGeneratedId(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dc312233c986d11a37115e1ed3f2489fad8c6350"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 11, "lines": 17, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 6, "UPD": 1, "INS": 4, "MOV": 0, "DEL": 1, "spoonFilesChanged": 4, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["site/documentation/content/api/management/device-registry-v1.yaml", "service-base/src/main/java/org/eclipse/hono/service/management/tenant"], "changesInPackagesSPOON": ["org.eclipse.hono.tests.DeviceRegistryHttpClient.addTenant(java.lang.String)", "org.eclipse.hono.tests.registry.DeviceRegistrationHttpIT.testAddDeviceWithoutPayloadSucceeds(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.service.management.tenant.AbstractTenantManagementHttpEndpoint.createTenant(io.vertx.ext.web.RoutingContext)", "org.eclipse.hono.tests.registry.TenantHttpIT.testAddTenantSucceedsWithAGeneratedId(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.tests.registry.TenantHttpIT.testAddTenantSucceedsWithNoRequestBody(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.service.management.tenant.AbstractTenantManagementHttpEndpoint.addNotPresentFieldsWithDefaultValuesForTenant(io.vertx.core.json.JsonObject)"]}, {"title": "Admin guide documentation outdated for (at least) HTTP adapter", "body": "Hi,\r\n\r\nWhile trying to configure your http-adapter as a container running on a device outside of a Kubernetes cluster, I tried to use ENV variables to tell the adapter what host and port it should connect to.\r\n\r\nI followed the link: https://www.eclipse.org/hono/docs/admin-guide/http-adapter-config/#amqp-1-0-messaging-network-connection-configuration\r\n\r\nBut it seems it is missing a section with the `HONO_COMMAND` prefix.\r\n\r\nRegards,", "url": "https://github.com/eclipse/hono/issues/1729", "user": "Pixcell", "labels": ["bug", "documentation"], "created": "2020-01-29 19:22:00", "closed": "2020-01-30 09:05:56", "commits": {"3ae904bd676849c3d0349b513f92da2545171c45": {"commitGHEventType": "closed", "commitUser": "sophokles73"}, "758d15acca61f72ab9831c53981659782470925d": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "3ae904bd676849c3d0349b513f92da2545171c45", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["f536eaac4de062de52f9068a0bd45cd034872aa1"], "nameRev": "3ae904bd676849c3d0349b513f92da2545171c45 tags/1.1.0~54", "commitMessage": "[#1729] Add missing instructions for C&C connection config\n\nFixes #1729\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-01-30 09:45:59", "authoredDateTime": "2020-01-30 09:45:59", "commitGitStats": [{"filePath": "site/documentation/content/admin-guide/amqp-adapter-config.md", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "site/documentation/content/admin-guide/http-adapter-config.md", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "site/documentation/content/admin-guide/kura-adapter-config.md", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "site/documentation/content/admin-guide/mqtt-adapter-config.md", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "758d15acca61f72ab9831c53981659782470925d", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["280e9ed9b456bf4b06e039ddc6a7a304d3bb5805"], "nameRev": "758d15acca61f72ab9831c53981659782470925d tags/1.0.4~5", "commitMessage": "[#1729] Add missing instructions for C&C connection config\n\nFixes #1729\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-01-31 09:25:58", "authoredDateTime": "2020-01-30 09:45:59", "commitGitStats": [{"filePath": "site/documentation/content/admin-guide/amqp-adapter-config.md", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "site/documentation/content/admin-guide/http-adapter-config.md", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "site/documentation/content/admin-guide/kura-adapter-config.md", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "site/documentation/content/admin-guide/mqtt-adapter-config.md", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3ae904bd676849c3d0349b513f92da2545171c45"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "AMQP adapter does not accept command response without payload", "body": "The Command & Control API defines that command responses MAY contain a payload (https://www.eclipse.org/hono/docs/dev/api/command-and-control/#send-a-request-response-command). The AMQP adapter rejects command responses without payload with the error message \"empty notifications must not contain payload\".", "url": "https://github.com/eclipse/hono/issues/1726", "user": "b-abel", "labels": ["AMQP Adapter", "bug"], "created": "2020-01-29 08:28:57", "closed": "2020-02-06 16:03:53", "commits": {"bbacfb9d8797e9e3ba95dcc75166ce1b7647fd23": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "8faf2e560c414bcf232426c3f83ce2b6a1d53aaa": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "bbacfb9d8797e9e3ba95dcc75166ce1b7647fd23", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["c1ebcb22ed5d229342d4b34c432a21470dfc5bdc"], "nameRev": "bbacfb9d8797e9e3ba95dcc75166ce1b7647fd23 tags/1.1.0~7", "commitMessage": "[#1726] Fix: accept command responses without payload in AMQP adapter\n\nThe AMQP adapter now correctly accepts a command response from a device that has an empty body.\r\n\r\nSigned-off-by: Abel Buechner-Mihaljevic <abel.buechner-mihaljevic@bosch.io>\r\n", "commitDateTime": "2020-02-06 17:03:52", "authoredDateTime": "2020-02-06 17:03:52", "commitGitStats": [{"filePath": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java", "insertions": 14, "deletions": 14, "lines": 28}, {"filePath": "adapters/amqp-vertx/src/test/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapterTest.java", "insertions": 52, "deletions": 3, "lines": 55}, {"filePath": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapter.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "adapters/http-vertx-base/src/test/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapterTest.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapter.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "adapters/mqtt-vertx-base/src/test/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapterTest.java", "insertions": 118, "deletions": 50, "lines": 168}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VertxBasedAmqpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.uploadMessage(org.eclipse.hono.adapter.amqp.impl.AmqpContext,org.eclipse.hono.util.ResourceIdentifier,io.opentracing.Span)", "TOT": 20, "UPD": 2, "INS": 6, "MOV": 8, "DEL": 4}]}, {"spoonFilePath": "VertxBasedAmqpProtocolAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapterTest.testUploadCommandResponseWithoutPayloadSucceeds(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapterTest.getFakeMessage(java.lang.String,io.vertx.core.buffer.Buffer,java.lang.String)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "AbstractVertxBasedHttpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.uploadCommandResponseMessage(io.vertx.ext.web.RoutingContext,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)", "TOT": 7, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 2}]}, {"spoonFilePath": "AbstractVertxBasedHttpProtocolAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapterTest.testUploadEmptyCommandResponseSucceeds()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractVertxBasedMqttProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.uploadCommandResponseMessage(org.eclipse.hono.adapter.mqtt.MqttContext,org.eclipse.hono.util.ResourceIdentifier)", "TOT": 10, "UPD": 3, "INS": 2, "MOV": 3, "DEL": 2}]}, {"spoonFilePath": "AbstractVertxBasedMqttProtocolAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapterTest.testUploadEmptyCommandResponseSucceeds(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "8faf2e560c414bcf232426c3f83ce2b6a1d53aaa", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["bbacfb9d8797e9e3ba95dcc75166ce1b7647fd23"], "nameRev": "8faf2e560c414bcf232426c3f83ce2b6a1d53aaa tags/1.1.0~6", "commitMessage": "[#1726] Document fix in release notes\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-02-06 17:09:10", "authoredDateTime": "2020-02-06 17:09:10", "commitGitStats": [{"filePath": "site/homepage/content/release-notes.md", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bbacfb9d8797e9e3ba95dcc75166ce1b7647fd23", "8faf2e560c414bcf232426c3f83ce2b6a1d53aaa"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 21, "deletions": 19, "lines": 40, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 37.0, "UPD": 7.0, "INS": 9.0, "MOV": 13.0, "DEL": 8.0, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt", "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp", "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.uploadCommandResponseMessage(org.eclipse.hono.adapter.mqtt.MqttContext,org.eclipse.hono.util.ResourceIdentifier)", "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.uploadCommandResponseMessage(io.vertx.ext.web.RoutingContext,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.uploadMessage(org.eclipse.hono.adapter.amqp.impl.AmqpContext,org.eclipse.hono.util.ResourceIdentifier,io.opentracing.Span)"]}, {"title": "coap-adapter doesn't get ready", "body": "Using 1.1.0-SNAPSHOT (commit d3e7f875726d7f521633e88352b295646b615aec) I deployed a local-build with the coap-adapter enabled. The other adapters (http, mqtt) seems to be healthy but the coap-adapter fails and enters CrashLoopBackOff.\r\n\r\ndescribes reports:\r\n> Readiness probe failed: Get https://10.1.52.176:8088/readiness: dial tcp 10.1.52.176:8088: connect: connection refused  \r\n\r\nand the logs also contains some errors.\r\n\r\n[logs.txt](https://github.com/eclipse/hono/files/4109016/logs.txt)\r\n ", "url": "https://github.com/eclipse/hono/issues/1721", "user": "boaks", "labels": ["CoAP Adapter", "Deployment", "bug"], "created": "2020-01-24 14:51:27", "closed": "2020-01-24 17:04:45", "commits": {"c89080e082e8c3c0cb932a49367d399b17abe051": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c89080e082e8c3c0cb932a49367d399b17abe051", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["16a0ca06d90c1b1acc41f870dbe960f21fe70bc4"], "nameRev": "c89080e082e8c3c0cb932a49367d399b17abe051 tags/1.1.0~57", "commitMessage": "[#1721] Fix port configuration check\n\nCurrently the CoAP adapter only supports PSK based cipher suites. The\nHelm chart therefore does not configure the adapter with a key nor\ncertificate.\n\nThe protocol adapters perform a standard port configuration check during\nstartup. The standard check fails if no key material is configured and\nthe insecure port is not enabled. Thus, the port configuration check of\nthe CoAP adapter has been adapted to also allow binding to the secure\nport without key material being configured. In that case the adapter\nwill only support cipher suites that do not require RSA/DSA.\n\nFixes #1721\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "commitDateTime": "2020-01-24 18:04:27", "authoredDateTime": "2020-01-24 18:04:27", "commitGitStats": [{"filePath": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/AbstractVertxBasedCoapAdapter.java", "insertions": 28, "deletions": 1, "lines": 29}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-coap/hono-adapter-coap-vertx-secret.yaml", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractVertxBasedCoapAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.coap.AbstractVertxBasedCoapAdapter.doStart(io.vertx.core.Promise)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.coap.AbstractVertxBasedCoapAdapter.checkCoapPortConfiguration()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c89080e082e8c3c0cb932a49367d399b17abe051"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 30, "deletions": 2, "lines": 32, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["deploy/src/main/deploy/helm/templates/hono-adapter-coap/hono-adapter-coap-vertx-secret.yaml", "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.coap.AbstractVertxBasedCoapAdapter.doStart(io.vertx.core.Promise)", "org.eclipse.hono.adapter.coap.AbstractVertxBasedCoapAdapter.checkCoapPortConfiguration()"]}, {"title": "Unhandled exception in link establishment timeout handling", "body": "Log excerpt:\r\n````\r\nJanuary 22nd 2020, 10:13:52.519 INFO org.eclipse.hono.client.impl.HonoConnectionImpl link establishment [peer: XXX] timed out after 1000ms\r\nJanuary 22nd 2020, 10:13:52.519 ERROR io.vertx.core.impl.ContextImpl Unhandled exception\r\njava.lang.IllegalStateException: Result is already complete: failed\r\n  at io.vertx.core.impl.FutureImpl.fail(FutureImpl.java:101)\r\n  at io.vertx.core.impl.FutureImpl.handle(FutureImpl.java:153)\r\n  at io.vertx.core.impl.FutureImpl.handle(FutureImpl.java:18)\r\n  at org.eclipse.hono.client.impl.CachingClientFactory.lambda$getOrCreateClient$2(CachingClientFactory.java:185)\r\n  at io.vertx.core.impl.FutureImpl.tryFail(FutureImpl.java:170)\r\n  at io.vertx.core.impl.FutureImpl.fail(FutureImpl.java:100)\r\n  at io.vertx.core.impl.FutureImpl.handle(FutureImpl.java:153)\r\n  at io.vertx.core.impl.FutureImpl.handle(FutureImpl.java:18)\r\n  at io.vertx.core.impl.FailedFuture.setHandler(FailedFuture.java:48)\r\n  at io.vertx.core.Future.lambda$recover$4(Future.java:394)\r\n  at io.vertx.core.impl.FutureImpl.tryFail(FutureImpl.java:170)\r\n  at io.vertx.core.impl.FutureImpl.fail(FutureImpl.java:100)\r\n  at io.vertx.core.Future.lambda$map$2(Future.java:308)\r\n  at io.vertx.core.impl.FutureImpl.tryFail(FutureImpl.java:170)\r\n  at io.vertx.core.impl.FutureImpl.fail(FutureImpl.java:100)\r\n  at io.vertx.core.impl.FutureImpl.handle(FutureImpl.java:153)\r\n  at io.vertx.core.impl.FutureImpl.handle(FutureImpl.java:18)\r\n  at io.vertx.core.impl.FutureImpl.tryFail(FutureImpl.java:170)\r\n  at io.vertx.core.impl.FutureImpl.fail(FutureImpl.java:100)\r\n  at io.vertx.core.impl.FutureImpl.handle(FutureImpl.java:153)\r\n  at io.vertx.core.impl.FutureImpl.handle(FutureImpl.java:18)\r\n  at io.vertx.core.impl.FutureImpl.tryFail(FutureImpl.java:170)\r\n  at org.eclipse.hono.client.impl.HonoConnectionImpl.onTimeOut(HonoConnectionImpl.java:811)\r\n  at org.eclipse.hono.client.impl.HonoConnectionImpl.lambda$createReceiver$19(HonoConnectionImpl.java:795)\r\n[...]\r\n````\r\n<details>\r\n<summary>(Error with which the Future was about to be completed.)</summary>\r\n\r\n~~~\r\nJanuary 22nd 2020, 10:13:52.519 DEBUG org.eclipse.hono.client.impl.CachingClientFactory   failed to create new client for [testTenant/testDevice]\r\norg.eclipse.hono.client.ServerErrorException: Error Code: 503\r\n  at org.eclipse.hono.client.impl.HonoConnectionImpl.onTimeOut(HonoConnectionImpl.java:811)\r\n  at org.eclipse.hono.client.impl.HonoConnectionImpl.lambda$createReceiver$19(HonoConnectionImpl.java:795)\r\n  at io.vertx.core.impl.VertxImpl$InternalTimerHandler.handle(VertxImpl.java:911)\r\n  at io.vertx.core.impl.VertxImpl$InternalTimerHandler.handle(VertxImpl.java:875)\r\n  at io.vertx.core.impl.ContextImpl.executeTask(ContextImpl.java:320)\r\n  at io.vertx.core.impl.EventLoopContext.execute(EventLoopContext.java:43)\r\n  at io.vertx.core.impl.ContextImpl.executeFromIO(ContextImpl.java:188)\r\n  at io.vertx.core.impl.ContextImpl.executeFromIO(ContextImpl.java:180)\r\n  at io.vertx.core.impl.VertxImpl$InternalTimerHandler.run(VertxImpl.java:901)\r\n[...]\r\n~~~\r\n\r\n</details>\r\n\r\n\r\nThe above ERROR log entry does not cause any problems but can cause confusion when analyzing log files.\r\n", "url": "https://github.com/eclipse/hono/issues/1720", "user": "calohmn", "labels": ["Client", "bug"], "created": "2020-01-24 12:52:06", "closed": "2020-04-09 08:21:35", "commits": {"d32058b0a40a0920e4c517a5ceeb0d0356852f62": {"commitGHEventType": "referenced", "commitUser": "calohmn"}}, "ttf": 75.00027777777778, "commitsDetails": [{"commitHash": "d32058b0a40a0920e4c517a5ceeb0d0356852f62", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["0e622a43550aabb5595724c40d90d8893446b9b8"], "nameRev": "d32058b0a40a0920e4c517a5ceeb0d0356852f62 tags/1.3.0-M1~57", "commitMessage": "[#1720] Ensure getOrCreateClient handler not called twice.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-04-09 10:21:34", "authoredDateTime": "2020-04-09 07:30:49", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/CachingClientFactory.java", "insertions": 18, "deletions": 12, "lines": 30}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/CachingClientFactoryTest.java", "insertions": 40, "deletions": 0, "lines": 40}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CachingClientFactory.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.CachingClientFactory.getOrCreateClient(java.lang.String,java.util.function.Supplier,io.vertx.core.Handler,int)", "TOT": 10, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 2}]}, {"spoonFilePath": "CachingClientFactoryTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.CachingClientFactoryTest.testGetOrCreateClientWithClearStateCalledInBetween(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d32058b0a40a0920e4c517a5ceeb0d0356852f62"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 18, "deletions": 12, "lines": 30, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 10, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.CachingClientFactory.getOrCreateClient(java.lang.String,java.util.function.Supplier,io.vertx.core.Handler,int)"]}, {"title": "Rare sender/receiver creation error", "body": "We have seen the following error in a protocol adapter log while the AMQP messaging network component got restarted:\r\n````\r\n15:26:17.575 [vert.x-eventloop-thread-0] INFO  o.e.h.client.impl.HonoConnectionImpl - link establishment [peer: xx] timed out after 1000ms\r\n15:26:17.576 [vert.x-eventloop-thread-0] ERROR io.vertx.core.impl.ContextImpl - Unhandled exception\r\njava.lang.IllegalStateException: null\r\n\tat org.apache.qpid.proton.engine.impl.EndpointImpl.decref(EndpointImpl.java:54)\r\n\tat org.apache.qpid.proton.engine.impl.LinkImpl.postFinal(LinkImpl.java:128)\r\n\tat org.apache.qpid.proton.engine.impl.EndpointImpl.decref(EndpointImpl.java:52)\r\n\tat org.apache.qpid.proton.engine.impl.EndpointImpl.free(EndpointImpl.java:191)\r\n\tat io.vertx.proton.impl.ProtonLinkImpl.free(ProtonLinkImpl.java:303)\r\n\tat io.vertx.proton.impl.ProtonReceiverImpl.free(ProtonReceiverImpl.java:41)\r\n\tat org.eclipse.hono.client.impl.HonoConnectionImpl.onTimeOut(HonoConnectionImpl.java:810)\r\n\tat org.eclipse.hono.client.impl.HonoConnectionImpl.lambda$createReceiver$19(HonoConnectionImpl.java:795)\r\n\tat io.vertx.core.impl.VertxImpl$InternalTimerHandler.handle(VertxImpl.java:911)\r\n\tat io.vertx.core.impl.VertxImpl$InternalTimerHandler.handle(VertxImpl.java:875)\r\n\tat io.vertx.core.impl.ContextImpl.executeTask(ContextImpl.java:320)\r\n\tat io.vertx.core.impl.EventLoopContext.execute(EventLoopContext.java:43)\r\n\tat io.vertx.core.impl.ContextImpl.executeFromIO(ContextImpl.java:188)\r\n\tat io.vertx.core.impl.ContextImpl.executeFromIO(ContextImpl.java:180)\r\n\tat io.vertx.core.impl.VertxImpl$InternalTimerHandler.run(VertxImpl.java:901)\r\n\tat io.netty.util.concurrent.PromiseTask$RunnableAdapter.call(PromiseTask.java:38)\r\n\tat io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:127)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:416)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:515)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:918)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n````\r\nThis caused the receiver creation future to not get finished.\r\n\r\n\r\n<details>\r\n<summary>Here is another variant of this stacktrace.</summary>\r\n\r\n~~~\r\njava.lang.IllegalStateException: null\r\n\tat org.apache.qpid.proton.engine.impl.EndpointImpl.decref(EndpointImpl.java:54)\r\n\tat org.apache.qpid.proton.engine.impl.SessionImpl.postFinal(SessionImpl.java:138)\r\n\tat org.apache.qpid.proton.engine.impl.EndpointImpl.decref(EndpointImpl.java:52)\r\n\tat org.apache.qpid.proton.engine.impl.LinkImpl.postFinal(LinkImpl.java:128)\r\n\tat org.apache.qpid.proton.engine.impl.EndpointImpl.decref(EndpointImpl.java:52)\r\n\tat org.apache.qpid.proton.engine.impl.EndpointImpl.free(EndpointImpl.java:191)\r\n\tat io.vertx.proton.impl.ProtonLinkImpl.free(ProtonLinkImpl.java:303)\r\n\tat io.vertx.proton.impl.ProtonReceiverImpl.free(ProtonReceiverImpl.java:41)\r\n\tat org.eclipse.hono.client.impl.HonoConnectionImpl.onTimeOut(HonoConnectionImpl.java:810)\r\n\tat org.eclipse.hono.client.impl.HonoConnectionImpl.lambda$createReceiver$19(HonoConnectionImpl.java:795)\r\n\tat io.vertx.core.impl.VertxImpl$InternalTimerHandler.handle(VertxImpl.java:911)\r\n\tat io.vertx.core.impl.VertxImpl$InternalTimerHandler.handle(VertxImpl.java:875)\r\n\tat io.vertx.core.impl.ContextImpl.executeTask(ContextImpl.java:320)\r\n\tat io.vertx.core.impl.EventLoopContext.execute(EventLoopContext.java:43)\r\n\tat io.vertx.core.impl.ContextImpl.executeFromIO(ContextImpl.java:188)\r\n\tat io.vertx.core.impl.ContextImpl.executeFromIO(ContextImpl.java:180)\r\n\tat io.vertx.core.impl.VertxImpl$InternalTimerHandler.run(VertxImpl.java:901)\r\n\tat io.netty.util.concurrent.PromiseTask$RunnableAdapter.call(PromiseTask.java:38)\r\n\tat io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:127)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:416)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:515)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:918)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n~~~\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>And here another during *sender* creation.</summary>\r\n\r\n~~~\r\njava.lang.IllegalStateException: null\r\n\tat org.apache.qpid.proton.engine.impl.EndpointImpl.decref(EndpointImpl.java:54)\r\n\tat org.apache.qpid.proton.engine.impl.LinkImpl.postFinal(LinkImpl.java:128)\r\n\tat org.apache.qpid.proton.engine.impl.EndpointImpl.decref(EndpointImpl.java:52)\r\n\tat org.apache.qpid.proton.engine.impl.EndpointImpl.free(EndpointImpl.java:191)\r\n\tat io.vertx.proton.impl.ProtonLinkImpl.free(ProtonLinkImpl.java:303)\r\n\tat io.vertx.proton.impl.ProtonSenderImpl.free(ProtonSenderImpl.java:33)\r\n\tat org.eclipse.hono.client.impl.HonoConnectionImpl.onTimeOut(HonoConnectionImpl.java:810)\r\n\tat org.eclipse.hono.client.impl.HonoConnectionImpl.lambda$createSender$12(HonoConnectionImpl.java:698)\r\n\tat io.vertx.core.impl.VertxImpl$InternalTimerHandler.handle(VertxImpl.java:911)\r\n\tat io.vertx.core.impl.VertxImpl$InternalTimerHandler.handle(VertxImpl.java:875)\r\n\tat io.vertx.core.impl.ContextImpl.executeTask(ContextImpl.java:320)\r\n\tat io.vertx.core.impl.EventLoopContext.execute(EventLoopContext.java:43)\r\n\tat io.vertx.core.impl.ContextImpl.executeFromIO(ContextImpl.java:188)\r\n\tat io.vertx.core.impl.ContextImpl.executeFromIO(ContextImpl.java:180)\r\n\tat io.vertx.core.impl.VertxImpl$InternalTimerHandler.run(VertxImpl.java:901)\r\n\tat io.netty.util.concurrent.PromiseTask$RunnableAdapter.call(PromiseTask.java:38)\r\n\tat io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:127)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:416)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:515)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:918)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n\r\n~~~\r\n\r\n</details>\r\n\r\n\r\nThe errors above lead to the assumption that somehow one of the Proton Link/Session/Connection/Transport objects got corrupted.\r\nAn explanation could be that there was an exception in one of the handlers associated with these objects (e.g. closeHandler, detachHandler, etc.).\r\nSuch exceptions don't get logged and cause a corrupted state of the Proton object (see https://github.com/vert-x3/vertx-proton/issues/94).\r\nTherefore a solution could be to add exception handling for these handlers.\r\n\r\nAnother issue is that the `link establishment timed out` log message is misleading - the failure to establish the link is caused by the closed connection, not by the \"attach\" frame not getting received on an intact connection.\r\n\r\nEDIT: the origin actually wasn't an unhandled exception thrown in one of the handlers - see [comment below](https://github.com/eclipse/hono/issues/1718#issuecomment-580672008).", "url": "https://github.com/eclipse/hono/issues/1718", "user": "calohmn", "labels": ["Client", "bug"], "created": "2020-01-24 11:50:25", "closed": "2020-01-31 13:36:20", "commits": {"d820e4d5760bb5ea60ae97f508d0490c2f30e46f": {"commitGHEventType": "referenced", "commitUser": "calohmn"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "d820e4d5760bb5ea60ae97f508d0490c2f30e46f", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["d9f711a1e3b69697f63a94fd3143561b0fdfb825"], "nameRev": "d820e4d5760bb5ea60ae97f508d0490c2f30e46f tags/1.1.0~45", "commitMessage": "[#1718] Add exception handling; improve link creation logic.\n\nFix onLinkEstablishmentTimeout(), not calling link.free()\nthere anymore (has caused session to get into invalid state).\nExceptions now get caught in disconnect/detach/close handlers\nused in HonoConnectionImpl. A disconnect during link creation\nnow causes the creation attempt to be failed directly,\nwithout waiting for the link establishment timeout.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-01-31 14:36:19", "authoredDateTime": "2020-01-24 13:23:16", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoConnectionImpl.java", "insertions": 49, "deletions": 16, "lines": 65}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/HonoConnectionImplTest.java", "insertions": 89, "deletions": 2, "lines": 91}, {"filePath": "core/src/main/java/org/eclipse/hono/util/HonoProtonHelper.java", "insertions": 15, "deletions": 2, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoConnectionImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.onTimeOut(io.vertx.proton.ProtonLink,org.eclipse.hono.config.ClientConfigProperties,io.vertx.core.Promise)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.createSender(java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.core.Handler)", "TOT": 12, "UPD": 0, "INS": 6, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.createReceiver(java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.proton.ProtonMessageHandler,int,boolean,io.vertx.core.Handler)", "TOT": 12, "UPD": 0, "INS": 6, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.notifyDisconnectHandler(org.eclipse.hono.client.DisconnectListener)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.notifyDisconnectHandlers()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "HonoConnectionImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImplTest.testCreateReceiverFailsOnTimeout(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImplTest.testCreateSenderFailsOnTimeout(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImplTest.testCreateReceiverFailsOnDisconnectBeforeOpen(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImplTest.testCreateSenderFailsOnDisconnectBeforeOpen(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoProtonHelper.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.HonoProtonHelper", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.HonoProtonHelper.setDetachHandler(io.vertx.proton.ProtonLink,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.HonoProtonHelper.setCloseHandler(io.vertx.proton.ProtonLink,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d820e4d5760bb5ea60ae97f508d0490c2f30e46f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 64, "deletions": 18, "lines": 82, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 36, "UPD": 1, "INS": 19, "MOV": 13, "DEL": 3, "spoonFilesChanged": 2, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/org/eclipse/hono/util", "client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.HonoConnectionImpl", "org.eclipse.hono.client.impl.HonoConnectionImpl.createReceiver(java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.proton.ProtonMessageHandler,int,boolean,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoConnectionImpl.createSender(java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.core.Handler)", "org.eclipse.hono.util.HonoProtonHelper", "org.eclipse.hono.client.impl.HonoConnectionImpl.onTimeOut(io.vertx.proton.ProtonLink,org.eclipse.hono.config.ClientConfigProperties,io.vertx.core.Promise)", "org.eclipse.hono.util.HonoProtonHelper.setCloseHandler(io.vertx.proton.ProtonLink,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoConnectionImpl.notifyDisconnectHandler(org.eclipse.hono.client.DisconnectListener)", "org.eclipse.hono.util.HonoProtonHelper.setDetachHandler(io.vertx.proton.ProtonLink,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoConnectionImpl.notifyDisconnectHandlers()"]}, {"title": "Trace spans not getting finished in management API", "body": "A lot of trace spans created in the management API classes are not getting finished.\r\nThis is in the `EventBus[*]ManagementAdapter` classes.\r\n\r\nRegarding Hono 1.1:\r\nThese classes might become obsolete (see #1346), but for 1.1 they still might be kept, in which case the issue should still get fixed there.", "url": "https://github.com/eclipse/hono/issues/1701", "user": "calohmn", "labels": ["Management API", "Tracing", "bug"], "created": "2020-01-10 08:15:16", "closed": "2020-01-14 16:20:07", "commits": {"fa3d878702c996ce413881402ae0192df8885a56": {"commitGHEventType": "referenced", "commitUser": "calohmn"}, "49e7989f2e2375f266a7be7b73da71f91f4dc469": {"commitGHEventType": "referenced", "commitUser": "calohmn"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "fa3d878702c996ce413881402ae0192df8885a56", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["9193dfc04015cbc1d51c4cb926249b4c0407eee7"], "nameRev": "fa3d878702c996ce413881402ae0192df8885a56 tags/1.1.0-M2~28", "commitMessage": "[#1701] Finish spans in management API event bus adapters.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch-si.com>\n", "commitDateTime": "2020-01-14 17:20:06", "authoredDateTime": "2020-01-10 10:20:31", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/management/credentials/EventBusCredentialsManagementAdapter.java", "insertions": 44, "deletions": 44, "lines": 88}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/management/device/EventBusDeviceManagementAdapter.java", "insertions": 50, "deletions": 43, "lines": 93}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/management/tenant/EventBusTenantManagementAdapter.java", "insertions": 45, "deletions": 37, "lines": 82}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EventBusCredentialsManagementAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.credentials.EventBusCredentialsManagementAdapter.processGetRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 6, "UPD": 3, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.EventBusCredentialsManagementAdapter.processUpdateRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 28, "UPD": 4, "INS": 10, "MOV": 11, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.EventBusCredentialsManagementAdapter.credentialsFromPayload(org.eclipse.hono.util.EventBusMessage)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.EventBusCredentialsManagementAdapter.decodeCredential(io.vertx.core.json.JsonObject)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}]}, {"spoonFilePath": "EventBusDeviceManagementAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.device.EventBusDeviceManagementAdapter.processCreateRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.management.device.EventBusDeviceManagementAdapter.processGetRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 27, "UPD": 2, "INS": 6, "MOV": 14, "DEL": 5}, {"spoonMethodName": "org.eclipse.hono.service.management.device.EventBusDeviceManagementAdapter.processUpdateRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 17, "UPD": 3, "INS": 6, "MOV": 4, "DEL": 4}, {"spoonMethodName": "org.eclipse.hono.service.management.device.EventBusDeviceManagementAdapter.processDeleteRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 14, "UPD": 0, "INS": 6, "MOV": 6, "DEL": 2}]}, {"spoonFilePath": "EventBusTenantManagementAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.tenant.EventBusTenantManagementAdapter.processGetRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 17, "UPD": 3, "INS": 6, "MOV": 4, "DEL": 4}, {"spoonMethodName": "org.eclipse.hono.service.management.tenant.EventBusTenantManagementAdapter.processUpdateRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 20, "UPD": 1, "INS": 8, "MOV": 6, "DEL": 5}, {"spoonMethodName": "org.eclipse.hono.service.management.tenant.EventBusTenantManagementAdapter.processDeleteRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 16, "UPD": 2, "INS": 5, "MOV": 5, "DEL": 4}, {"spoonMethodName": "org.eclipse.hono.service.management.tenant.EventBusTenantManagementAdapter.processCreateRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 11, "UPD": 0, "INS": 5, "MOV": 4, "DEL": 2}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "49e7989f2e2375f266a7be7b73da71f91f4dc469", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["ad84a5b7a8c70259b37928dca09ee936a1467c98"], "nameRev": "49e7989f2e2375f266a7be7b73da71f91f4dc469 tags/1.0.3~2", "commitMessage": "[#1701] Finish spans in management API event bus adapters.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-01-17 09:39:31", "authoredDateTime": "2020-01-17 09:39:31", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/management/credentials/EventBusCredentialsManagementAdapter.java", "insertions": 43, "deletions": 45, "lines": 88}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/management/device/EventBusDeviceManagementAdapter.java", "insertions": 48, "deletions": 44, "lines": 92}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/management/tenant/EventBusTenantManagementAdapter.java", "insertions": 42, "deletions": 37, "lines": 79}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EventBusCredentialsManagementAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.credentials.EventBusCredentialsManagementAdapter.processGetRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 6, "UPD": 3, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.EventBusCredentialsManagementAdapter.processUpdateRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 27, "UPD": 4, "INS": 10, "MOV": 10, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.EventBusCredentialsManagementAdapter.credentialsFromPayload(org.eclipse.hono.util.EventBusMessage)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.EventBusCredentialsManagementAdapter.decodeCredential(io.vertx.core.json.JsonObject)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}]}, {"spoonFilePath": "EventBusDeviceManagementAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.device.EventBusDeviceManagementAdapter.processCreateRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.management.device.EventBusDeviceManagementAdapter.processUpdateRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 22, "UPD": 6, "INS": 3, "MOV": 11, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.service.management.device.EventBusDeviceManagementAdapter.processGetRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 27, "UPD": 2, "INS": 6, "MOV": 14, "DEL": 5}, {"spoonMethodName": "org.eclipse.hono.service.management.device.EventBusDeviceManagementAdapter.processDeleteRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 14, "UPD": 0, "INS": 6, "MOV": 6, "DEL": 2}]}, {"spoonFilePath": "EventBusTenantManagementAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.tenant.EventBusTenantManagementAdapter.processGetRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 16, "UPD": 4, "INS": 5, "MOV": 4, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.service.management.tenant.EventBusTenantManagementAdapter.processUpdateRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 20, "UPD": 1, "INS": 8, "MOV": 6, "DEL": 5}, {"spoonMethodName": "org.eclipse.hono.service.management.tenant.EventBusTenantManagementAdapter.processDeleteRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 17, "UPD": 3, "INS": 5, "MOV": 5, "DEL": 4}, {"spoonMethodName": "org.eclipse.hono.service.management.tenant.EventBusTenantManagementAdapter.processCreateRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 11, "UPD": 0, "INS": 5, "MOV": 4, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fa3d878702c996ce413881402ae0192df8885a56"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 139, "deletions": 124, "lines": 263, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 168, "UPD": 21, "INS": 55, "MOV": 59, "DEL": 33, "spoonFilesChanged": 3, "spoonMethodsChanged": 12}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service/management/credentials", "service-base/src/main/java/org/eclipse/hono/service/management/tenant", "service-base/src/main/java/org/eclipse/hono/service/management/device"], "changesInPackagesSPOON": ["org.eclipse.hono.service.management.credentials.EventBusCredentialsManagementAdapter.processUpdateRequest(org.eclipse.hono.util.EventBusMessage)", "org.eclipse.hono.service.management.device.EventBusDeviceManagementAdapter.processDeleteRequest(org.eclipse.hono.util.EventBusMessage)", "org.eclipse.hono.service.management.device.EventBusDeviceManagementAdapter.processUpdateRequest(org.eclipse.hono.util.EventBusMessage)", "org.eclipse.hono.service.management.tenant.EventBusTenantManagementAdapter.processGetRequest(org.eclipse.hono.util.EventBusMessage)", "org.eclipse.hono.service.management.device.EventBusDeviceManagementAdapter.processGetRequest(org.eclipse.hono.util.EventBusMessage)", "org.eclipse.hono.service.management.credentials.EventBusCredentialsManagementAdapter.processGetRequest(org.eclipse.hono.util.EventBusMessage)", "org.eclipse.hono.service.management.credentials.EventBusCredentialsManagementAdapter.decodeCredential(io.vertx.core.json.JsonObject)", "org.eclipse.hono.service.management.device.EventBusDeviceManagementAdapter.processCreateRequest(org.eclipse.hono.util.EventBusMessage)", "org.eclipse.hono.service.management.tenant.EventBusTenantManagementAdapter.processDeleteRequest(org.eclipse.hono.util.EventBusMessage)", "org.eclipse.hono.service.management.credentials.EventBusCredentialsManagementAdapter.credentialsFromPayload(org.eclipse.hono.util.EventBusMessage)", "org.eclipse.hono.service.management.tenant.EventBusTenantManagementAdapter.processCreateRequest(org.eclipse.hono.util.EventBusMessage)", "org.eclipse.hono.service.management.tenant.EventBusTenantManagementAdapter.processUpdateRequest(org.eclipse.hono.util.EventBusMessage)"]}, {"title": "Prometheus based resource limit checks fails to finish tracing span", "body": "The span is never getting finished if no limits have been defined for the tenant.", "url": "https://github.com/eclipse/hono/issues/1697", "user": "sophokles73", "labels": ["Metrics", "Tracing", "bug"], "created": "2020-01-09 12:50:09", "closed": "2020-01-09 17:21:49", "commits": {"3c4f190f2c095d118df9aab755be84c2f5b6d830": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "3c4f190f2c095d118df9aab755be84c2f5b6d830", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["cddbbab91814212c6aa285bd792a7624852ef20b"], "nameRev": "3c4f190f2c095d118df9aab755be84c2f5b6d830 tags/1.1.0-M2~38", "commitMessage": "[#1697] Always finish Span for tracking resource limit checks\n\nAlso split up the information being logged into individual fields.\n\nFixes #1697\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2020-01-09 18:06:36", "authoredDateTime": "2020-01-09 18:04:31", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/resourcelimits/PrometheusBasedResourceLimitChecks.java", "insertions": 141, "deletions": 115, "lines": 256}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/resourcelimits/PrometheusBasedResourceLimitChecksTest.java", "insertions": 59, "deletions": 16, "lines": 75}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": ["3c4f190f2c095d118df9aab755be84c2f5b6d830"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 141, "deletions": 115, "lines": 256, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service/resourcelimits"]}, {"title": "eclipse/hono-service-auth:1.1.0-SNAPSHOT missing on index.docker.io", "body": "Using the current commit on master (cde62cebf41f9), I executed \r\n\r\n```\r\nmvn clean install\r\ncd tests\r\nmvn verify -Prun-tests\r\n```\r\n\r\nAnd got this error message:\r\n\r\n> Unable to pull 'eclipse/hono-service-auth:1.1.0-SNAPSHOT' from registry 'index.docker.io' : {\"message\":\"manifest for eclipse/hono-service-auth:1.1.0-SNAPSHOT not found: manifest unknown: manifest unknown\"} (Not Found: 404) \r\n\r\nThe tests \"readme\" points to a general getting started, but I couldn't find the mentioned \"instructions on building the Docker images\". maybe they could be found under a different topic.\r\n\r\nSo:\r\nIs this error caused by a wrong local build process?\r\nOr is there something missing?\r\nIs there a guide, which explains, how to build the docker images? \r\n", "url": "https://github.com/eclipse/hono/issues/1696", "user": "boaks", "labels": ["bug", "documentation"], "created": "2020-01-09 12:17:44", "closed": "2020-01-10 08:09:53", "commits": {"13907d187b13f06fda18dc3a6d2b47ba5bc73fe7": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "13907d187b13f06fda18dc3a6d2b47ba5bc73fe7", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["3c4f190f2c095d118df9aab755be84c2f5b6d830"], "nameRev": "13907d187b13f06fda18dc3a6d2b47ba5bc73fe7 tags/1.1.0-M2~37", "commitMessage": "[#1696] Fix link in readme of tests\n\nThe readme file in the tests module now points to the section in the developer\r\nguide that explains how to build the docker images from source.\r\n\r\nFixes #1696 \r\n\r\nSigned-off-by: Abel Buechner-Mihaljevic <Abel.Buechner@bosch-si.com>", "commitDateTime": "2020-01-10 09:09:51", "authoredDateTime": "2020-01-10 09:09:51", "commitGitStats": [{"filePath": "tests/readme.md", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["13907d187b13f06fda18dc3a6d2b47ba5bc73fe7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Example deployment does not use Prometheus based resource limit checks", "body": "The adapters can be configured to use Prometheus metrics for determining if a tenant's message volume or overall number of connected devices have been exceeded. The example deployment should automatically do so when Prometheus is being deployed. However, the corresponding configuration property for setting the Prometheus server host is not contained in the adapter config files.", "url": "https://github.com/eclipse/hono/issues/1695", "user": "sophokles73", "labels": ["AMQP Adapter", "Kura Adapter", "MQTT Adapter", "bug"], "created": "2020-01-08 14:52:02", "closed": "2020-01-09 17:21:48", "commits": {"e338a24b8ad201aac66d41efde387224fc333ca9": {"commitGHEventType": "closed", "commitUser": "sophokles73"}, "755fbae3c73714ecd3048baa1121d8ccd5d2630d": {"commitGHEventType": "referenced", "commitUser": "calohmn"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "e338a24b8ad201aac66d41efde387224fc333ca9", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["d31009c7c9bfa504c689297b36d7d4b31ccfe11d"], "nameRev": "e338a24b8ad201aac66d41efde387224fc333ca9 tags/1.1.0-M2~43", "commitMessage": "[#1695] Use Prometheus based resource limit checks in demo deployment\n\nFixes #1695\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2020-01-09 18:06:36", "authoredDateTime": "2020-01-08 15:53:46", "commitGitStats": [{"filePath": "deploy/src/main/deploy/helm/templates/_helpers.tpl", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/resourcelimits/PrometheusBasedResourceLimitChecks.java", "insertions": 14, "deletions": 5, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PrometheusBasedResourceLimitChecks.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.resourcelimits.PrometheusBasedResourceLimitChecks.executeQuery(java.lang.String,io.opentracing.Span)", "TOT": 20, "UPD": 8, "INS": 5, "MOV": 5, "DEL": 2}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "755fbae3c73714ecd3048baa1121d8ccd5d2630d", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["865a5d58865986135ffe4f2f609ad989b03ee29c"], "nameRev": "755fbae3c73714ecd3048baa1121d8ccd5d2630d tags/1.0.3~5", "commitMessage": "[#1695] Use Prometheus based resource limit checks in demo deployment\n\nFixes #1695\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>\n\n(cherry picked from commit e338a24b8ad201aac66d41efde387224fc333ca9)\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-01-17 09:36:23", "authoredDateTime": "2020-01-08 15:53:46", "commitGitStats": [{"filePath": "deploy/src/main/deploy/helm/templates/_helpers.tpl", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/resourcelimits/PrometheusBasedResourceLimitChecks.java", "insertions": 4, "deletions": 3, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PrometheusBasedResourceLimitChecks.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.resourcelimits.PrometheusBasedResourceLimitChecks.executeQuery(java.lang.String)", "TOT": 6, "UPD": 3, "INS": 1, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e338a24b8ad201aac66d41efde387224fc333ca9"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 19, "deletions": 5, "lines": 24, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 20, "UPD": 8, "INS": 5, "MOV": 5, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["deploy/src/main/deploy/helm/templates/_helpers.tpl", "service-base/src/main/java/org/eclipse/hono/service/resourcelimits"], "changesInPackagesSPOON": ["org.eclipse.hono.service.resourcelimits.PrometheusBasedResourceLimitChecks.executeQuery(java.lang.String,io.opentracing.Span)"]}, {"title": "MQTT adapter does not include MQTT client ID when retrieving credentials", "body": "The MQTT adapter is supposed to include a connecting device's MQTT client identifier in its request to invoke the Credentials API's *get* operation. This mechanism had been specified as part of making the MQTT adapter compatible with Eclipse Kapua's way of authenticating Eclipse Kura gateways.\r\n\r\nThe Credentials API provides means to include arbitrary *client context* information in the request to the *get* operation. However, the MQTT adapter does not include the MQTT client identifier yet.", "url": "https://github.com/eclipse/hono/issues/1661", "user": "sophokles73", "labels": ["MQTT Adapter", "bug"], "created": "2019-12-10 16:09:35", "closed": "2019-12-16 08:33:06", "commits": {"98a3e5bb1f168829324979cf742f3df8c8c0b47c": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "98a3e5bb1f168829324979cf742f3df8c8c0b47c", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["627cee878c1a9a8aa4e232eae8d2352878cd5162"], "nameRev": "98a3e5bb1f168829324979cf742f3df8c8c0b47c tags/1.1.0-M2~68", "commitMessage": "[#1661, #504] Include MQTT client ID in Credentials.get request (#1666)\n\n* [#1661, #504] Include MQTT client ID in Credentials.get request\r\n\r\nThe MQTT adapter now always includes the device's MQTT client identifier\r\nin the client context which is sent to the Credentials service in the\r\nget request.\r\n\r\nIn order for this to work, the example Credentials service\r\nimplementation had to be changed so that it no longer asserts that a\r\ndevice's credentials on record also contain the properties submitted in\r\nthe client context. The check now only makes sure that if a property of\r\na matching name is on record, its value is the same as the value provided\r\nin the client context.\r\n\r\nFixes #1661\r\n\r\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-12-16 09:33:05", "authoredDateTime": "2019-12-16 09:33:05", "commitGitStats": [{"filePath": "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/ConnectPacketAuthHandler.java", "insertions": 12, "deletions": 4, "lines": 16}, {"filePath": "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/X509AuthHandler.java", "insertions": 25, "deletions": 2, "lines": 27}, {"filePath": "adapters/mqtt-vertx-base/src/test/java/org/eclipse/hono/adapter/mqtt/ConnectPacketAuthHandlerTest.java", "insertions": 89, "deletions": 0, "lines": 89}, {"filePath": "adapters/mqtt-vertx-base/src/test/java/org/eclipse/hono/adapter/mqtt/X509AuthHandlerTest.java", "insertions": 67, "deletions": 178, "lines": 245}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/auth/device/AuthHandler.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/auth/device/ExecutionContextAuthHandler.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/credentials/AbstractCredentialsServiceTest.java", "insertions": 8, "deletions": 2, "lines": 10}, {"filePath": "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry/FileBasedCredentialsService.java", "insertions": 20, "deletions": 14, "lines": 34}, {"filePath": "services/device-registry/src/test/java/org/eclipse/hono/deviceregistry/FileBasedCredentialsServiceTest.java", "insertions": 68, "deletions": 2, "lines": 70}, {"filePath": "site/documentation/content/user-guide/mqtt-adapter.md", "insertions": 7, "deletions": 2, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectPacketAuthHandler.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.ConnectPacketAuthHandler.parseCredentials(org.eclipse.hono.adapter.mqtt.MqttContext)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "X509AuthHandler.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.X509AuthHandler.parseCredentials(org.eclipse.hono.adapter.mqtt.MqttContext)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "ConnectPacketAuthHandlerTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.ConnectPacketAuthHandlerTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "X509AuthHandlerTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.X509AuthHandlerTest.testHandleFailsWithStatusCodeFromAuthProvider(io.vertx.ext.unit.TestContext)", "TOT": 22, "UPD": 4, "INS": 0, "MOV": 17, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.X509AuthHandlerTest.EmptyCertificate.getTBSCertificate()", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.X509AuthHandlerTest.EmptyCertificate.getSigAlgOID()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.X509AuthHandlerTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.X509AuthHandlerTest.EmptyCertificate.getNotBefore()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.X509AuthHandlerTest.EmptyCertificate.getSigAlgParams()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.X509AuthHandlerTest.EmptyCertificate.getIssuerX500Principal()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.X509AuthHandlerTest.EmptyCertificate.getNotAfter()", "TOT": 7, "UPD": 4, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.X509AuthHandlerTest.EmptyCertificate.toString()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.X509AuthHandlerTest.EmptyCertificate", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.X509AuthHandlerTest.testParseCredentialsIncludesMqttClientId(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.X509AuthHandlerTest.testHandleFailsWithStatusCodeFromAuthProvider(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.X509AuthHandlerTest.getClientCertificate(java.lang.String,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.X509AuthHandlerTest.EmptyCertificate.getExtensionValue(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AuthHandler.java", "spoonMethods": []}, {"spoonFilePath": "ExecutionContextAuthHandler.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.auth.device.ExecutionContextAuthHandler", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.auth.device.ExecutionContextAuthHandler.authenticateDevice(org.eclipse.hono.util.ExecutionContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractCredentialsServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.credentials.AbstractCredentialsServiceTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.AbstractCredentialsServiceTest.assertGet(io.vertx.junit5.VertxTestContext,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.junit.jupiter.api.function.ThrowingConsumer,org.junit.jupiter.api.function.ThrowingConsumer,io.vertx.junit5.VertxTestContext.ExecutionBlock)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FileBasedCredentialsService.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedCredentialsService.getOrCreateResourceVersion(java.lang.String,java.lang.String)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedCredentialsService.getSingleCredentials(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.json.JsonObject,io.opentracing.Span)", "TOT": 31, "UPD": 8, "INS": 8, "MOV": 10, "DEL": 5}, {"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedCredentialsService.setResourceVersion(java.lang.String,java.lang.String,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "FileBasedCredentialsServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedCredentialsServiceTest.testUpdateCredentialsFailsIfModificationIsDisabled(io.vertx.junit5.VertxTestContext)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedCredentialsServiceTest.testGetCredentialsSucceedsForMatchingClientContext(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedCredentialsServiceTest.testGetCredentialsFailsForNonMatchingClientContext(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedCredentialsServiceTest.testGetCredentialsWithClientContext(io.vertx.junit5.VertxTestContext,java.lang.String,java.lang.String,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Example data grid cannot be scaled", "body": "The example data grid that is part of the example deployment consists of a single Infinispan server node only. However, when scaling up the cluster, the newly added node(s) and the existing node(s) do not find each other to form a cluster.", "url": "https://github.com/eclipse/hono/issues/1658", "user": "sophokles73", "labels": ["Deployment", "bug"], "created": "2019-12-10 12:45:57", "closed": "2019-12-10 13:30:43", "commits": {"af847ad8fb396d0f5395640bdc617fe34a1230c2": {"commitGHEventType": "closed", "commitUser": "sophokles73"}, "d3e5d1d1510e319e8545336845dedda3418036db": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "3e9aaba157547cc453c33cce64e729a3dd724647": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "af847ad8fb396d0f5395640bdc617fe34a1230c2", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["594df96234bd0d0adf6e08997dfa44bce8b2c8dc"], "nameRev": "af847ad8fb396d0f5395640bdc617fe34a1230c2 tags/1.1.0-M1~6", "commitMessage": "[#1658] Fix Infinispan server clustering\n\nThe members of the Infinispan server cluster were not able to find each\nother because of the wrong label being used to look up pods.\n\nThe Infinispan pods are now deployed as part of a StatefulSet which\nallows them to use proper persistent storage if desired. Consequently,\nthe service for the data grid is now a headless service and can thus no\nlonger be accessed from outside of the Kubernetes cluster but only via\nthe Device Connection service.\n\nFixes #1658\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-12-10 13:54:13", "authoredDateTime": "2019-12-10 13:48:21", "commitGitStats": [{"filePath": "deploy/src/main/deploy/helm/templates/example-data-grid/service.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/example-data-grid/{deployment.yaml => statefulset.yaml}", "insertions": 12, "deletions": 2, "lines": 14}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d3e5d1d1510e319e8545336845dedda3418036db", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["8c8ecd3405d1ae3cbc9b503d3de3ce8280150f00"], "nameRev": "d3e5d1d1510e319e8545336845dedda3418036db tags/1.1.0-M1~2", "commitMessage": "[#1658] Add fix to release notes\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-12-10 17:40:59", "authoredDateTime": "2019-12-10 17:40:59", "commitGitStats": [{"filePath": "site/homepage/content/release-notes.md", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "3e9aaba157547cc453c33cce64e729a3dd724647", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["49bdcf3e0597413e210fb3ef60c5e7f71ba3848c"], "nameRev": "3e9aaba157547cc453c33cce64e729a3dd724647 tags/1.0.2~7", "commitMessage": "[#1658] Fix Infinispan server clustering\n\nThe members of the Infinispan server cluster were not able to find each\nother because of the wrong label being used to look up pods.\n\nThe Infinispan pods are now deployed as part of a StatefulSet which\nallows them to use proper persistent storage if desired. Consequently,\nthe service for the data grid is now a headless service and can thus no\nlonger be accessed from outside of the Kubernetes cluster but only via\nthe Device Connection service.\n\nFixes #1658\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-12-13 16:29:05", "authoredDateTime": "2019-12-10 13:48:21", "commitGitStats": [{"filePath": "deploy/src/main/deploy/helm/templates/example-data-grid/service.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/example-data-grid/{deployment.yaml => statefulset.yaml}", "insertions": 15, "deletions": 5, "lines": 20}, {"filePath": "site/homepage/content/release-notes.md", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["af847ad8fb396d0f5395640bdc617fe34a1230c2", "d3e5d1d1510e319e8545336845dedda3418036db"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 3, "lines": 16, "gitFilesChange": 2}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["deploy/src/main/deploy/helm/templates/example-data-grid/{deployment.yaml => statefulset.yaml}", "deploy/src/main/deploy/helm/templates/example-data-grid/service.yaml"]}, {"title": "HTTP adapter: \"message consumer already in use\" error for TTD requests", "body": "The HTTP adapter may get into a state where each new telemetry/event request with a `ttd` param for a specific device will fail to create a command consumer. Internally, a `message consumer already in use` is thrown because there already is a command consumer from a previous request that didn't get closed. \r\nThis only gets resolved when the AMQP messaging network closes the existing command consumer link or if the adapter gets restarted.\r\n\r\nLooking at a heap dump of an adapter instance that got into this state revealed that the command consumer didn't get closed at a particular HTTP request when there was an error creating the AMQP message sender (`not connected`).\r\n", "url": "https://github.com/eclipse/hono/issues/1653", "user": "calohmn", "labels": ["C&C", "HTTP Adapter", "bug"], "created": "2019-12-09 07:21:16", "closed": "2019-12-10 14:08:35", "commits": {"3075586e28e9ba54d30098f32582e2064a87b81e": {"commitGHEventType": "referenced", "commitUser": "calohmn"}, "8c8ecd3405d1ae3cbc9b503d3de3ce8280150f00": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "ac7230975bb80bde7ee1e76071f6c21266ee0d5f": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "3075586e28e9ba54d30098f32582e2064a87b81e", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["af847ad8fb396d0f5395640bdc617fe34a1230c2"], "nameRev": "3075586e28e9ba54d30098f32582e2064a87b81e tags/1.1.0-M1~5", "commitMessage": "[#1653] Prevent the commandConsumer from not getting closed.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch-si.com>\n", "commitDateTime": "2019-12-10 15:08:33", "authoredDateTime": "2019-12-09 08:25:49", "commitGitStats": [{"filePath": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapter.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "adapters/http-vertx-base/src/test/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapterTest.java", "insertions": 52, "deletions": 0, "lines": 52}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractVertxBasedHttpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.doUploadMessage(io.vertx.ext.web.RoutingContext,java.lang.String,java.lang.String,io.vertx.core.buffer.Buffer,java.lang.String,io.vertx.core.Future,org.eclipse.hono.service.metric.MetricsTags$EndpointType)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractVertxBasedHttpProtocolAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapterTest.testUploadTelemetryWithTtdClosesCommandConsumerIfSenderCreationFailed()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "8c8ecd3405d1ae3cbc9b503d3de3ce8280150f00", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["73a968ef3bcbdcb7c350a071a16a16c266f53f16"], "nameRev": "8c8ecd3405d1ae3cbc9b503d3de3ce8280150f00 tags/1.1.0-M1~3", "commitMessage": "[#1653] Add fix to release notes\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-12-10 17:38:50", "authoredDateTime": "2019-12-10 17:38:50", "commitGitStats": [{"filePath": "site/homepage/content/release-notes.md", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ac7230975bb80bde7ee1e76071f6c21266ee0d5f", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["3e9aaba157547cc453c33cce64e729a3dd724647"], "nameRev": "ac7230975bb80bde7ee1e76071f6c21266ee0d5f tags/1.0.2~6", "commitMessage": "[#1653] Prevent the commandConsumer from not getting closed.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch-si.com>\n", "commitDateTime": "2019-12-13 16:29:05", "authoredDateTime": "2019-12-09 08:25:49", "commitGitStats": [{"filePath": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapter.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "adapters/http-vertx-base/src/test/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapterTest.java", "insertions": 52, "deletions": 0, "lines": 52}, {"filePath": "site/homepage/content/release-notes.md", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractVertxBasedHttpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.doUploadMessage(io.vertx.ext.web.RoutingContext,java.lang.String,java.lang.String,io.vertx.core.buffer.Buffer,java.lang.String,io.vertx.core.Future,org.eclipse.hono.service.metric.MetricsTags$EndpointType)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractVertxBasedHttpProtocolAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapterTest.testUploadTelemetryWithTtdClosesCommandConsumerIfSenderCreationFailed()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3075586e28e9ba54d30098f32582e2064a87b81e", "8c8ecd3405d1ae3cbc9b503d3de3ce8280150f00"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 1, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1.0, "UPD": 1.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.doUploadMessage(io.vertx.ext.web.RoutingContext,java.lang.String,java.lang.String,io.vertx.core.buffer.Buffer,java.lang.String,io.vertx.core.Future,org.eclipse.hono.service.metric.MetricsTags$EndpointType)"]}, {"title": "Devices stop receiving commands after re-connect", "body": "1. A device that has subscribed to receiving commands on the AMQP adapter.\r\n2. For some reason the AMQP connection fails.\r\n3. The devices opens a new connection to another AMQP adapter instance and again subscribes to receive commans.\r\n\r\nIn some cases the device is not receiving any commands on its new connection.\r\n\r\nOne such case could be:\r\nWhen the device considers its initial connection to the adapter to have failed, the adapter still believes that its connection to the device is alive. Thus, it does not close the command receiver link that it had opened on behalf of the device. Depending on what adapter instance the device re-connects to, the following happens:\r\n1. If the device re-connects to the same instance, then the device's attempt to re-subscribe to commands will fail because the adapter still has such a link open for the device which the adapter still considers working. Any commands sent to the device from an application will be routed to the adapter where delivery of the command will fail because the connection to the device is broken.\r\n2. If the device re-connects to another instance, that instance also opens a command receiver link for the device and now two such links exist and any command sent to the device by an application will either be routed to the initial adapter (where it gets released) or to the new adapter (where delivery will succeed).\r\n\r\nThere are two issues to be addressed FMPOV:\r\n1) Adapters should close a command receiver link they have opened for a device if a command for that device cannot be delivered to the device due to a stale/broken connection. I believe that the adapter can determine this condition when it tries to forward the command to the device.\r\n2) Adapters should have some means to announce to other adapter instances that they have opened a receiver link for a device. This way, other instances of the adapter get a chance to close their (stale) receiver links for the same device.", "url": "https://github.com/eclipse/hono/issues/1632", "user": "sophokles73", "labels": ["AMQP Adapter", "C&C", "bug"], "created": "2019-11-25 07:32:25", "closed": "2020-06-10 11:02:30", "commits": {"f9fce4cde6fe275e785189c62489ec1de23416f6": {"commitGHEventType": "referenced", "commitUser": "calohmn"}, "69c0282819250d3185d964af6ff2803fe85c3757": {"commitGHEventType": "referenced", "commitUser": "calohmn"}}, "ttf": 198.00027777777777, "commitsDetails": [{"commitHash": "f9fce4cde6fe275e785189c62489ec1de23416f6", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["16bf0e79dc45e881c933c9250d7a3aa39f96321e"], "nameRev": "f9fce4cde6fe275e785189c62489ec1de23416f6 tags/1.3.0-M1~9", "commitMessage": "[#1632] Close command consumer on closed device link.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-04-27 11:32:50", "authoredDateTime": "2020-04-22 16:13:49", "commitGitStats": [{"filePath": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java", "insertions": 18, "deletions": 6, "lines": 24}, {"filePath": "adapters/amqp-vertx/src/test/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapterTest.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/amqp/CommandAndControlAmqpIT.java", "insertions": 115, "deletions": 0, "lines": 115}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VertxBasedAmqpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.onCommandReceived(org.eclipse.hono.util.TenantObject,io.vertx.proton.ProtonSender,org.eclipse.hono.client.CommandContext)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.createCommandConsumer(io.vertx.proton.ProtonSender,org.eclipse.hono.util.ResourceIdentifier,org.eclipse.hono.auth.Device,io.opentracing.Span)", "TOT": 10, "UPD": 0, "INS": 6, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.onCommandReceived(org.eclipse.hono.util.TenantObject,io.vertx.proton.ProtonSender,org.eclipse.hono.client.MessageConsumer,org.eclipse.hono.client.CommandContext)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "VertxBasedAmqpProtocolAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapterTest.testOneWayCommandOutcome(io.vertx.proton.ProtonDelivery,java.lang.Class,org.eclipse.hono.service.metric.MetricsTags.ProcessingOutcome)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapterTest.testLinkForSendingCommandsCloseAfterTimeout()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandAndControlAmqpIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.createNotSendingDeliveryUpdateCommandConsumer(io.vertx.junit5.VertxTestContext,java.util.concurrent.atomic.AtomicInteger)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendCommandFailsForCommandNotAcknowledgedByDevice(io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.subscribeToCommands(org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,java.lang.String,java.lang.String,io.vertx.proton.ProtonMessageHandler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.createCommandConsumer(io.vertx.junit5.VertxTestContext,io.vertx.proton.ProtonSender)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendOneWayCommandSucceeds(org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,io.vertx.junit5.VertxTestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "69c0282819250d3185d964af6ff2803fe85c3757", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["4a4b93f1d10495233aefdbc5aedb1f3cefd095e3"], "nameRev": "69c0282819250d3185d964af6ff2803fe85c3757 tags/1.3.0-M2~66", "commitMessage": "[#1632] Keep link open on cmd disposition update timeout.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>\n", "commitDateTime": "2020-05-11 11:10:41", "authoredDateTime": "2020-05-07 13:59:28", "commitGitStats": [{"filePath": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java", "insertions": 28, "deletions": 40, "lines": 68}, {"filePath": "adapters/amqp-vertx/src/test/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapterTest.java", "insertions": 3, "deletions": 7, "lines": 10}, {"filePath": "site/homepage/content/release-notes.md", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/amqp/CommandAndControlAmqpIT.java", "insertions": 4, "deletions": 7, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VertxBasedAmqpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.addConnectionLossHandler(io.vertx.proton.ProtonConnection,io.vertx.core.Handler)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.handleRemoteSenderOpenForCommands(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSender)", "TOT": 46, "UPD": 10, "INS": 1, "MOV": 34, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.newSpan(java.lang.String,org.eclipse.hono.auth.Device,java.util.OptionalInt,io.opentracing.SpanContext)", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.onCommandReceived(org.eclipse.hono.util.TenantObject,io.vertx.proton.ProtonSender,org.eclipse.hono.client.ProtocolAdapterCommandConsumer,org.eclipse.hono.client.CommandContext)", "TOT": 9, "UPD": 3, "INS": 0, "MOV": 3, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.createCommandConsumer(io.vertx.proton.ProtonSender,org.eclipse.hono.util.ResourceIdentifier,org.eclipse.hono.auth.Device,io.opentracing.Span)", "TOT": 12, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 6}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.onCommandConnectionClose(java.lang.String,java.lang.String,org.eclipse.hono.auth.Device,org.eclipse.hono.client.ProtocolAdapterCommandConsumer,java.util.OptionalInt)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "VertxBasedAmqpProtocolAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapterTest.testOneWayCommandOutcome(io.vertx.proton.ProtonDelivery,java.lang.Class,org.eclipse.hono.service.metric.MetricsTags.ProcessingOutcome)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapterTest.testLinkForSendingCommandsCloseAfterTimeout()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}]}, {"spoonFilePath": "CommandAndControlAmqpIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendCommandFailsForCommandNotAcknowledgedByDevice(io.vertx.junit5.VertxTestContext)", "TOT": 7, "UPD": 3, "INS": 1, "MOV": 1, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f9fce4cde6fe275e785189c62489ec1de23416f6", "69c0282819250d3185d964af6ff2803fe85c3757"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 46, "deletions": 46, "lines": 92, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 105, "UPD": 22, "INS": 19, "MOV": 47, "DEL": 17, "spoonFilesChanged": 2, "spoonMethodsChanged": 13}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.createCommandConsumer(io.vertx.proton.ProtonSender,org.eclipse.hono.util.ResourceIdentifier,org.eclipse.hono.auth.Device,io.opentracing.Span)", "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendCommandFailsForCommandNotAcknowledgedByDevice(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.onCommandReceived(org.eclipse.hono.util.TenantObject,io.vertx.proton.ProtonSender,org.eclipse.hono.client.ProtocolAdapterCommandConsumer,org.eclipse.hono.client.CommandContext)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.newSpan(java.lang.String,org.eclipse.hono.auth.Device,java.util.OptionalInt,io.opentracing.SpanContext)", "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.subscribeToCommands(org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,java.lang.String,java.lang.String,io.vertx.proton.ProtonMessageHandler)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.onCommandReceived(org.eclipse.hono.util.TenantObject,io.vertx.proton.ProtonSender,org.eclipse.hono.client.MessageConsumer,org.eclipse.hono.client.CommandContext)", "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.createNotSendingDeliveryUpdateCommandConsumer(io.vertx.junit5.VertxTestContext,java.util.concurrent.atomic.AtomicInteger)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.onCommandConnectionClose(java.lang.String,java.lang.String,org.eclipse.hono.auth.Device,org.eclipse.hono.client.ProtocolAdapterCommandConsumer,java.util.OptionalInt)", "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.createCommandConsumer(io.vertx.junit5.VertxTestContext,io.vertx.proton.ProtonSender)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.onCommandReceived(org.eclipse.hono.util.TenantObject,io.vertx.proton.ProtonSender,org.eclipse.hono.client.CommandContext)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.handleRemoteSenderOpenForCommands(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSender)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.addConnectionLossHandler(io.vertx.proton.ProtonConnection,io.vertx.core.Handler)", "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendOneWayCommandSucceeds(org.eclipse.hono.tests.amqp.AmqpCommandEndpointConfiguration,io.vertx.junit5.VertxTestContext)"]}, {"title": "CoAP adapter fails to create secure endpoint", "body": "When the CoAP adapter starts up as part of the example deployment, the following line in the log seems to indicate that the secure endpoint is not being created:\r\n```\r\n12:38:15.460 [vert.x-eventloop-thread-0] WARN  o.e.h.a.c.impl.VertxBasedCoapAdapter - failed to create secure endpoint\r\njava.lang.IllegalStateException: trust must be set for configured TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\r\n\tat org.eclipse.californium.scandium.config.DtlsConnectorConfig$Builder.verifyCertificateBasedCipherConfig(DtlsConnectorConfig.java:1951)\r\n\tat org.eclipse.californium.scandium.config.DtlsConnectorConfig$Builder.build(DtlsConnectorConfig.java:1904)\r\n\tat org.eclipse.hono.adapter.coap.AbstractVertxBasedCoapAdapter.bindSecureEndpoint(AbstractVertxBasedCoapAdapter.java:268)\r\n\tat org.eclipse.hono.adapter.coap.AbstractVertxBasedCoapAdapter.lambda$doStart$1(AbstractVertxBasedCoapAdapter.java:204)\r\n\tat io.vertx.core.Future.lambda$map$2(Future.java:301)\r\n\tat io.vertx.core.impl.CompositeFutureImpl.setHandler(CompositeFutureImpl.java:147)\r\n\tat io.vertx.core.impl.CompositeFutureImpl.setHandler(CompositeFutureImpl.java:24)\r\n\tat io.vertx.core.Future.map(Future.java:297)\r\n\tat org.eclipse.hono.adapter.coap.AbstractVertxBasedCoapAdapter.lambda$doStart$2(AbstractVertxBasedCoapAdapter.java:201)\r\n\tat io.vertx.core.Future.lambda$compose$1(Future.java:265)\r\n\tat io.vertx.core.impl.FutureImpl.setHandler(FutureImpl.java:79)\r\n\tat io.vertx.core.Future.compose(Future.java:261)\r\n\tat org.eclipse.hono.adapter.coap.AbstractVertxBasedCoapAdapter.doStart(AbstractVertxBasedCoapAdapter.java:195)\r\n\tat org.eclipse.hono.service.AbstractProtocolAdapterBase.startInternal(AbstractProtocolAdapterBase.java:432)\r\n\tat org.eclipse.hono.service.AbstractServiceBase.start(AbstractServiceBase.java:92)\r\n\tat io.vertx.core.impl.DeploymentManager.lambda$doDeploy$8(DeploymentManager.java:552)\r\n\tat io.vertx.core.impl.ContextImpl.executeTask(ContextImpl.java:320)\r\n\tat io.vertx.core.impl.EventLoopContext.lambda$executeAsync$0(EventLoopContext.java:38)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:416)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:515)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:918)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Unknown Source)\r\n```\r\nThis seems to be caused by setting the server identity (key, cert) but no trust anchor.", "url": "https://github.com/eclipse/hono/issues/1612", "user": "sophokles73", "labels": ["CoAP Adapter", "bug"], "created": "2019-11-05 12:44:33", "closed": "2019-11-05 15:07:10", "commits": {"e08851c59a22888658d5a8e9b2f0a3976bd154ae": {"commitGHEventType": "closed", "commitUser": "sophokles73"}, "97c59137e1249c7a9e391eb045a29c1b27d4ca82": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e08851c59a22888658d5a8e9b2f0a3976bd154ae", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["37a9d35a6dc554853d52f5189d564852d1d911ec"], "nameRev": "e08851c59a22888658d5a8e9b2f0a3976bd154ae tags/1.1.0-M1~76", "commitMessage": "[#1612] Do not set CoAP server identity.\n\nThe DTLS configuration builder requires a trust anchor to be configured\nalong with the server identity in order to enable certificate based\nciphers.\n\nHowever, the CoAP adapter only supports PSK based authentication of\ndevices. Thus, the server is configured with a PSK store only for the\ntime being.\n\nFixes #1612\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-11-05 16:00:19", "authoredDateTime": "2019-11-05 15:58:59", "commitGitStats": [{"filePath": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/AbstractVertxBasedCoapAdapter.java", "insertions": 0, "deletions": 13, "lines": 13}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-coap/hono-adapter-coap-vertx-secret.yaml", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "tests/src/test/resources/coap/application.yml", "insertions": 0, "deletions": 2, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractVertxBasedCoapAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.coap.AbstractVertxBasedCoapAdapter.bindSecureEndpoint(org.eclipse.californium.core.CoapServer,org.eclipse.californium.core.network.config.NetworkConfig)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "97c59137e1249c7a9e391eb045a29c1b27d4ca82", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["a58d5aa403d51e24a7a8ba0a709d1b9f62034c4d"], "nameRev": "97c59137e1249c7a9e391eb045a29c1b27d4ca82 tags/1.0.1~4", "commitMessage": "[#1612] Do not set CoAP server identity.\n\nThe DTLS configuration builder requires a trust anchor to be configured\nalong with the server identity in order to enable certificate based\nciphers.\n\nHowever, the CoAP adapter only supports PSK based authentication of\ndevices. Thus, the server is configured with a PSK store only for the\ntime being.\n\nFixes #1612\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-11-06 09:29:36", "authoredDateTime": "2019-11-05 15:58:59", "commitGitStats": [{"filePath": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/AbstractVertxBasedCoapAdapter.java", "insertions": 0, "deletions": 13, "lines": 13}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-coap/hono-adapter-coap-vertx-secret.yaml", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "tests/src/test/resources/coap/application.yml", "insertions": 0, "deletions": 2, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractVertxBasedCoapAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.coap.AbstractVertxBasedCoapAdapter.bindSecureEndpoint(org.eclipse.californium.core.CoapServer,org.eclipse.californium.core.network.config.NetworkConfig)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e08851c59a22888658d5a8e9b2f0a3976bd154ae"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0, "deletions": 17, "lines": 17, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["deploy/src/main/deploy/helm/templates/hono-adapter-coap/hono-adapter-coap-vertx-secret.yaml", "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.coap.AbstractVertxBasedCoapAdapter.bindSecureEndpoint(org.eclipse.californium.core.CoapServer,org.eclipse.californium.core.network.config.NetworkConfig)"]}, {"title": "Helm deployment of CoAP adapter fails", "body": "Deplyoment of the CoAP adapter fails when using the 1.0.0 Helm chart:\r\n```\r\nhelm install --dep-up --name hono --namespace hono --set adapters.coap.enabled=true eclipse-hono/\r\n\r\nHang tight while we grab the latest from your chart repositories...\r\n...Unable to get an update from the \"local\" chart repository (http://127.0.0.1:8879/charts):\r\n\tGet http://127.0.0.1:8879/charts/index.yaml: dial tcp 127.0.0.1:8879: connect: connection refused\r\n...Successfully got an update from the \"iofog\" chart repository\r\n...Successfully got an update from the \"stable\" chart repository\r\nUpdate Complete.\r\nSaving 2 charts\r\nDownloading prometheus from repo https://kubernetes-charts.storage.googleapis.com\r\nDownloading grafana from repo https://kubernetes-charts.storage.googleapis.com\r\nDeleting outdated charts\r\nError: YAML parse error on eclipse-hono/templates/hono-adapter-coap/hono-adapter-coap-vertx-secret.yaml: error converting YAML to JSON: yaml: line 14: mapping values are not allowed in this context\r\n```\r\n", "url": "https://github.com/eclipse/hono/issues/1609", "user": "sophokles73", "labels": ["Deployment", "bug"], "created": "2019-11-01 10:42:42", "closed": "2019-11-01 16:53:13", "commits": {"6f9ec62dd267c6f3e1fc1261a40735633e539114": {"commitGHEventType": "closed", "commitUser": "sophokles73"}, "0a7087a7b2f414a598f5f17b20ad9ae56f00346b": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "6f9ec62dd267c6f3e1fc1261a40735633e539114", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["adf869e2f84efce09edfa35695af9cf07eb3335b"], "nameRev": "6f9ec62dd267c6f3e1fc1261a40735633e539114 tags/1.1.0-M1~80", "commitMessage": "[#1609] Fix Secret and Deployment templates.\n\nFixes #1609\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-11-01 17:49:36", "authoredDateTime": "2019-11-01 17:49:36", "commitGitStats": [{"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-coap/hono-adapter-coap-vertx-deployment.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-coap/hono-adapter-coap-vertx-secret.yaml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0a7087a7b2f414a598f5f17b20ad9ae56f00346b", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["b3ee82e2e14bd92a812572965950d1eabb4f15dd"], "nameRev": "0a7087a7b2f414a598f5f17b20ad9ae56f00346b tags/1.0.1~9", "commitMessage": "[#1609] Fix Secret and Deployment templates.\n\nFixes #1609\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-11-05 13:13:37", "authoredDateTime": "2019-11-01 17:49:36", "commitGitStats": [{"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-coap/hono-adapter-coap-vertx-deployment.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-coap/hono-adapter-coap-vertx-secret.yaml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6f9ec62dd267c6f3e1fc1261a40735633e539114"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 2}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["deploy/src/main/deploy/helm/templates/hono-adapter-coap/hono-adapter-coap-vertx-deployment.yaml", "deploy/src/main/deploy/helm/templates/hono-adapter-coap/hono-adapter-coap-vertx-secret.yaml"]}, {"title": "DEFAULT_TENANT is not created in local deployment", "body": "**What I did:**\r\nI followed the steps for the Helm based deployment (see: https://www.eclipse.org/hono/docs/deployment/helm-based-deployment/) on macOS using a Kubernetes cluster running in Docker Desktop.\r\n\r\n**What I observed:**\r\nThe curl command for checking the existence of the DEFAULT_TENANT returns a 404.\r\n\r\n**What I think what went wrong:**\r\nThe device registry could not process the payload example-tenants.json contained in the Eclipse Hono 1.0.0 Archive (see: https://www.eclipse.org/hono/downloads/)\r\n\r\n**What I think may be a solution for the problem:**\r\nWith the implementation of the Support for multiple GAs in Registry and Tenant APIs (I think this is #623) the type of field `trustedCertificateAuthorities` in the class Tenant was changed from `TrustedCertificateAuthorities` to `List<TrustedCertificateAuthorities>`, see revision 3f4b120. The Unit Test runs fine, since its fixture in tenants.json does not contain a trusted CA, i.e. the change made was not covered by the unit test.\r\n\r\nAs far as I can see adapting the JSON in the unit test to contain a trusted CA and in the Eclipse Hono Archive to the changes made in 3f4b120 should fix the problem.", "url": "https://github.com/eclipse/hono/issues/1599", "user": "fkaltner", "labels": ["Device Registry", "bug"], "created": "2019-10-23 07:51:15", "closed": "2019-10-25 10:56:41", "commits": {"056af816b72fadc5aabd3570a8e452ddc612a8f3": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "0affc8e0b8cf152883d512a46629f075ca6d6351": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "b7f497cca7912d1837e39a7a733b869b8b921901": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "65475aa8c8eaadfaee494f06598de70422ab461a": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "765671fb9dcb86a22d93688bfd0357e80b4498d3": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "97b2d75007664672c8906f9d5eedc47930be9e4e": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "980b0d5882d40706d78300eeda439a5f75542a33": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "f2de6d1871a5f86bb61fafd271b40b328a081ab6": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "d8d5a6d66172b86867a79294b1c2aca1cbe665f2": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "148015e1f2f6f93a02fa24bf3ec3e47f8b65d550": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "4c813cdb2813fab3e8add5baee3fd3e1c33aacde": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "056af816b72fadc5aabd3570a8e452ddc612a8f3", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["5089604be6dfa024862595b92aa5d8b641ccb6cf"], "nameRev": "056af816b72fadc5aabd3570a8e452ddc612a8f3 tags/1.1.0-M1~105", "commitMessage": "[#1599] Support loading of single trusted CA from JSON file.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-10-24 10:13:24", "authoredDateTime": "2019-10-23 23:45:48", "commitGitStats": [{"filePath": "service-base/src/test/java/org/eclipse/hono/service/management/tenant/TrustedCertificateAuthorityTest.java", "insertions": 9, "deletions": 11, "lines": 20}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/tenant/AbstractTenantServiceTest.java", "insertions": 17, "deletions": 10, "lines": 27}, {"filePath": "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry/FileBasedTenantService.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "services/device-registry/src/test/java/org/eclipse/hono/deviceregistry/FileBasedTenantServiceTest.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "services/device-registry/src/test/resources/tenants.json", "insertions": 7, "deletions": 1, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TrustedCertificateAuthorityTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.tenant.TrustedCertificateAuthorityTest.testDecodeTrustedCAUsingPublicKey()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.management.tenant.TrustedCertificateAuthorityTest.testDecodeTrustedCAUsingCert()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.management.tenant.TrustedCertificateAuthorityTest.assertAuthority(org.eclipse.hono.service.management.tenant.TrustedCertificateAuthority)", "TOT": 29, "UPD": 0, "INS": 6, "MOV": 17, "DEL": 6}]}, {"spoonFilePath": "AbstractTenantServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.tenant.AbstractTenantServiceTest.assertGet(org.eclipse.hono.service.tenant.TenantService,java.lang.String,int)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.tenant.AbstractTenantServiceTest.assertTenantExists(org.eclipse.hono.service.tenant.TenantService,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.tenant.AbstractTenantServiceTest.assertTenantDoesNotExist(org.eclipse.hono.service.tenant.TenantService,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.tenant.AbstractTenantServiceTest.testRemoveTenantSucceeds(io.vertx.junit5.VertxTestContext)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.tenant.AbstractTenantServiceTest.assertGet(org.eclipse.hono.service.management.tenant.TenantManagementService,java.lang.String,int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FileBasedTenantService.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedTenantService.addTenant(io.vertx.core.json.JsonObject)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FileBasedTenantServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedTenantServiceTest.testDoStartLoadsTenants(io.vertx.junit5.VertxTestContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "0affc8e0b8cf152883d512a46629f075ca6d6351", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["056af816b72fadc5aabd3570a8e452ddc612a8f3"], "nameRev": "0affc8e0b8cf152883d512a46629f075ca6d6351 tags/1.1.0-M1~104", "commitMessage": "[#1599] Add note regarding manual creation of default tenant.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-10-24 10:49:08", "authoredDateTime": "2019-10-24 10:49:08", "commitGitStats": [{"filePath": "site/homepage/content/getting-started/index.md", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b7f497cca7912d1837e39a7a733b869b8b921901", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["0affc8e0b8cf152883d512a46629f075ca6d6351"], "nameRev": "b7f497cca7912d1837e39a7a733b869b8b921901 tags/1.1.0-M1~103", "commitMessage": "[#1599] Adapt example tenants config file to format change introduced during multiple CAs support.\n\nSigned-off-by: Kartheeswaran Kalidass <Kartheeswaran.Kalidass@bosch-si.com>\n", "commitDateTime": "2019-10-24 11:10:39", "authoredDateTime": "2019-10-23 16:09:27", "commitGitStats": [{"filePath": "deploy/src/main/deploy/example-tenants.json", "insertions": 9, "deletions": 5, "lines": 14}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "65475aa8c8eaadfaee494f06598de70422ab461a", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["b7f497cca7912d1837e39a7a733b869b8b921901"], "nameRev": "65475aa8c8eaadfaee494f06598de70422ab461a tags/1.1.0-M1~102", "commitMessage": "[#1599] Adapt demo certs script to handle trusted ca's validity.\n\nSigned-off-by: Kartheeswaran Kalidass <Kartheeswaran.Kalidass@bosch-si.com>\n", "commitDateTime": "2019-10-24 11:10:39", "authoredDateTime": "2019-10-23 17:08:47", "commitGitStats": [{"filePath": "demo-certs/certs/trust-anchor.properties", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "demo-certs/create_certs.sh", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "765671fb9dcb86a22d93688bfd0357e80b4498d3", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "97b2d75007664672c8906f9d5eedc47930be9e4e", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "980b0d5882d40706d78300eeda439a5f75542a33", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f2de6d1871a5f86bb61fafd271b40b328a081ab6", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d8d5a6d66172b86867a79294b1c2aca1cbe665f2", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["218d67155ac132ade070e2199d7487c29caa15f4"], "nameRev": "d8d5a6d66172b86867a79294b1c2aca1cbe665f2 tags/1.0.1~14", "commitMessage": "[#1599] Support loading of single trusted CA from JSON file.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-11-05 13:10:08", "authoredDateTime": "2019-10-23 23:45:48", "commitGitStats": [{"filePath": "service-base/src/test/java/org/eclipse/hono/service/management/tenant/TrustedCertificateAuthorityTest.java", "insertions": 9, "deletions": 11, "lines": 20}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/tenant/AbstractTenantServiceTest.java", "insertions": 17, "deletions": 10, "lines": 27}, {"filePath": "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry/FileBasedTenantService.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "services/device-registry/src/test/java/org/eclipse/hono/deviceregistry/FileBasedTenantServiceTest.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "services/device-registry/src/test/resources/tenants.json", "insertions": 7, "deletions": 1, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TrustedCertificateAuthorityTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.tenant.TrustedCertificateAuthorityTest.testDecodeTrustedCAUsingPublicKey()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.management.tenant.TrustedCertificateAuthorityTest.testDecodeTrustedCAUsingCert()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.management.tenant.TrustedCertificateAuthorityTest.assertAuthority(org.eclipse.hono.service.management.tenant.TrustedCertificateAuthority)", "TOT": 29, "UPD": 0, "INS": 6, "MOV": 17, "DEL": 6}]}, {"spoonFilePath": "AbstractTenantServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.tenant.AbstractTenantServiceTest.assertGet(org.eclipse.hono.service.tenant.TenantService,java.lang.String,int)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.tenant.AbstractTenantServiceTest.assertTenantExists(org.eclipse.hono.service.tenant.TenantService,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.tenant.AbstractTenantServiceTest.assertTenantDoesNotExist(org.eclipse.hono.service.tenant.TenantService,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.tenant.AbstractTenantServiceTest.testRemoveTenantSucceeds(io.vertx.junit5.VertxTestContext)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.tenant.AbstractTenantServiceTest.assertGet(org.eclipse.hono.service.management.tenant.TenantManagementService,java.lang.String,int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FileBasedTenantService.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedTenantService.addTenant(io.vertx.core.json.JsonObject)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FileBasedTenantServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedTenantServiceTest.testDoStartLoadsTenants(io.vertx.junit5.VertxTestContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "148015e1f2f6f93a02fa24bf3ec3e47f8b65d550", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["d8d5a6d66172b86867a79294b1c2aca1cbe665f2"], "nameRev": "148015e1f2f6f93a02fa24bf3ec3e47f8b65d550 tags/1.0.1~13", "commitMessage": "[#1599] Adapt example tenants config file to format change introduced during multiple CAs support.\n\nSigned-off-by: Kartheeswaran Kalidass <Kartheeswaran.Kalidass@bosch-si.com>\n", "commitDateTime": "2019-11-05 13:10:08", "authoredDateTime": "2019-10-23 16:09:27", "commitGitStats": [{"filePath": "deploy/src/main/deploy/example-tenants.json", "insertions": 9, "deletions": 5, "lines": 14}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "4c813cdb2813fab3e8add5baee3fd3e1c33aacde", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["148015e1f2f6f93a02fa24bf3ec3e47f8b65d550"], "nameRev": "4c813cdb2813fab3e8add5baee3fd3e1c33aacde tags/1.0.1~12", "commitMessage": "[#1599] Adapt demo certs script to handle trusted ca's validity.\n\nSigned-off-by: Kartheeswaran Kalidass <Kartheeswaran.Kalidass@bosch-si.com>\n", "commitDateTime": "2019-11-05 13:10:08", "authoredDateTime": "2019-10-23 17:08:47", "commitGitStats": [{"filePath": "demo-certs/certs/trust-anchor.properties", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "demo-certs/create_certs.sh", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["056af816b72fadc5aabd3570a8e452ddc612a8f3", "0affc8e0b8cf152883d512a46629f075ca6d6351", "b7f497cca7912d1837e39a7a733b869b8b921901", "65475aa8c8eaadfaee494f06598de70422ab461a"], "filteredCommitsReason": {"duplicated": 7, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 19.0, "deletions": 5.0, "lines": 24.0, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 2.0, "UPD": 0.0, "INS": 2.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["deploy/src/main/deploy/example-tenants.json", "demo-certs/certs/trust-anchor.properties", "demo-certs/create_certs.sh", "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry"], "changesInPackagesSPOON": ["org.eclipse.hono.deviceregistry.FileBasedTenantService.addTenant(io.vertx.core.json.JsonObject)"]}, {"title": "Documentation of Hono Client is outdated", "body": "The pages https://www.eclipse.org/hono/docs/admin-guide/secure_communication and https://www.eclipse.org/hono/docs/dev/admin-guide/hono-client-configuration describe classes that no longer exist or are now in other packages.", "url": "https://github.com/eclipse/hono/issues/1591", "user": "b-abel", "labels": ["bug", "documentation"], "created": "2019-10-18 13:09:51", "closed": "2019-10-18 13:56:02", "commits": {"02e572cd4ad8c6da810ad112298e4b5ba349ade5": {"commitGHEventType": "closed", "commitUser": "sophokles73"}, "8794dbbdd728b57d3982f19a03fd4fcff461bdb4": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "a16b0d218fa1cef07783fe9942468fb265cbd00b": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "02e572cd4ad8c6da810ad112298e4b5ba349ade5", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["bc473215a8d1bd71d90d56a856b78c8072fd6fab"], "nameRev": "02e572cd4ad8c6da810ad112298e4b5ba349ade5 tags/1.1.0-M1~116", "commitMessage": "[#1591] Adapt documentation to use current Hono client class names.\n\nFixes #1591\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-10-18 15:48:46", "authoredDateTime": "2019-10-18 15:48:46", "commitGitStats": [{"filePath": "site/documentation/content/admin-guide/hono-client-configuration.md", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "site/documentation/content/admin-guide/secure_communication.md", "insertions": 7, "deletions": 1, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "8794dbbdd728b57d3982f19a03fd4fcff461bdb4", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["0e28329587e43195c2231a4c476b4f837f2dfd31"], "nameRev": "8794dbbdd728b57d3982f19a03fd4fcff461bdb4 remotes/origin/1.0.0-docfix~5", "commitMessage": "[#1591] Adapt documentation to use current Hono client class names.\n\nFixes #1591\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-10-18 15:56:44", "authoredDateTime": "2019-10-18 15:48:46", "commitGitStats": [{"filePath": "site/documentation/content/admin-guide/hono-client-configuration.md", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "site/documentation/content/admin-guide/secure_communication.md", "insertions": 7, "deletions": 1, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a16b0d218fa1cef07783fe9942468fb265cbd00b", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["bdd0b5f94f3a64a164c23fa8ffb6d53934172cd5"], "nameRev": "a16b0d218fa1cef07783fe9942468fb265cbd00b tags/1.0.1~21", "commitMessage": "[#1591] Adapt documentation to use current Hono client class names.\n\nFixes #1591\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-10-21 15:20:08", "authoredDateTime": "2019-10-18 15:48:46", "commitGitStats": [{"filePath": "site/documentation/content/admin-guide/hono-client-configuration.md", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "site/documentation/content/admin-guide/secure_communication.md", "insertions": 7, "deletions": 1, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["02e572cd4ad8c6da810ad112298e4b5ba349ade5"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Device management API credential example does not match scheme", "body": "The _Device Management API Spec_ shows the following example request when making a _credentials PUT_: \r\n![image](https://user-images.githubusercontent.com/1345394/66826379-9f428300-ef4c-11e9-911e-390bd8a39775.png)\r\nhttps://www.eclipse.org/hono/docs/api/management/#/credentials/setAllCredentials\r\n\r\nThis does not match the scheme of `CredentialsSet` which defines that instead of a single credential an array of credentials should be given in the body.\r\n\r\nIn the Hono example device registry the `CredentialsSet` scheme with arrays is also used:\r\nhttps://www.eclipse.org/hono/docs/user-guide/device-registry/#update-credentials-for-a-device\r\n\r\nWhich of the ones is the right one? I guess the `CredentialsSet` scheme defines it the correct way, as otherwise it would be not possible to create multiple credentials with different type for one device.", "url": "https://github.com/eclipse/hono/issues/1573", "user": "mbaeuerle", "labels": ["Management API", "bug", "documentation"], "created": "2019-10-15 11:15:38", "closed": "2019-10-16 10:44:35", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Inconsistent validation of request payload in tenant registration operations.", "body": "There has been some inconsistency in the validation of the request payload during tenant registration operations in the _file based device registry_. In some cases, it's been able to _add_ or _update_ a tenant even with attributes containing _invalid_ values.\r\n\r\nFor example, it's been **able** to _add_ or _update_ a tenant with invalid _minimum message size_ or  _sampling mode_. After that the _get_ tenant operation returns `400 Bad Request Error`.\r\n \r\n```\r\n{\r\n    \"enabled\": true,\r\n    \"minimum-message-size\": -100,\r\n    \"tracing\":{\r\n    \t\"sampling-mode\": \"xyz\"\r\n    }\r\n}\r\n```\r\n\r\nOn the other hand, it is **not able** to `add` or `update` a tenant with the below invalid request payload containing negative value for `max-connections`. In this case `400 Bad Request Error` is returned as expected.\r\n\r\n```\r\n{\r\n    \"enabled\": true,\r\n    \"resource-limits\": {\r\n        \"max-connections\": -100\r\n    }\r\n}\r\n```\r\n**Findings:** \r\n\r\nIn the _file based device registry_, while performing _add_ and _update_ operations, the request payload is validated and mapped to `TenantObject` and then stored in a file. And they are not validated against the Tenant Management API. A solution shall be, that before accepting the payload, it should also be validated against the `org.eclipse.hono.service.management.tenant.Tenant`.", "url": "https://github.com/eclipse/hono/issues/1555", "user": "kaniyan", "labels": ["Device Registry", "bug"], "created": "2019-10-09 12:27:16", "closed": "2019-10-11 15:15:57", "commits": {"27c2ceea16daa5d3c38f21e88dc7ec2b5cc96027": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "27c2ceea16daa5d3c38f21e88dc7ec2b5cc96027", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["1d4c26ad8b03e1780caaf182daaf7b72bbb98f6c"], "nameRev": "27c2ceea16daa5d3c38f21e88dc7ec2b5cc96027 tags/1.0.0~38", "commitMessage": "[#1555] Validate tenant management request payload.\n\nPayload is now verified to comply with Tenant schema defined in API by means of trying to map it to the Tenant object.\r\n\r\nSigned-off-by: Kartheeswaran Kalidass <Kartheeswaran.Kalidass@bosch-si.com>", "commitDateTime": "2019-10-11 16:52:04", "authoredDateTime": "2019-10-11 16:52:05", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/management/tenant/EventBusTenantManagementAdapter.java", "insertions": 9, "deletions": 30, "lines": 39}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/management/tenant/Tenant.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/management/tenant/EventBusTenantManagementAdapterTest.java", "insertions": 158, "deletions": 0, "lines": 158}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/management/tenant/TenantTest.java", "insertions": 14, "deletions": 0, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EventBusTenantManagementAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.tenant.EventBusTenantManagementAdapter.isValidRequestPayload(io.vertx.core.json.JsonObject)", "TOT": 9, "UPD": 1, "INS": 1, "MOV": 6, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.management.tenant.EventBusTenantManagementAdapter.hasValidAdapterSpec(io.vertx.core.json.JsonObject)", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "Tenant.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.tenant.Tenant.setAdapters(java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EventBusTenantManagementAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.tenant.EventBusTenantManagementAdapterTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TenantTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.tenant.TenantTest.testWithEmptyAdaptersList()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["27c2ceea16daa5d3c38f21e88dc7ec2b5cc96027"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 15, "deletions": 30, "lines": 45, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 15, "UPD": 2, "INS": 2, "MOV": 9, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service/management/tenant"], "changesInPackagesSPOON": ["org.eclipse.hono.service.management.tenant.EventBusTenantManagementAdapter.isValidRequestPayload(io.vertx.core.json.JsonObject)", "org.eclipse.hono.service.management.tenant.Tenant.setAdapters(java.util.List)", "org.eclipse.hono.service.management.tenant.EventBusTenantManagementAdapter.hasValidAdapterSpec(io.vertx.core.json.JsonObject)"]}, {"title": "Concept documentation \"Device Registration\" outdated", "body": "The description in https://www.eclipse.org/hono/docs/dev/concepts/device-identity/#device-registration is outdated. It explains already removed operations in the *Device Registration API* and does not mention the *Device Registry Management API*. ", "url": "https://github.com/eclipse/hono/issues/1553", "user": "b-abel", "labels": ["bug", "documentation"], "created": "2019-10-08 11:46:00", "closed": "2019-10-09 07:36:38", "commits": {"0999336ef6aaad9c629878046619cc8a78ee376d": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "0999336ef6aaad9c629878046619cc8a78ee376d", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["bc013b1c3326770ec3ff5d4879e1276851211a36"], "nameRev": "0999336ef6aaad9c629878046619cc8a78ee376d tags/1.0.0~47", "commitMessage": "[#1553] Update concept documentation of \"Device Registration\".\n\nAdd the Management API to the concept and remove references to already\nremoved optional operations in Device Registration API.\n\nSigned-off-by: Abel Buechner-Mihaljevic <Abel.Buechner@bosch-si.com>\n", "commitDateTime": "2019-10-08 17:56:41", "authoredDateTime": "2019-10-08 15:37:12", "commitGitStats": [{"filePath": "site/documentation/content/concepts/device-identity.md", "insertions": 4, "deletions": 3, "lines": 7}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0999336ef6aaad9c629878046619cc8a78ee376d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Deployment with Example Data Grid fails", "body": "I tried to deploy a current SNAPSHOT with the Device Connection Service and the example data grid.\r\n\r\nI built the images with \r\n\r\n```\r\n# in base directory of Hono working tree:\r\neval $(minikube docker-env)\r\nmvn clean install -Pbuild-docker-image,metrics-prometheus\r\n```\r\n\r\nthen tried to deploy it (like in https://www.eclipse.org/hono/docs/dev/deployment/helm-based-deployment/#using-the-device-connection-service) with \r\n\r\n```\r\ncd deploy/target/deploy/helm/\r\nhelm install --dep-up --name hono --namespace hono --set deviceConnectionService.enabled=true --set dataGridDeployExample=true eclipse-hono/\r\n```\r\n\r\nThis failed with the following error message:\r\n\r\n```\r\nError: render error in \"eclipse-hono/templates/hono-service-device-connection/hono-service-device-connection-secret.yaml\": template: eclipse-hono/templates/hono-service-device-connection/hono-service-device-connection-secret.yaml:47:16: executing \"eclipse-hono/templates/hono-service-device-connection/hono-service-device-connection-secret.yaml\" at <required \"A .Values....>: error calling required: A .Values.deviceConnectionService.hono.deviceConnection.remote needs to be set when deploying the (production) Device Connection service\r\n```\r\n", "url": "https://github.com/eclipse/hono/issues/1543", "user": "b-abel", "labels": ["Deployment", "bug", "documentation"], "created": "2019-10-07 10:13:03", "closed": "2019-10-08 08:11:19", "commits": {"fd6e2c78b549874634b6fbe6cf806c924620ae5e": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "fd6e2c78b549874634b6fbe6cf806c924620ae5e", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["d26cc00f829278ad0fd836f3e306062e8ee08ca1"], "nameRev": "fd6e2c78b549874634b6fbe6cf806c924620ae5e tags/1.0.0~56", "commitMessage": "[#1543] Fix configuration property name in deployment guide.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-10-07 18:46:46", "authoredDateTime": "2019-10-07 18:46:46", "commitGitStats": [{"filePath": "site/documentation/content/deployment/helm-based-deployment.md", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fd6e2c78b549874634b6fbe6cf806c924620ae5e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Deployment with kubectl fails with validation error", "body": "I followed the Deployment Guide https://www.eclipse.org/hono/docs/dev/deployment/helm-based-deployment/#deploying-hono-using-kubectl and tried to deploy Hono without Tiller into a new Minikube profile (no Tiller installed) with Kubernetes 1.15.4. The chart has been taken from `hono/deploy/target/eclipse-hono-1.0.0-SNAPSHOT-chart.tar.gz` (build with `$ mvn clean install -Pbuild-docker-image`) on commit https://github.com/eclipse/hono/tree/ec7d3f85f17bb9d42129c18439ade0e99269a21f\r\n\r\nIt failed at the last step with the following output:\r\n\r\n```\r\n$ kubectl apply -f ./resources -R\r\nconfigmap/hono-grafana-config-dashboards created\r\nconfigmap/hono-grafana created\r\ndeployment.apps/hono-grafana created\r\npodsecuritypolicy.extensions/hono-grafana created\r\nrole.rbac.authorization.k8s.io/hono-grafana created\r\nrolebinding.rbac.authorization.k8s.io/hono-grafana created\r\nsecret/hono-grafana created\r\nservice/hono-grafana created\r\nserviceaccount/hono-grafana created\r\nconfigmap/hono-grafana-test created\r\npodsecuritypolicy.extensions/hono-grafana-test created\r\nrole.rbac.authorization.k8s.io/hono-grafana-test created\r\nrolebinding.rbac.authorization.k8s.io/hono-grafana-test created\r\nserviceaccount/hono-grafana-test created\r\npod/hono-grafana-test created\r\nclusterrole.rbac.authorization.k8s.io/hono-prometheus-server created\r\nclusterrolebinding.rbac.authorization.k8s.io/hono-prometheus-server created\r\ndeployment.extensions/hono-prometheus-server created\r\npersistentvolumeclaim/hono-prometheus-server created\r\nservice/hono-prometheus-server created\r\nserviceaccount/hono-prometheus-server created\r\ndeployment.apps/hono-artemis created\r\nsecret/hono-artemis-conf created\r\nservice/hono-artemis created\r\ndeployment.apps/hono-dispatch-router created\r\nservice/hono-dispatch-router-ext created\r\nsecret/hono-dispatch-router-conf created\r\nservice/hono-dispatch-router created\r\nconfigmap/hono-grafana-dashboards created\r\nsecret/hono-grafana-datasources created\r\nservice/hono-adapter-amqp-vertx-headless created\r\ndeployment.apps/hono-adapter-amqp-vertx created\r\nsecret/hono-adapter-amqp-vertx-conf created\r\nservice/hono-adapter-amqp-vertx created\r\nservice/hono-adapter-http-vertx-headless created\r\ndeployment.apps/hono-adapter-http-vertx created\r\nsecret/hono-adapter-http-vertx-conf created\r\nservice/hono-adapter-http-vertx created\r\nservice/hono-adapter-mqtt-vertx-headless created\r\ndeployment.apps/hono-adapter-mqtt-vertx created\r\nsecret/hono-adapter-mqtt-vertx-conf created\r\nservice/hono-adapter-mqtt-vertx created\r\nservice/hono-service-auth-headless created\r\ndeployment.apps/hono-service-auth created\r\nsecret/hono-service-auth-conf created\r\nservice/hono-service-auth created\r\nservice/hono-service-device-connection-headless created\r\nservice/hono-service-device-registry-headless created\r\nservice/hono-service-device-registry-ext created\r\npersistentvolumeclaim/hono-service-device-registry created\r\nsecret/hono-service-device-registry-conf created\r\nservice/hono-service-device-registry created\r\nerror validating \"resources/eclipse-hono/templates/hono-service-device-registry/hono-service-device-registry-deployment.yaml\": error validating data: ValidationError(StatefulSet.spec): missing required field \"serviceName\" in io.k8s.api.apps.v1beta1.StatefulSetSpec; if you choose to ignore these errors, turn validation off with --validate=false\r\nerror validating \"resources/eclipse-hono/templates/prometheus/prometheus-config.yaml\": error validating data: [unknown object type \"nil\" in ConfigMap.data.alerts, unknown object type \"nil\" in ConfigMap.data.rules]; if you choose to ignore these errors, turn validation off with --validate=false\r\n```\r\n\r\nKubernetes Version:\r\n\r\n```\r\n$ kubectl version \r\nClient Version: version.Info{Major:\"1\", Minor:\"16\", GitVersion:\"v1.16.0\", GitCommit:\"2bd9643cee5b3b3a5ecbd3af49d09018f0773c77\", GitTreeState:\"clean\", BuildDate:\"2019-09-18T14:36:53Z\", GoVersion:\"go1.12.9\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"15\", GitVersion:\"v1.15.4\", GitCommit:\"67d2fcf276fcd9cf743ad4be9a9ef5828adc082f\", GitTreeState:\"clean\", BuildDate:\"2019-09-18T14:41:55Z\", GoVersion:\"go1.12.9\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n```\r\n", "url": "https://github.com/eclipse/hono/issues/1535", "user": "b-abel", "labels": ["Deployment", "bug"], "created": "2019-10-02 12:56:55", "closed": "2019-10-07 07:45:19", "commits": {"19916c4f57bde0d5841626000b5d5476776bfd7f": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "19916c4f57bde0d5841626000b5d5476776bfd7f", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["828e1c1a7deab61d14fdb7f013d7e50f2af9bfb5"], "nameRev": "19916c4f57bde0d5841626000b5d5476776bfd7f tags/1.0.0~65", "commitMessage": "[#1535] Always deploy headless service for example device registry.\n\nAlso fix validation error on prometheus server ConfigMap.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-10-02 20:36:24", "authoredDateTime": "2019-10-02 19:53:22", "commitGitStats": [{"filePath": "deploy/src/main/deploy/helm/templates/hono-service-device-registry/headless-svc.yaml", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-service-device-registry/hono-service-device-registry-deployment.yaml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "deploy/src/main/deploy/helm/templates/prometheus/prometheus-config.yaml", "insertions": 4, "deletions": 2, "lines": 6}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["19916c4f57bde0d5841626000b5d5476776bfd7f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 4, "lines": 9, "gitFilesChange": 3}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["deploy/src/main/deploy/helm/templates/hono-service-device-registry/hono-service-device-registry-deployment.yaml", "deploy/src/main/deploy/helm/templates/prometheus/prometheus-config.yaml", "deploy/src/main/deploy/helm/templates/hono-service-device-registry/headless-svc.yaml"]}, {"title": "How to re-connect to AMQP adapter after network failure to continue to receive commands?", "body": "We (finally) use Hono 1.0-M7 and during development we switch networks every once in a while or turn them off and on again. We have an app that runs on a device and connects to the Hono AMQP adapter. We use command and control and the app receives commands via Hono's AMQP adapter.\r\n\r\nThe app reconnects to the AMQP adapter when the network is gone. We see in the logs that when the app reconnects, the logs of Hono's AMQP adapter contain the message `cannot create concurrent command consumer` and subsequently, the device will not receive commands meant for it. The message `cannot create concurrent command consumer` does not appear in the logs of Hono's AMQP adapter after the app has been shut down and restarted. I attached an [annotated log file](https://github.com/eclipse/hono/files/3632404/Annotated-AMQP-Adapter-Log-masked.txt) - searching for `consumer` reveals relevant parts.\r\n\r\nHave others experienced such behaviour? How could the device address the issue?\r\n", "url": "https://github.com/eclipse/hono/issues/1509", "user": "ghost", "labels": ["AMQP Adapter", "bug"], "created": "2019-09-19 17:02:58", "closed": "2019-10-29 15:58:39", "commits": {"b4462e74a2ebba75a8257ae1f0e4b7a0efb6c129": {"commitGHEventType": "closed", "commitUser": "sophokles73"}, "78aeb9187e91d73e988583c255f42b0129990c96": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 39.000277777777775, "commitsDetails": [{"commitHash": "b4462e74a2ebba75a8257ae1f0e4b7a0efb6c129", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["76f4e46c2e5d70b7763ee1deae5fbc158ae79cf4"], "nameRev": "b4462e74a2ebba75a8257ae1f0e4b7a0efb6c129 tags/1.1.0-M1~90", "commitMessage": "[#1509] Use AMQP idle timeout to detect stale connections.\n\nThe AMQP adapter now uses the idle timeout mechanism to detect and close\r\nconnections to devices. The default value of 60 seconds can be\r\noverridden using an environment variable.\r\n\r\nFixes #1509 \r\n\r\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-10-29 16:58:37", "authoredDateTime": "2019-10-29 16:58:37", "commitGitStats": [{"filePath": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/AmqpAdapterProperties.java", "insertions": 38, "deletions": 3, "lines": 41}, {"filePath": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "site/documentation/content/admin-guide/amqp-adapter-config.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "site/homepage/content/release-notes.md", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AmqpAdapterProperties.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.AmqpAdapterProperties", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.AmqpAdapterProperties.setIdleTimeout(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.AmqpAdapterProperties.getIdleTimeout()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.AmqpAdapterProperties.setMaxSessionFrames(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.AmqpAdapterProperties.getMaxSessionWindowSize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "VertxBasedAmqpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.bindInsecureServer()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.bindSecureServer()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "78aeb9187e91d73e988583c255f42b0129990c96", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["4c813cdb2813fab3e8add5baee3fd3e1c33aacde"], "nameRev": "78aeb9187e91d73e988583c255f42b0129990c96 tags/1.0.1~11", "commitMessage": "[#1509] Use AMQP idle timeout to detect stale connections.\n\nThe AMQP adapter now uses the idle timeout mechanism to detect and close\r\nconnections to devices. The default value of 60 seconds can be\r\noverridden using an environment variable.\r\n\r\nFixes #1509 \r\n\r\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-11-05 13:12:09", "authoredDateTime": "2019-10-29 16:58:37", "commitGitStats": [{"filePath": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/AmqpAdapterProperties.java", "insertions": 38, "deletions": 3, "lines": 41}, {"filePath": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "site/documentation/content/admin-guide/amqp-adapter-config.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "site/homepage/content/release-notes.md", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AmqpAdapterProperties.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.AmqpAdapterProperties", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.AmqpAdapterProperties.setIdleTimeout(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.AmqpAdapterProperties.getIdleTimeout()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.AmqpAdapterProperties.setMaxSessionFrames(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.AmqpAdapterProperties.getMaxSessionWindowSize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "VertxBasedAmqpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.bindInsecureServer()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.bindSecureServer()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b4462e74a2ebba75a8257ae1f0e4b7a0efb6c129"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 45, "deletions": 5, "lines": 50, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 10, "UPD": 0, "INS": 8, "MOV": 2, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.amqp.AmqpAdapterProperties.setMaxSessionFrames(int)", "org.eclipse.hono.adapter.amqp.AmqpAdapterProperties.getIdleTimeout()", "org.eclipse.hono.adapter.amqp.AmqpAdapterProperties.getMaxSessionWindowSize()", "org.eclipse.hono.adapter.amqp.AmqpAdapterProperties", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.bindInsecureServer()", "org.eclipse.hono.adapter.amqp.AmqpAdapterProperties.setIdleTimeout(int)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.bindSecureServer()"]}, {"title": "Hono CLI: TLS connections fail with the AmqpCliClient ", "body": "When using the Hono CLI client to send messages to the AMQP Protocol adapter (ie. with `--spring.profiles.active=amqp-send`) using username/password, a TLS connection cannot be established.\r\n\r\nThe adapter log just shows `failed to connect over ssl: javax.net.ssl.SSLException: handshake timed out`.", "url": "https://github.com/eclipse/hono/issues/1484", "user": "calohmn", "labels": ["Client", "bug"], "created": "2019-09-11 12:29:50", "closed": "2019-09-18 11:03:35", "commits": {"3c654571abaa46e46642f2f4539ee1c6dbbdfa47": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "3c654571abaa46e46642f2f4539ee1c6dbbdfa47", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["af698dfa7a8c137c0dc1e237763ee7d00f4065e9"], "nameRev": "3c654571abaa46e46642f2f4539ee1c6dbbdfa47 tags/1.0.0~117", "commitMessage": "[#1484] CLI: Allow TLS for basic auth.\n\nThe AmqpCliClient did not set TLS options when username and password\r\nwhere used for configuration.\r\n\r\nFixes #1484\r\n\r\nSigned-off-by: Abel Buechner-Mihaljevic <Abel.Buechner@bosch-si.com>", "commitDateTime": "2019-09-18 13:03:34", "authoredDateTime": "2019-09-18 13:03:34", "commitGitStats": [{"filePath": "cli/src/main/java/org/eclipse/hono/cli/adapter/AmqpCliClient.java", "insertions": 24, "deletions": 2, "lines": 26}, {"filePath": "cli/src/main/resources/application.yml", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AmqpCliClient.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.cli.adapter.AmqpCliClient.connectToAdapter()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.cli.adapter.AmqpCliClient.addTlsTrustOptions(io.vertx.proton.ProtonClientOptions,org.eclipse.hono.config.ClientConfigProperties)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3c654571abaa46e46642f2f4539ee1c6dbbdfa47"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 28, "deletions": 2, "lines": 30, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["cli/src/main/resources/application.yml", "cli/src/main/java/org/eclipse/hono/cli/adapter"], "changesInPackagesSPOON": ["org.eclipse.hono.cli.adapter.AmqpCliClient.connectToAdapter()", "org.eclipse.hono.cli.adapter.AmqpCliClient.addTlsTrustOptions(io.vertx.proton.ProtonClientOptions,org.eclipse.hono.config.ClientConfigProperties)"]}, {"title": "Conceptual problem in connection handling", "body": "To me it looks like we have a conceptual problem in the handling of connections to other services.\r\n\r\nEvery now and then, I recognized cases, where the adapters just don't become ready. And so I was digging into the issue. In the log you can then find something like:\r\n\r\n~~~\r\n2019-09-02T17:11:38.515Z INFO  [HonoConnectionImpl] stopping connection attempt to server [host: iot-device-registry.enmasse-infra.svc, port: 5671] due to terminal error\r\njavax.security.sasl.AuthenticationException: Failed to authenticate\r\n~~~\r\n\r\nThis \"terminal error\" will stop the client from trying to re-connect, and it seems like it never will re-try again. For as long as process is alive. So effectively, the process would be dead now.\r\n\r\nMy assumption was, that the pod would get cleaned up at some point, due to failing health checks. However that also doesn't seem to be the case. Taking a look at `org.eclipse.hono.service.AbstractProtocolAdapterBase`, you can see that the connections are checked in `registerReadinessChecks`, but not in the `registerLivenessChecks` method.\r\n\r\nIn that case, the \"liveness check\" would still always succeed.\r\n\r\nTaking a look at the Kubernetes documentation (https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/):\r\n\r\n> The kubelet uses liveness probes to know when to restart a Container. For example, liveness probes could catch a deadlock, where an application is running, but unable to make progress. Restarting a Container in such a state can help to make the application more available despite bugs.\r\n> The kubelet uses readiness probes to know when a Container is ready to start accepting traffic. A Pod is considered ready when all of its Containers are ready. One use of this signal is to control which Pods are used as backends for Services. When a Pod is not ready, it is removed from Service load balancers.\r\n\r\nIt looks to me, as if the correct way to signal the \"terminal error\", is not through the \"readiness\" check, but through the \"liveness\" check instead.\r\n\r\nAdditionally, I would question the idea of a terminal error altogether. From what I see in our case, it has to do with an invalid service credential. So that problem will go away in a minute.\r\n\r\nI think we should:\r\n\r\n1. Trigger a liveness failure in case of a terminal error.\r\n1. Event for a terminal error, allow to try again.\r\n\r\nFixing the first point is required to solve the issue. The second point would only allow the pod to recover itself, before it get killed by Kubernetes, and might be more of an improvement to the situation.\r\n\r\nI also think we should fix this before 1.0.0!", "url": "https://github.com/eclipse/hono/issues/1471", "user": "ctron", "labels": ["bug"], "created": "2019-09-03 07:04:45", "closed": "2019-09-18 06:39:10", "commits": {"87ff57511fea7076882946c43bbfdc78a6cad036": {"commitGHEventType": "referenced", "commitUser": "ctron"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "87ff57511fea7076882946c43bbfdc78a6cad036", "commitGHEventType": "referenced", "commitUser": "ctron", "commitParents": ["cff891881afb887b3a207e3ee65eb6565ce76823"], "nameRev": "87ff57511fea7076882946c43bbfdc78a6cad036 tags/1.0.0~144", "commitMessage": "[#1471] Fix broken \"terminal error\" connection handling (#1473)\n\nThis drops the concept of a \"terminal error\" and simply continues to re-connect.", "commitDateTime": "2019-09-06 09:29:21", "authoredDateTime": "2019-09-06 09:29:21", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoConnectionImpl.java", "insertions": 18, "deletions": 11, "lines": 29}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/HonoConnectionImplTest.java", "insertions": 0, "deletions": 85, "lines": 85}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/client/HonoClientImplIT.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "tests/src/test/resources/amqp/logback-spring.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "tests/src/test/resources/auth/logback-spring.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "tests/src/test/resources/coap/logback-spring.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "tests/src/test/resources/http/logback-spring.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "tests/src/test/resources/logback-test.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "tests/src/test/resources/mqtt/logback-spring.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoConnectionImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.isTerminalConnectionError(java.lang.Throwable)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.connect(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.logConnectionError(java.lang.Throwable)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.notifyDisconnectHandlers()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.notifyReconnectHandlers(io.vertx.core.AsyncResult)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.reconnect(java.lang.Throwable,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "HonoConnectionImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImplTest.testConnectFailsWithClientErrorForAuthenticationException(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImplTest.testConnectFailsWithClientErrorForNoSaslMechanismException(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImplTest.testConnectFailsWithClientErrorForPermanentSaslSystemException(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HonoClientImplIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.client.HonoClientImplIT.testConnectFailsWithClientErrorForNoSASLMechanismException(io.vertx.junit5.VertxTestContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.tests.client.HonoClientImplIT.testConnectFailsWithClientErrorIfTlsHandshakeFails(io.vertx.junit5.VertxTestContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "TTL unit assumed in seconds but AMQP 1.0 specification defines it in milliseconds", "body": "The feature to set a default TTL for tenants is documented roughly in the example tenant json. [There a default TTL of `30` is set](https://www.eclipse.org/hono/docs/api/tenant/#tenant-information-format). I guess it was assumed that the TTL should be set in seconds as 30 milliseconds is most often not enough time to get a message through an AMQP network. However the AMQP 1.0 specification defines the TTL in milliseconds.\r\nFrom the AMQP 1.0 specs:\r\n>ttl time to live in ms\r\n> Duration in milliseconds for which the message is to be considered \u201clive\u201d. If this is set then\r\na message expiration time will be computed based on the time of arrival at an intermediary.\r\n\r\nSo there are two possibilities:\r\n* Either the unit in Hono has to be changed to milliseconds\r\n* Or the TTL defined in the tenant json should be converted to milliseconds\r\n\r\nIn any case we should explicitly document the time unit which is used for the TTL.", "url": "https://github.com/eclipse/hono/issues/1470", "user": "mbaeuerle", "labels": ["bug"], "created": "2019-09-02 10:42:11", "closed": "2019-09-04 15:03:51", "commits": {"05d9405b4594d328c8db3ad7ca5a0cdb98b4753e": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "05d9405b4594d328c8db3ad7ca5a0cdb98b4753e", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["2d136b0d825d3bd4d404104c1fcb8ba38bb16e8d"], "nameRev": "05d9405b4594d328c8db3ad7ca5a0cdb98b4753e tags/1.0.0~147", "commitMessage": "[#1448] Use max-ttl to limit downstream event TTL.\n\nAllow configuration of a maximum TTL value for a tenant which serves as an upper boundary for (default) TTL values.\r\n\r\nFixes #1448\r\nFixes #1470 \r\n\r\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-09-04 17:03:49", "authoredDateTime": "2019-09-04 17:03:49", "commitGitStats": [{"filePath": "client/src/test/java/org/eclipse/hono/client/impl/TenantClientImplTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/org/eclipse/hono/util/DataVolume.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/org/eclipse/hono/util/ResourceLimits.java", "insertions": 30, "deletions": 2, "lines": 32}, {"filePath": "core/src/main/java/org/eclipse/hono/util/TenantConstants.java", "insertions": 19, "deletions": 10, "lines": 29}, {"filePath": "core/src/main/java/org/eclipse/hono/util/TenantObject.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/AbstractProtocolAdapterBase.java", "insertions": 32, "deletions": 3, "lines": 35}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/AbstractProtocolAdapterBaseTest.java", "insertions": 44, "deletions": 2, "lines": 46}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/management/tenant/TenantTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "site/documentation/content/api/management/device-registry-v1.yaml", "insertions": 22, "deletions": 7, "lines": 29}, {"filePath": "site/documentation/content/api/tenant/index.md", "insertions": 16, "deletions": 4, "lines": 20}, {"filePath": "site/documentation/content/concepts/resource-limits.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "site/documentation/content/user-guide/amqp-adapter.md", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "site/documentation/content/user-guide/http-adapter.md", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "site/documentation/content/user-guide/kura-adapter.md", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "site/documentation/content/user-guide/mqtt-adapter.md", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "site/homepage/content/release-notes.md", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/mqtt/EventMqttIT.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/registry/TenantApiTests.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TenantClientImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.TenantClientImplTest.testGetTenantIncludesRequiredInformationInRequest()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "DataVolume.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.DataVolume", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ResourceLimits.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.ResourceLimits", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.ResourceLimits.setMaxTtl(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.ResourceLimits.getMaxTtl()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TenantConstants.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.TenantConstants", "TOT": 8, "UPD": 4, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "TenantObject.java", "spoonMethods": []}, {"spoonFilePath": "AbstractProtocolAdapterBase.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBase.addDefaults(org.apache.qpid.proton.message.Message,org.eclipse.hono.util.ResourceIdentifier,io.vertx.core.json.JsonObject)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBase.addProperties(org.apache.qpid.proton.message.Message,org.eclipse.hono.util.ResourceIdentifier,org.eclipse.hono.util.TenantObject,io.vertx.core.json.JsonObject)", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBase.addDefaults(org.apache.qpid.proton.message.Message,org.eclipse.hono.util.ResourceIdentifier,io.vertx.core.json.JsonObject,long)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractProtocolAdapterBaseTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBaseTest.testAddPropertiesAddsCustomProperties()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBaseTest.testAddPropertiesLimitsTtlToMaxValue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBaseTest.testAddPropertiesUsesMaxTtlByDefault()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TenantTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.tenant.TenantTest.testDecodeResourceLimits()", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "EventMqttIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.mqtt.EventMqttIT.testMessagesExpire(io.vertx.ext.unit.TestContext)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TenantApiTests.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.registry.TenantApiTests.testGetTenant(io.vertx.junit5.VertxTestContext)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Error in DelegatedCommandSender while sending command to another adapter instance", "body": "We get the following error in DelegatedCommandSender very frequently in our automated system tests (quote from tracing)\r\n\r\n`{\r\n  \"key\": \"error.object\",\r\n  \"type\": \"string\",\r\n  \"value\": \"org.eclipse.hono.client.ServerErrorException: peer did not settle message, failing delivery\"\r\n}`\r\n\r\naccording log statement:\r\n\r\n`peer did not settle message [message ID: DelegatedCommandSenderImpl-304, remote state: Rejected], failing delivery`\r\n\r\nOur test does the following:\r\n- Create new tenant\r\n- Create new device\r\n- Device connects to MQTT adapter\r\n- Device subscribes to command and control topic\r\n- Test waits for event that signals device is ready to receive commands\r\n- Test sends command to device\r\n- Test verifies if command was received by device\r\n\r\nThis sequence runs multiple times for the same device and we have multiple MQTT adapter instances running, i.e it is very likely that device is connected to different adapters during tests.\r\n\r\nIf we add a 1 second sleep between receiving event that signals device is ready to receive commands and sending of the command we do not get this error.\r\n\r\nWhat do you think, can this be related to some timing issue in hono, or is it more likely that this is related to our messaging infrastructure?", "url": "https://github.com/eclipse/hono/issues/1457", "user": "DanielMaier-BSI", "labels": ["C&C", "bug"], "created": "2019-08-23 08:48:43", "closed": "2019-09-03 16:04:56", "commits": {"7aa91cd29f3d16d0f28033c3de3bade16e09b753": {"commitGHEventType": "referenced", "commitUser": "calohmn"}, "2d136b0d825d3bd4d404104c1fcb8ba38bb16e8d": {"commitGHEventType": "referenced", "commitUser": "calohmn"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "7aa91cd29f3d16d0f28033c3de3bade16e09b753", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["1e45bedd0d4b8e5ae041fe5120238db0e3a21d95"], "nameRev": "7aa91cd29f3d16d0f28033c3de3bade16e09b753 tags/1.0.0~149", "commitMessage": "[#1457] Log more details of the remote delivery state.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch-si.com>\n", "commitDateTime": "2019-08-30 07:10:23", "authoredDateTime": "2019-08-30 07:10:23", "commitGitStats": [{"filePath": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/DelegatedCommandSenderImpl.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/TelemetrySenderImpl.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VertxBasedAmqpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.onCommandReceived(org.eclipse.hono.util.TenantObject,io.vertx.proton.ProtonSender,org.eclipse.hono.client.CommandContext)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}]}, {"spoonFilePath": "DelegatedCommandSenderImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.DelegatedCommandSenderImpl.sendMessageAndWaitForOutcome(org.apache.qpid.proton.message.Message,io.opentracing.Span)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "TelemetrySenderImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.TelemetrySenderImpl.sendMessage(org.apache.qpid.proton.message.Message,io.opentracing.Span)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "2d136b0d825d3bd4d404104c1fcb8ba38bb16e8d", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["7aa91cd29f3d16d0f28033c3de3bade16e09b753"], "nameRev": "2d136b0d825d3bd4d404104c1fcb8ba38bb16e8d tags/1.0.0~148", "commitMessage": "[#1457] Create sender link with device specific address.\n\nInstead of using a long-lived sender link on the anonymous relay in\nDelegatedCommandSenderImpl, the link is created with the device-specific\ncommand address now and is closed after the command is sent.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch-si.com>\n", "commitDateTime": "2019-09-03 18:04:55", "authoredDateTime": "2019-09-03 14:02:42", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/CommandConsumerFactoryImpl.java", "insertions": 3, "deletions": 10, "lines": 13}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/DelegateViaDownstreamPeerCommandHandler.java", "insertions": 8, "deletions": 7, "lines": 15}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/DelegatedCommandSenderImpl.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/DelegateViaDownstreamPeerCommandHandlerTest.java", "insertions": 12, "deletions": 8, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandConsumerFactoryImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.CommandConsumerFactoryImpl.newTenantScopedCommandConsumer(java.lang.String)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.CommandConsumerFactoryImpl.getOrCreateDelegatedCommandSender(java.lang.String)", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 4, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.client.impl.CommandConsumerFactoryImpl", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.CommandConsumerFactoryImpl.createDelegatedCommandSender(java.lang.String,java.lang.String)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DelegateViaDownstreamPeerCommandHandler.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.DelegateViaDownstreamPeerCommandHandler", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.DelegateViaDownstreamPeerCommandHandler.handle(org.eclipse.hono.client.CommandContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DelegatedCommandSenderImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.DelegatedCommandSenderImpl.create(org.eclipse.hono.client.HonoConnection,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.DelegatedCommandSenderImpl.create(org.eclipse.hono.client.HonoConnection,java.lang.String,java.lang.String,io.vertx.core.Handler)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DelegateViaDownstreamPeerCommandHandlerTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.DelegateViaDownstreamPeerCommandHandlerTest.testHandleWithRejectedDeliveryResult()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.DelegateViaDownstreamPeerCommandHandlerTest.testHandleWithModifiedDeliveryResult()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.DelegateViaDownstreamPeerCommandHandlerTest.testHandleWithReleasedDeliveryResult()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.DelegateViaDownstreamPeerCommandHandlerTest.testHandleWithFailureToSend()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.DelegateViaDownstreamPeerCommandHandlerTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.DelegateViaDownstreamPeerCommandHandlerTest.setup()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.DelegateViaDownstreamPeerCommandHandlerTest.testHandleWithAcceptedDeliveryResult()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.DelegateViaDownstreamPeerCommandHandlerTest.testHandleWithFailureToCreateSender()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7aa91cd29f3d16d0f28033c3de3bade16e09b753", "2d136b0d825d3bd4d404104c1fcb8ba38bb16e8d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 21, "deletions": 23, "lines": 44, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 30, "UPD": 4, "INS": 10, "MOV": 8, "DEL": 8, "spoonFilesChanged": 5, "spoonMethodsChanged": 11}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl", "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.CommandConsumerFactoryImpl.createDelegatedCommandSender(java.lang.String,java.lang.String)", "org.eclipse.hono.client.impl.DelegateViaDownstreamPeerCommandHandler.handle(org.eclipse.hono.client.CommandContext)", "org.eclipse.hono.client.impl.CommandConsumerFactoryImpl.getOrCreateDelegatedCommandSender(java.lang.String)", "org.eclipse.hono.client.impl.DelegatedCommandSenderImpl.create(org.eclipse.hono.client.HonoConnection,java.lang.String,java.lang.String,io.vertx.core.Handler)", "org.eclipse.hono.adapter.amqp.impl.VertxBasedAmqpProtocolAdapter.onCommandReceived(org.eclipse.hono.util.TenantObject,io.vertx.proton.ProtonSender,org.eclipse.hono.client.CommandContext)", "org.eclipse.hono.client.impl.DelegatedCommandSenderImpl.create(org.eclipse.hono.client.HonoConnection,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.CommandConsumerFactoryImpl", "org.eclipse.hono.client.impl.CommandConsumerFactoryImpl.newTenantScopedCommandConsumer(java.lang.String)", "org.eclipse.hono.client.impl.DelegateViaDownstreamPeerCommandHandler", "org.eclipse.hono.client.impl.DelegatedCommandSenderImpl.sendMessageAndWaitForOutcome(org.apache.qpid.proton.message.Message,io.opentracing.Span)", "org.eclipse.hono.client.impl.TelemetrySenderImpl.sendMessage(org.apache.qpid.proton.message.Message,io.opentracing.Span)"]}, {"title": "Inconsistent content type for LoraWan messages", "body": "Receiving a message from via LoraWand, using the ThingNetwork backend looks like this:\r\n\r\n~~~\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n---------------------------------------------------------\r\n# Annotations\r\n---------------------------------------------------------\r\ntenant_id => enmasse-infra.iot (string)\r\ndevice_id => 00126FAF90A395F0 (string)\r\nresource => telemetry/enmasse-infra.iot/00126FAF90A395F0 (string)\r\n---------------------------------------------------------\r\n# Properties\r\n---------------------------------------------------------\r\nContent Encoding: \r\nContent Type: application/vnd.eclipse-hono.lora.ttn+json\r\nMessage ID: TelemetrySenderImpl-53\r\nSubject: \r\nTo: telemetry/enmasse-infra.iot\r\n---------------------------------------------------------\r\n# Application Properties\r\n---------------------------------------------------------\r\norig_lora_provider => ttn (string)\r\norig_adapter => hono-lora (string)\r\ndevice_id => 00126FAF90A395F0 (string)\r\norig_address => /ttn (string)\r\n---------------------------------------------------------\r\n# Payload\r\n---------------------------------------------------------\r\nAwACAA==\r\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\r\n~~~\r\n\r\nThe payload is actually the Base 64 encoded raw bytes. However the `Content Type` indicates that this is `json`, which it is not.", "url": "https://github.com/eclipse/hono/issues/1454", "user": "ctron", "labels": ["LoRa Adapter", "bug"], "created": "2019-08-20 15:35:09", "closed": "2020-07-03 14:12:00", "commits": {}, "ttf": 317.0002777777778, "commitsDetails": []}, {"title": "Upgrade to Netty 4.1.39", "body": "This addresses several HTTP/2 related CVEs:\r\nhttps://vuls.cert.org/confluence/pages/viewpage.action?pageId=56393752", "url": "https://github.com/eclipse/hono/issues/1450", "user": "sophokles73", "labels": ["bug", "security"], "created": "2019-08-19 14:44:37", "closed": "2019-08-20 15:24:06", "commits": {"4eed6d38a0091f1c52dcc8de886a37f070d3d7f8": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "4eed6d38a0091f1c52dcc8de886a37f070d3d7f8", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["567a520cefbb0e2b23743c297b04c232dd30f3f5"], "nameRev": "4eed6d38a0091f1c52dcc8de886a37f070d3d7f8 tags/1.0-M7~12", "commitMessage": "[#1450] Upgrade to Netty 4.1.39.\n\nThis fixes several CVEs around HTTP/2.\nAlso upgrades tcnative to 2.0.25.\n\nFixes #1450\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-08-20 17:24:04", "authoredDateTime": "2019-08-19 17:18:54", "commitGitStats": [{"filePath": "bom/pom.xml", "insertions": 57, "deletions": 2, "lines": 59}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4eed6d38a0091f1c52dcc8de886a37f070d3d7f8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Devices not able to send event messages.", "body": "Hono is built from the master branch and deployed in the cluster spun locally by _minikube_. The devices are unable to send _event_ messages to Hono.\r\n\r\n_Mqtt adapter log:_\r\n```\r\n07:15:39.270 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.impl.CachingClientFactory - creating new client for [event/DEFAULT_TENANT]\r\n07:15:39.275 [vert.x-eventloop-thread-0] DEBUG o.e.h.client.impl.HonoConnectionImpl - opening sender [event/DEFAULT_TENANT] failed: qd:no-route-to-dest - No route to the destination node\r\n07:15:39.276 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.impl.CachingClientFactory - failed to create new client for [event/DEFAULT_TENANT]\r\norg.eclipse.hono.client.ClientErrorException: No route to the destination node\r\n```\r\n[more...](https://github.com/eclipse/hono/files/3475743/Mqtt-adapter-07082019.log)\r\n\r\n_Dispatch router log:_\r\n```\r\n2019-08-07 07:15:39.075347 +0000 SERVER (info) [C389] Connection to eclipse-hono-artemis:5671 failed: amqp:connection:framing-error SSL Failure: error:1416F086:SSL routines:tls_process_server_certificate:certificate verify failed\r\n2019-08-07 07:15:39.274036 +0000 ROUTER (info) [C43][L7] Link attached: dir=in source={<none> expire:sess outcomes:@PN_SYMBOL[:\"amqp:accepted:list\", :\"amqp:rejected:list\", :\"amqp:released:list\", :\"amqp:modified:list\"]} target={event/DEFAULT_TENANT expire:sess}\r\n2019-08-07 07:15:39.279005 +0000 ROUTER (info) [C43][L7] Link detached: del=0 presett=0 psdrop=0 acc=0 rej=0 rel=0 mod=0 delay1=0 delay10=0\r\n2019-08-07 07:15:39.457679 +0000 ROUTER (info) [C43][L8] Link attached: dir=in source={<none> expire:sess outcomes:@PN_SYMBOL[:\"amqp:accepted:list\", :\"amqp:rejected:list\", :\"amqp:released:list\", :\"amqp:modified:list\"]} target={event/DEFAULT_TENANT expire:sess}\r\n2019-08-07 07:15:39.466458 +0000 ROUTER (info) [C43][L8] Link detached: del=0 presett=0 psdrop=0 acc=0 rej=0 rel=0 mod=0 delay1=0 delay10=0\r\n2019-08-07 07:15:39.806045 +0000 SERVER (info) enabling remote authentication service eclipse-hono-service-auth:5671\r\n```\r\n\r\n\r\n\r\n", "url": "https://github.com/eclipse/hono/issues/1430", "user": "kaniyan", "labels": ["bug"], "created": "2019-08-07 07:26:36", "closed": "2019-08-07 13:21:16", "commits": {"26b56976a692db91be32a07cb935771b494e1b00": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "26b56976a692db91be32a07cb935771b494e1b00", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["aa495cc6caff68bfab545ce210c53fb61e8edbb3"], "nameRev": "26b56976a692db91be32a07cb935771b494e1b00 tags/1.0-M7~45", "commitMessage": "[#1430] Fix failure to connect to Artemis broker.\n\nThe Dispatch Router has been configured to no longer verify the hostname\nagainst the server certificate when connecting to the Artemis broker.\n\nThis has become necessary because the service name of the Artemis broker\nnow also contains the Helm release name.\n\nFixes #1430\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-08-07 15:20:40", "authoredDateTime": "2019-08-07 15:20:40", "commitGitStats": [{"filePath": "deploy/src/main/deploy/helm/templates/dispatch-router/config/qdrouterd-with-broker.yaml", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["26b56976a692db91be32a07cb935771b494e1b00"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["deploy/src/main/deploy/helm/templates/dispatch-router/config/qdrouterd-with-broker.yaml"]}, {"title": "Can't assert registration on registry based on BaseRegistrationService", "body": "A device registry implementation based on the deprecated `BaseRegistrationService` class doesn't process invocations of the `assertRegistration` method.\r\n\r\nThere is only a timeout when waiting for the response:\r\n````\r\n2019-07-30 08:24:05.199 [vert.x-eventloop-thread-0] DEBUG o.e.h.s.r.RegistrationAmqpEndpoint - error processing request [resource: registration/thealthcheck0, op: assert]: Timed out after waiting 3000(ms) for a reply. address: __vertx.reply.222, repliedAddress: registration.in\r\n````", "url": "https://github.com/eclipse/hono/issues/1415", "user": "calohmn", "labels": ["Device Registry", "bug"], "created": "2019-07-30 13:20:06", "closed": "2019-07-30 13:21:45", "commits": {"4c25583bd255443331abef095c68396c7ed8d5c6": {"commitGHEventType": "referenced", "commitUser": "calohmn"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "4c25583bd255443331abef095c68396c7ed8d5c6", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["b84fa78cc3ee33cdf43877035e1e4b802a95bfab"], "nameRev": "4c25583bd255443331abef095c68396c7ed8d5c6 tags/1.0-M7~60", "commitMessage": "[#1415] Fix service.getDevice() not doing anything.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch-si.com>\n", "commitDateTime": "2019-07-30 15:20:31", "authoredDateTime": "2019-07-30 15:20:31", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/registration/BaseRegistrationService.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseRegistrationService.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.registration.BaseRegistrationService.1.getDevice(java.lang.String,java.lang.String,io.vertx.core.Handler)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4c25583bd255443331abef095c68396c7ed8d5c6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service/registration"], "changesInPackagesSPOON": ["org.eclipse.hono.service.registration.BaseRegistrationService.1.getDevice(java.lang.String,java.lang.String,io.vertx.core.Handler)"]}, {"title": "Example Device Registry fails to return all Tenant information", "body": "When registering a new tenant with resource limits and a minimum message size, this information is not included in the body of the response when retrieving the tenant again.\r\n\r\nTo reproduce:\r\n```sh\r\ncurl -i -H \"content-type: application/json\" --data-binary '{\r\n  \"adapters\" : [ {\r\n    \"type\" : \"hono-http\",\r\n    \"enabled\" : true,\r\n    \"device-authentication-required\" : true\r\n  }, {\r\n    \"type\" : \"hono-mqtt\",\r\n    \"enabled\" : true,\r\n    \"device-authentication-required\" : true\r\n  }, {\r\n    \"type\" : \"custom\",\r\n    \"enabled\" : false,\r\n    \"ext\" : {\r\n      \"options\" : {\r\n        \"maxInstances\" : 4\r\n      }\r\n    }\r\n  } ],\r\n  \"enabled\" : true,\r\n  \"ext\" : {\r\n    \"plan\" : \"unlimited\"\r\n  },\r\n  \"minimum-message-size\" : 2048,\r\n  \"resource-limits\" : {\r\n    \"max-connections\" : 1000\r\n  }\r\n}' http://hono.eclipse.org:28080/v1/tenants\r\n```\r\n\r\nthen GET the newly created tenant\r\n```sh\r\ncurl -i http://hono.eclipse.org:28080/tenants/$tenantId\r\n\r\n{\r\n  \"enabled\":true,\r\n  \"limits\": {\r\n    \"max-connections\":1000\r\n  },\r\n  \"ext\": {\r\n    \"plan\":\"unlimited\"\r\n  },\r\n  \"adapters\": [{\r\n    \"type\": \"custom\",\r\n    \"enabled\":false,\r\n    \"ext\": {\r\n      \"options\": {\r\n        \"maxInstances\": 4\r\n      }\r\n    },\r\n    \"device-authentication-required\": true\r\n  }, {\r\n    \"type\": \"hono-mqtt\",\r\n    \"enabled\": true,\r\n    \"device-authentication-required\": true\r\n  },{\r\n    \"type\": \"hono-http\",\r\n    \"enabled\": true,\r\n    \"device-authentication-required\": true\r\n  }]\r\n}\r\n```\r\n", "url": "https://github.com/eclipse/hono/issues/1412", "user": "sophokles73", "labels": ["Device Registry", "Management API", "bug"], "created": "2019-07-29 08:29:06", "closed": "2019-07-30 12:29:46", "commits": {"596636996fed2c0e3d3492895c9227e6bd38d3e5": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "f6ca7dc6c6e7d764029fc415e7f43a862bf74f08": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "596636996fed2c0e3d3492895c9227e6bd38d3e5", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["2a917ea9eb076d7a5db06e1d85942d7737f6a215"], "nameRev": "596636996fed2c0e3d3492895c9227e6bd38d3e5 tags/1.0-M7~65", "commitMessage": "[#1412] Use \"resource-limits\" property name in Tenant Management.\n\nThe Tenant API already defines the \"resource-limits\" property so there\nis no reason to call it differently in the Management API.\nInclude resource limits in test cases checking payload compatibility.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-07-29 16:25:16", "authoredDateTime": "2019-07-29 13:24:10", "commitGitStats": [{"filePath": "core/src/main/java/org/eclipse/hono/util/RegistryManagementConstants.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/management/tenant/Tenant.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/management/tenant/TenantTest.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/tenant/AbstractTenantServiceTest.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry/FileBasedTenantService.java", "insertions": 13, "deletions": 4, "lines": 17}, {"filePath": "site/documentation/content/api/management/device-registry-v1.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "site/documentation/static/latest/api/device-registry-v1.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/registry/TenantHttpIT.java", "insertions": 80, "deletions": 62, "lines": 142}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RegistryManagementConstants.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.RegistryManagementConstants", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Tenant.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.tenant.Tenant", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.management.tenant.Tenant.getLimits()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.management.tenant.Tenant.setLimits(org.eclipse.hono.service.management.tenant.ResourceLimits)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TenantTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.tenant.TenantTest.testDecodeLimits()", "TOT": 9, "UPD": 5, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.management.tenant.TenantTest.testDecodeResourceLimits()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractTenantServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.tenant.AbstractTenantServiceTest.testGetTenantSucceedsForExistingTenant(io.vertx.junit5.VertxTestContext)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "FileBasedTenantService.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedTenantService.convertTenantObject(org.eclipse.hono.util.TenantObject)", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 4}]}, {"spoonFilePath": "TenantHttpIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.registry.TenantHttpIT", "TOT": 9, "UPD": 6, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.TenantHttpIT.removeTenant(io.vertx.ext.unit.TestContext)", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.tests.registry.TenantHttpIT.tearDown(io.vertx.ext.unit.TestContext)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.TenantHttpIT.testAddTenantSucceeds(io.vertx.ext.unit.TestContext)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.TenantHttpIT.testAddTenantRejectsDuplicateRegistration(io.vertx.ext.unit.TestContext)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.TenantHttpIT.testAddTenantFailsForWrongContentType(io.vertx.ext.unit.TestContext)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.TenantHttpIT.testAddTenantSucceedsForEmptyBody(io.vertx.ext.unit.TestContext)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.TenantHttpIT.testUpdateTenantSucceeds(io.vertx.ext.unit.TestContext)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.tests.registry.TenantHttpIT.testUpdateTenantFailsForNonExistingTenant(io.vertx.ext.unit.TestContext)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.TenantHttpIT.testRemoveTenantSucceeds(io.vertx.ext.unit.TestContext)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.TenantHttpIT.testRemoveTenantFailsForNonExistingTenant(io.vertx.ext.unit.TestContext)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.TenantHttpIT.testGetAddedTenant(io.vertx.ext.unit.TestContext)", "TOT": 10, "UPD": 3, "INS": 0, "MOV": 4, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.tests.registry.TenantHttpIT.testAddTenantFailsForMalformedTrustConfiguration(io.vertx.ext.unit.TestContext)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.TenantHttpIT.setUpClient(io.vertx.ext.unit.TestContext)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.tests.registry.TenantHttpIT.buildTenantPayload()", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.tests.registry.TenantHttpIT.setUp(org.junit.jupiter.api.TestInfo)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.TenantHttpIT.testGetAddedTenant(io.vertx.junit5.VertxTestContext)", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.TenantHttpIT.testUpdateTenantSucceeds(io.vertx.junit5.VertxTestContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "f6ca7dc6c6e7d764029fc415e7f43a862bf74f08", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["596636996fed2c0e3d3492895c9227e6bd38d3e5"], "nameRev": "f6ca7dc6c6e7d764029fc415e7f43a862bf74f08 tags/1.0-M7~64", "commitMessage": "[#1412] Fix mapping of minimum message size property.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-07-29 16:25:16", "authoredDateTime": "2019-07-29 12:32:39", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/management/tenant/Adapter.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/management/tenant/ResourceLimits.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/tenant/AbstractTenantServiceTest.java", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry/FileBasedTenantService.java", "insertions": 11, "deletions": 3, "lines": 14}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/CrudHttpClient.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/registry/TenantHttpIT.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "tests/src/test/resources/logback-test.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Adapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.tenant.Adapter", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ResourceLimits.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.tenant.ResourceLimits", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AbstractTenantServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.tenant.AbstractTenantServiceTest.testGetTenantSucceedsForExistingTenant(io.vertx.junit5.VertxTestContext)", "TOT": 5, "UPD": 2, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "FileBasedTenantService.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedTenantService.convertTenantObject(org.eclipse.hono.util.TenantObject)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedTenantService.get(java.lang.String,io.vertx.core.Handler)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedTenantService.get(java.lang.String,io.opentracing.Span,io.vertx.core.Handler)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CrudHttpClient.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.CrudHttpClient.delete(io.vertx.core.http.RequestOptions,java.util.function.Predicate)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TenantHttpIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.registry.TenantHttpIT.testGetAddedTenant(io.vertx.junit5.VertxTestContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["596636996fed2c0e3d3492895c9227e6bd38d3e5", "f6ca7dc6c6e7d764029fc415e7f43a862bf74f08"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 45, "deletions": 20, "lines": 65, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 103, "UPD": 39, "INS": 32, "MOV": 17, "DEL": 15, "spoonFilesChanged": 7, "spoonMethodsChanged": 28}, "statsSkippedReason": "", "changesInPackagesGIT": ["services/device-registry/src/main/java/org/eclipse/hono/deviceregistry", "core/src/main/java/org/eclipse/hono/util", "site/documentation/content/api/management/device-registry-v1.yaml", "site/documentation/static/latest/api/device-registry-v1.yaml", "service-base/src/main/java/org/eclipse/hono/service/management/tenant"], "changesInPackagesSPOON": ["org.eclipse.hono.deviceregistry.FileBasedTenantService.convertTenantObject(org.eclipse.hono.util.TenantObject)", "org.eclipse.hono.tests.registry.TenantHttpIT.testGetAddedTenant(io.vertx.junit5.VertxTestContext)", "org.eclipse.hono.tests.registry.TenantHttpIT.testUpdateTenantFailsForNonExistingTenant(io.vertx.ext.unit.TestContext)", "org.eclipse.hono.service.management.tenant.Tenant", "org.eclipse.hono.tests.registry.TenantHttpIT.removeTenant(io.vertx.ext.unit.TestContext)", "org.eclipse.hono.tests.registry.TenantHttpIT.testUpdateTenantSucceeds(io.vertx.ext.unit.TestContext)", "org.eclipse.hono.tests.CrudHttpClient.delete(io.vertx.core.http.RequestOptions,java.util.function.Predicate)", "org.eclipse.hono.tests.registry.TenantHttpIT.setUpClient(io.vertx.ext.unit.TestContext)", "org.eclipse.hono.tests.registry.TenantHttpIT.testAddTenantRejectsDuplicateRegistration(io.vertx.ext.unit.TestContext)", "org.eclipse.hono.deviceregistry.FileBasedTenantService.get(java.lang.String,io.vertx.core.Handler)", "org.eclipse.hono.deviceregistry.FileBasedTenantService.get(java.lang.String,io.opentracing.Span,io.vertx.core.Handler)", "org.eclipse.hono.util.RegistryManagementConstants", "org.eclipse.hono.tests.registry.TenantHttpIT", "org.eclipse.hono.tests.registry.TenantHttpIT.testAddTenantSucceeds(io.vertx.ext.unit.TestContext)", "org.eclipse.hono.service.management.tenant.ResourceLimits", "org.eclipse.hono.service.management.tenant.Tenant.setLimits(org.eclipse.hono.service.management.tenant.ResourceLimits)", "org.eclipse.hono.tests.registry.TenantHttpIT.testAddTenantFailsForWrongContentType(io.vertx.ext.unit.TestContext)", "org.eclipse.hono.tests.registry.TenantHttpIT.testRemoveTenantFailsForNonExistingTenant(io.vertx.ext.unit.TestContext)", "org.eclipse.hono.service.management.tenant.Adapter", "org.eclipse.hono.tests.registry.TenantHttpIT.testAddTenantSucceedsForEmptyBody(io.vertx.ext.unit.TestContext)", "org.eclipse.hono.tests.registry.TenantHttpIT.buildTenantPayload()", "org.eclipse.hono.service.management.tenant.Tenant.getLimits()", "org.eclipse.hono.tests.registry.TenantHttpIT.tearDown(io.vertx.ext.unit.TestContext)", "org.eclipse.hono.tests.registry.TenantHttpIT.setUp(org.junit.jupiter.api.TestInfo)", "org.eclipse.hono.tests.registry.TenantHttpIT.testRemoveTenantSucceeds(io.vertx.ext.unit.TestContext)", "org.eclipse.hono.tests.registry.TenantHttpIT.testGetAddedTenant(io.vertx.ext.unit.TestContext)", "org.eclipse.hono.tests.registry.TenantHttpIT.testAddTenantFailsForMalformedTrustConfiguration(io.vertx.ext.unit.TestContext)", "org.eclipse.hono.tests.registry.TenantHttpIT.testUpdateTenantSucceeds(io.vertx.junit5.VertxTestContext)"]}, {"title": "Metrics data are not being recorded in the Prometheus back-end.", "body": "Metrics data are not being recorded in the Prometheus back-end. Hono is built from the _master_ branch and deployed using _Helm charts_ in _Kubernetes clusters_ spun by _minikube_ locally.\r\n\r\n![image](https://user-images.githubusercontent.com/18659982/61540434-e698a080-aa3d-11e9-9a60-baff96ed7fe1.png)\r\n", "url": "https://github.com/eclipse/hono/issues/1388", "user": "kaniyan", "labels": ["Deployment", "Metrics", "bug"], "created": "2019-07-19 14:10:24", "closed": "2019-07-23 17:39:35", "commits": {"f3dc177d4de164b0231478b7e92296016916b5ff": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "f3dc177d4de164b0231478b7e92296016916b5ff", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["25db8d50971f559cf9128c03e1f6624482027192"], "nameRev": "f3dc177d4de164b0231478b7e92296016916b5ff tags/1.0-M6~20", "commitMessage": "[#1388] Configure Prometheus to use HTTPS for scraping components.\n\nFixes #1388\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-07-23 19:38:47", "authoredDateTime": "2019-07-23 19:38:47", "commitGitStats": [{"filePath": "deploy/src/main/deploy/helm/templates/prometheus/instance.yaml", "insertions": 4, "deletions": 1, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f3dc177d4de164b0231478b7e92296016916b5ff"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 1, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["deploy/src/main/deploy/helm/templates/prometheus/instance.yaml"]}, {"title": "Health check configuration values are not picked up from environment variables", "body": "When providing settings for the health check server through environment variables (i.e. `HONO_HEALTH_CHECK_INSECURE_PORT`) the values are not picked up.", "url": "https://github.com/eclipse/hono/issues/1386", "user": "jbtrystram", "labels": ["Metrics", "bug"], "created": "2019-07-19 08:06:25", "closed": "2019-07-24 12:54:39", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Cannot retrieve example credentials from Device Registry", "body": "Another issue occurs when trying to retrieve the example credentials for device 4711 via the new management API:\r\n````\r\njava.lang.IllegalArgumentException: Expected an ISO 8601 formatted date time\r\n at [Source: UNKNOWN; line: -1, column: -1] (through reference chain: org.eclipse.hono.service.management.credentials.PasswordCredential[\"secrets\"]->java.util.ArrayList[0]->org.eclipse.hono.service.management.credentials.PasswordSecret[\"not-before\"])\r\n  at com.fasterxml.jackson.databind.ObjectMapper._convert(ObjectMapper.java:3750)\r\n  at com.fasterxml.jackson.databind.ObjectMapper.convertValue(ObjectMapper.java:3668)\r\n  at io.vertx.core.json.JsonObject.mapTo(JsonObject.java:106)\r\n  at org.eclipse.hono.deviceregistry.FileBasedCredentialsService.get(FileBasedCredentialsService.java:662)\r\n  at org.eclipse.hono.deviceregistry.FileBasedDeviceBackend.get(FileBasedDeviceBackend.java:203)\r\n  at org.eclipse.hono.service.management.credentials.EventBusCredentialsManagementAdapter.processGetRequest(EventBusCredentialsManagementAdapter.java:214)\r\n  at org.eclipse.hono.service.management.credentials.EventBusCredentialsManagementAdapter.processRequest(EventBusCredentialsManagementAdapter.java:66)\r\n  at org.eclipse.hono.service.EventBusService.processRequestMessage(EventBusService.java:160)\r\n  at io.vertx.core.eventbus.impl.HandlerRegistration.deliver(HandlerRegistration.java:276)\r\n  at io.vertx.core.eventbus.impl.HandlerRegistration.handle(HandlerRegistration.java:254)\r\n  at io.vertx.core.eventbus.impl.EventBusImpl$InboundDeliveryContext.next(EventBusImpl.java:578)\r\n  at io.vertx.core.eventbus.impl.EventBusImpl.lambda$deliverToHandler$5(EventBusImpl.java:537)\r\n  at io.vertx.core.impl.ContextImpl.executeTask(ContextImpl.java:320)\r\n  at io.vertx.core.impl.EventLoopContext.lambda$executeAsync$0(EventLoopContext.java:38)\r\n  at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n  at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)\r\n  at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:495)\r\n  at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:905)\r\n  at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n  at java.base/java.lang.Thread.run(Thread.java:834)\r\nCaused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Expected an ISO 8601 formatted date time\r\n at [Source: UNKNOWN; line: -1, column: -1] (through reference chain: org.eclipse.hono.service.management.credentials.PasswordCredential[\"secrets\"]->java.util.ArrayList[0]->org.eclipse.hono.service.management.credentials.PasswordSecret[\"not-before\"])\r\n  at io.vertx.core.json.Json$InstantDeserializer.deserialize(Json.java:303)\r\n  at io.vertx.core.json.Json$InstantDeserializer.deserialize(Json.java:296)\r\n  at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:127)\r\n  at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:288)\r\n  at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\r\n  at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:286)\r\n  at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:245)\r\n  at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:27)\r\n  at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:127)\r\n  at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:288)\r\n  at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:189)\r\n  at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:161)\r\n  at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:130)\r\n  at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:97)\r\n  at com.fasterxml.jackson.databind.deser.AbstractDeserializer.deserializeWithType(AbstractDeserializer.java:254)\r\n  at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:68)\r\n  at com.fasterxml.jackson.databind.ObjectMapper._convert(ObjectMapper.java:3745)\r\n  ... 19 common frames omitted\r\n````\r\nThis points to date entries like `2017-05-01T14:00:00+01:00` in `credentials.json` causing such errors - only UTC (`2017-05-01T14:00:00Z`) being accepted there.\r\n", "url": "https://github.com/eclipse/hono/issues/1378", "user": "sophokles73", "labels": ["Device Registry", "bug"], "created": "2019-07-18 09:55:58", "closed": "2019-07-23 06:39:21", "commits": {"54187ae25537079c44723211ece4623d0b09b7d3": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "54187ae25537079c44723211ece4623d0b09b7d3", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["d03471aeb8359c4dbd836e078c9eac8fb690721e"], "nameRev": "54187ae25537079c44723211ece4623d0b09b7d3 tags/1.0-M6~28", "commitMessage": "[#1378] Properly handle ISO date time with offset in registry.\n\nUse DateTimeFormatter to parse and format not-before and not-after\ninstants. The default serializer that comes with Jackson cannot handle\ntime offsets.\n\nFixes #1378\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-07-23 08:17:46", "authoredDateTime": "2019-07-23 08:17:17", "commitGitStats": [{"filePath": "deploy/src/main/deploy/example-credentials.json", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "deploy/src/main/sandbox/sandbox-credentials.json", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonSecret.java", "insertions": 111, "deletions": 9, "lines": 120}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/management/credentials/SecretsTest.java", "insertions": 25, "deletions": 0, "lines": 25}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommonSecret.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.credentials.CommonSecret", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.CommonSecret.setNotBefore(java.time.Instant)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.CommonSecret.setNotAfter(java.time.Instant)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.CommonSecret.getNotBeforeAsString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.CommonSecret.getNotAfterAsString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.CommonSecret.getNotBefore()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.CommonSecret.setNotBefore(java.lang.String)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.CommonSecret.getNotAfter()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.CommonSecret.setNotAfter(java.lang.String)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SecretsTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.credentials.SecretsTest.testEncodePskSecret()", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.SecretsTest.testDecodeGeneric()", "TOT": 6, "UPD": 0, "INS": 5, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["54187ae25537079c44723211ece4623d0b09b7d3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 119, "deletions": 17, "lines": 136, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 33, "UPD": 2, "INS": 17, "MOV": 12, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service/management/credentials", "deploy/src/main/sandbox/sandbox-credentials.json", "deploy/src/main/deploy/example-credentials.json"], "changesInPackagesSPOON": ["org.eclipse.hono.service.management.credentials.CommonSecret.getNotAfter()", "org.eclipse.hono.service.management.credentials.CommonSecret.getNotBeforeAsString()", "org.eclipse.hono.service.management.credentials.CommonSecret.setNotBefore(java.lang.String)", "org.eclipse.hono.service.management.credentials.CommonSecret.setNotAfter(java.lang.String)", "org.eclipse.hono.service.management.credentials.CommonSecret.getNotBefore()", "org.eclipse.hono.service.management.credentials.CommonSecret", "org.eclipse.hono.service.management.credentials.CommonSecret.setNotBefore(java.time.Instant)", "org.eclipse.hono.service.management.credentials.CommonSecret.setNotAfter(java.time.Instant)", "org.eclipse.hono.service.management.credentials.CommonSecret.getNotAfterAsString()"]}, {"title": "Creating a tenant or device with a generated ID refuses an empty body", "body": "When I want to ceate a tenant or a device using the ID generation feature from the device registry, i would expect it to work even if the request body is empty. A workaround is to provide an empty JsonObject in the request body.", "url": "https://github.com/eclipse/hono/issues/1370", "user": "jbtrystram", "labels": ["Device Registry", "Management API", "bug"], "created": "2019-07-17 09:53:50", "closed": "2019-07-18 12:43:07", "commits": {"833d4e6d5100fcfd7f7ab02787f25ef9e7b760e3": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "833d4e6d5100fcfd7f7ab02787f25ef9e7b760e3", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["417fd1bd465abc60336f08fff4261e0377d5d6ab"], "nameRev": "833d4e6d5100fcfd7f7ab02787f25ef9e7b760e3 tags/1.0-M6~40", "commitMessage": "[#1370] Allow empty request body when creating tenant or device with generated id\n\nFixes #1370 \r\n\r\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>", "commitDateTime": "2019-07-18 14:43:06", "authoredDateTime": "2019-07-18 14:43:06", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/http/AbstractHttpEndpoint.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/management/device/DeviceManagementHttpEndpoint.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/management/tenant/TenantManagementHttpEndpoint.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/registry/DeviceRegistrationHttpIT.java", "insertions": 15, "deletions": 3, "lines": 18}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/registry/TenantHttpIT.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractHttpEndpoint.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.http.AbstractHttpEndpoint.getDefaultResponseHandler(io.vertx.ext.web.RoutingContext,java.util.function.Predicate,io.vertx.core.Handler)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.http.AbstractHttpEndpoint.getDefaultResponseHandler(io.vertx.ext.web.RoutingContext,java.util.function.Predicate,java.util.function.BiConsumer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.http.AbstractHttpEndpoint.extractOptionalJsonPayload(io.vertx.ext.web.RoutingContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DeviceManagementHttpEndpoint.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.device.DeviceManagementHttpEndpoint.addRoutes(io.vertx.ext.web.Router)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}]}, {"spoonFilePath": "TenantManagementHttpEndpoint.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.tenant.TenantManagementHttpEndpoint.addRoutes(io.vertx.ext.web.Router)", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 3}]}, {"spoonFilePath": "DeviceRegistrationHttpIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceRegistrationHttpIT.testAddDeviceFailsForMissingBody(io.vertx.ext.unit.TestContext)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.registry.DeviceRegistrationHttpIT.testAddDeviceSucceedsForEmptyBodyAndContentType(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TenantHttpIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.registry.TenantHttpIT.testAddTenantFailsForEmptyBody(io.vertx.ext.unit.TestContext)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["833d4e6d5100fcfd7f7ab02787f25ef9e7b760e3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 21, "deletions": 9, "lines": 30, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 20, "UPD": 6, "INS": 2, "MOV": 6, "DEL": 6, "spoonFilesChanged": 5, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service/management/tenant", "service-base/src/main/java/org/eclipse/hono/service/http", "service-base/src/main/java/org/eclipse/hono/service/management/device"], "changesInPackagesSPOON": ["org.eclipse.hono.service.management.tenant.TenantManagementHttpEndpoint.addRoutes(io.vertx.ext.web.Router)", "org.eclipse.hono.service.http.AbstractHttpEndpoint.getDefaultResponseHandler(io.vertx.ext.web.RoutingContext,java.util.function.Predicate,java.util.function.BiConsumer)", "org.eclipse.hono.tests.registry.DeviceRegistrationHttpIT.testAddDeviceSucceedsForEmptyBodyAndContentType(io.vertx.ext.unit.TestContext)", "org.eclipse.hono.tests.registry.TenantHttpIT.testAddTenantFailsForEmptyBody(io.vertx.ext.unit.TestContext)", "org.eclipse.hono.service.http.AbstractHttpEndpoint.extractOptionalJsonPayload(io.vertx.ext.web.RoutingContext)", "org.eclipse.hono.tests.registry.DeviceRegistrationHttpIT.testAddDeviceFailsForMissingBody(io.vertx.ext.unit.TestContext)", "org.eclipse.hono.service.management.device.DeviceManagementHttpEndpoint.addRoutes(io.vertx.ext.web.Router)", "org.eclipse.hono.service.http.AbstractHttpEndpoint.getDefaultResponseHandler(io.vertx.ext.web.RoutingContext,java.util.function.Predicate,io.vertx.core.Handler)"]}, {"title": "Device registry doesn't start without a health check port configured", "body": "The documentation specifies this property as not mandatory. Should we update the doc or is this a bug ?\r\n\r\nedit : also , providing a value with an environment variable (i.e. `HONO_HEALTH_CHECK_PORT` do not work anymore)", "url": "https://github.com/eclipse/hono/issues/1369", "user": "jbtrystram", "labels": ["Metrics", "bug"], "created": "2019-07-17 09:26:19", "closed": "2019-07-23 07:17:58", "commits": {"d03471aeb8359c4dbd836e078c9eac8fb690721e": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "d03471aeb8359c4dbd836e078c9eac8fb690721e", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["bfc19b8667c15ffddb0b076bcb1cd475fb8ecee8"], "nameRev": "d03471aeb8359c4dbd836e078c9eac8fb690721e tags/1.0-M6~29", "commitMessage": "[#1369] use a default healtcheck port of 8088 for the healthCheck server.\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>\n", "commitDateTime": "2019-07-22 17:17:00", "authoredDateTime": "2019-07-17 16:42:02", "commitGitStats": [{"filePath": "core/src/main/java/org/eclipse/hono/config/ServerConfig.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/VertxBasedHealthCheckServer.java", "insertions": 27, "deletions": 21, "lines": 48}, {"filePath": "site/documentation/content/admin-guide/amqp-adapter-config.md", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "site/documentation/content/admin-guide/auth-server-config.md", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "site/documentation/content/admin-guide/device-registry-config.md", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "site/documentation/content/admin-guide/http-adapter-config.md", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "site/documentation/content/admin-guide/kura-adapter-config.md", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "site/documentation/content/admin-guide/mqtt-adapter-config.md", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "site/homepage/content/release-notes.md", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ServerConfig.java", "spoonMethods": []}, {"spoonFilePath": "VertxBasedHealthCheckServer.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.VertxBasedHealthCheckServer.isInsecureEndpointConfigured()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.VertxBasedHealthCheckServer.bindInsecureHttpServer()", "TOT": 11, "UPD": 2, "INS": 3, "MOV": 4, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.service.VertxBasedHealthCheckServer.bindSecureHttpServer()", "TOT": 5, "UPD": 1, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.VertxBasedHealthCheckServer.isSecureEndpointConfigured()", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 4}, {"spoonMethodName": "org.eclipse.hono.service.VertxBasedHealthCheckServer.start()", "TOT": 12, "UPD": 1, "INS": 2, "MOV": 8, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.VertxBasedHealthCheckServer", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d03471aeb8359c4dbd836e078c9eac8fb690721e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 29, "deletions": 23, "lines": 52, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 40, "UPD": 7, "INS": 9, "MOV": 15, "DEL": 9, "spoonFilesChanged": 1, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service", "core/src/main/java/org/eclipse/hono/config"], "changesInPackagesSPOON": ["org.eclipse.hono.service.VertxBasedHealthCheckServer", "org.eclipse.hono.service.VertxBasedHealthCheckServer.start()", "org.eclipse.hono.service.VertxBasedHealthCheckServer.bindInsecureHttpServer()", "org.eclipse.hono.service.VertxBasedHealthCheckServer.isSecureEndpointConfigured()", "org.eclipse.hono.service.VertxBasedHealthCheckServer.bindSecureHttpServer()", "org.eclipse.hono.service.VertxBasedHealthCheckServer.isInsecureEndpointConfigured()"]}, {"title": "Error during startup of example Device Registry", "body": "During startup of the device registry component (with the new API), there is this error in the log file:\r\n````\r\n16:20:04.024 [vert.x-eventloop-thread-0] DEBUG o.e.h.d.FileBasedRegistrationService - loading devices for tenant [DEFAULT_TENANT]\r\n16:20:04.040 [vert.x-eventloop-thread-0] DEBUG o.e.h.d.FileBasedRegistrationService - cannot load device identities from file [/var/lib/hono/device-registry/device-identities.json]: Cannot deserialize instance of `java.util.ArrayList` out of VALUE_STRING token\r\n at [Source: UNKNOWN; line: -1, column: -1] (through reference chain: org.eclipse.hono.service.management.device.Device[\"via\"])\r\n````\r\nThis points to the `via` entry in the `device-identities.json` not supporting a string value anymore but requiring an array now.", "url": "https://github.com/eclipse/hono/issues/1355", "user": "calohmn", "labels": ["Device Registry", "bug"], "created": "2019-07-15 07:57:27", "closed": "2019-07-18 13:05:41", "commits": {"ac6d3e7200e41ac9fd7dfc8c6694b1fa04148121": {"commitGHEventType": "referenced", "commitUser": "dejanb"}, "0072f9b93601304526a48e8148618f686d3e2212": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "ea2571e857fd266e1aec1c154e8333acb88cfc09": {"commitGHEventType": "referenced", "commitUser": "dejanb"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "ac6d3e7200e41ac9fd7dfc8c6694b1fa04148121", "commitGHEventType": "referenced", "commitUser": "dejanb", "commitParents": ["c4f0e316a367b28e83822fcc7bed32de1a9dada8"], "nameRev": "ac6d3e7200e41ac9fd7dfc8c6694b1fa04148121 tags/1.0-M6~45", "commitMessage": "[#1355] Allow single string as arrays for device via property\n", "commitDateTime": "2019-07-17 13:53:29", "authoredDateTime": "2019-07-16 12:23:41", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/management/device/Device.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "services/device-registry/src/test/java/org/eclipse/hono/deviceregistry/FileBasedRegistrationServiceTest.java", "insertions": 10, "deletions": 1, "lines": 11}, {"filePath": "services/device-registry/src/test/resources/device-identities.json", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Device.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.device.Device", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FileBasedRegistrationServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedRegistrationServiceTest.testDoStartLoadsDeviceIdentities(io.vertx.junit5.VertxTestContext)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "0072f9b93601304526a48e8148618f686d3e2212", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["f31c189bfc9d8430d6d02bf264b884e75d4e026f"], "nameRev": "0072f9b93601304526a48e8148618f686d3e2212 tags/1.0-M6~38", "commitMessage": "[#1355] Change the format of credentials temporarily\n", "commitDateTime": "2019-07-18 16:14:12", "authoredDateTime": "2019-07-18 14:52:33", "commitGitStats": [{"filePath": "deploy/src/main/deploy/example-credentials.json", "insertions": 6, "deletions": 6, "lines": 12}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ea2571e857fd266e1aec1c154e8333acb88cfc09", "commitGHEventType": "referenced", "commitUser": "dejanb", "commitParents": ["1c31e209d4d3e3a32326993485c84250f6f7c597"], "nameRev": "ea2571e857fd266e1aec1c154e8333acb88cfc09 tags/1.0-M7~8", "commitMessage": "[#1355] Support datetime format with timezone offset\n", "commitDateTime": "2019-08-21 14:37:09", "authoredDateTime": "2019-07-17 17:46:59", "commitGitStats": [{"filePath": "service-base/pom.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonSecret.java", "insertions": 20, "deletions": 103, "lines": 123}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/management/credentials/CredentialsTest.java", "insertions": 10, "deletions": 4, "lines": 14}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/management/credentials/SecretsTest.java", "insertions": 35, "deletions": 3, "lines": 38}, {"filePath": "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry/FileBasedCredentialsService.java", "insertions": 12, "deletions": 2, "lines": 14}, {"filePath": "services/device-registry/src/test/java/org/eclipse/hono/deviceregistry/FileBasedCredentialsServiceTest.java", "insertions": 13, "deletions": 1, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommonSecret.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.credentials.CommonSecret.setNotAfter(java.lang.String)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.CommonSecret", "TOT": 4, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.CommonSecret.getNotBeforeAsString()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.CommonSecret.getNotBefore()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.CommonSecret.setNotBefore(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.CommonSecret.setNotBefore(java.time.Instant)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.CommonSecret.getNotAfterAsString()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.CommonSecret.getNotAfter()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.CommonSecret.setNotAfter(java.time.Instant)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "CredentialsTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.credentials.CredentialsTest.testEncodePasswordCredential()", "TOT": 6, "UPD": 1, "INS": 3, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.CredentialsTest.testDecodePasswordCredential()", "TOT": 6, "UPD": 1, "INS": 3, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "SecretsTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.management.credentials.SecretsTest.testEncodePasswordSecret1()", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.management.credentials.SecretsTest.testDateFormats()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FileBasedCredentialsService.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedCredentialsService.init(io.vertx.core.Vertx,io.vertx.core.Context)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedCredentialsService.start(io.vertx.core.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FileBasedCredentialsServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedCredentialsServiceTest.testDoStartLoadsCredentials(io.vertx.junit5.VertxTestContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ac6d3e7200e41ac9fd7dfc8c6694b1fa04148121", "0072f9b93601304526a48e8148618f686d3e2212", "ea2571e857fd266e1aec1c154e8333acb88cfc09"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 40, "deletions": 111, "lines": 151, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 31.0, "UPD": 3.0, "INS": 6.0, "MOV": 11.0, "DEL": 11.0, "spoonFilesChanged": 3, "spoonMethodsChanged": 12}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service/management/credentials", "service-base/src/main/java/org/eclipse/hono/service/management/device", "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry", "deploy/src/main/deploy/example-credentials.json"], "changesInPackagesSPOON": ["org.eclipse.hono.service.management.credentials.CommonSecret.setNotAfter(java.lang.String)", "org.eclipse.hono.service.management.device.Device", "org.eclipse.hono.service.management.credentials.CommonSecret.getNotBeforeAsString()", "org.eclipse.hono.service.management.credentials.CommonSecret.setNotBefore(java.lang.String)", "org.eclipse.hono.deviceregistry.FileBasedCredentialsService.init(io.vertx.core.Vertx,io.vertx.core.Context)", "org.eclipse.hono.service.management.credentials.CommonSecret.setNotAfter(java.time.Instant)", "org.eclipse.hono.deviceregistry.FileBasedCredentialsService.start(io.vertx.core.Future)", "org.eclipse.hono.service.management.credentials.CommonSecret.getNotBefore()", "org.eclipse.hono.service.management.credentials.CommonSecret", "org.eclipse.hono.service.management.credentials.CommonSecret.getNotAfter()", "org.eclipse.hono.service.management.credentials.CommonSecret.setNotBefore(java.time.Instant)", "org.eclipse.hono.service.management.credentials.CommonSecret.getNotAfterAsString()"]}, {"title": "Delivery outcome is always 'accepted' in northbound side while sending commands", "body": "A northbound application sends a command to a device. The protocol adapter (tried with _MQTT_ and _AMQP_ adapters) sends back a _rejected_ disposition. This information is not cascaded to the northbound application and thereby the application waits until the time out expires.   \r\n\r\n`CommandClient` implementation uses `AbstractRequestResponseClient.sendRequest(Message message, Handler<ProtonDelivery> onUpdated)` to send the AMQP messages. And the delivery state is always received as _accepted_ irrespective of the disposition sent by the protocol adapters.\r\n\r\n", "url": "https://github.com/eclipse/hono/issues/1289", "user": "kaniyan", "labels": ["C&C", "bug"], "created": "2019-06-13 16:12:40", "closed": "2019-06-26 08:41:24", "commits": {"391567db5158014a799a75e94add05275e02ecc2": {"commitGHEventType": "referenced", "commitUser": "calohmn"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "391567db5158014a799a75e94add05275e02ecc2", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["c82a01cbca178ee06ce05b0a3f057b56631985f1"], "nameRev": "391567db5158014a799a75e94add05275e02ecc2 tags/1.0-M5~53", "commitMessage": "[#1289] Disable auto-accept for command receiver links.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch-si.com>\n", "commitDateTime": "2019-06-26 10:41:23", "authoredDateTime": "2019-06-25 12:44:37", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/HonoConnection.java", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/DeviceSpecificCommandConsumer.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoConnectionImpl.java", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/TenantScopedCommandConsumer.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/CommandConsumerFactoryImplTest.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/amqp/CommandAndControlAmqpIT.java", "insertions": 93, "deletions": 0, "lines": 93}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoConnection.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.createReceiver(java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.proton.ProtonMessageHandler,int,boolean,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DeviceSpecificCommandConsumer.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.DeviceSpecificCommandConsumer.create(org.eclipse.hono.client.HonoConnection,java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoConnectionImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.createReceiver(java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.proton.ProtonMessageHandler,int,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.createReceiver(java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.proton.ProtonMessageHandler,int,boolean,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TenantScopedCommandConsumer.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.TenantScopedCommandConsumer.create(org.eclipse.hono.client.HonoConnection,java.lang.String,io.vertx.proton.ProtonMessageHandler,io.vertx.core.Handler,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicReference)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandConsumerFactoryImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.CommandConsumerFactoryImplTest.testCreateCommandConsumerSetsRemoteCloseHandler(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.CommandConsumerFactoryImplTest.testConsumerIsRecreatedOnConnectionFailure(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.CommandConsumerFactoryImplTest.testLivenessCheckLocksRecreationAttempt(io.vertx.ext.unit.TestContext)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.CommandConsumerFactoryImplTest.setUp()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.CommandConsumerFactoryImplTest.testCreateCommandConsumerFailsIfPeerRejectsLink(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.CommandConsumerFactoryImplTest.testLocalCloseRemovesCommandConsumerFromCache(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandAndControlAmqpIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.createRejectingCommandConsumer(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendCommandFailsForCommandRejectedByDevice(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["391567db5158014a799a75e94add05275e02ecc2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 42, "deletions": 1, "lines": 43, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 11, "UPD": 0, "INS": 10, "MOV": 0, "DEL": 1, "spoonFilesChanged": 5, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client", "client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.createRejectingCommandConsumer(io.vertx.ext.unit.TestContext)", "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT", "org.eclipse.hono.client.impl.HonoConnectionImpl.createReceiver(java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.proton.ProtonMessageHandler,int,io.vertx.core.Handler)", "org.eclipse.hono.tests.amqp.CommandAndControlAmqpIT.testSendCommandFailsForCommandRejectedByDevice(io.vertx.ext.unit.TestContext)", "org.eclipse.hono.client.impl.DeviceSpecificCommandConsumer.create(org.eclipse.hono.client.HonoConnection,java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.TenantScopedCommandConsumer.create(org.eclipse.hono.client.HonoConnection,java.lang.String,io.vertx.proton.ProtonMessageHandler,io.vertx.core.Handler,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicReference)", "org.eclipse.hono.client.impl.HonoConnectionImpl.createReceiver(java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.proton.ProtonMessageHandler,int,boolean,io.vertx.core.Handler)", "org.eclipse.hono.client.createReceiver(java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.proton.ProtonMessageHandler,int,boolean,io.vertx.core.Handler)"]}, {"title": "HonoConnectionImpl throws NPE", "body": "I just noticed this in the log:\r\n\r\n~~~\r\n11:49:18.669 [vert.x-eventloop-thread-0] DEBUG o.e.h.s.http.DefaultFailureHandler - unexpected internal failure\r\njava.lang.NullPointerException: null\r\n~~~\r\n\r\n<details>\r\n<summary>Full stack trace</summary>\r\n\r\n~~~\r\n11:49:18.669 [vert.x-eventloop-thread-0] DEBUG o.e.h.s.http.DefaultFailureHandler - unexpected internal failure\r\njava.lang.NullPointerException: null\r\n\tat org.eclipse.hono.client.impl.HonoConnectionImpl.lambda$createReceiver$19(HonoConnectionImpl.java:685)\r\n\tat org.eclipse.hono.util.HonoProtonHelper.executeOrRunOnContext(HonoProtonHelper.java:183)\r\n\tat org.eclipse.hono.client.impl.HonoConnectionImpl.executeOrRunOnContext(HonoConnectionImpl.java:226)\r\n\tat org.eclipse.hono.client.impl.HonoConnectionImpl.createReceiver(HonoConnectionImpl.java:684)\r\n\tat org.eclipse.hono.client.impl.HonoConnectionImpl.createReceiver(HonoConnectionImpl.java:666)\r\n\tat org.eclipse.hono.client.impl.AbstractRequestResponseClient.createReceiver(AbstractRequestResponseClient.java:369)\r\n\tat org.eclipse.hono.client.impl.AbstractRequestResponseClient.createLinks(AbstractRequestResponseClient.java:351)\r\n\tat org.eclipse.hono.client.impl.CredentialsClientImpl.create(CredentialsClientImpl.java:158)\r\n\tat org.eclipse.hono.client.impl.CredentialsClientFactoryImpl.lambda$getOrCreateCredentialsClient$1(CredentialsClientFactoryImpl.java:69)\r\n\tat org.eclipse.hono.client.impl.CachingClientFactory.getOrCreateClient(CachingClientFactory.java:173)\r\n\tat org.eclipse.hono.client.impl.CachingClientFactory.getOrCreateClient(CachingClientFactory.java:146)\r\n\tat org.eclipse.hono.client.impl.CredentialsClientFactoryImpl.lambda$getOrCreateCredentialsClient$2(CredentialsClientFactoryImpl.java:67)\r\n\tat org.eclipse.hono.util.HonoProtonHelper.executeOrRunOnContext(HonoProtonHelper.java:183)\r\n\tat org.eclipse.hono.client.impl.HonoConnectionImpl.executeOrRunOnContext(HonoConnectionImpl.java:226)\r\n\tat org.eclipse.hono.client.impl.CredentialsClientFactoryImpl.getOrCreateCredentialsClient(CredentialsClientFactoryImpl.java:66)\r\n\tat org.eclipse.hono.service.auth.device.CredentialsApiAuthProvider.getCredentialsClient(CredentialsApiAuthProvider.java:80)\r\n\tat org.eclipse.hono.service.auth.device.CredentialsApiAuthProvider.getCredentialsForDevice(CredentialsApiAuthProvider.java:100)\r\n\tat org.eclipse.hono.service.auth.device.CredentialsApiAuthProvider.authenticate(CredentialsApiAuthProvider.java:122)\r\n\tat org.eclipse.hono.service.auth.device.CredentialsApiAuthProvider.authenticate(CredentialsApiAuthProvider.java:222)\r\n\tat io.vertx.ext.web.handler.impl.AuthHandlerImpl.lambda$handle$2(AuthHandlerImpl.java:150)\r\n\tat io.vertx.ext.web.handler.impl.ChainAuthHandlerImpl.lambda$iterate$0(ChainAuthHandlerImpl.java:94)\r\n\tat org.eclipse.hono.service.http.HonoBasicAuthHandler.lambda$parseCredentials$0(HonoBasicAuthHandler.java:92)\r\n\tat io.vertx.ext.web.handler.impl.BasicAuthHandlerImpl.lambda$parseCredentials$0(BasicAuthHandlerImpl.java:80)\r\n\tat io.vertx.ext.web.handler.impl.AuthorizationAuthHandler.parseAuthorization(AuthorizationAuthHandler.java:97)\r\n\tat io.vertx.ext.web.handler.impl.BasicAuthHandlerImpl.parseCredentials(BasicAuthHandlerImpl.java:53)\r\n\tat org.eclipse.hono.service.http.HonoBasicAuthHandler.parseCredentials(HonoBasicAuthHandler.java:85)\r\n\tat io.vertx.ext.web.handler.impl.ChainAuthHandlerImpl.iterate(ChainAuthHandlerImpl.java:72)\r\n\tat io.vertx.ext.web.handler.impl.ChainAuthHandlerImpl.parseCredentials(ChainAuthHandlerImpl.java:58)\r\n\tat io.vertx.ext.web.handler.impl.AuthHandlerImpl.handle(AuthHandlerImpl.java:129)\r\n\tat io.vertx.ext.web.handler.impl.AuthHandlerImpl.handle(AuthHandlerImpl.java:39)\r\n\tat io.vertx.ext.web.impl.RouteImpl.handleContext(RouteImpl.java:227)\r\n\tat io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:121)\r\n\tat io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:134)\r\n\tat io.vertx.ext.web.handler.impl.BodyHandlerImpl$BHandler.doEnd(BodyHandlerImpl.java:296)\r\n\tat io.vertx.ext.web.handler.impl.BodyHandlerImpl$BHandler.end(BodyHandlerImpl.java:276)\r\n\tat io.vertx.ext.web.handler.impl.BodyHandlerImpl.lambda$handle$0(BodyHandlerImpl.java:87)\r\n\tat io.vertx.core.http.impl.HttpServerRequestImpl.doEnd(HttpServerRequestImpl.java:537)\r\n\tat io.vertx.core.http.impl.HttpServerRequestImpl.handleEnd(HttpServerRequestImpl.java:526)\r\n\tat io.vertx.core.http.impl.Http1xServerConnection.handleEnd(Http1xServerConnection.java:167)\r\n\tat io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:136)\r\n\tat io.vertx.core.net.impl.ConnectionBase.handleRead(ConnectionBase.java:390)\r\n\tat io.vertx.core.impl.ContextImpl.executeTask(ContextImpl.java:320)\r\n\tat io.vertx.core.impl.EventLoopContext.execute(EventLoopContext.java:43)\r\n\tat io.vertx.core.impl.ContextImpl.executeFromIO(ContextImpl.java:188)\r\n\tat io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:174)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:102)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1429)\r\n\tat io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1199)\r\n\tat io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1243)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:579)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:496)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n~~~\r\n\r\n</details>", "url": "https://github.com/eclipse/hono/issues/1286", "user": "ctron", "labels": ["Client", "bug"], "created": "2019-06-13 11:52:59", "closed": "2019-06-19 08:30:04", "commits": {"0eb2a5d45fc82e66ba859fb1c0c5671b7d4d0a64": {"commitGHEventType": "referenced", "commitUser": "calohmn"}, "605dd50e0d436ad82b0898bcf10ee6c67817181d": {"commitGHEventType": "referenced", "commitUser": "calohmn"}, "d3ee2915f902d8c5b6267f991d11e5038849e3be": {"commitGHEventType": "referenced", "commitUser": "calohmn"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "0eb2a5d45fc82e66ba859fb1c0c5671b7d4d0a64", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["300510f73b0c1a1088ac1a3a56138c1548e5ab04"], "nameRev": "0eb2a5d45fc82e66ba859fb1c0c5671b7d4d0a64 tags/1.0-M5~91", "commitMessage": "[#1286] Prevent NPE by using different consumer creation hook.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch-si.com>\n", "commitDateTime": "2019-06-18 11:38:12", "authoredDateTime": "2019-06-18 11:38:12", "commitGitStats": [{"filePath": "adapters/lora-vertx/src/main/java/org/eclipse/hono/adapter/lora/impl/LoraProtocolAdapter.java", "insertions": 10, "deletions": 5, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LoraProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.lora.impl.LoraProtocolAdapter.onStartupSuccess()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.lora.impl.LoraProtocolAdapter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "605dd50e0d436ad82b0898bcf10ee6c67817181d", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["0eb2a5d45fc82e66ba859fb1c0c5671b7d4d0a64"], "nameRev": "605dd50e0d436ad82b0898bcf10ee6c67817181d tags/1.0-M5~90", "commitMessage": "[#1286] Add connection check when creating server/receiver.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch-si.com>\n", "commitDateTime": "2019-06-18 11:40:27", "authoredDateTime": "2019-06-18 11:40:27", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoConnectionImpl.java", "insertions": 102, "deletions": 87, "lines": 189}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoConnectionImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.createSender(java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.core.Handler)", "TOT": 14, "UPD": 9, "INS": 3, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoConnectionImpl.createReceiver(java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.proton.ProtonMessageHandler,int,io.vertx.core.Handler)", "TOT": 13, "UPD": 8, "INS": 3, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "d3ee2915f902d8c5b6267f991d11e5038849e3be", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["476b5e465aa9ce851a26b06aceee2c5f111bfa2c"], "nameRev": "d3ee2915f902d8c5b6267f991d11e5038849e3be tags/1.0-M5~75", "commitMessage": "[#1286] Handle error when creating client.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch-si.com>\n", "commitDateTime": "2019-06-20 14:27:10", "authoredDateTime": "2019-06-20 08:28:49", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/CachingClientFactory.java", "insertions": 21, "deletions": 12, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CachingClientFactory.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.CachingClientFactory.getOrCreateClient(java.lang.String,java.util.function.Supplier,io.vertx.core.Handler,int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0eb2a5d45fc82e66ba859fb1c0c5671b7d4d0a64", "605dd50e0d436ad82b0898bcf10ee6c67817181d", "d3ee2915f902d8c5b6267f991d11e5038849e3be"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 133, "deletions": 104, "lines": 237, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 33, "UPD": 18, "INS": 8, "MOV": 7, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl", "adapters/lora-vertx/src/main/java/org/eclipse/hono/adapter/lora"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.HonoConnectionImpl.createReceiver(java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.proton.ProtonMessageHandler,int,io.vertx.core.Handler)", "org.eclipse.hono.adapter.lora.impl.LoraProtocolAdapter", "org.eclipse.hono.client.impl.HonoConnectionImpl.createSender(java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.CachingClientFactory.getOrCreateClient(java.lang.String,java.util.function.Supplier,io.vertx.core.Handler,int)", "org.eclipse.hono.adapter.lora.impl.LoraProtocolAdapter.onStartupSuccess()"]}, {"title": "Gateway mode on Sandbox does not work", "body": "Trying to use device 4711 to upload data on behalf of device 4712 yields a *gateway unauthorized* result, even if device 4712's *via* property contains `4711`.\r\n ", "url": "https://github.com/eclipse/hono/issues/1268", "user": "sophokles73", "labels": ["Sandbox", "bug"], "created": "2019-05-31 09:10:29", "closed": "2019-05-31 09:31:46", "commits": {"9bd472ca9fcdb20a52dd2539a216cf446f4a37dc": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "9bd472ca9fcdb20a52dd2539a216cf446f4a37dc", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["6bf94da686357a6bc7591a1355fbbc1874718ed7"], "nameRev": "9bd472ca9fcdb20a52dd2539a216cf446f4a37dc tags/1.0-M5~165", "commitMessage": "[#1268] Always allow update of last used gateway property.\n\nThe file based registration service implementation now allows updating\nthe last used gateway even if modification of registration information\nhas been disabled.\n\nFixes #1268\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-05-31 11:30:31", "authoredDateTime": "2019-05-31 11:11:25", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/registration/BaseRegistrationService.java", "insertions": 8, "deletions": 7, "lines": 15}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/registration/CompleteBaseRegistrationService.java", "insertions": 16, "deletions": 1, "lines": 17}, {"filePath": "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry/FileBasedRegistrationService.java", "insertions": 30, "deletions": 0, "lines": 30}, {"filePath": "site/content/release-notes.md", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseRegistrationService.java", "spoonMethods": []}, {"spoonFilePath": "CompleteBaseRegistrationService.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.registration.CompleteBaseRegistrationService.updateDeviceLastVia(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.json.JsonObject)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FileBasedRegistrationService.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedRegistrationService.updateDeviceLastVia(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.json.JsonObject)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9bd472ca9fcdb20a52dd2539a216cf446f4a37dc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 54, "deletions": 8, "lines": 62, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["services/device-registry/src/main/java/org/eclipse/hono/deviceregistry", "service-base/src/main/java/org/eclipse/hono/service/registration"], "changesInPackagesSPOON": ["org.eclipse.hono.service.registration.CompleteBaseRegistrationService.updateDeviceLastVia(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.json.JsonObject)", "org.eclipse.hono.deviceregistry.FileBasedRegistrationService.updateDeviceLastVia(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.json.JsonObject)"]}, {"title": "File based Device Registry allows modification of data", "body": "The sandbox runs the file based device registry with the *modificationAllowed* configuration flag set to `false`. However, the *last-via* property of a device gets updated anyway.", "url": "https://github.com/eclipse/hono/issues/1267", "user": "sophokles73", "labels": ["Device Registry", "bug"], "created": "2019-05-31 07:15:12", "closed": "2019-05-31 09:31:45", "commits": {"6bf94da686357a6bc7591a1355fbbc1874718ed7": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "6bf94da686357a6bc7591a1355fbbc1874718ed7", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["0ab2b1b8afb7f7ff631690f1e35c88b41f41337d"], "nameRev": "6bf94da686357a6bc7591a1355fbbc1874718ed7 tags/1.0-M5~166", "commitMessage": "[#1267] Copy payload data on create/update/get.\n\nThe file based registration service implementation now copies payload\ndata before writing it to persistent store and before returning it to a\nclient. This prevents unwanted modification of the data after the\noperation has been executed.\n\nFixes #1267\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-05-31 11:26:16", "authoredDateTime": "2019-05-31 11:22:56", "commitGitStats": [{"filePath": "service-base/src/test/java/org/eclipse/hono/service/registration/AbstractCompleteRegistrationServiceTest.java", "insertions": 55, "deletions": 16, "lines": 71}, {"filePath": "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry/FileBasedRegistrationService.java", "insertions": 21, "deletions": 11, "lines": 32}, {"filePath": "services/device-registry/src/test/java/org/eclipse/hono/deviceregistry/FileBasedRegistrationServiceTest.java", "insertions": 0, "deletions": 2, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractCompleteRegistrationServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.registration.AbstractCompleteRegistrationServiceTest.testGetSucceedsForRegisteredDevice(io.vertx.junit5.VertxTestContext)", "TOT": 29, "UPD": 16, "INS": 1, "MOV": 11, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.registration.AbstractCompleteRegistrationServiceTest.testGetReturnsCopyOfOriginalData(io.vertx.junit5.VertxTestContext)", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FileBasedRegistrationService.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedRegistrationService.addDevice(java.lang.String,java.lang.String,io.vertx.core.json.JsonObject)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedRegistrationService.updateDevice(java.lang.String,java.lang.String,io.vertx.core.json.JsonObject)", "TOT": 12, "UPD": 0, "INS": 4, "MOV": 7, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedRegistrationService.doUpdateDevice(java.lang.String,java.lang.String,io.vertx.core.json.JsonObject)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedRegistrationService.getDevice(java.lang.String,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "FileBasedRegistrationServiceTest.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6bf94da686357a6bc7591a1355fbbc1874718ed7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 21, "deletions": 11, "lines": 32, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 18, "UPD": 0, "INS": 7, "MOV": 9, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["services/device-registry/src/main/java/org/eclipse/hono/deviceregistry"], "changesInPackagesSPOON": ["org.eclipse.hono.deviceregistry.FileBasedRegistrationService.doUpdateDevice(java.lang.String,java.lang.String,io.vertx.core.json.JsonObject)", "org.eclipse.hono.deviceregistry.FileBasedRegistrationService.updateDevice(java.lang.String,java.lang.String,io.vertx.core.json.JsonObject)", "org.eclipse.hono.deviceregistry.FileBasedRegistrationService.getDevice(java.lang.String,java.lang.String)", "org.eclipse.hono.deviceregistry.FileBasedRegistrationService.addDevice(java.lang.String,java.lang.String,io.vertx.core.json.JsonObject)"]}, {"title": "Fix failing TelemetryHttpIT.testUploadMessagesWithTtdThatDoNotReplyWithCommand", "body": "Recently, there have been been some integration tests failures with this error:\r\n````\r\n[ERROR] Errors: \r\n[ERROR]   TelemetryHttpIT>HttpTestBase.testUploadMessagesWithTtdThatDoNotReplyWithCommand:770->HttpTestBase.testUploadMessages:431 \u00bb TestTimedOut\r\n````\r\n\r\nLog excerpt:\r\n```` \r\n08:25:46.563 [Time-limited test] INFO  o.e.hono.tests.http.TelemetryHttpIT - running testUploadMessagesWithTtdThatDoNotReplyWithCommand\r\n\r\n08:25:46.563 [Time-limited test] INFO  o.e.hono.tests.http.TelemetryHttpIT - using HTTP adapter [host: localhost, http port: 32777, https port: 32775]\r\n HTTP 08:25:47.095 [vert.x-eventloop-thread-0] INFO  o.e.h.c.i.AbstractRequestResponseClient - enabling caching of responses from credentials/bd3885b9-4b14-4986-a92c-d1b2f5d5fad3\r\n QPID 08:25:47.119498 +0000 ROUTER (info) [C2][L39] Link attached: dir=in source={<none> expire:sess outcomes:@PN_SYMBOL[:\"amqp:accepted:list\", :\"amqp:rejected:list\", :\"amqp:released:list\", :\"amqp:modified:list\"]} target={telemetry/bd3885b9-4b14-4986-a92c-d1b2f5d5fad3 expire:sess}\r\n HTTP 08:25:47.123 [vert.x-eventloop-thread-0] INFO  o.e.h.c.i.AbstractRequestResponseClient - enabling caching of responses from registration/bd3885b9-4b14-4986-a92c-d1b2f5d5fad3\r\n QPID 08:25:47.202804 +0000 ROUTER (info) [C3][L40] Link attached: dir=out source={control/bd3885b9-4b14-4986-a92c-d1b2f5d5fad3/d4e149ec-c7b0-4476-ab0f-870dd04f0ce7 expire:sess outcomes:@PN_SYMBOL[:\"amqp:accepted:list\", :\"amqp:rejected:list\", :\"amqp:released:list\", :\"amqp:modified:list\"]} target={<none> expire:sess}\r\n QPID 08:25:47.232565 +0000 ROUTER (info) [C3][L41] Link attached: dir=out source={control/bd3885b9-4b14-4986-a92c-d1b2f5d5fad3 expire:sess outcomes:@PN_SYMBOL[:\"amqp:accepted:list\", :\"amqp:rejected:list\", :\"amqp:released:list\", :\"amqp:modified:list\"]} target={<none> expire:sess}\r\n QPID 08:25:48.273781 +0000 ROUTER (info) [C3][L40] Link cleanup deferred after IO processing: del=0 presett=0 psdrop=0 acc=0 rej=0 rel=0 mod=0 delay1=0 delay10=0\r\n QPID 08:25:49.306885 +0000 ROUTER (info) [C3][L42] Link cleanup deferred after IO processing: del=0 presett=0 psdrop=0 acc=0 rej=0 rel=0 mod=0 delay1=0 delay10=0\r\n\r\n[no further log output from the test here]\r\n\r\n08:26:06.603 [Time-limited test] INFO  o.e.hono.tests.http.TelemetryHttpIT - running testUploadMessageFailsForDisabledGateway\r\n[...]\r\n\r\nERROR [m] testUploadMessagesWithTtdThatDoNotReplyWithCommand  Time elapsed: 20.039 s  <<< ERROR!\r\n\r\norg.junit.runners.model.TestTimedOutException: test timed out after 20000 milliseconds\r\n````\r\n\r\nFor comparison: Excerpt of a successful run of this test:\r\n````\r\n17:12:20.371 [Time-limited test] INFO  o.e.hono.tests.http.TelemetryHttpIT - running testUploadMessagesWithTtdThatDoNotReplyWithCommand\r\n17:12:20.371 [Time-limited test] INFO  o.e.hono.tests.http.TelemetryHttpIT - using HTTP adapter [host: localhost, http port: 32777, https port: 32775]\r\n QPID 17:12:20.716412 +0000 ROUTER (info) [C12][L38] Link attached: dir=out source={telemetry/c60bda4d-e501-44ec-9ec3-d1b88239bcb5 expire:sess outcomes:@PN_SYMBOL[:\"amqp:accepted:list\", :\"amqp:rejected:list\", :\"amqp:released:list\", :\"amqp:modified:list\"]} target={<none> expire:sess}\r\n HTTP 17:12:20.788 [vert.x-eventloop-thread-0] INFO  o.e.h.c.i.AbstractRequestResponseClient - enabling caching of responses from credentials/c60bda4d-e501-44ec-9ec3-d1b88239bcb5\r\n QPID 17:12:20.819636 +0000 ROUTER (info) [C2][L39] Link attached: dir=in source={<none> expire:sess outcomes:@PN_SYMBOL[:\"amqp:accepted:list\", :\"amqp:rejected:list\", :\"amqp:released:list\", :\"amqp:modified:list\"]} target={telemetry/c60bda4d-e501-44ec-9ec3-d1b88239bcb5 expire:sess}\r\n HTTP 17:12:20.826 [vert.x-eventloop-thread-0] INFO  o.e.h.c.i.AbstractRequestResponseClient - enabling caching of responses from registration/c60bda4d-e501-44ec-9ec3-d1b88239bcb5\r\n QPID 17:12:20.907913 +0000 ROUTER (info) [C3][L41] Link attached: dir=out source={control/c60bda4d-e501-44ec-9ec3-d1b88239bcb5 expire:sess outcomes:@PN_SYMBOL[:\"amqp:accepted:list\", :\"amqp:rejected:list\", :\"amqp:released:list\", :\"amqp:modified:list\"]} target={<none> expire:sess}\r\n QPID 17:12:21.942173 +0000 ROUTER (info) [C3][L42] Link attached: dir=out source={control/c60bda4d-e501-44ec-9ec3-d1b88239bcb5/8e2f05ab-648e-43a8-9aec-6abdc1520398 expire:sess outcomes:@PN_SYMBOL[:\"amqp:accepted:list\", :\"amqp:rejected:list\", :\"amqp:released:list\", :\"amqp:modified:list\"]} target={<none> expire:sess}\r\n17:12:22.978 [vert.x-eventloop-thread-2] INFO  o.e.hono.tests.http.TelemetryHttpIT - messages received: 3\r\n QPID 17:12:22.970124 +0000 ROUTER (info) [C3][L43] Link attached: dir=out source={control/c60bda4d-e501-44ec-9ec3-d1b88239bcb5/8e2f05ab-648e-43a8-9aec-6abdc1520398 expire:sess outcomes:@PN_SYMBOL[:\"amqp:accepted:list\", :\"amqp:rejected:list\", :\"amqp:released:list\", :\"amqp:modified:list\"]} target={<none> expire:sess}\r\n17:12:23.979 [Time-limited test] INFO  o.e.hono.tests.http.TelemetryHttpIT - sent 3 and received 3 messages after 3257 milliseconds\r\n````\r\n\r\n", "url": "https://github.com/eclipse/hono/issues/1250", "user": "calohmn", "labels": ["C&C", "HTTP Adapter", "bug"], "created": "2019-05-22 08:19:30", "closed": "2019-05-29 14:35:15", "commits": {"adee92bd14d9d30762b1c72133bafb73f64e6c83": {"commitGHEventType": "referenced", "commitUser": "calohmn"}, "b069d40c8e02da2f7fa67dedfc0422f86e3b1028": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "adee92bd14d9d30762b1c72133bafb73f64e6c83", "commitGHEventType": "referenced", "commitUser": "calohmn", "commitParents": ["a248141996df85eb6936336567d0aa2898faf9d1"], "nameRev": "adee92bd14d9d30762b1c72133bafb73f64e6c83 tags/1.0-M4~18", "commitMessage": "[#1250] Improve timeout value for testUploadMessages().\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch-si.com>\n", "commitDateTime": "2019-05-28 10:12:41", "authoredDateTime": "2019-05-28 10:12:41", "commitGitStats": [{"filePath": "tests/src/test/java/org/eclipse/hono/tests/http/HttpTestBase.java", "insertions": 4, "deletions": 1, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpTestBase.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.http.HttpTestBase.testUploadMessages(io.vertx.ext.unit.TestContext,java.lang.String,java.util.function.Consumer,java.util.function.Function,int)", "TOT": 9, "UPD": 2, "INS": 2, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.tests.http.HttpTestBase", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.http.HttpTestBase.setUp()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "b069d40c8e02da2f7fa67dedfc0422f86e3b1028", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["7468629bff7b3ad424164da3babfa20cdf8752c2"], "nameRev": "b069d40c8e02da2f7fa67dedfc0422f86e3b1028 tags/1.0-M4~14", "commitMessage": "[#1250] Do not require downstream messages to contain TTD property.\n\nThe only relevant check to make is that the response does not contain a\ncommand.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-05-28 17:55:21", "authoredDateTime": "2019-05-28 17:54:59", "commitGitStats": [{"filePath": "tests/src/test/java/org/eclipse/hono/tests/http/HttpTestBase.java", "insertions": 8, "deletions": 11, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpTestBase.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.http.HttpTestBase.testUploadMessagesWithTtdThatDoNotReplyWithCommand(io.vertx.ext.unit.TestContext)", "TOT": 16, "UPD": 6, "INS": 1, "MOV": 4, "DEL": 5}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["adee92bd14d9d30762b1c72133bafb73f64e6c83", "b069d40c8e02da2f7fa67dedfc0422f86e3b1028"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Sandbox is down ", "body": "Could you please make sandbox up again", "url": "https://github.com/eclipse/hono/issues/1236", "user": "San13", "labels": ["Sandbox", "bug"], "created": "2019-05-14 02:18:04", "closed": "2019-05-14 06:56:40", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Error: Deploying Hono on Kubernetes under custom namespace", "body": "It seems the namespaces are stored on server and I am not able to deploy the hono under custom namespace i.e. com.org.abc.\r\n\r\nError: Cannot Create namespace at cluster level.\r\n\r\nNote: I cannot have permissions at cluster level so only option is to deploy hono under custom namespace", "url": "https://github.com/eclipse/hono/issues/1235", "user": "amit1306", "labels": ["Deployment", "bug"], "created": "2019-05-14 01:26:41", "closed": "2019-05-22 11:28:54", "commits": {"b271e5eb09cae7cf550eb5078781e022933b3c93": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "b271e5eb09cae7cf550eb5078781e022933b3c93", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["c0ea7981df72d06b58d7be3ed6920042babe3647"], "nameRev": "b271e5eb09cae7cf550eb5078781e022933b3c93 tags/1.0-M4~36", "commitMessage": "[#1235] Allow deployment to arbitrary namespaces via Helm.\n\nFixes #1235\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-05-22 13:27:14", "authoredDateTime": "2019-05-22 10:54:44", "commitGitStats": [{"filePath": "deploy/pom.xml", "insertions": 0, "deletions": 8, "lines": 8}, {"filePath": "deploy/src/main/config/grafana/provisioning/datasources/prometheus.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/config/qpid/qdrouterd-with-broker.json", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "deploy/src/main/deploy/helm/templates/prometheus/instance.yml", "insertions": 66, "deletions": 0, "lines": 66}, {"filePath": "deploy/src/main/deploy/helm/values.yaml", "insertions": 83, "deletions": 62, "lines": 145}, {"filePath": "deploy/src/main/docker-config.properties", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "deploy/src/main/kubernetes-config.properties", "insertions": 6, "deletions": 1, "lines": 7}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b271e5eb09cae7cf550eb5078781e022933b3c93"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 164, "deletions": 67, "lines": 231, "gitFilesChange": 6}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["deploy/src/main/deploy/helm/templates/prometheus/instance.yml", "deploy/src/main/config/qpid/qdrouterd-with-broker.json", "deploy/src/main/kubernetes-config.properties", "deploy/src/main/config/grafana/provisioning/datasources/prometheus.yaml", "deploy/src/main/docker-config.properties", "deploy/src/main/deploy/helm/values.yaml"]}, {"title": "No traces for Hono service invocations (1.0-M2)", "body": "When deploying Hono with the Jaeger OpenTracing component and having a look at the created traces for the protocol adapter requests, there are some tracing spans missing.\r\nThese are the ones related to the various Hono services (credentials service, tenant service, registration service).\r\n\r\nThis was still working in Hono 1.0-M1.", "url": "https://github.com/eclipse/hono/issues/1205", "user": "calohmn", "labels": ["Tracing", "bug"], "created": "2019-04-26 13:03:41", "closed": "2019-04-26 15:21:57", "commits": {"8bec02e32c2e29e3ac24fe04ca5718f2f207bca3": {"commitGHEventType": "referenced", "commitUser": "dejanb"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8bec02e32c2e29e3ac24fe04ca5718f2f207bca3", "commitGHEventType": "referenced", "commitUser": "dejanb", "commitParents": ["ef944277b74994288b04d00bc752a62e45504854"], "nameRev": "8bec02e32c2e29e3ac24fe04ca5718f2f207bca3 tags/1.0-M3~3", "commitMessage": "[#1205] Expose HonoConnection objects as beans (for autowiring to work).\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch-si.com>\n", "commitDateTime": "2019-04-26 17:21:42", "authoredDateTime": "2019-04-26 15:38:06", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/AbstractAdapterConfig.java", "insertions": 65, "deletions": 10, "lines": 75}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractAdapterConfig.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.AbstractAdapterConfig.downstreamSenderFactory()", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.AbstractAdapterConfig.registrationClientFactory()", "TOT": 6, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.AbstractAdapterConfig.credentialsClientFactory()", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.AbstractAdapterConfig.tenantClientFactory()", "TOT": 6, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.AbstractAdapterConfig.commandConsumerFactory()", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8bec02e32c2e29e3ac24fe04ca5718f2f207bca3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 65, "deletions": 10, "lines": 75, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 27, "UPD": 10, "INS": 5, "MOV": 7, "DEL": 5, "spoonFilesChanged": 1, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service"], "changesInPackagesSPOON": ["org.eclipse.hono.service.AbstractAdapterConfig.tenantClientFactory()", "org.eclipse.hono.service.AbstractAdapterConfig.commandConsumerFactory()", "org.eclipse.hono.service.AbstractAdapterConfig.downstreamSenderFactory()", "org.eclipse.hono.service.AbstractAdapterConfig.credentialsClientFactory()", "org.eclipse.hono.service.AbstractAdapterConfig.registrationClientFactory()"]}, {"title": "Internal server error when sending malformed authentication header", "body": "When sending a malformed Authentication header like \"Authentication: basic test test\" Hono responds with a 500 and with an error message \"Illegal base64 character 20\" which I suppose is from the thrown Exception.\r\n\r\n**Examples**\r\n``` sh\r\ncurl -X POST \\\r\n  http://hono.eclipse.org:8080/event \\\r\n  -H 'Authorization: basic test test' \\\r\n  -H 'Content-Type: application/json' \\\r\n  -H 'cache-control: no-cache' \\\r\n  -d '{ \"test-data\": \"3\" }'\r\n```\r\nResponse:\r\n> Status 500: Last unit does not have enough valid bits\r\n\r\n``` sh\r\ncurl -X POST \\\r\n  http://hono.eclipse.org:8080/event \\\r\n  -H 'Authorization: basic testtest1' \\\r\n  -H 'Content-Type: application/json' \\\r\n  -H 'cache-control: no-cache'\r\n  -d '{ \"test-data\": \"3\" }'\r\n```\r\nResponse:\r\n> Status 500: Last unit does not have enough valid bits\r\n\r\n**Expected behavior**\r\n- Status either 400 or 422\r\n- Meaningful error message like: `Authorization Header malformed`", "url": "https://github.com/eclipse/hono/issues/1183", "user": "mbaeuerle", "labels": ["HTTP Adapter", "bug"], "created": "2019-04-18 08:21:59", "closed": "2019-04-24 15:43:45", "commits": {"5e5735f5b4ff89b5e896298c3d264d9b7f187636": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "5e5735f5b4ff89b5e896298c3d264d9b7f187636", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["24477f3eddd90320bcee67058155cbd3f12d8369"], "nameRev": "5e5735f5b4ff89b5e896298c3d264d9b7f187636 tags/1.0-M2~5", "commitMessage": "Fix issue #1183\n\nSigned-off-by: Kartheeswaran Kalidass <Kartheeswaran.Kalidass@bosch-si.com>\n", "commitDateTime": "2019-04-24 17:42:50", "authoredDateTime": "2019-04-24 12:52:15", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/http/HonoBasicAuthHandler.java", "insertions": 13, "deletions": 1, "lines": 14}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/http/HonoBasicAuthHandlerTest.java", "insertions": 36, "deletions": 2, "lines": 38}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoBasicAuthHandler.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.http.HonoBasicAuthHandler.parseCredentials(io.vertx.ext.web.RoutingContext,io.vertx.core.Handler)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoBasicAuthHandlerTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.http.HonoBasicAuthHandlerTest.testHandleFailsForMalformedAuthorizationHeader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5e5735f5b4ff89b5e896298c3d264d9b7f187636"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 1, "lines": 14, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service/http"], "changesInPackagesSPOON": ["org.eclipse.hono.service.http.HonoBasicAuthHandler.parseCredentials(io.vertx.ext.web.RoutingContext,io.vertx.core.Handler)"]}, {"title": "Concurrency issue while authenticating devices with SHA encoded passwords", "body": "`MessageDigestPasswordEncoder` is not thread-safe as it uses the same `MessageDigest` instance for all `matches()` calls. However since `UsernamePasswordAuthProvider` executes password check within different threads this leads to wrong results and thus to failed device authentications. \r\n\r\nPossible solutions might be\r\n- Use new `MessageDigest` instance for every request\r\n- Use separate `MessageDigest` instance per thread\r\n- Add some locking to `matches()`\r\n\r\nIf creating of `MessageDigest` is not an expensive operation option 1 should be easy and legit to implement.\r\n\r\nWDYT?", "url": "https://github.com/eclipse/hono/issues/1170", "user": "DanielMaier-BSI", "labels": ["Device Registry", "bug"], "created": "2019-04-12 15:04:40", "closed": "2019-04-15 08:43:55", "commits": {"db7f68e525c1dc9963e6980c6776b415a6de5b59": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "db7f68e525c1dc9963e6980c6776b415a6de5b59", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["6119b87b3b87358e8f1ce72563b45f39d82b935d"], "nameRev": "db7f68e525c1dc9963e6980c6776b415a6de5b59 tags/1.0-M2~38", "commitMessage": "[#1170] Always use new MessageDigest instance when encoding password.\n\nFixes #1170 \r\n\r\nSigned-off-by: Daniel Maier <daniel.maier@bosch-si.com>", "commitDateTime": "2019-04-15 10:43:51", "authoredDateTime": "2019-04-15 10:43:51", "commitGitStats": [{"filePath": "core/src/main/java/org/eclipse/hono/auth/MessageDigestPasswordEncoder.java", "insertions": 13, "deletions": 6, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MessageDigestPasswordEncoder.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.auth.MessageDigestPasswordEncoder", "TOT": 7, "UPD": 2, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.auth.MessageDigestPasswordEncoder.digest(byte[],java.lang.String)", "TOT": 10, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 4}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["db7f68e525c1dc9963e6980c6776b415a6de5b59"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 6, "lines": 19, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 17, "UPD": 2, "INS": 4, "MOV": 6, "DEL": 5, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/org/eclipse/hono/auth"], "changesInPackagesSPOON": ["org.eclipse.hono.auth.MessageDigestPasswordEncoder.digest(byte[],java.lang.String)", "org.eclipse.hono.auth.MessageDigestPasswordEncoder"]}, {"title": "HTTP protocol adapter returns 401 unauthorized when there are networking issues while getting credentials", "body": "HTTP protocol adapter returns 401 unauthorized when there are network issues while getting credentials from credentials API. From my point of view it would be more appropriate to return 503 to indicate to the client it is worth to try again.\r\n\r\nWDYT? ", "url": "https://github.com/eclipse/hono/issues/1158", "user": "DanielMaier-BSI", "labels": ["HTTP Adapter", "bug"], "created": "2019-04-10 10:24:23", "closed": "2019-04-10 12:41:14", "commits": {"68dc5c374b83434362d15b8f0fbc15e0040b1fe6": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "68dc5c374b83434362d15b8f0fbc15e0040b1fe6", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["c0c1c1a573c8f18afaa8a31634afc4ad4526716b"], "nameRev": "68dc5c374b83434362d15b8f0fbc15e0040b1fe6 tags/1.0-M2~55", "commitMessage": "[#1158] Do not return 401 if credentials service is unavailable.\n\nIntroduced HonoChainAuthHandler class which extends ChainAuthHandlerImpl\nand delegates error processing to AuthHandlerTools analogously to\nHonoBasicAuthHandler.\n\nFixes #1158\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-04-10 14:36:51", "authoredDateTime": "2019-04-10 13:47:23", "commitGitStats": [{"filePath": "adapters/http-vertx/src/main/java/org/eclipse/hono/adapter/http/impl/VertxBasedHttpProtocolAdapter.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "adapters/http-vertx/src/test/java/org/eclipse/hono/adapter/http/impl/VertxBasedHttpProtocolAdapterTest.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "adapters/lora-vertx/src/main/java/org/eclipse/hono/adapter/lora/LoraProtocolAdapter.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/http/HonoChainAuthHandler.java", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/http/HonoChainAuthHandlerTest.java", "insertions": 111, "deletions": 0, "lines": 111}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VertxBasedHttpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.impl.VertxBasedHttpProtocolAdapter.addRoutes(io.vertx.ext.web.Router)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "VertxBasedHttpProtocolAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.impl.VertxBasedHttpProtocolAdapterTest.testPostTelemetryFailsForUnreachableCredentialsService(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LoraProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.lora.LoraProtocolAdapter.setupAuthorization(io.vertx.ext.web.Router)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HonoChainAuthHandler.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.http.HonoChainAuthHandler", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoChainAuthHandlerTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.http.HonoChainAuthHandlerTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["68dc5c374b83434362d15b8f0fbc15e0040b1fe6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 50, "deletions": 3, "lines": 53, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 2, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/lora-vertx/src/main/java/org/eclipse/hono/adapter/lora", "adapters/http-vertx/src/main/java/org/eclipse/hono/adapter/http", "service-base/src/main/java/org/eclipse/hono/service/http"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.lora.LoraProtocolAdapter.setupAuthorization(io.vertx.ext.web.Router)", "org.eclipse.hono.adapter.http.impl.VertxBasedHttpProtocolAdapter.addRoutes(io.vertx.ext.web.Router)", "org.eclipse.hono.service.http.HonoChainAuthHandler"]}, {"title": "Issue with command & control -> Micrometer + Prometheus -> causing duplicate dispositions", "body": "When doing some tests with command and control in Hono 0.9, I ran into the following issue:\r\n\r\n~~~\r\njava.lang.IllegalArgumentException: Prometheus requires that all meters with the same name have the same set of tag keys. There is already an existing meter named 'hono_messages_received_seconds' containing tag keys [component_name, component_type, host, qos, status, tenant, type]. The meter you are attempting to register has keys [component_name, component_type, host, qos, status, tenant, ttd, type].\r\n~~~\r\n\r\n<details>\r\n\r\n<summary>Full exception stack trace</summary>\r\n\r\n~~~\r\n2019-04-08T11:05:11.997Z DEBUG [VertxBasedHttpProtocolAdapter] cannot process [TELEMETRY] message from device [tenantId: iot-project-ns.shared-iot-project, deviceId: b4371722-5d19-44c6-85ce-a82b9d5b3260]\r\njava.lang.IllegalArgumentException: Prometheus requires that all meters with the same name have the same set of tag keys. There is already an existing meter named 'hono_messages_received_seconds' containing tag keys [component_name, component_type, host, qos, status, tenant, type]. The meter you are attempting to register has keys [component_name, component_type, host, qos, status, tenant, ttd, type].\r\n\tat io.micrometer.prometheus.PrometheusMeterRegistry.lambda$collectorByName$9(PrometheusMeterRegistry.java:360)\r\n\tat java.base/java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1932)\r\n\tat io.micrometer.prometheus.PrometheusMeterRegistry.collectorByName(PrometheusMeterRegistry.java:347)\r\n\tat io.micrometer.prometheus.PrometheusMeterRegistry.newTimer(PrometheusMeterRegistry.java:160)\r\n\tat io.micrometer.core.instrument.MeterRegistry.lambda$timer$2(MeterRegistry.java:258)\r\n\tat io.micrometer.core.instrument.MeterRegistry.getOrCreateMeter(MeterRegistry.java:567)\r\n\tat io.micrometer.core.instrument.MeterRegistry.registerMeterIfNecessary(MeterRegistry.java:529)\r\n\tat io.micrometer.core.instrument.MeterRegistry.timer(MeterRegistry.java:256)\r\n\tat io.micrometer.core.instrument.Timer$Builder.register(Timer.java:447)\r\n\tat io.micrometer.core.instrument.MeterRegistry.timer(MeterRegistry.java:383)\r\n\tat org.eclipse.hono.service.metric.MicrometerBasedMetrics.reportTelemetry(MicrometerBasedMetrics.java:176)\r\n\tat org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.lambda$doUploadMessage$19(AbstractVertxBasedHttpProtocolAdapter.java:687)\r\n\tat io.vertx.ext.web.impl.RoutingContextImpl.lambda$null$2(RoutingContextImpl.java:461)\r\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\r\n\tat io.vertx.ext.web.impl.RoutingContextImpl.lambda$getBodyEndHandlers$3(RoutingContextImpl.java:461)\r\n\tat io.vertx.core.http.impl.HttpServerResponseImpl.end(HttpServerResponseImpl.java:343)\r\n\tat io.vertx.core.http.impl.HttpServerResponseImpl.end(HttpServerResponseImpl.java:367)\r\n\tat org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.lambda$doUploadMessage$22(AbstractVertxBasedHttpProtocolAdapter.java:723)\r\n\tat io.vertx.core.Future.lambda$map$2(Future.java:301)\r\n\tat io.vertx.core.impl.FutureImpl.tryComplete(FutureImpl.java:125)\r\n\tat io.vertx.core.impl.FutureImpl.complete(FutureImpl.java:86)\r\n\tat io.vertx.core.Future.lambda$recover$4(Future.java:383)\r\n\tat io.vertx.core.impl.FutureImpl.tryComplete(FutureImpl.java:125)\r\n\tat io.vertx.core.impl.FutureImpl.complete(FutureImpl.java:86)\r\n\tat io.vertx.core.impl.FutureImpl.handle(FutureImpl.java:151)\r\n\tat io.vertx.core.impl.FutureImpl.handle(FutureImpl.java:18)\r\n\tat io.vertx.core.impl.FutureImpl.tryComplete(FutureImpl.java:125)\r\n\tat io.vertx.core.impl.FutureImpl.complete(FutureImpl.java:86)\r\n\tat io.vertx.core.Future.lambda$map$2(Future.java:306)\r\n\tat io.vertx.core.impl.CompositeFutureImpl.lambda$all$1(CompositeFutureImpl.java:49)\r\n\tat io.vertx.core.impl.FutureImpl.tryComplete(FutureImpl.java:125)\r\n\tat io.vertx.core.impl.FutureImpl.tryComplete(FutureImpl.java:132)\r\n\tat org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.lambda$createCommandConsumer$26(AbstractVertxBasedHttpProtocolAdapter.java:886)\r\n\tat org.eclipse.hono.client.CommandConsumer.lambda$create$0(CommandConsumer.java:151)\r\n\tat org.eclipse.hono.client.impl.AbstractHonoClient.lambda$createReceiver$8(AbstractHonoClient.java:394)\r\n\tat io.vertx.proton.impl.ProtonReceiverImpl.onDelivery(ProtonReceiverImpl.java:206)\r\n\tat io.vertx.proton.impl.ProtonTransport.handleSocketBuffer(ProtonTransport.java:163)\r\n\tat io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler.handle(NetSocketImpl.java:392)\r\n\tat io.vertx.core.streams.impl.InboundBuffer.handleEvent(InboundBuffer.java:225)\r\n\tat io.vertx.core.streams.impl.InboundBuffer.write(InboundBuffer.java:123)\r\n\tat io.vertx.core.net.impl.NetSocketImpl.handleMessage(NetSocketImpl.java:370)\r\n\tat io.vertx.core.net.impl.ConnectionBase.handleRead(ConnectionBase.java:397)\r\n\tat io.vertx.core.impl.ContextImpl.executeTask(ContextImpl.java:320)\r\n\tat io.vertx.core.impl.EventLoopContext.execute(EventLoopContext.java:43)\r\n\tat io.vertx.core.impl.ContextImpl.executeFromIO(ContextImpl.java:188)\r\n\tat io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:174)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:579)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:496)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\nat java.base/java.lang.Thread.run(Thread.java:834)\r\n~~~\r\n\r\n</details>\r\n", "url": "https://github.com/eclipse/hono/issues/1149", "user": "ctron", "labels": ["HTTP Adapter", "Metrics", "bug"], "created": "2019-04-08 11:14:42", "closed": "2019-04-09 12:46:51", "commits": {"59da606a46f7c9cdb234a7049199a8e69c86cdfe": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "59da606a46f7c9cdb234a7049199a8e69c86cdfe", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["5d76378558ed8b5a5d2fe5229b2da4c6f05f1dd2"], "nameRev": "59da606a46f7c9cdb234a7049199a8e69c86cdfe tags/1.0-M2~61", "commitMessage": "[#1149] Use all tags when reporting metrics to PrometheusMeterRegistry.\n\nThe protocol adapters now always provide values for all tags when\nreporting telemetry messages.\n\nFixes #1149\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-04-09 14:46:47", "authoredDateTime": "2019-04-09 13:14:53", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/metric/MetricsTags.java", "insertions": 2, "deletions": 38, "lines": 40}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/metric/MicrometerBasedMetrics.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/metric/MicrometerBasedMetricsTest.java", "insertions": 81, "deletions": 12, "lines": 93}, {"filePath": "site/content/api/Metrics.md", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "site/content/release-notes.md", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MetricsTags.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.metric.MetricsTags.TtdStatus", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.metric.MetricsTags.QoS", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.metric.MetricsTags.TtdStatus.add(io.micrometer.core.instrument.Tags)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.metric.MetricsTags.QoS.add(io.micrometer.core.instrument.Tags)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MicrometerBasedMetrics.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.metric.MicrometerBasedMetrics.reportTelemetry(org.eclipse.hono.service.metric.MetricsTags$EndpointType,java.lang.String,org.eclipse.hono.service.metric.MetricsTags$ProcessingOutcome,org.eclipse.hono.service.metric.MetricsTags$QoS,int,org.eclipse.hono.service.metric.MetricsTags$TtdStatus,io.micrometer.core.instrument.Timer.Sample)", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.metric.MicrometerBasedMetrics.reportCommand(org.eclipse.hono.service.metric.MetricsTags.Direction,java.lang.String,org.eclipse.hono.service.metric.MetricsTags.ProcessingOutcome,int,io.micrometer.core.instrument.Timer.Sample)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MicrometerBasedMetricsTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.metric.MicrometerBasedMetricsTest.setUp()", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.metric.MicrometerBasedMetricsTest.testReportTelemetryOmitsOptionalTags()", "TOT": 15, "UPD": 5, "INS": 0, "MOV": 9, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.metric.MicrometerBasedMetricsTest", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.metric.MicrometerBasedMetricsTest.testReportTelemetryWithUnknownTagValues()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.metric.MicrometerBasedMetricsTest.registries()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.metric.MicrometerBasedMetricsTest.testReportTelemetryWithOptionalQos()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["59da606a46f7c9cdb234a7049199a8e69c86cdfe"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11, "deletions": 47, "lines": 58, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 13, "UPD": 8, "INS": 0, "MOV": 2, "DEL": 3, "spoonFilesChanged": 2, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service/metric"], "changesInPackagesSPOON": ["org.eclipse.hono.service.metric.MetricsTags.QoS.add(io.micrometer.core.instrument.Tags)", "org.eclipse.hono.service.metric.MetricsTags.TtdStatus.add(io.micrometer.core.instrument.Tags)", "org.eclipse.hono.service.metric.MicrometerBasedMetrics.reportCommand(org.eclipse.hono.service.metric.MetricsTags.Direction,java.lang.String,org.eclipse.hono.service.metric.MetricsTags.ProcessingOutcome,int,io.micrometer.core.instrument.Timer.Sample)", "org.eclipse.hono.service.metric.MicrometerBasedMetrics.reportTelemetry(org.eclipse.hono.service.metric.MetricsTags$EndpointType,java.lang.String,org.eclipse.hono.service.metric.MetricsTags$ProcessingOutcome,org.eclipse.hono.service.metric.MetricsTags$QoS,int,org.eclipse.hono.service.metric.MetricsTags$TtdStatus,io.micrometer.core.instrument.Timer.Sample)", "org.eclipse.hono.service.metric.MetricsTags.TtdStatus", "org.eclipse.hono.service.metric.MetricsTags.QoS"]}, {"title": "Error adding tenant with trusted-ca in Hono deployed via Helm", "body": "Adding a tenant with a trusted-ca results in a 400 Bad Request response if Hono has been deployed using the standard helm chart.\r\n\r\nError in device registry log:\r\n````\r\n20:01:22.866 [vert.x-eventloop-thread-0] DEBUG o.e.h.d.FileBasedTenantService - error parsing payload of add tenant request\r\njava.lang.IllegalArgumentException: improperly specified input name: ${trusted-ca.subject-dn}\r\n\tat java.base/javax.security.auth.x500.X500Principal.<init>(X500Principal.java:183)\r\n\tat java.base/javax.security.auth.x500.X500Principal.<init>(X500Principal.java:128)\r\n\tat org.eclipse.hono.util.TenantObject.lambda$getTrustedCaSubjectDn$0(TenantObject.java:130)\r\n\tat java.base/java.util.Optional.map(Optional.java:265)\r\n\tat org.eclipse.hono.util.TenantObject.getTrustedCaSubjectDn(TenantObject.java:130)\r\n\tat org.eclipse.hono.deviceregistry.FileBasedTenantService.lambda$getByCa$10(FileBasedTenantService.java:392)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:176)\r\n\tat java.base/java.util.HashMap$ValueSpliterator.tryAdvance(HashMap.java:1696)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\r\n\tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\r\n\tat org.eclipse.hono.deviceregistry.FileBasedTenantService.getByCa(FileBasedTenantService.java:393)\r\n\tat org.eclipse.hono.deviceregistry.FileBasedTenantService.add(FileBasedTenantService.java:314)\r\n\tat org.eclipse.hono.deviceregistry.FileBasedTenantService.add(FileBasedTenantService.java:291)\r\n\tat org.eclipse.hono.service.tenant.CompleteBaseTenantService.processAddRequest(CompleteBaseTenantService.java:93)\r\n\tat org.eclipse.hono.service.tenant.CompleteBaseTenantService.processRequest(CompleteBaseTenantService.java:67)\r\n\tat org.eclipse.hono.service.EventBusService.processRequestMessage(EventBusService.java:160)\r\n\tat io.vertx.core.eventbus.impl.HandlerRegistration.deliver(HandlerRegistration.java:264)\r\n\tat io.vertx.core.eventbus.impl.HandlerRegistration.handle(HandlerRegistration.java:242)\r\n\tat io.vertx.core.eventbus.impl.EventBusImpl$InboundDeliveryContext.next(EventBusImpl.java:565)\r\n\tat io.vertx.core.eventbus.impl.EventBusImpl.lambda$deliverToHandler$5(EventBusImpl.java:524)\r\n\tat io.vertx.core.impl.ContextImpl.executeTask(ContextImpl.java:320)\r\n\tat io.vertx.core.impl.EventLoopContext.lambda$executeAsync$0(EventLoopContext.java:38)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:462)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\nCaused by: java.io.IOException: Incorrect AVA format\r\n\tat java.base/sun.security.x509.AVA.readChar(AVA.java:555)\r\n\tat java.base/sun.security.x509.AVA.<init>(AVA.java:181)\r\n\tat java.base/sun.security.x509.AVA.<init>(AVA.java:147)\r\n\tat java.base/sun.security.x509.RDN.<init>(RDN.java:147)\r\n\tat java.base/sun.security.x509.X500Name.parseDN(X500Name.java:928)\r\n\tat java.base/sun.security.x509.X500Name.<init>(X500Name.java:164)\r\n\tat java.base/javax.security.auth.x500.X500Principal.<init>(X500Principal.java:181)\r\n\t... 32 common frames omitted\r\n````", "url": "https://github.com/eclipse/hono/issues/1131", "user": "calohmn", "labels": ["Device Registry", "bug"], "created": "2019-04-03 05:48:35", "closed": "2019-04-03 11:25:49", "commits": {"dce405fc8eea684020e1e000314af46403203d19": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "dce405fc8eea684020e1e000314af46403203d19", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["6d1513f9c73e24e47c80d325e573495350db9cd6"], "nameRev": "dce405fc8eea684020e1e000314af46403203d19 tags/1.0-M2~79", "commitMessage": "[#1131] Add maven filters for processing helm resources\n\nFixes #1131 \r\n\r\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch-si.com>", "commitDateTime": "2019-04-03 13:25:48", "authoredDateTime": "2019-04-03 13:25:48", "commitGitStats": [{"filePath": "deploy/pom.xml", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dce405fc8eea684020e1e000314af46403203d19"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Cannot deploy Hono 0.9 using Helm chart", "body": "When trying to install Hono 0.9 using `helm install ...` as described in the deployment guide, Helm immediately fails, complaining about an invalid label value.\r\n\r\nThis seems to be the same problem as described in #491", "url": "https://github.com/eclipse/hono/issues/1105", "user": "sophokles73", "labels": ["bug"], "created": "2019-03-21 14:03:39", "closed": "2019-03-21 15:09:18", "commits": {"de8624654bfe1cbf0fe9b53dbe716947cb3e69df": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "de8624654bfe1cbf0fe9b53dbe716947cb3e69df", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["711ba84cfe8c3ab1bdaf50eaa2248999d8f5792a"], "nameRev": "de8624654bfe1cbf0fe9b53dbe716947cb3e69df tags/1.0-M1~6", "commitMessage": "[#1105] Enclose app version in quotes to prevent parsing error.\n\nThe version used in the chart by default is the Maven project version.\nHowever, the version can also be explicitly set using the\n\"helm.app-version\" property when doing the Maven build.\nThis way the templates can be used with any particular (compatible) Hono\nrelease.\n\nFixes #1105\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-03-21 16:08:34", "authoredDateTime": "2019-03-21 15:57:50", "commitGitStats": [{"filePath": "deploy/pom.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "deploy/src/main/deploy/helm/Chart.yaml", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "deploy/src/main/deploy/helm/templates/artemis/artemis-deployment.yaml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "deploy/src/main/deploy/helm/templates/artemis/artemis-secret.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/artemis/artemis-svc.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/dispatch-router/dispatch-router-deployment.yaml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "deploy/src/main/deploy/helm/templates/dispatch-router/dispatch-router-ext-svc.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/dispatch-router/dispatch-router-route.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/dispatch-router/dispatch-router-secret.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/dispatch-router/dispatch-router-svc.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/grafana/grafana-dashboard-configmap.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/grafana/grafana-datasource-configmap.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/grafana/grafana-svc.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-amqp/hono-adapter-amqp-vertx-deployment.yaml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-amqp/hono-adapter-amqp-vertx-route.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-amqp/hono-adapter-amqp-vertx-sec-route.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-amqp/hono-adapter-amqp-vertx-secret.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-amqp/hono-adapter-amqp-vertx-svc.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-http/hono-adapter-http-vertx-deployment.yml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-http/hono-adapter-http-vertx-route.yml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-http/hono-adapter-http-vertx-sec-route.yml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-http/hono-adapter-http-vertx-secret.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-http/hono-adapter-http-vertx-svc.yml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-kura/hono-adapter-kura-deployment.yaml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-kura/hono-adapter-kura-route.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-kura/hono-adapter-kura-sec-route.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-kura/hono-adapter-kura-svc.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-kura/hono-adapter-kura-vertx-secret.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-mqtt/hono-adapter-mqtt-vertx-deployment.yaml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-mqtt/hono-adapter-mqtt-vertx-route.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-mqtt/hono-adapter-mqtt-vertx-sec-route.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-mqtt/hono-adapter-mqtt-vertx-secret.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-mqtt/hono-adapter-mqtt-vertx-svc.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-service-auth/hono-service-auth-deployment.yaml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-service-auth/hono-service-auth-route.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-service-auth/hono-service-auth-secret.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-service-auth/hono-service-auth-svc.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-service-device-registry/hono-service-device-registry-amqps-route.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-service-device-registry/hono-service-device-registry-deployment.yaml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-service-device-registry/hono-service-device-registry-http-route.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-service-device-registry/hono-service-device-registry-https-route.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-service-device-registry/hono-service-device-registry-pvc.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-service-device-registry/hono-service-device-registry-secret.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-service-device-registry/hono-service-device-registry-svc.yaml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["de8624654bfe1cbf0fe9b53dbe716947cb3e69df"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 53, "deletions": 53, "lines": 106, "gitFilesChange": 43}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["deploy/src/main/deploy/helm/templates/hono-adapter-http/hono-adapter-http-vertx-sec-route.yml", "deploy/src/main/deploy/helm/templates/artemis/artemis-deployment.yaml", "deploy/src/main/deploy/helm/templates/artemis/artemis-secret.yaml", "deploy/src/main/deploy/helm/templates/hono-service-auth/hono-service-auth-secret.yaml", "deploy/src/main/deploy/helm/templates/hono-adapter-amqp/hono-adapter-amqp-vertx-sec-route.yaml", "deploy/src/main/deploy/helm/templates/dispatch-router/dispatch-router-svc.yaml", "deploy/src/main/deploy/helm/templates/hono-adapter-mqtt/hono-adapter-mqtt-vertx-sec-route.yaml", "deploy/src/main/deploy/helm/templates/hono-adapter-amqp/hono-adapter-amqp-vertx-svc.yaml", "deploy/src/main/deploy/helm/templates/grafana/grafana-dashboard-configmap.yaml", "deploy/src/main/deploy/helm/templates/hono-service-device-registry/hono-service-device-registry-secret.yaml", "deploy/src/main/deploy/helm/templates/hono-adapter-http/hono-adapter-http-vertx-svc.yml", "deploy/src/main/deploy/helm/templates/dispatch-router/dispatch-router-secret.yaml", "deploy/src/main/deploy/helm/templates/hono-adapter-kura/hono-adapter-kura-deployment.yaml", "deploy/src/main/deploy/helm/templates/hono-adapter-amqp/hono-adapter-amqp-vertx-secret.yaml", "deploy/src/main/deploy/helm/templates/hono-service-device-registry/hono-service-device-registry-http-route.yaml", "deploy/src/main/deploy/helm/templates/hono-adapter-mqtt/hono-adapter-mqtt-vertx-route.yaml", "deploy/src/main/deploy/helm/templates/hono-service-auth/hono-service-auth-route.yaml", "deploy/src/main/deploy/helm/templates/hono-service-device-registry/hono-service-device-registry-svc.yaml", "deploy/src/main/deploy/helm/templates/dispatch-router/dispatch-router-ext-svc.yaml", "deploy/src/main/deploy/helm/templates/grafana/grafana-svc.yaml", "deploy/src/main/deploy/helm/templates/hono-adapter-amqp/hono-adapter-amqp-vertx-deployment.yaml", "deploy/src/main/deploy/helm/templates/hono-service-device-registry/hono-service-device-registry-pvc.yaml", "deploy/src/main/deploy/helm/templates/hono-adapter-http/hono-adapter-http-vertx-deployment.yml", "deploy/src/main/deploy/helm/templates/grafana/grafana-datasource-configmap.yaml", "deploy/src/main/deploy/helm/templates/artemis/artemis-svc.yaml", "deploy/src/main/deploy/helm/templates/hono-service-auth/hono-service-auth-deployment.yaml", "deploy/src/main/deploy/helm/templates/hono-service-device-registry/hono-service-device-registry-https-route.yaml", "deploy/src/main/deploy/helm/templates/hono-adapter-mqtt/hono-adapter-mqtt-vertx-svc.yaml", "deploy/src/main/deploy/helm/templates/hono-adapter-http/hono-adapter-http-vertx-secret.yaml", "deploy/src/main/deploy/helm/templates/hono-service-device-registry/hono-service-device-registry-amqps-route.yaml", "deploy/src/main/deploy/helm/templates/hono-adapter-mqtt/hono-adapter-mqtt-vertx-secret.yaml", "deploy/src/main/deploy/helm/templates/hono-service-device-registry/hono-service-device-registry-deployment.yaml", "deploy/src/main/deploy/helm/templates/hono-adapter-kura/hono-adapter-kura-sec-route.yaml", "deploy/src/main/deploy/helm/templates/dispatch-router/dispatch-router-deployment.yaml", "deploy/src/main/deploy/helm/templates/dispatch-router/dispatch-router-route.yaml", "deploy/src/main/deploy/helm/templates/hono-adapter-kura/hono-adapter-kura-route.yaml", "deploy/src/main/deploy/helm/templates/hono-adapter-mqtt/hono-adapter-mqtt-vertx-deployment.yaml", "deploy/src/main/deploy/helm/templates/hono-adapter-kura/hono-adapter-kura-svc.yaml", "deploy/src/main/deploy/helm/templates/hono-adapter-http/hono-adapter-http-vertx-route.yml", "deploy/src/main/deploy/helm/templates/hono-adapter-amqp/hono-adapter-amqp-vertx-route.yaml", "deploy/src/main/deploy/helm/Chart.yaml", "deploy/src/main/deploy/helm/templates/hono-service-auth/hono-service-auth-svc.yaml", "deploy/src/main/deploy/helm/templates/hono-adapter-kura/hono-adapter-kura-vertx-secret.yaml"]}, {"title": "Fix cache handling in RegistrationClientImpl (concerning multiple gateways)", "body": "Relates to #930, #1093:\r\nIn order to support the scenario of a device connecting via different gateways (not at the same time but alternating between gateways), the caching logic concerning `assertRegistration` requests has to be adapted.\r\n\r\nScenario:\r\n- device `dev-A` connects via gateway `gw-1` => no cache hit, assertRegistration is invoked (last-via is updated), new cache entry with key `(assert, dev-A, gw-1)` is created\r\n- device `dev-A` connects via gateway `gw-2` => no cache hit, assertRegistration is invoked (last-via is updated), new cache entry with key `(assert, dev-A, gw-2)` is created\r\n- device `dev-A` again connects via gateway `gw-1` => **cache hit** => assertRegistration is NOT invoked and last-via is NOT updated - that is an error\r\n\r\nPossible solution:\r\nWhen writing the cache entry `(assert, dev-A, gw-2)` above, we have to delete all other cache entries concerning `assert` and `dev-A`.\r\n\r\nEDIT: We shouldn't cache `RegistrationResult` objects representing devices with multiple `via` entries at all (see below).", "url": "https://github.com/eclipse/hono/issues/1103", "user": "calohmn", "labels": ["Device Registry", "bug"], "created": "2019-03-21 09:57:27", "closed": "2019-03-22 08:05:08", "commits": {"ec84947227564c6459801f708bdeabd7687a8bf0": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "ec84947227564c6459801f708bdeabd7687a8bf0", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["956c5639224a65ee66374cff3562eed68b7668c5"], "nameRev": "ec84947227564c6459801f708bdeabd7687a8bf0 tags/1.0-M1~4", "commitMessage": "[#930][#1103] Fixes regarding handling of \"last-via\" property.\n\nThe \"last-via\" property is now also written if the device connects\ndirectly (not through a gateway). It is now made sure that the\n'assertRegistration' results are not cached for devices having\nmultiple 'via' entries.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch-si.com>\n", "commitDateTime": "2019-03-22 09:05:07", "authoredDateTime": "2019-03-21 16:07:18", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/registration/BaseRegistrationService.java", "insertions": 30, "deletions": 16, "lines": 46}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/registration/CompleteBaseRegistrationServiceTest.java", "insertions": 38, "deletions": 0, "lines": 38}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseRegistrationService.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.registration.BaseRegistrationService.assertRegistration(java.lang.String,java.lang.String,io.opentracing.Span,io.vertx.core.Handler)", "TOT": 17, "UPD": 6, "INS": 2, "MOV": 9, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.registration.BaseRegistrationService.assertRegistration(java.lang.String,java.lang.String,java.lang.String,io.opentracing.Span,io.vertx.core.Handler)", "TOT": 9, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.registration.BaseRegistrationService.updateDeviceLastViaIfNeeded(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.json.JsonObject)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.registration.BaseRegistrationService.createSuccessfulRegistrationResult(java.lang.String,java.lang.String,io.vertx.core.json.JsonObject)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.registration.BaseRegistrationService.updateDeviceLastViaIfNeeded(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.json.JsonObject,io.opentracing.Span)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CompleteBaseRegistrationServiceTest.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "No metrics reported using legacy metrics", "body": "Building Hono with profile `metrics-graphite` and setting the *HONO_METRICS_LEGACY* environment variable to `true` results in no telemetry nor C&C metrics being reported by the protocol adapters anymore.", "url": "https://github.com/eclipse/hono/issues/1101", "user": "sophokles73", "labels": ["bug"], "created": "2019-03-20 16:57:13", "closed": "2019-03-20 18:12:09", "commits": {"f559673f39db30a6a725eee979c962f089179d4b": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "f559673f39db30a6a725eee979c962f089179d4b", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["6ae8374dedca236d24b40d44e5523772cea0d396"], "nameRev": "f559673f39db30a6a725eee979c962f089179d4b tags/1.0-M1~10", "commitMessage": "[#1101] Autowire legacy metrics when enabled.\n\nFixes #1101\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-03-20 19:11:49", "authoredDateTime": "2019-03-20 19:11:49", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/metric/MicrometerBasedMetrics.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/metric/MicrometerBasedMetricsTest.java", "insertions": 23, "deletions": 0, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MicrometerBasedMetrics.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.metric.MicrometerBasedMetrics.setLegacyMetrics(org.eclipse.hono.service.metric.LegacyMetrics)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MicrometerBasedMetricsTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.metric.MicrometerBasedMetricsTest.testReportTelemetryInvokesLegacyMetrics()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f559673f39db30a6a725eee979c962f089179d4b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 0, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service/metric"], "changesInPackagesSPOON": ["org.eclipse.hono.service.metric.MicrometerBasedMetrics.setLegacyMetrics(org.eclipse.hono.service.metric.LegacyMetrics)"]}, {"title": "no matches for kind \"Prometheus\" in version \"monitoring.coreos.com/v1\"", "body": "Hey, We try to use helm to deploy hono on kubernetes cluster, But I got this error as follows.\r\n\r\n`[root@test helm]# helm install --dep-up --name eclipse-hono --namespace hono .`\r\n\r\n`\r\nError: validation failed: [unable to recognize \"\": no matches for kind \"Prometheus\" in version \"monitoring.coreos.com/v1\", unable to recognize \"\": no matches for kind \"ServiceMonitor\" in version \"monitoring.coreos.com/v1\", unable to recognize \"\": no matches for kind \"ServiceMonitor\" in version \"monitoring.coreos.com/v1\", unable to recognize \"\": no matches for kind \"ServiceMonitor\" in version \"monitoring.coreos.com/v1\", unable to recognize \"\": no matches for kind \"ServiceMonitor\" in version \"monitoring.coreos.com/v1\", unable to recognize \"\": no matches for kind \"ServiceMonitor\" in version \"monitoring.coreos.com/v1\", unable to recognize \"\": no matches for kind \"ServiceMonitor\" in version \"monitoring.coreos.com/v1\", unable to recognize \"\": no matches for kind \"ServiceMonitor\" in version \"monitoring.coreos.com/v1\", unable to recognize \"\": no matches for kind \"ServiceMonitor\" in version \"monitoring.coreos.com/v1\", unable to recognize \"\": no matches for kind \"ServiceMonitor\" in version \"monitoring.coreos.com/v1\", unable to recognize \"\": no matches for kind \"ServiceMonitor\" in version \"monitoring.coreos.com/v1\"]\r\n`\r\n\r\nMy kubernetes version is 1.11.3, docker version is 17.06 and hono version is 0.9.\r\nThanks!", "url": "https://github.com/eclipse/hono/issues/1099", "user": "gongzhao1", "labels": ["bug"], "created": "2019-03-20 03:29:58", "closed": "2019-03-25 14:33:17", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Client context entries are pruned from a credential creation request.", "body": "When a request to create credentials containing some client context (i.e. additional properties) is forwarded to the device registry, hose extra properties are pruned during the various checks. \r\nThis leads to the device registry receiving the credential creation request without any additional properties.", "url": "https://github.com/eclipse/hono/issues/1070", "user": "jbtrystram", "labels": ["Device Registry", "bug"], "created": "2019-02-28 08:53:03", "closed": "2019-03-01 11:04:01", "commits": {"9c48973686c45b30868108dbc3ad31a755479445": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "9c48973686c45b30868108dbc3ad31a755479445", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["77baf72acc4b19d017032ddb1b7f8a3415ec7651"], "nameRev": "9c48973686c45b30868108dbc3ad31a755479445 tags/1.0-M1~41", "commitMessage": "[#1070] Support additional properties in CredentialsObject.\n\nFixes #1070\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-03-01 12:03:20", "authoredDateTime": "2019-03-01 11:03:54", "commitGitStats": [{"filePath": "core/src/main/java/org/eclipse/hono/util/CredentialsObject.java", "insertions": 50, "deletions": 63, "lines": 113}, {"filePath": "core/src/main/java/org/eclipse/hono/util/JsonBackedValueObject.java", "insertions": 110, "deletions": 0, "lines": 110}, {"filePath": "core/src/main/java/org/eclipse/hono/util/TenantObject.java", "insertions": 9, "deletions": 51, "lines": 60}, {"filePath": "core/src/test/java/org/eclipse/hono/util/CredentialsObjectTest.java", "insertions": 30, "deletions": 1, "lines": 31}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/registry/CredentialsHttpIT.java", "insertions": 24, "deletions": 1, "lines": 25}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CredentialsObject.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.getSecretsAsMaps()", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 4, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.setSecrets(java.util.List)", "TOT": 8, "UPD": 4, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 6}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.getDeviceId()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.setDeviceId(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.getType()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.setType(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.getAuthId()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.setAuthId(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.isEnabled()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.setEnabled(boolean)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.getSecrets()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.addSecret(io.vertx.core.json.JsonObject)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.checkValidity(java.util.function.BiConsumer)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.checkSecrets(java.util.function.BiConsumer)", "TOT": 13, "UPD": 0, "INS": 7, "MOV": 2, "DEL": 4}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.setProperty(java.lang.String,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JsonBackedValueObject.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.JsonBackedValueObject", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TenantObject.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.TenantObject.getTenantId()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.TenantObject.isEnabled()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.util.TenantObject", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.util.TenantObject.getPropertiesAsMap()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.util.TenantObject.getProperty(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.util.TenantObject.getProperty(io.vertx.core.json.JsonObject,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.util.TenantObject.setProperty(java.lang.String,java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.util.TenantObject.setTenantId(java.lang.String)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.util.TenantObject.setEnabled(boolean)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.util.TenantObject.setTrustAnchor(java.security.PublicKey,javax.security.auth.x500.X500Principal)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.util.TenantObject.setTrustAnchor(java.security.cert.X509Certificate)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "CredentialsObjectTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.CredentialsObjectTest.testMarshaling()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CredentialsHttpIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.registry.CredentialsHttpIT.testAddCredentialsSucceedsForAdditionalProperties(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9c48973686c45b30868108dbc3ad31a755479445"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 169, "deletions": 114, "lines": 283, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 99, "UPD": 7, "INS": 34, "MOV": 19, "DEL": 39, "spoonFilesChanged": 4, "spoonMethodsChanged": 29}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/org/eclipse/hono/util"], "changesInPackagesSPOON": ["org.eclipse.hono.util.CredentialsObject.setDeviceId(java.lang.String)", "org.eclipse.hono.util.CredentialsObject.checkSecrets(java.util.function.BiConsumer)", "org.eclipse.hono.util.TenantObject.isEnabled()", "org.eclipse.hono.util.JsonBackedValueObject", "org.eclipse.hono.util.TenantObject.getProperty(io.vertx.core.json.JsonObject,java.lang.String)", "org.eclipse.hono.util.CredentialsObject.setEnabled(boolean)", "org.eclipse.hono.util.CredentialsObject.getSecretsAsMaps()", "org.eclipse.hono.util.TenantObject.setTrustAnchor(java.security.cert.X509Certificate)", "org.eclipse.hono.util.CredentialsObject.getDeviceId()", "org.eclipse.hono.util.CredentialsObject.isEnabled()", "org.eclipse.hono.util.CredentialsObject", "org.eclipse.hono.util.TenantObject.setProperty(java.lang.String,java.lang.Object)", "org.eclipse.hono.util.TenantObject.setTenantId(java.lang.String)", "org.eclipse.hono.util.TenantObject.setTrustAnchor(java.security.PublicKey,javax.security.auth.x500.X500Principal)", "org.eclipse.hono.util.CredentialsObject.setSecrets(java.util.List)", "org.eclipse.hono.util.CredentialsObject.checkValidity(java.util.function.BiConsumer)", "org.eclipse.hono.util.CredentialsObject.setProperty(java.lang.String,java.lang.Object)", "org.eclipse.hono.util.CredentialsObject.setAuthId(java.lang.String)", "org.eclipse.hono.util.TenantObject.getTenantId()", "org.eclipse.hono.util.CredentialsObject.getType()", "org.eclipse.hono.util.CredentialsObject.addSecret(io.vertx.core.json.JsonObject)", "org.eclipse.hono.util.CredentialsObject.getSecrets()", "org.eclipse.hono.tests.registry.CredentialsHttpIT.testAddCredentialsSucceedsForAdditionalProperties(io.vertx.ext.unit.TestContext)", "org.eclipse.hono.util.CredentialsObject.getAuthId()", "org.eclipse.hono.util.CredentialsObject.setType(java.lang.String)", "org.eclipse.hono.util.TenantObject.getPropertiesAsMap()", "org.eclipse.hono.util.TenantObject.getProperty(java.lang.String)", "org.eclipse.hono.util.TenantObject.setEnabled(boolean)", "org.eclipse.hono.util.TenantObject"]}, {"title": "[User Guide] Examples for AMQP are broken", "body": "The examples for AMQP in the User Guide are broken. E.g.:\r\n\r\n`$ /hono/cli/target$ java -jar hono-cli-0.7-SNAPSHOT-exec.jar --spring.profiles.active=amqp-adapter-cli --message.address=event --payload='{\"alarm\": 1}'`\r\n\r\nHere `--payload` needs to be `--message.payload`. \r\n\r\nAnd in\r\n\r\n`$ /hono/cli/target$ java -jar hono-cli-0.7-SNAPSHOT-exec.jar --spring.profiles.active=amqp-adapter-cli --username=\"\" --password=\"\"` \r\n\r\nthe arguments `username` and `password` need to be prefixed with `hono.client.`\r\n\r\nFurthermore the application does not start with empty username or password.", "url": "https://github.com/eclipse/hono/issues/1067", "user": "b-abel", "labels": ["AMQP Adapter", "bug", "documentation"], "created": "2019-02-22 17:01:46", "closed": "2019-02-26 12:05:55", "commits": {"9315ae781b87d7f514f18e3614e50a609f8f7199": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "9315ae781b87d7f514f18e3614e50a609f8f7199", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["4e5902d5df62c93583d9ab7f6c7ec842a362c536"], "nameRev": "9315ae781b87d7f514f18e3614e50a609f8f7199 tags/0.9~6", "commitMessage": "[#1067] Fix AMQP client examples.\n\nExpose AMQP adapter ports on 5671-5672 by default.\n\nFixes #1067\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-02-26 12:51:05", "authoredDateTime": "2019-02-25 14:22:35", "commitGitStats": [{"filePath": "cli/src/main/java/org/eclipse/hono/cli/AmqpSend.java", "insertions": 47, "deletions": 25, "lines": 72}, {"filePath": "cli/src/main/resources/application.yml", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "deploy/src/main/deploy/docker/swarm_deploy.sh", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "deploy/src/main/deploy/helm/templates/hono-adapter-amqp/hono-adapter-amqp-vertx-svc.yaml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "deploy/src/main/deploy/resource-descriptors/hono-adapter-amqp/hono-adapter-amqp-vertx-svc.yaml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "deploy/src/main/sandbox/sandbox_deploy.sh", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "site/content/deployment/kubernetes.md", "insertions": 36, "deletions": 21, "lines": 57}, {"filePath": "site/content/user-guide/amqp-adapter.md", "insertions": 29, "deletions": 46, "lines": 75}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AmqpSend.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.cli.AmqpSend.start()", "TOT": 14, "UPD": 1, "INS": 3, "MOV": 7, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.cli.AmqpSend.printDelivery(io.vertx.proton.ProtonDelivery,java.io.PrintWriter)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.cli.AmqpSend.connectToAdapter()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9315ae781b87d7f514f18e3614e50a609f8f7199"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 54, "deletions": 34, "lines": 88, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 17, "UPD": 1, "INS": 6, "MOV": 7, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["deploy/src/main/sandbox/sandbox_deploy.sh", "deploy/src/main/deploy/docker/swarm_deploy.sh", "deploy/src/main/deploy/helm/templates/hono-adapter-amqp/hono-adapter-amqp-vertx-svc.yaml", "cli/src/main/java/org/eclipse/hono/cli", "cli/src/main/resources/application.yml", "deploy/src/main/deploy/resource-descriptors/hono-adapter-amqp/hono-adapter-amqp-vertx-svc.yaml"], "changesInPackagesSPOON": ["org.eclipse.hono.cli.AmqpSend.connectToAdapter()", "org.eclipse.hono.cli.AmqpSend.start()", "org.eclipse.hono.cli.AmqpSend.printDelivery(io.vertx.proton.ProtonDelivery,java.io.PrintWriter)"]}, {"title": "Ttd value not given downstream", "body": "Consider the following scenario:\r\n- Deploy Hono with the `swarm_deploy.sh` script\r\n- Start the `HonoExampleApplication`\r\n- Upload Telemetry Data using the HTTP Adapter with the `hono-ttd` param - _without having registered the device yet!_\r\n- Register the device\r\n- Upload Telemetry Data again - with the `hono-ttd` param\r\n\r\n=> The `HonoExampleApplication` doesn't receive the Ttd value.\r\n", "url": "https://github.com/eclipse/hono/issues/1062", "user": "calohmn", "labels": ["HTTP Adapter", "bug"], "created": "2019-02-21 17:21:47", "closed": "2019-02-22 10:58:04", "commits": {"3589cef6d0eeabab96c2e09f7b0d1bad78eb1cd0": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "3589cef6d0eeabab96c2e09f7b0d1bad78eb1cd0", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["6251b9a8b21cd7480eb5d62677a8e66b4debdc59"], "nameRev": "3589cef6d0eeabab96c2e09f7b0d1bad78eb1cd0 tags/0.9~17", "commitMessage": "[#1062] Do not open command consumer for unknown device.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2019-02-22 10:53:38", "authoredDateTime": "2019-02-22 10:52:54", "commitGitStats": [{"filePath": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapter.java", "insertions": 15, "deletions": 11, "lines": 26}, {"filePath": "adapters/http-vertx-base/src/test/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapterTest.java", "insertions": 54, "deletions": 1, "lines": 55}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractVertxBasedHttpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.doUploadMessage(io.vertx.ext.web.RoutingContext,java.lang.String,java.lang.String,io.vertx.core.buffer.Buffer,java.lang.String,io.vertx.core.Future,org.eclipse.hono.service.metric.MetricsTags$EndpointType)", "TOT": 9, "UPD": 4, "INS": 2, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "AbstractVertxBasedHttpProtocolAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapterTest.testUploadTelemetryFailsForUnknownDevice()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapterTest.testUploadTelemetryFailsForDisabledTenant()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3589cef6d0eeabab96c2e09f7b0d1bad78eb1cd0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 15, "deletions": 11, "lines": 26, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 4, "INS": 2, "MOV": 2, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.doUploadMessage(io.vertx.ext.web.RoutingContext,java.lang.String,java.lang.String,io.vertx.core.buffer.Buffer,java.lang.String,io.vertx.core.Future,org.eclipse.hono.service.metric.MetricsTags$EndpointType)"]}, {"title": "Fix encoding of OpenTracing span in AMQP messages", "body": "My understanding is that the current encoding of OpenTracing information in AMQP messages could cause some issues it is not compliant with the AMQP spec.\r\n\r\nAbout annotations the spec says (http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#type-annotations):\r\n\r\n> The annotations type is a map where the keys are restricted to be of type symbol or of type ulong. All ulong keys, and all symbolic keys except those beginning with \"x-\" are reserved. Keys beginning with \"x-opt-\" MUST be ignored if not understood. On receiving an annotation key which is not understood, and which does not begin with \"x-opt\", the receiving AMQP container MUST detach the link with a not-implemented error. \r\n\r\nWhat seems to happen right now is that the `MessageAnnotationsInjectAdapter` is being used in combination with the `TEXT_MAP` format, which would directly inject `uber-trace-id` and `uberctx-*` into the message annotation map (see: `io.jaegertracing.internal.propagation.TextMapCodec`):\r\n\r\nSo it might happen, that a receiver simply closes this link when the annotation is present in the map.\r\n\r\nThe proposal would be to use something like `x-opt-opentracing-trace-id` and `x-opt-opentracing-ctx-` instead. ", "url": "https://github.com/eclipse/hono/issues/1046", "user": "ctron", "labels": ["Tracing", "bug"], "created": "2019-02-15 13:06:28", "closed": "2019-02-22 08:32:01", "commits": {"3caa72dc819cac31522b934e6f065a73f06436ae": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "3caa72dc819cac31522b934e6f065a73f06436ae", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["dc8a7d62b5631fe686ae5d65997dee960a2d2353"], "nameRev": "3caa72dc819cac31522b934e6f065a73f06436ae tags/0.9~23", "commitMessage": "[#1046][#1012] Fix encoding of OpenTracing span context in AMQP message.\n\nThe span context will now be stored in the map value of a\n\"x-opt-trace-context\" message annotation.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch-si.com>\n", "commitDateTime": "2019-02-21 13:42:34", "authoredDateTime": "2019-02-20 15:49:23", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/CommandConsumer.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractRequestResponseClient.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractSender.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/TelemetrySenderImpl.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/AbstractRequestResponseClientTest.java", "insertions": 8, "deletions": 3, "lines": 11}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/AbstractSenderTest.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/TenantClientImplTest.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "core/src/main/java/org/eclipse/hono/tracing/MessageAnnotationsExtractAdapter.java", "insertions": 38, "deletions": 19, "lines": 57}, {"filePath": "core/src/main/java/org/eclipse/hono/tracing/MessageAnnotationsInjectAdapter.java", "insertions": 28, "deletions": 13, "lines": 41}, {"filePath": "core/src/main/java/org/eclipse/hono/tracing/TracingHelper.java", "insertions": 44, "deletions": 1, "lines": 45}, {"filePath": "core/src/test/java/org/eclipse/hono/tracing/MessageAnnotationsInjectExtractAdapterTest.java", "insertions": 65, "deletions": 0, "lines": 65}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/amqp/RequestResponseEndpoint.java", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandConsumer.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.CommandConsumer.create(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler,io.opentracing.Tracer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractRequestResponseClient.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClient.sendRequest(org.apache.qpid.proton.message.Message,io.vertx.core.Handler,java.lang.Object,io.opentracing.Span)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractSender.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSender.send(org.apache.qpid.proton.message.Message,io.opentracing.SpanContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TelemetrySenderImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.TelemetrySenderImpl.sendAndWaitForOutcome(org.apache.qpid.proton.message.Message,io.opentracing.SpanContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractRequestResponseClientTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClientTest.testSendOneWayRequestSucceedsOnAcceptedMessage(io.vertx.ext.unit.TestContext)", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AbstractSenderTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSenderTest.newSender(java.lang.String,java.lang.String).1.startSpan(io.opentracing.SpanContext,org.apache.qpid.proton.message.Message)", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "TenantClientImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.TenantClientImplTest.setUp()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MessageAnnotationsExtractAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tracing.MessageAnnotationsExtractAdapter.getDeliveryAnnotations()", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tracing.MessageAnnotationsExtractAdapter.iterator()", "TOT": 5, "UPD": 1, "INS": 3, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.tracing.MessageAnnotationsExtractAdapter.iterator().1.hasNext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tracing.MessageAnnotationsExtractAdapter.iterator().1.next()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tracing.MessageAnnotationsExtractAdapter", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MessageAnnotationsInjectAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tracing.MessageAnnotationsInjectAdapter.getDeliveryAnnotations()", "TOT": 12, "UPD": 6, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tracing.MessageAnnotationsInjectAdapter.put(java.lang.String,java.lang.String)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tracing.MessageAnnotationsInjectAdapter", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tracing.MessageAnnotationsInjectAdapter.getPropertiesMap()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TracingHelper.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tracing.TracingHelper", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tracing.TracingHelper.injectSpanContext(io.opentracing.Tracer,io.opentracing.SpanContext,org.apache.qpid.proton.message.Message)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tracing.TracingHelper.extractSpanContext(io.opentracing.Tracer,org.apache.qpid.proton.message.Message)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MessageAnnotationsInjectExtractAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tracing.MessageAnnotationsInjectExtractAdapterTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RequestResponseEndpoint.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.amqp.RequestResponseEndpoint.extractSpanContext(org.apache.qpid.proton.message.Message)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "HonoClient: Error processing \"not accepted by peer\" response (0.9-M2)", "body": "\r\nWhen processing the _delivery update_ received after having sent a message, the _Sender_ component of `HonoClient` (ie. `AbstractSender` and `AbstractRequestResponseClient`) produces an `IllegalArgumentException`:\r\n````\r\n12:15:46.525 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.EventSenderImpl - message [message ID: EventSenderImpl-7] not accepted by peer, remote state: Released{}\r\n12:15:46.525 [vert.x-eventloop-thread-0] ERROR o.e.hono.client.impl.EventSenderImpl - error handling delivery update\r\njava.lang.IllegalArgumentException: client error code must be >= 400 and < 500\r\n\tat org.eclipse.hono.client.ClientErrorException.<init>(ClientErrorException.java:68)\r\n\tat org.eclipse.hono.client.ClientErrorException.<init>(ClientErrorException.java:32)\r\n\tat org.eclipse.hono.client.impl.AbstractSender.lambda$sendMessageAndWaitForOutcome$6(AbstractSender.java:458)\r\n\tat io.vertx.proton.impl.ProtonDeliveryImpl.fireUpdate(ProtonDeliveryImpl.java:153)\r\n\tat io.vertx.proton.impl.ProtonTransport.handleSocketBuffer(ProtonTransport.java:160)\r\n\tat io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler.handle(NetSocketImpl.java:392)\r\n\tat io.vertx.core.streams.impl.InboundBuffer.handleEvent(InboundBuffer.java:225)\r\n\tat io.vertx.core.streams.impl.InboundBuffer.write(InboundBuffer.java:123)\r\n\tat io.vertx.core.net.impl.NetSocketImpl.handleMessage(NetSocketImpl.java:370)\r\n\tat io.vertx.core.net.impl.ConnectionBase.handleRead(ConnectionBase.java:386)\r\n````\r\nExtra exception handling has been added to get this stacktrace - the exception is not logged with the standard Hono build.\r\n\r\nThis exception leads the `ProtonTransport` associated with the corresponding AMQP connection to not handle any further AMQP events, which will lead to followup errors (e.g. timeouts when trying to create a new sender).\r\n", "url": "https://github.com/eclipse/hono/issues/1020", "user": "calohmn", "labels": ["Client", "bug"], "created": "2019-02-04 13:05:13", "closed": "2019-02-05 07:51:12", "commits": {"7bd8323118ec5a60a0d29db8e55a4d2a686a9110": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "7bd8323118ec5a60a0d29db8e55a4d2a686a9110", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["98b2786807237953f15754d8e97f42ea400f3cfe"], "nameRev": "7bd8323118ec5a60a0d29db8e55a4d2a686a9110 tags/0.9~88", "commitMessage": "[#1020] Fix wrong exceptions being thrown (not matching status code).\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch-si.com>", "commitDateTime": "2019-02-05 08:51:11", "authoredDateTime": "2019-02-05 08:51:11", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractRequestResponseClient.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractSender.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractRequestResponseClient.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClient.sendRequest(org.apache.qpid.proton.message.Message,io.vertx.core.Handler,java.lang.Object,io.opentracing.Span)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "AbstractSender.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSender.sendMessageAndWaitForOutcome(org.apache.qpid.proton.message.Message,io.opentracing.Span)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7bd8323118ec5a60a0d29db8e55a4d2a686a9110"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 5, "lines": 10, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 7, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.AbstractRequestResponseClient.sendRequest(org.apache.qpid.proton.message.Message,io.vertx.core.Handler,java.lang.Object,io.opentracing.Span)", "org.eclipse.hono.client.impl.AbstractSender.sendMessageAndWaitForOutcome(org.apache.qpid.proton.message.Message,io.opentracing.Span)"]}, {"title": "HonoClient: Wrong exception when using invalid SASL credentials", "body": "Since the update to vert.x 3.6, there is a different exception being thrown in case of a failed SASL authentication attempt. See https://github.com/vert-x3/vertx-proton/issues/69.\r\n\r\nThe corresponding change in Hono is still missing. This leads to a `ServerErrorException` (with `HTTP_UNAVAILABLE`/\"failed to connect\") being thrown. It should be a `ClientErrorException` (`HTTP_UNAUTHORIZED`) instead.", "url": "https://github.com/eclipse/hono/issues/1013", "user": "calohmn", "labels": ["Client", "bug"], "created": "2019-01-29 16:09:16", "closed": "2019-02-05 13:51:45", "commits": {"db094ac02f03a06d228680d12116a2eb650cd9d1": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "8a32d50db35d8d236aa2751fa762ec144e664f0b": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "db094ac02f03a06d228680d12116a2eb650cd9d1", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "8a32d50db35d8d236aa2751fa762ec144e664f0b", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["3b5059b16372fbb5fa3a8c4eac521ea7da45a312"], "nameRev": "8a32d50db35d8d236aa2751fa762ec144e664f0b tags/0.9~85", "commitMessage": "[#1013] Fix wrong exception being thrown on SASL handshake failure.\n\nFixes #1013\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch-si.com>\n", "commitDateTime": "2019-02-05 15:02:34", "authoredDateTime": "2019-01-29 17:12:57", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoClientImpl.java", "insertions": 37, "deletions": 14, "lines": 51}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/HonoClientImplTest.java", "insertions": 101, "deletions": 7, "lines": 108}, {"filePath": "site/content/release-notes.md", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/client/HonoClientImplIT.java", "insertions": 81, "deletions": 0, "lines": 81}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoClientImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.reconnect(java.lang.Throwable,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.isConnectionFailureEntailingReconnectAttempt(java.lang.Throwable)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.failConnectionAttempt(java.lang.Throwable,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.connect(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "HonoClientImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testConnectFailsWithClientErrorForSecurityException(io.vertx.ext.unit.TestContext)", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testConnectFailsWithClientErrorForNoSASLMechanismException(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testConnectFailsWithClientErrorForTransientSaslSystemException(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testConnectFailsWithClientErrorForPermanentSaslSystemException(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testConnectFailsWithClientErrorForAuthenticationException(io.vertx.ext.unit.TestContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoClientImplIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.client.HonoClientImplIT", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8a32d50db35d8d236aa2751fa762ec144e664f0b"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 37.0, "deletions": 14.0, "lines": 51.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 11.0, "UPD": 0.0, "INS": 5.0, "MOV": 5.0, "DEL": 1.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.HonoClientImpl.connect(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.isConnectionFailureEntailingReconnectAttempt(java.lang.Throwable)", "org.eclipse.hono.tests.client.HonoClientImplIT", "org.eclipse.hono.client.impl.HonoClientImpl.reconnect(java.lang.Throwable,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.failConnectionAttempt(java.lang.Throwable,io.vertx.core.Handler)"]}, {"title": "Example device registry overwrites existing config when restarting in openshift", "body": "The init container for openshift of the device registry copies the example configuration to the configuration folder using following command: \r\n`cp -u /etc/examples/example-credentials.json /var/lib/hono/device-registry/credentials.json && cp -u /etc/examples/example-tenants.json /var/lib/hono/device-registry/tenants.json`.  \r\nHowever, this command overwrites the existing configuration. I think this is because the configmaps (example-credentials and example-tenants) are reacreated in the pod when it starts.  \r\nThis can be solved by replacing the -u flag with the -n flag resulting in following command:\r\n`cp -n /etc/examples/example-credentials.json /var/lib/hono/device-registry/credentials.json && cp -n /etc/examples/example-tenants.json /var/lib/hono/device-registry/tenants.json`.  \r\nFrom the [cp command page](http://man7.org/linux/man-pages/man1/cp.1.html):  \r\n- -n, --no-clobber\r\n              do not overwrite an existing file (overrides a previous -i\r\n              option)\r\n- -u, --update\r\n              copy only when the SOURCE file is newer than the destination\r\n              file or when the destination file is missing", "url": "https://github.com/eclipse/hono/issues/1007", "user": "BobClaerhout", "labels": ["bug"], "created": "2019-01-25 15:58:39", "closed": "2019-03-05 10:06:50", "commits": {}, "ttf": 38.000277777777775, "commitsDetails": []}, {"title": "CertificateExpiredException: NotAfter: Wed Dec 12 16:01:54 CET 2018", "body": "Hi,\r\n\r\nI tried to connect the sandbox for a test but ended up with \r\n\r\n`java.security.cert.CertificateExpiredException: NotAfter: Wed Dec 12 16:01:54 CET 2018` \r\n\r\ncould you please regenerate the certificate ?\r\n\r\nthanks\r\n", "url": "https://github.com/eclipse/hono/issues/985", "user": "jdeantoni", "labels": ["Sandbox", "bug"], "created": "2019-01-11 10:27:13", "closed": "2019-01-11 12:33:15", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "MQTT adapter: NPE in incrementUndeliverableMessages", "body": "We got this exception in the log of the MQTT adapter:\r\n````\r\n09:44:57.701 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing client [target: tenant]\r\n09:44:57.712 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing message sender [target: telemetry/t123, credit: 1]\r\n09:44:57.712 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing client [target: registration/t123]\r\n09:44:57.712 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing client [target: tenant]\r\n09:44:57.712 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing message sender [target: telemetry/t123, credit: 0]\r\n09:44:57.712 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing client [target: registration/t123]\r\n09:44:57.712 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing client [target: tenant]\r\n09:44:57.712 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.m.i.VertxBasedMqttProtocolAdapter - cannot process message [endpoint: telemetry] from device [tenantId: t123, deviceId: testDevice]\r\norg.eclipse.hono.client.ServerErrorException: no credit available\r\n\tat org.eclipse.hono.client.impl.AbstractSender.lambda$send$4(AbstractSender.java:214)\r\n\tat org.eclipse.hono.util.HonoProtonHelper.executeOrRunOnContext(HonoProtonHelper.java:180)\r\n\tat org.eclipse.hono.client.impl.AbstractHonoClient.executeOrRunOnContext(AbstractHonoClient.java:132)\r\n\tat org.eclipse.hono.client.impl.AbstractSender.send(AbstractSender.java:212)\r\n\tat org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.lambda$uploadMessage$39(AbstractVertxBasedMqttProtocolAdapter.java:898)\r\n\tat io.vertx.core.Future.lambda$compose$1(Future.java:265)\r\n\tat io.vertx.core.impl.CompositeFutureImpl.setHandler(CompositeFutureImpl.java:147)\r\n\tat io.vertx.core.impl.CompositeFutureImpl.setHandler(CompositeFutureImpl.java:24)\r\n\tat io.vertx.core.Future.compose(Future.java:261)\r\n\tat org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.uploadMessage(AbstractVertxBasedMqttProtocolAdapter.java:878)\r\n\tat org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.uploadTelemetryMessage(AbstractVertxBasedMqttProtocolAdapter.java:734)\r\n\tat org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.uploadMessage(AbstractVertxBasedMqttProtocolAdapter.java:694)\r\n\tat org.eclipse.hono.adapter.mqtt.impl.VertxBasedMqttProtocolAdapter.lambda$onPublishedMessage$1(VertxBasedMqttProtocolAdapter.java:52)\r\n\tat io.vertx.core.Future.lambda$compose$1(Future.java:265)\r\n\tat io.vertx.core.impl.FutureImpl.setHandler(FutureImpl.java:79)\r\n\tat io.vertx.core.Future.compose(Future.java:261)\r\n\tat org.eclipse.hono.adapter.mqtt.impl.VertxBasedMqttProtocolAdapter.onPublishedMessage(VertxBasedMqttProtocolAdapter.java:52)\r\n\tat org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.lambda$handlePublishedMessage$33(AbstractVertxBasedMqttProtocolAdapter.java:639)\r\n\tat io.vertx.core.Future.lambda$compose$1(Future.java:265)\r\n\tat io.vertx.core.impl.SucceededFuture.setHandler(SucceededFuture.java:40)\r\n\tat io.vertx.core.Future.compose(Future.java:261)\r\n\tat org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.handlePublishedMessage(AbstractVertxBasedMqttProtocolAdapter.java:639)\r\n\tat org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.lambda$registerHandlers$45(AbstractVertxBasedMqttProtocolAdapter.java:1214)\r\n\tat io.vertx.mqtt.impl.MqttEndpointImpl.handlePublish(MqttEndpointImpl.java:500)\r\n\tat io.vertx.mqtt.impl.MqttServerConnection.handlePublish(MqttServerConnection.java:323)\r\n[...]\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n09:44:57.712 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.m.i.VertxBasedMqttProtocolAdapter - discarding message [topic: telemetry] from device: no credit available\r\n09:44:57.713 [vert.x-eventloop-thread-0] ERROR io.vertx.core.impl.ContextImpl - Unhandled exception\r\njava.lang.NullPointerException: null\r\n\tat java.base/java.util.Objects.requireNonNull(Objects.java:221)\r\n\tat io.micrometer.core.instrument.ImmutableTag.<init>(ImmutableTag.java:30)\r\n\tat io.micrometer.core.instrument.Tag.of(Tag.java:29)\r\n\tat io.micrometer.core.instrument.Tags.and(Tags.java:48)\r\n\tat io.micrometer.core.instrument.Tags.of(Tags.java:166)\r\n\tat org.eclipse.hono.service.metric.MicrometerBasedMetrics.incrementUndeliverableMessages(MicrometerBasedMetrics.java:95)\r\n\tat org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.lambda$handlePublishedMessage$34(AbstractVertxBasedMqttProtocolAdapter.java:654)\r\n\tat io.vertx.core.impl.FutureImpl.setHandler(FutureImpl.java:79)\r\n\tat org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.handlePublishedMessage(AbstractVertxBasedMqttProtocolAdapter.java:640)\r\n\tat org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.lambda$registerHandlers$45(AbstractVertxBasedMqttProtocolAdapter.java:1214)\r\n\tat io.vertx.mqtt.impl.MqttEndpointImpl.handlePublish(MqttEndpointImpl.java:500)\r\n\tat io.vertx.mqtt.impl.MqttServerConnection.handlePublish(MqttServerConnection.java:323)\r\n````\r\n`metrics.incrementUndeliverableMessages(context.endpoint(), context.tenant())` fails with an NPE because `context.tenant()` is null.\r\n\r\nMy guess here would be that the actual tenant in this case comes from the authenticated device (see `VertxBasedMqttProtocolAdapter.checkAddress` - \"use authenticated device's tenant to fill in missing information\") and `context.tenant()` is still the original value.\r\n", "url": "https://github.com/eclipse/hono/issues/970", "user": "calohmn", "labels": ["MQTT Adapter", "Metrics", "bug"], "created": "2018-12-19 13:12:58", "closed": "2018-12-20 13:24:45", "commits": {"53735355774876390bf7e8b168c0129477ebea61": {"commitGHEventType": "closed", "commitUser": "sophokles73"}, "582486b86e1e07ced8bbc167cffdf882fd30c9c9": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "53735355774876390bf7e8b168c0129477ebea61", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["dbffcfaa68cc26c4a37cb66f57216722df4420a4"], "nameRev": "53735355774876390bf7e8b168c0129477ebea61 tags/0.9-M1~11", "commitMessage": "[#970] Fix NPE when reporting undeliverable message metric.\n\nThe MQTT adapter now first tries to determine a message's origin\ndevice's tenant based on the authenticated endpoint and then falls back\nto using the tenant from the message's topic.\n\nFixes #970\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-12-20 14:24:29", "authoredDateTime": "2018-12-20 14:23:08", "commitGitStats": [{"filePath": "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapter.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/MqttContext.java", "insertions": 17, "deletions": 7, "lines": 24}, {"filePath": "adapters/mqtt-vertx-base/src/test/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapterTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "adapters/mqtt-vertx-base/src/test/java/org/eclipse/hono/adapter/mqtt/MqttContextTest.java", "insertions": 57, "deletions": 0, "lines": 57}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/metric/Metrics.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/metric/MicrometerBasedMetrics.java", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractVertxBasedMqttProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.getCredentials(io.vertx.mqtt.MqttEndpoint)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MqttContext.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.MqttContext.tenant()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "AbstractVertxBasedMqttProtocolAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapterTest.testUploadQoS1MessageSendsPubAckOnSuccess(io.vertx.core.Future,java.util.function.BiConsumer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapterTest.testOnUnauthenticatedMessageDoesNotSendPubAckOnFailure(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapterTest.testUploadTelemetryMessageIncludesRetainAnnotation(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapterTest.testUploadTelemetryMessageFailsForUnknownDevice(io.vertx.ext.unit.TestContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapterTest.testUploadTelemetryMessageFailsForDisabledTenant(io.vertx.ext.unit.TestContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MqttContextTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.MqttContextTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Metrics.java", "spoonMethods": []}, {"spoonFilePath": "MicrometerBasedMetrics.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.metric.MicrometerBasedMetrics.incrementConnections(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.metric.MicrometerBasedMetrics.decrementConnections(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.metric.MicrometerBasedMetrics.incrementProcessedMessages(java.lang.String,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.metric.MicrometerBasedMetrics.incrementUndeliverableMessages(java.lang.String,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.metric.MicrometerBasedMetrics.incrementProcessedPayload(java.lang.String,java.lang.String,long)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.metric.MicrometerBasedMetrics.incrementCommandDeliveredToDevice(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.metric.MicrometerBasedMetrics.incrementNoCommandReceivedAndTTDExpired(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.metric.MicrometerBasedMetrics.incrementCommandResponseDeliveredToApplication(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "582486b86e1e07ced8bbc167cffdf882fd30c9c9", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["ab87d3c7ca43ce3c9a33ecb6c87be4f5968a7929"], "nameRev": "582486b86e1e07ced8bbc167cffdf882fd30c9c9 tags/0.9-M1~8", "commitMessage": "[#970] Fix typo.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-12-20 14:50:07", "authoredDateTime": "2018-12-20 14:50:07", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/metric/Metrics.java", "insertions": 8, "deletions": 8, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Metrics.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["53735355774876390bf7e8b168c0129477ebea61", "582486b86e1e07ced8bbc167cffdf882fd30c9c9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 46, "deletions": 17, "lines": 63, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 18.0, "UPD": 4.0, "INS": 12.0, "MOV": 1.0, "DEL": 1.0, "spoonFilesChanged": 3, "spoonMethodsChanged": 10}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service/metric", "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt"], "changesInPackagesSPOON": ["org.eclipse.hono.service.metric.MicrometerBasedMetrics.incrementConnections(java.lang.String)", "org.eclipse.hono.service.metric.MicrometerBasedMetrics.incrementCommandDeliveredToDevice(java.lang.String)", "org.eclipse.hono.service.metric.MicrometerBasedMetrics.incrementNoCommandReceivedAndTTDExpired(java.lang.String)", "org.eclipse.hono.service.metric.MicrometerBasedMetrics.decrementConnections(java.lang.String)", "org.eclipse.hono.service.metric.MicrometerBasedMetrics.incrementProcessedMessages(java.lang.String,java.lang.String)", "org.eclipse.hono.service.metric.MicrometerBasedMetrics.incrementCommandResponseDeliveredToApplication(java.lang.String)", "org.eclipse.hono.adapter.mqtt.MqttContext.tenant()", "org.eclipse.hono.service.metric.MicrometerBasedMetrics.incrementProcessedPayload(java.lang.String,java.lang.String,long)", "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.getCredentials(io.vertx.mqtt.MqttEndpoint)", "org.eclipse.hono.service.metric.MicrometerBasedMetrics.incrementUndeliverableMessages(java.lang.String,java.lang.String)"]}, {"title": "HTTP adapter must not accept command responses from non-existing devices", "body": " The HTTP adapter must verify the registration status of devices uploading a command response.", "url": "https://github.com/eclipse/hono/issues/956", "user": "sophokles73", "labels": ["C&C", "HTTP Adapter", "bug"], "created": "2018-12-12 08:13:37", "closed": "2018-12-12 08:15:15", "commits": {"4bd2f00dcdb9a7ea4978e6a0f23b065e751f1557": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "4bd2f00dcdb9a7ea4978e6a0f23b065e751f1557", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["932442ae506ab6644a1e317f3a1f26f47496ca30"], "nameRev": "4bd2f00dcdb9a7ea4978e6a0f23b065e751f1557 tags/0.9-M1~41", "commitMessage": "[#956] Check device registration during command response upload\n\nFixes #956 \r\n\r\nSigned-off-by: Kartheeswaran Kalidass <Kartheeswaran.Kalidass@bosch-si.com>\r\n", "commitDateTime": "2018-12-12 09:15:11", "authoredDateTime": "2018-12-12 09:15:11", "commitGitStats": [{"filePath": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapter.java", "insertions": 32, "deletions": 25, "lines": 57}, {"filePath": "adapters/http-vertx-base/src/test/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapterTest.java", "insertions": 37, "deletions": 1, "lines": 38}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractVertxBasedHttpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.uploadCommandResponseMessage(io.vertx.ext.web.RoutingContext,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AbstractVertxBasedHttpProtocolAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapterTest.testUploadCommandResponseFailsForNonExistingDevice()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4bd2f00dcdb9a7ea4978e6a0f23b065e751f1557"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 32, "deletions": 25, "lines": 57, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.uploadCommandResponseMessage(io.vertx.ext.web.RoutingContext,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)"]}, {"title": "CORS Headers for HTTP-Adapter Command and Control Response Endpoint", "body": "Hi guys,\r\n\r\nI just found out that the HTTP Adapter does not set the ``Access-Control-Expose-Headers`` for the newly introduced ``hono-command`` and ``hono-cmd-req-id`` headers of the HTTP adapter.\r\n\r\nThis is causing some problems when using the API with a browser front-end (in my case the OpenAPI Swagger ui)\r\n\r\nI can supply a PR which fixes it, in case you're interested.\r\n\r\nThanks\r\nChris", "url": "https://github.com/eclipse/hono/issues/943", "user": "Christian-Schmid", "labels": ["HTTP Adapter", "bug"], "created": "2018-12-05 13:56:21", "closed": "2018-12-10 14:04:21", "commits": {"06acbd4448f9ab9f3dc330f58e4c03908ef77c67": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "a07854693051af13ce1bf7de418c1e3016ecd8e6": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "06acbd4448f9ab9f3dc330f58e4c03908ef77c67", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["a573421432238a095c4db505de13d98b4f43b3fc"], "nameRev": "06acbd4448f9ab9f3dc330f58e4c03908ef77c67 tags/0.9-M1~50", "commitMessage": "[#943] Expose command headers via CORS\n\nSigned-off-by: Christian Schmid <Christian.Schmid3@bosch-si.com>", "commitDateTime": "2018-12-10 13:27:34", "authoredDateTime": "2018-12-10 13:27:34", "commitGitStats": [{"filePath": "adapters/http-vertx/src/main/java/org/eclipse/hono/adapter/http/vertx/VertxBasedHttpProtocolAdapter.java", "insertions": 12, "deletions": 4, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VertxBasedHttpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapter.addTelemetryApiRoutes(io.vertx.ext.web.Router,io.vertx.core.Handler)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapter.addEventApiRoutes(io.vertx.ext.web.Router,io.vertx.core.Handler)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "a07854693051af13ce1bf7de418c1e3016ecd8e6", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["5bd1f16d17e0214f7fbc0fd52cf1da5047093e04"], "nameRev": "a07854693051af13ce1bf7de418c1e3016ecd8e6 tags/0.9-M1~47", "commitMessage": "[#943] Verify Access-Control-Exposed-Headers in tests.\n\nThe headers in a response to a request to POST/PUT telemetry or event\nmessages are now checked for the presence of\n\"Access-Control-Exposed-Headers\" and \"Access-Control-Allow-Origin\".\n\nFixes #943\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-12-10 15:02:40", "authoredDateTime": "2018-12-10 14:39:43", "commitGitStats": [{"filePath": "adapters/http-vertx/src/test/java/org/eclipse/hono/adapter/http/vertx/VertxBasedHttpProtocolAdapterTest.java", "insertions": 18, "deletions": 3, "lines": 21}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/http/HttpTestBase.java", "insertions": 19, "deletions": 10, "lines": 29}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VertxBasedHttpProtocolAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapterTest.testPostTelemetrySucceedsForValidCredentials(io.vertx.ext.unit.TestContext)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapterTest.testPutTelemetrySucceedsForValidCredentials(io.vertx.ext.unit.TestContext)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapterTest.testPutEventSucceedsForValidCredentials(io.vertx.ext.unit.TestContext)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapterTest.assertCorsHeaders(io.vertx.ext.unit.TestContext,io.vertx.core.MultiMap)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapterTest.testPostTelemetrySucceedsForSupportedQoSLevel(io.vertx.ext.unit.TestContext)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapterTest.testPostTelemetrySendsMessageDownstream(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapterTest.testPostEventSendsMessageDownstream(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapterTest.testPostTelemetryWithTtdSucceedsWithCommandInResponse(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpTestBase.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.http.HttpTestBase.assertHttpResponse(io.vertx.core.MultiMap)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.tests.http.HttpTestBase.hasAccessControlExposedHeaders(io.vertx.core.MultiMap)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.http.HttpTestBase.testUploadMessagesUsingBasicAuth(io.vertx.ext.unit.TestContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.http.HttpTestBase.testUploadMessagesViaGateway(io.vertx.ext.unit.TestContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.http.HttpTestBase.testUploadMessagesUsingClientCertificate(io.vertx.ext.unit.TestContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["06acbd4448f9ab9f3dc330f58e4c03908ef77c67", "a07854693051af13ce1bf7de418c1e3016ecd8e6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 4, "lines": 16, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8, "UPD": 0, "INS": 4, "MOV": 4, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/http-vertx/src/main/java/org/eclipse/hono/adapter/http"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapter.addTelemetryApiRoutes(io.vertx.ext.web.Router,io.vertx.core.Handler)", "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapter.addEventApiRoutes(io.vertx.ext.web.Router,io.vertx.core.Handler)"]}, {"title": "DefaultFailureHandler expects response message to be set correctly", "body": "The `DefaultFailureHandler` uses the status message of the request if the context has a status code set: https://github.com/eclipse/hono/blob/c947ae6be19e27e24938335c8b508a1f3fc331e2/service-base/src/main/java/org/eclipse/hono/service/http/DefaultFailureHandler.java#L73\r\nbut in some cases the status message was not yet set and the default message (\"OK\") is used: \r\nhttps://github.com/eclipse-vertx/vert.x/blob/6aafd1733bb82ef71a69675c4414c1a0210d7fcf/src/main/java/io/vertx/core/http/impl/HttpServerResponseImpl.java#L89\r\nFor example this is the case when using the Vertx AuthHandler which will fail the context but doesn't set a status message: \r\nhttps://github.com/vert-x3/vertx-web/blob/af922fb2b6b46ccbb18568ca5ac4123be8a33491/vertx-web/src/main/java/io/vertx/ext/web/handler/impl/AuthHandlerImpl.java#L193-L200\r\n\r\nIn this case when the authorization fails, the status will be `401` but with a body of `OK`.\r\n\r\nMaybe the DefaultFailureHandler should defer the status message from the status code?", "url": "https://github.com/eclipse/hono/issues/920", "user": "mbaeuerle", "labels": ["bug"], "created": "2018-11-23 14:43:24", "closed": "2018-12-12 11:26:14", "commits": {"2278cb03f26e8a1fa9c55b9445b6b1470d220854": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 18.00027777777778, "commitsDetails": [{"commitHash": "2278cb03f26e8a1fa9c55b9445b6b1470d220854", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["4bd2f00dcdb9a7ea4978e6a0f23b065e751f1557"], "nameRev": "2278cb03f26e8a1fa9c55b9445b6b1470d220854 tags/0.9-M1~40", "commitMessage": "[#920] Do not set response body to response's status message\n\nHTTP protocol adapter and Device Registry now use ctx.fail(Throwable) instead of ctx.fail(int) together with ctx.response().setStatusMessage(String) in order to convey a detail message when failing a request. \r\n\r\nFixes #920 \r\n\r\nSigned-off-by: Kartheeswaran Kalidass <Kartheeswaran.Kalidass@bosch-si.com>", "commitDateTime": "2018-12-12 12:26:11", "authoredDateTime": "2018-12-12 12:26:11", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/credentials/CredentialsHttpEndpoint.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/http/AbstractHttpEndpoint.java", "insertions": 5, "deletions": 8, "lines": 13}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/http/DefaultFailureHandler.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/tenant/TenantHttpEndpoint.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/http/DefaultFailureHandlerTest.java", "insertions": 38, "deletions": 10, "lines": 48}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CredentialsHttpEndpoint.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.credentials.CredentialsHttpEndpoint.updateCredentials(io.vertx.ext.web.RoutingContext)", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 2}]}, {"spoonFilePath": "AbstractHttpEndpoint.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.http.AbstractHttpEndpoint.extractRequiredJsonPayload(io.vertx.ext.web.RoutingContext)", "TOT": 16, "UPD": 4, "INS": 0, "MOV": 8, "DEL": 4}]}, {"spoonFilePath": "DefaultFailureHandler.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.http.DefaultFailureHandler.handle(io.vertx.ext.web.RoutingContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TenantHttpEndpoint.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.tenant.TenantHttpEndpoint.checkPayloadForTenantId(io.vertx.ext.web.RoutingContext)", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 2}]}, {"spoonFilePath": "DefaultFailureHandlerTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.http.DefaultFailureHandlerTest.testHandlerWithFailedContextAndEmptyFailure()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2278cb03f26e8a1fa9c55b9445b6b1470d220854"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 16, "deletions": 17, "lines": 33, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 34, "UPD": 6, "INS": 3, "MOV": 16, "DEL": 9, "spoonFilesChanged": 4, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service/http", "service-base/src/main/java/org/eclipse/hono/service/tenant", "service-base/src/main/java/org/eclipse/hono/service/credentials"], "changesInPackagesSPOON": ["org.eclipse.hono.service.tenant.TenantHttpEndpoint.checkPayloadForTenantId(io.vertx.ext.web.RoutingContext)", "org.eclipse.hono.service.http.AbstractHttpEndpoint.extractRequiredJsonPayload(io.vertx.ext.web.RoutingContext)", "org.eclipse.hono.service.http.DefaultFailureHandler.handle(io.vertx.ext.web.RoutingContext)", "org.eclipse.hono.service.credentials.CredentialsHttpEndpoint.updateCredentials(io.vertx.ext.web.RoutingContext)"]}, {"title": "HTTP Adapter: missing adapter-enabled-for-tenant check when processing command response messages", "body": "When processing a command response message, the HTTP protocol adapter currently doesn't check whether the adapter is enabled for the given tenant.", "url": "https://github.com/eclipse/hono/issues/909", "user": "calohmn", "labels": ["HTTP Adapter", "bug"], "created": "2018-11-21 10:38:05", "closed": "2018-12-10 14:21:27", "commits": {"0abe7bcab1caa49008c73770b9bf7ca6d0e5ccaf": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "cfc291ad69091534c0de250337cb3cb035be27fa": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 19.00027777777778, "commitsDetails": [{"commitHash": "0abe7bcab1caa49008c73770b9bf7ca6d0e5ccaf", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["a07854693051af13ce1bf7de418c1e3016ecd8e6"], "nameRev": "0abe7bcab1caa49008c73770b9bf7ca6d0e5ccaf tags/0.9-M1~46", "commitMessage": "[#909] Check tenant config when processing command response.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch-si.com>\n", "commitDateTime": "2018-12-10 15:21:26", "authoredDateTime": "2018-11-22 07:10:31", "commitGitStats": [{"filePath": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapter.java", "insertions": 31, "deletions": 13, "lines": 44}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractVertxBasedHttpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.uploadCommandResponseMessage(io.vertx.ext.web.RoutingContext,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "cfc291ad69091534c0de250337cb3cb035be27fa", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["0abe7bcab1caa49008c73770b9bf7ca6d0e5ccaf"], "nameRev": "cfc291ad69091534c0de250337cb3cb035be27fa tags/0.9-M1~45", "commitMessage": "[#909] Add unit tests.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-12-10 16:13:03", "authoredDateTime": "2018-12-10 16:13:03", "commitGitStats": [{"filePath": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapter.java", "insertions": 11, "deletions": 23, "lines": 34}, {"filePath": "adapters/http-vertx-base/src/test/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapterTest.java", "insertions": 105, "deletions": 0, "lines": 105}, {"filePath": "adapters/http-vertx/src/test/java/org/eclipse/hono/adapter/http/vertx/VertxBasedHttpProtocolAdapterTest.java", "insertions": 8, "deletions": 7, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractVertxBasedHttpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.uploadCommandResponseMessage(io.vertx.ext.web.RoutingContext,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)", "TOT": 8, "UPD": 1, "INS": 1, "MOV": 4, "DEL": 2}]}, {"spoonFilePath": "AbstractVertxBasedHttpProtocolAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapterTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapterTest.testUploadCommandResponseWaitsForAcceptedOutcome()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapterTest.testUploadCommandResponseFailsForDisabledTenant()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapterTest.testUploadCommandResponseFailsForRejectedOutcome()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapterTest.givenACommandResponseSenderForOutcome(io.vertx.core.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "VertxBasedHttpProtocolAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapterTest", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapterTest.testPostCmdResponseForNotExistingCommandResponseLinkResultsIn503(io.vertx.ext.unit.TestContext)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapterTest.testPostCmdResponseForInvalidCommandStatusIdResultsIn400(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapterTest.testPostCmdResponseForMissingCommandStatusIdResultsIn400(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapterTest.testPostCmdResponseForExistingCommandResponseLinkResultsInAccepted(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0abe7bcab1caa49008c73770b9bf7ca6d0e5ccaf", "cfc291ad69091534c0de250337cb3cb035be27fa"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 42, "deletions": 36, "lines": 78, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 11, "UPD": 2, "INS": 2, "MOV": 5, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.uploadCommandResponseMessage(io.vertx.ext.web.RoutingContext,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)"]}, {"title": "AMQP adapter does not close command consumer if connection to device is lost", "body": "The AMQP adapter should close any open CommandConsumer that has been created for a device if the connection to the device fails unexpectedly.", "url": "https://github.com/eclipse/hono/issues/894", "user": "sophokles73", "labels": ["AMQP Adapter", "bug"], "created": "2018-11-13 12:06:33", "closed": "2018-11-13 13:40:31", "commits": {"811ba184b394e4893249861f8e41c740a47bc999": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "811ba184b394e4893249861f8e41c740a47bc999", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["2b9f596a8b0cb2b45663b1cf4b4adb94a18cce6b"], "nameRev": "811ba184b394e4893249861f8e41c740a47bc999 tags/0.8~57", "commitMessage": "[#894] Close command consumer if connection to device is lost/closed.\n\nFixes #894.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-11-13 14:40:13", "authoredDateTime": "2018-11-13 14:40:13", "commitGitStats": [{"filePath": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/VertxBasedAmqpProtocolAdapter.java", "insertions": 79, "deletions": 66, "lines": 145}, {"filePath": "adapters/amqp-vertx/src/test/java/org/eclipse/hono/adapter/amqp/VertxBasedAmqpProtocolAdapterTest.java", "insertions": 107, "deletions": 14, "lines": 121}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VertxBasedAmqpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.connectionRequestHandler(io.vertx.proton.ProtonConnection)", "TOT": 23, "UPD": 16, "INS": 4, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.openCommandSenderLink(io.vertx.proton.ProtonSender,org.eclipse.hono.util.ResourceIdentifier,org.eclipse.hono.auth.Device)", "TOT": 8, "UPD": 2, "INS": 2, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.getPortDefaultValue()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.getInsecurePortDefaultValue()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.handleRemoteSenderOpenForCommands(io.vertx.proton.ProtonSender,org.eclipse.hono.auth.Device)", "TOT": 34, "UPD": 7, "INS": 0, "MOV": 22, "DEL": 5}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.bindInsecureServer()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.bindSecureServer()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.stopSecureServer()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.handleRemoteSenderOpenForCommands(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSender,org.eclipse.hono.auth.Device)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.getResourceIdentifier(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.addConnectionLossHandler(io.vertx.proton.ProtonConnection,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.getConnectionLossHandler(io.vertx.proton.ProtonConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "VertxBasedAmqpProtocolAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapterTest.testAnonymousRelayRequired()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapterTest.getAmqpServer()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapterTest.testAdapterClosesCommandConsumerWhenDeviceClosesConnection(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapterTest.testAdapterClosesCommandConsumerWhenConnectionToDeviceIsLost(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapterTest.testAdapterClosesCommandConsumer(io.vertx.ext.unit.TestContext,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapterTest.testAdapterOpensSenderLinkAndNotifyDownstreamApplication()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapterTest.testAdapterClosesCommandConsumerWhenDeviceClosesReceiverLink()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["811ba184b394e4893249861f8e41c740a47bc999"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 79, "deletions": 66, "lines": 145, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 84, "UPD": 29, "INS": 14, "MOV": 28, "DEL": 13, "spoonFilesChanged": 1, "spoonMethodsChanged": 13}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.handleRemoteSenderOpenForCommands(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSender,org.eclipse.hono.auth.Device)", "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.bindSecureServer()", "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.bindInsecureServer()", "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.getInsecurePortDefaultValue()", "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.handleRemoteSenderOpenForCommands(io.vertx.proton.ProtonSender,org.eclipse.hono.auth.Device)", "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.openCommandSenderLink(io.vertx.proton.ProtonSender,org.eclipse.hono.util.ResourceIdentifier,org.eclipse.hono.auth.Device)", "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.getConnectionLossHandler(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter", "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.getPortDefaultValue()", "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.addConnectionLossHandler(io.vertx.proton.ProtonConnection,io.vertx.core.Handler)", "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.stopSecureServer()", "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.getResourceIdentifier(java.lang.String)", "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.connectionRequestHandler(io.vertx.proton.ProtonConnection)"]}, {"title": "CommandConnection#getOrCreateCommandConsumer does not fail returned future in case of some errors while link establishment", "body": "CommandConnection#getOrCreateCommandConsumer does not fail the returned future in case of some errors while link establishment, e.g. server returns \"Node not found\". Instead it returns future with result of null. Root cause seems to be that\r\nhttps://github.com/eclipse/hono/blob/d4a0a128c23e15d8f46b9e096087f03e51598a20/client/src/main/java/org/eclipse/hono/client/impl/CommandConnectionImpl.java#L101-L120 completes the future regardless of the result. \r\n\r\nIs this expected behaviour? I expected the future to fail if the server returns some error codes.\r\n\r\nBy the way: This issue is not urgent for us as we just map the future in our code to a failed future when we get a null result.", "url": "https://github.com/eclipse/hono/issues/886", "user": "DanielMaier-BSI", "labels": ["C&C", "bug"], "created": "2018-11-07 13:48:48", "closed": "2018-11-07 15:23:19", "commits": {"9a8c881df9894e914e8b640ed0aeae427fa097f1": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "9a8c881df9894e914e8b640ed0aeae427fa097f1", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["d4a0a128c23e15d8f46b9e096087f03e51598a20"], "nameRev": "9a8c881df9894e914e8b640ed0aeae427fa097f1 tags/0.8~77", "commitMessage": "[#886] Fail command consumer creation if link cannot be established.\n\nThe future returned by\nCommandConnectionImpl.getOrCreateCommandConsumer() now only succeeds if\nthe link to the peer has actually been established. Otherwise it is\nfailed with a ServiceInvocationException.\n\nFixes #886\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-11-07 16:23:01", "authoredDateTime": "2018-11-07 16:21:06", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/CommandConnectionImpl.java", "insertions": 11, "deletions": 9, "lines": 20}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoClientImpl.java", "insertions": 37, "deletions": 35, "lines": 72}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/CommandConnectionImplTest.java", "insertions": 68, "deletions": 101, "lines": 169}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/DisconnectHandlerProvidingConnectionFactory.java", "insertions": 187, "deletions": 0, "lines": 187}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/HonoClientImplTest.java", "insertions": 0, "deletions": 133, "lines": 133}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandConnectionImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.CommandConnectionImpl.newCommandConsumer(java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 21, "UPD": 4, "INS": 2, "MOV": 14, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.CommandConnectionImpl.getOrCreateCommandConsumer(java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoClientImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.setTracer(io.opentracing.Tracer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.connect(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateCommandClient(java.lang.String,java.lang.String,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.onRemoteClose(io.vertx.core.AsyncResult,io.vertx.core.Handler)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.onRemoteDisconnect(io.vertx.proton.ProtonConnection,io.vertx.core.Handler)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateSender(java.lang.String,java.util.function.Supplier,io.vertx.core.Future)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.removeActiveRequestResponseClient(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateRequestResponseClient(java.lang.String,java.util.function.Supplier,io.vertx.core.Future)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.shutdown()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.disconnect()", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.closeConnection(io.vertx.core.Handler)", "TOT": 8, "UPD": 4, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.reconnect(java.lang.Throwable,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandConnectionImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.CommandConnectionImplTest", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.CommandConnectionImplTest.setUp()", "TOT": 27, "UPD": 8, "INS": 6, "MOV": 10, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.client.impl.CommandConnectionImplTest.testCreateCommandConsumerSucceedsAndOpensReceiverLink(io.vertx.ext.unit.TestContext)", "TOT": 36, "UPD": 15, "INS": 0, "MOV": 19, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.client.impl.CommandConnectionImplTest.ConnectionResultHandlerProvidingConnectionFactory.connect(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 8, "UPD": 3, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.CommandConnectionImplTest.setUpVertx()", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.CommandConnectionImplTest.ConnectionResultHandlerProvidingConnectionFactory", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.CommandConnectionImplTest.ConnectionResultHandlerProvidingConnectionFactory.connect(io.vertx.proton.ProtonClientOptions,java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.CommandConnectionImplTest.testCreateCommandConsumerFailsIfPeerRejectsLink(io.vertx.ext.unit.TestContext)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.CommandConnectionImplTest.testCreateCommandConsumerSucceeds(io.vertx.ext.unit.TestContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DisconnectHandlerProvidingConnectionFactory.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.DisconnectHandlerProvidingConnectionFactory", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoClientImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.setUp()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testDownstreamDisconnectClearsSenderCreationLocks(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testDownstreamDisconnectTriggersReconnect(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testConnectFailsAfterMaxConnectionAttempts(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testConnectTriesToReconnectOnFailedConnectAttempt(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testClientDoesNotTriggerReconnectionAfterShutdown(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testConnectFailsWithClientErrorForSecurityException(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.DisconnectHandlerProvidingConnectionFactory", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9a8c881df9894e914e8b640ed0aeae427fa097f1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 48, "deletions": 44, "lines": 92, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 70, "UPD": 39, "INS": 7, "MOV": 22, "DEL": 2, "spoonFilesChanged": 3, "spoonMethodsChanged": 16}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateCommandClient(java.lang.String,java.lang.String,java.lang.String)", "org.eclipse.hono.client.impl.HonoClientImpl.reconnect(java.lang.Throwable,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.DisconnectHandlerProvidingConnectionFactory", "org.eclipse.hono.client.impl.HonoClientImpl.connect(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.onRemoteDisconnect(io.vertx.proton.ProtonConnection,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.CommandConnectionImpl.newCommandConsumer(java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl", "org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateRequestResponseClient(java.lang.String,java.util.function.Supplier,io.vertx.core.Future)", "org.eclipse.hono.client.impl.HonoClientImpl.removeActiveRequestResponseClient(java.lang.String)", "org.eclipse.hono.client.impl.HonoClientImpl.onRemoteClose(io.vertx.core.AsyncResult,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.disconnect()", "org.eclipse.hono.client.impl.HonoClientImpl.closeConnection(io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateSender(java.lang.String,java.util.function.Supplier,io.vertx.core.Future)", "org.eclipse.hono.client.impl.CommandConnectionImpl.getOrCreateCommandConsumer(java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.shutdown()", "org.eclipse.hono.client.impl.HonoClientImpl.setTracer(io.opentracing.Tracer)"]}, {"title": "MQTT/AMQP adapter: Deleted/disabled devices should not be able to connect", "body": "A device has been registered and credentials for that device has also been added.  Then the device is deleted but not the corresponding credentials. In this case, the deleted device is still able to subscribe to control endpoint, receive commands and send command responses.", "url": "https://github.com/eclipse/hono/issues/876", "user": "kaniyan", "labels": ["MQTT Adapter", "bug"], "created": "2018-11-05 08:55:51", "closed": "2018-11-19 12:46:50", "commits": {"8f652f11f1d3e50c89bff176af93110cad5a7587": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "32063d50b6b2d279caa418e4e52cccb6b7664044": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "8f652f11f1d3e50c89bff176af93110cad5a7587", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["6ea1f284dba03bbabe48f13a0c5b29f2338f0124"], "nameRev": "8f652f11f1d3e50c89bff176af93110cad5a7587 tags/0.8~60", "commitMessage": "[#876] Deleted devices should not be able to connect to the MQTT adapter.\n\nWhen a device connects with credentials, the adapter now also checks if the device exists and is enabled.\r\n\r\nSigned-off-by: Kartheeswaran Kalidass <Kartheeswaran.Kalidass@bosch-si.com>", "commitDateTime": "2018-11-13 08:58:22", "authoredDateTime": "2018-11-13 08:58:22", "commitGitStats": [{"filePath": "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapter.java", "insertions": 122, "deletions": 89, "lines": 211}, {"filePath": "adapters/mqtt-vertx-base/src/test/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapterTest.java", "insertions": 45, "deletions": 3, "lines": 48}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/mqtt/MqttConnectionIT.java", "insertions": 108, "deletions": 0, "lines": 108}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractVertxBasedMqttProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.triggerLinkCreation(java.lang.String)", "TOT": 16, "UPD": 7, "INS": 0, "MOV": 7, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.onAuthenticationSuccess(io.vertx.mqtt.MqttEndpoint,org.eclipse.hono.auth.Device)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.handleEndpointConnectionWithAuthentication(io.vertx.mqtt.MqttEndpoint,io.opentracing.Span)", "TOT": 55, "UPD": 15, "INS": 1, "MOV": 31, "DEL": 8}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.getCredentials(io.vertx.mqtt.MqttAuth)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.getCredentials(io.vertx.mqtt.MqttEndpoint)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.isAdapterEnabled(org.eclipse.hono.util.TenantObject)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.authenticate(org.eclipse.hono.service.auth.device.DeviceCredentials,io.opentracing.Span)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.isDeviceRegistered(org.eclipse.hono.auth.Device,io.opentracing.Span)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.createLink(org.eclipse.hono.auth.Device,io.opentracing.Span)", "TOT": 9, "UPD": 0, "INS": 9, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractVertxBasedMqttProtocolAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapterTest.testEndpointHandlerRejectsDeviceOfDisabledTenant()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapterTest.testUploadTelemetryMessageFailsForUnknownDevice(io.vertx.ext.unit.TestContext)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapterTest.testAuthenticatedMqttAdapterRejectsMessageHandlersForDeletedDevices()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MqttConnectionIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.mqtt.MqttConnectionIT", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "32063d50b6b2d279caa418e4e52cccb6b7664044", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["efe33547fcdc6b82e65513c287c568bf539c35eb"], "nameRev": "32063d50b6b2d279caa418e4e52cccb6b7664044 tags/0.8~48", "commitMessage": "[#876] Reject connection requests from disabled/non-existing devices.\n\nThe AMQP adapter now checks if a device that tries to connect is\nregistered and enabled.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-11-15 19:20:40", "authoredDateTime": "2018-11-15 19:19:23", "commitGitStats": [{"filePath": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/VertxBasedAmqpProtocolAdapter.java", "insertions": 68, "deletions": 23, "lines": 91}, {"filePath": "adapters/amqp-vertx/src/test/java/org/eclipse/hono/adapter/amqp/VertxBasedAmqpProtocolAdapterTest.java", "insertions": 11, "deletions": 7, "lines": 18}, {"filePath": "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapter.java", "insertions": 2, "deletions": 27, "lines": 29}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/AbstractProtocolAdapterBase.java", "insertions": 51, "deletions": 0, "lines": 51}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/amqp/AmqpConnectionIT.java", "insertions": 157, "deletions": 0, "lines": 157}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VertxBasedAmqpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.connectionRequestHandler(io.vertx.proton.ProtonConnection)", "TOT": 22, "UPD": 2, "INS": 0, "MOV": 16, "DEL": 4}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.openCommandSenderLink(io.vertx.proton.ProtonSender,org.eclipse.hono.util.ResourceIdentifier,org.eclipse.hono.auth.Device)", "TOT": 6, "UPD": 1, "INS": 3, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.handleRemoteSenderOpenForCommands(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSender,org.eclipse.hono.auth.Device)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.createCommandConsumer(io.vertx.proton.ProtonSender,org.eclipse.hono.util.ResourceIdentifier,org.eclipse.hono.auth.Device)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.onConnectRequest(io.vertx.proton.ProtonConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.setConnectionHandlers(io.vertx.proton.ProtonConnection)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.handleRemoteSenderOpenForCommands(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSender)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.handleRemoteReceiverOpen(io.vertx.proton.ProtonReceiver,io.vertx.proton.ProtonConnection)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "VertxBasedAmqpProtocolAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapterTest.testAdapterOpensSenderLinkAndNotifyDownstreamApplication()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapterTest.testAdapterClosesCommandConsumerWhenDeviceClosesReceiverLink()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapterTest.testAdapterClosesCommandConsumer(io.vertx.ext.unit.TestContext,io.vertx.core.Handler)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapterTest.testAdapterAcceptsAnonymousRelayReceiverOnly()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AbstractVertxBasedMqttProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.handleEndpointConnectionWithAuthentication(io.vertx.mqtt.MqttEndpoint,io.opentracing.Span)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.isAdapterEnabled(org.eclipse.hono.util.TenantObject)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.isDeviceRegistered(org.eclipse.hono.auth.Device,io.opentracing.Span)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AbstractProtocolAdapterBase.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBase.isAdapterEnabled(org.eclipse.hono.util.TenantObject)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBase.checkDeviceRegistration(org.eclipse.hono.auth.Device,io.opentracing.Span)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AmqpConnectionIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.amqp.AmqpConnectionIT", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8f652f11f1d3e50c89bff176af93110cad5a7587", "32063d50b6b2d279caa418e4e52cccb6b7664044"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 243, "deletions": 139, "lines": 382, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 137, "UPD": 29, "INS": 28, "MOV": 60, "DEL": 20, "spoonFilesChanged": 5, "spoonMethodsChanged": 21}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt", "service-base/src/main/java/org/eclipse/hono/service", "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.isDeviceRegistered(org.eclipse.hono.auth.Device,io.opentracing.Span)", "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.isAdapterEnabled(org.eclipse.hono.util.TenantObject)", "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.handleEndpointConnectionWithAuthentication(io.vertx.mqtt.MqttEndpoint,io.opentracing.Span)", "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.handleRemoteSenderOpenForCommands(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSender)", "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.connectionRequestHandler(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.service.AbstractProtocolAdapterBase.isAdapterEnabled(org.eclipse.hono.util.TenantObject)", "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.setConnectionHandlers(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.tests.mqtt.MqttConnectionIT", "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.openCommandSenderLink(io.vertx.proton.ProtonSender,org.eclipse.hono.util.ResourceIdentifier,org.eclipse.hono.auth.Device)", "org.eclipse.hono.tests.amqp.AmqpConnectionIT", "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.handleRemoteReceiverOpen(io.vertx.proton.ProtonReceiver,io.vertx.proton.ProtonConnection)", "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.handleRemoteSenderOpenForCommands(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSender,org.eclipse.hono.auth.Device)", "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.getCredentials(io.vertx.mqtt.MqttAuth)", "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.getCredentials(io.vertx.mqtt.MqttEndpoint)", "org.eclipse.hono.service.AbstractProtocolAdapterBase.checkDeviceRegistration(org.eclipse.hono.auth.Device,io.opentracing.Span)", "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.onConnectRequest(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.authenticate(org.eclipse.hono.service.auth.device.DeviceCredentials,io.opentracing.Span)", "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.createCommandConsumer(io.vertx.proton.ProtonSender,org.eclipse.hono.util.ResourceIdentifier,org.eclipse.hono.auth.Device)", "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.triggerLinkCreation(java.lang.String)", "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.onAuthenticationSuccess(io.vertx.mqtt.MqttEndpoint,org.eclipse.hono.auth.Device)", "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.createLink(org.eclipse.hono.auth.Device,io.opentracing.Span)"]}, {"title": "Metrics Graphite legacy configuration not done for device-registry and auth service", "body": "Both `hono-service-device-registry` and `hono-auth` constantly throw exception not being able to report to Graphite:\r\n\r\n```\r\n14:25:13.319 [metrics-graphite-reporter-1-thread-1] WARN  c.c.m.graphite.GraphiteReporter - Unable to report to Graphite\r\njava.net.ConnectException: Connection refused (Connection refused)\r\n\r\n```\r\n\r\nThe other services are configured for reporting in legacy mode to the deployed influxdb, these two seem to be missing.\r\n", "url": "https://github.com/eclipse/hono/issues/862", "user": "sysexcontrol", "labels": ["Metrics", "bug"], "created": "2018-10-19 14:32:24", "closed": "2018-10-19 15:00:07", "commits": {"02b4e7c84084c91d0f2d6580c8f39abc785d97d5": {"commitGHEventType": "referenced", "commitUser": "sysexcontrol"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "02b4e7c84084c91d0f2d6580c8f39abc785d97d5", "commitGHEventType": "referenced", "commitUser": "sysexcontrol", "commitParents": ["2ade7eac8e5259b0bc1af1cbcea63f801087b22d"], "nameRev": "02b4e7c84084c91d0f2d6580c8f39abc785d97d5 tags/0.8~108", "commitMessage": "[#862] Add missing Graphite legacy metrics configuation.\n\nFor Hono's device-registry and the auth-server this was missing, leading\nto constantly throwing Connection refused exceptions while running.\n\nSigned-off-by: Karsten Frank <Karsten.Frank@bosch-si.com>\n", "commitDateTime": "2018-10-19 16:57:14", "authoredDateTime": "2018-10-19 16:56:46", "commitGitStats": [{"filePath": "deploy/src/main/config/hono-service-auth-config.yml", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "deploy/src/main/config/hono-service-device-registry-config.yml", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["02b4e7c84084c91d0f2d6580c8f39abc785d97d5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 18, "deletions": 0, "lines": 18, "gitFilesChange": 2}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["deploy/src/main/config/hono-service-auth-config.yml", "deploy/src/main/config/hono-service-device-registry-config.yml"]}, {"title": "New Bcrypt credentials enables DoS attack on the protocol adapters.", "body": "As per Credentials API, Hono is using Spring security for Bcrypt password encoding.\r\n\r\nSpring security supports bcrypt password encoding with log rotations from 4 to 31, 10 being default (i.e:- 2^10 hash iterations). Once hashed, the log rotation used is part of the password like \r\n\r\n`$2a$21$LQdzaDSINBpHmYRiGEVtkOVt2GScZ6bPvEyoAIpiVIE6F4rviemdm`\r\n\r\nwhere $21 represents the log rotation used. There is currently no max limit defined in Hono. If a user, say stores the password with higher rotation, then it could enable a DOS attack on the adapters.\r\n\r\nI tested the time taken for `BCryptPasswordEncoder.matches` with higher log rotation on my laptop (Intel Core i7 - 2.7GHz 8 core, 32 GB RAM) it took\r\n\r\n- 10 - 105 milliseconds\r\n- 12 - 360 milliseconds\r\n- 18 - 21 seconds\r\n- 21 - 178 seconds\r\n- 31 - more than 1 hour and I had to abort it.\r\n\r\nSetting 31 as log rotation will definitely block the protocol adapters.\r\n\r\nAs a best practise, I would restrict the log rotation to 12 or 14, document them as part of credentials API and have this checked in \r\n\r\norg.eclipse.hono.util.CredentialsObject.hasValidSecrets()\r\n\r\n", "url": "https://github.com/eclipse/hono/issues/825", "user": "balsmn", "labels": ["AMQP Adapter", "Device Registry", "HTTP Adapter", "Kura Adapter", "MQTT Adapter", "bug"], "created": "2018-09-20 12:42:44", "closed": "2018-10-11 06:42:34", "commits": {"e4df6a11baba682479ae48202cc50905a2164292": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "078ea689a70afbb74bfc5c8706c6d90516a03654": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 20.00027777777778, "commitsDetails": [{"commitHash": "e4df6a11baba682479ae48202cc50905a2164292", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["7b9f369743f5445667821e67be917e4592ee74cf"], "nameRev": "e4df6a11baba682479ae48202cc50905a2164292 tags/0.8-M2~35", "commitMessage": "[#825] Run password hash validation on vert.x worker thread.\n\nThe computation of a password hash can be quite time consuming if e.g.\nbcrypt is used as the hash algorithm. Thus it seems feasible to move the\npassword hash validation from the event loop to a worker thread.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-10-05 11:27:54", "authoredDateTime": "2018-10-02 17:18:54", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/auth/device/CredentialsApiAuthProvider.java", "insertions": 33, "deletions": 10, "lines": 43}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/auth/device/UsernamePasswordAuthProvider.java", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/auth/device/UsernamePasswordAuthProviderTest.java", "insertions": 133, "deletions": 0, "lines": 133}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CredentialsApiAuthProvider.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.auth.device.CredentialsApiAuthProvider.authenticate(org.eclipse.hono.service.auth.device.DeviceCredentials,io.vertx.core.Handler)", "TOT": 11, "UPD": 3, "INS": 1, "MOV": 4, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.service.auth.device.CredentialsApiAuthProvider.validateCredentials(org.eclipse.hono.service.auth.device.DeviceCredentials,org.eclipse.hono.util.CredentialsObject)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UsernamePasswordAuthProvider.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.auth.device.UsernamePasswordAuthProvider.validateCredentials(org.eclipse.hono.service.auth.device.DeviceCredentials,org.eclipse.hono.util.CredentialsObject)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UsernamePasswordAuthProviderTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.auth.device.UsernamePasswordAuthProviderTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "078ea689a70afbb74bfc5c8706c6d90516a03654", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["9855f874188eff1420ab2d4ec466d577150864b6"], "nameRev": "078ea689a70afbb74bfc5c8706c6d90516a03654 tags/0.8-M2~18", "commitMessage": "[#825] Enforce upper limit for BCrypt iterations.\n\nThe CompleteBaseCredentialsService class now verifies that hashed\npasswords using Bcrypt use a limited number of iterations only.\n\nSubclasses can determine the maximum allowed value e.g. by means of a\nconfiguration property.\n\nThe FileBasedCredentialsService uses a limit of 10 iterations by\ndefault.\n\nFixes #825.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-10-11 08:41:02", "authoredDateTime": "2018-10-10 13:40:57", "commitGitStats": [{"filePath": "core/src/main/java/org/eclipse/hono/util/ClearTextPassword.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "core/src/main/java/org/eclipse/hono/util/CredentialsObject.java", "insertions": 105, "deletions": 21, "lines": 126}, {"filePath": "core/src/test/java/org/eclipse/hono/util/CredentialsObjectTest.java", "insertions": 69, "deletions": 7, "lines": 76}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/credentials/CompleteBaseCredentialsService.java", "insertions": 106, "deletions": 23, "lines": 129}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/credentials/CompleteBaseCredentialsServiceTest.java", "insertions": 79, "deletions": 1, "lines": 80}, {"filePath": "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry/FileBasedCredentialsConfigProperties.java", "insertions": 30, "deletions": 1, "lines": 31}, {"filePath": "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry/FileBasedCredentialsService.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "services/device-registry/src/test/java/org/eclipse/hono/deviceregistry/FileBasedCredentialsServiceTest.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "site/content/admin-guide/device-registry-config.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "site/content/release-notes.md", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "tests/pom.xml", "insertions": 17, "deletions": 8, "lines": 25}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/registry/CredentialsHttpIT.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "tests/src/test/resources/deviceregistry/application.yml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClearTextPassword.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.ClearTextPassword.encodeBCrypt(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CredentialsObject.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.isValid()", "TOT": 9, "UPD": 2, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.hasValidSecrets()", "TOT": 17, "UPD": 6, "INS": 0, "MOV": 8, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.containsValidTimestampIfPresentForField(io.vertx.core.json.JsonObject,java.lang.String)", "TOT": 13, "UPD": 8, "INS": 0, "MOV": 2, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.getCandidateSecrets()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.hashedPasswordSecretForPasswordHash(java.lang.String,java.lang.String,java.time.Instant,java.time.Instant,byte[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.checkValidity()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.checkSecrets()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.checkSecrets(io.vertx.core.json.JsonArray,java.util.function.Consumer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.checkHashedPassword(io.vertx.core.json.JsonObject)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.checkValidityPeriod(io.vertx.core.json.JsonObject)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.getTimestampIfPresentForField(io.vertx.core.json.JsonObject,java.lang.String)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObject.checkSecrets(java.util.function.BiConsumer)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CredentialsObjectTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.CredentialsObjectTest.testHasValidCredentialsDetectsMissingSecrets()", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObjectTest.testHasValidCredentialsAcceptsEmptySecrets()", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObjectTest.testCheckSecretsDetectsMissingSecrets()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObjectTest.testCheckSecretsAcceptsEmptySecrets()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObjectTest.testCheckSecretsDetectsMalformedNotBefore()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObjectTest.testCheckSecretsDetectsMalformedNotAfter()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObjectTest.testCheckSecretsDetectsInconsistentValidityPeriod()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObjectTest.testCheckSecretsDetectsMissingHashFunction()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.CredentialsObjectTest.testCheckSecretsDetectsMissingHashValue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CompleteBaseCredentialsService.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.credentials.CompleteBaseCredentialsService.processAddRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 15, "UPD": 2, "INS": 3, "MOV": 7, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.service.credentials.CompleteBaseCredentialsService.processUpdateRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 16, "UPD": 1, "INS": 3, "MOV": 8, "DEL": 4}, {"spoonMethodName": "org.eclipse.hono.service.credentials.CompleteBaseCredentialsService", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.CompleteBaseCredentialsService.checkSecret(java.lang.String,io.vertx.core.json.JsonObject)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.CompleteBaseCredentialsService.verifyBcryptPasswordHash(io.vertx.core.json.JsonObject)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.CompleteBaseCredentialsService.getMaxBcryptIterations()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CompleteBaseCredentialsServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.credentials.CompleteBaseCredentialsServiceTest.createValidCredentialsObject(io.vertx.core.json.JsonObject)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.credentials.CompleteBaseCredentialsServiceTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.CompleteBaseCredentialsServiceTest.testAddSucceedsForValidBcryptSecret(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.CompleteBaseCredentialsServiceTest.testAddFailsForMalformedBcryptSecrets(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.CompleteBaseCredentialsServiceTest.testAddFailsForBcryptSecretsWithTooManyIterations(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.CompleteBaseCredentialsServiceTest.createValidCredentialsObject(java.lang.String,io.vertx.core.json.JsonObject)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.CompleteBaseCredentialsServiceTest.createCompleteBaseCredentialsService().1.getMaxBcryptIterations()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.CompleteBaseCredentialsServiceTest.createCompleteBaseCredentialsService().1.setConfig(org.eclipse.hono.config.ServiceConfigProperties)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FileBasedCredentialsConfigProperties.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedCredentialsConfigProperties", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedCredentialsConfigProperties.getMaxBcryptIterations()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedCredentialsConfigProperties.setMaxBcryptIterations(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FileBasedCredentialsService.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedCredentialsService.getMaxBcryptIterations()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FileBasedCredentialsServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedCredentialsServiceTest.testLoadCredentialsCanReadOutputOfSaveToFile(io.vertx.ext.unit.TestContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CredentialsHttpIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.registry.CredentialsHttpIT.testAddCredentialsFailsForBCryptWithTooManyIterations(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e4df6a11baba682479ae48202cc50905a2164292", "078ea689a70afbb74bfc5c8706c6d90516a03654"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 321, "deletions": 55, "lines": 376, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 113, "UPD": 24, "INS": 36, "MOV": 37, "DEL": 16, "spoonFilesChanged": 8, "spoonMethodsChanged": 27}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/org/eclipse/hono/util", "service-base/src/main/java/org/eclipse/hono/service/credentials", "service-base/src/main/java/org/eclipse/hono/service/auth/device", "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry"], "changesInPackagesSPOON": ["org.eclipse.hono.util.CredentialsObject.checkValidity()", "org.eclipse.hono.service.auth.device.UsernamePasswordAuthProvider.validateCredentials(org.eclipse.hono.service.auth.device.DeviceCredentials,org.eclipse.hono.util.CredentialsObject)", "org.eclipse.hono.deviceregistry.FileBasedCredentialsConfigProperties.getMaxBcryptIterations()", "org.eclipse.hono.util.CredentialsObject.containsValidTimestampIfPresentForField(io.vertx.core.json.JsonObject,java.lang.String)", "org.eclipse.hono.deviceregistry.FileBasedCredentialsConfigProperties", "org.eclipse.hono.deviceregistry.FileBasedCredentialsConfigProperties.setMaxBcryptIterations(int)", "org.eclipse.hono.util.CredentialsObject.isValid()", "org.eclipse.hono.service.credentials.CompleteBaseCredentialsService.getMaxBcryptIterations()", "org.eclipse.hono.service.credentials.CompleteBaseCredentialsService.processUpdateRequest(org.eclipse.hono.util.EventBusMessage)", "org.eclipse.hono.util.CredentialsObject.checkSecrets(java.util.function.BiConsumer)", "org.eclipse.hono.util.CredentialsObject.getTimestampIfPresentForField(io.vertx.core.json.JsonObject,java.lang.String)", "org.eclipse.hono.service.credentials.CompleteBaseCredentialsService.verifyBcryptPasswordHash(io.vertx.core.json.JsonObject)", "org.eclipse.hono.util.ClearTextPassword.encodeBCrypt(java.lang.String)", "org.eclipse.hono.service.auth.device.CredentialsApiAuthProvider.authenticate(org.eclipse.hono.service.auth.device.DeviceCredentials,io.vertx.core.Handler)", "org.eclipse.hono.util.CredentialsObject.getCandidateSecrets()", "org.eclipse.hono.util.CredentialsObject.checkSecrets(io.vertx.core.json.JsonArray,java.util.function.Consumer)", "org.eclipse.hono.util.CredentialsObject.checkSecrets()", "org.eclipse.hono.util.CredentialsObject.hasValidSecrets()", "org.eclipse.hono.service.auth.device.CredentialsApiAuthProvider.validateCredentials(org.eclipse.hono.service.auth.device.DeviceCredentials,org.eclipse.hono.util.CredentialsObject)", "org.eclipse.hono.deviceregistry.FileBasedCredentialsService.getMaxBcryptIterations()", "org.eclipse.hono.service.credentials.CompleteBaseCredentialsService.checkSecret(java.lang.String,io.vertx.core.json.JsonObject)", "org.eclipse.hono.service.credentials.CompleteBaseCredentialsService", "org.eclipse.hono.util.CredentialsObject.checkHashedPassword(io.vertx.core.json.JsonObject)", "org.eclipse.hono.tests.registry.CredentialsHttpIT.testAddCredentialsFailsForBCryptWithTooManyIterations(io.vertx.ext.unit.TestContext)", "org.eclipse.hono.service.credentials.CompleteBaseCredentialsService.processAddRequest(org.eclipse.hono.util.EventBusMessage)", "org.eclipse.hono.util.CredentialsObject.checkValidityPeriod(io.vertx.core.json.JsonObject)", "org.eclipse.hono.util.CredentialsObject.hashedPasswordSecretForPasswordHash(java.lang.String,java.lang.String,java.time.Instant,java.time.Instant,byte[])"]}, {"title": "Jmeter not able to end tests ", "body": "Not able to end Jmeter tests invloving HonoReceiverSampler and HonoSenderSampler, if HonoClient is unable to connect to hono.\r\n\r\n![image](https://user-images.githubusercontent.com/18659982/44718009-fd997180-aabe-11e8-95af-c2e3306605ed.png)\r\n", "url": "https://github.com/eclipse/hono/issues/804", "user": "kaniyan", "labels": ["Load test", "bug"], "created": "2018-08-28 11:02:01", "closed": "2018-08-29 07:02:05", "commits": {"b61d73fa4268271df1bfb1402bb20874b350560a": {"commitGHEventType": "referenced", "commitUser": "sysexcontrol"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "b61d73fa4268271df1bfb1402bb20874b350560a", "commitGHEventType": "referenced", "commitUser": "sysexcontrol", "commitParents": ["55fdf3b741a363817abdcdcb263091b627e230a2"], "nameRev": "b61d73fa4268271df1bfb1402bb20874b350560a tags/0.8-M1~40", "commitMessage": "[#804] Fixed - Jmeter not able to end tests\n\nSigned-off-by: Kartheeswaran Kalidass <Kartheeswaran.Kalidass@bosch-si.com>\n", "commitDateTime": "2018-08-28 16:37:16", "authoredDateTime": "2018-08-28 15:44:06", "commitGitStats": [{"filePath": "jmeter/src/main/java/org/eclipse/hono/jmeter/HonoReceiverSampler.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jmeter/src/main/java/org/eclipse/hono/jmeter/client/AbstractClient.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "jmeter/src/main/java/org/eclipse/hono/jmeter/client/HonoReceiver.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "jmeter/src/main/java/org/eclipse/hono/jmeter/client/HonoSender.java", "insertions": 9, "deletions": 9, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoReceiverSampler.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.jmeter.HonoReceiverSampler.threadStarted()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractClient.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.jmeter.client.AbstractClient.getClientOptions(int)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "HonoReceiver.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.jmeter.client.HonoReceiver.connect()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.jmeter.client.HonoReceiver", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoSender.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.jmeter.client.HonoSender.connectToHonoMessaging()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.jmeter.client.HonoSender.connectToRegistrationService()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.jmeter.client.HonoSender", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b61d73fa4268271df1bfb1402bb20874b350560a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 14, "deletions": 17, "lines": 31, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 11, "UPD": 1, "INS": 3, "MOV": 1, "DEL": 6, "spoonFilesChanged": 4, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["jmeter/src/main/java/org/eclipse/hono/jmeter/client", "jmeter/src/main/java/org/eclipse/hono/jmeter"], "changesInPackagesSPOON": ["org.eclipse.hono.jmeter.client.HonoSender.connectToRegistrationService()", "org.eclipse.hono.jmeter.client.HonoReceiver.connect()", "org.eclipse.hono.jmeter.client.HonoSender", "org.eclipse.hono.jmeter.HonoReceiverSampler.threadStarted()", "org.eclipse.hono.jmeter.client.HonoSender.connectToHonoMessaging()", "org.eclipse.hono.jmeter.client.AbstractClient.getClientOptions(int)", "org.eclipse.hono.jmeter.client.HonoReceiver"]}, {"title": "Issue in starting Hono client using Java command", "body": "Hey there,\r\nI'm trying to start hono client using the following command\r\n\r\n java -jar hono-example-0.6-exec.jar --hono.client.host=hono.eclipse.org --hono.client.port=15671 \\\r\n--hono.client.tlsEnabled=true --hono.client.username=consumer@HONO --hono.client.password=verysecret \\\r\n--spring.profiles.active=receiver --tenant.id=DEFAULT_TENANT\r\n\r\n\r\nbut I'm facing some error\r\n![screenshot from 2018-08-16 00-05-28](https://user-images.githubusercontent.com/41483772/44166782-e6837880-a0e9-11e8-94eb-44ef0d70cce8.png)\r\n\r\n![screenshot from 2018-08-16 00-05-32](https://user-images.githubusercontent.com/41483772/44166808-f3a06780-a0e9-11e8-9c14-73ca834ba9bc.png)\r\nI have tried different configuration but nothing worked \r\n\r\nplease help me in this\r\nthank you.", "url": "https://github.com/eclipse/hono/issues/786", "user": "shailesharya", "labels": ["Sandbox", "bug"], "created": "2018-08-15 18:50:26", "closed": "2018-08-16 13:58:05", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Cannot use recent version of netty-tcnative-boringssl", "body": "It turns out that the changes made in #698 lead to a situation where you can only use a concrete netty-tcnative library of the same version as is now included in the Docker images. The version currently included is netty-tcnative-2.0.10.Final. This means that if you want to use the BoringSSL implementation with the image, you are stuck to version 2.0.10.Final of that library as well. Using the most recent version (2.0.12) yields a segfault of the VM during startup. This is actually an issue because one of the advantages of using the PropertyLoader for adding (user provided) jars to the classpath is the flexibility it brings wrt the used version of the added libraries ...", "url": "https://github.com/eclipse/hono/issues/785", "user": "sophokles73", "labels": ["bug"], "created": "2018-08-15 14:21:51", "closed": "2018-08-16 13:45:22", "commits": {"e5d41a53572ea91e3628bb6d1568e1d126d14f9a": {"commitGHEventType": "referenced", "commitUser": "ctron"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e5d41a53572ea91e3628bb6d1568e1d126d14f9a", "commitGHEventType": "referenced", "commitUser": "ctron", "commitParents": ["84c766029ff28136cc3325f2cc46182aae7ee560"], "nameRev": "e5d41a53572ea91e3628bb6d1568e1d126d14f9a tags/0.7~8", "commitMessage": "[#785] Move netty-tcnative into a profile", "commitDateTime": "2018-08-16 15:09:11", "authoredDateTime": "2018-08-16 10:28:54", "commitGitStats": [{"filePath": "adapters/pom.xml", "insertions": 13, "deletions": 4, "lines": 17}, {"filePath": "deploy/src/main/deploy/openshift_s2i/hono-template.yml", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "service-base/pom.xml", "insertions": 12, "deletions": 4, "lines": 16}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e5d41a53572ea91e3628bb6d1568e1d126d14f9a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 4, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["deploy/src/main/deploy/openshift_s2i/hono-template.yml"]}, {"title": "Grafana: Names of instances for Command and Control in MQTT ", "body": "The names of the instances in the MQTT are always 1 Minute. They should display all like with events or just the instance/host. \r\n\r\n![image](https://user-images.githubusercontent.com/12810428/43840614-64ca8a2c-9b21-11e8-9d8f-d26ce567953d.png)\r\n", "url": "https://github.com/eclipse/hono/issues/769", "user": "pellmann", "labels": ["Metrics", "bug"], "created": "2018-08-08 13:40:43", "closed": "2018-08-09 06:15:51", "commits": {"da35dfe222486180a319b3e2e4006cedb5c9646e": {"commitGHEventType": "referenced", "commitUser": "pellmann"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "da35dfe222486180a319b3e2e4006cedb5c9646e", "commitGHEventType": "referenced", "commitUser": "pellmann", "commitParents": ["6d6022a06eb3c249a49567461a3d3cc9e56e79a4"], "nameRev": "da35dfe222486180a319b3e2e4006cedb5c9646e tags/0.7~65", "commitMessage": "#769 Fix Grafana: Names of instances for Command and Control in MQTT\n\nSigned-off-by: Kartheeswaran Kalidass <Kartheeswaran.Kalidass@bosch-si.com>\n", "commitDateTime": "2018-08-09 08:09:36", "authoredDateTime": "2018-08-08 16:12:05", "commitGitStats": [{"filePath": "deploy/src/main/config/grafana/dashboard-definitions/grafana_dashboard.json", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["da35dfe222486180a319b3e2e4006cedb5c9646e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 4, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["deploy/src/main/config/grafana/dashboard-definitions/grafana_dashboard.json"]}, {"title": "Services can be flooded with requests", "body": "Pushing \"too many\" requests towards the Hono HTTP protocol adapter make it behave rather poorly. My expectation would be that Hono would still be able to handle the amount it can handle, but it looks to me as if the HTTP adapter mostly breaks down.\r\n\r\nI tried to dig a little bit into this and I think I know one reason why this could be. Pushing HTTP requests  make the HTTP protocol adapter issues requests towards the device registry. If such a request cannot be handled in a specific amount of time (default 200ms) then it will be aborted and the HTTP request failed.\r\n\r\nMy understanding of the message flow is the following:\r\n\r\n![request handling](https://user-images.githubusercontent.com/202474/43648168-f907dc12-9739-11e8-9054-6c62f032e8d9.png)\r\n\r\n\r\n<details>\r\ntitle Request handling\r\n\r\nClient->+Endpoint: Send request\r\nnote right of Endpoint: Validate Request\r\nEndpoint->EventBus: Publish request\r\nEndpoint-->-Client: Accept request\r\n\r\nnote over  Client: New credits are available\r\n\r\nnote right of EventBus: Process request\r\nEventBus->Endpoint: Publish response\r\n\r\nEndpoint->+Client: Send response\r\nClient-->-Endpoint: Accept response\r\n</details>\r\n\r\nThis would mean that the client (the protocol adapter) can push at a higher rate than the EventBus/RequestProcessor/Verticle can handle. Building up requests and slowing down the process.\r\n\r\nThat would also mean that, if requests stay longer than 200ms in some kind of queue on the EventBus side, then they would time out on the Protocol adapter side. So once your are in state that the EventBus queue is at a size that requests have to wait more than 200ms, then all requests will timeout. Which in fact means that no HTTP requests will be accepted any more.\r\n\r\nA possible solution for that problem would be to delay the accept of the request until the response was send. The reject or release could still be sent directly after the validation of the request.\r\n\r\nAnother possible solution would be to get rid of the EventBus completely. As some initial profiler run showed that most of the time is spent processing EventBus messages.\r\n\r\nThis may as well relate to issue #735.", "url": "https://github.com/eclipse/hono/issues/756", "user": "ctron", "labels": ["bug"], "created": "2018-08-03 14:36:36", "closed": "2018-08-16 07:35:55", "commits": {"ae09482d3bb319cddc50733b763c42387f96c1f2": {"commitGHEventType": "referenced", "commitUser": "ctron"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "ae09482d3bb319cddc50733b763c42387f96c1f2", "commitGHEventType": "referenced", "commitUser": "ctron", "commitParents": ["87f21e5d8f50a7e4a16e3fc0d411d6dea0e243bb"], "nameRev": "ae09482d3bb319cddc50733b763c42387f96c1f2 tags/0.7~36", "commitMessage": "[#735, #756] Fix service flooding and memory leak", "commitDateTime": "2018-08-14 16:13:30", "authoredDateTime": "2018-08-06 14:31:46", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/amqp/AmqpEndpoint.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/amqp/AmqpServiceBase.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/amqp/RequestResponseEndpoint.java", "insertions": 253, "deletions": 66, "lines": 319}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/amqp/RequestResponseEndpointTest.java", "insertions": 87, "deletions": 4, "lines": 91}, {"filePath": "services/auth/src/main/java/org/eclipse/hono/service/auth/impl/AuthenticationEndpoint.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "services/messaging/src/main/java/org/eclipse/hono/messaging/MessageForwardingEndpoint.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Memory leak in the RequestResponseEndpoint", "body": "To me it looks like there is a memory leak in the device registry. After running for a while the device registry gets slower and slower. And the protocol adapters fail with 503, originating from the communication with the device registry.\r\n\r\nRestarting the pod fixes the issue:\r\n\r\n![image](https://user-images.githubusercontent.com/202474/43636358-23b0fffc-9712-11e8-8d63-c37bb2142399.png)\r\n\r\nAnd running leak analysis on the heap dump seems to confirm this:\r\n\r\n![image](https://user-images.githubusercontent.com/202474/43636381-3663c21a-9712-11e8-9452-7b51a9a792e0.png)\r\n\r\nFurther analysis is required how the happens.", "url": "https://github.com/eclipse/hono/issues/753", "user": "ctron", "labels": ["Device Registry", "bug"], "created": "2018-08-03 09:42:10", "closed": "2018-08-16 07:35:34", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "getRequestPayload not working as intended", "body": "I just dropped some code there, illustrating my issue:\r\nhttps://github.com/eclipse/hono/pull/745\r\n\r\nProbably nobody spotted it cause the build is (intentionally) broken.", "url": "https://github.com/eclipse/hono/issues/751", "user": "pho-enix", "labels": ["bug"], "created": "2018-08-03 07:17:35", "closed": "2018-08-06 07:12:36", "commits": {"af33fb1be1f62e506812a26303acbcab58c43bc5": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "4e4059e362519a75278895a2640430ff1971cf85": {"commitGHEventType": "referenced", "commitUser": "ctron"}, "8c9a547386089a86c032e05aa028459b832ddbdf": {"commitGHEventType": "referenced", "commitUser": "ctron"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "af33fb1be1f62e506812a26303acbcab58c43bc5", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["02c2f6678dd48cc2b15df5fc69ac9d5a821f526d"], "nameRev": "af33fb1be1f62e506812a26303acbcab58c43bc5 tags/0.7~116", "commitMessage": "[#751] Fix handling of unexpected property type.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-08-03 14:16:37", "authoredDateTime": "2018-08-03 11:49:37", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/EventBusService.java", "insertions": 9, "deletions": 7, "lines": 16}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/EventBusServiceTest.java", "insertions": 80, "deletions": 0, "lines": 80}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EventBusService.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.EventBusService.getRequestPayload(io.vertx.core.json.JsonObject)", "TOT": 21, "UPD": 6, "INS": 1, "MOV": 9, "DEL": 5}]}, {"spoonFilePath": "EventBusServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.EventBusServiceTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "4e4059e362519a75278895a2640430ff1971cf85", "commitGHEventType": "referenced", "commitUser": "ctron", "commitParents": ["a8c9772bfa490b7537d1bee2e965cfef7192e97e"], "nameRev": "4e4059e362519a75278895a2640430ff1971cf85 tags/0.7~44", "commitMessage": "[#751] Actually do a type check and add a unit test", "commitDateTime": "2018-08-13 17:19:47", "authoredDateTime": "2018-08-03 17:27:39", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/EventBusService.java", "insertions": 20, "deletions": 12, "lines": 32}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/credentials/BaseCredentialsService.java", "insertions": 11, "deletions": 7, "lines": 18}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/tenant/BaseTenantService.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/EventBusServiceTest.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry/FileBasedCredentialsService.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EventBusService.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.EventBusService.getTypesafeValueForField(io.vertx.core.json.JsonObject,java.lang.String)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.service.EventBusService.removeTypesafeValueForField(io.vertx.core.json.JsonObject,java.lang.String)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.service.EventBusService.getTypesafeValueForField(java.lang.Class,io.vertx.core.json.JsonObject,java.lang.String)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.EventBusService.removeTypesafeValueForField(java.lang.Class,io.vertx.core.json.JsonObject,java.lang.String)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseCredentialsService.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.credentials.BaseCredentialsService.processGetRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.BaseCredentialsService.processRemoveRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "BaseTenantService.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.tenant.BaseTenantService.processGetRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.tenant.BaseTenantService.processGetByCaRequest(org.eclipse.hono.util.EventBusMessage,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EventBusServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.EventBusServiceTest.testValidType()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.EventBusServiceTest.testInvalidType()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.EventBusServiceTest.testGetNull()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FileBasedCredentialsService.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.deviceregistry.FileBasedCredentialsService.findCredentialsForDevice(io.vertx.core.json.JsonArray,java.lang.String,io.vertx.core.json.JsonArray)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "8c9a547386089a86c032e05aa028459b832ddbdf", "commitGHEventType": "referenced", "commitUser": "ctron", "commitParents": ["a9d7f50ea1027ca6ecc1951f7db0da0185790b56"], "nameRev": "8c9a547386089a86c032e05aa028459b832ddbdf tags/0.7~39", "commitMessage": "Add a note to the release notes about #751, #757", "commitDateTime": "2018-08-14 13:06:35", "authoredDateTime": "2018-08-14 10:15:13", "commitGitStats": [{"filePath": "site/content/release-notes.md", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["af33fb1be1f62e506812a26303acbcab58c43bc5", "4e4059e362519a75278895a2640430ff1971cf85"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 48, "deletions": 30, "lines": 78, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 53.0, "UPD": 6.0, "INS": 22.0, "MOV": 16.0, "DEL": 9.0, "spoonFilesChanged": 4, "spoonMethodsChanged": 10}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service", "service-base/src/main/java/org/eclipse/hono/service/tenant", "service-base/src/main/java/org/eclipse/hono/service/credentials", "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry"], "changesInPackagesSPOON": ["org.eclipse.hono.service.EventBusService.getTypesafeValueForField(java.lang.Class,io.vertx.core.json.JsonObject,java.lang.String)", "org.eclipse.hono.service.tenant.BaseTenantService.processGetByCaRequest(org.eclipse.hono.util.EventBusMessage,java.lang.String)", "org.eclipse.hono.service.tenant.BaseTenantService.processGetRequest(org.eclipse.hono.util.EventBusMessage)", "org.eclipse.hono.service.credentials.BaseCredentialsService.processRemoveRequest(org.eclipse.hono.util.EventBusMessage)", "org.eclipse.hono.service.EventBusService.getTypesafeValueForField(io.vertx.core.json.JsonObject,java.lang.String)", "org.eclipse.hono.service.credentials.BaseCredentialsService.processGetRequest(org.eclipse.hono.util.EventBusMessage)", "org.eclipse.hono.deviceregistry.FileBasedCredentialsService.findCredentialsForDevice(io.vertx.core.json.JsonArray,java.lang.String,io.vertx.core.json.JsonArray)", "org.eclipse.hono.service.EventBusService.removeTypesafeValueForField(io.vertx.core.json.JsonObject,java.lang.String)", "org.eclipse.hono.service.EventBusService.getRequestPayload(io.vertx.core.json.JsonObject)", "org.eclipse.hono.service.EventBusService.removeTypesafeValueForField(java.lang.Class,io.vertx.core.json.JsonObject,java.lang.String)"]}, {"title": "Events are not durable", "body": "The Hono documentation says Events should be flagged as *durable*, and for good reason[1]:\r\n\r\n> Events provide a different quality of service for messages sent to the Event endpoint by setting the durable property of the message header to `true`.\r\n\r\nHowever the outgoing messages are not set *durable*. There is a method `addEndpointSpecificProperties` which should take care of this, but it seems never to be called.\r\n\r\nI think this originates from the confusing number of \"send*\" methods. Maybe it is time to clean those up.\r\n\r\n[1] https://www.eclipse.org/hono/api/event-api/", "url": "https://github.com/eclipse/hono/issues/743", "user": "ctron", "labels": ["Client", "bug"], "created": "2018-08-01 09:24:18", "closed": "2018-08-03 14:29:49", "commits": {"14baf7aa96c98b0c3ae7d884361c966778e43b7d": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "14baf7aa96c98b0c3ae7d884361c966778e43b7d", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["02500695dbfe7e4ef667baebe650b081fbee2b2d"], "nameRev": "14baf7aa96c98b0c3ae7d884361c966778e43b7d tags/0.7~108", "commitMessage": "[#743] Always mark events as \"durable\".\n\nAll of EventSenderImpl's send method variants now mark the message to be\nsent as durable. The adapter specific integration tests also check\nconsumed messages for the durable property being set.\n\nFixes #743\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-08-03 16:23:32", "authoredDateTime": "2018-08-03 16:22:53", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractSender.java", "insertions": 0, "deletions": 17, "lines": 17}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/EventSenderImpl.java", "insertions": 3, "deletions": 9, "lines": 12}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/EventSenderImplTest.java", "insertions": 48, "deletions": 0, "lines": 48}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/amqp/AmqpAdapterTestBase.java", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/amqp/EventAmqpIT.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/http/EventHttpIT.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/mqtt/EventMqttIT.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractSender.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSender.send(java.lang.String,java.util.Map,byte[],java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSender.send(java.lang.String,java.util.Map,byte[],java.lang.String,java.lang.String,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSender.addEndpointSpecificProperties(org.apache.qpid.proton.message.Message,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "EventSenderImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.EventSenderImpl.addEndpointSpecificProperties(org.apache.qpid.proton.message.Message,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.EventSenderImpl.sendMessage(org.apache.qpid.proton.message.Message,io.opentracing.Span)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EventSenderImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.EventSenderImplTest.testSendMarksMessageAsDurable(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.EventSenderImplTest.testSendAndWaitForOutcomeMarksMessageAsDurable(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AmqpAdapterTestBase.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.amqp.AmqpAdapterTestBase.assertAdditionalMessageProperties(io.vertx.ext.unit.TestContext,org.apache.qpid.proton.message.Message)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.tests.amqp.AmqpAdapterTestBase.testUploadingXnumberOfMessages(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EventAmqpIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.amqp.EventAmqpIT.assertAdditionalMessageProperties(io.vertx.ext.unit.TestContext,org.apache.qpid.proton.message.Message)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EventHttpIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.http.EventHttpIT.assertAdditionalMessageProperties(io.vertx.ext.unit.TestContext,org.apache.qpid.proton.message.Message)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EventMqttIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.mqtt.EventMqttIT.assertAdditionalMessageProperties(io.vertx.ext.unit.TestContext,org.apache.qpid.proton.message.Message)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["14baf7aa96c98b0c3ae7d884361c966778e43b7d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 26, "lines": 29, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 8, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 4, "spoonFilesChanged": 5, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.EventSenderImpl.addEndpointSpecificProperties(org.apache.qpid.proton.message.Message,java.lang.String)", "org.eclipse.hono.tests.http.EventHttpIT.assertAdditionalMessageProperties(io.vertx.ext.unit.TestContext,org.apache.qpid.proton.message.Message)", "org.eclipse.hono.tests.mqtt.EventMqttIT.assertAdditionalMessageProperties(io.vertx.ext.unit.TestContext,org.apache.qpid.proton.message.Message)", "org.eclipse.hono.client.impl.AbstractSender.send(java.lang.String,java.util.Map,byte[],java.lang.String,java.lang.String,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.EventSenderImpl.sendMessage(org.apache.qpid.proton.message.Message,io.opentracing.Span)", "org.eclipse.hono.tests.amqp.EventAmqpIT.assertAdditionalMessageProperties(io.vertx.ext.unit.TestContext,org.apache.qpid.proton.message.Message)", "org.eclipse.hono.client.impl.AbstractSender.send(java.lang.String,java.util.Map,byte[],java.lang.String,java.lang.String)", "org.eclipse.hono.client.impl.AbstractSender.addEndpointSpecificProperties(org.apache.qpid.proton.message.Message,java.lang.String)"]}, {"title": "Half dead HTTP adapter instances", "body": "Every now and then it happens to me that an HTTP protocol adapter instance is half dead. It is being reported as healthy, yet does not send any messages to the downstream Qpid router. HTTP requests return 503.\r\n\r\nThe following two exceptions keep repeating over and over:\r\n\r\n~~~\r\n08:21:33.966 [vert.x-eventloop-thread-0] ERROR i.v.e.w.impl.RoutingContextImplBase - Unexpected exception in route\r\njava.lang.IllegalStateException: Response is closed\r\n\tat io.vertx.core.http.impl.HttpServerResponseImpl.checkValid(HttpServerResponseImpl.java:548)\r\n\tat io.vertx.core.http.impl.HttpServerResponseImpl.end0(HttpServerResponseImpl.java:401)\r\n\tat io.vertx.core.http.impl.HttpServerResponseImpl.end(HttpServerResponseImpl.java:319)\r\n\tat io.vertx.core.http.impl.HttpServerResponseImpl.end(HttpServerResponseImpl.java:308)\r\n\tat io.vertx.ext.web.impl.RoutingContextImplBase.unhandledFailure(RoutingContextImplBase.java:166)\r\n\tat io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:132)\r\n\tat io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:133)\r\n\tat io.opentracing.contrib.vertx.ext.web.TracingHandler.handlerFailure(TracingHandler.java:90)\r\n\tat io.opentracing.contrib.vertx.ext.web.TracingHandler.handle(TracingHandler.java:44)\r\n\tat io.opentracing.contrib.vertx.ext.web.TracingHandler.handle(TracingHandler.java:25)\r\n\tat io.vertx.ext.web.impl.RouteImpl.handleFailure(RouteImpl.java:223)\r\n\tat io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:117)\r\n\tat io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:133)\r\n\tat io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:465)\r\n\tat io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:166)\r\n\tat org.eclipse.hono.service.auth.device.HonoAuthHandler.processException(HonoAuthHandler.java:233)\r\n\tat org.eclipse.hono.service.auth.device.HonoAuthHandler.lambda$null$1(HonoAuthHandler.java:189)\r\n\tat org.eclipse.hono.service.auth.device.CredentialsApiAuthProvider.lambda$authenticate$3(CredentialsApiAuthProvider.java:127)\r\n\tat io.vertx.core.impl.FutureImpl.tryFail(FutureImpl.java:165)\r\n\tat io.vertx.core.impl.FutureImpl.fail(FutureImpl.java:97)\r\n\tat io.vertx.core.Future.lambda$map$2(Future.java:308)\r\n\tat io.vertx.core.impl.FutureImpl.tryFail(FutureImpl.java:165)\r\n\tat io.vertx.core.impl.FutureImpl.fail(FutureImpl.java:97)\r\n\tat io.vertx.core.impl.FutureImpl.handle(FutureImpl.java:149)\r\n\tat io.vertx.core.impl.FutureImpl.handle(FutureImpl.java:18)\r\n\tat io.vertx.core.impl.FailedFuture.setHandler(FailedFuture.java:48)\r\n\tat io.vertx.core.Future.lambda$recover$4(Future.java:392)\r\n\tat io.vertx.core.impl.FutureImpl.tryFail(FutureImpl.java:165)\r\n\tat io.vertx.core.impl.FutureImpl.fail(FutureImpl.java:97)\r\n\tat io.vertx.core.impl.FutureImpl.handle(FutureImpl.java:149)\r\n\tat io.vertx.core.impl.FutureImpl.handle(FutureImpl.java:18)\r\n\tat io.vertx.core.impl.FutureImpl.tryFail(FutureImpl.java:165)\r\n\tat io.vertx.core.impl.FutureImpl.fail(FutureImpl.java:97)\r\n\tat io.vertx.core.Future.lambda$map$2(Future.java:308)\r\n\tat io.vertx.core.impl.FutureImpl.tryFail(FutureImpl.java:165)\r\n\tat io.vertx.core.impl.FutureImpl.fail(FutureImpl.java:97)\r\n\tat io.vertx.core.impl.FutureImpl.handle(FutureImpl.java:149)\r\n\tat io.vertx.core.impl.FutureImpl.handle(FutureImpl.java:18)\r\n\tat org.eclipse.hono.client.impl.AbstractRequestResponseClient.cancelRequest(AbstractRequestResponseClient.java:416)\r\n\tat org.eclipse.hono.client.impl.AbstractRequestResponseClient.lambda$null$3(AbstractRequestResponseClient.java:729)\r\n\tat io.vertx.core.impl.VertxImpl$InternalTimerHandler.handle(VertxImpl.java:885)\r\n\tat io.vertx.core.impl.VertxImpl$InternalTimerHandler.handle(VertxImpl.java:844)\r\n\tat io.vertx.core.impl.ContextImpl.lambda$wrapTask$2(ContextImpl.java:339)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)\r\n\tat io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:309)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n~~~\r\n\r\n~~~\r\n08:21:33.968 [vert.x-eventloop-thread-0] ERROR i.v.e.w.impl.RoutingContextImplBase - Unexpected exception in route\r\njava.lang.IllegalStateException: Response is closed\r\n\tat io.vertx.core.http.impl.HttpServerResponseImpl.checkValid(HttpServerResponseImpl.java:548)\r\n\tat io.vertx.core.http.impl.HttpServerResponseImpl.putHeader(HttpServerResponseImpl.java:189)\r\n\tat org.eclipse.hono.service.http.HttpUtils.setResponseBody(HttpUtils.java:318)\r\n\tat org.eclipse.hono.service.http.DefaultFailureHandler.sendError(DefaultFailureHandler.java:110)\r\n\tat org.eclipse.hono.service.http.DefaultFailureHandler.handle(DefaultFailureHandler.java:60)\r\n\tat org.eclipse.hono.service.http.DefaultFailureHandler.handle(DefaultFailureHandler.java:40)\r\n\tat io.vertx.ext.web.impl.RouteImpl.handleFailure(RouteImpl.java:223)\r\n\tat io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:117)\r\n\tat io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:133)\r\n\tat io.opentracing.contrib.vertx.ext.web.TracingHandler.handlerFailure(TracingHandler.java:90)\r\n\tat io.opentracing.contrib.vertx.ext.web.TracingHandler.handle(TracingHandler.java:44)\r\n\tat io.opentracing.contrib.vertx.ext.web.TracingHandler.handle(TracingHandler.java:25)\r\n\tat io.vertx.ext.web.impl.RouteImpl.handleFailure(RouteImpl.java:223)\r\n\tat io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:117)\r\n\tat io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:133)\r\n\tat io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:465)\r\n\tat io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:166)\r\n\tat org.eclipse.hono.service.auth.device.HonoAuthHandler.processException(HonoAuthHandler.java:233)\r\n\tat org.eclipse.hono.service.auth.device.HonoAuthHandler.lambda$null$1(HonoAuthHandler.java:189)\r\n\tat org.eclipse.hono.service.auth.device.CredentialsApiAuthProvider.lambda$authenticate$3(CredentialsApiAuthProvider.java:127)\r\n\tat io.vertx.core.impl.FutureImpl.tryFail(FutureImpl.java:165)\r\n\tat io.vertx.core.impl.FutureImpl.fail(FutureImpl.java:97)\r\n\tat io.vertx.core.Future.lambda$map$2(Future.java:308)\r\n\tat io.vertx.core.impl.FutureImpl.tryFail(FutureImpl.java:165)\r\n\tat io.vertx.core.impl.FutureImpl.fail(FutureImpl.java:97)\r\n\tat io.vertx.core.impl.FutureImpl.handle(FutureImpl.java:149)\r\n\tat io.vertx.core.impl.FutureImpl.handle(FutureImpl.java:18)\r\n\tat io.vertx.core.impl.FailedFuture.setHandler(FailedFuture.java:48)\r\n\tat io.vertx.core.Future.lambda$recover$4(Future.java:392)\r\n\tat io.vertx.core.impl.FutureImpl.tryFail(FutureImpl.java:165)\r\n\tat io.vertx.core.impl.FutureImpl.fail(FutureImpl.java:97)\r\n\tat io.vertx.core.impl.FutureImpl.handle(FutureImpl.java:149)\r\n\tat io.vertx.core.impl.FutureImpl.handle(FutureImpl.java:18)\r\n\tat io.vertx.core.impl.FutureImpl.tryFail(FutureImpl.java:165)\r\n\tat io.vertx.core.impl.FutureImpl.fail(FutureImpl.java:97)\r\n\tat io.vertx.core.Future.lambda$map$2(Future.java:308)\r\n\tat io.vertx.core.impl.FutureImpl.tryFail(FutureImpl.java:165)\r\n\tat io.vertx.core.impl.FutureImpl.fail(FutureImpl.java:97)\r\n\tat io.vertx.core.impl.FutureImpl.handle(FutureImpl.java:149)\r\n\tat io.vertx.core.impl.FutureImpl.handle(FutureImpl.java:18)\r\n\tat org.eclipse.hono.client.impl.AbstractRequestResponseClient.cancelRequest(AbstractRequestResponseClient.java:416)\r\n\tat org.eclipse.hono.client.impl.AbstractRequestResponseClient.lambda$null$3(AbstractRequestResponseClient.java:729)\r\n\tat io.vertx.core.impl.VertxImpl$InternalTimerHandler.handle(VertxImpl.java:885)\r\n\tat io.vertx.core.impl.VertxImpl$InternalTimerHandler.handle(VertxImpl.java:844)\r\n\tat io.vertx.core.impl.ContextImpl.lambda$wrapTask$2(ContextImpl.java:339)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)\r\n\tat io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:309)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n~~~\r\n\r\nThe full log is here: [hono-adapter-http-vertx.log](https://github.com/eclipse/hono/files/2235097/hono-adapter-http-vertx.log)\r\n\r\nHowever I am not sure if this repeating exception is the cause of just a side effect. In any case I think that the exception caused by calling into `putHeader` on a closed response should be handled or avoided in the first place.", "url": "https://github.com/eclipse/hono/issues/735", "user": "ctron", "labels": ["HTTP Adapter", "bug"], "created": "2018-07-27 08:40:29", "closed": "2018-08-17 10:51:30", "commits": {"b41058bfd4710796a8926a4308091bb275116d76": {"commitGHEventType": "closed", "commitUser": "sophokles73"}, "11c27b0fa40fc9c5bbecf2603bcaafe26de529da": {"commitGHEventType": "referenced", "commitUser": "ctron"}, "ae09482d3bb319cddc50733b763c42387f96c1f2": {"commitGHEventType": "referenced", "commitUser": "ctron"}}, "ttf": 21.00027777777778, "commitsDetails": [{"commitHash": "b41058bfd4710796a8926a4308091bb275116d76", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["44e1ee24fa35bb399ecf92f25589629847512502"], "nameRev": "b41058bfd4710796a8926a4308091bb275116d76 tags/0.7~137", "commitMessage": "[#735] Do not write to HTTP response if already closed.\n\nFixes #735\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-07-27 13:00:18", "authoredDateTime": "2018-07-27 12:59:43", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/http/DefaultFailureHandler.java", "insertions": 26, "deletions": 23, "lines": 49}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/http/HttpUtils.java", "insertions": 19, "deletions": 7, "lines": 26}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/http/DefaultFailureHandlerTest.java", "insertions": 20, "deletions": 0, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DefaultFailureHandler.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.http.DefaultFailureHandler.handle(io.vertx.ext.web.RoutingContext)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.http.DefaultFailureHandler.sendError(io.vertx.core.http.HttpServerResponse,int,java.lang.String)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "HttpUtils.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.http.HttpUtils.failWithHeaders(io.vertx.ext.web.RoutingContext,org.eclipse.hono.client.ServiceInvocationException,java.util.Map)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.http.HttpUtils.setResponseBody(io.vertx.core.http.HttpServerResponse,io.vertx.core.buffer.Buffer,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "DefaultFailureHandlerTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.http.DefaultFailureHandlerTest.testHandlerDetectsEndedResponse()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "11c27b0fa40fc9c5bbecf2603bcaafe26de529da", "commitGHEventType": "referenced", "commitUser": "ctron", "commitParents": ["5cefd007e7638953cd77abe2a57da35385503e81"], "nameRev": "11c27b0fa40fc9c5bbecf2603bcaafe26de529da tags/0.7~88", "commitMessage": "[#735] Fix another exception when the response is already ended", "commitDateTime": "2018-08-06 16:03:41", "authoredDateTime": "2018-08-06 16:03:23", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/auth/device/HonoAuthHandler.java", "insertions": 29, "deletions": 28, "lines": 57}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoAuthHandler.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.auth.device.HonoAuthHandler.processException(io.vertx.ext.web.RoutingContext,java.lang.Throwable)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "ae09482d3bb319cddc50733b763c42387f96c1f2", "commitGHEventType": "referenced", "commitUser": "ctron", "commitParents": ["87f21e5d8f50a7e4a16e3fc0d411d6dea0e243bb"], "nameRev": "ae09482d3bb319cddc50733b763c42387f96c1f2 tags/0.7~36", "commitMessage": "[#735, #756] Fix service flooding and memory leak", "commitDateTime": "2018-08-14 16:13:30", "authoredDateTime": "2018-08-06 14:31:46", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/amqp/AmqpEndpoint.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/amqp/AmqpServiceBase.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/amqp/RequestResponseEndpoint.java", "insertions": 253, "deletions": 66, "lines": 319}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/amqp/RequestResponseEndpointTest.java", "insertions": 87, "deletions": 4, "lines": 91}, {"filePath": "services/auth/src/main/java/org/eclipse/hono/service/auth/impl/AuthenticationEndpoint.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "services/messaging/src/main/java/org/eclipse/hono/messaging/MessageForwardingEndpoint.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": ["b41058bfd4710796a8926a4308091bb275116d76", "11c27b0fa40fc9c5bbecf2603bcaafe26de529da"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 74, "deletions": 58, "lines": 132, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 15.0, "UPD": 1.0, "INS": 4.0, "MOV": 8.0, "DEL": 2.0, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service/http", "service-base/src/main/java/org/eclipse/hono/service/auth/device"], "changesInPackagesSPOON": ["org.eclipse.hono.service.http.DefaultFailureHandler.sendError(io.vertx.core.http.HttpServerResponse,int,java.lang.String)", "org.eclipse.hono.service.http.HttpUtils.setResponseBody(io.vertx.core.http.HttpServerResponse,io.vertx.core.buffer.Buffer,java.lang.String)", "org.eclipse.hono.service.http.DefaultFailureHandler.handle(io.vertx.ext.web.RoutingContext)", "org.eclipse.hono.service.auth.device.HonoAuthHandler.processException(io.vertx.ext.web.RoutingContext,java.lang.Throwable)", "org.eclipse.hono.service.http.HttpUtils.failWithHeaders(io.vertx.ext.web.RoutingContext,org.eclipse.hono.client.ServiceInvocationException,java.util.Map)"]}, {"title": "NPE in error handler", "body": "While testing I saw the following exception:\r\n\r\n~~~\r\n09:19:16.238 [vert.x-eventloop-thread-0] ERROR i.v.e.w.impl.RoutingContextImplBase - Unexpected exception in route\r\njava.lang.NullPointerException: null\r\n\tat io.vertx.core.buffer.impl.BufferImpl.<init>(BufferImpl.java:52)\r\n\tat io.vertx.core.buffer.impl.BufferImpl.<init>(BufferImpl.java:56)\r\n\tat io.vertx.core.buffer.impl.BufferFactoryImpl.buffer(BufferFactoryImpl.java:35)\r\n\tat io.vertx.core.buffer.Buffer.buffer(Buffer.java:70)\r\n\tat io.vertx.core.http.impl.HttpServerResponseImpl.end(HttpServerResponseImpl.java:308)\r\n\tat org.eclipse.hono.service.http.DefaultFailureHandler.sendError(DefaultFailureHandler.java:84)\r\n\tat org.eclipse.hono.service.http.DefaultFailureHandler.handle(DefaultFailureHandler.java:65)\r\n\tat org.eclipse.hono.service.http.DefaultFailureHandler.handle(DefaultFailureHandler.java:40)\r\n\tat io.vertx.ext.web.impl.RouteImpl.handleFailure(RouteImpl.java:223)\r\n\tat io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:117)\r\n\tat io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:133)\r\n\tat io.opentracing.contrib.vertx.ext.web.TracingHandler.handlerFailure(TracingHandler.java:90)\r\n\tat io.opentracing.contrib.vertx.ext.web.TracingHandler.handle(TracingHandler.java:44)\r\n\tat io.opentracing.contrib.vertx.ext.web.TracingHandler.handle(TracingHandler.java:25)\r\n\tat io.vertx.ext.web.impl.RouteImpl.handleFailure(RouteImpl.java:223)\r\n\tat io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:117)\r\n\tat io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:133)\r\n\tat io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:465)\r\n\tat io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:166)\r\n\tat org.eclipse.hono.service.auth.device.HonoAuthHandler.processException(HonoAuthHandler.java:240)\r\n\tat org.eclipse.hono.service.auth.device.HonoAuthHandler.lambda$null$1(HonoAuthHandler.java:189)\r\n\tat org.eclipse.hono.service.auth.device.CredentialsApiAuthProvider.lambda$authenticate$3(CredentialsApiAuthProvider.java:127)\r\n\tat io.vertx.core.impl.FutureImpl.setHandler(FutureImpl.java:76)\r\n\tat org.eclipse.hono.service.auth.device.CredentialsApiAuthProvider.authenticate(CredentialsApiAuthProvider.java:113)\r\n\tat org.eclipse.hono.service.auth.device.CredentialsApiAuthProvider.authenticate(CredentialsApiAuthProvider.java:123)\r\n\tat org.eclipse.hono.service.auth.device.HonoAuthHandler.lambda$handle$2(HonoAuthHandler.java:170)\r\n\tat org.eclipse.hono.service.auth.device.HonoChainAuthHandler.lambda$iterate$0(HonoChainAuthHandler.java:126)\r\n\tat org.eclipse.hono.adapter.http.HonoBasicAuthHandler.lambda$parseCredentials$0(HonoBasicAuthHandler.java:84)\r\n\tat org.eclipse.hono.adapter.http.HonoBasicAuthHandler.parseAuthorization(HonoBasicAuthHandler.java:130)\r\n\tat org.eclipse.hono.adapter.http.HonoBasicAuthHandler.parseCredentials(HonoBasicAuthHandler.java:57)\r\n\tat org.eclipse.hono.service.auth.device.HonoChainAuthHandler.iterate(HonoChainAuthHandler.java:104)\r\n\tat org.eclipse.hono.service.auth.device.HonoChainAuthHandler.lambda$iterate$0(HonoChainAuthHandler.java:114)\r\n\tat org.eclipse.hono.adapter.http.X509AuthHandler.parseCredentials(X509AuthHandler.java:127)\r\n\tat org.eclipse.hono.service.auth.device.HonoChainAuthHandler.iterate(HonoChainAuthHandler.java:104)\r\n\tat org.eclipse.hono.service.auth.device.HonoChainAuthHandler.parseCredentials(HonoChainAuthHandler.java:85)\r\n\tat org.eclipse.hono.service.auth.device.HonoAuthHandler.handle(HonoAuthHandler.java:149)\r\n\tat org.eclipse.hono.service.auth.device.HonoAuthHandler.handle(HonoAuthHandler.java:48)\r\n\tat io.vertx.ext.web.impl.RouteImpl.handleContext(RouteImpl.java:219)\r\n\tat io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:120)\r\n\tat io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:133)\r\n\tat io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:125)\r\n\tat io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:38)\r\n\tat io.vertx.ext.web.impl.RouteImpl.handleContext(RouteImpl.java:219)\r\n\tat io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:120)\r\n\tat io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:133)\r\n\tat io.vertx.ext.web.handler.impl.BodyHandlerImpl$BHandler.doEnd(BodyHandlerImpl.java:231)\r\n\tat io.vertx.ext.web.handler.impl.BodyHandlerImpl$BHandler.end(BodyHandlerImpl.java:211)\r\n\tat io.vertx.ext.web.handler.impl.BodyHandlerImpl.lambda$handle$0(BodyHandlerImpl.java:74)\r\n\tat io.vertx.core.http.impl.HttpServerRequestImpl.handleEnd(HttpServerRequestImpl.java:417)\r\n\tat io.vertx.core.http.impl.Http1xServerConnection.handleEnd(Http1xServerConnection.java:483)\r\n\tat io.vertx.core.http.impl.Http1xServerConnection.handleContent(Http1xServerConnection.java:478)\r\n\tat io.vertx.core.http.impl.Http1xServerConnection.processMessage(Http1xServerConnection.java:459)\r\n\tat io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:144)\r\n\tat io.vertx.core.http.impl.HttpServerImpl$ServerHandlerWithWebSockets.handleMessage(HttpServerImpl.java:714)\r\n\tat io.vertx.core.http.impl.HttpServerImpl$ServerHandlerWithWebSockets.handleMessage(HttpServerImpl.java:622)\r\n\tat io.vertx.core.net.impl.VertxHandler.lambda$channelRead$1(VertxHandler.java:146)\r\n\tat io.vertx.core.impl.ContextImpl.lambda$wrapTask$2(ContextImpl.java:337)\r\n\tat io.vertx.core.impl.ContextImpl.executeFromIO(ContextImpl.java:195)\r\n\tat io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:144)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:284)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)\r\n\tat io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1359)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:141)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n~~~", "url": "https://github.com/eclipse/hono/issues/716", "user": "ctron", "labels": ["HTTP Adapter", "bug"], "created": "2018-07-17 09:41:44", "closed": "2018-07-18 11:08:34", "commits": {"44f8399f42495cb90a1cd35e26d4a33120d4dea9": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "44f8399f42495cb90a1cd35e26d4a33120d4dea9", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["2ed1d604bd2ec9394d4c15dae2d1ed8a1d481641"], "nameRev": "44f8399f42495cb90a1cd35e26d4a33120d4dea9 tags/0.7-M2~17", "commitMessage": "[#716] Fix NPE when failing routing context.\n\nThe DefaultFailureHandler now handles exceptions that do not contain a\ndetail message correctly. In this case the response body will be left\nempty.\n\nFixes #716\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-07-18 13:08:04", "authoredDateTime": "2018-07-18 13:08:04", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/http/DefaultFailureHandler.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/http/HttpUtils.java", "insertions": 32, "deletions": 11, "lines": 43}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/http/DefaultFailureHandlerTest.java", "insertions": 120, "deletions": 0, "lines": 120}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DefaultFailureHandler.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.http.DefaultFailureHandler.sendError(io.vertx.core.http.HttpServerResponse,int,java.lang.String)", "TOT": 8, "UPD": 2, "INS": 1, "MOV": 3, "DEL": 2}]}, {"spoonFilePath": "HttpUtils.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.http.HttpUtils", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.http.HttpUtils.setResponseBody(io.vertx.core.http.HttpServerResponse,io.vertx.core.json.JsonObject)", "TOT": 10, "UPD": 0, "INS": 1, "MOV": 8, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.http.HttpUtils.setResponseBody(io.vertx.core.http.HttpServerResponse,io.vertx.core.buffer.Buffer)", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.http.HttpUtils.setResponseBody(io.vertx.core.http.HttpServerResponse,io.vertx.core.buffer.Buffer,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DefaultFailureHandlerTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.http.DefaultFailureHandlerTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["44f8399f42495cb90a1cd35e26d4a33120d4dea9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 37, "deletions": 14, "lines": 51, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 28, "UPD": 4, "INS": 9, "MOV": 12, "DEL": 3, "spoonFilesChanged": 2, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service/http"], "changesInPackagesSPOON": ["org.eclipse.hono.service.http.DefaultFailureHandler.sendError(io.vertx.core.http.HttpServerResponse,int,java.lang.String)", "org.eclipse.hono.service.http.HttpUtils", "org.eclipse.hono.service.http.HttpUtils.setResponseBody(io.vertx.core.http.HttpServerResponse,io.vertx.core.buffer.Buffer,java.lang.String)", "org.eclipse.hono.service.http.HttpUtils.setResponseBody(io.vertx.core.http.HttpServerResponse,io.vertx.core.json.JsonObject)", "org.eclipse.hono.service.http.HttpUtils.setResponseBody(io.vertx.core.http.HttpServerResponse,io.vertx.core.buffer.Buffer)"]}, {"title": "Deadlock in HTTP Adapter of Hono 0.6-Final ", "body": "Hi Hono Devs,\r\n\r\nwe're running Hono 0.6 (Release) in a kubernetes cluster.\r\nSometimes we are encountering problems with an unresponsive Hono HTTP Adapter. \r\n\r\nThe last time we took a thread dump of the pod, which shows a java deadlock:\r\n\r\n```\r\nFound one Java-level deadlock:\r\n=============================\r\n\"vert.x-eventloop-thread-4\":\r\n  waiting to lock monitor 0x00007fc1c000d0a8 (object 0x00000000f07a7c40, a io.vertx.ext.web.impl.RouteImpl),\r\n  which is held by \"vert.x-eventloop-thread-0\"\r\n\"vert.x-eventloop-thread-0\":\r\n  waiting to lock monitor 0x00007fc1c408c318 (object 0x00000000f07a8fc0, a io.vertx.ext.web.impl.RouteImpl),\r\n  which is held by \"vert.x-eventloop-thread-4\"\r\n```\r\nI'm attaching the log file and thread dump:\r\n[logs-from-hono-adapter-http-vertx-in-hono-adapter-http-vertx.txt](https://github.com/eclipse/hono/files/2170657/logs-from-hono-adapter-http-vertx-in-hono-adapter-http-vertx.txt)\r\n[threadDump.log](https://github.com/eclipse/hono/files/2170659/threadDump.log)\r\n \r\nSadly I don't have concrete steps to reproduce the issue yet. But maybe someone else experienced  something similar or got a hunch what could be the problem. ", "url": "https://github.com/eclipse/hono/issues/696", "user": "Christian-Schmid", "labels": ["HTTP Adapter", "bug"], "created": "2018-07-06 14:59:06", "closed": "2018-07-19 09:54:11", "commits": {"cdee13db8cd9e88daada0ece8ef17ea283e48811": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "d80b5005252175f642d1d638e18add48aaf7581b": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "4e7dc3aeba95d03804518aed3655ab2c71f82a2c": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "cdee13db8cd9e88daada0ece8ef17ea283e48811", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["0a2e65e83e475bb4a78ec90e230cd3d950d64a44"], "nameRev": "cdee13db8cd9e88daada0ece8ef17ea283e48811 tags/0.7-M2~34", "commitMessage": "[#696] Validate certificate chain at application level.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-07-13 16:46:18", "authoredDateTime": "2018-07-10 18:03:26", "commitGitStats": [{"filePath": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/X509AuthHandler.java", "insertions": 52, "deletions": 13, "lines": 65}, {"filePath": "adapters/http-vertx/src/main/java/org/eclipse/hono/adapter/http/vertx/VertxBasedHttpProtocolAdapter.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/AbstractProtocolAdapterBase.java", "insertions": 0, "deletions": 21, "lines": 21}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/auth/HonoTrustManagerFactory.java", "insertions": 0, "deletions": 67, "lines": 67}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/auth/TenantApiBasedX509TrustManager.java", "insertions": 0, "deletions": 139, "lines": 139}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/auth/{TenantApiTrustOptions.java => ValidityBasedTrustOptions.java}", "insertions": 8, "deletions": 17, "lines": 25}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/auth/ValidityOnlyTrustManagerFactory.java", "insertions": 105, "deletions": 0, "lines": 105}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/auth/X509CertificateChainValidator.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/auth/device/DeviceCertificateValidator.java", "insertions": 75, "deletions": 0, "lines": 75}], "commitSpoonAstDiffStats": [{"spoonFilePath": "X509AuthHandler.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.X509AuthHandler.getX509CertificateChain(java.security.cert.Certificate[])", "TOT": 10, "UPD": 6, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.http.X509AuthHandler.getCredentials(java.security.cert.X509Certificate[],org.eclipse.hono.util.TenantObject)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.http.X509AuthHandler.parseCredentials(io.vertx.ext.web.RoutingContext,io.vertx.core.Handler)", "TOT": 14, "UPD": 4, "INS": 4, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.http.X509AuthHandler", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.X509AuthHandler.getCredentials(java.util.List,org.eclipse.hono.util.TenantObject)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "VertxBasedHttpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapter.getServerTrustOptions()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractProtocolAdapterBase.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBase.getServerTrustOptions()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HonoTrustManagerFactory.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.auth.HonoTrustManagerFactory", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TenantApiBasedX509TrustManager.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.auth.TenantApiBasedX509TrustManager", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ValidityBasedTrustOptions.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.auth.TenantApiTrustOptions", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.service.auth.TenantApiTrustOptions.clone()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.auth.TenantApiTrustOptions.getTrustManagerFactory(io.vertx.core.Vertx)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.auth.ValidityBasedTrustOptions", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ValidityOnlyTrustManagerFactory.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.auth.ValidityOnlyTrustManagerFactory", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "X509CertificateChainValidator.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.auth", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DeviceCertificateValidator.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.auth.device.DeviceCertificateValidator", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "d80b5005252175f642d1d638e18add48aaf7581b", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["cdee13db8cd9e88daada0ece8ef17ea283e48811"], "nameRev": "d80b5005252175f642d1d638e18add48aaf7581b tags/0.7-M2~33", "commitMessage": "[#696] Use current vert.x Context for connecting to peer.\n\nHonoClientImpl now uses the current vert.x Context that the client is\nrunning on for connecting to and interacting with the peer. This way\nmost of the invocations on HonoClient can be executed immediately\ninstead of scheduling a task on the HonoClient's Context. We also make\nsure that the Futures returned by HonoClient operations are\ncompleted/failed on the client's Context, i.e. we are no longer\nswitching Context when executing handlers registered on the Future.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-07-13 16:46:18", "authoredDateTime": "2018-07-11 17:39:21", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/HonoClient.java", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractHonoClient.java", "insertions": 42, "deletions": 35, "lines": 77}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractRequestResponseClient.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractSender.java", "insertions": 10, "deletions": 19, "lines": 29}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoClientImpl.java", "insertions": 162, "deletions": 121, "lines": 283}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/TelemetrySenderImpl.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "core/src/main/java/org/eclipse/hono/util/HonoProtonHelper.java", "insertions": 40, "deletions": 3, "lines": 43}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}, {"commitHash": "4e7dc3aeba95d03804518aed3655ab2c71f82a2c", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["12834e4455839322d55d393994aaa3a7ce528ee8"], "nameRev": "4e7dc3aeba95d03804518aed3655ab2c71f82a2c tags/0.7-M2~31", "commitMessage": "[#696] Run connection result handling on current context.\n\nNow that the HonoClient instances are running on the protocol adapter's\nevent-loop Context, there is no longer a need for explicitly running the\nhandlers no the adapter Context.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-07-16 12:22:22", "authoredDateTime": "2018-07-16 12:22:09", "commitGitStats": [{"filePath": "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapter.java", "insertions": 39, "deletions": 48, "lines": 87}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractVertxBasedMqttProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.handleConnectionRequestResult(io.vertx.mqtt.MqttEndpoint,io.opentracing.Span,io.vertx.core.AsyncResult)", "TOT": 14, "UPD": 1, "INS": 6, "MOV": 2, "DEL": 5}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cdee13db8cd9e88daada0ece8ef17ea283e48811", "d80b5005252175f642d1d638e18add48aaf7581b", "4e7dc3aeba95d03804518aed3655ab2c71f82a2c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 620, "deletions": 488, "lines": 1108, "gitFilesChange": 17}, "spoonStatsSummary": {"TOT": 64.0, "UPD": 18.0, "INS": 20.0, "MOV": 12.0, "DEL": 14.0, "spoonFilesChanged": 10, "spoonMethodsChanged": 17}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl", "core/src/main/java/org/eclipse/hono/util", "service-base/src/main/java/org/eclipse/hono/service/auth", "adapters/http-vertx/src/main/java/org/eclipse/hono/adapter/http", "service-base/src/main/java/org/eclipse/hono/service/auth/device", "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http", "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt", "service-base/src/main/java/org/eclipse/hono/service", "client/src/main/java/org/eclipse/hono/client"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.http.X509AuthHandler.getX509CertificateChain(java.security.cert.Certificate[])", "org.eclipse.hono.service.auth", "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.handleConnectionRequestResult(io.vertx.mqtt.MqttEndpoint,io.opentracing.Span,io.vertx.core.AsyncResult)", "org.eclipse.hono.service.auth.device.DeviceCertificateValidator", "org.eclipse.hono.service.auth.ValidityBasedTrustOptions", "org.eclipse.hono.adapter.http.X509AuthHandler.getCredentials(java.util.List,org.eclipse.hono.util.TenantObject)", "org.eclipse.hono.service.AbstractProtocolAdapterBase.getServerTrustOptions()", "org.eclipse.hono.adapter.http.X509AuthHandler", "org.eclipse.hono.service.auth.TenantApiTrustOptions.clone()", "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapter.getServerTrustOptions()", "org.eclipse.hono.adapter.http.X509AuthHandler.parseCredentials(io.vertx.ext.web.RoutingContext,io.vertx.core.Handler)", "org.eclipse.hono.service.auth.HonoTrustManagerFactory", "org.eclipse.hono.service.auth.TenantApiTrustOptions", "org.eclipse.hono.service.auth.ValidityOnlyTrustManagerFactory", "org.eclipse.hono.adapter.http.X509AuthHandler.getCredentials(java.security.cert.X509Certificate[],org.eclipse.hono.util.TenantObject)", "org.eclipse.hono.service.auth.TenantApiTrustOptions.getTrustManagerFactory(io.vertx.core.Vertx)", "org.eclipse.hono.service.auth.TenantApiBasedX509TrustManager"]}, {"title": "Caching of CommandConsumer make receiver links unusable", "body": "After very few opened ProtonReceiver links the cache introduced in ebf7193cd708710c459c0345537bc264274d0df2\r\nbreaks `Command and Control` in the HTTP adapter.\r\nThe effect is that no receiver link will be opened anymore, since the cached version of the ProtonReceiver cannot be resurrected.\r\n\r\nIn any case, the caching of multiple ProtonReceivers (one per device) in memory would probably run into a large memory footprint and thus seems to be not desirable.", "url": "https://github.com/eclipse/hono/issues/694", "user": "sysexcontrol", "labels": ["bug"], "created": "2018-07-06 13:15:16", "closed": "2018-07-09 16:30:12", "commits": {"7ddbe1bb77feab65416e219d0cdf868d5e4b6c82": {"commitGHEventType": "referenced", "commitUser": "sysexcontrol"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "7ddbe1bb77feab65416e219d0cdf868d5e4b6c82", "commitGHEventType": "referenced", "commitUser": "sysexcontrol", "commitParents": ["ea656e01b1d37cf90beb49f000b58457eaf93e37"], "nameRev": "7ddbe1bb77feab65416e219d0cdf868d5e4b6c82 tags/0.7-M2~57", "commitMessage": "[#694] Fix CommandConsumer cache to remove links from map.\n\nThe HTTP adapter was broken after CommandConsumer receiver links were\ncached, since they were not reusable.\nNow the links are removed from the map after they were closed.\nIn another step the cache should be considered if it is to be removed from\nadapters again (see Issue #694).\n\nSigned-off-by: Karsten Frank <Karsten.Frank@bosch-si.com>\n", "commitDateTime": "2018-07-06 16:07:36", "authoredDateTime": "2018-07-06 15:56:51", "commitGitStats": [{"filePath": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapter.java", "insertions": 3, "deletions": 11, "lines": 14}, {"filePath": "example/src/main/java/org/eclipse/hono/vertx/example/base/HonoExampleConstants.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/command/CommandConnectionImpl.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractVertxBasedHttpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.createCommandMessageConsumer(io.vertx.ext.web.RoutingContext,java.lang.String,java.lang.String,io.vertx.core.Handler)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.openCommandReceiverLink(io.vertx.ext.web.RoutingContext,java.lang.String,java.lang.String,io.vertx.core.Handler)", "TOT": 9, "UPD": 6, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.closeCommandReceiverLink(java.util.concurrent.atomic.AtomicReference)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HonoExampleConstants.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.vertx.example.base.HonoExampleConstants", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandConnectionImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.command.CommandConnectionImpl.closeCommandConsumer(java.lang.String,java.lang.String)", "TOT": 6, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7ddbe1bb77feab65416e219d0cdf868d5e4b6c82"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 13, "lines": 20, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 18, "UPD": 8, "INS": 4, "MOV": 5, "DEL": 1, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service/command", "example/src/main/java/org/eclipse/hono/vertx/example/base", "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http"], "changesInPackagesSPOON": ["org.eclipse.hono.vertx.example.base.HonoExampleConstants", "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.createCommandMessageConsumer(io.vertx.ext.web.RoutingContext,java.lang.String,java.lang.String,io.vertx.core.Handler)", "org.eclipse.hono.service.command.CommandConnectionImpl.closeCommandConsumer(java.lang.String,java.lang.String)", "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.closeCommandReceiverLink(java.util.concurrent.atomic.AtomicReference)", "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.openCommandReceiverLink(io.vertx.ext.web.RoutingContext,java.lang.String,java.lang.String,io.vertx.core.Handler)"]}, {"title": "HTTP adapter leaks CommandConsumer instances", "body": "The HTTP protocol adapter creates an instance of CommandConsumer for each request that includes the *hono-ttd* request parameter or header in order to receive a pending command for the device.\r\nHowever, the CommandConsumer object created doesn't get GCed anymore.", "url": "https://github.com/eclipse/hono/issues/677", "user": "sophokles73", "labels": ["HTTP Adapter", "bug"], "created": "2018-06-29 16:00:56", "closed": "2018-07-04 06:19:59", "commits": {"15772bb0f69717e1d7d8a412c1e4171debe17947": {"commitGHEventType": "referenced", "commitUser": "sysexcontrol"}, "71f6427d6ae9ba565dbe492ff1a78b2ced35cc8d": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "658fc04724652098939b0422f0ce25838bf5e168": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "66592e5da48f022257023568bf0c82736820268d": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "15772bb0f69717e1d7d8a412c1e4171debe17947", "commitGHEventType": "referenced", "commitUser": "sysexcontrol", "commitParents": ["c3567af7f8e55903179ef9e88c58fcc2551df809"], "nameRev": "15772bb0f69717e1d7d8a412c1e4171debe17947 tags/0.7-M2~92", "commitMessage": "[#677] Free link resources after links are closed. (#680)\n\n* [#677] Free link resources after links are closed.\r\n\r\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch-si.com>", "commitDateTime": "2018-07-02 16:24:31", "authoredDateTime": "2018-07-02 16:24:31", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractHonoClient.java", "insertions": 26, "deletions": 1, "lines": 27}, {"filePath": "core/src/main/java/org/eclipse/hono/util/LinkHelper.java", "insertions": 64, "deletions": 0, "lines": 64}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractHonoClient.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractHonoClient.closeLinks(io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractHonoClient.closeLinks(io.vertx.core.Handler,boolean)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LinkHelper.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.LinkHelper", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "71f6427d6ae9ba565dbe492ff1a78b2ced35cc8d", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["2277133e7c742b676e3a3ccf0e89d83913d62d49"], "nameRev": "71f6427d6ae9ba565dbe492ff1a78b2ced35cc8d tags/0.7-M2~85", "commitMessage": "[#677] Automatically free up resources when detaching links.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-07-03 18:06:59", "authoredDateTime": "2018-07-03 14:28:12", "commitGitStats": [{"filePath": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/VertxBasedAmqpProtocolAdapter.java", "insertions": 29, "deletions": 29, "lines": 58}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractHonoClient.java", "insertions": 52, "deletions": 80, "lines": 132}, {"filePath": "core/src/main/java/org/eclipse/hono/util/HonoProtonHelper.java", "insertions": 169, "deletions": 0, "lines": 169}, {"filePath": "core/src/main/java/org/eclipse/hono/util/LinkHelper.java", "insertions": 0, "deletions": 64, "lines": 64}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/amqp/AmqpServiceBase.java", "insertions": 9, "deletions": 2, "lines": 11}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/amqp/RequestResponseEndpoint.java", "insertions": 24, "deletions": 24, "lines": 48}, {"filePath": "services/auth/src/main/java/org/eclipse/hono/service/auth/impl/SimpleAuthenticationServer.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "services/messaging/src/main/java/org/eclipse/hono/messaging/MessageForwardingEndpoint.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "services/messaging/src/main/java/org/eclipse/hono/messaging/SenderFactoryImpl.java", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VertxBasedAmqpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.connectionRequestHandler(io.vertx.proton.ProtonConnection)", "TOT": 4, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.handleRemoteReceiverOpen(io.vertx.proton.ProtonReceiver,io.vertx.proton.ProtonConnection)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "AbstractHonoClient.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractHonoClient.onRemoteDetach(io.vertx.proton.ProtonSender,java.lang.String,boolean,io.vertx.core.Handler)", "TOT": 19, "UPD": 5, "INS": 0, "MOV": 13, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractHonoClient.onRemoteDetach(io.vertx.proton.ProtonReceiver,java.lang.String,boolean,io.vertx.core.Handler)", "TOT": 26, "UPD": 8, "INS": 0, "MOV": 9, "DEL": 9}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractHonoClient.closeLinks(io.vertx.core.Handler,boolean)", "TOT": 40, "UPD": 6, "INS": 0, "MOV": 24, "DEL": 10}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractHonoClient.createSender(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.core.Handler)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractHonoClient.createReceiver(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.proton.ProtonMessageHandler,io.vertx.core.Handler)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractHonoClient.closeLinks(io.vertx.core.Handler)", "TOT": 10, "UPD": 0, "INS": 9, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractHonoClient.onRemoteDetach(io.vertx.proton.ProtonLink,java.lang.String,boolean,io.vertx.core.Handler)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoProtonHelper.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.HonoProtonHelper", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LinkHelper.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.LinkHelper", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AmqpServiceBase.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.amqp.AmqpServiceBase.setRemoteConnectionOpenHandler(io.vertx.proton.ProtonConnection)", "TOT": 6, "UPD": 4, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RequestResponseEndpoint.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.amqp.RequestResponseEndpoint.onLinkAttach(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSender,org.eclipse.hono.util.ResourceIdentifier)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.amqp.RequestResponseEndpoint.onLinkAttach(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonReceiver,org.eclipse.hono.util.ResourceIdentifier)", "TOT": 11, "UPD": 0, "INS": 5, "MOV": 5, "DEL": 1}]}, {"spoonFilePath": "SimpleAuthenticationServer.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.auth.impl.SimpleAuthenticationServer.handleReceiverOpen(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonReceiver)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MessageForwardingEndpoint.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.messaging.MessageForwardingEndpoint.onLinkAttach(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonReceiver,org.eclipse.hono.util.ResourceIdentifier)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SenderFactoryImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.messaging.SenderFactoryImpl.newSender(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSession,org.eclipse.hono.util.ResourceIdentifier,io.vertx.proton.ProtonQoS,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "658fc04724652098939b0422f0ce25838bf5e168", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["71f6427d6ae9ba565dbe492ff1a78b2ced35cc8d"], "nameRev": "658fc04724652098939b0422f0ce25838bf5e168 tags/0.7-M2~84", "commitMessage": "[#677] Automatically free up resources when closing a session.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-07-03 18:06:59", "authoredDateTime": "2018-07-03 16:42:12", "commitGitStats": [{"filePath": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/VertxBasedAmqpProtocolAdapter.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "core/src/main/java/org/eclipse/hono/util/HonoProtonHelper.java", "insertions": 61, "deletions": 0, "lines": 61}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/amqp/AmqpServiceBase.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "services/messaging/src/main/java/org/eclipse/hono/messaging/HonoMessaging.java", "insertions": 2, "deletions": 4, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VertxBasedAmqpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.handleSessionOpen(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSession)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "HonoProtonHelper.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.HonoProtonHelper", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.HonoProtonHelper.setDefaultCloseHandler(io.vertx.proton.ProtonSession)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.HonoProtonHelper.freeSessionResources(io.vertx.proton.ProtonSession)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AmqpServiceBase.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.amqp.AmqpServiceBase.setRemoteConnectionOpenHandler(io.vertx.proton.ProtonConnection)", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.amqp.AmqpServiceBase.handleSessionOpen(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSession)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HonoMessaging.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.messaging.HonoMessaging.handleSessionOpen(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSession)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "66592e5da48f022257023568bf0c82736820268d", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["cfc2c911c1d84018747ca1adca2d72c8669898be"], "nameRev": "66592e5da48f022257023568bf0c82736820268d tags/0.7-M2~82", "commitMessage": "[#677] Adopt strategy for releasing resources held for sessions.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-07-04 09:05:45", "authoredDateTime": "2018-07-04 09:05:45", "commitGitStats": [{"filePath": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/VertxBasedAmqpProtocolAdapter.java", "insertions": 9, "deletions": 2, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VertxBasedAmqpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.handleSessionOpen(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSession)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["71f6427d6ae9ba565dbe492ff1a78b2ced35cc8d", "658fc04724652098939b0422f0ce25838bf5e168", "66592e5da48f022257023568bf0c82736820268d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 368, "deletions": 217, "lines": 585, "gitFilesChange": 10}, "spoonStatsSummary": {"TOT": 153, "UPD": 35, "INS": 34, "MOV": 57, "DEL": 27, "spoonFilesChanged": 10, "spoonMethodsChanged": 22}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp", "core/src/main/java/org/eclipse/hono/util", "service-base/src/main/java/org/eclipse/hono/service/amqp", "services/messaging/src/main/java/org/eclipse/hono/messaging", "services/auth/src/main/java/org/eclipse/hono/service/auth", "client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.handleSessionOpen(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSession)", "org.eclipse.hono.service.amqp.AmqpServiceBase.setRemoteConnectionOpenHandler(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.util.HonoProtonHelper", "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.connectionRequestHandler(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.client.impl.AbstractHonoClient.createReceiver(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.proton.ProtonMessageHandler,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.AbstractHonoClient.onRemoteDetach(io.vertx.proton.ProtonReceiver,java.lang.String,boolean,io.vertx.core.Handler)", "org.eclipse.hono.service.amqp.RequestResponseEndpoint.onLinkAttach(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSender,org.eclipse.hono.util.ResourceIdentifier)", "org.eclipse.hono.service.auth.impl.SimpleAuthenticationServer.handleReceiverOpen(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonReceiver)", "org.eclipse.hono.util.HonoProtonHelper.freeSessionResources(io.vertx.proton.ProtonSession)", "org.eclipse.hono.service.amqp.AmqpServiceBase.handleSessionOpen(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSession)", "org.eclipse.hono.service.amqp.RequestResponseEndpoint.onLinkAttach(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonReceiver,org.eclipse.hono.util.ResourceIdentifier)", "org.eclipse.hono.util.HonoProtonHelper.setDefaultCloseHandler(io.vertx.proton.ProtonSession)", "org.eclipse.hono.messaging.HonoMessaging.handleSessionOpen(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSession)", "org.eclipse.hono.client.impl.AbstractHonoClient.onRemoteDetach(io.vertx.proton.ProtonLink,java.lang.String,boolean,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.AbstractHonoClient.onRemoteDetach(io.vertx.proton.ProtonSender,java.lang.String,boolean,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.AbstractHonoClient.closeLinks(io.vertx.core.Handler,boolean)", "org.eclipse.hono.adapter.amqp.VertxBasedAmqpProtocolAdapter.handleRemoteReceiverOpen(io.vertx.proton.ProtonReceiver,io.vertx.proton.ProtonConnection)", "org.eclipse.hono.client.impl.AbstractHonoClient.closeLinks(io.vertx.core.Handler)", "org.eclipse.hono.client.impl.AbstractHonoClient.createSender(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.core.Handler)", "org.eclipse.hono.messaging.MessageForwardingEndpoint.onLinkAttach(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonReceiver,org.eclipse.hono.util.ResourceIdentifier)", "org.eclipse.hono.messaging.SenderFactoryImpl.newSender(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSession,org.eclipse.hono.util.ResourceIdentifier,io.vertx.proton.ProtonQoS,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.util.LinkHelper"]}, {"title": "Set initial credits for Command Client in HTTP Adapter", "body": "Currently an explicit `flow()` call is issued, which throws an exception if initial credits were not set to `0` in the setup.\r\n\r\nThis prevents calls to the http adapter with `hono-ttd` request param set and effectively leads to an unresponsed HTTP request.\r\n\r\nInstead, the initial credits must be set to `1` and the direct call to `flow(1)` needs to be eliminated.", "url": "https://github.com/eclipse/hono/issues/653", "user": "sysexcontrol", "labels": ["bug"], "created": "2018-06-12 08:13:54", "closed": "2018-06-12 08:51:43", "commits": {"9eb55e28418b76e2b6c5997c9d8e1c105821f917": {"commitGHEventType": "referenced", "commitUser": "sysexcontrol"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "9eb55e28418b76e2b6c5997c9d8e1c105821f917", "commitGHEventType": "referenced", "commitUser": "sysexcontrol", "commitParents": ["96143311a3c77a27d06eb70208c0498c5f56bbec"], "nameRev": "9eb55e28418b76e2b6c5997c9d8e1c105821f917 tags/0.7-M1~57", "commitMessage": "[#653] Fix credit handling for commands in HTTP adapter.\n\nTo ensure the granted credits for sending commands to the adapter can be\nset to 1 after the message consumer creation, the initialCredits are set\nto 0 (otherwise no explicit flow control can be invoked in the adapter).\n\nSigned-off-by: Karsten Frank <Karsten.Frank@bosch-si.com>\n", "commitDateTime": "2018-06-12 10:33:30", "authoredDateTime": "2018-06-12 10:32:03", "commitGitStats": [{"filePath": "example/src/main/config/hono-adapter-http-vertx-config.yml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9eb55e28418b76e2b6c5997c9d8e1c105821f917"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 0, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["example/src/main/config/hono-adapter-http-vertx-config.yml"]}, {"title": "Missing mandatory field in example for x509-cert credential type", "body": "https://www.eclipse.org/hono/api/credentials-api/#secrets-format\r\n\r\nSub part: \"X.509 Certificate\"\r\n\r\nThe table states that \"subject-dn\" is mandatory. The example json does not contain this field.", "url": "https://github.com/eclipse/hono/issues/615", "user": "pho-enix", "labels": ["bug", "documentation"], "created": "2018-05-09 15:49:38", "closed": "2018-05-11 08:14:16", "commits": {"420fbfc69c1d2539aed3bae0827feeb3da34e743": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "420fbfc69c1d2539aed3bae0827feeb3da34e743", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["330cab7741f9561351bb9542921852ff98ca589b"], "nameRev": "420fbfc69c1d2539aed3bae0827feeb3da34e743 tags/0.6~71", "commitMessage": "[#615] Remove obsolete property from X.509 credentials type.\n\nFixes #615.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-05-11 10:14:01", "authoredDateTime": "2018-05-11 10:14:01", "commitGitStats": [{"filePath": "site/content/api/Credentials-API.md", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["420fbfc69c1d2539aed3bae0827feeb3da34e743"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "UsernamePasswordCredentials does not handle illegal Base64 strings", "body": "When a client registers a *hashed-password* credential, the device registry does not validate the given password hash to comply with Base64 encoding. Thus, when the client registers an improper password hash, authentication fails when data is published from a device using the corresponding credentials.\r\n\r\nIn this case, `UsernamePasswordCredentials` fails with an uncaught IllegalArgumentException as shown below (in this case the password hash started with a single quote character):\r\n```\r\n07:19:41.952 [vert.x-eventloop-thread-0] ERROR i.v.e.w.impl.RoutingContextImplBase - Unexpected exception in route\r\njava.lang.IllegalArgumentException: Illegal base64 character 27\r\n\tat java.util.Base64$Decoder.decode0(Base64.java:714)\r\n\tat java.util.Base64$Decoder.decode(Base64.java:526)\r\n\tat java.util.Base64$Decoder.decode(Base64.java:549)\r\n\tat org.eclipse.hono.service.auth.device.UsernamePasswordCredentials.matchesCredentials(UsernamePasswordCredentials.java:151)\r\n\tat org.eclipse.hono.service.auth.device.AbstractDeviceCredentials.lambda$validate$1(AbstractDeviceCredentials.java:55)\r\n\tat java.util.stream.MatchOps$1MatchSink.accept(MatchOps.java:90)\r\n\tat java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)\r\n```", "url": "https://github.com/eclipse/hono/issues/608", "user": "sophokles73", "labels": ["Device Registry", "HTTP Adapter", "bug"], "created": "2018-05-04 07:27:35", "closed": "2018-05-09 15:06:26", "commits": {"7da291127d83ca5ad41114bdc2e5336af5737c84": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "7da291127d83ca5ad41114bdc2e5336af5737c84", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["452bbeb81c92c0ca04dbf3e569165e9e215d9ccd"], "nameRev": "7da291127d83ca5ad41114bdc2e5336af5737c84 tags/0.6~74", "commitMessage": "[#608] Handle invalid Base64 encoding in secrets.\n\nFixes #608.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-05-09 17:06:05", "authoredDateTime": "2018-05-09 15:30:14", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/auth/device/UsernamePasswordCredentials.java", "insertions": 31, "deletions": 15, "lines": 46}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/auth/device/UsernamePasswordCredentialsTest.java", "insertions": 39, "deletions": 0, "lines": 39}], "commitSpoonAstDiffStats": [{"spoonFilePath": "UsernamePasswordCredentials.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.auth.device.UsernamePasswordCredentials.matchesCredentials(io.vertx.core.json.JsonObject)", "TOT": 12, "UPD": 0, "INS": 2, "MOV": 9, "DEL": 1}]}, {"spoonFilePath": "UsernamePasswordCredentialsTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.auth.device.UsernamePasswordCredentialsTest.testMatchesCredentialsFailsForMalformedPwdHash()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.auth.device.UsernamePasswordCredentialsTest.testMatchesCredentialsFailsForMalformedSalt()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7da291127d83ca5ad41114bdc2e5336af5737c84"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 31, "deletions": 15, "lines": 46, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 12, "UPD": 0, "INS": 2, "MOV": 9, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service/auth/device"], "changesInPackagesSPOON": ["org.eclipse.hono.service.auth.device.UsernamePasswordCredentials.matchesCredentials(io.vertx.core.json.JsonObject)"]}, {"title": "Response for delete tenant is broken in BaseTenantService", "body": "My tenant client does not receive response for delete tenant requests. \r\n\r\nI am not too deep in this topic but I think I have found the issue: In\r\nhttps://github.com/eclipse/hono/blob/617a2353dd5b9cd1bf42bdaea73468158a1ca681/service-base/src/main/java/org/eclipse/hono/service/tenant/BaseTenantService.java#L198-L217\r\n\r\nresponse gets not created out of the request (in contrast to the other CRUD methods). I guess correlation id is not set in this case and requester can not receive response.\r\n\r\nCan anybody please confirm this issue and cause? I can provide a PR if analysis was correct.", "url": "https://github.com/eclipse/hono/issues/601", "user": "DanielMaier-BSI", "labels": ["Device Registry", "bug"], "created": "2018-04-25 15:17:00", "closed": "2018-04-27 11:53:33", "commits": {"36808947964c1cb4299008151dd28b8ca52a3542": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "36808947964c1cb4299008151dd28b8ca52a3542", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["fadba2893a71de87b1eb20bdcb206eb5959f3333"], "nameRev": "36808947964c1cb4299008151dd28b8ca52a3542 tags/0.6~101", "commitMessage": "Fix for #601 - Response for delete tenant is broken in BaseTenantService\n\nCreate response for delete tenant out of request in order to include correlation-id.\n\nSigned-off-by: Daniel Maier <daniel.maier@bosch-si.com>\n", "commitDateTime": "2018-04-27 13:28:14", "authoredDateTime": "2018-04-26 11:05:14", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/tenant/BaseTenantService.java", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseTenantService.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.tenant.BaseTenantService.processRemoveRequest(org.eclipse.hono.util.EventBusMessage)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["36808947964c1cb4299008151dd28b8ca52a3542"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 2, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service/tenant"], "changesInPackagesSPOON": ["org.eclipse.hono.service.tenant.BaseTenantService.processRemoveRequest(org.eclipse.hono.util.EventBusMessage)"]}, {"title": "HTTP protocoll adapter does not allow to PUT events to path /event/${tenantId}/${deviceId} for authenticated devices any longer ", "body": "In https://github.com/eclipse/hono/blob/d0dcfebd7f796185bfd3c5c8c2caf983240c3e9f/adapters/http-vertx/src/main/java/org/eclipse/hono/adapter/http/vertx/VertxBasedHttpProtocolAdapter.java#L128-L153\r\n\r\nthere is no basic auth handler set for route /event/${tenantId}/${deviceId}, i.e. it is not possible to send events to this path in authentication required mode. I am not sure if this was intended as we have short path with /event for authenticated devices. However for telemetry it is still possible to send to /telemetry/${tenantId}/${deviceId} for authenticated devices.\r\n\r\nThis needs to be handled consistently fmpov. ", "url": "https://github.com/eclipse/hono/issues/598", "user": "DanielMaier-BSI", "labels": ["HTTP Adapter", "bug"], "created": "2018-04-24 15:04:09", "closed": "2018-04-26 12:46:49", "commits": {"fedb96e0d3433f5cf6d4440fef37cc31ede7d858": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "fedb96e0d3433f5cf6d4440fef37cc31ede7d858", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["617a2353dd5b9cd1bf42bdaea73468158a1ca681"], "nameRev": "fedb96e0d3433f5cf6d4440fef37cc31ede7d858 tags/0.6~108", "commitMessage": "Fix for #598 - HTTP protocol adapter does not allow to PUT events to path /event/${tenantId}/${deviceId} for authenticated devices any longer\n\nAdded basic auth handler to route PUT event/*\n\nSigned-off-by: Daniel Maier <daniel.maier@bosch-si.com>\n", "commitDateTime": "2018-04-26 14:19:24", "authoredDateTime": "2018-04-26 10:05:11", "commitGitStats": [{"filePath": "adapters/http-vertx/src/main/java/org/eclipse/hono/adapter/http/vertx/VertxBasedHttpProtocolAdapter.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "adapters/http-vertx/src/test/java/org/eclipse/hono/adapter/http/vertx/VertxBasedHttpProtocolAdapterTest.java", "insertions": 74, "deletions": 15, "lines": 89}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VertxBasedHttpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapter.addEventApiRoutes(io.vertx.ext.web.Router,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "VertxBasedHttpProtocolAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapterTest.testPostTelemetrySucceedsForValidCredentials(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapterTest.testPostTelemetryFailsForNotSupportedQoSLevel(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapterTest.testPostTelemetrySucceedsForSupportedQoSLevel(io.vertx.ext.unit.TestContext)", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapterTest.testPutTelemetrySucceedsForValidCredentials(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapterTest.testPutEventSucceedsForValidCredentials(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapterTest.mockSuccessfulAuthentication(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapterTest.setup(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fedb96e0d3433f5cf6d4440fef37cc31ede7d858"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 0, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/http-vertx/src/main/java/org/eclipse/hono/adapter/http"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.http.vertx.VertxBasedHttpProtocolAdapter.addEventApiRoutes(io.vertx.ext.web.Router,io.vertx.core.Handler)"]}, {"title": "Possible NP dereference of vertx in HonoClientImpl", "body": "While looking into issue #500, I came across a potential NPE in the HonoClientImpl code. During instantiation, when the supplied `vertx` instance happens to be `null`, then `vertx.getOrCreateContext()` will thrown a NPE. This PR fixes that + apply constructor chaining (since both constructors looks pretty similar)\r\n\r\n@sophokles73 @sysexcontrol \r\n", "url": "https://github.com/eclipse/hono/issues/591", "user": "Alfusainey", "labels": ["Client", "bug"], "created": "2018-04-19 19:08:45", "closed": "2018-04-24 07:25:44", "commits": {"36975ccb619fb9fb2df8fd23ca1f0e3433ba1db2": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "36975ccb619fb9fb2df8fd23ca1f0e3433ba1db2", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["9f1e472e0cbb75514531346a4cd6c9bce6da39f4"], "nameRev": "36975ccb619fb9fb2df8fd23ca1f0e3433ba1db2 tags/0.6~136", "commitMessage": "[#591] Trivial fix of a possible NPE in HonoClientImpl\n\nSigned-off-by: Alfusainey Jallow <alf.jallow@gmail.com>\n", "commitDateTime": "2018-04-20 08:13:29", "authoredDateTime": "2018-04-19 21:10:47", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoClientImpl.java", "insertions": 7, "deletions": 10, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoClientImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl", "TOT": 11, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 5}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["36975ccb619fb9fb2df8fd23ca1f0e3433ba1db2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 10, "lines": 17, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 11, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 5, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.HonoClientImpl"]}, {"title": "http-client OSGi bundle doesn't allow instantiation of HonoClient", "body": "AFAIK the only way to use HoneClient is to instantiate it via calling the direct constructor of org.eclipse.hono.client.impl.HonoClientImpl.\r\nThe org.eclipse.hono.client.impl, however, is not expored by the hono-client bundle. Only the org.eclipse.hono.client is exported.\r\nSo, the hono-client shall export org.eclipse.hono.client.impl (exporting impl, IMHO, is not recommended) or the org.eclipse.hono.client package shall provide meant to instantiate HonoClient without directly refer org.eclipse.hono.client.impl", "url": "https://github.com/eclipse/hono/issues/586", "user": "avgustinmm", "labels": ["bug", "enhancement"], "created": "2018-04-18 11:37:46", "closed": "2018-04-24 15:13:10", "commits": {"06988a20f84da6f0ecdeb6674c424850c21c92d9": {"commitGHEventType": "referenced", "commitUser": "ctron"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "06988a20f84da6f0ecdeb6674c424850c21c92d9", "commitGHEventType": "referenced", "commitUser": "ctron", "commitParents": ["1f1cfc3ab94b39b96666392fd035c2e523a54b77"], "nameRev": "06988a20f84da6f0ecdeb6674c424850c21c92d9 tags/0.6~111", "commitMessage": "[#586] Cleanup how instances of HonoClientImpl are created\n\nThis change does clean up the way how new instances of HonoClientImpl\ncan be created. This introduces a new method on the HonoClient instance\nwhich will create a new instance of a default implementation of\nHonoClient based on HonoClientImpl.\n\nThe reason for this changes from from #586 which is based on the problem\nthe internal \"impl\" package was not exported in OSGi and so directly\naccessing the HonoClientImpl constructor was not possible.", "commitDateTime": "2018-04-24 17:10:28", "authoredDateTime": "2018-04-19 09:38:37", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/HonoClient.java", "insertions": 17, "deletions": 1, "lines": 18}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoClientImpl.java", "insertions": 7, "deletions": 5, "lines": 12}, {"filePath": "core/src/main/java/org/eclipse/hono/connection/ConnectionFactory.java", "insertions": 21, "deletions": 1, "lines": 22}, {"filePath": "core/src/main/java/org/eclipse/hono/connection/{ => impl}/ConnectionFactoryImpl.java", "insertions": 2, "deletions": 165, "lines": 167}, {"filePath": "core/src/test/java/org/eclipse/hono/connection/{ => impl}/ConnectionFactoryImplTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "example/src/main/java/org/eclipse/hono/example/AppConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/auth/delegating/DelegatingAuthenticationServiceConfig.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "services/messaging/src/main/java/org/eclipse/hono/messaging/HonoMessagingApplicationConfig.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/auth/AuthServerAmqpIT.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/client/ClientTestBase.java", "insertions": 6, "deletions": 6, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoClient.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.newClient(io.vertx.core.Vertx,org.eclipse.hono.config.ClientConfigProperties)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoClientImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl", "TOT": 7, "UPD": 1, "INS": 2, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "ConnectionFactory.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.connection.newConnectionFactory(io.vertx.core.Vertx,org.eclipse.hono.config.ClientConfigProperties)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionFactoryImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImpl.connect(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImpl.connect(io.vertx.proton.ProtonClientOptions,java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 13, "UPD": 13, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImpl.addOptions(io.vertx.proton.ProtonClientOptions,java.lang.String,java.lang.String)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImpl", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImpl.setProtonClient(io.vertx.proton.ProtonClient)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImpl.getName()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImpl.getHost()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImpl.getPort()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImpl.getPathSeparator()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImpl.addTlsTrustOptions(io.vertx.proton.ProtonClientOptions)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImpl.handleConnectionAttemptResult(io.vertx.core.AsyncResult,io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImpl.addTlsKeyCertOptions(io.vertx.proton.ProtonClientOptions)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImpl.ConnectionFactoryBuilder", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ConnectionFactoryImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImplTest.testConnectInvokesHandlerOnfailureToConnect(io.vertx.ext.unit.TestContext)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImplTest.testConnectInvokesHandlerOnDisconnectAfterSendingOpenFrame(io.vertx.ext.unit.TestContext)", "TOT": 14, "UPD": 14, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImplTest.testConnectDoesNotUseSaslPlainForEmptyUsernameAndPassword(io.vertx.ext.unit.TestContext)", "TOT": 11, "UPD": 11, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImplTest.testConnectAddsSaslPlainForNonEmptyUsernameAndPassword(io.vertx.ext.unit.TestContext)", "TOT": 11, "UPD": 11, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImplTest.testConnectEnablesSslIfExplicitlyConfigured()", "TOT": 10, "UPD": 10, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImplTest.testConnectEnablesSslIfTrustStoreIsConfigured()", "TOT": 10, "UPD": 10, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImplTest.setup()", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AppConfiguration.java", "spoonMethods": []}, {"spoonFilePath": "DelegatingAuthenticationServiceConfig.java", "spoonMethods": []}, {"spoonFilePath": "HonoMessagingApplicationConfig.java", "spoonMethods": []}, {"spoonFilePath": "AuthServerAmqpIT.java", "spoonMethods": []}, {"spoonFilePath": "ClientTestBase.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.client.ClientTestBase.connect(io.vertx.ext.unit.TestContext)", "TOT": 15, "UPD": 3, "INS": 3, "MOV": 6, "DEL": 3}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["06988a20f84da6f0ecdeb6674c424850c21c92d9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 50, "deletions": 175, "lines": 225, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 44, "UPD": 35, "INS": 4, "MOV": 3, "DEL": 2, "spoonFilesChanged": 4, "spoonMethodsChanged": 16}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl", "service-base/src/main/java/org/eclipse/hono/service/auth/delegating", "client/src/main/java/org/eclipse/hono/client", "core/src/main/java/org/eclipse/hono/connection", "services/messaging/src/main/java/org/eclipse/hono/messaging", "core/src/main/java/org/eclipse/hono/connection/{ => impl}", "example/src/main/java/org/eclipse/hono/example"], "changesInPackagesSPOON": ["org.eclipse.hono.connection.ConnectionFactoryImpl.ConnectionFactoryBuilder", "org.eclipse.hono.connection.ConnectionFactoryImpl.connect(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.connection.ConnectionFactoryImpl.getName()", "org.eclipse.hono.connection.ConnectionFactoryImpl.getHost()", "org.eclipse.hono.connection.ConnectionFactoryImpl.connect(io.vertx.proton.ProtonClientOptions,java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.connection.ConnectionFactoryImpl.addOptions(io.vertx.proton.ProtonClientOptions,java.lang.String,java.lang.String)", "org.eclipse.hono.connection.ConnectionFactoryImpl.addTlsKeyCertOptions(io.vertx.proton.ProtonClientOptions)", "org.eclipse.hono.client.newClient(io.vertx.core.Vertx,org.eclipse.hono.config.ClientConfigProperties)", "org.eclipse.hono.connection.ConnectionFactoryImpl.addTlsTrustOptions(io.vertx.proton.ProtonClientOptions)", "org.eclipse.hono.connection.ConnectionFactoryImpl.setProtonClient(io.vertx.proton.ProtonClient)", "org.eclipse.hono.connection.ConnectionFactoryImpl.getPort()", "org.eclipse.hono.connection.ConnectionFactoryImpl.getPathSeparator()", "org.eclipse.hono.client.impl.HonoClientImpl", "org.eclipse.hono.connection.ConnectionFactoryImpl", "org.eclipse.hono.connection.newConnectionFactory(io.vertx.core.Vertx,org.eclipse.hono.config.ClientConfigProperties)", "org.eclipse.hono.connection.ConnectionFactoryImpl.handleConnectionAttemptResult(io.vertx.core.AsyncResult,io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)"]}, {"title": "MQTT adapter does not wait for accepted outcome when sending QoS 1 telemetry messages", "body": "The MQTT adapter is supposed to support clients publishing telemetry using (MQTT) QoS 1 as described in #508. The adapter indeed accepts telemetry messages published using QoS 1 but does **not** wait for the downstream AMQP message being accepted before issuing the MQTT PUBACK packet to the client.", "url": "https://github.com/eclipse/hono/issues/583", "user": "sophokles73", "labels": ["MQTT Adapter", "bug"], "created": "2018-04-16 15:54:50", "closed": "2018-04-17 13:54:18", "commits": {"56f3415030dff63f486c068ebe142112ceaee4ce": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "56f3415030dff63f486c068ebe142112ceaee4ce", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["3acba4c3f5cab97f8cbe3b04fb0085aae642e181"], "nameRev": "56f3415030dff63f486c068ebe142112ceaee4ce tags/0.6~140", "commitMessage": "[#583] Wait for outcome when forwarding QoS 1 MQTT telemetry messages.\n\nThe MQTT protocol adapter now waits for the outcome of the (downstream)\ntransfer of telemetry messages that have been published by devices using\nMQTT QoS 1.\n\nFixes #583.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-04-17 15:53:56", "authoredDateTime": "2018-04-17 15:17:17", "commitGitStats": [{"filePath": "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapter.java", "insertions": 9, "deletions": 1, "lines": 10}, {"filePath": "adapters/mqtt-vertx-base/src/test/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapterTest.java", "insertions": 27, "deletions": 13, "lines": 40}, {"filePath": "client/src/main/java/org/eclipse/hono/client/MessageSender.java", "insertions": 23, "deletions": 5, "lines": 28}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractSender.java", "insertions": 60, "deletions": 0, "lines": 60}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/EventSenderImpl.java", "insertions": 39, "deletions": 40, "lines": 79}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/TelemetrySenderImpl.java", "insertions": 43, "deletions": 5, "lines": 48}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/AbstractSenderTest.java", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractVertxBasedMqttProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.uploadMessage(org.eclipse.hono.adapter.mqtt.MqttContext,java.lang.String,java.lang.String,io.vertx.core.buffer.Buffer,io.vertx.core.Future,java.lang.String)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "AbstractVertxBasedMqttProtocolAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapterTest.givenATelemetrySenderForOutcome(io.vertx.core.Future)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapterTest.testUploadTelemetryMessageFailsForUnknownDevice(io.vertx.ext.unit.TestContext)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapterTest.testUploadTelemetryMessageSendsPubAckOnSuccess(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapterTest.testUploadMessageSupportsShortAndLongEndpointNames(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapterTest.givenAQoS0TelemetrySender()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapterTest.givenAnEventSenderForOutcome(io.vertx.core.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MessageSender.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.sendAndWaitForOutcome(org.apache.qpid.proton.message.Message)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractSender.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSender", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSender.sendMessageAndWaitForOutcome(org.apache.qpid.proton.message.Message)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EventSenderImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.EventSenderImpl.sendMessage(org.apache.qpid.proton.message.Message)", "TOT": 13, "UPD": 3, "INS": 1, "MOV": 8, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.EventSenderImpl", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.EventSenderImpl.sendAndWaitForOutcome(org.apache.qpid.proton.message.Message)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TelemetrySenderImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.TelemetrySenderImpl.sendMessage(org.apache.qpid.proton.message.Message)", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.TelemetrySenderImpl", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.TelemetrySenderImpl.sendAndWaitForOutcome(org.apache.qpid.proton.message.Message)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractSenderTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSenderTest.newSender(java.lang.String,java.lang.String).1.sendAndWaitForOutcome(org.apache.qpid.proton.message.Message)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["56f3415030dff63f486c068ebe142112ceaee4ce"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 174, "deletions": 51, "lines": 225, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 30, "UPD": 5, "INS": 10, "MOV": 10, "DEL": 5, "spoonFilesChanged": 5, "spoonMethodsChanged": 10}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt", "client/src/main/java/org/eclipse/hono/client/impl", "client/src/main/java/org/eclipse/hono/client"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.EventSenderImpl", "org.eclipse.hono.client.impl.EventSenderImpl.sendMessage(org.apache.qpid.proton.message.Message)", "org.eclipse.hono.client.impl.TelemetrySenderImpl.sendMessage(org.apache.qpid.proton.message.Message)", "org.eclipse.hono.client.impl.AbstractSender.sendMessageAndWaitForOutcome(org.apache.qpid.proton.message.Message)", "org.eclipse.hono.client.impl.TelemetrySenderImpl", "org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.uploadMessage(org.eclipse.hono.adapter.mqtt.MqttContext,java.lang.String,java.lang.String,io.vertx.core.buffer.Buffer,io.vertx.core.Future,java.lang.String)", "org.eclipse.hono.client.impl.EventSenderImpl.sendAndWaitForOutcome(org.apache.qpid.proton.message.Message)", "org.eclipse.hono.client.impl.AbstractSender", "org.eclipse.hono.client.sendAndWaitForOutcome(org.apache.qpid.proton.message.Message)", "org.eclipse.hono.client.impl.TelemetrySenderImpl.sendAndWaitForOutcome(org.apache.qpid.proton.message.Message)"]}, {"title": "OpenShift deployment fails initializing container", "body": "Coming from #566 it looks to me like the openshift deployments (both EnMasse and \"plain\") currently have an issue starting up properly due to an initialization error of the device registry init container:\r\n\r\n~~~\r\n\u279c  openshift git:(master) \u2717 oc logs hono-service-device-registry-1-7bttt -c copy-example-data\r\ncp: can't create '/var/lib/hono/device-registry/credentials.json': Permission denied\r\ncp: can't create '/var/lib/hono/device-registry/tenants.json': Permission denied\r\n~~~\r\n\r\nCurrently I am not sure what is wrong as the volume should have the proper permissions.", "url": "https://github.com/eclipse/hono/issues/572", "user": "ctron", "labels": ["bug"], "created": "2018-04-12 08:44:02", "closed": "2018-04-13 07:13:48", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "org.eclipse.hono.client.ClientErrorException: failed to authenticate with server", "body": "Hi guys,\r\n\r\nim doing the the getting started tutorial (https://www.eclipse.org/hono/getting-started/).\r\nBuilding the code, starting the consumer and registering the demo device works fine, but i cant upload the telemetry data for the 4711 device using the http adapter.\r\n\r\nIm using commit 0748b16d69b68493f76dd32973bcc5e845c083a8 on linux 16.04\r\n\r\nWhat i enter is: http --auth sensor1@DEFAULT_TENANT:hono-secret POST http://localhost:8080/telemetry temp:=5 and get the following error:\r\n\r\nHTTP/1.1 404 Not Found\r\nContent-Length: 9\r\n\r\nNot Found\r\n\r\nThe output of the http adapter is: \r\n```\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | \r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    |   ______     _ _                  _    _                   \r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    |   ______     _ _                  _    _                   \r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    |  |  ____|   | (_)                | |  | |                  \r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    |  |  ____|   | (_)                | |  | |                  \r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    |  | |__   ___| |_ _ __  ___  ___  | |__| | ___  _ __   ___  \r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    |  | |__   ___| |_ _ __  ___  ___  | |__| | ___  _ __   ___  \r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    |  |  __| / __| | | '_ \\/ __|/ _ \\ |  __  |/ _ \\| '_ \\ / _ \\ \r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    |  |  __| / __| | | '_ \\/ __|/ _ \\ |  __  |/ _ \\| '_ \\ / _ \\ \r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    |  | |___| (__| | | |_) \\__ \\  __/ | |  | | (_) | | | | (_) |\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    |  | |___| (__| | | |_) \\__ \\  __/ | |  | | (_) | | | | (_) |\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    |  |______\\___|_|_| .__/|___/\\___| |_|  |_|\\___/|_| |_|\\___/ \r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    |  |______\\___|_|_| .__/|___/\\___| |_|  |_|\\___/|_| |_|\\___/ \r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    |                 | |                                        \r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    |                 | |                                        \r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    |                 |_|                                        \r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    |                 |_|                                        \r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | \r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | Eclipse Hono HTTP Protocol Adapter  (v0.6-M2-SNAPSHOT)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | Eclipse Hono HTTP Protocol Adapter  (v0.6-M2-SNAPSHOT)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | using Spring Boot  (v1.5.8.RELEASE)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | using Spring Boot  (v1.5.8.RELEASE)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | \r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | Go to https://www.eclipse.org/hono for more information.\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | Go to https://www.eclipse.org/hono for more information.\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | \r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | \r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:15.271 [main] INFO  o.e.h.adapter.http.vertx.Application - Starting Application v0.6-M2-SNAPSHOT on 1374071a9e79 with PID 1 (/opt/hono/hono-adapter-http-vertx-0.6-M2-SNAPSHOT-exec.jar started by root in /)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:46.612 [main] INFO  o.e.h.adapter.http.vertx.Application - Starting Application v0.6-M2-SNAPSHOT on 7ea58bef638a with PID 1 (/opt/hono/hono-adapter-http-vertx-0.6-M2-SNAPSHOT-exec.jar started by root in /)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:46.713 [main] DEBUG o.e.h.adapter.http.vertx.Application - Running with Spring Boot v1.5.8.RELEASE, Spring v4.3.12.RELEASE\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:15.276 [main] DEBUG o.e.h.adapter.http.vertx.Application - Running with Spring Boot v1.5.8.RELEASE, Spring v4.3.12.RELEASE\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:15.277 [main] INFO  o.e.h.adapter.http.vertx.Application - The following profiles are active: dev\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:46.719 [main] INFO  o.e.h.adapter.http.vertx.Application - The following profiles are active: dev\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:46.987 [main] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7cef4e59: startup date [Fri Mar 23 16:30:46 UTC 2018]; root of context hierarchy\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:15.403 [main] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7cef4e59: startup date [Fri Mar 23 16:30:15 UTC 2018]; root of context hierarchy\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:18.067 [main] DEBUG o.e.h.a.h.v.Application$$EnhancerBySpringCGLIB$$1e55acb2 - added 1 service factories\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:50.986 [main] DEBUG o.e.h.a.h.v.Application$$EnhancerBySpringCGLIB$$1e55acb2 - added 1 service factories\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:51.538 [main] INFO  o.e.hono.service.metric.MetricConfig - metrics - graphite reporter activated: influxdb.hono:2003  prefix: 7ea58bef638a  period: 5000\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:18.441 [main] INFO  o.e.hono.service.metric.MetricConfig - metrics - graphite reporter activated: influxdb.hono:2003  prefix: 1374071a9e79  period: 5000\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:20.312 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:53.822 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:53.830 [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter - Registering beans for JMX exposure on startup\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:20.319 [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter - Registering beans for JMX exposure on startup\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:20.324 [main] INFO  o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 0\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:53.845 [main] INFO  o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 0\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:53.865 [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:20.338 [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:20.589 [main] DEBUG o.e.h.a.h.v.Application$$EnhancerBySpringCGLIB$$1e55acb2 - Waiting for 20 seconds to start up\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:54.141 [main] DEBUG o.e.h.a.h.v.Application$$EnhancerBySpringCGLIB$$1e55acb2 - Waiting for 20 seconds to start up\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:54.162 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.RequestResponseClientConfigProperties - using certificates from file [/run/secrets/trusted-certs.pem] as trust anchor\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:20.619 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.RequestResponseClientConfigProperties - using certificates from file [/run/secrets/trusted-certs.pem] as trust anchor\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:20.621 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.RequestResponseClientConfigProperties - using certificates from file [/run/secrets/trusted-certs.pem] as trust anchor\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:54.181 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.RequestResponseClientConfigProperties - using certificates from file [/run/secrets/trusted-certs.pem] as trust anchor\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:54.189 [vert.x-eventloop-thread-2] DEBUG o.e.h.c.ConnectionFactoryImpl - connecting to AMQP 1.0 container [amqps://hono-service-messaging.hono:5671]\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:20.627 [vert.x-eventloop-thread-2] DEBUG o.e.h.c.ConnectionFactoryImpl - connecting to AMQP 1.0 container [amqps://hono-service-messaging.hono:5671]\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:20.629 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.ConnectionFactoryImpl - connecting to AMQP 1.0 container [amqps://hono-service-device-registry.hono:5671]\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:54.193 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.ConnectionFactoryImpl - connecting to AMQP 1.0 container [amqps://hono-service-device-registry.hono:5671]\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:54.205 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.ConnectionFactoryImpl - connecting to AMQP 1.0 container [amqps://hono-service-device-registry.hono:5671]\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:20.631 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.ConnectionFactoryImpl - connecting to AMQP 1.0 container [amqps://hono-service-device-registry.hono:5671]\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:21.470 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.RequestResponseClientConfigProperties - using certificates from file [/run/secrets/trusted-certs.pem] as trust anchor\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:55.604 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.RequestResponseClientConfigProperties - using certificates from file [/run/secrets/trusted-certs.pem] as trust anchor\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:55.604 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.ConnectionFactoryImpl - connecting to AMQP 1.0 container [amqps://hono-service-device-registry.hono:5671]\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:21.477 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.ConnectionFactoryImpl - connecting to AMQP 1.0 container [amqps://hono-service-device-registry.hono:5671]\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:27.064 [vert.x-eventloop-thread-2] DEBUG o.e.h.c.ConnectionFactoryImpl - can't connect to AMQP 1.0 container [amqps://hono-service-messaging.hono:5671]: Failed to authenticate\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:58.298 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.ConnectionFactoryImpl - connected to AMQP 1.0 container [amqps://hono-service-device-registry.hono:5671], opening connection ...\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:58.347 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.ConnectionFactoryImpl - connection to container [Hono-DeviceRegistry-0.0.0.0:5671] at [amqps://hono-service-device-registry.hono:5671] open\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:27.111 [vert.x-eventloop-thread-2] WARN  o.e.h.a.h.v.VertxBasedHttpProtocolAdapter - failed to connect to Messaging\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | org.eclipse.hono.client.ClientErrorException: failed to authenticate with server\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:58.348 [vert.x-eventloop-thread-0] INFO  o.e.h.a.h.v.VertxBasedHttpProtocolAdapter - connected to Device Registration service\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:58.383 [vert.x-eventloop-thread-2] DEBUG o.e.h.c.ConnectionFactoryImpl - connected to AMQP 1.0 container [amqps://hono-service-messaging.hono:5671], opening connection ...\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.eclipse.hono.client.impl.HonoClientImpl.lambda$null$3(HonoClientImpl.java:261)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.eclipse.hono.connection.ConnectionFactoryImpl.handleConnectionAttemptResult(ConnectionFactoryImpl.java:149)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:58.402 [vert.x-eventloop-thread-2] DEBUG o.e.h.c.ConnectionFactoryImpl - connection to container [Hono-Messaging-0.0.0.0:5671] at [amqps://hono-service-messaging.hono:5671] open\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:58.412 [vert.x-eventloop-thread-2] INFO  o.e.h.a.h.v.VertxBasedHttpProtocolAdapter - connected to Messaging\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.eclipse.hono.connection.ConnectionFactoryImpl.lambda$connect$0(ConnectionFactoryImpl.java:135)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonClientImpl$ConnectCompletionHandler.handle(ProtonClientImpl.java:122)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:58.687 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.ConnectionFactoryImpl - connected to AMQP 1.0 container [amqps://hono-service-device-registry.hono:5671], opening connection ...\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:58.706 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.ConnectionFactoryImpl - connection to container [Hono-DeviceRegistry-0.0.0.0:5671] at [amqps://hono-service-device-registry.hono:5671] open\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonClientImpl$ConnectCompletionHandler.handle(ProtonClientImpl.java:102)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonSaslClientAuthenticatorImpl.process(ProtonSaslClientAuthenticatorImpl.java:96)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:58.707 [vert.x-eventloop-thread-1] INFO  o.e.h.a.h.v.VertxBasedHttpProtocolAdapter - connected to Tenant service\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:58.775 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.ConnectionFactoryImpl - connected to AMQP 1.0 container [amqps://hono-service-device-registry.hono:5671], opening connection ...\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonTransport.processSaslAuthentication(ProtonTransport.java:206)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonTransport.handleSocketBuffer(ProtonTransport.java:189)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:58.826 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.ConnectionFactoryImpl - connection to container [Hono-DeviceRegistry-0.0.0.0:5671] at [amqps://hono-service-device-registry.hono:5671] open\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:58.827 [vert.x-eventloop-thread-1] INFO  o.e.h.s.a.d.UsernamePasswordAuthProvider - connected to Credentials service\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler.handle(NetSocketImpl.java:389)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.NetSocketImpl.handleMessageReceived(NetSocketImpl.java:356)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:58.827 [vert.x-eventloop-thread-1] DEBUG o.e.h.a.h.HttpProtocolAdapterProperties - using key [/run/secrets/http-adapter-key.pem] and certificate [/run/secrets/http-adapter-cert.pem] for identity\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:58.844 [vert.x-eventloop-thread-1] INFO  o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - limiting size of inbound request body to 2048 bytes\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.NetClientImpl$1.handleMessage(NetClientImpl.java:247)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.NetClientImpl$1.handleMessage(NetClientImpl.java:244)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:58.900 [vert.x-eventloop-thread-1] DEBUG o.e.h.a.h.HttpProtocolAdapterProperties - using key [/run/secrets/http-adapter-key.pem] and certificate [/run/secrets/http-adapter-cert.pem] for identity\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:58.924 [vert.x-eventloop-thread-1] DEBUG o.e.h.a.h.HttpProtocolAdapterProperties - using key [/run/secrets/http-adapter-key.pem] and certificate [/run/secrets/http-adapter-cert.pem] for identity\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.VertxHandler.lambda$channelRead$1(VertxHandler.java:150)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.impl.ContextImpl.lambda$wrapTask$2(ContextImpl.java:342)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:59.249 [vert.x-eventloop-thread-1] INFO  o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - secure http server listening on 0.0.0.0:8443\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:59.250 [vert.x-eventloop-thread-1] INFO  o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - insecure http server listening on 0.0.0.0:8080\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.impl.ContextImpl.executeFromIO(ContextImpl.java:200)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:148)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:59.266 [vert.x-eventloop-thread-2] INFO  o.e.hono.service.HealthCheckServer - readiness probe available at http://0.0.0.0:8088/readiness\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:59.266 [vert.x-eventloop-thread-2] INFO  o.e.hono.service.HealthCheckServer - liveness probe available at http://0.0.0.0:8088/liveness\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:30:59.270 [main] INFO  o.e.h.adapter.http.vertx.Application - Started Application in 16.126 seconds (JVM running for 20.36)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:45.893 [vert.x-eventloop-thread-1] DEBUG o.e.hono.client.impl.HonoClientImpl - creating new client for credentials/DEFAULT_TENANT\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:45.895 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.impl.CredentialsClientImpl - creating new credentials client for [DEFAULT_TENANT]\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:45.974 [vert.x-eventloop-thread-1] DEBUG o.e.h.client.impl.AbstractHonoClient - receiver open [source: credentials/DEFAULT_TENANT/f9121416-5ebe-457d-b992-686eb4fa7be2]\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:45.988 [vert.x-eventloop-thread-1] DEBUG o.e.h.client.impl.AbstractHonoClient - sender open [target: credentials/DEFAULT_TENANT, sendQueueFull: false]\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:45.989 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.i.AbstractRequestResponseClient - request-response client for peer [Hono-DeviceRegistry-0.0.0.0:5671] created\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1336)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:45.989 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.impl.CredentialsClientImpl - successfully created credentials client for [DEFAULT_TENANT]\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:45.989 [vert.x-eventloop-thread-1] DEBUG o.e.hono.client.impl.HonoClientImpl - successfully created new client for credentials/DEFAULT_TENANT\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1127)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1162)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.072 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.i.AbstractRequestResponseClient - sent request [target address: credentials/DEFAULT_TENANT, subject: get, correlation ID: cred-client-5362cbb1-6d19-47f0-b38f-c44f754d61de] to service\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.269 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [reply-to: credentials/DEFAULT_TENANT/f9121416-5ebe-457d-b992-686eb4fa7be2, subject: null, correlation ID: cred-client-5362cbb1-6d19-47f0-b38f-c44f754d61de, status: 200]\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.304 [vert.x-eventloop-thread-2] DEBUG o.e.hono.client.impl.HonoClientImpl - creating new message sender for telemetry/DEFAULT_TENANT\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.333 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - creating new client for registration/DEFAULT_TENANT\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.335 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.impl.RegistrationClientImpl - creating new registration client for [DEFAULT_TENANT]\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.379 [vert.x-eventloop-thread-1] DEBUG o.e.hono.client.impl.HonoClientImpl - creating new client for tenant\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.405 [vert.x-eventloop-thread-1] DEBUG o.e.h.client.impl.TenantClientImpl - creating new tenant API client.\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.426 [vert.x-eventloop-thread-2] DEBUG o.e.h.client.impl.AbstractHonoClient - sender open [target: telemetry/DEFAULT_TENANT, sendQueueFull: true]\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1359)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.447 [vert.x-eventloop-thread-2] DEBUG o.e.h.client.impl.AbstractHonoClient - sender [target: telemetry/DEFAULT_TENANT] has 250 credits after grace period of 20ms\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.449 [vert.x-eventloop-thread-2] DEBUG o.e.hono.client.impl.HonoClientImpl - successfully created new message sender for telemetry/DEFAULT_TENANT\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.454 [vert.x-eventloop-thread-1] INFO  o.e.h.c.i.AbstractRequestResponseClient - enabling caching of responses from tenant/null\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.454 [vert.x-eventloop-thread-0] INFO  o.e.h.c.i.AbstractRequestResponseClient - enabling caching of responses from registration/DEFAULT_TENANT\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.467 [vert.x-eventloop-thread-1] DEBUG o.e.h.client.impl.AbstractHonoClient - receiver open [source: tenant/null/2a3fd080-4e4a-46e3-acc6-8bc2807a6f06]\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.477 [vert.x-eventloop-thread-1] DEBUG o.e.h.client.impl.AbstractHonoClient - sender open [target: tenant/null, sendQueueFull: false]\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.478 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.i.AbstractRequestResponseClient - request-response client for peer [Hono-DeviceRegistry-0.0.0.0:5671] created\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.480 [vert.x-eventloop-thread-0] DEBUG o.e.h.client.impl.AbstractHonoClient - receiver open [source: registration/DEFAULT_TENANT/d084785d-a7da-4073-840a-8ef8d5d44972]\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.482 [vert.x-eventloop-thread-1] DEBUG o.e.h.client.impl.TenantClientImpl - successfully created tenant API client\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.482 [vert.x-eventloop-thread-1] DEBUG o.e.hono.client.impl.HonoClientImpl - successfully created new client for tenant\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat java.lang.Thread.run(Thread.java:748)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:27.183 [vert.x-eventloop-thread-2] ERROR i.vertx.core.net.impl.ConnectionBase - java.nio.channels.ClosedChannelException\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.494 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.i.AbstractRequestResponseClient - sent request [target address: tenant/null, subject: get, correlation ID: tenant-client-17a9d3f8-edee-4b2c-8056-88d07ddac9e5] to service\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.495 [vert.x-eventloop-thread-0] DEBUG o.e.h.client.impl.AbstractHonoClient - sender open [target: registration/DEFAULT_TENANT, sendQueueFull: false]\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:27.688 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.ConnectionFactoryImpl - can't connect to AMQP 1.0 container [amqps://hono-service-device-registry.hono:5671]: Failed to authenticate\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:27.690 [vert.x-eventloop-thread-1] WARN  o.e.h.a.h.v.VertxBasedHttpProtocolAdapter - failed to connect to Tenant service\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.495 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - request-response client for peer [Hono-DeviceRegistry-0.0.0.0:5671] created\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.495 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.impl.RegistrationClientImpl - successfully created registration client for [DEFAULT_TENANT]\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | org.eclipse.hono.client.ClientErrorException: failed to authenticate with server\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.eclipse.hono.client.impl.HonoClientImpl.lambda$null$3(HonoClientImpl.java:261)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.496 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - successfully created new client for registration/DEFAULT_TENANT\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.503 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - sent request [target address: registration/DEFAULT_TENANT, subject: assert, correlation ID: reg-client-00da65cb-8ec7-4343-8c4e-82daa188a52a, device ID: 4711] to service\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.eclipse.hono.connection.ConnectionFactoryImpl.handleConnectionAttemptResult(ConnectionFactoryImpl.java:149)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.eclipse.hono.connection.ConnectionFactoryImpl.lambda$connect$0(ConnectionFactoryImpl.java:135)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.509 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [reply-to: tenant/null/2a3fd080-4e4a-46e3-acc6-8bc2807a6f06, subject: null, correlation ID: tenant-client-17a9d3f8-edee-4b2c-8056-88d07ddac9e5, status: 404]\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.512 [vert.x-eventloop-thread-1] DEBUG o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - cannot process message for device [tenantId: DEFAULT_TENANT, deviceId: 4711, endpoint: telemetry]: 404 - Error Code: 404\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonClientImpl$ConnectCompletionHandler.handle(ProtonClientImpl.java:122)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonClientImpl$ConnectCompletionHandler.handle(ProtonClientImpl.java:102)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:34:46.588 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [reply-to: registration/DEFAULT_TENANT/d084785d-a7da-4073-840a-8ef8d5d44972, subject: null, correlation ID: reg-client-00da65cb-8ec7-4343-8c4e-82daa188a52a, status: 200]\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:35:13.806 [vert.x-eventloop-thread-1] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing client [target: credentials/DEFAULT_TENANT]\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonSaslClientAuthenticatorImpl.process(ProtonSaslClientAuthenticatorImpl.java:96)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonTransport.processSaslAuthentication(ProtonTransport.java:206)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:35:13.811 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.i.AbstractRequestResponseClient - sent request [target address: credentials/DEFAULT_TENANT, subject: get, correlation ID: cred-client-be40c04c-5e0e-49e4-99c0-c1de3afce564] to service\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:35:13.825 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [reply-to: credentials/DEFAULT_TENANT/f9121416-5ebe-457d-b992-686eb4fa7be2, subject: null, correlation ID: cred-client-be40c04c-5e0e-49e4-99c0-c1de3afce564, status: 200]\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonTransport.handleSocketBuffer(ProtonTransport.java:189)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler.handle(NetSocketImpl.java:389)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:35:13.827 [vert.x-eventloop-thread-2] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing message sender [target: telemetry/DEFAULT_TENANT, credit: 250]\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:35:13.827 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing client [target: registration/DEFAULT_TENANT]\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.NetSocketImpl.handleMessageReceived(NetSocketImpl.java:356)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.NetClientImpl$1.handleMessage(NetClientImpl.java:247)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:35:13.835 [vert.x-eventloop-thread-1] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing client [target: tenant]\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:35:13.836 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.i.AbstractRequestResponseClient - sent request [target address: tenant/null, subject: get, correlation ID: tenant-client-f3fe72f1-5b1a-4a03-82fe-146e66b02103] to service\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.NetClientImpl$1.handleMessage(NetClientImpl.java:244)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.VertxHandler.lambda$channelRead$1(VertxHandler.java:150)\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:35:13.866 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [reply-to: tenant/null/2a3fd080-4e4a-46e3-acc6-8bc2807a6f06, subject: null, correlation ID: tenant-client-f3fe72f1-5b1a-4a03-82fe-146e66b02103, status: 404]\r\nhono-adapter-http-vertx.1.xgxfei5ah2f1@v22016103605938256    | 16:35:13.868 [vert.x-eventloop-thread-1] DEBUG o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - cannot process message for device [tenantId: DEFAULT_TENANT, deviceId: 4711, endpoint: telemetry]: 404 - Error Code: 404\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.impl.ContextImpl.lambda$wrapTask$2(ContextImpl.java:342)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.impl.ContextImpl.executeFromIO(ContextImpl.java:200)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:148)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1336)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1127)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1162)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1359)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat java.lang.Thread.run(Thread.java:748)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:27.692 [vert.x-eventloop-thread-1] ERROR i.vertx.core.net.impl.ConnectionBase - java.nio.channels.ClosedChannelException\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:27.746 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.ConnectionFactoryImpl - can't connect to AMQP 1.0 container [amqps://hono-service-device-registry.hono:5671]: Failed to authenticate\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:27.749 [vert.x-eventloop-thread-0] WARN  o.e.h.a.h.v.VertxBasedHttpProtocolAdapter - failed to connect to Device Registration service\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | org.eclipse.hono.client.ClientErrorException: failed to authenticate with server\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.eclipse.hono.client.impl.HonoClientImpl.lambda$null$3(HonoClientImpl.java:261)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.eclipse.hono.connection.ConnectionFactoryImpl.handleConnectionAttemptResult(ConnectionFactoryImpl.java:149)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.eclipse.hono.connection.ConnectionFactoryImpl.lambda$connect$0(ConnectionFactoryImpl.java:135)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonClientImpl$ConnectCompletionHandler.handle(ProtonClientImpl.java:122)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonClientImpl$ConnectCompletionHandler.handle(ProtonClientImpl.java:102)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonSaslClientAuthenticatorImpl.process(ProtonSaslClientAuthenticatorImpl.java:96)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonTransport.processSaslAuthentication(ProtonTransport.java:206)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonTransport.handleSocketBuffer(ProtonTransport.java:189)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler.handle(NetSocketImpl.java:389)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.NetSocketImpl.handleMessageReceived(NetSocketImpl.java:356)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.NetClientImpl$1.handleMessage(NetClientImpl.java:247)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.NetClientImpl$1.handleMessage(NetClientImpl.java:244)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.VertxHandler.lambda$channelRead$1(VertxHandler.java:150)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.impl.ContextImpl.lambda$wrapTask$2(ContextImpl.java:342)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.impl.ContextImpl.executeFromIO(ContextImpl.java:200)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:148)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1336)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1127)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1162)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1359)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat java.lang.Thread.run(Thread.java:748)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:27.751 [vert.x-eventloop-thread-0] ERROR i.vertx.core.net.impl.ConnectionBase - java.nio.channels.ClosedChannelException\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:27.760 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.ConnectionFactoryImpl - can't connect to AMQP 1.0 container [amqps://hono-service-device-registry.hono:5671]: Failed to authenticate\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:27.762 [vert.x-eventloop-thread-1] WARN  o.e.h.s.a.d.UsernamePasswordAuthProvider - connection to Credentials service failed\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | org.eclipse.hono.client.ClientErrorException: failed to authenticate with server\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.eclipse.hono.client.impl.HonoClientImpl.lambda$null$3(HonoClientImpl.java:261)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.eclipse.hono.connection.ConnectionFactoryImpl.handleConnectionAttemptResult(ConnectionFactoryImpl.java:149)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.eclipse.hono.connection.ConnectionFactoryImpl.lambda$connect$0(ConnectionFactoryImpl.java:135)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonClientImpl$ConnectCompletionHandler.handle(ProtonClientImpl.java:122)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonClientImpl$ConnectCompletionHandler.handle(ProtonClientImpl.java:102)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonSaslClientAuthenticatorImpl.process(ProtonSaslClientAuthenticatorImpl.java:96)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonTransport.processSaslAuthentication(ProtonTransport.java:206)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonTransport.handleSocketBuffer(ProtonTransport.java:189)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler.handle(NetSocketImpl.java:389)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.NetSocketImpl.handleMessageReceived(NetSocketImpl.java:356)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.NetClientImpl$1.handleMessage(NetClientImpl.java:247)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.NetClientImpl$1.handleMessage(NetClientImpl.java:244)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.VertxHandler.lambda$channelRead$1(VertxHandler.java:150)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.impl.ContextImpl.lambda$wrapTask$2(ContextImpl.java:342)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.impl.ContextImpl.executeFromIO(ContextImpl.java:200)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:148)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1336)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1127)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1162)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1359)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat java.lang.Thread.run(Thread.java:748)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:27.786 [vert.x-eventloop-thread-1] ERROR i.vertx.core.net.impl.ConnectionBase - java.nio.channels.ClosedChannelException\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:27.801 [main] ERROR o.e.h.a.h.v.Application$$EnhancerBySpringCGLIB$$1e55acb2 - exception occurred during startup, shutting down ...\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | java.util.concurrent.ExecutionException: org.eclipse.hono.client.ClientErrorException: failed to authenticate with server\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1915)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.eclipse.hono.service.AbstractApplication.run(AbstractApplication.java:148)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:723)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:713)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.springframework.boot.SpringApplication.afterRefresh(SpringApplication.java:703)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.springframework.boot.SpringApplication.run(SpringApplication.java:304)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.eclipse.hono.adapter.http.vertx.Application.main(Application.java:34)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat java.lang.reflect.Method.invoke(Method.java:498)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.springframework.boot.loader.Launcher.launch(Launcher.java:87)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.springframework.boot.loader.Launcher.launch(Launcher.java:50)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:51)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | Caused by: org.eclipse.hono.client.ClientErrorException: failed to authenticate with server\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.eclipse.hono.client.impl.HonoClientImpl.lambda$null$3(HonoClientImpl.java:261)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.eclipse.hono.connection.ConnectionFactoryImpl.handleConnectionAttemptResult(ConnectionFactoryImpl.java:149)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat org.eclipse.hono.connection.ConnectionFactoryImpl.lambda$connect$0(ConnectionFactoryImpl.java:135)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonClientImpl$ConnectCompletionHandler.handle(ProtonClientImpl.java:122)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonClientImpl$ConnectCompletionHandler.handle(ProtonClientImpl.java:102)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonSaslClientAuthenticatorImpl.process(ProtonSaslClientAuthenticatorImpl.java:96)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonTransport.processSaslAuthentication(ProtonTransport.java:206)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.proton.impl.ProtonTransport.handleSocketBuffer(ProtonTransport.java:189)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler.handle(NetSocketImpl.java:389)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.NetSocketImpl.handleMessageReceived(NetSocketImpl.java:356)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.NetClientImpl$1.handleMessage(NetClientImpl.java:247)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.NetClientImpl$1.handleMessage(NetClientImpl.java:244)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.VertxHandler.lambda$channelRead$1(VertxHandler.java:150)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.impl.ContextImpl.lambda$wrapTask$2(ContextImpl.java:342)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.impl.ContextImpl.executeFromIO(ContextImpl.java:200)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:148)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1336)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1127)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1162)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1359)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | \tat java.lang.Thread.run(Thread.java:748)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:27.804 [main] INFO  o.e.h.a.h.v.Application$$EnhancerBySpringCGLIB$$1e55acb2 - shutting down application...\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:27.805 [main] INFO  o.e.h.a.h.v.Application$$EnhancerBySpringCGLIB$$1e55acb2 - closing vert.x instance ...\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:28.120 [main] INFO  o.e.h.a.h.v.Application$$EnhancerBySpringCGLIB$$1e55acb2 - application has been shut down successfully\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:28.129 [main] INFO  o.e.h.adapter.http.vertx.Application - Started Application in 14.357 seconds (JVM running for 15.712)\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:28.133 [Thread-4] INFO  o.s.c.a.AnnotationConfigApplicationContext - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@7cef4e59: startup date [Fri Mar 23 16:30:15 UTC 2018]; root of context hierarchy\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:28.144 [Thread-4] INFO  o.s.c.s.DefaultLifecycleProcessor - Stopping beans in phase 0\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:28.148 [Thread-4] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter - Unregistering JMX-exposed beans on shutdown\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:28.153 [Thread-4] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter - Unregistering JMX-exposed beans\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:28.155 [Thread-4] INFO  o.s.j.e.a.AnnotationMBeanExporter - Unregistering JMX-exposed beans on shutdown\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:28.158 [Thread-4] INFO  o.e.h.a.h.v.Application$$EnhancerBySpringCGLIB$$1e55acb2 - shutting down application...\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:28.158 [Thread-4] INFO  o.e.h.a.h.v.Application$$EnhancerBySpringCGLIB$$1e55acb2 - closing vert.x instance ...\r\nhono-adapter-http-vertx.1.mgpmrqj77ai6@v22016103605938256    | 16:30:28.159 [Thread-4] INFO  o.e.h.a.h.v.Application$$EnhancerBySpringCGLIB$$1e55acb2 - application has been shut down successfully\r\n```\r\n\r\nIt seems to be an authentication problem.\r\nAny help to solve the problem is appreciated.\r\n\r\nHave a nice weekend, Cheers!", "url": "https://github.com/eclipse/hono/issues/549", "user": "maximilianschwab", "labels": ["Device Registry", "bug"], "created": "2018-03-23 16:54:10", "closed": "2018-03-26 09:13:13", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "java.lang.String cannot be cast to java.lang.Boolean when uploading telemetry data using the HTTP adapter", "body": "I setup Hono on Docker Swarm using the tutorial on this site:\r\nhttps://www.eclipse.org/hono/getting-started/\r\n\r\nRegistering a device works perfect but every time when i try to upload telemetry for the example device with the id 4711 i get the following response:\r\n\r\nHTTP/1.1 503 Service Unavailable\r\nContent-Length: 19\r\nRetry-After: 2\r\n\r\nService Unavailable\r\n\r\nWhen i try to update the telemetry i see the following log of the REST adapter.\r\n\r\n```hono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:44:08.505 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.RequestResponseClientConfigProperties - using certificates from file [/run/secrets/trusted-certs.pem] as trust anchor\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:44:08.505 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.ConnectionFactoryImpl - connecting to AMQP 1.0 container [amqps://hono-service-device-registry.hono:5671]\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:44:08.774 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.ConnectionFactoryImpl - connected to AMQP 1.0 container [amqps://hono-service-device-registry.hono:5671], opening connection ...\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:44:08.779 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.ConnectionFactoryImpl - connection to container [Hono-DeviceRegistry-0.0.0.0:5671] at [amqps://hono-service-device-registry.hono:5671] open\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:44:08.779 [vert.x-eventloop-thread-1] INFO  o.e.h.s.a.d.UsernamePasswordAuthProvider - reconnected to Credentials service\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.283 [vert.x-eventloop-thread-1] DEBUG o.e.hono.client.impl.HonoClientImpl - creating new client for credentials/DEFAULT_TENANT\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.285 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.impl.CredentialsClientImpl - creating new credentials client for [DEFAULT_TENANT]\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.307 [vert.x-eventloop-thread-1] DEBUG o.e.h.client.impl.AbstractHonoClient - receiver open [source: credentials/DEFAULT_TENANT/5a6af998-d0c9-412e-9fa8-ff9c2340be39]\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.310 [vert.x-eventloop-thread-1] DEBUG o.e.h.client.impl.AbstractHonoClient - sender open [target: credentials/DEFAULT_TENANT, sendQueueFull: false]\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.311 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.i.AbstractRequestResponseClient - request-response client for peer [Hono-DeviceRegistry-0.0.0.0:5671] created\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.311 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.impl.CredentialsClientImpl - successfully created credentials client for [DEFAULT_TENANT]\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.311 [vert.x-eventloop-thread-1] DEBUG o.e.hono.client.impl.HonoClientImpl - successfully created new client for credentials/DEFAULT_TENANT\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.317 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.i.AbstractRequestResponseClient - sent request [target address: credentials/DEFAULT_TENANT, subject: get, correlation ID: cred-client-ad83a9b2-8c6f-4e9a-a7db-c6b7d2c21f38] to service\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.330 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [reply-to: credentials/DEFAULT_TENANT/5a6af998-d0c9-412e-9fa8-ff9c2340be39, subject: null, correlation ID: cred-client-ad83a9b2-8c6f-4e9a-a7db-c6b7d2c21f38, status: 200]\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.335 [vert.x-eventloop-thread-2] DEBUG o.e.hono.client.impl.HonoClientImpl - creating new message sender for telemetry/DEFAULT_TENANT\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.335 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - creating new client for registration/DEFAULT_TENANT\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.336 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.impl.RegistrationClientImpl - creating new registration client for [DEFAULT_TENANT]\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.336 [vert.x-eventloop-thread-0] INFO  o.e.h.c.i.AbstractRequestResponseClient - enabling caching of responses from registration/DEFAULT_TENANT\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.344 [vert.x-eventloop-thread-0] DEBUG o.e.h.client.impl.AbstractHonoClient - receiver open [source: registration/DEFAULT_TENANT/2ef702e8-5791-4459-ba48-0864b6e630d7]\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.347 [vert.x-eventloop-thread-0] DEBUG o.e.h.client.impl.AbstractHonoClient - sender open [target: registration/DEFAULT_TENANT, sendQueueFull: false]\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.348 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - request-response client for peer [Hono-DeviceRegistry-0.0.0.0:5671] created\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.348 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.impl.RegistrationClientImpl - successfully created registration client for [DEFAULT_TENANT]\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.348 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - successfully created new client for registration/DEFAULT_TENANT\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.365 [vert.x-eventloop-thread-1] DEBUG o.e.hono.client.impl.HonoClientImpl - creating new client for tenant\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.365 [vert.x-eventloop-thread-1] DEBUG o.e.h.client.impl.TenantClientImpl - creating new tenant API client.\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.366 [vert.x-eventloop-thread-1] INFO  o.e.h.c.i.AbstractRequestResponseClient - enabling caching of responses from tenant/null\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.367 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - sent request [target address: registration/DEFAULT_TENANT, subject: assert, correlation ID: reg-client-1fb8f407-d6f0-4dc8-9bbd-0bb28474035c, device ID: 4711] to service\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.368 [vert.x-eventloop-thread-2] DEBUG o.e.h.client.impl.AbstractHonoClient - sender open [target: telemetry/DEFAULT_TENANT, sendQueueFull: true]\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.370 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [reply-to: registration/DEFAULT_TENANT/2ef702e8-5791-4459-ba48-0864b6e630d7, subject: null, correlation ID: reg-client-1fb8f407-d6f0-4dc8-9bbd-0bb28474035c, status: 200]\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.378 [vert.x-eventloop-thread-1] DEBUG o.e.h.client.impl.AbstractHonoClient - receiver open [source: tenant/null/c60a2f60-cf6c-4ecd-964a-e1e9c83469ab]\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.381 [vert.x-eventloop-thread-1] DEBUG o.e.h.client.impl.AbstractHonoClient - sender open [target: tenant/null, sendQueueFull: false]\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.381 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.i.AbstractRequestResponseClient - request-response client for peer [Hono-DeviceRegistry-0.0.0.0:5671] created\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.382 [vert.x-eventloop-thread-1] DEBUG o.e.h.client.impl.TenantClientImpl - successfully created tenant API client\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.382 [vert.x-eventloop-thread-1] DEBUG o.e.hono.client.impl.HonoClientImpl - successfully created new client for tenant\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.385 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.i.AbstractRequestResponseClient - sent request [target address: tenant/null, subject: get, correlation ID: tenant-client-39fd640d-36ad-4ad2-8dbe-0d88a928cfd6] to service\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.386 [vert.x-eventloop-thread-1] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [reply-to: tenant/null/c60a2f60-cf6c-4ecd-964a-e1e9c83469ab, subject: null, correlation ID: tenant-client-39fd640d-36ad-4ad2-8dbe-0d88a928cfd6, status: 200]\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.389 [vert.x-eventloop-thread-2] DEBUG o.e.h.client.impl.AbstractHonoClient - sender [target: telemetry/DEFAULT_TENANT] has 250 credits after grace period of 20ms\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.390 [vert.x-eventloop-thread-2] DEBUG o.e.hono.client.impl.HonoClientImpl - successfully created new message sender for telemetry/DEFAULT_TENANT\r\nhono-adapter-http-vertx.1.ro81e31oiz1g@v22016103605938256    | 15:49:14.390 [vert.x-eventloop-thread-2] DEBUG o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - cannot process message for device [tenantId: DEFAULT_TENANT, deviceId: 4711, endpoint: telemetry]: java.lang.String cannot be cast to java.lang.Boolean\r\n```\r\n\r\nThe last line shows an casting error -> java.lang.String cannot be cast to java.lang.Boolean\r\n\r\nHas someone a hint to solve the problem? Any helping answer to solve the problem is appreciated.", "url": "https://github.com/eclipse/hono/issues/547", "user": "maximilianschwab", "labels": ["bug"], "created": "2018-03-22 16:10:01", "closed": "2018-03-22 17:13:27", "commits": {"41e7d311f0839bfc502a6d37ed2aca16c56ba34f": {"commitGHEventType": "referenced", "commitUser": "sysexcontrol"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "41e7d311f0839bfc502a6d37ed2aca16c56ba34f", "commitGHEventType": "referenced", "commitUser": "sysexcontrol", "commitParents": ["2aa94295d46c6a23320f3ce43792c7d42ab3453f"], "nameRev": "41e7d311f0839bfc502a6d37ed2aca16c56ba34f tags/0.6-M2~46", "commitMessage": "[#547] Avoid ClassCastException in example setup.\n\nThe example tenants had a String value for the 'enabled' property,\nwhich caused a ClassCastException with recent code changes.\n\nSigned-off-by: Karsten Frank <Karsten.Frank@bosch-si.com>\n", "commitDateTime": "2018-03-22 18:10:23", "authoredDateTime": "2018-03-22 18:10:23", "commitGitStats": [{"filePath": "example/src/main/config/example-tenants.json", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["41e7d311f0839bfc502a6d37ed2aca16c56ba34f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["example/src/main/config/example-tenants.json"]}, {"title": "Devices cannot connect to protocol adapters.", "body": "The problem seems to be that `CredentialsClientImpl` sets the wrong subject on requests to the Credentials service.", "url": "https://github.com/eclipse/hono/issues/518", "user": "sophokles73", "labels": ["Client", "Device Registry", "bug"], "created": "2018-03-02 15:53:30", "closed": "2018-03-02 17:09:18", "commits": {"c6d00516102e678946ffcbf41bdd8da5999e5b91": {"commitGHEventType": "referenced", "commitUser": "sysexcontrol"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c6d00516102e678946ffcbf41bdd8da5999e5b91", "commitGHEventType": "referenced", "commitUser": "sysexcontrol", "commitParents": ["efc751c0a6498441d7a19453f1f0527d1d251983"], "nameRev": "c6d00516102e678946ffcbf41bdd8da5999e5b91 tags/0.6-M1~66", "commitMessage": "[#518] Fix permission check for Credentials API actions.\n\nThe introduction of an enum type for defining request response actions\nimplictly changed the name of the message subjects that were checked\nwith the permissions defintion. The previous name \"get\" was changed to\n\"ACTION_GET\" and was not matching with the permissions definition (which\nsticks to use \"get\"). The enum members are renamed and now match again\nwith the permissions definition.\n\nSigned-off-by: Karsten Frank <Karsten.Frank@bosch-si.com>\n", "commitDateTime": "2018-03-02 17:14:46", "authoredDateTime": "2018-03-02 17:13:40", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/CredentialsClientImpl.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/org/eclipse/hono/util/CredentialsConstants.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/org/eclipse/hono/util/RequestResponseApiConstants.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "core/src/test/java/org/eclipse/hono/util/CredentialsConstantsTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/test/java/org/eclipse/hono/util/TenantConstantsTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/amqp/RequestResponseEndpoint.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/credentials/BaseCredentialsService.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/credentials/CredentialsHttpEndpoint.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/tenant/BaseTenantService.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/tenant/TenantHttpEndpoint.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/credentials/BaseCredentialsServiceTest.java", "insertions": 11, "deletions": 11, "lines": 22}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/credentials/CredentialsAmqpEndpointTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/credentials/CredentialsMessageFilterTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/tenant/BaseTenantServiceTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/tenant/TenantAmqpEndpointTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/tenant/TenantMessageFilterTest.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CredentialsClientImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.CredentialsClientImpl.get(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CredentialsConstants.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.CredentialsConstants.getServiceGetRequestAsJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RequestResponseApiConstants.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.RequestResponseApiConstants.StandardAction", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.RequestResponseApiConstants.StandardAction.from(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.RequestResponseApiConstants.StandardAction.isValid(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CredentialsConstantsTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.CredentialsConstantsTest.testCredentialsMessageForEventBus()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TenantConstantsTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.TenantConstantsTest.testTenantMessageForEventBus()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RequestResponseEndpoint.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.amqp.RequestResponseEndpoint.handleMessage(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonReceiver,org.eclipse.hono.util.ResourceIdentifier,io.vertx.proton.ProtonDelivery,org.apache.qpid.proton.message.Message)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseCredentialsService.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.credentials.BaseCredentialsService.processCredentialsMessage(io.vertx.core.eventbus.Message)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CredentialsHttpEndpoint.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.credentials.CredentialsHttpEndpoint.addCredentials(io.vertx.ext.web.RoutingContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.CredentialsHttpEndpoint.removeCredentials(io.vertx.ext.web.RoutingContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.CredentialsHttpEndpoint.removeCredentialsForDevice(io.vertx.ext.web.RoutingContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.CredentialsHttpEndpoint.updateCredentials(io.vertx.ext.web.RoutingContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseTenantService.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.tenant.BaseTenantService.processTenantMessage(io.vertx.core.eventbus.Message)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TenantHttpEndpoint.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.tenant.TenantHttpEndpoint.addTenant(io.vertx.ext.web.RoutingContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.tenant.TenantHttpEndpoint.getTenant(io.vertx.ext.web.RoutingContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.tenant.TenantHttpEndpoint.updateTenant(io.vertx.ext.web.RoutingContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.tenant.TenantHttpEndpoint.removeTenant(io.vertx.ext.web.RoutingContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseCredentialsServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.credentials.BaseCredentialsServiceTest.testAddSucceedsForMinimalData()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.BaseCredentialsServiceTest.testAddSucceedsForLongTimestamp()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.BaseCredentialsServiceTest.testAddSucceedsForShortTimestamp()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.BaseCredentialsServiceTest.testAddFailsForMalformedTimestamp()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.BaseCredentialsServiceTest.testAddFailsForMissingSecrets()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.BaseCredentialsServiceTest.testAddFailsForEmptySecrets()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.BaseCredentialsServiceTest.testCredentialsAddWithEmptySecret()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.BaseCredentialsServiceTest.testGetFailsForMissingType()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.BaseCredentialsServiceTest.testGetFailsForMissingAuthId()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CredentialsAmqpEndpointTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.credentials.CredentialsAmqpEndpointTest.testProcessMessageSendsRequestViaEventBus()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CredentialsMessageFilterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.credentials.CredentialsMessageFilterTest.testVerifyFailsForMissingBody()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.CredentialsMessageFilterTest.testVerifyFailsForNonAmqpValuedBody()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.CredentialsMessageFilterTest.testVerifyFailsForUnknownAction()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.credentials.CredentialsMessageFilterTest.testVerifySucceedsForValidGetAction()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseTenantServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.tenant.BaseTenantServiceTest.testAddSucceedsForMinimalData()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.tenant.BaseTenantServiceTest.testAddFailsForEmptyAdapterArray()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.tenant.BaseTenantServiceTest.testAddFailsForAdapterConfigWithoutType()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TenantAmqpEndpointTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.tenant.TenantAmqpEndpointTest.testProcessMessageSendsRequestViaEventBus()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TenantMessageFilterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.tenant.TenantMessageFilterTest.testVerifyDetectsMissingTenantProperty()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.tenant.TenantMessageFilterTest.testVerifySucceedsForValidGetAction()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c6d00516102e678946ffcbf41bdd8da5999e5b91"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 23, "deletions": 23, "lines": 46, "gitFilesChange": 8}, "spoonStatsSummary": {"TOT": 26, "UPD": 26, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 8, "spoonMethodsChanged": 16}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/org/eclipse/hono/util", "service-base/src/main/java/org/eclipse/hono/service/credentials", "service-base/src/main/java/org/eclipse/hono/service/tenant", "service-base/src/main/java/org/eclipse/hono/service/amqp", "client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.service.tenant.TenantHttpEndpoint.addTenant(io.vertx.ext.web.RoutingContext)", "org.eclipse.hono.service.tenant.TenantHttpEndpoint.removeTenant(io.vertx.ext.web.RoutingContext)", "org.eclipse.hono.service.amqp.RequestResponseEndpoint.handleMessage(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonReceiver,org.eclipse.hono.util.ResourceIdentifier,io.vertx.proton.ProtonDelivery,org.apache.qpid.proton.message.Message)", "org.eclipse.hono.service.credentials.CredentialsHttpEndpoint.updateCredentials(io.vertx.ext.web.RoutingContext)", "org.eclipse.hono.util.CredentialsConstants.getServiceGetRequestAsJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "org.eclipse.hono.service.credentials.CredentialsHttpEndpoint.removeCredentials(io.vertx.ext.web.RoutingContext)", "org.eclipse.hono.service.tenant.BaseTenantService.processTenantMessage(io.vertx.core.eventbus.Message)", "org.eclipse.hono.util.RequestResponseApiConstants.StandardAction.isValid(java.lang.String)", "org.eclipse.hono.client.impl.CredentialsClientImpl.get(java.lang.String,java.lang.String)", "org.eclipse.hono.util.RequestResponseApiConstants.StandardAction", "org.eclipse.hono.service.tenant.TenantHttpEndpoint.updateTenant(io.vertx.ext.web.RoutingContext)", "org.eclipse.hono.util.RequestResponseApiConstants.StandardAction.from(java.lang.String)", "org.eclipse.hono.service.credentials.BaseCredentialsService.processCredentialsMessage(io.vertx.core.eventbus.Message)", "org.eclipse.hono.service.credentials.CredentialsHttpEndpoint.removeCredentialsForDevice(io.vertx.ext.web.RoutingContext)", "org.eclipse.hono.service.tenant.TenantHttpEndpoint.getTenant(io.vertx.ext.web.RoutingContext)", "org.eclipse.hono.service.credentials.CredentialsHttpEndpoint.addCredentials(io.vertx.ext.web.RoutingContext)"]}, {"title": "Support end-to-end AT LEAST ONCE delivery in Telemetry API", "body": "Currently Hono immediately accepts and settles telemetry messages. In order to allow clients to verify that telemetry messages have been received by downstream consumer, Hono messaging needs to be adapted to properly forward messages and AMQP dispositions frames between clients and downstream consumers.", "url": "https://github.com/eclipse/hono/issues/507", "user": "dejanb", "labels": ["EclipseInt", "bug", "enhancement"], "created": "2018-02-22 09:30:58", "closed": "2018-02-26 11:24:39", "commits": {"5e7c7de3b9cad6ca446f79ac2fc8c7e75b88f3a5": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "738998fbb921cc64213c9528a813ff2eb3bedc0f": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "5e7c7de3b9cad6ca446f79ac2fc8c7e75b88f3a5", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["00ce343a86127b1eb5b8fad369e7fc029ba32f94"], "nameRev": "5e7c7de3b9cad6ca446f79ac2fc8c7e75b88f3a5 tags/0.6-M1~87", "commitMessage": "[#507] Forward downstream disposition to upstream client.\n\nWhen forwarding unsettled telemetry messages to the downstream AMQP\nMessaging Network, the adapter now forwards the disposition received\nfrom the downstream container to the upstream client.\n\nFor pre-settled messages the behavior is unchanged, i.e. the adapter\nimmediately accepts and settles the message with the upstream client\nbefore forwarding the message downstream.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-02-26 10:21:50", "authoredDateTime": "2018-02-23 17:32:33", "commitGitStats": [{"filePath": "services/messaging/src/main/java/org/eclipse/hono/telemetry/impl/ForwardingTelemetryDownstreamAdapter.java", "insertions": 21, "deletions": 2, "lines": 23}, {"filePath": "services/messaging/src/test/java/org/eclipse/hono/telemetry/impl/ForwardingTelemetryDownstreamAdapterTest.java", "insertions": 75, "deletions": 25, "lines": 100}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ForwardingTelemetryDownstreamAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.telemetry.impl.ForwardingTelemetryDownstreamAdapter.forwardMessage(io.vertx.proton.ProtonSender,org.apache.qpid.proton.message.Message,io.vertx.proton.ProtonDelivery)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "ForwardingTelemetryDownstreamAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.telemetry.impl.ForwardingTelemetryDownstreamAdapterTest.testProcessMessageForwardsMessageToDownstreamSender(io.vertx.ext.unit.TestContext)", "TOT": 41, "UPD": 14, "INS": 1, "MOV": 25, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.ForwardingTelemetryDownstreamAdapterTest.setup()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.ForwardingTelemetryDownstreamAdapterTest.testProcessMessageDiscardsMessageIfNoCreditIsAvailable(io.vertx.ext.unit.TestContext)", "TOT": 8, "UPD": 4, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.ForwardingTelemetryDownstreamAdapterTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.ForwardingTelemetryDownstreamAdapterTest.testProcessMessageForwardsDownstreamDisposition(io.vertx.ext.unit.TestContext)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "738998fbb921cc64213c9528a813ff2eb3bedc0f", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["5e7c7de3b9cad6ca446f79ac2fc8c7e75b88f3a5"], "nameRev": "738998fbb921cc64213c9528a813ff2eb3bedc0f tags/0.6-M1~86", "commitMessage": "[#507] Add sequence diagram for presettled telemetry upload.\n\nFixes #507.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-02-26 12:16:54", "authoredDateTime": "2018-02-26 12:00:58", "commitGitStats": [{"filePath": "site/content/api/Telemetry-API.md", "insertions": 21, "deletions": 11, "lines": 32}, {"filePath": "site/content/api/uploadTelemetry_presettled_Success.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "site/content/api/{uploadTelemetry_Success.png => uploadTelemetry_unsettled_Success.png}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "site/diagrams/sequenceDiagrams/uploadTelemetry_presettled_Success.txt", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "site/diagrams/sequenceDiagrams/{uploadTelemetry_Success.txt => uploadTelemetry_unsettled_Success.txt}", "insertions": 0, "deletions": 0, "lines": 0}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5e7c7de3b9cad6ca446f79ac2fc8c7e75b88f3a5", "738998fbb921cc64213c9528a813ff2eb3bedc0f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 21, "deletions": 2, "lines": 23, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4.0, "UPD": 0.0, "INS": 2.0, "MOV": 2.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["services/messaging/src/main/java/org/eclipse/hono/telemetry/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.telemetry.impl.ForwardingTelemetryDownstreamAdapter.forwardMessage(io.vertx.proton.ProtonSender,org.apache.qpid.proton.message.Message,io.vertx.proton.ProtonDelivery)"]}, {"title": "HonoClient does only re-connect one time if no disconnect handler was provided in connect()", "body": "Hi,\r\n\r\nwhen I use hono client connect() without disconnect handler, re-connection just works fine for the very first time. But when client looses connection again there are no more re-connects. As JWT token expires every 10 minutes, hono clients configured like this do never re-connect after 20 minutes. This is also already mentioned #239 \r\n\r\nProblem seems to be that when no disconnect handler is set, a handler gets set for reconnect that just invokes onRemoteDisconnect(): https://github.com/eclipse/hono/blob/6777c3e048a46d95c7985d441c7ac485eeb23858/client/src/main/java/org/eclipse/hono/client/impl/HonoClientImpl.java#L251-L269\r\n\r\nThen during next re-connect, disconnect handler is not longer null and gets invoked, i.e. onRemoteDisconnect gets invoked. However, before invocation, connection gets set to null. But now failed connection and current connection (which is null now) are not the same and re-connect stops with a warn log statement: \r\n\r\nhttps://github.com/eclipse/hono/blob/6777c3e048a46d95c7985d441c7ac485eeb23858/client/src/main/java/org/eclipse/hono/client/impl/HonoClientImpl.java#L241-L249\r\n\r\nWas there a reason why reconnect gets called with a disconnect handler, even when the user did not set one? Why not just invoke reconnect with null disconnect handler?\r\n\r\nThanks \r\nDaniel\r\n", "url": "https://github.com/eclipse/hono/issues/493", "user": "DanielMaier-BSI", "labels": ["Client", "bug"], "created": "2018-02-14 16:08:38", "closed": "2018-02-16 12:19:53", "commits": {"98dc2672c9f2973564a06c16d3eee8a94cfffe46": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "98dc2672c9f2973564a06c16d3eee8a94cfffe46", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["9fe56b826c8626f1d4175f03e86068a8c1242784"], "nameRev": "98dc2672c9f2973564a06c16d3eee8a94cfffe46 tags/0.6-M1~111", "commitMessage": "[#493] Omit disconnect handler when reconnecting.\n\nFixes #493.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-02-16 13:19:31", "authoredDateTime": "2018-02-16 08:26:17", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoClientImpl.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/HonoClientImplTest.java", "insertions": 17, "deletions": 5, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoClientImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.createTelemetryConsumer(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.createEventConsumer(java.lang.String,java.util.function.BiConsumer,io.vertx.core.Handler)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.handleConnectionLoss(io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "HonoClientImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.DisconnectHandlerProvidingConnectionFactory", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.DisconnectHandlerProvidingConnectionFactory.connect(io.vertx.proton.ProtonClientOptions,java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.DisconnectHandlerProvidingConnectionFactory.await(long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testDownstreamDisconnectTriggersReconnect(io.vertx.ext.unit.TestContext)", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.DisconnectHandlerProvidingConnectionFactory.setExpectedSucceedingConnectionAttempts(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["98dc2672c9f2973564a06c16d3eee8a94cfffe46"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.HonoClientImpl.createEventConsumer(java.lang.String,java.util.function.BiConsumer,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.createTelemetryConsumer(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.handleConnectionLoss(io.vertx.core.Handler)"]}, {"title": "Grafana & influxDB are not getting deployed to Kubernetes/Openshift", "body": "The deploy scripts shipped with Hono 0.5 fail to deploy Grafana and influxDB on Kubernetes and Openshift.\r\n\r\nWhen running `deploy/kubernetes/kubernetes_deploy.sh` the step for deploying Grafana/influxDB fails with the following output:\r\n\r\n```Deploying influxDB & Grafana ...\r\nserviceaccount \"useroot\" created\r\nsecret \"influxdb-conf\" created\r\nError from server (BadRequest): error when creating \"/home/hak8fe/git/hono/example/target/deploy/kubernetes/influxdb-deployment.yml\": Deployment in version \"v1beta1\" cannot be handled as a Deployment: v1beta1.Deployment: ObjectMeta: v1.ObjectMeta: Labels: ReadString: expects \" or n, parsing 136 ...version\":0... at {\"apiVersion\":\"extensions/v1beta1\",\"kind\":\"Deployment\",\"metadata\":{\"labels\":{\"app\":\"hono-metrics\",\"group\":\"org.eclipse.hono\",\"version\":0.5},\"name\":\"influxdb\",\"namespace\":\"hono\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"hono-metrics\",\"group\":\"org.eclipse.hono\",\"version\":0.5}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"hono-metrics\",\"group\":\"org.eclipse.hono\",\"role\":\"influxdb\",\"version\":0.5}},\"spec\":{\"containers\":[{\"args\":[\"-config\",\"/run/secrets/influxdb.conf\"],\"env\":[{\"name\":\"KUBERNETES_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"influxdb:1.2.4-alpine\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"initialDelaySeconds\":20,\"periodSeconds\":9,\"tcpSocket\":{\"port\":2003},\"timeoutSeconds\":1},\"name\":\"eclipsehono-influxdb\",\"ports\":[{\"containerPort\":8086,\"name\":\"api\",\"protocol\":\"TCP\"},{\"containerPort\":8083,\"name\":\"admin\",\"protocol\":\"TCP\"},{\"containerPort\":2003,\"name\":\"graphite\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"initialDelaySeconds\":5,\"periodSeconds\":5,\"tcpSocket\":{\"port\":2003},\"timeoutSeconds\":1},\"securityContext\":{\"privileged\":false},\"volumeMounts\":[{\"mountPath\":\"/var/lib/influxdb\",\"name\":\"influxdb-storage\"},{\"mountPath\":\"/run/secrets\",\"name\":\"conf\"}]}],\"volumes\":[{\"emptyDir\":{},\"name\":\"influxdb-storage\"},{\"name\":\"conf\",\"secret\":{\"secretName\":\"influxdb-conf\"}}]}}}}\r\nError from server (BadRequest): error when creating \"/home/hak8fe/git/hono/example/target/deploy/kubernetes/influxdb-svc.yml\": Service in version \"v1\" cannot be handled as a Service: v1.Service: ObjectMeta: v1.ObjectMeta: Labels: ReadString: expects \" or n, parsing 117 ...version\":0... at {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"labels\":{\"app\":\"hono-metrics\",\"group\":\"org.eclipse.hono\",\"version\":0.5},\"name\":\"influxdb\",\"namespace\":\"hono\"},\"spec\":{\"ports\":[{\"name\":\"graphite\",\"port\":2003,\"protocol\":\"TCP\",\"targetPort\":2003},{\"name\":\"admin\",\"port\":8083,\"protocol\":\"TCP\",\"targetPort\":8083},{\"name\":\"api\",\"port\":8086,\"protocol\":\"TCP\",\"targetPort\":8086}],\"selector\":{\"app\":\"hono-metrics\",\"group\":\"org.eclipse.hono\",\"role\":\"influxdb\"}}}\r\nError from server (BadRequest): error when creating \"/home/hak8fe/git/hono/example/target/deploy/kubernetes/grafana-deployment.yml\": Deployment in version \"v1beta1\" cannot be handled as a Deployment: v1beta1.Deployment: ObjectMeta: v1.ObjectMeta: Labels: ReadString: expects \" or n, parsing 136 ...version\":0... at {\"apiVersion\":\"extensions/v1beta1\",\"kind\":\"Deployment\",\"metadata\":{\"labels\":{\"app\":\"hono-metrics\",\"group\":\"org.eclipse.hono\",\"version\":0.5},\"name\":\"grafana\",\"namespace\":\"hono\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"hono-metrics\",\"group\":\"org.eclipse.hono\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"hono-metrics\",\"group\":\"org.eclipse.hono\",\"role\":\"grafana\",\"version\":0.5}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GF_PATHS_DATA\",\"value\":\"/var/lib/grafana\"},{\"name\":\"GF_PATHS_LOGS\",\"value\":\"/var/log/grafana\"},{\"name\":\"KUBERNETES_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"grafana/grafana:4.2.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"port\":3000},\"initialDelaySeconds\":20,\"periodSeconds\":9,\"timeoutSeconds\":1},\"name\":\"eclipsehono-grafana\",\"readinessProbe\":{\"httpGet\":{\"port\":3000},\"initialDelaySeconds\":5,\"periodSeconds\":5,\"timeoutSeconds\":1},\"securityContext\":{\"privileged\":false},\"volumeMounts\":[{\"mountPath\":\"/var/log/grafana\",\"name\":\"grafana-logs\"},{\"mountPath\":\"/var/lib/grafana\",\"name\":\"grafana-data\"}]}],\"serviceAccountName\":\"useroot\",\"volumes\":[{\"emptyDir\":{},\"name\":\"grafana-logs\"},{\"emptyDir\":{},\"name\":\"grafana-data\"}]}}}}\r\nError from server (BadRequest): error when creating \"/home/hak8fe/git/hono/example/target/deploy/kubernetes/grafana-svc.yml\": Service in version \"v1\" cannot be handled as a Service: v1.Service: ObjectMeta: v1.ObjectMeta: Labels: ReadString: expects \" or n, parsing 117 ...version\":0... at {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"labels\":{\"app\":\"hono-metrics\",\"group\":\"org.eclipse.hono\",\"version\":0.5},\"name\":\"grafana\",\"namespace\":\"hono\"},\"spec\":{\"ports\":[{\"nodePort\":31000,\"port\":3000,\"protocol\":\"TCP\",\"targetPort\":3000}],\"selector\":{\"app\":\"hono-metrics\",\"group\":\"org.eclipse.hono\",\"role\":\"grafana\"},\"type\":\"NodePort\"}}\r\n... done\r\n```\r\n\r\nHowever, all other services are deployed and seem to work as expected.\r\n\r\n", "url": "https://github.com/eclipse/hono/issues/491", "user": "sophokles73", "labels": ["bug"], "created": "2018-02-14 09:18:10", "closed": "2018-03-12 10:36:24", "commits": {"0d2d44c6f30bf9768bf3f42392ac618310a457d9": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "4dedbcd604cc4f4dd3f56c15f0814a89db52f3c9": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 26.00027777777778, "commitsDetails": [{"commitHash": "0d2d44c6f30bf9768bf3f42392ac618310a457d9", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["d38fb6c2d89473b94876aa92450550c2fad864f6"], "nameRev": "0d2d44c6f30bf9768bf3f42392ac618310a457d9 tags/0.6-M1~117", "commitMessage": "[#491] Fix deployment to kubernetes/Openshift.\n\nAdded quotation marks around version labels in kubernetes resource\ndescriptors for Grafana and influxDB. The fabric8 Maven plugin adds\nquotation marks automatically if the value cannot be clearly recognized\nas a string by default, so the problem does not occur on the descriptors\nfor the services.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-02-14 11:34:00", "authoredDateTime": "2018-02-14 10:16:41", "commitGitStats": [{"filePath": "example/src/main/deploy/kubernetes/grafana-deployment.yml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "example/src/main/deploy/kubernetes/grafana-svc.yml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "example/src/main/deploy/kubernetes/influxdb-deployment.yml", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "example/src/main/deploy/kubernetes/influxdb-svc.yml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "example/src/main/deploy/openshift/grafana-route.yml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "example/src/main/deploy/openshift/hono-pv.yml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "4dedbcd604cc4f4dd3f56c15f0814a89db52f3c9", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0d2d44c6f30bf9768bf3f42392ac618310a457d9"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8.0, "deletions": 9.0, "lines": 17.0, "gitFilesChange": 6}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["example/src/main/deploy/openshift/grafana-route.yml", "example/src/main/deploy/kubernetes/influxdb-deployment.yml", "example/src/main/deploy/kubernetes/influxdb-svc.yml", "example/src/main/deploy/kubernetes/grafana-deployment.yml", "example/src/main/deploy/kubernetes/grafana-svc.yml", "example/src/main/deploy/openshift/hono-pv.yml"]}, {"title": "Protocol handlers may wait indefinitely on delivery updates", "body": "When a protocol adapter sends a message downstream and Hono Messaging looses its link to the downstream AMQP Messaging Network, then the adapter may wait indefinitely for a delivery update because the senders created by `HonoClientImpl` do not set a time limit for waiting for a delivery update from the peer.\r\nThe adapters may thus leak memory when it accumulates stale delivery update handlers for such messages over time.", "url": "https://github.com/eclipse/hono/issues/484", "user": "sophokles73", "labels": ["Client", "bug"], "created": "2018-02-08 18:16:33", "closed": "2019-01-11 15:55:25", "commits": {"2151571f862082ede4125f069e63be0abccfaddd": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 336.0002777777778, "commitsDetails": [{"commitHash": "2151571f862082ede4125f069e63be0abccfaddd", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["6f97d56db2a70a4d98aec7517959fa6342dffa24"], "nameRev": "2151571f862082ede4125f069e63be0abccfaddd tags/0.9-M2~55", "commitMessage": "[#484] Add timeout handling for AbstractSender.sendMessage()\n\nAbstractSender now waits for a configurable amount of time only for the arrival of a disposition frame from the downstream peer before considering the sending of a message failed.\r\n\r\nFixes #484 \r\n\r\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch-si.com>", "commitDateTime": "2019-01-11 16:55:24", "authoredDateTime": "2019-01-11 16:55:24", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractSender.java", "insertions": 27, "deletions": 4, "lines": 31}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/EventSenderImpl.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/TelemetrySenderImpl.java", "insertions": 23, "deletions": 1, "lines": 24}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/AbstractSenderTest.java", "insertions": 35, "deletions": 1, "lines": 36}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/TelemetrySenderImplTest.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "core/src/main/java/org/eclipse/hono/config/ClientConfigProperties.java", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "site/content/admin-guide/hono-client-configuration.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractSender.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSender.sendMessageAndWaitForOutcome(org.apache.qpid.proton.message.Message,io.opentracing.Span)", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "EventSenderImpl.java", "spoonMethods": []}, {"spoonFilePath": "TelemetrySenderImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.TelemetrySenderImpl.sendMessage(org.apache.qpid.proton.message.Message,io.opentracing.Span)", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AbstractSenderTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSenderTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSenderTest.testSendMessageFailsOnTimeout()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSenderTest.setUp()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "TelemetrySenderImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.TelemetrySenderImplTest.testSendMessageFailsOnTimeout()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClientConfigProperties.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.config.ClientConfigProperties", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.config.ClientConfigProperties.getSendMessageTimeout()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.config.ClientConfigProperties.setSendMessageTimeout(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2151571f862082ede4125f069e63be0abccfaddd"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 87, "deletions": 6, "lines": 93, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 14, "UPD": 0, "INS": 12, "MOV": 2, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl", "core/src/main/java/org/eclipse/hono/config"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.AbstractSender.sendMessageAndWaitForOutcome(org.apache.qpid.proton.message.Message,io.opentracing.Span)", "org.eclipse.hono.config.ClientConfigProperties.setSendMessageTimeout(long)", "org.eclipse.hono.config.ClientConfigProperties", "org.eclipse.hono.config.ClientConfigProperties.getSendMessageTimeout()", "org.eclipse.hono.client.impl.TelemetrySenderImpl.sendMessage(org.apache.qpid.proton.message.Message,io.opentracing.Span)"]}, {"title": "Propagate detach(close=false) back und allow reopen", "body": "As a receiver (link) in the Hono client a detach(close=false) needs to be answered the same way and later a open on this detached link need to be handled.\r\n", "url": "https://github.com/eclipse/hono/issues/467", "user": "pellmann", "labels": ["Client", "bug"], "created": "2018-01-29 13:48:00", "closed": "2018-02-08 14:21:05", "commits": {"d0bb9aa4310ccf68b8079481b51225c157037987": {"commitGHEventType": "referenced", "commitUser": "pellmann"}}, "ttf": 10.000277777777777, "commitsDetails": [{"commitHash": "d0bb9aa4310ccf68b8079481b51225c157037987", "commitGHEventType": "referenced", "commitUser": "pellmann", "commitParents": ["95407c4c4d32ac31fdfceebc8e4fbaf1a3eed81c"], "nameRev": "d0bb9aa4310ccf68b8079481b51225c157037987 tags/0.5~28", "commitMessage": "Handle detached and closed receiver links (#467)\n\n- added closeHook, which is called on detach and close\n- close receiver on sender close in hono messaging\n\nSigned-off-by: pellmann <marc.pellmann@bosch-si.com>\n", "commitDateTime": "2018-02-08 14:47:25", "authoredDateTime": "2018-02-06 14:34:41", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/HonoClient.java", "insertions": 9, "deletions": 3, "lines": 12}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractHonoClient.java", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/EventConsumerImpl.java", "insertions": 10, "deletions": 6, "lines": 16}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoClientImpl.java", "insertions": 17, "deletions": 10, "lines": 27}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/TelemetryConsumerImpl.java", "insertions": 8, "deletions": 4, "lines": 12}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/EventConsumerImplTest.java", "insertions": 47, "deletions": 2, "lines": 49}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/HonoClientImplTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "example/src/main/java/org/eclipse/hono/example/ExampleReceiver.java", "insertions": 14, "deletions": 2, "lines": 16}, {"filePath": "example/src/main/java/org/eclipse/hono/vertx/example/base/HonoConsumerBase.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "jmeter/src/main/java/org/eclipse/hono/jmeter/client/HonoReceiver.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "services/messaging/src/main/java/org/eclipse/hono/messaging/ForwardingDownstreamAdapter.java", "insertions": 16, "deletions": 7, "lines": 23}, {"filePath": "services/messaging/src/main/java/org/eclipse/hono/messaging/SenderFactory.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "services/messaging/src/main/java/org/eclipse/hono/messaging/SenderFactoryImpl.java", "insertions": 27, "deletions": 4, "lines": 31}, {"filePath": "services/messaging/src/test/java/org/eclipse/hono/TestSupport.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "services/messaging/src/test/java/org/eclipse/hono/messaging/ForwardingDownstreamAdapterTest.java", "insertions": 31, "deletions": 1, "lines": 32}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/client/DeviceEventClientIT.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/client/DeviceTelemetryClientIT.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/client/EventClientIT.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/client/TelemetryClientIT.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoClient.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.createTelemetryConsumer(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.createEventConsumer(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.createEventConsumer(java.lang.String,java.util.function.BiConsumer,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractHonoClient.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractHonoClient.createSender(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractHonoClient.createReceiver(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.proton.ProtonMessageHandler,io.vertx.core.Handler)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EventConsumerImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.EventConsumerImpl.create(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,java.lang.String,java.util.function.BiConsumer,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.EventConsumerImpl.create(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,java.util.function.BiConsumer,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.EventConsumerImpl.create(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,java.lang.String,java.util.function.BiConsumer,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoClientImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.createEventConsumer(java.lang.String,java.util.function.Consumer)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.createTelemetryConsumer(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.newTelemetryConsumer(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.createEventConsumer(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.createEventConsumer(java.lang.String,java.util.function.BiConsumer,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.newEventConsumer(java.lang.String,java.util.function.BiConsumer,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TelemetryConsumerImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.TelemetryConsumerImpl.create(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.TelemetryConsumerImpl.create(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,java.util.function.Consumer,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.TelemetryConsumerImpl.create(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,java.lang.String,java.util.function.Consumer,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EventConsumerImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.EventConsumerImplTest.testCreateRegistersBiConsumerAsMessageHandler(io.vertx.ext.unit.TestContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.EventConsumerImplTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.EventConsumerImplTest.testCloseHookOnDetach(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoClientImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testCreateTelemetryConsumerFailsOnConnectionFailure(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testCreateEventConsumerFailsOnConnectionFailure(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ExampleReceiver.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.example.ExampleReceiver.createConsumer(org.eclipse.hono.client.HonoClient)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoConsumerBase.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.vertx.example.base.HonoConsumerBase.consumeData()", "TOT": 8, "UPD": 6, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoReceiver.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.jmeter.client.HonoReceiver.createConsumer()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ForwardingDownstreamAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.messaging.ForwardingDownstreamAdapter.onDisconnectFromDownstreamContainer(io.vertx.proton.ProtonConnection)", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.messaging.ForwardingDownstreamAdapter.closeReceiver(org.eclipse.hono.messaging.UpstreamReceiver)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.messaging.ForwardingDownstreamAdapter.createSender(org.eclipse.hono.util.ResourceIdentifier,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.messaging.ForwardingDownstreamAdapter.onClientAttach(org.eclipse.hono.messaging.UpstreamReceiver,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SenderFactory.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.messaging.createSender(io.vertx.proton.ProtonConnection,org.eclipse.hono.util.ResourceIdentifier,io.vertx.proton.ProtonQoS,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SenderFactoryImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.messaging.SenderFactoryImpl.createSender(io.vertx.proton.ProtonConnection,org.eclipse.hono.util.ResourceIdentifier,io.vertx.proton.ProtonQoS,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.messaging.SenderFactoryImpl.newSender(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSession,org.eclipse.hono.util.ResourceIdentifier,io.vertx.proton.ProtonQoS,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestSupport.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.TestSupport.newMockSenderFactory(io.vertx.proton.ProtonSender)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ForwardingDownstreamAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.messaging.ForwardingDownstreamAdapterTest.testDownstreamLinkClosesUpstreamReceivers()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.messaging.ForwardingDownstreamAdapterTest.testDownstreamDisconnectFailsClientAttachRequests(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DeviceEventClientIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.client.DeviceEventClientIT.createConsumer(java.lang.String,java.util.function.Consumer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DeviceTelemetryClientIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.client.DeviceTelemetryClientIT.createConsumer(java.lang.String,java.util.function.Consumer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EventClientIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.client.EventClientIT.createConsumer(java.lang.String,java.util.function.Consumer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TelemetryClientIT.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.client.TelemetryClientIT.createConsumer(java.lang.String,java.util.function.Consumer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d0bb9aa4310ccf68b8079481b51225c157037987"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 133, "deletions": 41, "lines": 174, "gitFilesChange": 11}, "spoonStatsSummary": {"TOT": 64, "UPD": 8, "INS": 46, "MOV": 3, "DEL": 7, "spoonFilesChanged": 15, "spoonMethodsChanged": 31}, "statsSkippedReason": "", "changesInPackagesGIT": ["example/src/main/java/org/eclipse/hono/example", "client/src/main/java/org/eclipse/hono/client/impl", "services/messaging/src/main/java/org/eclipse/hono/messaging", "client/src/main/java/org/eclipse/hono/client", "jmeter/src/main/java/org/eclipse/hono/jmeter/client", "example/src/main/java/org/eclipse/hono/vertx/example/base"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.EventConsumerImpl.create(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,java.util.function.BiConsumer,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.client.createEventConsumer(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "org.eclipse.hono.tests.client.DeviceTelemetryClientIT.createConsumer(java.lang.String,java.util.function.Consumer)", "org.eclipse.hono.client.impl.HonoClientImpl.newEventConsumer(java.lang.String,java.util.function.BiConsumer,io.vertx.core.Handler)", "org.eclipse.hono.vertx.example.base.HonoConsumerBase.consumeData()", "org.eclipse.hono.messaging.createSender(io.vertx.proton.ProtonConnection,org.eclipse.hono.util.ResourceIdentifier,io.vertx.proton.ProtonQoS,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.EventConsumerImpl.create(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,java.lang.String,java.util.function.BiConsumer,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.TelemetryConsumerImpl.create(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,java.lang.String,java.util.function.Consumer,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.EventConsumerImpl.create(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,java.lang.String,java.util.function.BiConsumer,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.TelemetryConsumerImpl.create(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "org.eclipse.hono.messaging.SenderFactoryImpl.createSender(io.vertx.proton.ProtonConnection,org.eclipse.hono.util.ResourceIdentifier,io.vertx.proton.ProtonQoS,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.jmeter.client.HonoReceiver.createConsumer()", "org.eclipse.hono.client.createTelemetryConsumer(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "org.eclipse.hono.messaging.ForwardingDownstreamAdapter.onDisconnectFromDownstreamContainer(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.messaging.ForwardingDownstreamAdapter.closeReceiver(org.eclipse.hono.messaging.UpstreamReceiver)", "org.eclipse.hono.client.impl.HonoClientImpl.createTelemetryConsumer(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "org.eclipse.hono.tests.client.EventClientIT.createConsumer(java.lang.String,java.util.function.Consumer)", "org.eclipse.hono.messaging.SenderFactoryImpl.newSender(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSession,org.eclipse.hono.util.ResourceIdentifier,io.vertx.proton.ProtonQoS,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.createEventConsumer(java.lang.String,java.util.function.Consumer)", "org.eclipse.hono.client.impl.AbstractHonoClient.createReceiver(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.proton.ProtonMessageHandler,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.TelemetryConsumerImpl.create(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,java.util.function.Consumer,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.createEventConsumer(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "org.eclipse.hono.tests.client.TelemetryClientIT.createConsumer(java.lang.String,java.util.function.Consumer)", "org.eclipse.hono.messaging.ForwardingDownstreamAdapter.createSender(org.eclipse.hono.util.ResourceIdentifier,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.client.createEventConsumer(java.lang.String,java.util.function.BiConsumer,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.createEventConsumer(java.lang.String,java.util.function.BiConsumer,io.vertx.core.Handler)", "org.eclipse.hono.example.ExampleReceiver.createConsumer(org.eclipse.hono.client.HonoClient)", "org.eclipse.hono.client.impl.AbstractHonoClient.createSender(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.core.Handler)", "org.eclipse.hono.tests.client.DeviceEventClientIT.createConsumer(java.lang.String,java.util.function.Consumer)", "org.eclipse.hono.messaging.ForwardingDownstreamAdapter.onClientAttach(org.eclipse.hono.messaging.UpstreamReceiver,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.newTelemetryConsumer(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)"]}, {"title": "HonoClient: handle a failed \"attach\" when creating Consumers/Receivers", "body": "When using the `createEventConsumer()` or `createTelementryConsumer()`methods on a `HonoClient`, the given `creationHandler` param should fail if the \"attach\" on the link fails (i.e. \"detach\" was received).", "url": "https://github.com/eclipse/hono/issues/459", "user": "calohmn", "labels": ["Client", "bug"], "created": "2018-01-23 10:27:30", "closed": "2018-02-19 10:53:07", "commits": {"f4a667aab814e51988d87af2712d6c1faa112871": {"commitGHEventType": "referenced", "commitUser": "pellmann"}}, "ttf": 27.00027777777778, "commitsDetails": [{"commitHash": "f4a667aab814e51988d87af2712d6c1faa112871", "commitGHEventType": "referenced", "commitUser": "pellmann", "commitParents": ["f45f0f27736b13db600a399964ae439a60df85a8"], "nameRev": "f4a667aab814e51988d87af2712d6c1faa112871 tags/0.5~74", "commitMessage": "[#459] Open handler fail delegate; close handler added; logs\n- merged creation of receivers\n- delegate error in open attach\n- added logs for detach and failed open\n\nSigned-off-by: pellmann <marc.pellmann@bosch-si.com>\n", "commitDateTime": "2018-01-24 11:53:14", "authoredDateTime": "2018-01-24 10:18:59", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractConsumer.java", "insertions": 1, "deletions": 61, "lines": 62}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractHonoClient.java", "insertions": 23, "deletions": 2, "lines": 25}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/EventConsumerImpl.java", "insertions": 12, "deletions": 10, "lines": 22}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/TelemetryConsumerImpl.java", "insertions": 11, "deletions": 11, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractConsumer.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractConsumer.createConsumer(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,java.lang.String,java.lang.String,io.vertx.proton.ProtonQoS,java.util.function.BiConsumer)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractConsumer.flow(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractHonoClient.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractHonoClient.createReceiver(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.proton.ProtonMessageHandler,io.vertx.core.Handler)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "EventConsumerImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.EventConsumerImpl.create(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,java.lang.String,java.util.function.BiConsumer,io.vertx.core.Handler)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.EventConsumerImpl", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TelemetryConsumerImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.TelemetryConsumerImpl.create(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.TelemetryConsumerImpl", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f4a667aab814e51988d87af2712d6c1faa112871"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 47, "deletions": 84, "lines": 131, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 17, "UPD": 3, "INS": 6, "MOV": 4, "DEL": 4, "spoonFilesChanged": 4, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.TelemetryConsumerImpl.create(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.EventConsumerImpl.create(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,java.lang.String,java.util.function.BiConsumer,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.AbstractConsumer.flow(int)", "org.eclipse.hono.client.impl.TelemetryConsumerImpl", "org.eclipse.hono.client.impl.AbstractConsumer.createConsumer(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,java.lang.String,java.lang.String,io.vertx.proton.ProtonQoS,java.util.function.BiConsumer)", "org.eclipse.hono.client.impl.EventConsumerImpl", "org.eclipse.hono.client.impl.AbstractHonoClient.createReceiver(io.vertx.core.Context,org.eclipse.hono.config.ClientConfigProperties,io.vertx.proton.ProtonConnection,java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.proton.ProtonMessageHandler,io.vertx.core.Handler)"]}, {"title": "Connections don't seem to re-connect", "body": "When testing Hono I ran into the following scenario, the message flow works fine until the internal token expires. This will cause the connection to the adapter be terminated. The service should re-connect automatically but this doesn't seem to work. Instead I do see the following messages in the log file:\r\n\r\n~~~\r\n17:08:17.229 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - cannot process message for device [tenantId: DEFAULT_TENANT, deviceId: hono-demo-1-simulator-http-47-z6dh4-84, endpoint: telemetry]: null\r\n17:08:17.229 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - cannot process message for device [tenantId: DEFAULT_TENANT, deviceId: hono-demo-1-simulator-http-47-zkvfp-394, endpoint: telemetry]: null\r\n17:08:17.230 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - cannot process message for device [tenantId: DEFAULT_TENANT, deviceId: hono-demo-1-simulator-http-47-kx8g6-225, endpoint: telemetry]: null\r\n17:08:17.231 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - cannot process message for device [tenantId: DEFAULT_TENANT, deviceId: hono-demo-1-simulator-http-47-llk7p-290, endpoint: telemetry]: null\r\n17:08:17.231 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - cannot process message for device [tenantId: DEFAULT_TENANT, deviceId: hono-demo-1-simulator-http-47-htmqr-217, endpoint: telemetry]: null\r\n17:08:17.232 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - cannot process message for device [tenantId: DEFAULT_TENANT, deviceId: hono-demo-1-simulator-http-47-2db2j-169, endpoint: telemetry]: null\r\n17:08:17.232 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - cannot process message for device [tenantId: DEFAULT_TENANT, deviceId: hono-demo-1-simulator-http-47-4tmkg-330, endpoint: telemetry]: null\r\n17:08:17.232 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - cannot process message for device [tenantId: DEFAULT_TENANT, deviceId: hono-demo-1-simulator-http-47-z6dh4-460, endpoint: telemetry]: null\r\n~~~\r\n\r\nThe location which seems to map is in `org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter.doUploadMessage(RoutingContext, String, String, Buffer, String, Future<MessageSender>, String)` on line 494. A message of `null` most often indicates a null pointer exception.", "url": "https://github.com/eclipse/hono/issues/457", "user": "ctron", "labels": ["Client", "bug"], "created": "2018-01-22 17:10:46", "closed": "2018-02-19 08:29:54", "commits": {"1b961c47237c925aa24631cbb991a5681c8229ae": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 27.00027777777778, "commitsDetails": [{"commitHash": "1b961c47237c925aa24631cbb991a5681c8229ae", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["e511e4b3db172c86498c7a3ca755e77536d26ccf"], "nameRev": "1b961c47237c925aa24631cbb991a5681c8229ae tags/0.5~67", "commitMessage": "[#457] Clearing out connection after loss of connection\n\nThis change sets the connection to 'null' when it is being handled is\ndisconnected. This will ensure future checks on the connection won't\nconsider it usable.\n\nThere is also a change in the\nDisconnectHandlerProvidingConnectionFactory which takes care of first\nsending out the events and then updating the latch. Which might cause a\nrace condition issue between the unit test and the connection factory.\nIf the latch is updated in the connection factory, the handler still\nis not executed and the client will still be disconnected. So if the\nfollowing call to \"getOr\" is \"too quick\" then it will fail.\n\nSigned-off-by: Jens Reimann <jreimann@redhat.com>", "commitDateTime": "2018-01-25 14:30:52", "authoredDateTime": "2018-01-25 09:16:52", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoClientImpl.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/HonoClientImplTest.java", "insertions": 4, "deletions": 3, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoClientImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.handleConnectionLoss(io.vertx.core.Handler)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HonoClientImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.DisconnectHandlerProvidingConnectionFactory.connect(io.vertx.proton.ProtonClientOptions,java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1b961c47237c925aa24631cbb991a5681c8229ae"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 2, "lines": 9, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.HonoClientImpl.handleConnectionLoss(io.vertx.core.Handler)"]}, {"title": "AbstractRequestResponseClient does not handle rejected request messages", "body": "The request/response client currently does not register a disposition handler when sending a request message to a service. Thus, the client does not handle rejected messages properly, e.g. because of malformed payload. \r\nThe client should fail the result future if the service rejects a request. ", "url": "https://github.com/eclipse/hono/issues/456", "user": "sophokles73", "labels": ["Client", "bug"], "created": "2018-01-22 16:40:06", "closed": "2018-01-23 17:00:17", "commits": {"5b8effa04711dc097826d78eec0d5720f7a081d2": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "5b8effa04711dc097826d78eec0d5720f7a081d2", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["1f2d56ed5e33dceec00235a9b0bdc45702004e09"], "nameRev": "5b8effa04711dc097826d78eec0d5720f7a081d2 tags/0.5~77", "commitMessage": "[#456] Fail result handler if service rejects request message.\n\nAbstractRequestResponseClient now properly cancels a request and fails\nthe result handler if the service does not accept the request message,\ne.g. because it is malformed.\n\nFixes #456.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-01-23 17:59:41", "authoredDateTime": "2018-01-23 17:59:08", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractRequestResponseClient.java", "insertions": 34, "deletions": 7, "lines": 41}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/AbstractRequestResponseClientTest.java", "insertions": 47, "deletions": 6, "lines": 53}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/RegistrationClientImplTest.java", "insertions": 4, "deletions": 2, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractRequestResponseClient.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClient.cancelRequest(java.lang.String,io.vertx.core.AsyncResult)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClient.sendRequest(org.apache.qpid.proton.message.Message,io.vertx.core.Handler)", "TOT": 10, "UPD": 4, "INS": 1, "MOV": 4, "DEL": 1}]}, {"spoonFilePath": "AbstractRequestResponseClientTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClientTest.testCreateAndSendRequestFailsWithServerErrorExceptionIfSendQueueFull(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClientTest.testHandleResponseInvokesHandlerForMatchingCorrelationId(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClientTest.testCancelRequestFailsResponseHandler(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClientTest.testCreateAndSendRequestFailsIfSenderIsNotOpen(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClientTest.testCreateAndSendRequestFailsIfReceiverIsNotOpen(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClientTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClientTest.testCreateAndSendRequestFailsOnRejectedMessage(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClientTest.testCreateAndSendRequestSendsProperRequestMessage(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RegistrationClientImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.RegistrationClientImplTest.testAssertRegistrationAddsInfoOnCacheMiss(io.vertx.ext.unit.TestContext)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.RegistrationClientImplTest.testAssertRegistrationInvokesServiceOnIfNoCacheConfigured(io.vertx.ext.unit.TestContext)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5b8effa04711dc097826d78eec0d5720f7a081d2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 34, "deletions": 7, "lines": 41, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 11, "UPD": 5, "INS": 1, "MOV": 4, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.AbstractRequestResponseClient.cancelRequest(java.lang.String,io.vertx.core.AsyncResult)", "org.eclipse.hono.client.impl.AbstractRequestResponseClient.sendRequest(org.apache.qpid.proton.message.Message,io.vertx.core.Handler)"]}, {"title": "Possible memory leak with `TelemetrySenderImpl`", "body": "While testing Hono I stumbled over the situation that the Hono HTTP adapter runs into memory issues. Peeking at the heap I can see a high number of instances of the `TelemetrySenderImpl`:\r\n\r\n~~~\r\nsh-4.2$ jmap -histo 1  | head -n 30\r\n\r\n num     #instances         #bytes  class name\r\n----------------------------------------------\r\n   1:        306888       31552608  [B\r\n   2:        273952       26299392  org.apache.qpid.proton.engine.impl.DeliveryImpl\r\n   3:        343058       25441536  [C\r\n   4:        273952        8766464  org.apache.qpid.proton.engine.impl.TransportDelivery\r\n   5:        330609        7934616  java.lang.String\r\n   6:        273952        6574848  io.vertx.proton.impl.ProtonDeliveryImpl\r\n   7:        273309        6559416  org.eclipse.hono.client.impl.TelemetrySenderImpl$$Lambda$180/1997786804\r\n   8:        284584        4553344  org.apache.qpid.proton.amqp.UnsignedInteger\r\n   9:         16953        3474568  [I\r\n  10:         14247        1534456  [Ljava.lang.Object;\r\n  11:          7507         834672  java.lang.Class\r\n  12:         19613         627616  java.util.concurrent.ConcurrentHashMap$Node\r\n  13:          8313         532032  java.nio.DirectByteBuffer\r\n  14:         10630         510240  java.nio.HeapByteBuffer\r\n  15:          5433         378288  [Ljava.util.HashMap$Node;\r\n  16:         10935         349920  java.util.HashMap$Node\r\n  17:          7718         308720  java.util.LinkedHashMap$Entry\r\n  18:         17963         287408  java.lang.Object\r\n  19:           386         212272  [Ljava.nio.channels.SelectionKey;\r\n  20:          4170         200160  io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf\r\n  21:          2186         192368  java.lang.reflect.Method\r\n  22:          3421         191576  java.util.LinkedHashMap\r\n  23:           133         177968  [Ljava.util.concurrent.ConcurrentHashMap$Node;\r\n  24:          3654         175392  java.util.HashMap\r\n  25:          4221         168840  io.netty.handler.codec.DefaultHeaders$HeaderEntry\r\n  26:           234         153504  io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue\r\n  27:          4769         152608  java.lang.ref.WeakReference\r\n~~~\r\n\r\nLooking at the code I spotted the following in `org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateSender(String, Consumer<Handler<AsyncResult<MessageSender>>>, Handler<AsyncResult<MessageSender>>)`:\r\n\r\n~~~java\r\n\u2026\r\n} else if (!creationLocks.computeIfAbsent(key, k -> Boolean.FALSE)) {\r\n\r\n  // register a handler to be notified if the underlying connection to the server fails\r\n  // so that we can fail the result handler passed in\r\n  final Handler<Void> connectionFailureHandler = connectionLost -> {\r\n  // remove lock so that next attempt to open a sender doesn't fail\r\n  creationLocks.remove(key);\r\n  resultHandler.handle(Future.failedFuture(\r\n    new ServerErrorException(HttpURLConnection.HTTP_UNAVAILABLE, \"connection to server lost\")));\r\n  };\r\n  creationRequests.add(connectionFailureHandler);\r\n  creationLocks.put(key, Boolean.TRUE);\r\n  LOG.debug(\"creating new message sender for {}\", key);\r\n\u2026\r\n~~~\r\n\r\nTo me it looks like as if this method gets called un-synchronized from various threads. So between the \"computeIfAbsent\" (which will always return false) and the \"put\", it might be that multiple callers might have triggered a new connection.\r\n\r\nChanging it to `creationLocks.putIfAbsent(key, k -> Boolean.TRUE) == null` should fix this issue as only the first caller will pass. After that the result will be non-null until the key is removed by the call to `remove`. Of course that would change the meaning of the value carried by the map. So maybe switching this to `Map<String,Object>` would be more appropriate then.", "url": "https://github.com/eclipse/hono/issues/454", "user": "ctron", "labels": ["Client", "bug"], "created": "2018-01-22 15:29:38", "closed": "2018-01-24 09:17:43", "commits": {"1f2d56ed5e33dceec00235a9b0bdc45702004e09": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "1f2d56ed5e33dceec00235a9b0bdc45702004e09", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["a469c6e835b29cb955f8a81ca4c9649bfed7e4b6"], "nameRev": "1f2d56ed5e33dceec00235a9b0bdc45702004e09 tags/0.5~78", "commitMessage": "[#454] Fix memory leak in message sender using handlers\n\nThis change fixes a memory leak by locally settling messages in:\n* EventSenderImpl\n* ForwardingEventDownstreamAdapter\n* TelemetrySenderImp\n\nSigned-off-by: Jens Reimann <jreimann@redhat.com>", "commitDateTime": "2018-01-23 16:56:33", "authoredDateTime": "2018-01-22 16:58:28", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/EventSenderImpl.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/TelemetrySenderImpl.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "services/messaging/src/main/java/org/eclipse/hono/event/impl/ForwardingEventDownstreamAdapter.java", "insertions": 12, "deletions": 2, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EventSenderImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.EventSenderImpl.sendMessage(org.apache.qpid.proton.message.Message)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TelemetrySenderImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.TelemetrySenderImpl.sendMessage(org.apache.qpid.proton.message.Message)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ForwardingEventDownstreamAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.event.impl.ForwardingEventDownstreamAdapter.forwardMessage(io.vertx.proton.ProtonSender,org.apache.qpid.proton.message.Message,io.vertx.proton.ProtonDelivery)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1f2d56ed5e33dceec00235a9b0bdc45702004e09"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 20, "deletions": 4, "lines": 24, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl", "services/messaging/src/main/java/org/eclipse/hono/event/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.event.impl.ForwardingEventDownstreamAdapter.forwardMessage(io.vertx.proton.ProtonSender,org.apache.qpid.proton.message.Message,io.vertx.proton.ProtonDelivery)", "org.eclipse.hono.client.impl.EventSenderImpl.sendMessage(org.apache.qpid.proton.message.Message)", "org.eclipse.hono.client.impl.TelemetrySenderImpl.sendMessage(org.apache.qpid.proton.message.Message)"]}, {"title": "Registration assertions seem not to work with the HTTP adapter", "body": "The HTTP adapter configuration allows to enable \"device registry asertions\" [1] using `HONO_HTTP_REG_ASSERTION_ENABLED`, which should return a Java Web Token in the HTTP header `Hono-Reg-Assertion`.\r\n\r\nHowever enabling this option doesn't change the HTTP response and also can't I find any reference in the Hono source code which would take care of this functionality. The HTTP header defined is defined in `AbstractVertxBasedHttpProtocolAdapter.java` but never referenced.\r\n\r\nMaybe I did something wrong or overlooked it.\r\n\r\n[1] https://www.eclipse.org/hono/user-guide/http-adapter/#service-configuration", "url": "https://github.com/eclipse/hono/issues/452", "user": "ctron", "labels": ["HTTP Adapter", "bug"], "created": "2018-01-17 16:35:14", "closed": "2018-01-18 08:33:36", "commits": {"86de18e4a3cc8c3f581cfc8976f5518fa03a716c": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "86de18e4a3cc8c3f581cfc8976f5518fa03a716c", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["d06678c761ab0413dbab2c1494d497711d58751d"], "nameRev": "86de18e4a3cc8c3f581cfc8976f5518fa03a716c tags/0.5~82", "commitMessage": "[#452] Update documentation.\n\nSupport for devices including a registration assertion token in the HTTP\nrequest headers had been removed several weeks ago. The property for\nenabling/disabling it has now also been removed from the HTTP adapter\ndocumentation.\n\nFixes #452.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-01-18 09:33:22", "authoredDateTime": "2018-01-18 09:32:59", "commitGitStats": [{"filePath": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapter.java", "insertions": 4, "deletions": 14, "lines": 18}, {"filePath": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/HttpProtocolAdapterProperties.java", "insertions": 2, "deletions": 26, "lines": 28}, {"filePath": "site/content/user-guide/http-adapter.md", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractVertxBasedHttpProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "HttpProtocolAdapterProperties.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.http.HttpProtocolAdapterProperties", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.http.HttpProtocolAdapterProperties.isRegAssertionEnabled()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.adapter.http.HttpProtocolAdapterProperties.setRegAssertionEnabled(boolean)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["86de18e4a3cc8c3f581cfc8976f5518fa03a716c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 40, "lines": 46, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 5, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.http.HttpProtocolAdapterProperties.setRegAssertionEnabled(boolean)", "org.eclipse.hono.adapter.http.HttpProtocolAdapterProperties", "org.eclipse.hono.adapter.http.HttpProtocolAdapterProperties.isRegAssertionEnabled()", "org.eclipse.hono.adapter.http.AbstractVertxBasedHttpProtocolAdapter"]}, {"title": "Error initializing device registry in OpenShift", "body": "When running the latest master on OpenShift (Minishift), I'm getting device registry stuck in the \"Pod Initializing\" phase with the following error\r\n\r\n`E0115 12:12:19.364689    2941 kuberuntime_manager.go:662] Error running pod \"hono-service-device-registry-1-x099z_hono(b4682834-f9ec-11e7-9c2b-9a0ed4a75289)\" init container \"copy-example-credentials\", restarting: &container.ContainerStatus{ID:container.ContainerID{Type:\"docker\", ID:\"f3a33f8dd8e05e1e056eb6b42136c049751651f3ebf33e0293b0a358ff3d9a7c\"}, Name:\"copy-example-credentials\", State:\"exited\", CreatedAt:time.Time{sec:63651615121, nsec:935024115, loc:(*time.Location)(0xc042180)}, StartedAt:time.Time{sec:63651615122, nsec:399034980, loc:(*time.Location)(0xc042180)}, FinishedAt:time.Time{sec:63651615122, nsec:475141915, loc:(*time.Location)(0xc042180)}, ExitCode:1, Image:\"busybox:latest\", ImageID:\"docker-pullable://busybox@sha256:436bbf48aa1198ebca8eac0ad9a9c80c8929d9242e02608f76ce18334e0cfe6a\", Hash:0x1d55faca, RestartCount:4, Reason:\"Error\", Message:\"\"}`\r\n\r\nThis is a placeholder to investigate this further.", "url": "https://github.com/eclipse/hono/issues/450", "user": "dejanb", "labels": ["bug"], "created": "2018-01-15 13:37:45", "closed": "2018-01-15 16:55:24", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Unble to publish MQTT messages", "body": "Currently I am unable to publish MQTT messages. I think this issue was introduced by commit f7924edaf94dfc59532d2f6c6717dd79459ec1bd\r\n\r\nThe behavior is see is:\r\n\r\nIn the MQT adapter:\r\n~~~\r\n13:42:20.473 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing message sender [target: telemetry/DEFAULT_TENANT, credit: 1]\r\n13:42:20.474 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.impl.TelemetrySenderImpl - message [message ID: TelemetrySenderImpl-422] rejected by peer: amqp:decode-error, malformed message \r\n~~~\r\n\r\nAnd in the messaging service:\r\n\r\n~~~\r\n14:27:42.474 [vert.x-eventloop-thread-2] DEBUG o.e.h.m.HonoMessagingMessageFilter - message [TelemetrySenderImpl-300] has no content type\r\n~~~\r\n\r\nNow the check in `org.eclipse.hono.messaging.HonoMessagingMessageFilter.verify(ResourceIdentifier, Message)` requires the \"content type\" to be set:\r\n\r\n~~~java\r\n} else if (msg.getContentType() == null) {\r\n  LOG.debug(\"message [{}] has no content type\", msg.getMessageId());\r\n  return false;\r\n~~~\r\n\r\nHowever the MQTT adapter only calls `org.eclipse.hono.service.AbstractProtocolAdapterBase.newMessage(String, String)` which will always provide `null` as content type.", "url": "https://github.com/eclipse/hono/issues/449", "user": "ctron", "labels": ["MQTT Adapter", "bug"], "created": "2018-01-12 14:35:05", "closed": "2018-01-12 15:14:48", "commits": {"369a9c3d26b69e48e1019f05b24c160912144222": {"commitGHEventType": "closed", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "369a9c3d26b69e48e1019f05b24c160912144222", "commitGHEventType": "closed", "commitUser": "sophokles73", "commitParents": ["f819543dd62678eb529afb4a351a7dc38c04c3d3"], "nameRev": "369a9c3d26b69e48e1019f05b24c160912144222 tags/0.5~87", "commitMessage": "[#449] Make sure to set fall back content type on downstream messages.\n\nWhen a device does not specify a content type for a message and there is\nno default content-type registered for the device, the protocol adapters\nset the message's content-type to \"application/octet-stream\".\n\nFixes #449.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2018-01-12 16:14:29", "authoredDateTime": "2018-01-12 16:14:04", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/AbstractProtocolAdapterBase.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/AbstractProtocolAdapterBaseTest.java", "insertions": 13, "deletions": 0, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractProtocolAdapterBase.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBase.addProperties(org.apache.qpid.proton.message.Message,io.vertx.core.json.JsonObject)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractProtocolAdapterBaseTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBaseTest.testAddPropertiesAddsFallbackContentType()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["369a9c3d26b69e48e1019f05b24c160912144222"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 0, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service"], "changesInPackagesSPOON": ["org.eclipse.hono.service.AbstractProtocolAdapterBase.addProperties(org.apache.qpid.proton.message.Message,io.vertx.core.json.JsonObject)"]}, {"title": "HTTP adapter does not wait for downstream to settle and accept event", "body": "The HTTP adapter currently sends a 202 Accepted response to the client as soon as it has been able to forward a message downstream. This is correct behavior for telemetry messages but for events the adapter needs to wait for the downstream container to accept the message, i.e. it needs to wait for the message being settled with the *accepted* outcome.", "url": "https://github.com/eclipse/hono/issues/442", "user": "sophokles73", "labels": ["HTTP Adapter", "bug"], "created": "2018-01-01 10:44:34", "closed": "2018-01-10 15:48:46", "commits": {"8ea6ba0125cad7cfa2940faf64cd100104491958": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "8ea6ba0125cad7cfa2940faf64cd100104491958", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["22af84765043b8a0cd64af24e69bd8e583add3b8"], "nameRev": "8ea6ba0125cad7cfa2940faf64cd100104491958 tags/0.5~98", "commitMessage": "[#443, #442] Move disposition handling to MessageSender implementation.\n\nSo far some of the MessageSender interface's methods allowed to pass in\na disposition handler which was responsible for handling the delivery\nupdates from a downstream container. This way, the delivery semantics of\nthe particular sender implementation (Telemetry vs. Event) had to be\nprovided/implemented clients using MessageSender instances. From an\narchitectural point of view this didn't make much sense because it\nclearly contradicted the principle of encapsulation.\n\nIn order to move the responsibility for implementing the delivery\nsemantics back to the MessageSender implementations, the MessageSender's\noperations have been changed to no longer support the passing in of a\ndisposition handler. In addition, all methods now return a Future\nindicating the outcome of the operation according to the\nimplementation's specific delivery semantics, i.e. the\nTelemetrySenderImpl now returns a succeeded future if credit is\navailable without waiting for the message being settled and accepted\nwhereas the EventSenderImpl now returns an incomplete future which will\ncomplete successfully once the message has been accepted by a downstream\npeer.\n\nThis way, clients using MessageSender no longer need to bother about the\nnitty-gritty of how to implement the delivery semantics correctly but we\nhave instead encapsulated the disposition handling in one central place\n(where it belongs).", "commitDateTime": "2018-01-10 16:47:24", "authoredDateTime": "2018-01-08 07:05:30", "commitGitStats": [{"filePath": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapter.java", "insertions": 22, "deletions": 26, "lines": 48}, {"filePath": "adapters/http-vertx-base/src/test/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapterTest.java", "insertions": 139, "deletions": 11, "lines": 150}, {"filePath": "adapters/http-vertx-base/src/test/resources/logback-test.xml", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapter.java", "insertions": 7, "deletions": 59, "lines": 66}, {"filePath": "adapters/mqtt-vertx-base/src/test/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapterTest.java", "insertions": 163, "deletions": 4, "lines": 167}, {"filePath": "client/src/main/java/org/eclipse/hono/client/MessageSender.java", "insertions": 218, "deletions": 233, "lines": 451}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractSender.java", "insertions": 70, "deletions": 126, "lines": 196}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/EventSenderImpl.java", "insertions": 54, "deletions": 7, "lines": 61}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/TelemetrySenderImpl.java", "insertions": 46, "deletions": 7, "lines": 53}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/EventSenderImplTest.java", "insertions": 159, "deletions": 0, "lines": 159}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/TelemetrySenderImplTest.java", "insertions": 120, "deletions": 0, "lines": 120}, {"filePath": "example/src/main/java/org/eclipse/hono/example/ExampleSender.java", "insertions": 3, "deletions": 11, "lines": 14}, {"filePath": "example/src/main/java/org/eclipse/hono/vertx/example/base/HonoSenderBase.java", "insertions": 36, "deletions": 50, "lines": 86}, {"filePath": "jmeter/src/main/java/org/eclipse/hono/jmeter/client/HonoSender.java", "insertions": 23, "deletions": 16, "lines": 39}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/AbstractProtocolAdapterBase.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "services/messaging/src/test/java/org/eclipse/hono/messaging/StandaloneEventApiTest.java", "insertions": 22, "deletions": 31, "lines": 53}, {"filePath": "site/content/release-notes.md", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/client/ClientTestBase.java", "insertions": 11, "deletions": 33, "lines": 44}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Startup errors not propagated properly", "body": "It looks to me as if startup errors are propagated properly.\r\n\r\nThe following stack trace shows an exception thrown in \"listen\", however this error is not reported to the application startup and the application startup times out.\r\n\r\nThe stack trace shown is created by a manual \"catch\" which I added:\r\n\r\n~~~\r\n13:45:16.830 [vert.x-eventloop-thread-1] INFO  o.e.h.a.m.i.VertxBasedMqttProtocolAdapter - limiting size of inbound message payload to 2048 bytes\r\n13:45:16.833 [vert.x-eventloop-thread-1] INFO  o.e.h.a.m.i.VertxBasedMqttProtocolAdapter - Server uses secure standard port 8883\r\n13:45:16.833 [vert.x-eventloop-thread-1] DEBUG o.e.h.a.m.i.VertxBasedMqttProtocolAdapter - Start binding secure server\r\n13:45:16.841 [vert.x-eventloop-thread-1] DEBUG o.e.h.a.m.i.VertxBasedMqttProtocolAdapter - Dive into listen\r\n13:45:16.877 [vert.x-eventloop-thread-1] ERROR o.e.h.a.m.i.VertxBasedMqttProtocolAdapter - Problem HERE\r\nio.vertx.core.VertxException: io.vertx.core.file.FileSystemException: java.nio.file.NoSuchFileException: /etc/secrets/tls.key\r\n\tat io.vertx.core.net.impl.SSLHelper.createContext(SSLHelper.java:305)\r\n\tat io.vertx.core.net.impl.SSLHelper.getContext(SSLHelper.java:447)\r\n\tat io.vertx.core.net.impl.SSLHelper.validate(SSLHelper.java:467)\r\n\tat io.vertx.core.net.impl.NetServerImpl.listen(NetServerImpl.java:177)\r\n\tat io.vertx.core.net.impl.NetServerImpl.listen(NetServerImpl.java:320)\r\n\tat io.vertx.core.net.impl.NetServerImpl.listen(NetServerImpl.java:336)\r\n\tat io.vertx.mqtt.impl.MqttServerImpl.listen(MqttServerImpl.java:95)\r\n\tat io.vertx.mqtt.impl.MqttServerImpl.listen(MqttServerImpl.java:69)\r\n\tat io.vertx.mqtt.impl.MqttServerImpl.listen(MqttServerImpl.java:74)\r\n\tat org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.bindMqttServer(AbstractVertxBasedMqttProtocolAdapter.java:175)\r\n\tat org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.bindSecureMqttServer(AbstractVertxBasedMqttProtocolAdapter.java:133)\r\n\tat org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.lambda$doStart$3(AbstractVertxBasedMqttProtocolAdapter.java:203)\r\n\tat io.vertx.core.Future.lambda$compose$1(Future.java:270)\r\n\tat io.vertx.core.impl.FutureImpl.setHandler(FutureImpl.java:81)\r\n\tat io.vertx.core.Future.compose(Future.java:266)\r\n\tat org.eclipse.hono.adapter.mqtt.AbstractVertxBasedMqttProtocolAdapter.doStart(AbstractVertxBasedMqttProtocolAdapter.java:203)\r\n\tat org.eclipse.hono.service.AbstractProtocolAdapterBase.startInternal(AbstractProtocolAdapterBase.java:161)\r\n\tat org.eclipse.hono.service.AbstractServiceBase.start(AbstractServiceBase.java:38)\r\n\tat io.vertx.core.impl.DeploymentManager.lambda$doDeploy$10(DeploymentManager.java:481)\r\n\tat io.vertx.core.impl.ContextImpl.lambda$wrapTask$2(ContextImpl.java:344)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: io.vertx.core.file.FileSystemException: java.nio.file.NoSuchFileException: /etc/secrets/tls.key\r\n\tat io.vertx.core.file.impl.FileSystemImpl$13.perform(FileSystemImpl.java:745)\r\n\tat io.vertx.core.file.impl.FileSystemImpl$13.perform(FileSystemImpl.java:737)\r\n\tat io.vertx.core.file.impl.FileSystemImpl.readFileBlocking(FileSystemImpl.java:301)\r\n\tat io.vertx.core.net.impl.KeyStoreHelper.create(KeyStoreHelper.java:105)\r\n\tat io.vertx.core.net.KeyCertOptions.getKeyManagerFactory(KeyCertOptions.java:47)\r\n\tat io.vertx.core.net.impl.SSLHelper.getKeyMgrFactory(SSLHelper.java:310)\r\n\tat io.vertx.core.net.impl.SSLHelper.createContext(SSLHelper.java:263)\r\n\t... 24 common frames omitted\r\nCaused by: java.nio.file.NoSuchFileException: /etc/secrets/tls.key\r\n\tat sun.nio.fs.UnixException.translateToIOException(UnixException.java:86)\r\n\tat sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102)\r\n\tat sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)\r\n\tat sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214)\r\n\tat java.nio.file.Files.newByteChannel(Files.java:361)\r\n\tat java.nio.file.Files.newByteChannel(Files.java:407)\r\n\tat java.nio.file.Files.readAllBytes(Files.java:3152)\r\n\tat io.vertx.core.file.impl.FileSystemImpl$13.perform(FileSystemImpl.java:741)\r\n\t... 30 common frames omitted\r\n13:45:16.878 [vert.x-eventloop-thread-1] DEBUG o.e.h.a.m.i.VertxBasedMqttProtocolAdapter - Returing to caller\r\n13:45:17.776 [vert.x-eventloop-thread-0] INFO  o.e.h.s.a.d.UsernamePasswordAuthProvider - connected to Credentials service\r\n13:45:36.845 [main] ERROR o.e.h.a.m.i.Application$$EnhancerBySpringCGLIB$$4cb4b561 - startup timed out after 20 seconds, shutting down ...\r\n13:45:36.849 [main] DEBUG o.e.h.a.m.i.Application$$EnhancerBySpringCGLIB$$4cb4b561 - shutting down application...\r\n13:45:36.898 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - lost connection to server [hono-service-device-registry.hono.svc:5671]\r\n13:45:36.908 [main] INFO  o.e.h.a.m.i.Application$$EnhancerBySpringCGLIB$$4cb4b561 - application has been shut down successfully\r\n~~~", "url": "https://github.com/eclipse/hono/issues/432", "user": "ctron", "labels": ["bug"], "created": "2017-12-06 13:58:29", "closed": "2018-04-03 09:44:52", "commits": {}, "ttf": 117.00027777777778, "commitsDetails": []}, {"title": "REST Adapter: returns 500 when credentialsClient has no credits yet", "body": "During the tests of nightly version after fix of #391, I found a  next problem. The REST Adapter returns now error code 500. \r\nSee attached log of REST Adapter\r\n[rest-adapter.log](https://github.com/eclipse/hono/files/1501627/rest-adapter.log)", "url": "https://github.com/eclipse/hono/issues/418", "user": "herfort", "labels": ["HTTP Adapter", "bug"], "created": "2017-11-24 12:29:04", "closed": "2017-11-24 14:42:17", "commits": {"609d20a2ee4a2eab7e1fe0f0b9b9c06496125150": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "609d20a2ee4a2eab7e1fe0f0b9b9c06496125150", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["2c97ab6523ce5395b25f54b7d8f9606dcd78f5fa"], "nameRev": "609d20a2ee4a2eab7e1fe0f0b9b9c06496125150 tags/0.5~223", "commitMessage": "[#418] Make sure that futures are failed with specific exceptions.\n\nHonoClientImpl and CredentialsApiAuthProvider now always fail futures\nwith specific Client or ServerErrorExceptions including an error code.\nThis way, the REST adapter will return a proper response to clients\ninstead of returning a generic 500 Internal Server Error.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2017-11-24 15:29:18", "authoredDateTime": "2017-11-24 15:29:18", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractHonoClient.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoClientImpl.java", "insertions": 13, "deletions": 9, "lines": 22}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/HonoClientImplTest.java", "insertions": 13, "deletions": 12, "lines": 25}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/auth/device/CredentialsApiAuthProvider.java", "insertions": 11, "deletions": 8, "lines": 19}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/auth/device/CredentialsApiAuthProviderTest.java", "insertions": 33, "deletions": 3, "lines": 36}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractHonoClient.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractHonoClient.createSender(io.vertx.core.Context,io.vertx.proton.ProtonConnection,java.lang.String,io.vertx.proton.ProtonQoS,long,io.vertx.core.Handler)", "TOT": 7, "UPD": 3, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "HonoClientImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.connect(io.vertx.proton.ProtonClientOptions,org.eclipse.hono.client.impl.Handler,org.eclipse.hono.client.impl.Handler)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.reconnect(org.eclipse.hono.client.impl.Handler,org.eclipse.hono.client.impl.Handler)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateSender(java.lang.String,java.util.function.Consumer,org.eclipse.hono.client.impl.Handler)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.createTelemetryConsumer(java.lang.String,int,java.util.function.Consumer,org.eclipse.hono.client.impl.Handler)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.createEventConsumer(java.lang.String,int,java.util.function.BiConsumer,org.eclipse.hono.client.impl.Handler)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateRequestResponseClient(java.lang.String,java.util.function.Consumer,org.eclipse.hono.client.impl.Handler)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "HonoClientImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testGetOrCreateRequestResponseClientFailsIfInvokedConcurrently(io.vertx.ext.unit.TestContext)", "TOT": 7, "UPD": 4, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testGetOrCreateTelemetrySenderFailsIfInvokedConcurrently(io.vertx.ext.unit.TestContext)", "TOT": 7, "UPD": 4, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "CredentialsApiAuthProvider.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.auth.device.CredentialsApiAuthProvider.authenticate(org.eclipse.hono.service.auth.device.DeviceCredentials,io.vertx.core.Handler)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.auth.device.CredentialsApiAuthProvider.getCredentialsForDevice(org.eclipse.hono.service.auth.device.DeviceCredentials)", "TOT": 12, "UPD": 0, "INS": 6, "MOV": 2, "DEL": 4}, {"spoonMethodName": "org.eclipse.hono.service.auth.device.CredentialsApiAuthProvider.authenticate(io.vertx.core.json.JsonObject,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "CredentialsApiAuthProviderTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.auth.device.CredentialsApiAuthProviderTest.testAuthenticateFailsWithExceptionReportedByCredentialsClient(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.auth.device.CredentialsApiAuthProviderTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.auth.device.CredentialsApiAuthProviderTest.testAuthenticateFailsWith401ForMalformedCredentials(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["609d20a2ee4a2eab7e1fe0f0b9b9c06496125150"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 27, "deletions": 19, "lines": 46, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 40, "UPD": 4, "INS": 17, "MOV": 4, "DEL": 15, "spoonFilesChanged": 3, "spoonMethodsChanged": 10}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl", "service-base/src/main/java/org/eclipse/hono/service/auth/device"], "changesInPackagesSPOON": ["org.eclipse.hono.service.auth.device.CredentialsApiAuthProvider.getCredentialsForDevice(org.eclipse.hono.service.auth.device.DeviceCredentials)", "org.eclipse.hono.client.impl.HonoClientImpl.createTelemetryConsumer(java.lang.String,int,java.util.function.Consumer,org.eclipse.hono.client.impl.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateRequestResponseClient(java.lang.String,java.util.function.Consumer,org.eclipse.hono.client.impl.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.reconnect(org.eclipse.hono.client.impl.Handler,org.eclipse.hono.client.impl.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateSender(java.lang.String,java.util.function.Consumer,org.eclipse.hono.client.impl.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.createEventConsumer(java.lang.String,int,java.util.function.BiConsumer,org.eclipse.hono.client.impl.Handler)", "org.eclipse.hono.client.impl.AbstractHonoClient.createSender(io.vertx.core.Context,io.vertx.proton.ProtonConnection,java.lang.String,io.vertx.proton.ProtonQoS,long,io.vertx.core.Handler)", "org.eclipse.hono.service.auth.device.CredentialsApiAuthProvider.authenticate(org.eclipse.hono.service.auth.device.DeviceCredentials,io.vertx.core.Handler)", "org.eclipse.hono.service.auth.device.CredentialsApiAuthProvider.authenticate(io.vertx.core.json.JsonObject,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.connect(io.vertx.proton.ProtonClientOptions,org.eclipse.hono.client.impl.Handler,org.eclipse.hono.client.impl.Handler)"]}, {"title": "Documentation of Credentails APIs not-before property is incomplete", "body": "https://github.com/eclipse/hono/blob/master/site/content/api/Credentials-API.md#secrets-format\r\n\r\n_ISO 8601 compliant combined date and time representation_\r\n\r\nActually the API only accepts\r\n\r\n_ISO 8601 compliant combined date and time representation in extended format_\r\n\r\nThe examples also use the basic format which is rejected by the API.\r\n\r\nBasic: 20171224T1900Z+0100\r\nExtended: 2017-12-24T19:00:00+01:00", "url": "https://github.com/eclipse/hono/issues/385", "user": "pho-enix", "labels": ["bug", "documentation"], "created": "2017-10-23 10:59:02", "closed": "2017-10-24 06:34:40", "commits": {"d0cda44db1312e7fcd4c75242fb12ee3fe2b3987": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "d0cda44db1312e7fcd4c75242fb12ee3fe2b3987", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["84fb7bf17d4ecd053998b96a1e0aef14dd5669c2"], "nameRev": "d0cda44db1312e7fcd4c75242fb12ee3fe2b3987 tags/0.5-M10~2", "commitMessage": "[#385] Fix documentation of time format accepted by Credentials API.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2017-10-23 14:45:04", "authoredDateTime": "2017-10-23 14:45:04", "commitGitStats": [{"filePath": "site/content/api/Credentials-API.md", "insertions": 5, "deletions": 5, "lines": 10}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d0cda44db1312e7fcd4c75242fb12ee3fe2b3987"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Not able to checkout Hono with Windows anymore", "body": "Hi,\r\n\r\nwith commit [b5aa7c70d4c](https://github.com/eclipse/hono/commit/b5aa7c70d4c5eb92354b09d9bc56eb27d3626540) a file named \"LICENSE\" (uppercase) in folder legal/legal was introduced. However there exists also a folder named \"license\" (lowercase). This does not work with windows and git clone/pull ends with an error because of this.", "url": "https://github.com/eclipse/hono/issues/384", "user": "DanielMaier-BSI", "labels": ["bug"], "created": "2017-10-23 07:29:51", "closed": "2017-10-23 09:21:04", "commits": {"84fb7bf17d4ecd053998b96a1e0aef14dd5669c2": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "84fb7bf17d4ecd053998b96a1e0aef14dd5669c2", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["e5aff80d0c6b7c73e6a16b8ae14011e15dc774f6"], "nameRev": "84fb7bf17d4ecd053998b96a1e0aef14dd5669c2 tags/0.5-M10~3", "commitMessage": "[#384] Fix git problems on Windows when cloning/pulling.\n\nRenamed LICENSE to LICENSE.txt to prevent name collision with license\nfolder on Windows.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2017-10-23 11:17:49", "authoredDateTime": "2017-10-23 11:17:49", "commitGitStats": [{"filePath": "legal/legal/{LICENSE => LICENSE.txt}", "insertions": 0, "deletions": 0, "lines": 0}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["84fb7bf17d4ecd053998b96a1e0aef14dd5669c2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Make Credentials service consider modificationEnabled flag", "body": "The `FileBasedCredentialsService` currently does not consider the value of the `modificationEnabled` configuration property which is supposed to prevent modification (update, remove) of existing credentials. ", "url": "https://github.com/eclipse/hono/issues/381", "user": "sophokles73", "labels": ["Device Registry", "bug"], "created": "2017-10-20 12:46:30", "closed": "2017-10-21 17:13:45", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Status is reported as \"String\" instead of \"int\"", "body": "The Hono documentation states that the \"status\" response will be reported as \"int\" [1]. However, looking inside the application properties of the AMQP message it actually is a \"String\".\r\n\r\n![image](https://user-images.githubusercontent.com/202474/31818740-b3fc1f20-b599-11e7-85d2-231307f773ea.png)\r\n\r\n\r\n[1] https://www.eclipse.org/hono/api/Device-Registration-API/#standard-response-properties", "url": "https://github.com/eclipse/hono/issues/380", "user": "ctron", "labels": ["bug"], "created": "2017-10-20 11:22:32", "closed": "2017-10-20 14:48:12", "commits": {"68883cbfffed2fcde7269ac0a7dbd9f9be7439d8": {"commitGHEventType": "referenced", "commitUser": "sysexcontrol"}, "9010e6aebd48068b7d5cb41006aa6de8a9adde4a": {"commitGHEventType": "referenced", "commitUser": "sysexcontrol"}, "9f8536476182f48a97219edb3e50c75dc3ea49f9": {"commitGHEventType": "referenced", "commitUser": "sysexcontrol"}, "4561472dbf004bd5949b43bf0e6206e223c0fd90": {"commitGHEventType": "referenced", "commitUser": "sysexcontrol"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "68883cbfffed2fcde7269ac0a7dbd9f9be7439d8", "commitGHEventType": "referenced", "commitUser": "sysexcontrol", "commitParents": ["bf0fd163306d4c3798685b022fc8d64961c05cfc"], "nameRev": "68883cbfffed2fcde7269ac0a7dbd9f9be7439d8 tags/0.5-M10~14", "commitMessage": "[#380] Status property in message response changed to type String.\n\nThe description of the Device Registration and Credentials API defined\nthe status in the response message as type \"int\", but the implementation\nuses the type \"String\". This is fixed in the documentation now.\n\nSigned-off-by: Karsten Frank <Karsten.Frank@bosch-si.com>\n", "commitDateTime": "2017-10-20 13:53:58", "authoredDateTime": "2017-10-20 13:53:58", "commitGitStats": [{"filePath": "site/content/api/Credentials-API.md", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9010e6aebd48068b7d5cb41006aa6de8a9adde4a", "commitGHEventType": "referenced", "commitUser": "sysexcontrol", "commitParents": ["68883cbfffed2fcde7269ac0a7dbd9f9be7439d8"], "nameRev": "9010e6aebd48068b7d5cb41006aa6de8a9adde4a tags/0.5-M10~13", "commitMessage": "[#380] Status property in message response changed to type String.\n\nFixed for Device Registration API as well.\n\nSigned-off-by: Karsten Frank <Karsten.Frank@bosch-si.com>\n", "commitDateTime": "2017-10-20 14:31:06", "authoredDateTime": "2017-10-20 14:31:06", "commitGitStats": [{"filePath": "site/content/api/Device-Registration-API.md", "insertions": 13, "deletions": 13, "lines": 26}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9f8536476182f48a97219edb3e50c75dc3ea49f9", "commitGHEventType": "referenced", "commitUser": "sysexcontrol", "commitParents": ["7b8bb1b7de6d4e165f67fb45a270723d96dca4a2"], "nameRev": "9f8536476182f48a97219edb3e50c75dc3ea49f9 tags/0.5-M10~10", "commitMessage": "[#380] Changed type of AMQP app-property 'status' to int.\n\nSince we stick to HTTP status code, it is more appropriate then the\nprevious type String.\n\nSigned-off-by: Karsten Frank <Karsten.Frank@bosch-si.com>\n", "commitDateTime": "2017-10-20 16:42:57", "authoredDateTime": "2017-10-20 16:25:20", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractRequestResponseClient.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/AbstractRequestResponseClientTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/org/eclipse/hono/util/RegistrationConstants.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/org/eclipse/hono/util/RequestResponseApiConstants.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/credentials/CredentialsHttpEndpoint.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/registration/RegistrationHttpEndpoint.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "service-base/src/test/java/org/eclipse/hono/service/credentials/BaseCredentialsServiceTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/jms/RegistrationTestSupport.java", "insertions": 12, "deletions": 4, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractRequestResponseClient.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClient.getRequestResponseResult(org.apache.qpid.proton.message.Message)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "AbstractRequestResponseClientTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClientTest.testHandleResponseInvokesHandlerForMatchingCorrelationId(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RegistrationConstants.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.RegistrationConstants.hasStatus(io.vertx.core.json.JsonObject,int)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RequestResponseApiConstants.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.RequestResponseApiConstants.getAmqpReply(java.lang.String,io.vertx.core.json.JsonObject)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.RequestResponseApiConstants.getAmqpReply(java.lang.String,java.lang.String,java.lang.Object,java.lang.String,java.lang.String,boolean,io.vertx.core.json.JsonObject)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.util.RequestResponseApiConstants.getServiceReplyAsJson(int,java.lang.String,java.lang.String,io.vertx.core.json.JsonObject)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "CredentialsHttpEndpoint.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.credentials.CredentialsHttpEndpoint.doCredentialsAction(io.vertx.ext.web.RoutingContext,io.vertx.core.json.JsonObject,java.util.function.BiConsumer)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "RegistrationHttpEndpoint.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.registration.RegistrationHttpEndpoint.doRegistrationAction(io.vertx.ext.web.RoutingContext,io.vertx.core.json.JsonObject,java.util.function.BiConsumer)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "BaseCredentialsServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.credentials.BaseCredentialsServiceTest.resultWithStatusCode(int)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RegistrationTestSupport.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.jms.RegistrationTestSupport.send(java.lang.String,java.lang.String,java.lang.Integer)", "TOT": 8, "UPD": 3, "INS": 1, "MOV": 1, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.tests.jms.RegistrationTestSupport.getIntProperty(javax.jms.Message,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "4561472dbf004bd5949b43bf0e6206e223c0fd90", "commitGHEventType": "referenced", "commitUser": "sysexcontrol", "commitParents": ["9f8536476182f48a97219edb3e50c75dc3ea49f9"], "nameRev": "4561472dbf004bd5949b43bf0e6206e223c0fd90 tags/0.5-M10~9", "commitMessage": "[#380] Changed type of AMQP app-property 'status' to int in description.\n\nChanged in Device Registration and Credentials API.\nEliminated UTF-8 prefix for string field descriptions.\n\nSigned-off-by: Karsten Frank <Karsten.Frank@bosch-si.com>\n", "commitDateTime": "2017-10-20 16:42:57", "authoredDateTime": "2017-10-20 16:36:10", "commitGitStats": [{"filePath": "site/content/api/Credentials-API.md", "insertions": 24, "deletions": 24, "lines": 48}, {"filePath": "site/content/api/Device-Registration-API.md", "insertions": 13, "deletions": 13, "lines": 26}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["68883cbfffed2fcde7269ac0a7dbd9f9be7439d8", "9f8536476182f48a97219edb3e50c75dc3ea49f9", "4561472dbf004bd5949b43bf0e6206e223c0fd90"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 9, "lines": 18, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 20.0, "UPD": 6.0, "INS": 2.0, "MOV": 7.0, "DEL": 5.0, "spoonFilesChanged": 5, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/org/eclipse/hono/util", "client/src/main/java/org/eclipse/hono/client/impl", "service-base/src/main/java/org/eclipse/hono/service/credentials", "service-base/src/main/java/org/eclipse/hono/service/registration"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.AbstractRequestResponseClient.getRequestResponseResult(org.apache.qpid.proton.message.Message)", "org.eclipse.hono.service.registration.RegistrationHttpEndpoint.doRegistrationAction(io.vertx.ext.web.RoutingContext,io.vertx.core.json.JsonObject,java.util.function.BiConsumer)", "org.eclipse.hono.util.RequestResponseApiConstants.getAmqpReply(java.lang.String,java.lang.String,java.lang.Object,java.lang.String,java.lang.String,boolean,io.vertx.core.json.JsonObject)", "org.eclipse.hono.util.RequestResponseApiConstants.getServiceReplyAsJson(int,java.lang.String,java.lang.String,io.vertx.core.json.JsonObject)", "org.eclipse.hono.service.credentials.CredentialsHttpEndpoint.doCredentialsAction(io.vertx.ext.web.RoutingContext,io.vertx.core.json.JsonObject,java.util.function.BiConsumer)", "org.eclipse.hono.util.RegistrationConstants.hasStatus(io.vertx.core.json.JsonObject,int)", "org.eclipse.hono.util.RequestResponseApiConstants.getAmqpReply(java.lang.String,io.vertx.core.json.JsonObject)"]}, {"title": "MQTT adapter stops working as soon as AMQP credits run out", "body": "Hey,\r\n\r\nI think there's an issue with the current protocol adapter imeplementations.\r\n\r\nI ran some load tests against the mqtt adapter and have some findings. I wonder if there are any configuration gotchas or something I might have missed.\r\n\r\nLet's start with the test scenario:\r\n\r\n6 AWS EC2 instances fire against the hono mqtt adapter using jmeter. Device authentication is enabled (pwd, sha-512). The hono cluster is rather small, 3 t2.medium nodes running kubernetes with 3 masters. \r\nOne message has a 512 byte payload.\r\n\r\nEverything works fine with a total throttled throughput of 200 messages/sec. (10 devices on 1 tenant)\r\nAs soon as I ramp up the load everything breaks (2000 messages/sec total from 10 devices and 2000 messages/sec from 200 devices). \r\n\r\nThe problem as far as I can tell is: \r\n\r\nThe mqtt adapter runs out of credits and closes the connection, see this log message:\r\n\r\nVertxBasedMqttProtocolAdapter - cannot process message for device [tenantId: DEFAULT_TENANT, deviceId: loadTestClient-4, topic: telemetry/DEFAULT_TENANT/loadTestClient-4, QoS: AT_MOST_ONCE, cause: no credit available for sending message\r\n\r\nClosing the conncetion also deletes the registration assertion which in turn makes it necessary to gather the registration data from the device registry service on the next message. The device registry gets overwhelmed by those requests (100k in a 10min test run in my case).\r\nThe messaging service does not receive any more messages the mqtt adapter failes to recover by itself. I would expect the system to behave differently: Drop new messages from the affected tenant, instead it tries to accept them and 'kills' backend services. \r\n\r\nAre there any problems with my setup as far as you can tell? Imo the behavior is not acceptable, as there is a hard limit on throughput that brings down a deployment and requires manual intervention.\r\n\r\nI'm happy to provide more information, just give me some pointers if necessary\r\n\r\nCheers\r\n", "url": "https://github.com/eclipse/hono/issues/365", "user": "alexmabsi", "labels": ["Device Registry", "bug"], "created": "2017-10-10 10:58:58", "closed": "2017-10-17 16:13:09", "commits": {"62cc0abc9c846247fcd8eab65610f5dad6ce9290": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "41067c1d5ff1455d09c3cd2f73616bdfc50ec632": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "62cc0abc9c846247fcd8eab65610f5dad6ce9290", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["0481aafeeb6320842755ef47e9df1f8feaab8525"], "nameRev": "62cc0abc9c846247fcd8eab65610f5dad6ce9290 tags/0.5-M10~41", "commitMessage": "[#365] Do not close connection if message cannot be processed.\n\nThe MQTT protocol adapter now keeps the connection to a device open if\nit cannot process a message published by the device, e.g. because the\nadapter has run out of credit for the downstream links to Hono Messaging\nor Device Registration.\n\nIn addtion, the AbstractRequestResponseClient now actively checks for\navailable credit before sending the request message and immediately\nfails the request if no credit is available.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2017-10-16 14:38:47", "authoredDateTime": "2017-10-12 17:03:11", "commitGitStats": [{"filePath": "adapters/mqtt-vertx/src/main/java/org/eclipse/hono/adapter/mqtt/VertxBasedMqttProtocolAdapter.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractHonoClient.java", "insertions": 100, "deletions": 1, "lines": 101}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractRequestResponseClient.java", "insertions": 172, "deletions": 90, "lines": 262}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractSender.java", "insertions": 1, "deletions": 49, "lines": 50}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/CredentialsClientImpl.java", "insertions": 26, "deletions": 17, "lines": 43}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoClientImpl.java", "insertions": 48, "deletions": 78, "lines": 126}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/RegistrationClientImpl.java", "insertions": 22, "deletions": 18, "lines": 40}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/AbstractRequestResponseClientTest.java", "insertions": 186, "deletions": 0, "lines": 186}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/SimpleRequestResponseResult.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "core/src/main/java/org/eclipse/hono/util/RequestResponseApiConstants.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}, {"commitHash": "41067c1d5ff1455d09c3cd2f73616bdfc50ec632", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["62cc0abc9c846247fcd8eab65610f5dad6ce9290"], "nameRev": "41067c1d5ff1455d09c3cd2f73616bdfc50ec632 tags/0.5-M10~40", "commitMessage": "[#365] Time out unanswered requests after some time.\n\nThe AbstractRequestResponseClient now allows setting a timeout period\nafter which requests are canceled and the result handlers are being\nfailed if no response has been received.\n\nBy default, requests time out after 200 milliseconds.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2017-10-16 14:38:47", "authoredDateTime": "2017-10-12 18:31:12", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/RequestResponseClient.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractRequestResponseClient.java", "insertions": 68, "deletions": 7, "lines": 75}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/AbstractRequestResponseClientTest.java", "insertions": 92, "deletions": 17, "lines": 109}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RequestResponseClient.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.setRequestTimeout(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractRequestResponseClient.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClient", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClient.setRequestTimeout(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClient.cancelRequest(java.lang.String,io.vertx.core.AsyncResult)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClient.createAndSendRequest(java.lang.String,java.util.Map,io.vertx.core.json.JsonObject,io.vertx.core.Handler)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClient.sendRequest(org.apache.qpid.proton.message.Message,io.vertx.core.Handler)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AbstractRequestResponseClientTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClientTest.testCreateAndSendRequestSendsProperRequestMessage(io.vertx.ext.unit.TestContext)", "TOT": 20, "UPD": 2, "INS": 5, "MOV": 10, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClientTest.testHandleResponseInvokesHandlerForMatchingCorrelationId(io.vertx.ext.unit.TestContext)", "TOT": 40, "UPD": 10, "INS": 3, "MOV": 24, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClientTest.testCreateAndSendRequestFailsIfNoCreditAvailable(io.vertx.ext.unit.TestContext)", "TOT": 21, "UPD": 3, "INS": 2, "MOV": 12, "DEL": 4}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClientTest.setUp()", "TOT": 12, "UPD": 0, "INS": 3, "MOV": 8, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClientTest", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClientTest.testCancelRequestFailsResponseHandler(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClientTest.testCreateAndSendRequestFailsIfSenderIsNotOpen(io.vertx.ext.unit.TestContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractRequestResponseClientTest.testCreateAndSendRequestFailsIfReceiverIsNotOpen(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["62cc0abc9c846247fcd8eab65610f5dad6ce9290", "41067c1d5ff1455d09c3cd2f73616bdfc50ec632"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 457, "deletions": 262, "lines": 719, "gitFilesChange": 9}, "spoonStatsSummary": {"TOT": 13.0, "UPD": 0.0, "INS": 9.0, "MOV": 4.0, "DEL": 0.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl", "adapters/mqtt-vertx/src/main/java/org/eclipse/hono/adapter/mqtt", "client/src/main/java/org/eclipse/hono/client", "core/src/main/java/org/eclipse/hono/util"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.AbstractRequestResponseClient.setRequestTimeout(long)", "org.eclipse.hono.client.impl.AbstractRequestResponseClient.createAndSendRequest(java.lang.String,java.util.Map,io.vertx.core.json.JsonObject,io.vertx.core.Handler)", "org.eclipse.hono.client.setRequestTimeout(long)", "org.eclipse.hono.client.impl.AbstractRequestResponseClient.cancelRequest(java.lang.String,io.vertx.core.AsyncResult)", "org.eclipse.hono.client.impl.AbstractRequestResponseClient", "org.eclipse.hono.client.impl.AbstractRequestResponseClient.sendRequest(org.apache.qpid.proton.message.Message,io.vertx.core.Handler)"]}, {"title": "Default for hash-function in Credentials API is not implemented", "body": "The Docs for Credentials API (https://github.com/eclipse/hono/blame/master/site/content/api/Credentials-API.md#L350) state that default value for hash-function is sha256. But if a create credentials without hash-function, it still stays `null` and a device is not able to authenticate.", "url": "https://github.com/eclipse/hono/issues/347", "user": "DanielMaier-BSI", "labels": ["Device Registry", "bug"], "created": "2017-09-21 13:24:13", "closed": "2017-09-22 06:53:27", "commits": {"754d7bdd089d789960317fdc5bff0f8f706a021b": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "7ed4355bbff67b7a303f81ca9f2d1944a4cab26e": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "754d7bdd089d789960317fdc5bff0f8f706a021b", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["ebe66ccec1804caddf60f5594e92713796f5a0ef"], "nameRev": "754d7bdd089d789960317fdc5bff0f8f706a021b tags/0.5-M9~52", "commitMessage": "[#347] Assume sha-256 as hash function if not explicitly set.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2017-09-21 17:34:11", "authoredDateTime": "2017-09-21 17:34:11", "commitGitStats": [{"filePath": "core/src/main/java/org/eclipse/hono/auth/UsernamePasswordCredentials.java", "insertions": 29, "deletions": 26, "lines": 55}, {"filePath": "core/src/main/java/org/eclipse/hono/util/CredentialsConstants.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "core/src/test/java/org/eclipse/hono/auth/UsernamePasswordCredentialsTest.java", "insertions": 82, "deletions": 1, "lines": 83}], "commitSpoonAstDiffStats": [{"spoonFilePath": "UsernamePasswordCredentials.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.auth.UsernamePasswordCredentials.hashPassword(java.lang.String,byte[],java.lang.String)", "TOT": 13, "UPD": 6, "INS": 0, "MOV": 6, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.auth.UsernamePasswordCredentials.matchesCredentials(java.util.Map)", "TOT": 25, "UPD": 12, "INS": 3, "MOV": 7, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.auth.UsernamePasswordCredentials.checkPassword(java.lang.String,byte[],byte[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CredentialsConstants.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.CredentialsConstants", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UsernamePasswordCredentialsTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.auth.UsernamePasswordCredentialsTest.testMatchesCredentialsUsesDefaultHashFunction()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.auth.UsernamePasswordCredentialsTest.testMatchesCredentialsSucceedsForMatchingPassword()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.auth.UsernamePasswordCredentialsTest.testMatchesCredentialsFailsForNonMatchingPassword()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.auth.UsernamePasswordCredentialsTest.getHashedPassword(java.lang.String,byte[],java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "7ed4355bbff67b7a303f81ca9f2d1944a4cab26e", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["754d7bdd089d789960317fdc5bff0f8f706a021b"], "nameRev": "7ed4355bbff67b7a303f81ca9f2d1944a4cab26e tags/0.5-M9~51", "commitMessage": "[#347] Specify use of salt in password hash creation.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2017-09-21 17:46:56", "authoredDateTime": "2017-09-21 17:46:56", "commitGitStats": [{"filePath": "site/content/api/Credentials-API.md", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["754d7bdd089d789960317fdc5bff0f8f706a021b", "7ed4355bbff67b7a303f81ca9f2d1944a4cab26e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 34, "deletions": 26, "lines": 60, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 40.0, "UPD": 18.0, "INS": 5.0, "MOV": 13.0, "DEL": 4.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/org/eclipse/hono/auth", "core/src/main/java/org/eclipse/hono/util"], "changesInPackagesSPOON": ["org.eclipse.hono.auth.UsernamePasswordCredentials.hashPassword(java.lang.String,byte[],java.lang.String)", "org.eclipse.hono.auth.UsernamePasswordCredentials.matchesCredentials(java.util.Map)", "org.eclipse.hono.util.CredentialsConstants", "org.eclipse.hono.auth.UsernamePasswordCredentials.checkPassword(java.lang.String,byte[],byte[])"]}, {"title": "MQTT adapter doesn't send messages anymore after access token expiration", "body": "After the access token expiration and reconnection to the messaging, device registry and credentials services, the MQTT adapter isn't able to publish messages downstream anymore.\r\nIt seems to me that the problem is reaching the Credentials service which doesn't return any information on getting credentials for the device.", "url": "https://github.com/eclipse/hono/issues/343", "user": "ppatierno", "labels": ["Client", "bug"], "created": "2017-09-20 10:34:41", "closed": "2017-09-20 13:52:57", "commits": {"74473cdf07836254746d42a2d24a9a3849cb559e": {"commitGHEventType": "referenced", "commitUser": "sysexcontrol"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "74473cdf07836254746d42a2d24a9a3849cb559e", "commitGHEventType": "referenced", "commitUser": "sysexcontrol", "commitParents": ["fb647f611bf09ad21ccae3ad1ad8f9d1aed7f93a"], "nameRev": "74473cdf07836254746d42a2d24a9a3849cb559e tags/0.5-M9~57", "commitMessage": "[#343] Credentials client not usable after token expiration anymore.\n\nSigned-off-by: Karsten Frank <Karsten.Frank@bosch-si.com>\n", "commitDateTime": "2017-09-20 14:36:29", "authoredDateTime": "2017-09-20 14:36:29", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoClientImpl.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoClientImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.onRemoteDisconnect(io.vertx.proton.ProtonConnection,org.eclipse.hono.client.impl.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["74473cdf07836254746d42a2d24a9a3849cb559e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 0, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.HonoClientImpl.onRemoteDisconnect(io.vertx.proton.ProtonConnection,org.eclipse.hono.client.impl.Handler)"]}, {"title": "Device Registry REST API: \"enabled\" field cannot be created/updated via POST/PUT request with urlencoded form data input", "body": "When trying to create/update device registration data that has \"enabled\" set to \"false\", there is a 400 \"bad request\" response if the request was made with urlencoded form data input.\r\n\r\nExample:\r\n````\r\ncurl -i -X POST -d device_id=4711 -d enabled=false http://127.0.0.1:8080/registration/DEFAULT_TENANT\r\n````\r\n\r\nInternally there is a \"ClassCastException: String cannot be cast to Boolean\" in `BaseRegistrationService.getRequestPayload()`.", "url": "https://github.com/eclipse/hono/issues/316", "user": "calohmn", "labels": ["HTTP Adapter", "bug"], "created": "2017-08-24 11:29:07", "closed": "2017-10-04 12:05:01", "commits": {"70c8d00941d8db8537a5cd43e2506910ab23a8a6": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 41.000277777777775, "commitsDetails": [{"commitHash": "70c8d00941d8db8537a5cd43e2506910ab23a8a6", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["73dbce16d6111629ecf82baa8a309ef267b2ed61"], "nameRev": "70c8d00941d8db8537a5cd43e2506910ab23a8a6 tags/0.5-M9~21", "commitMessage": "[#316] Do not accept form encoded data in Device Registration endpoint.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2017-10-04 14:03:59", "authoredDateTime": "2017-10-04 14:03:59", "commitGitStats": [{"filePath": "service-base/src/main/java/org/eclipse/hono/service/registration/RegistrationHttpEndpoint.java", "insertions": 4, "deletions": 32, "lines": 36}, {"filePath": "site/content/component/device-registry.md", "insertions": 18, "deletions": 31, "lines": 49}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RegistrationHttpEndpoint.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.registration.RegistrationHttpEndpoint.getPayloadForParams(io.vertx.core.http.HttpServerRequest)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.registration.RegistrationHttpEndpoint.addRoutes(io.vertx.ext.web.Router)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.service.registration.RegistrationHttpEndpoint.setResponseBody(io.vertx.core.json.JsonObject,io.vertx.core.http.HttpServerResponse)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.registration.RegistrationHttpEndpoint.doGetDevice(io.vertx.ext.web.RoutingContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.registration.RegistrationHttpEndpoint.doRegisterDeviceForm(io.vertx.ext.web.RoutingContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.registration.RegistrationHttpEndpoint.doUpdateRegistrationForm(io.vertx.ext.web.RoutingContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.registration.RegistrationHttpEndpoint.doRegistrationAction(io.vertx.ext.web.RoutingContext,io.vertx.core.json.JsonObject,java.util.function.BiConsumer)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["70c8d00941d8db8537a5cd43e2506910ab23a8a6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 32, "lines": 36, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 11, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 8, "spoonFilesChanged": 1, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["service-base/src/main/java/org/eclipse/hono/service/registration"], "changesInPackagesSPOON": ["org.eclipse.hono.service.registration.RegistrationHttpEndpoint.doRegistrationAction(io.vertx.ext.web.RoutingContext,io.vertx.core.json.JsonObject,java.util.function.BiConsumer)", "org.eclipse.hono.service.registration.RegistrationHttpEndpoint.addRoutes(io.vertx.ext.web.Router)", "org.eclipse.hono.service.registration.RegistrationHttpEndpoint.doGetDevice(io.vertx.ext.web.RoutingContext)", "org.eclipse.hono.service.registration.RegistrationHttpEndpoint.doRegisterDeviceForm(io.vertx.ext.web.RoutingContext)", "org.eclipse.hono.service.registration.RegistrationHttpEndpoint.getPayloadForParams(io.vertx.core.http.HttpServerRequest)", "org.eclipse.hono.service.registration.RegistrationHttpEndpoint.doUpdateRegistrationForm(io.vertx.ext.web.RoutingContext)", "org.eclipse.hono.service.registration.RegistrationHttpEndpoint.setResponseBody(io.vertx.core.json.JsonObject,io.vertx.core.http.HttpServerResponse)"]}, {"title": "Configuring device registry with sharedSecret that is too short causes no error", "body": "If the device registry is run with a `hono.registry.svc.signing.sharedSecret` config value smaller than 32 bytes, there is no error being thrown and there is also no error in the log output.\r\n\r\nThe `IllegalArgumentException(\"shared secret must be at least 32 bytes\")` thrown in `SignatureSupportingConfigProperties#setSharedSecret` seems to get caught somewhere.\r\n", "url": "https://github.com/eclipse/hono/issues/305", "user": "calohmn", "labels": ["Device Registry", "bug"], "created": "2017-08-10 13:10:41", "closed": "2018-03-05 08:18:33", "commits": {}, "ttf": 206.00027777777777, "commitsDetails": []}, {"title": "Memory leak in Hono components on AMQP connection re-connects", "body": "We have observed a memory leak caused by AMQP connection re-connects.\r\n\r\nTo reproduce:\r\n- Start the Hono components\r\n- Take a heap dump of the REST adapter\r\n- Stop the device registry application\r\n- notice the re-connect attempt log messages in the REST adapter\r\n```\r\n14:30:04.204 [vert.x-eventloop-thread-0] INFO  o.e.hono.client.impl.HonoClientImpl - attempting to re-connect to server [localhost:26671]\r\n14:30:04.204 [vert.x-eventloop-thread-0] INFO  o.e.h.c.ConnectionFactoryImpl - connecting to AMQP 1.0 container [amqps://localhost:26671]\r\n14:30:04.707 [vert.x-eventloop-thread-0] INFO  o.e.h.c.ConnectionFactoryImpl - can't connect to AMQP 1.0 container [amqps://localhost:26671]: Verbindungsaufbau abgelehnt: localhost/127.0.0.1:26671\r\n14:30:04.707 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - scheduling re-connect attempt ...\r\n14:30:05.208 [vert.x-eventloop-thread-0] INFO  o.e.hono.client.impl.HonoClientImpl - attempting to re-connect to server [localhost:26671]\r\n14:30:05.208 [vert.x-eventloop-thread-0] INFO  o.e.h.c.ConnectionFactoryImpl - connecting to AMQP 1.0 container [amqps://localhost:26671]\r\n14:30:05.713 [vert.x-eventloop-thread-0] INFO  o.e.h.c.ConnectionFactoryImpl - can't connect to AMQP 1.0 container [amqps://localhost:26671]: Verbindungsaufbau abgelehnt: localhost/127.0.0.1:26671\r\n14:30:05.713 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - scheduling re-connect attempt ...\r\n14:30:06.213 [vert.x-eventloop-thread-0] INFO  o.e.hono.client.impl.HonoClientImpl - attempting to re-connect to server [localhost:26671]\r\n14:30:06.213 [vert.x-eventloop-thread-0] INFO  o.e.h.c.ConnectionFactoryImpl - connecting to AMQP 1.0 container [amqps://localhost:26671]\r\n14:30:06.717 [vert.x-eventloop-thread-0] INFO  o.e.h.c.ConnectionFactoryImpl - can't connect to AMQP 1.0 container [amqps://localhost:26671]: Verbindungsaufbau abgelehnt: localhost/127.0.0.1:26671\r\n14:30:06.717 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - scheduling re-connect attempt ...\r\n```\r\n- After some time take another heap dump of the REST adapter and compare it to the first one\r\n=> this shows increased memory consumption\r\n\r\nThe heap dump diff shows additional `io.vertx.core.net.impl.NetClientImpl` objects (one for each connection attempt). They look like the main part of the memory leak.", "url": "https://github.com/eclipse/hono/issues/276", "user": "calohmn", "labels": ["bug"], "created": "2017-07-13 13:37:39", "closed": "2017-11-22 13:50:48", "commits": {}, "ttf": 132.00027777777777, "commitsDetails": []}, {"title": "MQTT adapter : keep alive doesn't work properly", "body": "Due to a bug in the current MQTT server 3.4.2 version, the keep alive mechanism doesn't work properly and if a client doesn't send PINGREQ for the specified timeout, the server doesn't close the connection (waiting one and half such timeout) as defined by the MQTT 3.1.1 spec.\r\nIt's fixed in the future 3.5.0 release but we need a workaround today in the MQTT adapter.", "url": "https://github.com/eclipse/hono/issues/273", "user": "ppatierno", "labels": ["MQTT Adapter", "bug"], "created": "2017-07-12 08:21:37", "closed": "2017-07-25 14:13:10", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "OutOfMemoryError in MQTT adapter", "body": "We get a OutOfMemoryError in the current version of MQTT adapter by using with docker stack on AWS.\r\nThe adapter is running without heavy load, 1-3 messages per minute.\r\nFor trace please see attachment:\r\n[mqtt_oom.txt](https://github.com/eclipse/hono/files/1124928/mqtt_oom.txt)\r\n", "url": "https://github.com/eclipse/hono/issues/257", "user": "herfort", "labels": ["MQTT Adapter", "bug"], "created": "2017-07-05 14:14:43", "closed": "2017-07-28 10:17:30", "commits": {"bb0ef5840b1507b28bf993c6d31892667e64d936": {"commitGHEventType": "referenced", "commitUser": "ppatierno"}, "cc17122e90f031cfb3a205d285170464e2e05b63": {"commitGHEventType": "referenced", "commitUser": "ppatierno"}, "756bbc97c68bf62e2117ec5e68787f7ebe23bc90": {"commitGHEventType": "referenced", "commitUser": "ppatierno"}}, "ttf": 22.00027777777778, "commitsDetails": [{"commitHash": "bb0ef5840b1507b28bf993c6d31892667e64d936", "commitGHEventType": "referenced", "commitUser": "ppatierno", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "cc17122e90f031cfb3a205d285170464e2e05b63", "commitGHEventType": "referenced", "commitUser": "ppatierno", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "756bbc97c68bf62e2117ec5e68787f7ebe23bc90", "commitGHEventType": "referenced", "commitUser": "ppatierno", "commitParents": ["1523c4eff596d3cf882b0edec6f4a6282b972bd1"], "nameRev": "756bbc97c68bf62e2117ec5e68787f7ebe23bc90 tags/0.5-M7~44", "commitMessage": "[#257] Removing registration assertion when client disconnects\n\nAvoid to put the registration assertion in the map insteaf of deleting it if client closes connection right after publishing\n", "commitDateTime": "2017-07-12 17:55:31", "authoredDateTime": "2017-07-12 15:30:13", "commitGitStats": [{"filePath": "adapters/mqtt-vertx/src/main/java/org/eclipse/hono/adapter/mqtt/VertxBasedMqttProtocolAdapter.java", "insertions": 13, "deletions": 3, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VertxBasedMqttProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.VertxBasedMqttProtocolAdapter.handleEndpointConnection(io.vertx.mqtt.MqttEndpoint)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.VertxBasedMqttProtocolAdapter.getRegistrationAssertion(io.vertx.mqtt.MqttEndpoint,org.eclipse.hono.util.ResourceIdentifier)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["756bbc97c68bf62e2117ec5e68787f7ebe23bc90"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13.0, "deletions": 3.0, "lines": 16.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5.0, "UPD": 1.0, "INS": 2.0, "MOV": 2.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/mqtt-vertx/src/main/java/org/eclipse/hono/adapter/mqtt"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.mqtt.VertxBasedMqttProtocolAdapter.getRegistrationAssertion(io.vertx.mqtt.MqttEndpoint,org.eclipse.hono.util.ResourceIdentifier)", "org.eclipse.hono.adapter.mqtt.VertxBasedMqttProtocolAdapter.handleEndpointConnection(io.vertx.mqtt.MqttEndpoint)"]}, {"title": "Link counters are not decremented on client disconnect", "body": "If a protocol adapter disconnects (unexpectedly) from the Hono Messaging component, then the counters reflecting the upstream links and downstream senders are not decremented accordingly.", "url": "https://github.com/eclipse/hono/issues/248", "user": "sophokles73", "labels": ["Metrics", "bug"], "created": "2017-06-30 14:01:09", "closed": "2017-07-05 07:52:38", "commits": {"aab3063551b2635814a5959e6ef939b30c7562de": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "aab3063551b2635814a5959e6ef939b30c7562de", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["cba0b46b35743bcc292b3f3665c494724437ed65"], "nameRev": "aab3063551b2635814a5959e6ef939b30c7562de tags/0.5-M6~8", "commitMessage": "[#248] Properly decrement link counters on upstream connection loss.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2017-06-30 17:40:12", "authoredDateTime": "2017-06-30 17:40:12", "commitGitStats": [{"filePath": "services/messaging/src/main/java/org/eclipse/hono/messaging/ForwardingDownstreamAdapter.java", "insertions": 29, "deletions": 29, "lines": 58}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ForwardingDownstreamAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.messaging.ForwardingDownstreamAdapter", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.messaging.ForwardingDownstreamAdapter.onClientDisconnect(java.lang.String)", "TOT": 7, "UPD": 6, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.messaging.ForwardingDownstreamAdapter.addSender(org.eclipse.hono.service.amqp.UpstreamReceiver,io.vertx.proton.ProtonSender)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.messaging.ForwardingDownstreamAdapter.removeSender(org.eclipse.hono.service.amqp.UpstreamReceiver)", "TOT": 8, "UPD": 3, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.messaging.ForwardingDownstreamAdapter.onDisconnectFromDownstreamContainer(io.vertx.proton.ProtonConnection)", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.messaging.ForwardingDownstreamAdapter.isSendersPerConnectionEmpty()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.messaging.ForwardingDownstreamAdapter.closeSender(org.eclipse.hono.service.amqp.UpstreamReceiver)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["aab3063551b2635814a5959e6ef939b30c7562de"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 29, "deletions": 29, "lines": 58, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 32, "UPD": 15, "INS": 4, "MOV": 11, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["services/messaging/src/main/java/org/eclipse/hono/messaging"], "changesInPackagesSPOON": ["org.eclipse.hono.messaging.ForwardingDownstreamAdapter", "org.eclipse.hono.messaging.ForwardingDownstreamAdapter.addSender(org.eclipse.hono.service.amqp.UpstreamReceiver,io.vertx.proton.ProtonSender)", "org.eclipse.hono.messaging.ForwardingDownstreamAdapter.onDisconnectFromDownstreamContainer(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.messaging.ForwardingDownstreamAdapter.onClientDisconnect(java.lang.String)", "org.eclipse.hono.messaging.ForwardingDownstreamAdapter.closeSender(org.eclipse.hono.service.amqp.UpstreamReceiver)", "org.eclipse.hono.messaging.ForwardingDownstreamAdapter.removeSender(org.eclipse.hono.service.amqp.UpstreamReceiver)", "org.eclipse.hono.messaging.ForwardingDownstreamAdapter.isSendersPerConnectionEmpty()"]}, {"title": "Consumer doesn't get messages anymore", "body": "In our Hono setup we have a consumer connected to the dispatch router. There is no log output indicating a lost connection.\r\nAt one point, the consumer didn't get messages anymore.\r\n\r\nLogs from the Hono server/messaging component show that the connection to QPid was lost and re-established in-between:\r\n```\r\n05:03:24.641 [vert.x-eventloop-thread-1] WARN o.e.h.t.i.ForwardingTelemetryDownstreamAdapter - lost connection to downstream container [Hono.Example.Router], closing upstream receivers ...\r\n05:03:24.641 [vert.x-eventloop-thread-1] WARN o.e.h.e.i.ForwardingEventDownstreamAdapter - lost connection to downstream container [Hono.Example.Router], closing upstream receivers ...\r\n05:03:25.142 [vert.x-eventloop-thread-1] INFO o.e.h.t.i.ForwardingTelemetryDownstreamAdapter - attempting to re-connect to downstream container\r\n05:03:25.142 [vert.x-eventloop-thread-1] INFO o.e.h.s.DownstreamClientConfigProperties - using certificates from file [/run/secrets/trusted-certs.pem] as trust anchor\r\n05:03:25.142 [vert.x-eventloop-thread-1] INFO o.e.h.s.DownstreamClientConfigProperties - using key & certificate from PKCS12 key store [/run/secrets/honoKeyStore.p12] for identity\r\n05:03:25.142 [vert.x-eventloop-thread-1] INFO o.e.h.c.ConnectionFactoryImpl - connecting to AMQP 1.0 container [amqps://qdrouter.hono:5673]\r\n05:03:25.149 [vert.x-eventloop-thread-1] INFO o.e.h.e.i.ForwardingEventDownstreamAdapter - attempting to re-connect to downstream container\r\n05:03:25.149 [vert.x-eventloop-thread-1] INFO o.e.h.s.DownstreamClientConfigProperties - using certificates from file [/run/secrets/trusted-certs.pem] as trust anchor\r\n05:03:25.149 [vert.x-eventloop-thread-1] INFO o.e.h.s.DownstreamClientConfigProperties - using key & certificate from PKCS12 key store [/run/secrets/honoKeyStore.p12] for identity\r\n05:03:25.149 [vert.x-eventloop-thread-1] INFO o.e.h.c.ConnectionFactoryImpl - connecting to AMQP 1.0 container [amqps://qdrouter.hono:5673]\r\n05:03:25.272 [vert.x-eventloop-thread-1] INFO o.e.h.c.ConnectionFactoryImpl - connected to AMQP 1.0 container [amqps://qdrouter.hono:5673], opening connection ...\r\n05:03:25.274 [vert.x-eventloop-thread-1] INFO o.e.h.c.ConnectionFactoryImpl - connection to container [Hono.Example.Router] at [amqps://qdrouter.hono:5673] open\r\n05:03:25.277 [vert.x-eventloop-thread-1] INFO o.e.h.c.ConnectionFactoryImpl - connected to AMQP 1.0 container [amqps://qdrouter.hono:5673], opening connection ...\r\n05:03:25.278 [vert.x-eventloop-thread-1] INFO o.e.h.c.ConnectionFactoryImpl - connection to container [Hono.Example.Router] at [amqps://qdrouter.hono:5673] open\r\n```\r\nMore log output here:\r\n[Hono_messaging.txt](https://github.com/eclipse/hono/files/1097407/Hono_messaging.txt)\r\n\r\nA 2nd consumer didn't show this behaviour, it still got messages.", "url": "https://github.com/eclipse/hono/issues/232", "user": "calohmn", "labels": ["bug"], "created": "2017-06-23 09:54:27", "closed": "2017-07-03 16:46:47", "commits": {"43468221cbef4a3fbbc48849791c8b32b1b65777": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "ece23935ace02052d818c027a4885600673cb1d0": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 10.000277777777777, "commitsDetails": [{"commitHash": "43468221cbef4a3fbbc48849791c8b32b1b65777", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["9d59a1023976f84b503513c2c761afefbb373bf9"], "nameRev": "43468221cbef4a3fbbc48849791c8b32b1b65777 tags/0.5-M6~23", "commitMessage": "[#232] Reuse disconnect handler when re-connecting to peer.\n\nThe disconnect handler provided a client in the HonoClient.connect()\ncall is now also used when re-establishing a failed connection, when\nre-trying to connect to a peer or when trying to connect to another\ninstance if a peer closes the connection explicitly.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2017-06-27 17:21:13", "authoredDateTime": "2017-06-27 17:21:13", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoClientImpl.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/HonoClientImplTest.java", "insertions": 57, "deletions": 12, "lines": 69}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoClientImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateSender(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.connect(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.onRemoteClose(io.vertx.core.AsyncResult)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.reconnect(io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.onRemoteClose(io.vertx.core.AsyncResult,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.onRemoteDisconnect(io.vertx.proton.ProtonConnection,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoClientImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.DisconnectHandlerProvidingConnectionFactory", "TOT": 13, "UPD": 4, "INS": 6, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testConnectTriesToReconnectOnFailedConnectAttempt()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.DisconnectHandlerProvidingConnectionFactory.connect(io.vertx.proton.ProtonClientOptions,java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 7, "UPD": 2, "INS": 3, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.DisconnectHandlerProvidingConnectionFactory.await(long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testOnRemoteCloseTriggersReconnection(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testConnectTriesToReconnectOnFailedConnectAttempt(io.vertx.ext.unit.TestContext)", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.DisconnectHandlerProvidingConnectionFactory.getCloseHandler()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "ece23935ace02052d818c027a4885600673cb1d0", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["8a6463f2e35330347359bc291026a9ad96bbe67d"], "nameRev": "ece23935ace02052d818c027a4885600673cb1d0 tags/0.5-M6~21", "commitMessage": "[#232] Make unit test more robust.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2017-06-27 18:05:12", "authoredDateTime": "2017-06-27 18:05:12", "commitGitStats": [{"filePath": "client/src/test/java/org/eclipse/hono/client/impl/HonoClientImplTest.java", "insertions": 6, "deletions": 2, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoClientImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testConnectTriesToReconnectOnFailedConnectAttempt(io.vertx.ext.unit.TestContext)", "TOT": 10, "UPD": 2, "INS": 4, "MOV": 3, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["43468221cbef4a3fbbc48849791c8b32b1b65777", "ece23935ace02052d818c027a4885600673cb1d0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 7, "lines": 14, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 10, "UPD": 1, "INS": 7, "MOV": 0, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.HonoClientImpl.connect(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.reconnect(io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateSender(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.onRemoteDisconnect(io.vertx.proton.ProtonConnection,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.onRemoteClose(io.vertx.core.AsyncResult,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.onRemoteClose(io.vertx.core.AsyncResult)"]}, {"title": "Protocol Adapters can reach state where re-creation of message sender fails", "body": "In our Hono setup we have reached a state where the Protocol Adapters can't re-create a message sender.\r\n\r\nREST Adapter log excerpt:\r\n```\r\n05:03:24.641 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.AbstractSender - sender [telemetry/DEFAULT_TENANT] closed: Error{condition=hono:no-downstream-consumer, description='no downstream consumer available for data', info=null}\r\n05:03:27.319 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - creating new message sender for telemetry/DEFAULT_TENANT\r\n05:03:27.319 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing registration client for [DEFAULT_TENANT]\r\n05:03:27.347 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [correlation ID: reg-client-23, status: 200]\r\n05:03:27.841 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n05:03:27.841 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing registration client for [DEFAULT_TENANT]\r\n05:03:27.841 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - Service unavailable: null\r\n05:03:27.869 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [correlation ID: reg-client-24, status: 200]\r\n05:03:37.118 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n05:03:37.118 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing registration client for [DEFAULT_TENANT]\r\n05:03:37.118 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - Service unavailable: null\r\n05:03:37.147 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [correlation ID: reg-client-25, status: 200]\r\n05:03:47.206 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n05:03:47.206 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing registration client for [DEFAULT_TENANT]\r\n05:03:47.206 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - Service unavailable: null\r\n05:03:47.235 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [correlation ID: reg-client-26, status: 200]\r\n05:03:51.731 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n05:03:51.731 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing registration client for [DEFAULT_TENANT]\r\n05:03:51.731 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - Service unavailable: null\r\n05:03:51.759 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [correlation ID: reg-client-27, status: 200]\r\n05:03:56.738 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n05:03:56.738 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing registration client for [DEFAULT_TENANT]\r\n05:03:56.738 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - Service unavailable: null\r\n05:03:56.766 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [correlation ID: reg-client-28, status: 200]\r\n05:03:57.297 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n05:03:57.297 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing registration client for [DEFAULT_TENANT]\r\n05:03:57.297 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - Service unavailable: null\r\n05:03:57.325 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [correlation ID: reg-client-29, status: 200]\r\n05:04:07.401 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n05:04:07.401 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing registration client for [DEFAULT_TENANT]\r\n05:04:07.401 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - Service unavailable: null\r\n05:04:07.429 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [correlation ID: reg-client-30, status: 200]\r\n05:04:07.673 [vert.x-eventloop-thread-0] INFO o.e.hono.client.impl.HonoClientImpl - Hono server [hono.hono:5671] closed connection with error condition: Error{condition=amqp:resource-limit-exceeded, description='local-idle-timeout expired', info=null}\r\n05:04:07.673 [vert.x-eventloop-thread-0] INFO o.e.hono.client.impl.HonoClientImpl - lost connection to Hono server [hono.hono:5671]\r\n05:04:07.674 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - Service unavailable: null\r\n05:04:07.674 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - scheduling re-connect attempt ...\r\n05:04:07.674 [vert.x-eventloop-thread-0] WARN o.e.hono.client.impl.HonoClientImpl - cannot handle failure of unknown connection\r\n05:04:08.175 [vert.x-eventloop-thread-0] INFO o.e.hono.client.impl.HonoClientImpl - attempting to re-connect to Hono server [hono.hono:5671]\r\n05:04:08.175 [vert.x-eventloop-thread-0] INFO o.e.h.c.ConnectionFactoryImpl - connecting to AMQP 1.0 container [amqps://hono.hono:5671]\r\n05:04:08.301 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n05:04:08.301 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing registration client for [DEFAULT_TENANT]\r\n05:04:08.301 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - Service unavailable: null\r\n05:04:08.329 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [correlation ID: reg-client-31, status: 200]\r\n05:04:08.345 [vert.x-eventloop-thread-0] INFO o.e.h.c.ConnectionFactoryImpl - connected to AMQP 1.0 container [amqps://hono.hono:5671], opening connection ...\r\n05:04:08.346 [vert.x-eventloop-thread-0] INFO o.e.h.c.ConnectionFactoryImpl - connection to container [Hono-0.0.0.0:5671] at [amqps://hono.hono:5671] open\r\n05:04:09.072 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n05:04:09.072 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing registration client for [DEFAULT_TENANT]\r\n05:04:09.072 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.h.AbstractVertxBasedHttpProtocolAdapter - Service unavailable: null\r\n```\r\n\r\nMQTT Adapter log:\r\n```\r\n05:03:24.642 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.AbstractSender - sender [telemetry/DEFAULT_TENANT] closed: Error{condition=hono:no-downstream-consumer, description='no downstream consumer available for data', info=null}\r\n05:03:26.402 [vert.x-eventloop-thread-0] INFO o.e.h.a.m.VertxBasedMqttProtocolAdapter - Connection request from client esp8266.600194195a1b\r\n05:03:26.445 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing registration client for [DEFAULT_TENANT]\r\n05:03:26.445 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - creating new message sender for telemetry/DEFAULT_TENANT\r\n05:03:26.474 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [correlation ID: reg-client-23, status: 200]\r\n05:03:26.846 [vert.x-eventloop-thread-0] INFO o.e.h.a.m.VertxBasedMqttProtocolAdapter - Connection request from client esp8266.5ccf7f9509f1\r\n05:03:26.897 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing registration client for [DEFAULT_TENANT]\r\n05:03:26.897 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n05:03:26.897 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.m.VertxBasedMqttProtocolAdapter - cannot process message [client ID: esp8266.5ccf7f9509f1, topic: telemetry/DEFAULT_TENANT/esp8266.5ccf7f9509f1, QoS: AT_MOST_ONCE]: sender link not established yet\r\n05:03:26.897 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.m.VertxBasedMqttProtocolAdapter - closing connection with client [client ID: esp8266.5ccf7f9509f1]\r\n05:03:26.926 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [correlation ID: reg-client-24, status: 200]\r\n05:03:36.408 [vert.x-eventloop-thread-0] INFO o.e.h.a.m.VertxBasedMqttProtocolAdapter - Connection request from client esp8266.600194195a1b\r\n05:03:36.452 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing registration client for [DEFAULT_TENANT]\r\n05:03:36.452 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n05:03:36.452 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.m.VertxBasedMqttProtocolAdapter - cannot process message [client ID: esp8266.600194195a1b, topic: telemetry/DEFAULT_TENANT/esp8266.600194195a1b, QoS: AT_MOST_ONCE]: sender link not established yet\r\n05:03:36.452 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.m.VertxBasedMqttProtocolAdapter - closing connection with client [client ID: esp8266.600194195a1b]\r\n05:03:36.481 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [correlation ID: reg-client-25, status: 200]\r\n05:03:46.500 [vert.x-eventloop-thread-0] INFO o.e.h.a.m.VertxBasedMqttProtocolAdapter - Connection request from client esp8266.600194195a1b\r\n05:03:46.543 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing registration client for [DEFAULT_TENANT]\r\n05:03:46.543 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n05:03:46.543 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.m.VertxBasedMqttProtocolAdapter - cannot process message [client ID: esp8266.600194195a1b, topic: telemetry/DEFAULT_TENANT/esp8266.600194195a1b, QoS: AT_MOST_ONCE]: sender link not established yet\r\n05:03:46.543 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.m.VertxBasedMqttProtocolAdapter - closing connection with client [client ID: esp8266.600194195a1b]\r\n05:03:46.572 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [correlation ID: reg-client-26, status: 200]\r\n05:03:51.736 [vert.x-eventloop-thread-0] INFO o.e.h.a.m.VertxBasedMqttProtocolAdapter - Connection request from client HealthCheck_c8ca8231-a348-4d58-b135-1c24883611d8_mqtt\r\n05:03:51.739 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing registration client for [DEFAULT_TENANT]\r\n05:03:51.739 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n05:03:51.739 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.m.VertxBasedMqttProtocolAdapter - cannot process message [client ID: HealthCheck_c8ca8231-a348-4d58-b135-1c24883611d8_mqtt, topic: telemetry/DEFAULT_TENANT/HealthCheck_c8ca8231-a348-4d58-b135-1c24883611d8_mqtt, QoS: AT_MOST_ONCE]: sender link not established yet\r\n05:03:51.739 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.m.VertxBasedMqttProtocolAdapter - closing connection with client [client ID: HealthCheck_c8ca8231-a348-4d58-b135-1c24883611d8_mqtt]\r\n05:03:51.767 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [correlation ID: reg-client-27, status: 200]\r\n05:03:56.585 [vert.x-eventloop-thread-0] INFO o.e.h.a.m.VertxBasedMqttProtocolAdapter - Connection request from client esp8266.600194195a1b\r\n05:03:56.629 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing registration client for [DEFAULT_TENANT]\r\n05:03:56.629 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n05:03:56.629 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.m.VertxBasedMqttProtocolAdapter - cannot process message [client ID: esp8266.600194195a1b, topic: telemetry/DEFAULT_TENANT/esp8266.600194195a1b, QoS: AT_MOST_ONCE]: sender link not established yet\r\n05:03:56.629 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.m.VertxBasedMqttProtocolAdapter - closing connection with client [client ID: esp8266.600194195a1b]\r\n05:03:56.661 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [correlation ID: reg-client-28, status: 200]\r\n05:04:06.689 [vert.x-eventloop-thread-0] INFO o.e.h.a.m.VertxBasedMqttProtocolAdapter - Connection request from client esp8266.600194195a1b\r\n05:04:06.732 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing registration client for [DEFAULT_TENANT]\r\n05:04:06.733 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n05:04:06.733 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.m.VertxBasedMqttProtocolAdapter - cannot process message [client ID: esp8266.600194195a1b, topic: telemetry/DEFAULT_TENANT/esp8266.600194195a1b, QoS: AT_MOST_ONCE]: sender link not established yet\r\n05:04:06.733 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.m.VertxBasedMqttProtocolAdapter - closing connection with client [client ID: esp8266.600194195a1b]\r\n05:04:06.762 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [correlation ID: reg-client-29, status: 200]\r\n05:04:08.305 [vert.x-eventloop-thread-0] INFO o.e.h.a.m.VertxBasedMqttProtocolAdapter - Connection request from client HealthCheck_1467bc4a-e738-45ab-9390-cd590e9532bc_mqtt\r\n05:04:08.308 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing registration client for [DEFAULT_TENANT]\r\n05:04:08.308 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n05:04:08.308 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.m.VertxBasedMqttProtocolAdapter - cannot process message [client ID: HealthCheck_1467bc4a-e738-45ab-9390-cd590e9532bc_mqtt, topic: telemetry/DEFAULT_TENANT/HealthCheck_1467bc4a-e738-45ab-9390-cd590e9532bc_mqtt, QoS: AT_MOST_ONCE]: sender link not established yet\r\n05:04:08.308 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.m.VertxBasedMqttProtocolAdapter - closing connection with client [client ID: HealthCheck_1467bc4a-e738-45ab-9390-cd590e9532bc_mqtt]\r\n05:04:08.337 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.i.AbstractRequestResponseClient - received response [correlation ID: reg-client-30, status: 200]\r\n```\r\n\r\nNotice the recurring output of\r\n\r\n> already trying to create a message sender for telemetry/DEFAULT_TENANT", "url": "https://github.com/eclipse/hono/issues/231", "user": "calohmn", "labels": ["bug"], "created": "2017-06-23 09:10:01", "closed": "2017-06-27 08:56:22", "commits": {"c1550b3e8b39f061226873d180eb14ec52bb8e20": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "c1550b3e8b39f061226873d180eb14ec52bb8e20", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["e317e2298dc6aff6349ec64275087d3fea94d4b5"], "nameRev": "c1550b3e8b39f061226873d180eb14ec52bb8e20 tags/0.5-M6~41", "commitMessage": "[#231] Remove sender creation locks when connection fails.\n\nThe locks indicating an ongoing attempt to open a sender link are now\nremoved if the connection to the server fails during such an attempt.\n\nThis way, the next attempt to open a sender (once the connection has\nbeen re-established) does not fail due to an attempt already being in\nprogress.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2017-06-23 14:54:56", "authoredDateTime": "2017-06-23 14:54:56", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoClientImpl.java", "insertions": 10, "deletions": 8, "lines": 18}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/HonoClientImplTest.java", "insertions": 41, "deletions": 0, "lines": 41}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoClientImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.getConnectionStatus()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.onRemoteClose(io.vertx.core.AsyncResult)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.onRemoteDisconnect(io.vertx.proton.ProtonConnection,io.vertx.core.Handler)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.checkConnection()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.createRegistrationClient(java.lang.String,io.vertx.core.Handler)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.createCredentialsClient(java.lang.String,io.vertx.core.Handler)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.connect(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.reconnect(io.vertx.core.Handler)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateSender(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoClientImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testDownstreamDisconnectClearsSenderCreationLocks(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c1550b3e8b39f061226873d180eb14ec52bb8e20"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 8, "lines": 18, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 8, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.HonoClientImpl.createCredentialsClient(java.lang.String,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.onRemoteClose(io.vertx.core.AsyncResult)", "org.eclipse.hono.client.impl.HonoClientImpl.connect(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.getConnectionStatus()", "org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateSender(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.onRemoteDisconnect(io.vertx.proton.ProtonConnection,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.reconnect(io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.createRegistrationClient(java.lang.String,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.checkConnection()"]}, {"title": "Authentication failure in protocol adapter with hono example", "body": "Using the `docker-compose.yml` from the Hono Getting Started guide causes authentication failure errors in the protocol adapters.\r\n\r\nPR #208 addresses issues concerning wrong credentials and wrong auth host name.\r\n\r\nHowever, after applying these changes, there is still a `Failed to authenticate` exception on protocol adapter startup. The reason isn't directly obvious to me. Log output of the Auth container appears to show no issue. In the Hono log there is this output:\r\n````\r\n09:29:22.801 [vert.x-eventloop-thread-1] DEBUG o.e.h.s.auth.HonoSaslAuthenticator - authentication failed: Timed out after waiting 1000(ms) for a reply. address: 1\r\n09:29:22.863 [vert.x-eventloop-thread-1] DEBUG o.e.h.s.auth.HonoSaslAuthenticator - authentication failed: Timed out after waiting 1000(ms) for a reply. address: 2\r\n````", "url": "https://github.com/eclipse/hono/issues/209", "user": "calohmn", "labels": ["bug"], "created": "2017-06-08 10:56:04", "closed": "2017-06-20 14:51:56", "commits": {"9a0d44fd0451abb5fd847629a263487e659223ba": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "9a0d44fd0451abb5fd847629a263487e659223ba", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["d6a65910edf14c85f53ee79fc440da708977b184"], "nameRev": "9a0d44fd0451abb5fd847629a263487e659223ba tags/0.5-M6~138", "commitMessage": "[#209] Continuously re-try to connect on failed connect attempt.\n\nUse Vert.x async DNS client to prevent the default JRE DNS client to\nblock the event loop on re-connection attempts.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2017-06-10 14:31:21", "authoredDateTime": "2017-06-09 17:05:50", "commitGitStats": [{"filePath": "adapters/mqtt-vertx/pom.xml", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "adapters/rest-vertx/pom.xml", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "application/pom.xml", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "application/src/main/java/org/eclipse/hono/application/ApplicationConfig.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "auth/pom.xml", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "auth/src/main/java/org/eclipse/hono/service/auth/impl/ApplicationConfig.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoClientImpl.java", "insertions": 19, "deletions": 8, "lines": 27}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/HonoClientImplTest.java", "insertions": 25, "deletions": 1, "lines": 26}, {"filePath": "core/src/main/java/org/eclipse/hono/adapter/AdapterConfig.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "core/src/main/java/org/eclipse/hono/connection/ConnectionFactoryImpl.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/org/eclipse/hono/util/Constants.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "server/src/main/java/org/eclipse/hono/server/ForwardingDownstreamAdapter.java", "insertions": 33, "deletions": 18, "lines": 51}, {"filePath": "server/src/test/java/org/eclipse/hono/server/ForwardingDownstreamAdapterTest.java", "insertions": 50, "deletions": 26, "lines": 76}, {"filePath": "service-base/src/main/java/org/eclipse/hono/service/AbstractProtocolAdapterBase.java", "insertions": 53, "deletions": 15, "lines": 68}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ApplicationConfig.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.auth.impl.ApplicationConfig", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.service.auth.impl.ApplicationConfig.vertx()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.auth.impl.ApplicationConfig.authTokenValidator()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.auth.impl.ApplicationConfig.authTokenFactory()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoClientImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.onRemoteDisconnect(io.vertx.proton.ProtonConnection,io.vertx.core.Handler)", "TOT": 11, "UPD": 4, "INS": 1, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateSender(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.connect(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 6, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.reconnect(io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoClientImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testConnectTriesToReconnectOnFailedConnectAttempt()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.DisconnectHandlerProvidingConnectionFactory.connect(io.vertx.proton.ProtonClientOptions,java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AdapterConfig.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.AdapterConfig", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionFactoryImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImpl.handleConnectionAttemptResult(io.vertx.core.AsyncResult,io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Constants.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.Constants", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ForwardingDownstreamAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.onDisconnectFromDownstreamContainer(io.vertx.proton.ProtonConnection)", "TOT": 8, "UPD": 1, "INS": 1, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.connectToDownstream(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler)", "TOT": 11, "UPD": 2, "INS": 3, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.start(io.vertx.core.Future)", "TOT": 5, "UPD": 3, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.onClientAttach(org.eclipse.hono.service.amqp.UpstreamReceiver,io.vertx.core.Handler)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.createClientOptions()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.connectToDownstream(io.vertx.proton.ProtonClientOptions)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.reconnect(io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.disableRetryOnFailedConnectAttempt()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ForwardingDownstreamAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.testGetDownstreamSenderClosesLinkIfDownstreamConnectionIsBroken()", "TOT": 22, "UPD": 5, "INS": 0, "MOV": 15, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.DisconnectHandlerProvidingConnectionFactory", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.setup()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.testDownstreamDisconnectFailsClientAttachRequests()", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.DisconnectHandlerProvidingConnectionFactory.connect(io.vertx.proton.ProtonClientOptions,java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.DisconnectHandlerProvidingConnectionFactory.await(long,java.util.concurrent.TimeUnit)", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.testGetDownstreamSenderClosesLinkIfDownstreamConnectionIsBroken(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.testConnectToDownstreamRetriesToConnectOnFailedAttempt()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.testDownstreamDisconnectFailsClientAttachRequests(io.vertx.ext.unit.TestContext)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.givenADownstreamAdapter(org.eclipse.hono.server.SenderFactory).1.forwardMessage(io.vertx.proton.ProtonSender,org.apache.qpid.proton.message.Message,io.vertx.proton.ProtonDelivery)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractProtocolAdapterBase.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBase.connectToRegistration(io.vertx.core.Handler)", "TOT": 18, "UPD": 1, "INS": 8, "MOV": 5, "DEL": 4}, {"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBase.connectToHono(io.vertx.core.Handler)", "TOT": 13, "UPD": 1, "INS": 6, "MOV": 3, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBase.createClientOptions()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBase.start(io.vertx.core.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.service.AbstractProtocolAdapterBase.stop(io.vertx.core.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9a0d44fd0451abb5fd847629a263487e659223ba"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 130, "deletions": 46, "lines": 176, "gitFilesChange": 8}, "spoonStatsSummary": {"TOT": 103, "UPD": 20, "INS": 37, "MOV": 29, "DEL": 17, "spoonFilesChanged": 7, "spoonMethodsChanged": 25}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/org/eclipse/hono/adapter", "client/src/main/java/org/eclipse/hono/client/impl", "core/src/main/java/org/eclipse/hono/connection", "core/src/main/java/org/eclipse/hono/util", "service-base/src/main/java/org/eclipse/hono/service", "application/src/main/java/org/eclipse/hono/application", "auth/src/main/java/org/eclipse/hono/service/auth/impl", "server/src/main/java/org/eclipse/hono/server"], "changesInPackagesSPOON": ["org.eclipse.hono.service.AbstractProtocolAdapterBase.start(io.vertx.core.Future)", "org.eclipse.hono.server.ForwardingDownstreamAdapter.connectToDownstream(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.reconnect(io.vertx.core.Handler)", "org.eclipse.hono.server.ForwardingDownstreamAdapter.onDisconnectFromDownstreamContainer(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.connection.ConnectionFactoryImpl.handleConnectionAttemptResult(io.vertx.core.AsyncResult,io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.util.Constants", "org.eclipse.hono.service.AbstractProtocolAdapterBase.stop(io.vertx.core.Future)", "org.eclipse.hono.service.auth.impl.ApplicationConfig.vertx()", "org.eclipse.hono.server.ForwardingDownstreamAdapter.reconnect(io.vertx.core.Handler)", "org.eclipse.hono.server.ForwardingDownstreamAdapter.onClientAttach(org.eclipse.hono.service.amqp.UpstreamReceiver,io.vertx.core.Handler)", "org.eclipse.hono.server.ForwardingDownstreamAdapter.createClientOptions()", "org.eclipse.hono.server.ForwardingDownstreamAdapter.disableRetryOnFailedConnectAttempt()", "org.eclipse.hono.client.impl.HonoClientImpl.onRemoteDisconnect(io.vertx.proton.ProtonConnection,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateSender(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "org.eclipse.hono.server.ForwardingDownstreamAdapter", "org.eclipse.hono.service.auth.impl.ApplicationConfig", "org.eclipse.hono.service.auth.impl.ApplicationConfig.authTokenFactory()", "org.eclipse.hono.client.impl.HonoClientImpl.connect(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.adapter.AdapterConfig", "org.eclipse.hono.service.auth.impl.ApplicationConfig.authTokenValidator()", "org.eclipse.hono.server.ForwardingDownstreamAdapter.start(io.vertx.core.Future)", "org.eclipse.hono.service.AbstractProtocolAdapterBase.connectToHono(io.vertx.core.Handler)", "org.eclipse.hono.service.AbstractProtocolAdapterBase.createClientOptions()", "org.eclipse.hono.server.ForwardingDownstreamAdapter.connectToDownstream(io.vertx.proton.ProtonClientOptions)", "org.eclipse.hono.service.AbstractProtocolAdapterBase.connectToRegistration(io.vertx.core.Handler)"]}, {"title": "MQTT protocol adaptor doesn't wait for Hono Server's acknowledgement", "body": "When publishing an event using MQTT and QoS 1, the device receive `PUBACK` message without waiting for Hono server acknowledgement.\r\n\r\nThis issue has been discussed with @sophokles73 in the [mailing list](http://dev.eclipse.org/mhonarc/lists/hono-dev/msg00357.html).", "url": "https://github.com/eclipse/hono/issues/194", "user": "francois-travais", "labels": ["MQTT Adapter", "bug"], "created": "2017-06-02 08:17:38", "closed": "2017-06-27 08:55:47", "commits": {"a4c72129f859852ac99f4bc9375ec9734a1fd486": {"commitGHEventType": "referenced", "commitUser": "dejanb"}, "dfbcdb4f4cd80a61a1eff4c12cbad3c322ce56b4": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "d2b4fa3554d07d256b77f38582433527a6b6c7c1": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 25.00027777777778, "commitsDetails": [{"commitHash": "a4c72129f859852ac99f4bc9375ec9734a1fd486", "commitGHEventType": "referenced", "commitUser": "dejanb", "commitParents": ["a70be270a72f71bc5ad60b785d0a1cc09f70c19d", "8a74911f500769f437a307190383be6035d4504b"], "nameRev": "a4c72129f859852ac99f4bc9375ec9734a1fd486 tags/0.5-M6~120", "commitMessage": "Merge pull request #201 from francois-travais/issue-194\n\n[#194] MQTT Protocol Adapter send PUBACK only when remote has accepted the message", "commitDateTime": "2017-06-12 16:44:15", "authoredDateTime": "2017-06-12 16:44:15", "commitGitStats": [{"filePath": "adapters/mqtt-vertx/src/main/java/org/eclipse/hono/adapter/mqtt/VertxBasedMqttProtocolAdapter.java", "insertions": 14, "deletions": 5, "lines": 19}, {"filePath": "client/src/main/java/org/eclipse/hono/client/MessageSender.java", "insertions": 121, "deletions": 2, "lines": 123}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractSender.java", "insertions": 50, "deletions": 10, "lines": 60}, {"filePath": "tests/src/test/java/org/eclipse/hono/tests/client/ClientTestBase.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VertxBasedMqttProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.VertxBasedMqttProtocolAdapter.doUploadMessage(java.lang.String,java.lang.String,io.vertx.mqtt.MqttEndpoint,io.vertx.mqtt.messages.MqttPublishMessage,org.eclipse.hono.client.MessageSender,io.vertx.core.Future)", "TOT": 9, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 3}]}, {"spoonFilePath": "MessageSender.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.setDispositionHandler(java.util.function.BiConsumer)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.send(org.apache.qpid.proton.message.Message,io.vertx.core.Handler,java.util.function.BiConsumer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.send(org.apache.qpid.proton.message.Message,java.util.function.BiConsumer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.send(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.function.BiConsumer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.send(java.lang.String,byte[],java.lang.String,java.lang.String,java.util.function.BiConsumer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.send(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String,java.util.function.BiConsumer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.send(java.lang.String,java.util.Map,byte[],java.lang.String,java.lang.String,java.util.function.BiConsumer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractSender.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSender", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSender.setDispositionHandler(java.util.function.BiConsumer)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSender.sendMessage(org.apache.qpid.proton.message.Message)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSender.send(org.apache.qpid.proton.message.Message,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSender.send(org.apache.qpid.proton.message.Message)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSender.send(java.lang.String,byte[],java.lang.String,java.lang.String,java.util.function.BiConsumer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSender.send(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.function.BiConsumer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSender.send(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String,java.util.function.BiConsumer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSender.send(java.lang.String,java.util.Map,byte[],java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSender.send(org.apache.qpid.proton.message.Message,io.vertx.core.Handler,java.util.function.BiConsumer)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSender.send(org.apache.qpid.proton.message.Message,java.util.function.BiConsumer)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSender.sendMessage(org.apache.qpid.proton.message.Message,java.util.function.BiConsumer)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.AbstractSender.send(java.lang.String,java.util.Map,byte[],java.lang.String,java.lang.String,java.util.function.BiConsumer)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClientTestBase.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.client.ClientTestBase.testSendingMessages(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "dfbcdb4f4cd80a61a1eff4c12cbad3c322ce56b4", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["afba4a2a36edb426700fb98e5212d866d4fd3739"], "nameRev": "dfbcdb4f4cd80a61a1eff4c12cbad3c322ce56b4 tags/0.5-M6~110", "commitMessage": "[#194] Make sure MQTT adapter rejects messages with wrong QoS.\n\nMQTT adapter now closes connection with client if client sends message\nusing inappropriate QoS level for message type. Telemetry messages must\nhave QoS level 0, event messages must have level 1.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2017-06-14 09:26:16", "authoredDateTime": "2017-06-14 09:23:58", "commitGitStats": [{"filePath": "adapters/mqtt-vertx/src/main/java/org/eclipse/hono/adapter/mqtt/VertxBasedMqttProtocolAdapter.java", "insertions": 41, "deletions": 30, "lines": 71}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VertxBasedMqttProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.VertxBasedMqttProtocolAdapter.handleEndpointConnection(io.vertx.mqtt.MqttEndpoint)", "TOT": 34, "UPD": 8, "INS": 6, "MOV": 17, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.VertxBasedMqttProtocolAdapter.getSenderTracker(io.vertx.mqtt.messages.MqttPublishMessage,org.eclipse.hono.util.ResourceIdentifier)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "d2b4fa3554d07d256b77f38582433527a6b6c7c1", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["1c23b985da1e680a988db4290006eff8d9dbb3a7"], "nameRev": "d2b4fa3554d07d256b77f38582433527a6b6c7c1 tags/0.5-M6~68", "commitMessage": "[#194] Add missing variants of send method.\n\nAdded two outstanding versions accepting both a capacity available\nhandler and a disposition handler.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2017-06-20 16:08:05", "authoredDateTime": "2017-06-20 08:39:08", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/MessageSender.java", "insertions": 182, "deletions": 119, "lines": 301}, {"filePath": "client/src/main/java/org/eclipse/hono/client/impl/AbstractSender.java", "insertions": 18, "deletions": 6, "lines": 24}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": ["dfbcdb4f4cd80a61a1eff4c12cbad3c322ce56b4", "d2b4fa3554d07d256b77f38582433527a6b6c7c1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 241, "deletions": 155, "lines": 396, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 36.0, "UPD": 8.0, "INS": 8.0, "MOV": 17.0, "DEL": 3.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl", "adapters/mqtt-vertx/src/main/java/org/eclipse/hono/adapter/mqtt", "client/src/main/java/org/eclipse/hono/client"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.mqtt.VertxBasedMqttProtocolAdapter.getSenderTracker(io.vertx.mqtt.messages.MqttPublishMessage,org.eclipse.hono.util.ResourceIdentifier)", "org.eclipse.hono.adapter.mqtt.VertxBasedMqttProtocolAdapter.handleEndpointConnection(io.vertx.mqtt.MqttEndpoint)"]}, {"title": "Demo certs cannot be used for PEM file based TLS configuration", "body": "The demo keys included in the demo-certs module are ECC based (not RSA) and the corresponding key and certificate PEM files not in PKCS8 format. This prevents them from being used for configuring the Hono server based on the `HONO_SERVER_KEY_PATH` and `HONO_SERVER_CERT_PATH` because vertx only supports RSA keys in PKCS8 PEM files.\r\n\r\nIt would therefore be better to use RSA based keys and use PEM files based on PKCS8.", "url": "https://github.com/eclipse/hono/issues/162", "user": "sophokles73", "labels": ["bug", "enhancement"], "created": "2017-04-13 11:57:15", "closed": "2017-04-14 13:09:56", "commits": {"da368297e9e8b5801cbac1fc8f674ed663fde3cd": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}, "333c51b36557f55f6bec0516f5b12c2df2f47341": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "da368297e9e8b5801cbac1fc8f674ed663fde3cd", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["edd658063411b144a3ea8c47daf3fa1bb9a5116a"], "nameRev": "da368297e9e8b5801cbac1fc8f674ed663fde3cd tags/0.5-M6~282", "commitMessage": "[#162] Use RSA based demo keys and certificates.\n\nWhen using PEM files instead of key stores to configure TLS, Vertx\nrequires RSA keys and certs provided in PKCS8 based PEM files.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2017-04-13 13:59:23", "authoredDateTime": "2017-04-13 13:59:23", "commitGitStats": [{"filePath": "demo-certs/ca_opts", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "demo-certs/certs/artemis-cert.pem", "insertions": 59, "deletions": 21, "lines": 80}, {"filePath": "demo-certs/certs/artemis-key.pem", "insertions": 52, "deletions": 5, "lines": 57}, {"filePath": "demo-certs/certs/artemisKeyStore.p12", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "demo-certs/certs/ca-cert.pem", "insertions": 29, "deletions": 10, "lines": 39}, {"filePath": "demo-certs/certs/ca-key.pem", "insertions": 52, "deletions": 5, "lines": 57}, {"filePath": "demo-certs/certs/hono-cert.pem", "insertions": 59, "deletions": 21, "lines": 80}, {"filePath": "demo-certs/certs/hono-key.pem", "insertions": 52, "deletions": 5, "lines": 57}, {"filePath": "demo-certs/certs/honoKeyStore.p12", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "demo-certs/certs/mqtt-adapter-cert.pem", "insertions": 59, "deletions": 21, "lines": 80}, {"filePath": "demo-certs/certs/mqtt-adapter-key.pem", "insertions": 52, "deletions": 5, "lines": 57}, {"filePath": "demo-certs/certs/mqttKeyStore.p12", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "demo-certs/certs/qdrouter-cert.pem", "insertions": 59, "deletions": 21, "lines": 80}, {"filePath": "demo-certs/certs/qdrouter-key.pem", "insertions": 52, "deletions": 5, "lines": 57}, {"filePath": "demo-certs/certs/rest-adapter-cert.pem", "insertions": 59, "deletions": 21, "lines": 80}, {"filePath": "demo-certs/certs/rest-adapter-key.pem", "insertions": 52, "deletions": 5, "lines": 57}, {"filePath": "demo-certs/certs/restKeyStore.p12", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "demo-certs/certs/root-cert.pem", "insertions": 32, "deletions": 13, "lines": 45}, {"filePath": "demo-certs/certs/root-key.pem", "insertions": 52, "deletions": 5, "lines": 57}, {"filePath": "demo-certs/certs/trustStore.jks", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "demo-certs/certs/trusted-certs.pem", "insertions": 61, "deletions": 23, "lines": 84}, {"filePath": "demo-certs/create_certs.sh", "insertions": 30, "deletions": 18, "lines": 48}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "333c51b36557f55f6bec0516f5b12c2df2f47341", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["da368297e9e8b5801cbac1fc8f674ed663fde3cd"], "nameRev": "333c51b36557f55f6bec0516f5b12c2df2f47341 tags/0.5-M6~281", "commitMessage": "[#162] Use PEM files for configuring TLS.\n\nThe p12 key stores containing the components' private keys and\ncertificates have been replaced by corresponding PKCS8 PEM files.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2017-04-13 14:27:50", "authoredDateTime": "2017-04-13 14:27:50", "commitGitStats": [{"filePath": "adapters/mqtt-vertx/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "adapters/rest-vertx/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "application/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "example/docker/docker-compose.yml", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "tests/src/test/resources/server/application.yml", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["da368297e9e8b5801cbac1fc8f674ed663fde3cd", "333c51b36557f55f6bec0516f5b12c2df2f47341"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 816, "deletions": 209, "lines": 1025, "gitFilesChange": 23}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["demo-certs/certs/ca-key.pem", "demo-certs/certs/hono-key.pem", "demo-certs/certs/trusted-certs.pem", "example/docker/docker-compose.yml", "demo-certs/certs/root-cert.pem", "demo-certs/certs/rest-adapter-cert.pem", "demo-certs/certs/ca-cert.pem", "demo-certs/certs/restKeyStore.p12", "demo-certs/certs/artemis-cert.pem", "demo-certs/create_certs.sh", "demo-certs/certs/mqttKeyStore.p12", "demo-certs/certs/artemis-key.pem", "demo-certs/certs/trustStore.jks", "demo-certs/certs/hono-cert.pem", "demo-certs/certs/qdrouter-key.pem", "demo-certs/certs/root-key.pem", "demo-certs/certs/mqtt-adapter-cert.pem", "demo-certs/ca_opts", "demo-certs/certs/artemisKeyStore.p12", "demo-certs/certs/honoKeyStore.p12", "demo-certs/certs/qdrouter-cert.pem", "demo-certs/certs/rest-adapter-key.pem", "demo-certs/certs/mqtt-adapter-key.pem"]}, {"title": "HonoClientImpl may reach state where getOrCreateSender() fails each time", "body": "We noticed that at one point our Hono REST adapter instance began answering each telemetry request with a 503 response.\r\nA look in the logs revealed the following:\r\n\r\n```\r\n07:19:14.755 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - creating new message sender for telemetry/DEFAULT_TENANT\r\n07:19:14.759 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.AbstractSender - sender open [Target{address='telemetry/DEFAULT_TENANT', durable=NONE, expiryPolicy=SESSION_END, timeout=0, dynamic=false, dynamicNodeProperties=null, capabilities=null}]\r\n07:19:14.759 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - successfully created new message sender for telemetry/DEFAULT_TENANT\r\n\r\n07:19:24.745 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing message sender [target: telemetry/DEFAULT_TENANT, credit: 250]\r\n\r\n07:19:24.748 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.AbstractSender - sender [telemetry/DEFAULT_TENANT] closed: Error{condition=amqp:precondition-failed, description='device does not exist', info=null}\r\n\r\n07:19:34.844 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - creating new message sender for telemetry/DEFAULT_TENANT\r\n\r\n07:20:50.584 [vert.x-eventloop-thread-0] DEBUG o.e.h.a.r.VertxBasedRestProtocolAdapter - registering data for device: {\"creater\":\"self-registered\"}\r\n07:20:50.584 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - reusing existing registration client for [DEFAULT_TENANT]\r\n07:20:50.588 [vert.x-eventloop-thread-0] DEBUG o.e.h.c.impl.RegistrationClientImpl - received response [correlation ID: reg-client-15, status: 201]\r\n07:20:56.150 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n07:21:06.232 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n07:21:16.361 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n07:21:26.358 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n07:21:36.439 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n07:21:46.547 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n07:21:56.671 [vert.x-eventloop-thread-0] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/DEFAULT_TENANT\r\n...\r\n```\r\nThe last message is repeated with each new telemetry request.\r\n\r\nIt looks like the last invocation of _HonoClientImpl.getOrCreateSender()_ where a new Sender was about to be created (\"creating new message sender for telemetry/DEFAULT_TENANT\") did not finish.\r\nThat means each following invocation fails (\"already trying to create a message sender\"). \r\n\r\nMaybe there should be a timeout associated with the sender creation attempt?", "url": "https://github.com/eclipse/hono/issues/159", "user": "calohmn", "labels": ["bug"], "created": "2017-04-11 13:23:06", "closed": "2017-04-12 15:23:44", "commits": {"80b8a9cffae42bbde5bf6e443ff63972a96eddd2": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "80b8a9cffae42bbde5bf6e443ff63972a96eddd2", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["bd2db414e4fc35d7012642435f0bbbe6552c24d2"], "nameRev": "80b8a9cffae42bbde5bf6e443ff63972a96eddd2 tags/0.5-M6~287", "commitMessage": "[#159] Immediately fail pending handlers on connection failure.\n\nMade sure that result handlers provided by client code to be notified\nabout the outcome of a link establishment attempt are failed immediately\nif the underlying connection to the server fails.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2017-04-12 15:56:36", "authoredDateTime": "2017-04-12 15:56:05", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoClientImpl.java", "insertions": 69, "deletions": 16, "lines": 85}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/HonoClientImplTest.java", "insertions": 190, "deletions": 0, "lines": 190}, {"filePath": "server/src/main/java/org/eclipse/hono/server/ForwardingDownstreamAdapter.java", "insertions": 70, "deletions": 41, "lines": 111}, {"filePath": "server/src/main/java/org/eclipse/hono/server/SenderFactory.java", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "server/src/main/java/org/eclipse/hono/server/SenderFactoryImpl.java", "insertions": 22, "deletions": 19, "lines": 41}, {"filePath": "server/src/test/java/org/eclipse/hono/TestSupport.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "server/src/test/java/org/eclipse/hono/server/ForwardingDownstreamAdapterTest.java", "insertions": 53, "deletions": 4, "lines": 57}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoClientImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.onRemoteDisconnect(io.vertx.proton.ProtonConnection)", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.checkConnection()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.createRegistrationClient(java.lang.String,io.vertx.core.Handler)", "TOT": 12, "UPD": 0, "INS": 5, "MOV": 5, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.failAllCreationRequests()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.createTelemetryConsumer(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.createEventConsumer(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateSender(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoClientImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testGetOrCreateSenderFailsOnConnectionFailure(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testCreateTelemetryConsumerFailsOnConnectionFailure(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testCreateEventConsumerFailsOnConnectionFailure(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testDownstreamDisconnectTriggersReconnect(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.DisconnectHandlerProvidingConnectionFactory", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ForwardingDownstreamAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.createSender(java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 16, "UPD": 1, "INS": 0, "MOV": 9, "DEL": 6}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.onClientAttach(org.eclipse.hono.server.UpstreamReceiver,io.vertx.core.Handler)", "TOT": 25, "UPD": 7, "INS": 5, "MOV": 12, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.onDisconnectFromDownstreamContainer(io.vertx.proton.ProtonConnection)", "TOT": 14, "UPD": 1, "INS": 2, "MOV": 8, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.createClientOptions()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.isConnected()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.createSender(java.lang.String,io.vertx.core.Handler)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.isActiveSendersEmpty()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.isSendersPerConnectionEmpty()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SenderFactory.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.server.createSender(io.vertx.proton.ProtonConnection,java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.core.Handler,io.vertx.core.Future)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SenderFactoryImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.server.SenderFactoryImpl.createSender(io.vertx.proton.ProtonConnection,java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.core.Handler,io.vertx.core.Future)", "TOT": 19, "UPD": 3, "INS": 0, "MOV": 12, "DEL": 4}, {"spoonMethodName": "org.eclipse.hono.server.SenderFactoryImpl.newSession(io.vertx.proton.ProtonConnection,io.vertx.core.Handler)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.server.SenderFactoryImpl.newSender(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSession,java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.core.Handler,io.vertx.core.Future)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.server.SenderFactoryImpl.newSession(io.vertx.proton.ProtonConnection)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.SenderFactoryImpl.newSender(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSession,java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.SenderFactoryImpl.createSender(io.vertx.proton.ProtonConnection,java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.core.Handler)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestSupport.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.TestSupport.newMockSenderFactory(io.vertx.proton.ProtonSender)", "TOT": 6, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "ForwardingDownstreamAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.givenADownstreamAdapter(io.vertx.proton.ProtonSender)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.testDownstreamDisconnectFailsClientAttachRequests()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.givenADownstreamAdapter(org.eclipse.hono.server.SenderFactory)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.DisconnectHandlerProvidingConnectionFactory", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["80b8a9cffae42bbde5bf6e443ff63972a96eddd2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 165, "deletions": 81, "lines": 246, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 133, "UPD": 16, "INS": 42, "MOV": 53, "DEL": 22, "spoonFilesChanged": 4, "spoonMethodsChanged": 24}, "statsSkippedReason": "", "changesInPackagesGIT": ["server/src/main/java/org/eclipse/hono/server", "client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.server.SenderFactoryImpl.createSender(io.vertx.proton.ProtonConnection,java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.core.Handler,io.vertx.core.Future)", "org.eclipse.hono.server.ForwardingDownstreamAdapter.createSender(java.lang.String,io.vertx.core.Handler)", "org.eclipse.hono.server.ForwardingDownstreamAdapter.onDisconnectFromDownstreamContainer(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateSender(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "org.eclipse.hono.server.ForwardingDownstreamAdapter.isSendersPerConnectionEmpty()", "org.eclipse.hono.server.SenderFactoryImpl.newSession(io.vertx.proton.ProtonConnection,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.createEventConsumer(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.createRegistrationClient(java.lang.String,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl", "org.eclipse.hono.server.SenderFactoryImpl.newSender(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSession,java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.core.Handler,io.vertx.core.Future)", "org.eclipse.hono.server.SenderFactoryImpl.newSession(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.server.ForwardingDownstreamAdapter.createClientOptions()", "org.eclipse.hono.server.ForwardingDownstreamAdapter.createSender(java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.server.ForwardingDownstreamAdapter", "org.eclipse.hono.server.SenderFactoryImpl.newSender(io.vertx.proton.ProtonConnection,io.vertx.proton.ProtonSession,java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.onRemoteDisconnect(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.server.ForwardingDownstreamAdapter.isConnected()", "org.eclipse.hono.server.ForwardingDownstreamAdapter.isActiveSendersEmpty()", "org.eclipse.hono.server.ForwardingDownstreamAdapter.onClientAttach(org.eclipse.hono.server.UpstreamReceiver,io.vertx.core.Handler)", "org.eclipse.hono.server.createSender(io.vertx.proton.ProtonConnection,java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.core.Handler,io.vertx.core.Future)", "org.eclipse.hono.client.impl.HonoClientImpl.createTelemetryConsumer(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.failAllCreationRequests()", "org.eclipse.hono.server.SenderFactoryImpl.createSender(io.vertx.proton.ProtonConnection,java.lang.String,io.vertx.proton.ProtonQoS,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.checkConnection()"]}, {"title": "Integration tests fail", "body": "When running the integration tests, the Hono server does not start up anymore.\r\n\r\nI suspect this is is because of the recent changes in the configuration properties ...\r\n\r\n```sh\r\nHONO> \r\nHONO> .   ____          _            __ _ _\r\nHONO> /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\r\nHONO> ( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\r\nHONO> \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\r\nHONO> '  |____| .__|_| |_|_| |_\\__, | / / / /\r\nHONO> =========|_|==============|___/=/_/_/_/\r\nHONO> :: Spring Boot ::        (v1.4.0.RELEASE)\r\nHONO> \r\nHONO> 13:04:03.100 [main] INFO  o.e.hono.application.Application - Starting Application on 806e4a95b7f4 with PID 1 (/opt/hono/hono-app-0.5-M5-SNAPSHOT.jar started by hono in /home/hono)\r\nHONO> 13:04:03.107 [main] INFO  o.e.hono.application.Application - The following profiles are active: registration-file,qpid,prod\r\nHONO> 13:04:03.201 [main] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2aaf7cc2: startup date [Mon Apr 03 13:04:03 GMT 2017]; root of context hierarchy\r\nHONO> 13:04:04.763 [main] WARN  org.eclipse.hono.server.HonoServer - Hono server does not yet support limiting the incoming message size via the maxPayloadSize property\r\nHONO> 13:04:04.878 [main] INFO  o.e.hono.application.HonoApplication - Starting authentication service org.eclipse.hono.authentication.impl.AcceptAllPlainAuthenticationService@587d1d39\r\nHONO> 13:04:04.899 [main] INFO  o.e.hono.application.HonoApplication - Starting authorization service org.eclipse.hono.authorization.impl.InMemoryAuthorizationService@42d8062c\r\nHONO> 13:04:04.904 [main] INFO  o.e.hono.application.HonoApplication - Starting registration service FileBasedRegistrationService[filename=device-identities.json]\r\nHONO> 13:04:04.915 [vert.x-eventloop-thread-0] INFO  o.e.h.a.i.BaseAuthenticationService - listening on event bus [address: authentication.in] for incoming authentication messages\r\nHONO> 13:04:04.918 [vert.x-eventloop-thread-1] INFO  o.e.h.a.i.BaseAuthorizationService - listening on event bus [address: authorization.in] for incoming auth messages\r\nHONO> 13:04:04.919 [vert.x-eventloop-thread-1] INFO  o.e.h.a.i.InMemoryAuthorizationService - loading permissions from resource file:/etc/hono/permissions.json\r\nHONO> 13:04:04.927 [vert.x-eventloop-thread-0] INFO  o.e.h.r.i.FileBasedRegistrationService - listening on event bus [address: registration.in] for incoming registration messages\r\nHONO> 13:04:04.929 [vert.x-eventloop-thread-0] INFO  o.e.h.r.i.FileBasedRegistrationService - saving device identities to file every 3 seconds\r\nHONO> 13:04:05.003 [vert.x-eventloop-thread-3] WARN  org.eclipse.hono.server.HonoServer - AMQP 1.0 secure port number configured, but the certificate setup is not correct. No secure port will be opened - please check your configuration!\r\nHONO> 13:04:05.020 [vert.x-eventloop-thread-3] ERROR o.e.hono.application.HonoApplication - cannot start up HonoServer\r\nHONO> io.vertx.core.impl.NoStackTraceThrowable: cannot start up HonoServer - no listening ports found.\r\nHONO> 13:04:05.032 [vert.x-eventloop-thread-0] INFO  o.e.h.r.i.FileBasedRegistrationService - unregistered registration data consumer from event bus\r\nHONO> 13:04:05.124 [main] INFO  o.e.hono.application.HonoApplication - Hono server has been shut down successfully\r\nHONO> 13:04:05.417 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup\r\nHONO> 13:04:05.438 [main] INFO  o.e.hono.application.Application - Started Application in 3.396 seconds (JVM running for 4.385)\r\nHONO> 13:04:05.440 [Thread-3] INFO  o.s.c.a.AnnotationConfigApplicationContext - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@2aaf7cc2: startup date [Mon Apr 03 13:04:03 GMT 2017]; root of context hierarchy\r\nHONO> 13:04:05.442 [Thread-3] INFO  o.s.j.e.a.AnnotationMBeanExporter - Unregistering JMX-exposed beans on shutdown\r\nHONO> 13:04:05.443 [Thread-3] INFO  o.e.hono.application.HonoApplication - Hono server has been shut down successfully\r\n```", "url": "https://github.com/eclipse/hono/issues/147", "user": "sophokles73", "labels": ["bug"], "created": "2017-04-03 13:16:58", "closed": "2017-04-04 11:18:59", "commits": {"a0ab27f647d828a0b947e0f149013be432f51d90": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a0ab27f647d828a0b947e0f149013be432f51d90", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["cf5efbfd6ff1b14d723e50fcc2294a7ecd1adc83"], "nameRev": "a0ab27f647d828a0b947e0f149013be432f51d90 tags/0.5-M5~15", "commitMessage": "[#147] Explicitly allowed insecure port 5672 in integration test setup; changed timeout calculation of message send method to allow at least 5 seconds waiting time (support for slower environments);removed irrelevant bindAddress\n\nSigned-off-by: Karsten Frank <Karsten.Frank@bosch-si.com>\n", "commitDateTime": "2017-04-03 17:53:35", "authoredDateTime": "2017-04-03 17:05:09", "commitGitStats": [{"filePath": "tests/src/test/java/org/eclipse/hono/tests/client/ClientTestBase.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/src/test/resources/server/application.yml", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClientTestBase.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.tests.client.ClientTestBase.testSendingMessages(io.vertx.ext.unit.TestContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a0ab27f647d828a0b947e0f149013be432f51d90"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Intermittent failures of HonoClientImplTest", "body": "Sometimes, the HonoClientImplTest fails with this error:\r\n\r\n> Running org.eclipse.hono.client.impl.HonoClientImplTest\r\n> 10:08:29.303 [main] DEBUG o.e.hono.client.impl.HonoClientImpl - creating new message sender for telemetry/tenant\r\n> 10:08:29.313 [main] DEBUG o.e.hono.client.impl.HonoClientImpl - already trying to create a message sender for telemetry/tenant\r\n> Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.619 sec <<< FAILURE! - in org.eclipse.hono.client.impl.HonoClientImplTest\r\n> testGetOrCreateTelemetrySenderFailsIfInvokedConcurrently(org.eclipse.hono.client.impl.HonoClientImplTest)  Time elapsed: 0.567 sec  <<< FAILURE!\r\n> org.mockito.exceptions.verification.WantedButNotInvoked: \r\n> \r\n> Wanted but not invoked:\r\n> protonConnection.createSender(\r\n>     \"telemetry/tenant\"\r\n> );\r\n> -> at org.eclipse.hono.client.impl.HonoClientImplTest.testGetOrCreateTelemetrySenderFailsIfInvokedConcurrently(HonoClientImplTest.java:91)\r\n> \r\n> However, there were other interactions with this mock:\r\n> protonConnection.isDisconnected();\r\n> -> at org.eclipse.hono.client.impl.HonoClientImpl.checkConnection(HonoClientImpl.java:361)\r\n> \r\n> \r\n> \tat org.eclipse.hono.client.impl.HonoClientImplTest.testGetOrCreateTelemetrySenderFailsIfInvokedConcurrently(HonoClientImplTest.java:91)\r\n\r\nSee here for example:\r\nhttps://travis-ci.org/eclipse/hono/builds/217209692", "url": "https://github.com/eclipse/hono/issues/145", "user": "calohmn", "labels": ["bug"], "created": "2017-04-03 09:13:26", "closed": "2017-04-04 11:18:19", "commits": {"cf5efbfd6ff1b14d723e50fcc2294a7ecd1adc83": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "cf5efbfd6ff1b14d723e50fcc2294a7ecd1adc83", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["68e9831900429b64e3ac451fbb68a2b6fab8581c"], "nameRev": "cf5efbfd6ff1b14d723e50fcc2294a7ecd1adc83 tags/0.5-M5~16", "commitMessage": "[#145] Fix race condition in unit test.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch-si.com>", "commitDateTime": "2017-04-03 17:26:06", "authoredDateTime": "2017-04-03 17:26:06", "commitGitStats": [{"filePath": "client/src/main/java/org/eclipse/hono/client/impl/HonoClientImpl.java", "insertions": 4, "deletions": 7, "lines": 11}, {"filePath": "client/src/test/java/org/eclipse/hono/client/impl/HonoClientImplTest.java", "insertions": 15, "deletions": 18, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoClientImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateSender(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateTelemetrySender(java.lang.String,java.lang.String,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateEventSender(java.lang.String,java.lang.String,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HonoClientImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.impl.HonoClientImplTest.testGetOrCreateTelemetrySenderFailsIfInvokedConcurrently(io.vertx.ext.unit.TestContext)", "TOT": 34, "UPD": 13, "INS": 2, "MOV": 9, "DEL": 10}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cf5efbfd6ff1b14d723e50fcc2294a7ecd1adc83"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 7, "lines": 11, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 6, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateTelemetrySender(java.lang.String,java.lang.String,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateEventSender(java.lang.String,java.lang.String,io.vertx.core.Handler)", "org.eclipse.hono.client.impl.HonoClientImpl.getOrCreateSender(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)"]}, {"title": "HonoClient does not fail future when sender is already being created concurrently", "body": "", "url": "https://github.com/eclipse/hono/issues/125", "user": "sophokles73", "labels": ["bug"], "created": "2017-03-15 20:14:47", "closed": "2017-03-17 09:31:37", "commits": {"a9e5cfab3777493eab6980bf82dfde21f00576b5": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "a9e5cfab3777493eab6980bf82dfde21f00576b5", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["430f03635b37ac4f13b056b035e9bf041ce8843b"], "nameRev": "a9e5cfab3777493eab6980bf82dfde21f00576b5 tags/0.5-M5~40", "commitMessage": "[#125] Fail sender creation if invoked concurrently.\n\nWe make sure that senders to the same target address are not created\nconcurrently. When a sender is already being in the process of being\ncreated, we now make sure that the future tracking the creation attempt\nfor the new sender is failed properly.", "commitDateTime": "2017-03-17 10:25:02", "authoredDateTime": "2017-03-15 21:17:35", "commitGitStats": [{"filePath": "client/pom.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "client/src/main/java/org/eclipse/hono/client/HonoClient.java", "insertions": 29, "deletions": 3, "lines": 32}, {"filePath": "client/src/test/java/org/eclipse/hono/client/HonoClientTest.java", "insertions": 92, "deletions": 0, "lines": 92}, {"filePath": "client/src/test/resources/logback-test.xml", "insertions": 28, "deletions": 0, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoClient.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.HonoClient.connect(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.client.HonoClient.setConnection(io.vertx.proton.ProtonConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.HonoClient.setContext(io.vertx.core.Context)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.HonoClient.getOrCreateTelemetrySender(java.lang.String,java.lang.String,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.HonoClient.getOrCreateEventSender(java.lang.String,java.lang.String,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.client.HonoClient.getOrCreateSender(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoClientTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.client.HonoClientTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a9e5cfab3777493eab6980bf82dfde21f00576b5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 29, "deletions": 3, "lines": 32, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 14, "UPD": 0, "INS": 9, "MOV": 2, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["client/src/main/java/org/eclipse/hono/client"], "changesInPackagesSPOON": ["org.eclipse.hono.client.HonoClient.connect(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler)", "org.eclipse.hono.client.HonoClient.setConnection(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.client.HonoClient.getOrCreateSender(java.lang.String,java.util.function.Consumer,io.vertx.core.Handler)", "org.eclipse.hono.client.HonoClient.getOrCreateEventSender(java.lang.String,java.lang.String,io.vertx.core.Handler)", "org.eclipse.hono.client.HonoClient.setContext(io.vertx.core.Context)", "org.eclipse.hono.client.HonoClient.getOrCreateTelemetrySender(java.lang.String,java.lang.String,io.vertx.core.Handler)"]}, {"title": "ExampleReceiver produces warnings after running longer than 60 seconds", "body": "60s after the ExampleReceiver has been started, there are such warnings in the log:\r\n\r\n> 12:32:22.495 [vert.x-eventloop-thread-0] INFO  o.e.hono.example.ExampleReceiver - Receiver created successfully.\r\n> 12:32:22.497 [vert.x-worker-thread-0] INFO  o.e.hono.example.ExampleReceiver - Press enter to stop receiver.\r\n> 12:33:22.787 [vertx-blocked-thread-checker] WARN  i.v.core.impl.BlockedThreadChecker - Thread Thread[vert.x-worker-thread-0,5,org.eclipse.hono.example.Application] has been blocked for 60284 ms, time limit is 60000\r\n> io.vertx.core.VertxException: Thread blocked\r\n> \tat java.io.FileInputStream.readBytes(Native Method) ~[na:1.8.0_112]\r\n> \tat java.io.FileInputStream.read(FileInputStream.java:255) ~[na:1.8.0_112]\r\n> \tat java.io.BufferedInputStream.fill(BufferedInputStream.java:246) ~[na:1.8.0_112]\r\n> \tat java.io.BufferedInputStream.read(BufferedInputStream.java:265) ~[na:1.8.0_112]\r\n> \tat org.eclipse.hono.example.ExampleReceiver.waitForInput(ExampleReceiver.java:81) ~[classes/:na]\r\n> \tat org.eclipse.hono.example.ExampleReceiver$$Lambda$64/1416827644.handle(Unknown Source) ~[na:na]\r\n> \tat io.vertx.core.impl.ContextImpl.lambda$executeBlocking$1(ContextImpl.java:263) ~[vertx-core-3.4.0.jar:na]\r\n> \tat io.vertx.core.impl.ContextImpl$$Lambda$66/1180079878.run(Unknown Source) ~[na:na]\r\n> \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ~[na:1.8.0_112]\r\n> \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[na:1.8.0_112]\r\n> \tat java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_112]\r\n> 12:33:23.783 [vertx-blocked-thread-checker] WARN  i.v.core.impl.BlockedThreadChecker - Thread Thread[vert.x-worker-thread-0,5,org.eclipse.hono.example.Application] has been blocked for 61284 ms, time limit is 60000\r\n> io.vertx.core.VertxException: Thread blocked\r\n> \tat java.io.FileInputStream.readBytes(Native Method) ~[na:1.8.0_112]\r\n> \tat java.io.FileInputStream.read(FileInputStream.java:255) ~[na:1.8.0_112]\r\n> \tat java.io.BufferedInputStream.fill(BufferedInputStream.java:246) ~[na:1.8.0_112]\r\n> \tat java.io.BufferedInputStream.read(BufferedInputStream.java:265) ~[na:1.8.0_112]\r\n> \tat org.eclipse.hono.example.ExampleReceiver.waitForInput(ExampleReceiver.java:81) ~[classes/:na]\r\n> \tat org.eclipse.hono.example.ExampleReceiver$$Lambda$64/1416827644.handle(Unknown Source) ~[na:na]\r\n> \tat io.vertx.core.impl.ContextImpl.lambda$executeBlocking$1(ContextImpl.java:263) ~[vertx-core-3.4.0.jar:na]\r\n> \tat io.vertx.core.impl.ContextImpl$$Lambda$66/1180079878.run(Unknown Source) ~[na:na]\r\n> \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ~[na:1.8.0_112]\r\n> \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[na:1.8.0_112]\r\n> \tat java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_112]\r\n\r\nEvery second after that, a new warning is printed.", "url": "https://github.com/eclipse/hono/issues/122", "user": "calohmn", "labels": ["bug"], "created": "2017-03-15 11:58:39", "closed": "2017-03-15 13:18:01", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "MQTT adapter doesn't start anymore", "body": "When the MQTT adapter is starting up, it throws a NoClassDefFound exception because it requires `io.vertx.core.net.impl.NetServerBase` which is provided by vertx-core-3.3.4.Beta1 only. However, we are using vertx-core-3.3.3 ...\r\n\r\nHere's the stack tracec:\r\n\r\n15:43:34.851 [vert.x-eventloop-thread-2] ERROR o.e.h.a.m.Application$$EnhancerBySpringCGLIB$$5f2015e6 - could not start 'MQTT' adapter\r\njava.lang.NoClassDefFoundError: io/vertx/core/net/impl/NetServerBase\r\n\tat java.lang.ClassLoader.defineClass1(Native Method) ~[na:1.8.0_102]\r\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:763) ~[na:1.8.0_102]\r\n\tat java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142) ~[na:1.8.0_102]\r\n\tat java.net.URLClassLoader.defineClass(URLClassLoader.java:467) ~[na:1.8.0_102]\r\n\tat java.net.URLClassLoader.access$100(URLClassLoader.java:73) ~[na:1.8.0_102]\r\n\tat java.net.URLClassLoader$1.run(URLClassLoader.java:368) ~[na:1.8.0_102]\r\n\tat java.net.URLClassLoader$1.run(URLClassLoader.java:362) ~[na:1.8.0_102]\r\n\tat java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_102]\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:361) ~[na:1.8.0_102]\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_102]\r\n\tat org.springframework.boot.loader.LaunchedURLClassLoader.loadClass(LaunchedURLClassLoader.java:89) ~[hono-adapter-mqtt-vertx-0.5-M5-SNAPSHOT.jar:na]\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_102]\r\n\tat io.vertx.mqtt.MqttServer.create(MqttServer.java:45) ~[vertx-mqtt-server-3.4.0.Beta1.jar!/:na]\r\n\tat org.eclipse.hono.adapter.mqtt.VertxBasedMqttProtocolAdapter.bindMqttServer(VertxBasedMqttProtocolAdapter.java:88) ~[classes!/:na]\r\n\tat org.eclipse.hono.adapter.mqtt.VertxBasedMqttProtocolAdapter.start(VertxBasedMqttProtocolAdapter.java:130) ~[classes!/:na]\r\n\tat io.vertx.core.impl.DeploymentManager.lambda$doDeploy$8(DeploymentManager.java:434) ~[vertx-core-3.3.3.jar!/:na]\r\n\tat io.vertx.core.impl.ContextImpl.lambda$wrapTask$2(ContextImpl.java:316) ~[vertx-core-3.3.3.jar!/:na]\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.8.Final.jar!/:4.1.8.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.8.Final.jar!/:4.1.8.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:445) ~[netty-transport-4.1.8.Final.jar!/:4.1.8.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.8.Final.jar!/:4.1.8.Final]\r\n\tat java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_102]\r\nCaused by: java.lang.ClassNotFoundException: io.vertx.core.net.impl.NetServerBase\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:381) ~[na:1.8.0_102]\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_102]\r\n\tat org.springframework.boot.loader.LaunchedURLClassLoader.loadClass(LaunchedURLClassLoader.java:89) ~[hono-adapter-mqtt-vertx-0.5-M5-SNAPSHOT.jar:na]\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_102]\r\n\t... 22 common frames omitted\r\n", "url": "https://github.com/eclipse/hono/issues/110", "user": "sophokles73", "labels": ["MQTT Adapter", "bug"], "created": "2017-03-07 15:56:31", "closed": "2017-03-10 08:45:18", "commits": {"4305b364b0ffe5f79108e16bb40856ffa39c70be": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "4305b364b0ffe5f79108e16bb40856ffa39c70be", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["af2149863f5a746cc7282bb43741bd954b74df11"], "nameRev": "4305b364b0ffe5f79108e16bb40856ffa39c70be tags/0.5-M5~54", "commitMessage": "[#110] Set scope of adapter and HonoClient to \"prototype\".\n\nWithout the \"prototype\" scope only one instance of the adapter is\ncreated and deployed multiple times. Same holds true for the HonoClient.\nWithout the \"prototype\" scope only one client is used and accessed\nconcurrently by multiple adapter instances (for which the HonoClient has\nnot been designed).", "commitDateTime": "2017-03-10 10:08:49", "authoredDateTime": "2017-03-10 10:08:49", "commitGitStats": [{"filePath": "adapters/mqtt-vertx/src/main/java/org/eclipse/hono/adapter/mqtt/Config.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "adapters/mqtt-vertx/src/main/java/org/eclipse/hono/adapter/mqtt/VertxBasedMqttProtocolAdapter.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "adapters/rest-vertx/src/main/java/org/eclipse/hono/adapter/rest/Config.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Config.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.rest.Config.honoClient()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "VertxBasedMqttProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.VertxBasedMqttProtocolAdapter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4305b364b0ffe5f79108e16bb40856ffa39c70be"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 0, "lines": 6, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["adapters/mqtt-vertx/src/main/java/org/eclipse/hono/adapter/mqtt", "adapters/rest-vertx/src/main/java/org/eclipse/hono/adapter/rest"], "changesInPackagesSPOON": ["org.eclipse.hono.adapter.rest.Config.honoClient()", "org.eclipse.hono.adapter.mqtt.VertxBasedMqttProtocolAdapter"]}, {"title": "Hono client does not call connectionHandler in case of failure", "body": "A connectionHandler that is registered with the Hono client is not called in case of a connection failure.\r\n\r\nThis can be reproduced by configuring an invalid port - the connection refused message is logged, but the handler is never called.\r\n\r\nExpected behaviour is that the connectionHandler is called with a failed result.", "url": "https://github.com/eclipse/hono/issues/106", "user": "sysexcontrol", "labels": ["bug"], "created": "2017-03-03 13:35:32", "closed": "2017-03-04 13:48:00", "commits": {"32bb0fdf17d18270227e7684ad407b0419dab287": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "32bb0fdf17d18270227e7684ad407b0419dab287", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["24f410a60a787338b29f7627bd463005e17093ad"], "nameRev": "32bb0fdf17d18270227e7684ad407b0419dab287 tags/0.5-M5~73", "commitMessage": "[#106] Add test case.\n\nFix: make sure to use default ProtonClientOptions if none provided to connect method.", "commitDateTime": "2017-03-04 14:45:47", "authoredDateTime": "2017-03-04 14:45:47", "commitGitStats": [{"filePath": "core/pom.xml", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "core/src/main/java/org/eclipse/hono/connection/ConnectionFactoryImpl.java", "insertions": 19, "deletions": 18, "lines": 37}, {"filePath": "core/src/test/java/org/eclipse/hono/connection/ConnectionFactoryImplTest.java", "insertions": 79, "deletions": 0, "lines": 79}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionFactoryImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImpl.connect(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImpl.ConnectionFactoryBuilder.build()", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 2}]}, {"spoonFilePath": "ConnectionFactoryImplTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.connection.ConnectionFactoryImplTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["32bb0fdf17d18270227e7684ad407b0419dab287"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 19, "deletions": 18, "lines": 37, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8, "UPD": 1, "INS": 1, "MOV": 4, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/org/eclipse/hono/connection"], "changesInPackagesSPOON": ["org.eclipse.hono.connection.ConnectionFactoryImpl.ConnectionFactoryBuilder.build()", "org.eclipse.hono.connection.ConnectionFactoryImpl.connect(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)"]}, {"title": "Hono server continuously replenishes clients with additional credits", "body": "When a client (e.g. a protocol adapter) connects to Hono in order to upload telemetry data or events it is provided with *credits* at the AMQP protocol level indicating to the sender (the client) how many messages the Hono server is willing to accept and process.\r\nHono itself gets credits analogously from the downstream container it is connected to (the Dispatch Router). However, Hono server erronously *adds* the credits it receives from the downstream container to the credits the client has been given which leads to a continuously increasing amount of credits being granted to the client.\r\nHono server needs to consider the (unused) credits already granted to the client when replenishing the client with credits received from the downstream container.\r\n", "url": "https://github.com/eclipse/hono/issues/102", "user": "sophokles73", "labels": ["bug"], "created": "2017-03-01 09:18:22", "closed": "2017-03-02 12:35:09", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Sending telemetry fails after restarting Dispatch Router", "body": "I'm sending telemetry data via Hono REST Adapter -> Hono -> Dispatch Router -> external application. After the Dispatch Router is restarted messages are dropped:\r\n> 09:53:19.349 [vert.x-eventloop-thread-3] INFO  o.e.h.t.i.ForwardingTelemetryDownstreamAdapter - no downstream sender for link [5c595b4f-31c2-4c4f-a898-54f20b2ca36f] available, discarding message and closing link with client\r\n\r\nThe receiving application did successfully reconnect to the Dispatch Router as well as the Hono server. But a new sending link is not opened for new telemetry data arriving.", "url": "https://github.com/eclipse/hono/issues/96", "user": "dguggemos", "labels": ["bug"], "created": "2017-02-20 10:11:06", "closed": "2017-02-21 14:56:34", "commits": {"a77879897802eff7b944add9a223aa902bcb249b": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "a77879897802eff7b944add9a223aa902bcb249b", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["630cff697babda3e155159830cf0ab6c1068f48b"], "nameRev": "a77879897802eff7b944add9a223aa902bcb249b tags/0.5-M4~2", "commitMessage": "[#96] Close upstream receivers on downstream connection loss.\n\nWhen the connection to the downstream container is lost, all links with\nupstream clients for receiving telemetry or events are closed.\nThis way the clients will trigger the opening of new downstream senders\nwhen they re-establish their links with Hono.", "commitDateTime": "2017-02-21 15:26:44", "authoredDateTime": "2017-02-21 15:26:44", "commitGitStats": [{"filePath": "server/src/main/java/org/eclipse/hono/server/ForwardingDownstreamAdapter.java", "insertions": 42, "deletions": 32, "lines": 74}, {"filePath": "server/src/main/java/org/eclipse/hono/server/UpstreamReceiver.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "server/src/main/java/org/eclipse/hono/server/UpstreamReceiverImpl.java", "insertions": 32, "deletions": 1, "lines": 33}, {"filePath": "server/src/test/java/org/eclipse/hono/TestSupport.java", "insertions": 32, "deletions": 1, "lines": 33}, {"filePath": "server/src/test/java/org/eclipse/hono/event/impl/ForwardingEventDownstreamAdapterTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "server/src/test/java/org/eclipse/hono/server/ForwardingDownstreamAdapterTest.java", "insertions": 118, "deletions": 44, "lines": 162}, {"filePath": "server/src/test/java/org/eclipse/hono/telemetry/impl/ForwardingTelemetryDownstreamAdapterTest.java", "insertions": 10, "deletions": 1, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ForwardingDownstreamAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.addSender(java.lang.String,java.lang.String,io.vertx.proton.ProtonSender)", "TOT": 13, "UPD": 7, "INS": 0, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.closeSender(java.lang.String)", "TOT": 11, "UPD": 6, "INS": 0, "MOV": 2, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.createClientOptions()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.onDisconnectFromDownstreamContainer(io.vertx.proton.ProtonConnection)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.onClientDisconnect(java.lang.String)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.onClientAttach(org.eclipse.hono.server.UpstreamReceiver,io.vertx.core.Handler)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.onClientDetach(org.eclipse.hono.server.UpstreamReceiver)", "TOT": 14, "UPD": 0, "INS": 3, "MOV": 7, "DEL": 4}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.processMessage(org.eclipse.hono.server.UpstreamReceiver,io.vertx.proton.ProtonDelivery,org.apache.qpid.proton.message.Message)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.addSender(org.eclipse.hono.server.UpstreamReceiver,io.vertx.proton.ProtonSender)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.closeSender(org.eclipse.hono.server.UpstreamReceiver)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UpstreamReceiver.java", "spoonMethods": []}, {"spoonFilePath": "UpstreamReceiverImpl.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.server.UpstreamReceiverImpl.hashCode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.UpstreamReceiverImpl.equals(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestSupport.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.TestSupport.newClient()", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.TestSupport", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.TestSupport.newClient(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.TestSupport.newClient(java.lang.String,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ForwardingEventDownstreamAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.event.impl.ForwardingEventDownstreamAdapterTest.testProcessMessageForwardsEventMessageToDownstreamSender()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "ForwardingDownstreamAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.testHandleFlowForwardsDrainRequestUpstream()", "TOT": 6, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.testDownstreamDisconnectTriggersReconnect()", "TOT": 26, "UPD": 9, "INS": 1, "MOV": 15, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.testOnClientDisconnectClosesDownstreamSenders()", "TOT": 8, "UPD": 1, "INS": 2, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.givenADownstreamAdapter(io.vertx.proton.ProtonSender).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.testClientAttachedReplenishesClientOnSuccess()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.testDownstreamDisconnectTriggersReconnect().1.connect(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.testDownstreamDisconnectClosesUpstreamReceivers()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.DisconnectHandlerProvidingConnectionFactory", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.setup()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.DisconnectHandlerProvidingConnectionFactory.connect(io.vertx.proton.ProtonClientOptions,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.testDownstreamDisconnectTriggersReconnect().1.getName()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.testDownstreamDisconnectTriggersReconnect().1.getHost()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.testDownstreamDisconnectTriggersReconnect().1.getPort()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest.testDownstreamDisconnectTriggersReconnect().1.getPathSeparator()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ForwardingTelemetryDownstreamAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.telemetry.impl.ForwardingTelemetryDownstreamAdapterTest.testProcessTelemetryDataForwardsMessageToDownstreamSender()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a77879897802eff7b944add9a223aa902bcb249b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 77, "deletions": 34, "lines": 111, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 57, "UPD": 18, "INS": 12, "MOV": 17, "DEL": 10, "spoonFilesChanged": 2, "spoonMethodsChanged": 12}, "statsSkippedReason": "", "changesInPackagesGIT": ["server/src/main/java/org/eclipse/hono/server"], "changesInPackagesSPOON": ["org.eclipse.hono.server.UpstreamReceiverImpl.hashCode()", "org.eclipse.hono.server.ForwardingDownstreamAdapter.closeSender(org.eclipse.hono.server.UpstreamReceiver)", "org.eclipse.hono.server.ForwardingDownstreamAdapter.addSender(org.eclipse.hono.server.UpstreamReceiver,io.vertx.proton.ProtonSender)", "org.eclipse.hono.server.ForwardingDownstreamAdapter.createClientOptions()", "org.eclipse.hono.server.ForwardingDownstreamAdapter.onClientDetach(org.eclipse.hono.server.UpstreamReceiver)", "org.eclipse.hono.server.ForwardingDownstreamAdapter.addSender(java.lang.String,java.lang.String,io.vertx.proton.ProtonSender)", "org.eclipse.hono.server.ForwardingDownstreamAdapter.closeSender(java.lang.String)", "org.eclipse.hono.server.ForwardingDownstreamAdapter.onClientAttach(org.eclipse.hono.server.UpstreamReceiver,io.vertx.core.Handler)", "org.eclipse.hono.server.UpstreamReceiverImpl.equals(java.lang.Object)", "org.eclipse.hono.server.ForwardingDownstreamAdapter.onDisconnectFromDownstreamContainer(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.server.ForwardingDownstreamAdapter.onClientDisconnect(java.lang.String)", "org.eclipse.hono.server.ForwardingDownstreamAdapter.processMessage(org.eclipse.hono.server.UpstreamReceiver,io.vertx.proton.ProtonDelivery,org.apache.qpid.proton.message.Message)"]}, {"title": "Connections to Hono Server become stale over time", "body": "Connections established by e.g. one of the protocol adapters to a Hono server are intended to be long lived by design, i.e. the connection is established during start-up of the adapter and then used for creating arbitrary links with Hono server for uploading telemetry data or using the registration API.\r\nHowever, the underlying connection seems to become stale when no data is transmitted for some time. The client does not detect this and therefore does not re-establish the connection which basically renders the client/connection unusable.", "url": "https://github.com/eclipse/hono/issues/91", "user": "sophokles73", "labels": ["HTTP Adapter", "MQTT Adapter", "bug"], "created": "2017-02-09 16:34:50", "closed": "2017-02-10 12:54:00", "commits": {"dc0fbe295617177f92f11453fb4b2ba023cfaab8": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "dc0fbe295617177f92f11453fb4b2ba023cfaab8", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["433fd498ef0d747f3008f88baa49ac0e21d9343d"], "nameRev": "dc0fbe295617177f92f11453fb4b2ba023cfaab8 tags/0.5-M4~25", "commitMessage": "[#91] Set AMQP idle time out to 2 minutes for client connections.\n\nThis way Hono server closes idle connections from clients after two\nminutes of inactivity. This forces clients to either explicitly keep\nalive the connection (e.g. by sending empty frames periodically) or\nre-connect to Hono server.\n", "commitDateTime": "2017-02-09 17:36:01", "authoredDateTime": "2017-02-02 17:43:45", "commitGitStats": [{"filePath": "bom/pom.xml", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "server/src/main/java/org/eclipse/hono/server/HonoServer.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HonoServer.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.server.HonoServer.createServerOptions()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dc0fbe295617177f92f11453fb4b2ba023cfaab8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["server/src/main/java/org/eclipse/hono/server"], "changesInPackagesSPOON": ["org.eclipse.hono.server.HonoServer.createServerOptions()"]}, {"title": "Website typos", "body": "- on https://www.eclipse.org/hono/component/mqtt-adapter/\r\nthe layout is broken in the middle of the page (missing block termination before \"Run using Docker Compose\").\r\n- on https://www.eclipse.org/hono/component/hono-server/\r\nthe default for HONO_DOWNSTREAM_PORT in the table is 5673 (not 5672)", "url": "https://github.com/eclipse/hono/issues/88", "user": "calohmn", "labels": ["bug"], "created": "2017-01-27 11:43:24", "closed": "2017-01-31 10:10:13", "commits": {"b9337a35b0e0b4e38d342ae2265b5e4fce0e585c": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "b9337a35b0e0b4e38d342ae2265b5e4fce0e585c", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["06d20ab2bcecd65faefe77b4d84457b235f1934d"], "nameRev": "b9337a35b0e0b4e38d342ae2265b5e4fce0e585c tags/0.5-M3~1", "commitMessage": "[#88] Fix typos/formatting in web site pages.", "commitDateTime": "2017-01-31 10:46:16", "authoredDateTime": "2017-01-31 10:46:16", "commitGitStats": [{"filePath": "site/content/component/hono-server.md", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "site/content/component/mqtt-adapter.md", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "site/content/component/rest-adapter.md", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b9337a35b0e0b4e38d342ae2265b5e4fce0e585c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Hono Examples: client doesn't send any data to server", "body": "Hi Hono-team,\r\n\r\nafter trying out the Hono examples, it seems that the Hono client for telemetry data (started with` java -jar target/hono-example-0.5-M3-SNAPSHOT.jar --spring.profiles.active=sender --hono.client.host=<myIp>`) is not sending any data to the server. There is **no output** within the logging console (started with `java -jar target/hono-example-0.5-M3-SNAPSHOT.jar --hono.client.host=192.168.99.100`). The scenario works fine using the REST adapter.\r\n\r\nregards,\r\nOliver", "url": "https://github.com/eclipse/hono/issues/84", "user": "oliverfischer83", "labels": ["bug"], "created": "2017-01-17 11:10:03", "closed": "2017-01-17 16:57:24", "commits": {"c36629ff337f5383b68acd2089c18e5498a5f2c3": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c36629ff337f5383b68acd2089c18e5498a5f2c3", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["c0b058f35bada225d68cf2edeb5c96de33ac549e"], "nameRev": "c36629ff337f5383b68acd2089c18e5498a5f2c3 tags/0.5-M3~25", "commitMessage": "[#84] Configure trust store for connection to Hono.", "commitDateTime": "2017-01-17 14:08:58", "authoredDateTime": "2017-01-17 14:08:15", "commitGitStats": [{"filePath": "example/pom.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "example/src/main/java/org/eclipse/hono/example/ExampleSender.java", "insertions": 5, "deletions": 28, "lines": 33}, {"filePath": "example/src/main/resources/application-activemq.properties", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "example/src/main/resources/application-sender.properties", "insertions": 0, "deletions": 7, "lines": 7}, {"filePath": "example/src/main/resources/application.properties", "insertions": 0, "deletions": 8, "lines": 8}, {"filePath": "example/src/main/resources/application.yml", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "example/src/main/resources/logback.xml", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "server/src/test/java/org/eclipse/hono/server/StandaloneTelemetryApiTest.java", "insertions": 9, "deletions": 6, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ExampleSender.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.example.ExampleSender", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 6}, {"spoonMethodName": "org.eclipse.hono.example.ExampleSender.start()", "TOT": 40, "UPD": 0, "INS": 17, "MOV": 5, "DEL": 18}, {"spoonMethodName": "org.eclipse.hono.example.ExampleSender.readMessagesFromStdin(org.eclipse.hono.client.MessageSender,io.vertx.core.Future)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 3}]}, {"spoonFilePath": "StandaloneTelemetryApiTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.server.StandaloneTelemetryApiTest.testLinkGetsClosedWhenUploadingMalformedTelemetryDataMessage(io.vertx.ext.unit.TestContext)", "TOT": 16, "UPD": 4, "INS": 3, "MOV": 5, "DEL": 4}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c36629ff337f5383b68acd2089c18e5498a5f2c3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 39, "deletions": 46, "lines": 85, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 52, "UPD": 0, "INS": 20, "MOV": 5, "DEL": 27, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["example/src/main/resources/application-activemq.properties", "example/src/main/resources/application.yml", "example/src/main/java/org/eclipse/hono/example", "example/src/main/resources/application.properties", "example/src/main/resources/application-sender.properties"], "changesInPackagesSPOON": ["org.eclipse.hono.example.ExampleSender.readMessagesFromStdin(org.eclipse.hono.client.MessageSender,io.vertx.core.Future)", "org.eclipse.hono.example.ExampleSender", "org.eclipse.hono.example.ExampleSender.start()"]}, {"title": "MQTT protocol adapter Docker image does not start", "body": "The MQTT protocol adapter Spring Boot application fails to start with a ClassNotFoundException:\r\n\r\n> mqtt-adapter_1  | 11:54:20.154 [main] INFO  o.e.hono.adapter.mqtt.Application - Starting Application on bf1580c30cec with PID 1 (/opt/hono/hono-adapter-mqtt-vertx-0.5-M3-SNAPSHOT.jar started by hono in /home/hono)\r\nmqtt-adapter_1  | 11:54:20.166 [main] DEBUG o.e.hono.adapter.mqtt.Application - Running with Spring Boot v1.4.0.RELEASE, Spring v4.3.2.RELEASE\r\nmqtt-adapter_1  | 11:54:20.179 [main] INFO  o.e.hono.adapter.mqtt.Application - The following profiles are active: dev\r\nmqtt-adapter_1  | 11:54:20.332 [main] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@736e9adb: startup date [Tue Dec 13 11:54:20 GMT 2016]; root of context hierarchy\r\nmqtt-adapter_1  | 11:54:22.982 [main] DEBUG o.e.h.a.m.Application$$EnhancerBySpringCGLIB$$dd565d54 - starting up 1 instances of 'MQTT' adapter verticle\r\nmqtt-adapter_1  | 11:54:22.988 [main] WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'application': Invocation of init method failed; nested exception is java.lang.NoClassDefFoundError: io/vertx/mqtt/MqttEndpoint\r\nmqtt-adapter_1  | 11:54:23.019 [main] INFO  o.s.b.a.l.AutoConfigurationReportLoggingInitializer - \r\nmqtt-adapter_1  | \r\nmqtt-adapter_1  | Error starting ApplicationContext. To display the auto-configuration report enable debug logging (start with --debug)\r\nmqtt-adapter_1  | \r\nmqtt-adapter_1  | \r\nmqtt-adapter_1  | 11:54:23.075 [main] ERROR o.s.boot.SpringApplication - Application startup failed\r\nmqtt-adapter_1  | org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'application': Invocation of init method failed; nested exception is java.lang.NoClassDefFoundError: io/vertx/mqtt/MqttEndpoint\r\nmqtt-adapter_1  | \tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136) ~[spring-beans-4.3.2.RELEASE.jar!/:4.3.2.RELEASE]\r\nmqtt-adapter_1  | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:408) ~[spring-beans-4.3.2.RELEASE.jar!/:4.3.2.RELEASE]\r\nmqtt-adapter_1  | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1570) ~[spring-beans-4.3.2.RELEASE.jar!/:4.3.2.RELEASE]\r\nmqtt-adapter_1  | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545) ~[spring-beans-4.3.2.RELEASE.jar!/:4.3.2.RELEASE]\r\n\r\n\r\nI suspect this is because the now *system* scoped dependency on vertx-mqtt-server is not included in the *uber*-jar (because of the scope)...", "url": "https://github.com/eclipse/hono/issues/78", "user": "sophokles73", "labels": ["bug"], "created": "2016-12-13 11:58:06", "closed": "2016-12-13 17:38:28", "commits": {"f6b306303feb472cb10f281db779a773273b68ab": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "f6b306303feb472cb10f281db779a773273b68ab", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["1a40c9efc74f2872e4feef61e43e84016df7b9ce"], "nameRev": "f6b306303feb472cb10f281db779a773273b68ab tags/0.5-M3~49", "commitMessage": "[#78] Include system scope dependencies in Spring Boot application.", "commitDateTime": "2016-12-13 18:37:21", "authoredDateTime": "2016-12-13 18:37:21", "commitGitStats": [{"filePath": "adapters/mqtt-vertx/pom.xml", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f6b306303feb472cb10f281db779a773273b68ab"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Hono server does not close downstream sender when client disconnects", "body": "When a client disconnects from an endpoint that forwards messages downstream to the dispatch router, the downstream sender is not closed. This leads to session exhaustion if e.g. multiple devices want to connect to the telemetry endpoint.", "url": "https://github.com/eclipse/hono/issues/77", "user": "sophokles73", "labels": ["bug"], "created": "2016-12-12 12:07:01", "closed": "2016-12-13 17:29:02", "commits": {"79a0875016ba93252f3e1b4b21e89db3d2b4225b": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "79a0875016ba93252f3e1b4b21e89db3d2b4225b", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["228e78549d6543572a89a4ffa33eb91b929ecf38"], "nameRev": "79a0875016ba93252f3e1b4b21e89db3d2b4225b tags/0.5-M3~52", "commitMessage": "[#77] Close downstream sender when upstream client disconnects.", "commitDateTime": "2016-12-13 15:32:08", "authoredDateTime": "2016-12-13 15:32:08", "commitGitStats": [{"filePath": "server/src/main/java/org/eclipse/hono/server/DownstreamAdapter.java", "insertions": 29, "deletions": 4, "lines": 33}, {"filePath": "server/src/main/java/org/eclipse/hono/server/ForwardingDownstreamAdapter.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "server/src/main/java/org/eclipse/hono/server/HonoServer.java", "insertions": 12, "deletions": 3, "lines": 15}, {"filePath": "server/src/main/java/org/eclipse/hono/server/MessageForwardingEndpoint.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "server/src/main/java/org/eclipse/hono/telemetry/impl/MessageDiscardingTelemetryDownstreamAdapter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "server/src/test/java/org/eclipse/hono/server/ForwardingDownstreamAdapterTest.java", "insertions": 67, "deletions": 0, "lines": 67}, {"filePath": "server/src/test/java/org/eclipse/hono/server/HonoServerTest.java", "insertions": 33, "deletions": 4, "lines": 37}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DownstreamAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.server.onClientDisconnect(io.vertx.proton.ProtonConnection)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ForwardingDownstreamAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapter.onClientDisconnect(io.vertx.proton.ProtonConnection)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HonoServer.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.server.HonoServer.handleRemoteConnectionClose(io.vertx.proton.ProtonConnection,io.vertx.core.AsyncResult)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.server.HonoServer.getServerPort()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.HonoServer.handleRemoteConnectionOpen(io.vertx.proton.ProtonConnection)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MessageForwardingEndpoint.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.server.MessageForwardingEndpoint", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.MessageForwardingEndpoint.onClientDisconnect(io.vertx.core.eventbus.Message)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.MessageForwardingEndpoint.doStart(io.vertx.core.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.MessageForwardingEndpoint.doStop(io.vertx.core.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MessageDiscardingTelemetryDownstreamAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.telemetry.impl.MessageDiscardingTelemetryDownstreamAdapter.onClientDisconnect(io.vertx.proton.ProtonConnection)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ForwardingDownstreamAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.server.ForwardingDownstreamAdapterTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HonoServerTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.server.HonoServerTest.newAuthenticatedConnection(java.lang.String)", "TOT": 14, "UPD": 6, "INS": 1, "MOV": 7, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.HonoServerTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.server.HonoServerTest.getTarget(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["79a0875016ba93252f3e1b4b21e89db3d2b4225b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 54, "deletions": 10, "lines": 64, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 16, "UPD": 6, "INS": 7, "MOV": 1, "DEL": 2, "spoonFilesChanged": 5, "spoonMethodsChanged": 10}, "statsSkippedReason": "", "changesInPackagesGIT": ["server/src/main/java/org/eclipse/hono/server", "server/src/main/java/org/eclipse/hono/telemetry/impl"], "changesInPackagesSPOON": ["org.eclipse.hono.server.HonoServer.handleRemoteConnectionOpen(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.telemetry.impl.MessageDiscardingTelemetryDownstreamAdapter.onClientDisconnect(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.server.onClientDisconnect(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.server.HonoServer.getServerPort()", "org.eclipse.hono.server.MessageForwardingEndpoint.onClientDisconnect(io.vertx.core.eventbus.Message)", "org.eclipse.hono.server.HonoServer.handleRemoteConnectionClose(io.vertx.proton.ProtonConnection,io.vertx.core.AsyncResult)", "org.eclipse.hono.server.MessageForwardingEndpoint.doStop(io.vertx.core.Future)", "org.eclipse.hono.server.ForwardingDownstreamAdapter.onClientDisconnect(io.vertx.proton.ProtonConnection)", "org.eclipse.hono.server.MessageForwardingEndpoint.doStart(io.vertx.core.Future)", "org.eclipse.hono.server.MessageForwardingEndpoint"]}, {"title": "Hono build breaks with missing vertx-mqtt-server dependency", "body": "The SNAPSHOT version referred to by the mqtt-adapter module cannot be resolved.\r\n\r\nThis seems to be because Sonatype's repository (where the snapshot is retrieved from) does not keep all snapshot versions forever.", "url": "https://github.com/eclipse/hono/issues/74", "user": "sophokles73", "labels": ["bug"], "created": "2016-12-08 10:01:57", "closed": "2016-12-09 10:20:34", "commits": {"dc66cf5ea699076700629de3a2f9ef75956a85d1": {"commitGHEventType": "referenced", "commitUser": "ppatierno"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "dc66cf5ea699076700629de3a2f9ef75956a85d1", "commitGHEventType": "referenced", "commitUser": "ppatierno", "commitParents": ["237650470f19fa75e1d12a3d4063a078ab92bd2f", "e8434c6cc1373aac941cf29a0388979b90553881"], "nameRev": "dc66cf5ea699076700629de3a2f9ef75956a85d1 tags/0.5-M3~56", "commitMessage": "Merge pull request #75 from eclipse/mqtt_server_lib\n\n[#74] Added last Vert.x MQTT server JAR artifact\n", "commitDateTime": "2016-12-09 11:16:32", "authoredDateTime": "2016-12-09 11:08:58", "commitGitStats": [{"filePath": "adapters/mqtt-vertx/lib/vertx-mqtt-server-3.4.0-20161128.154251-24.jar", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "adapters/mqtt-vertx/pom.xml", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "adapters/mqtt-vertx/src/main/java/org/eclipse/hono/adapter/mqtt/VertxBasedMqttProtocolAdapter.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "bom/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VertxBasedMqttProtocolAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.adapter.mqtt.VertxBasedMqttProtocolAdapter.handleEndpointConnection(io.vertx.mqtt.MqttEndpoint)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.adapter.mqtt.VertxBasedMqttProtocolAdapter.sendToHono(io.vertx.mqtt.MqttEndpoint,org.eclipse.hono.client.MessageSender,io.vertx.mqtt.messages.MqttPublishMessage)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Hono Server does not propagate a consumer's drain request upstream", "body": "When a consumer of telemetry data issues a drain request to Hono, the upstream producer(s) of the data should also be drained accordingly in order to prevent Hono from being *flooded* with data for which there is no consumer.", "url": "https://github.com/eclipse/hono/issues/69", "user": "sophokles73", "labels": ["bug"], "created": "2016-10-31 12:12:52", "closed": "2016-11-01 14:37:48", "commits": {"981f2ed7242c3add5dc902fa43b685f616730bae": {"commitGHEventType": "referenced", "commitUser": "sophokles73"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "981f2ed7242c3add5dc902fa43b685f616730bae", "commitGHEventType": "referenced", "commitUser": "sophokles73", "commitParents": ["c1e9dfb733500160274e0b1c969fcea006d298c0"], "nameRev": "981f2ed7242c3add5dc902fa43b685f616730bae tags/0.5-M2~14", "commitMessage": "[#69] Propagate downstream consumer's drain request upstream.\n\nWhen a downstream telemetry consumer wants to drain the Hono server, the\nTelemetryEndpoint sends a FLOW message to the client with the drain flag\nset. The result from the client is propagated back to the downstream\nconsumer.", "commitDateTime": "2016-11-01 15:19:51", "authoredDateTime": "2016-11-01 15:19:51", "commitGitStats": [{"filePath": "application/src/main/java/org/eclipse/hono/application/Application.java", "insertions": 0, "deletions": 29, "lines": 29}, {"filePath": "core/src/main/java/org/eclipse/hono/util/Constants.java", "insertions": 13, "deletions": 9, "lines": 22}, {"filePath": "server/src/main/java/org/eclipse/hono/server/BaseEndpoint.java", "insertions": 1, "deletions": 6, "lines": 7}, {"filePath": "server/src/main/java/org/eclipse/hono/server/ErrorConditions.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "server/src/main/java/org/eclipse/hono/telemetry/TelemetryConstants.java", "insertions": 28, "deletions": 17, "lines": 45}, {"filePath": "server/src/main/java/org/eclipse/hono/telemetry/impl/BaseTelemetryAdapter.java", "insertions": 23, "deletions": 9, "lines": 32}, {"filePath": "server/src/main/java/org/eclipse/hono/telemetry/impl/ForwardingTelemetryAdapter.java", "insertions": 34, "deletions": 9, "lines": 43}, {"filePath": "server/src/main/java/org/eclipse/hono/telemetry/impl/MessageDiscardingTelemetryAdapter.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "server/src/main/java/org/eclipse/hono/telemetry/impl/TelemetryEndpoint.java", "insertions": 57, "deletions": 25, "lines": 82}, {"filePath": "server/src/test/java/org/eclipse/hono/telemetry/impl/ForwardingTelemetryAdapterTest.java", "insertions": 65, "deletions": 15, "lines": 80}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Application.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.application.Application", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.application.Application.registerVerticles()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.application.Application.shutdown(long,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Constants.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.util.Constants", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.util.Constants.getRestartJson()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "BaseEndpoint.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.server.BaseEndpoint", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}]}, {"spoonFilePath": "ErrorConditions.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.server.ErrorConditions", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TelemetryConstants.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.telemetry.TelemetryConstants.getCreditReplenishmentMsg(java.lang.String,int)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.telemetry.TelemetryConstants.isErrorMessage(io.vertx.core.json.JsonObject)", "TOT": 9, "UPD": 5, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.telemetry.TelemetryConstants.isFlowControlMessage(io.vertx.core.json.JsonObject)", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.telemetry.TelemetryConstants.getErrorMessage(java.lang.String,boolean)", "TOT": 9, "UPD": 4, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.telemetry.TelemetryConstants", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.telemetry.TelemetryConstants.isErrorMessage(io.vertx.core.MultiMap)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.telemetry.TelemetryConstants.hasHeader(io.vertx.core.MultiMap,java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.telemetry.TelemetryConstants.getFlowControlMsg(java.lang.String,int,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseTelemetryAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.telemetry.impl.BaseTelemetryAdapter.replenishUpstreamSender(java.lang.String,int)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.BaseTelemetryAdapter.onLinkAttached(java.lang.String,java.lang.String,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.BaseTelemetryAdapter.sendMessage(java.lang.String,io.vertx.core.json.JsonObject)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.BaseTelemetryAdapter.sendErrorMessage(java.lang.String,boolean)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.BaseTelemetryAdapter.sendMessage(java.lang.String,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.json.JsonObject,io.vertx.core.Handler)", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.BaseTelemetryAdapter.sendFlowControlMessage(java.lang.String,int,io.vertx.core.Handler)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ForwardingTelemetryAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.telemetry.impl.ForwardingTelemetryAdapter.onLinkAttached(java.lang.String,java.lang.String,java.lang.String)", "TOT": 13, "UPD": 5, "INS": 1, "MOV": 4, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.ForwardingTelemetryAdapter.handleFlow(java.lang.String,java.lang.String,io.vertx.proton.ProtonSender)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.ForwardingTelemetryAdapter.addSender(java.lang.String,java.lang.String,io.vertx.proton.ProtonSender)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MessageDiscardingTelemetryAdapter.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.telemetry.impl.MessageDiscardingTelemetryAdapter.LinkStatus.resume()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.MessageDiscardingTelemetryAdapter.LinkStatus.onMsgReceived()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TelemetryEndpoint.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.telemetry.impl.TelemetryEndpoint.handleFlowControlMsg(io.vertx.core.eventbus.Message)", "TOT": 11, "UPD": 2, "INS": 0, "MOV": 6, "DEL": 3}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.TelemetryEndpoint.handleErrorMessage(io.vertx.core.json.JsonObject)", "TOT": 11, "UPD": 3, "INS": 2, "MOV": 4, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.TelemetryEndpoint.handleFlowControlMsg(io.vertx.core.json.JsonObject)", "TOT": 10, "UPD": 4, "INS": 0, "MOV": 4, "DEL": 2}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.TelemetryEndpoint.onLinkAttach(io.vertx.proton.ProtonReceiver,org.eclipse.hono.util.ResourceIdentifier)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.TelemetryEndpoint.handleFlowControlMsg(io.vertx.core.json.JsonObject,io.vertx.core.Handler)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.TelemetryEndpoint.onLinkAttach(java.lang.String,io.vertx.proton.ProtonReceiver,org.eclipse.hono.util.ResourceIdentifier)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.TelemetryEndpoint.onLinkDetach(org.eclipse.hono.telemetry.impl.TelemetryEndpoint$LinkWrapper,org.apache.qpid.proton.amqp.transport.ErrorCondition)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.TelemetryEndpoint.LinkWrapper.drain(long,io.vertx.core.Handler)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.TelemetryEndpoint.handleUpstreamMsg(io.vertx.core.eventbus.Message)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ForwardingTelemetryAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.eclipse.hono.telemetry.impl.ForwardingTelemetryAdapterTest.testProcessTelemetryDataForwardsMessageToSender()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.ForwardingTelemetryAdapterTest.testClientAttachedResumesClientOnSuccess()", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.ForwardingTelemetryAdapterTest.testHandleFlowForwardsDrainRequestUpstream()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.ForwardingTelemetryAdapterTest.newMockSender(boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.ForwardingTelemetryAdapterTest.testClientAttachedReplenishesClientOnSuccess()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.ForwardingTelemetryAdapterTest.testClientAttachedClosesLinkIfDownstreamConnectionIsBroken()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.eclipse.hono.telemetry.impl.ForwardingTelemetryAdapterTest.testProcessTelemetryDataForwardsMessageToDownstreamSender()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["981f2ed7242c3add5dc902fa43b685f616730bae"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 196, "deletions": 106, "lines": 302, "gitFilesChange": 9}, "spoonStatsSummary": {"TOT": 131, "UPD": 34, "INS": 37, "MOV": 34, "DEL": 26, "spoonFilesChanged": 9, "spoonMethodsChanged": 35}, "statsSkippedReason": "", "changesInPackagesGIT": ["server/src/main/java/org/eclipse/hono/telemetry/impl", "application/src/main/java/org/eclipse/hono/application", "server/src/main/java/org/eclipse/hono/server", "server/src/main/java/org/eclipse/hono/telemetry", "core/src/main/java/org/eclipse/hono/util"], "changesInPackagesSPOON": ["org.eclipse.hono.application.Application.registerVerticles()", "org.eclipse.hono.telemetry.impl.BaseTelemetryAdapter.sendErrorMessage(java.lang.String,boolean)", "org.eclipse.hono.telemetry.impl.ForwardingTelemetryAdapter.onLinkAttached(java.lang.String,java.lang.String,java.lang.String)", "org.eclipse.hono.telemetry.impl.BaseTelemetryAdapter.sendMessage(java.lang.String,io.vertx.core.json.JsonObject)", "org.eclipse.hono.telemetry.TelemetryConstants.getCreditReplenishmentMsg(java.lang.String,int)", "org.eclipse.hono.telemetry.impl.TelemetryEndpoint.handleFlowControlMsg(io.vertx.core.json.JsonObject)", "org.eclipse.hono.telemetry.TelemetryConstants.hasHeader(io.vertx.core.MultiMap,java.lang.String,java.lang.String)", "org.eclipse.hono.server.BaseEndpoint", "org.eclipse.hono.telemetry.impl.TelemetryEndpoint.onLinkAttach(java.lang.String,io.vertx.proton.ProtonReceiver,org.eclipse.hono.util.ResourceIdentifier)", "org.eclipse.hono.telemetry.impl.TelemetryEndpoint.handleErrorMessage(io.vertx.core.json.JsonObject)", "org.eclipse.hono.telemetry.TelemetryConstants.getErrorMessage(java.lang.String,boolean)", "org.eclipse.hono.util.Constants.getRestartJson()", "org.eclipse.hono.telemetry.impl.TelemetryEndpoint.handleFlowControlMsg(io.vertx.core.json.JsonObject,io.vertx.core.Handler)", "org.eclipse.hono.telemetry.impl.MessageDiscardingTelemetryAdapter.LinkStatus.resume()", "org.eclipse.hono.application.Application.shutdown(long,io.vertx.core.Handler)", "org.eclipse.hono.util.Constants", "org.eclipse.hono.telemetry.TelemetryConstants.isErrorMessage(io.vertx.core.MultiMap)", "org.eclipse.hono.telemetry.TelemetryConstants.isFlowControlMessage(io.vertx.core.json.JsonObject)", "org.eclipse.hono.telemetry.impl.ForwardingTelemetryAdapter.addSender(java.lang.String,java.lang.String,io.vertx.proton.ProtonSender)", "org.eclipse.hono.telemetry.impl.MessageDiscardingTelemetryAdapter.LinkStatus.onMsgReceived()", "org.eclipse.hono.telemetry.impl.TelemetryEndpoint.onLinkAttach(io.vertx.proton.ProtonReceiver,org.eclipse.hono.util.ResourceIdentifier)", "org.eclipse.hono.telemetry.impl.BaseTelemetryAdapter.replenishUpstreamSender(java.lang.String,int)", "org.eclipse.hono.telemetry.impl.BaseTelemetryAdapter.sendFlowControlMessage(java.lang.String,int,io.vertx.core.Handler)", "org.eclipse.hono.application.Application", "org.eclipse.hono.telemetry.impl.TelemetryEndpoint.onLinkDetach(org.eclipse.hono.telemetry.impl.TelemetryEndpoint$LinkWrapper,org.apache.qpid.proton.amqp.transport.ErrorCondition)", "org.eclipse.hono.telemetry.impl.BaseTelemetryAdapter.sendMessage(java.lang.String,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.json.JsonObject,io.vertx.core.Handler)", "org.eclipse.hono.telemetry.TelemetryConstants.isErrorMessage(io.vertx.core.json.JsonObject)", "org.eclipse.hono.telemetry.TelemetryConstants", "org.eclipse.hono.telemetry.impl.ForwardingTelemetryAdapter.handleFlow(java.lang.String,java.lang.String,io.vertx.proton.ProtonSender)", "org.eclipse.hono.telemetry.impl.TelemetryEndpoint.handleUpstreamMsg(io.vertx.core.eventbus.Message)", "org.eclipse.hono.telemetry.impl.BaseTelemetryAdapter.onLinkAttached(java.lang.String,java.lang.String,java.lang.String)", "org.eclipse.hono.telemetry.TelemetryConstants.getFlowControlMsg(java.lang.String,int,boolean)", "org.eclipse.hono.telemetry.impl.TelemetryEndpoint.LinkWrapper.drain(long,io.vertx.core.Handler)", "org.eclipse.hono.telemetry.impl.TelemetryEndpoint.handleFlowControlMsg(io.vertx.core.eventbus.Message)", "org.eclipse.hono.server.ErrorConditions"]}, {"title": "HonoServerTest fails intermittently on Travis CI", "body": "From time to time [1] Hono Server tests are failing for reasons similar to those:\n\n```\nTests run: 4, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 4.756 sec <<< FAILURE! - in org.eclipse.hono.server.HonoServerTest\ntestTelemetryUpload(org.eclipse.hono.server.HonoServerTest)  Time elapsed: 3.46 sec  <<< ERROR!\njava.util.concurrent.TimeoutException: Timed out\n    at org.eclipse.hono.server.HonoServerTest.testTelemetryUpload(HonoServerTest.java:214)\n```\n\nThis happens only in CI environment. I didn't manage to reproduce this issues on my local machine.\n\n[1] https://travis-ci.org/eclipse/hono/builds\n", "url": "https://github.com/eclipse/hono/issues/43", "user": "hekonsek", "labels": ["bug"], "created": "2016-05-16 15:31:19", "closed": "2016-08-18 12:28:47", "commits": {}, "ttf": 93.00027777777778, "commitsDetails": []}]}