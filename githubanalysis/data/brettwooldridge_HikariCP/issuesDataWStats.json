{"bugLabels": ["bug", "not-a-bug"], "projectName": "brettwooldridge/HikariCP", "captureTime": "Fri Jul  3 15:19:26 2020", "issues": [{"created": "2020-05-08 10:57:27", "user": "xuwei-k", "body": "`java.sql.ShardingKey` does not exists in JDK8.\r\n\r\n\r\nI think something wrong in build settings in HikariCP 3.4.4 \ud83e\udd14 \r\n\r\nhttps://github.com/brettwooldridge/HikariCP/compare/HikariCP-3.4.3...HikariCP-3.4.4\r\n\r\nversion: 3.4.4\r\nJDK: 8\r\n\r\n\r\n- https://travis-ci.com/github/playframework/playframework/jobs/329797011\r\n- https://github.com/playframework/playframework/pull/10264\r\n\r\n```\r\n[error] Test play.db.jpa.JPAApiTest.shouldWorkWithEmptyConfiguration failed: java.lang.NoClassDefFoundError: java/sql/ShardingKey, took 1.61 sec\r\n[error]     at java.lang.Class.getDeclaredMethods0(Native Method)\r\n[error]     at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)\r\n[error]     at java.lang.Class.privateGetMethodRecursive(Class.java:3048)\r\n[error]     at java.lang.Class.getMethod0(Class.java:3018)\r\n[error]     at java.lang.Class.getMethod(Class.java:1784)\r\n[error]     at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.determineAppropriateResolverDelegate(DefaultSchemaNameResolver.java:44)\r\n[error]     at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:75)\r\n[error]     at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:311)\r\n[error]     at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)\r\n[error]     at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)\r\n```\r\n\r\n- https://github.com/xuwei-k/scalikejdbc/commit/b2d1e7d1ec1e42a393ad50e89a51160a8857862c\r\n- https://travis-ci.com/github/xuwei-k/scalikejdbc/jobs/329842154\r\n\r\n```\r\n[error] Uncaught exception when running scalikejdbc.ConnectionPoolsSpec: java.lang.NoClassDefFoundError: java/sql/ShardingKey\r\n[error] sbt.ForkMain$ForkError: java.lang.NoClassDefFoundError: java/sql/ShardingKey\r\n[error] \tat java.lang.Class.getDeclaredMethods0(Native Method)\r\n[error] \tat java.lang.Class.privateGetDeclaredMethods(Class.java:2701)\r\n[error] \tat java.lang.Class.privateGetMethodRecursive(Class.java:3048)\r\n[error] \tat java.lang.Class.getMethod0(Class.java:3018)\r\n[error] \tat java.lang.Class.getMethod(Class.java:1784)\r\n[error] \tat scalikejdbc.LoanPattern.reflMethod$Method1(LoanPattern.scala:25)\r\n[error] \tat scalikejdbc.LoanPattern.using(LoanPattern.scala:25)\r\n[error] \tat scalikejdbc.LoanPattern.using$(LoanPattern.scala:20)\r\n[error] \tat scalikejdbc.NamedDB.using(NamedDB.scala:20)\r\n[error] \tat scalikejdbc.DBConnection.readOnly(DBConnection.scala:210)\r\n[error] \tat scalikejdbc.DBConnection.readOnly$(DBConnection.scala:209)\r\n[error] \tat scalikejdbc.NamedDB.readOnly(NamedDB.scala:20)\r\n[error] \tat scalikejdbc.ConnectionPoolsSpec.$anonfun$new$1(ConnectionPoolsSpec.scala:58)\r\n[error] \tat org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)\r\n```", "closed": "2020-05-08 15:45:55", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/1578", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "java.lang.NoClassDefFoundError: java/sql/ShardingKey"}, {"created": "2020-01-09 12:10:02", "commits": {"330e64e3610832ad41168e841b4c9bb4bae01b68": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "93c71780125bcd499af1faa652c2a524d6217f7c": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2020-01-09 14:59:55", "filteredCommits": ["330e64e3610832ad41168e841b4c9bb4bae01b68"], "commitsDetails": [{"nameRev": "330e64e3610832ad41168e841b4c9bb4bae01b68 tags/HikariCP-3.4.2~1", "commitMessage": "Fixes #1528 regression in fail fast handling.\n", "commitParents": ["93c71780125bcd499af1faa652c2a524d6217f7c"], "spoonStatsSkippedReason": "", "commitHash": "330e64e3610832ad41168e841b4c9bb4bae01b68", "authoredDateTime": "2020-01-10 00:03:14", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 7, "deletions": 3, "lines": 10, "filePath": "CHANGES"}], "commitDateTime": "2020-01-10 00:03:14", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": []}, {"nameRev": "93c71780125bcd499af1faa652c2a524d6217f7c tags/HikariCP-3.4.2~2", "commitMessage": "Fixes #1528 regression in fail fast handling.\n", "commitParents": ["681b1e1af12761ac119efe201a457ebd172391f8"], "spoonStatsSkippedReason": "", "commitHash": "93c71780125bcd499af1faa652c2a524d6217f7c", "authoredDateTime": "2020-01-09 23:59:47", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 6, "deletions": 14, "lines": 20, "filePath": "src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 4, "deletions": 0, "lines": 4, "filePath": "src/main/java/com/zaxxer/hikari/pool/PoolBase.java"}], "commitDateTime": "2020-01-09 23:59:47", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 2, "INS": 0, "DEL": 4, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.createPoolEntry()"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool"}], "spoonFilePath": "HikariPool.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.PoolBase.newConnection()"}], "spoonFilePath": "PoolBase.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/1528", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "[regression] f005a476 broke HikariConfig.initializationFailTimeout", "statsSkippedReason": "", "user": "ewirch", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 0, "TOT": 0.0, "MOV": 0.0, "INS": 0.0, "DEL": 0.0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "`initializationFailTimeout` is documented to control \"whether the pool will \"fail fast\"\", but we actually use it to fail slow, but eagerly. Our connect timeout is set to 10s. We start our application and the database at the same time. Sometimes the database is slower than the application. Therefore we set `initializationFailTimeout` higher than connection timeout.\r\n\r\nIf database is slower than app, trying to connect to the database gives a `java.net.ConnectException: Connection refused`. Before 3.3.0 HikariCP would simply retry regardless of exception thrown during connection attempt:\r\n```\r\n      catch (Exception e) {\r\n         if (poolState == POOL_NORMAL) { // we check POOL_NORMAL to avoid a flood of messages if shutdown() is running concurrently\r\n            LOGGER.debug(\"{} - Cannot acquire connection from data source\", poolName, (e instanceof ConnectionSetupException ? e.getCause() : e));\r\n         }\r\n         return null;\r\n      }\r\n```\r\nThen, f005a476 changed this to record a `ConnectionSetupException`:\r\n```\r\n      catch (SQLException e) {\r\n         if (poolState == POOL_NORMAL) { // we check POOL_NORMAL to avoid a flood of messages if shutdown() is running concurrently\r\n            logger.debug(\"{} - Cannot acquire connection from data source\", poolName, e);\r\n            lastConnectionFailure.set(new ConnectionSetupException(e));\r\n         }\r\n         return null;\r\n      }\r\n      catch (Exception e) {\r\n         if (poolState == POOL_NORMAL) { // we check POOL_NORMAL to avoid a flood of messages if shutdown() is running concurrently\r\n            logger.error(\"{} - Error thrown while acquiring connection from data source\", poolName, e);\r\n            lastConnectionFailure.set(new ConnectionSetupException(e));\r\n         }\r\n         return null;\r\n      }\r\n```\r\n\r\n...which in turn makes `checkFailFast()` fail immediately:\r\n```\r\n         if (getLastConnectionFailure() instanceof ConnectionSetupException) {\r\n            throwPoolInitializationException(getLastConnectionFailure().getCause());\r\n         }\r\n```\r\n...which in turn renders `initializationFailTimeout` useless. Any exception will result in a `ConnectionSetupException`. `checkFailFast()` will exit immediately, without even using the timeout.", "labels": ["bug"]}, {"created": "2018-06-22 07:14:19", "commits": {"52b3811e4dba1ed04f8efd1230661ad38af9d660": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.util.ConcurrentBag.requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)"], "closed": "2018-07-11 12:18:56", "filteredCommits": ["52b3811e4dba1ed04f8efd1230661ad38af9d660"], "commitsDetails": [{"nameRev": "52b3811e4dba1ed04f8efd1230661ad38af9d660 tags/HikariCP-3.3.0~23", "commitMessage": "Fixes #1186 limit the number of items in the ThreadLocal list in the ConcurrentBag.\n", "commitParents": ["d0cb0f8dab5e3edaea7c4d3c5807f006d3695880"], "spoonStatsSkippedReason": "", "commitHash": "52b3811e4dba1ed04f8efd1230661ad38af9d660", "authoredDateTime": "2018-07-11 21:18:47", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 1, "lines": 4, "filePath": "src/main/java/com/zaxxer/hikari/util/ConcurrentBag.java"}], "commitDateTime": "2018-07-11 21:18:47", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag.requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)"}], "spoonFilePath": "ConcurrentBag.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/1186", "ttf": 19.00027777777778, "gitStatsSummary": {"insertions": 3, "deletions": 1, "lines": 4, "gitFilesChange": 1}, "title": "ConcurrentBag threadList OOM", "statsSkippedReason": "", "user": "gumandy", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/util"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "#### Environment\r\n```\r\nHikariCP version: x.x.x\r\n```\r\nwhen ThreadPoolA borrow an entry and ThreadPoolB requite that entry, ThreadPoolA just borrow but never requite\uff0cThreadPoolB just requite but never borrow\uff0c then ThreadPoolB's threadList OOM.\r\n\r\nI think `ThreadLocal<List<Object>> threadList;` should be with a max size, \r\nor just be `ThreadLocal<Object> threadList;`.\r\n", "labels": ["bug"]}, {"created": "2018-05-04 01:32:33", "commits": {"5607d8b91330648ff147f45aeea9a3c6421727cf": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.ProxyConnection.unwrap(java.lang.Class)", "com.zaxxer.hikari.pool.ProxyConnection.isClosed()", "com.zaxxer.hikari.pool.ProxyConnection.isWrapperFor(java.lang.Class)", "com.zaxxer.hikari.pool.ProxyConnection.ClosedConnection.getClosedConnection()"], "closed": "2018-05-19 09:22:36", "filteredCommits": ["5607d8b91330648ff147f45aeea9a3c6421727cf"], "commitsDetails": [{"nameRev": "5607d8b91330648ff147f45aeea9a3c6421727cf tags/HikariCP-3.2.0~6", "commitMessage": "Fixes #1141 do not throw SQLException when calling isClosed() or close() on a already closed Connection, as per JDBC specification.\n", "commitParents": ["8921bb08c86a7435b6bf21c78c9b2d470963d874"], "spoonStatsSkippedReason": "", "commitHash": "5607d8b91330648ff147f45aeea9a3c6421727cf", "authoredDateTime": "2018-05-19 18:22:26", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 16, "deletions": 17, "lines": 33, "filePath": "src/main/java/com/zaxxer/hikari/pool/ProxyConnection.java"}], "commitDateTime": "2018-05-19 18:22:26", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.ProxyConnection.unwrap(java.lang.Class)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.ProxyConnection.isClosed()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.ProxyConnection.isWrapperFor(java.lang.Class)"}, {"UPD": 0, "TOT": 7, "MOV": 3, "INS": 4, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.ProxyConnection.ClosedConnection.getClosedConnection()"}], "spoonFilePath": "ProxyConnection.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/1141", "ttf": 15.000277777777777, "gitStatsSummary": {"insertions": 16, "deletions": 17, "lines": 33, "gitFilesChange": 1}, "title": "com.zaxxer.hikari.pool.ProxyConnection$ClosedConnection should return false for isClosed() instead of throwing an exception", "statsSkippedReason": "", "user": "tomdcc", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/pool"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 4, "TOT": 10, "MOV": 3, "INS": 5, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "#### Environment\r\n```\r\nHikariCP version: 3.1.0\r\nJDK version     : 1.8.0_111\r\nDatabase        : PostgreSQL\r\nDriver version  : 42.1.4\r\n```\r\n\r\nSee https://github.com/brettwooldridge/HikariCP/blob/HikariCP-3.1.0/src/main/java/com/zaxxer/hikari/pool/ProxyConnection.java#L478\r\n\r\nIt's not possible to check if a connection is closed by calling `isClosed()` without special exception handling as Hikari throws an exception. There should be a check for the `isClosed` method in the handler that should just return false.", "labels": ["bug"]}, {"created": "2017-05-02 11:06:44", "commits": {"61be9b923d8608605eb97264129d4f0467a0a2cc": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.HikariPool.addBagItem(int)", "com.zaxxer.hikari.util.ConcurrentBag.addBagItem(int)", "com.zaxxer.hikari.pool.HikariPool.HouseKeeper.run()", "com.zaxxer.hikari.util.ConcurrentBag", "com.zaxxer.hikari.pool.PoolEntry", "com.zaxxer.hikari.util.ConcurrentBag.values(int)"], "closed": "2017-05-03 15:36:09", "filteredCommits": ["61be9b923d8608605eb97264129d4f0467a0a2cc"], "commitsDetails": [{"nameRev": "61be9b923d8608605eb97264129d4f0467a0a2cc tags/HikariCP-2.6.2~9", "commitMessage": "Fixes #880 Fix race condition caused by sorting collection\nwhile the condition of sort can change.\n", "commitParents": ["275c3d70bc7a0e41d8b3ad9913bef01535817e11"], "spoonStatsSkippedReason": "", "commitHash": "61be9b923d8608605eb97264129d4f0467a0a2cc", "authoredDateTime": "2017-05-04 00:36:03", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 7, "deletions": 5, "lines": 12, "filePath": "src/main/java/com/zaxxer/hikari/util/ConcurrentBag.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "src/test/java/com/zaxxer/hikari/pool/ConnectionPoolSizeVsThreadsTest.java"}, {"insertions": 5, "deletions": 13, "lines": 18, "filePath": "src/main/java/com/zaxxer/hikari/pool/PoolEntry.java"}, {"insertions": 14, "deletions": 13, "lines": 27, "filePath": "src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}], "commitDateTime": "2017-05-04 00:36:03", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 5, "MOV": 2, "INS": 0, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.addBagItem(int)"}, {"UPD": 3, "TOT": 17, "MOV": 8, "INS": 4, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.HouseKeeper.run()"}], "spoonFilePath": "HikariPool.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag.addBagItem(int)"}, {"UPD": 0, "TOT": 4, "MOV": 1, "INS": 3, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag.values(int)"}], "spoonFilePath": "ConcurrentBag.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.ConnectionPoolSizeVsThreadsTest"}], "spoonFilePath": "ConnectionPoolSizeVsThreadsTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.PoolEntry"}], "spoonFilePath": "PoolEntry.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/880", "ttf": 1.0002777777777778, "gitStatsSummary": {"insertions": 26, "deletions": 31, "lines": 57, "gitFilesChange": 3}, "title": "Unexpected IllegalArgumentException in housekeeping task.", "statsSkippedReason": "", "user": "binakot", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/pool", "src/main/java/com/zaxxer/hikari/util"], "spoonStatsSummary": {"UPD": 5, "spoonMethodsChanged": 6, "TOT": 31, "MOV": 11, "INS": 7, "DEL": 8, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "#### Environment\r\n```\r\nHikariCP version: 2.6.1\r\nJDK version     : 1.8.0_71-b15\r\nDatabase        : PostgreSQL 9.6.1 on x86_64-pc-linux-gnu, compiled by gcc, 64-bit\r\nDriver version  : 9.4-1201-jdbc41\r\n```\r\n-----------------------------------------------------------------------------------------\r\n#### HikariCP Config\r\n```\r\nconfig.setAutoCommit(false);\r\nconfig.setMinimumIdle(10);\r\nconfig.setMaximumPoolSize(100);\r\nOther options are default.\r\n```\r\n-----------------------------------------------------------------------------------------\r\n#### Trace\r\n```\r\nUnexpected exception in housekeeping task\r\njava.lang.IllegalArgumentException: Comparison method violates its general contract!\r\n\tat java.util.TimSort.mergeLo(TimSort.java:777) ~[?:1.8.0_71]\r\n\tat java.util.TimSort.mergeAt(TimSort.java:514) ~[?:1.8.0_71]\r\n\tat java.util.TimSort.mergeForceCollapse(TimSort.java:457) ~[?:1.8.0_71]\r\n\tat java.util.TimSort.sort(TimSort.java:254) ~[?:1.8.0_71]\r\n\tat java.util.Arrays.sort(Arrays.java:1512) ~[?:1.8.0_71]\r\n\tat java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:348) ~[?:1.8.0_71]\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_71]\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) ~[?:1.8.0_71]\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151) ~[?:1.8.0_71]\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174) ~[?:1.8.0_71]\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_71]\r\n\tat java.util.stream.ReferencePipeline.forEachOrdered(ReferencePipeline.java:423) ~[?:1.8.0_71]\r\n\tat com.zaxxer.hikari.pool.HikariPool$HouseKeeper.run(HikariPool.java:704) [NavServ.jar:?]\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_71]\r\n\tat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_71]\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_71]\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_71]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_71]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_71]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_71]\r\n```\r\n-----------------------------------------------------------------------------------------\r\n\r\nI got this exception only 3 times: 2017-04-30 07:26:53.399, 2017-04-30 15:42:25.314, 2017-04-30 15:42:55.675 after about 4 days application non-stop working. \r\n\r\nReally don't know what's wrong, because in the stack trace there is no my code.", "labels": ["bug"]}, {"created": "2017-04-06 05:58:32", "user": "jorgheymans", "body": "http://brettwooldridge.github.io/HikariCP/ still points to 2.5.1 ", "closed": "2017-04-06 06:07:05", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/860", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "(minor) website still showing old version"}, {"created": "2016-12-06 16:45:56", "user": "DidierLoiseau", "body": "The [Ludicrous Speed, GO!](http://brettwooldridge.github.io/HikariCP/ludicrous.html) page seems to intend to use some `fixed-font` for rendering technical names, however those are rendered as code in tables with line numbers. This completely breaks the layout of the page and makes it unreadable.\r\n\r\nThis is a bit unfortunate since it has a highly visible link on the repository home page.", "closed": "2016-12-08 14:02:32", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/783", "ttf": 1.0002777777777778, "commits": {}, "labels": ["bug"], "title": "The ludicrous page layout is broken"}, {"created": "2016-09-11 12:24:12", "commits": {"20e6a5d92345d1b8e50b9fc24122d31a3a4c6af9": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.ProxyConnection.checkException(java.sql.SQLException)"], "closed": "2016-09-12 14:06:35", "filteredCommits": ["20e6a5d92345d1b8e50b9fc24122d31a3a4c6af9"], "commitsDetails": [{"nameRev": "20e6a5d92345d1b8e50b9fc24122d31a3a4c6af9 tags/HikariCP-2.5.1~7", "commitMessage": "Fixes #716 do not scan deeper than 10 nested SQLExceptions, it's typically a trap ... a chain that never terminates.\n", "commitParents": ["0fc6ec5c8ff75ca3618be94c77d849a6f6267851"], "spoonStatsSkippedReason": "", "commitHash": "20e6a5d92345d1b8e50b9fc24122d31a3a4c6af9", "authoredDateTime": "2016-09-12 23:06:27", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 7, "lines": 10, "filePath": "src/main/java/com/zaxxer/hikari/pool/ProxyConnection.java"}], "commitDateTime": "2016-09-12 23:06:27", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 7, "MOV": 4, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.ProxyConnection.checkException(java.sql.SQLException)"}], "spoonFilePath": "ProxyConnection.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/716", "ttf": 1.0002777777777778, "gitStatsSummary": {"insertions": 3, "deletions": 7, "lines": 10, "gitFilesChange": 1}, "title": "2.5.0 version consumes 100% CPU", "statsSkippedReason": "", "user": "doom369", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/pool"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 7, "MOV": 4, "INS": 1, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hello. I have a production system that was working fine with HikariCP and DB logic (non-changed) for 6 months. And recently I updated from 2.4.7 to 2.5.0 and got 100% CPU consumption.\n\nEnv. : \n\n```\nUbuntu 14.04\njava version \"1.8.0_91\"\n```\n\nI used `jstack` + `shift+H` to find top consuming thread. Here is it : \n\n```\n\"pool-4-thread-4\" #30 prio=5 os_prio=0 tid=0x00007fc9a002a800 nid=0x2b3e runnable [0x00007fc98c4f2000]\n   java.lang.Thread.State: RUNNABLE\n        at com.zaxxer.hikari.pool.ProxyConnection.checkException(ProxyConnection.java:168)\n        at com.zaxxer.hikari.pool.ProxyStatement.checkException(ProxyStatement.java:46)\n        at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)\n        at cc.blynk.server.db.dao.ReportingDBDao.insert(ReportingDBDao.java:95)\n        at cc.blynk.server.db.DBManager.lambda$insertReporting$1(DBManager.java:116)\n        at cc.blynk.server.db.DBManager$$Lambda$37/2131139621.run(Unknown Source)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\n```\n\nMy code is open sourced and I can show it if that helps.\n", "labels": ["bug"]}, {"created": "2016-08-12 14:19:18", "commits": {"03122e85b4501dd356122a776df8130d4c843384": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.ProxyConnection.checkException(java.sql.SQLException)"], "closed": "2016-08-14 07:47:06", "filteredCommits": ["03122e85b4501dd356122a776df8130d4c843384"], "commitsDetails": [{"nameRev": "03122e85b4501dd356122a776df8130d4c843384 tags/HikariCP-2.5.0~15", "commitMessage": "Fixes #696 use iteration instead of recursion to avoid a stack overflow with deeply nested SQLExceptions\n", "commitParents": ["6edaa336a6e998e24c828c266ea12ecf70c000f6"], "spoonStatsSkippedReason": "", "commitHash": "03122e85b4501dd356122a776df8130d4c843384", "authoredDateTime": "2016-08-14 16:46:18", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 10, "deletions": 7, "lines": 17, "filePath": "src/main/java/com/zaxxer/hikari/pool/ProxyConnection.java"}], "commitDateTime": "2016-08-14 16:46:18", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 26, "MOV": 13, "INS": 6, "DEL": 6, "spoonMethodName": "com.zaxxer.hikari.pool.ProxyConnection.checkException(java.sql.SQLException)"}], "spoonFilePath": "ProxyConnection.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/696", "ttf": 1.0002777777777778, "gitStatsSummary": {"insertions": 10, "deletions": 7, "lines": 17, "gitFilesChange": 1}, "title": "StackOverflowError at ProxyConnection.checkException for batch inserts", "statsSkippedReason": "", "user": "luontola", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/pool"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 26, "MOV": 13, "INS": 6, "DEL": 6, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Batch inserts/updates can produce an SQLException chain which is longer than the stack, causing HikariCP to throw StackOverflowError. This happens on HikariCP version 2.4.7 and older.\n\nThe fix would be to change ProxyConnection.checkException() to use iteration instead of recursion.\n\n``` java\n    @Test\n    public void foo() throws SQLException {\n        Connection connection = dataSource.getConnection();\n\n        Statement init = connection.createStatement();\n        init.execute(\"create table foo (x int not null)\");\n\n        Statement batch = connection.createStatement();\n        for (int i = 0; i < 10000; i++) {\n            batch.addBatch(\"insert into foo (x) values (null)\");\n        }\n        batch.executeBatch();\n    }\n```\n\n```\njava.lang.StackOverflowError\n    at java.lang.String.startsWith(String.java:1434)\n    at com.zaxxer.hikari.pool.ProxyConnection.checkException(ProxyConnection.java:153)\n    at com.zaxxer.hikari.pool.ProxyConnection.checkException(ProxyConnection.java:163)\n    at com.zaxxer.hikari.pool.ProxyConnection.checkException(ProxyConnection.java:163)\n    at com.zaxxer.hikari.pool.ProxyConnection.checkException(ProxyConnection.java:163)\n    at com.zaxxer.hikari.pool.ProxyConnection.checkException(ProxyConnection.java:163)\n    at com.zaxxer.hikari.pool.ProxyConnection.checkException(ProxyConnection.java:163)\n    at com.zaxxer.hikari.pool.ProxyConnection.checkException(ProxyConnection.java:163)\n    at com.zaxxer.hikari.pool.ProxyConnection.checkException(ProxyConnection.java:163)\n    at com.zaxxer.hikari.pool.ProxyConnection.checkException(ProxyConnection.java:163)\n    at com.zaxxer.hikari.pool.ProxyConnection.checkException(ProxyConnection.java:163)\n    at com.zaxxer.hikari.pool.ProxyConnection.checkException(ProxyConnection.java:163)\n    at com.zaxxer.hikari.pool.ProxyConnection.checkException(ProxyConnection.java:163)\n    at com.zaxxer.hikari.pool.ProxyConnection.checkException(ProxyConnection.java:163)\n    at com.zaxxer.hikari.pool.ProxyConnection.checkException(ProxyConnection.java:163)\n```\n\nRelated: #269\n", "labels": ["bug"]}, {"created": "2016-08-12 13:22:07", "user": "kenny319", "body": "Just noticed the size of the optimised 'checkException' method is still greater than 35 bytes. The correct bytecodes should be as below:\n\n> 0: aload_1\n>          1: invokevirtual #168                // Method java/sql/SQLException.getSQLState:()Ljava/lang/String;\n>          4: astore_2\n>          5: aload_2\n>          6: ifnull        34\n>          9: aload_0\n>         10: dup\n>         11: getfield      #173                // Field _forceClose:Z\n>         14: aload_2\n>         15: ldc           #175                // String 08\n>         17: invokevirtual #177                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n>         20: getstatic     #69                 // Field SQL_ERRORS:Ljava/util/Set;\n>         23: aload_2\n>         24: invokeinterface #183,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z\n>         29: ior\n>         30: ior\n>         31: putfield      #173                // Field _forceClose:Z\n>         34: aload_1\n>         35: areturn\n\nAnother error is the last byte code should be 'areturn' instead of 'return' since the 'checkException' method is not a void method. The return type might be adjusted  from SQLException to VOID in order to demonstrate the great work you do to make HikariCP fast.\n(I just found some articles introducing JIT are referencing this wiki page as a great example, so I try to let you know.)\n", "closed": "2016-09-23 18:31:40", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/695", "ttf": 42.000277777777775, "commits": {}, "labels": ["bug"], "title": "An error in the wiki page 'Down-the-Rabbit-Hole'"}, {"created": "2016-07-26 05:23:13", "user": "martinufo", "body": "`CodaHaleMetricsTracker` registers a meter named **ConnectionTimeoutRate,** but in the `close()` method, it is not removed from the registry.\n\nIf I destroy the pool and later want to create it again, I get an error about metric name being already registered.\n", "closed": "2016-08-17 02:47:25", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/685", "ttf": 21.00027777777778, "commits": {}, "labels": ["bug", "volunteer-needed"], "title": "CodaHaleMetricsTracker does not clean ConnectionTimeoutRate"}, {"created": "2016-07-14 12:42:34", "commits": {"60224a0399a618325e08f129536855c4da1348cd": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2016-08-04 13:35:45", "filteredCommits": [], "commitsDetails": [{"nameRev": "60224a0399a618325e08f129536855c4da1348cd tags/HikariCP-2.4.8~14", "commitMessage": "Fixes #674 fix regression caused by pull request #450 (overzealous optimisation)\n", "commitParents": ["ddfe0ab6cbad524f5950415d24f14cbbdda6b80a"], "spoonStatsSkippedReason": "", "commitHash": "60224a0399a618325e08f129536855c4da1348cd", "authoredDateTime": "2016-08-04 22:35:41", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/zaxxer/hikari/pool/ProxyConnection.java"}, {"insertions": 17, "deletions": 14, "lines": 31, "filePath": "src/main/java/com/zaxxer/hikari/pool/PoolBase.java"}], "commitDateTime": "2016-08-04 22:35:41", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 9, "MOV": 6, "INS": 2, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(java.sql.Connection)"}], "spoonFilePath": "PoolBase.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.ProxyConnection.close()"}], "spoonFilePath": "ProxyConnection.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/674", "ttf": 21.00027777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "PSQLException: Cannot change transaction read-only property in the middle of a transaction.", "statsSkippedReason": "", "user": "uwolfer", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "After updating from 2.4.1, I get the following exception. After some bisect search, I have found out that the issue got introduced with 2.4.2.\n\n```\nCaused by: org.postgresql.util.PSQLException: Cannot change transaction read-only property in the middle of a transaction.\n    at org.postgresql.jdbc.PgConnection.setReadOnly(PgConnection.java:724)\n    at com.zaxxer.hikari.pool.ProxyConnection.setReadOnly(ProxyConnection.java:388)\n    at com.zaxxer.hikari.pool.HikariProxyConnection.setReadOnly(HikariProxyConnection.java)\n    at x.y.JdbcBackend.prepareCommit(JdbcBackend.java:135)\n```\n\nSome details: I use `readOnly=true` in config, and explicitly disable read-only in specific use-cases where I need write access:\n\n``` java\ntry (Connection conn = ds.getConnection()) {\n    conn.setReadOnly(false);\n    ...\n}\n```\n\nI think https://github.com/brettwooldridge/HikariCP/commit/bcde774078e553c363d9e31c0022ace87ca62f71 by @nitincchauhan could have introduced this issue, but I have not verified it. Most probably even reading data with PG JDBC sets the connection transaction state to \"unclean\".\n", "labels": ["bug"]}, {"created": "2016-07-07 11:23:55", "user": "puntogil", "body": "Hi\n\nThe following source files are without license headers:\n\n./src/main/java/com/zaxxer/hikari/metrics/prometheus/HikariCPCollector.java\n./src/main/java/com/zaxxer/hikari/metrics/prometheus/PrometheusMetricsTracker.java\n./src/main/java/com/zaxxer/hikari/metrics/prometheus/PrometheusMetricsTrackerFactory.java\n./src/main/java/com/zaxxer/hikari/pool/PoolBase.java\n\n./src/test/java/com/zaxxer/hikari/metrics/prometheus/HikariCPCollectorTest.java\n./src/test/java/com/zaxxer/hikari/metrics/prometheus/PrometheusMetricsTrackerTest.java\n./src/test/java/com/zaxxer/hikari/mocks/StubBaseConnection.java\n./src/test/java/com/zaxxer/hikari/pool/ConcurrentCloseConnectionTest.java\n./src/test/java/com/zaxxer/hikari/pool/ConnectionRaceConditionTest.java\n./src/test/java/com/zaxxer/hikari/pool/ConnectionStateTest.java\n./src/test/java/com/zaxxer/hikari/pool/ExceptionTest.java\n./src/test/java/com/zaxxer/hikari/pool/IsolationTest.java\n./src/test/java/com/zaxxer/hikari/pool/RampUpDown.java\n./src/test/java/com/zaxxer/hikari/pool/StatementTest.java\n./src/test/java/com/zaxxer/hikari/pool/TestConnectionCloseBlocking.java\n./src/test/java/com/zaxxer/hikari/pool/TestConnectionTimeoutRetry.java\n./src/test/java/com/zaxxer/hikari/pool/TestFastList.java\n./src/test/java/com/zaxxer/hikari/pool/TestHibernate.java\n./src/test/java/com/zaxxer/hikari/pool/TestPropertySetter.java\n./src/test/java/com/zaxxer/hikari/pool/TestProxies.java\n\nPlease, confirm the licensing of code and/or content/s, and add license headers\nhttps://fedoraproject.org/wiki/Packaging:LicensingGuidelines?rd=Packaging/LicensingGuidelines#License_Clarification\n\nThanks in advance\nRegards\n", "closed": "2016-07-29 20:49:29", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/665", "ttf": 22.00027777777778, "commits": {}, "labels": ["bug", "volunteer-needed"], "title": "Source files without license headers"}, {"created": "2016-06-28 14:49:21", "user": "stottpaul", "body": "I've written a small test class which simply sets up a Hikari CP 2.4.6 with an idleTimeout and a maxLifetime and a MaximumPoolSize of 4. The program then just goes into an empty loop.   \n\nThe logging suggests that connections are being closed due to maxLifetime instead of idleTimeout.\n\n**Code extract**\n\n```\nHikariConfig config = new HikariConfig();\n\nconfig.setJdbcUrl(LOCAL_XE_CONN_STRING);\nconfig.setUsername(\"system\");\nconfig.setPassword(\"oracle\");\nconfig.setIdleTimeout(40000);\nconfig.setMaxLifetime(100000);\nconfig.setMaximumPoolSize(4);\n\nnew HikariDataSource(config);\n\nwhile(true);\n```\n\n**Debug logs**\n2016-06-28 15:36:26 DEBUG HikariConfig:839 - HikariPool-1 - configuration:\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - allowPoolSuspension.............false\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - autoCommit......................true\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - catalog.........................null\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - connectionInitSql...............null\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - connectionTestQuery.............null\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - connectionTimeout...............30000\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - dataSource......................null\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - dataSourceClassName.............null\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - dataSourceJNDI..................null\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - dataSourceProperties............{password=<masked>}\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - driverClassName.................null\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - healthCheckProperties...........{}\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - healthCheckRegistry.............null\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - idleTimeout.....................**40000**\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - initializationFailFast..........true\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - isolateInternalQueries..........false\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - jdbc4ConnectionTest.............false\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - jdbcUrl.........................\"jdbc:oracle:thin:@192.168.99.100:1521:xe\"\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - leakDetectionThreshold..........0\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - maxLifetime.....................**100000**\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - maximumPoolSize.................4\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - metricRegistry..................null\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - metricsTrackerFactory...........null\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - minimumIdle.....................4\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - password........................<masked>\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - poolName........................\"HikariPool-1\"\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - readOnly........................false\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - registerMbeans..................false\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - scheduledExecutorService........null\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - threadFactory...................null\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - transactionIsolation............null\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - username........................\"system\"\n2016-06-28 15:36:26 DEBUG HikariConfig:855 - validationTimeout...............5000\n2016-06-28 15:36:26 INFO  HikariDataSource:70 - HikariPool-1 - Started.\n2016-06-28 15:36:27 INFO  PoolBase:444 - HikariPool-1 - Driver does not support get/set network timeout for connections. (oracle.jdbc.driver.T4CConnection.getNetworkTimeout()I)\n2016-06-28 15:36:27 DEBUG HikariPool:391 - HikariPool-1 - Pool stats (total=0, active=0, idle=0, waiting=0)\n2016-06-28 15:36:27 DEBUG HikariPool:458 - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@92dde85\n2016-06-28 15:36:27 DEBUG HikariPool:458 - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@5f305afa\n2016-06-28 15:36:27 DEBUG HikariPool:458 - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@6adc182e\n2016-06-28 15:36:27 DEBUG HikariPool:458 - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@31530097\n2016-06-28 15:36:27 DEBUG HikariPool:391 - HikariPool-1 - After adding stats (total=4, active=0, idle=4, waiting=0)\n2016-06-28 15:36:57 DEBUG HikariPool:391 - HikariPool-1 - Pool stats (total=4, active=0, idle=4, waiting=0)\n2016-06-28 15:37:27 DEBUG HikariPool:391 - HikariPool-1 - Pool stats (total=4, active=0, idle=4, waiting=0)\n2016-06-28 15:37:57 DEBUG HikariPool:391 - HikariPool-1 - Pool stats (total=4, active=0, idle=4, waiting=0)\n**2016-06-28 15:38:05 DEBUG PoolBase:111 - HikariPool-1 - Closing connection oracle.jdbc.driver.T4CConnection@5f305afa: (connection has passed maxLifetime)\n2016-06-28 15:38:05 DEBUG PoolBase:111 - HikariPool-1 - Closing connection oracle.jdbc.driver.T4CConnection@6adc182e: (connection has passed maxLifetime)\n2016-06-28 15:38:06 DEBUG PoolBase:111 - HikariPool-1 - Closing connection oracle.jdbc.driver.T4CConnection@92dde85: (connection has passed maxLifetime)\n2016-06-28 15:38:06 DEBUG PoolBase:111 - HikariPool-1 - Closing connection oracle.jdbc.driver.T4CConnection@31530097: (connection has passed maxLifetime)**\n2016-06-28 15:38:27 DEBUG HikariPool:391 - HikariPool-1 - Pool stats (total=0, active=0, idle=0, waiting=0)\n2016-06-28 15:38:27 DEBUG HikariPool:458 - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@6aa2d9a6\n2016-06-28 15:38:27 DEBUG HikariPool:458 - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@64653a82\n2016-06-28 15:38:27 DEBUG HikariPool:458 - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@605ab2d6\n2016-06-28 15:38:27 DEBUG HikariPool:458 - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@59cbb25d\n2016-06-28 15:38:27 DEBUG HikariPool:391 - HikariPool-1 - After adding stats (total=4, active=0, idle=4, waiting=0)\n2016-06-28 15:38:57 DEBUG HikariPool:391 - HikariPool-1 - Pool stats (total=4, active=0, idle=4, waiting=0)\n", "closed": "2016-06-28 15:32:01", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/657", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "idleTimeout does not appear to be being honoured"}, {"created": "2016-04-04 07:20:07", "commits": {"8dde168adb70b1c3b2f18ae4bb2db7c79d859ecb": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2016-04-13 16:44:32", "filteredCommits": [], "commitsDetails": [{"nameRev": "8dde168adb70b1c3b2f18ae4bb2db7c79d859ecb tags/HikariCP-2.4.6~3", "commitMessage": "Possibly Fixes #606 Fixes ##610 housekeeper was running before all class members were initialised leading to an NPE in the housekeeper.  Whether or not a particular VM would recover depends somewhat on its memory model.  The pool on OS X did recover after the initial failure.\n", "commitParents": ["73777265b194670b46b4610cfb82f55ecf76ba17"], "spoonStatsSkippedReason": "", "commitHash": "8dde168adb70b1c3b2f18ae4bb2db7c79d859ecb", "authoredDateTime": "2016-04-14 01:44:29", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 6, "deletions": 0, "lines": 6, "filePath": "pom.xml"}, {"insertions": 2, "deletions": 1, "lines": 3, "filePath": "src/main/java/com/zaxxer/hikari/HikariConfig.java"}, {"insertions": 144, "deletions": 0, "lines": 144, "filePath": "src/test/java/com/zaxxer/hikari/db/BasicPoolTest.java"}, {"insertions": 44, "deletions": 0, "lines": 44, "filePath": "src/test/java/com/zaxxer/hikari/pool/TestConnections.java"}, {"insertions": 49, "deletions": 44, "lines": 93, "filePath": "src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 5, "deletions": 0, "lines": 5, "filePath": "src/main/java/com/zaxxer/hikari/pool/PoolBase.java"}], "commitDateTime": "2016-04-14 01:44:29", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool"}, {"UPD": 0, "TOT": 12, "MOV": 11, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.HouseKeeper.run()"}], "spoonFilePath": "HikariPool.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.db.BasicPoolTest"}], "spoonFilePath": "BasicPoolTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testPopulationSlowAcquisition()"}], "spoonFilePath": "TestConnections.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.PoolBase.newConnection()"}], "spoonFilePath": "PoolBase.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariConfig.validateNumerics()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariConfig"}], "spoonFilePath": "HikariConfig.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/606", "ttf": 9.000277777777777, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "No more fixed size connection pool behaviour", "statsSkippedReason": "", "user": "jiri-pejchal", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "After upgrading hikaricp from 2.4.3 to 2.4.5 when maximumPoolSize is set, I no longer observe supposed fixed size connection pool behaviour.\nWhen maximumPoolSize was set to 60 and minimumIdle was not set,  hikaricp used to acquire 60 connections on start. It seems to me that is no longer the case.\n\nJMX\n\n```\nPool (HibernateHikariPool)\nActiveConnections          11\nIdleConnections            11\nThreadsAwaitingConnection  0\nTotalConnections           22\n```\n\n```\nPoolConfig (HibernateHikariPool)\nConnectionTimeout 30000\nIdleTimeout 600000\nLeakDetectionThreshold 0\nMaxLifetime 1800000\nMaximumPoolSize 60\nMinimumIdle 60\nPoolName HibernateHikariPool\nValidationTimeout 5000\n```\n\n```\n<bean id=\"hikariDataSource\" class=\"com.zaxxer.hikari.HikariDataSource\" destroy-method=\"close\">\n        <property name=\"poolName\" value=\"HibernateHikariPool\" />\n        <property name=\"dataSourceClassName\" value=\"oracle.jdbc.pool.OracleDataSource\" />\n        <property name=\"autoCommit\" value=\"false\" />\n        <property name=\"connectionInitSql\" value=\"alter session set NLS_SORT = 'XCZECH' NLS_LANGUAGE = 'CZECH'\" />\n        <property name=\"initializationFailFast\" value=\"true\" />\n        <property name=\"registerMbeans\" value=\"true\" />\n        <property name=\"maximumPoolSize\" value=\"60\" />\n        <property name=\"metricsTrackerFactory\" ref=\"dbMetricsTrackerFactory\" />\n        <property name=\"dataSourceProperties\">\n            <props>\n                <prop key=\"user\">#{dbConfigurationProperties.username}</prop>\n                <prop key=\"password\">#{dbConfigurationProperties.password}</prop>\n                <prop key=\"url\">#{dbConfigurationProperties.url}</prop>\n                <prop key=\"implicitCachingEnabled\">true</prop>\n                <prop key=\"maxStatements\">60</prop>\n                <prop key=\"connectionProperties\">#{connectionProperties}</prop>\n            </props>\n        </property>\n    </bean>\n```\n", "labels": ["bug"]}, {"created": "2016-03-24 12:31:43", "commits": {"33403be932f0c18a3c87033c624c104b67d16112": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.util.JavassistProxyFactory.generateProxyClass(java.lang.Class,java.lang.String,java.lang.String)"], "closed": "2017-01-27 00:14:42", "filteredCommits": ["33403be932f0c18a3c87033c624c104b67d16112"], "commitsDetails": [{"nameRev": "33403be932f0c18a3c87033c624c104b67d16112 tags/HikariCP-2.4.11~2", "commitMessage": "Fixes #600 ignore default methods on Java 7.\n", "commitParents": ["b09cea8c812940071dcd34ec4a5d7a7704f19a14"], "spoonStatsSkippedReason": "", "commitHash": "33403be932f0c18a3c87033c624c104b67d16112", "authoredDateTime": "2017-01-27 09:13:46", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 5, "deletions": 1, "lines": 6, "filePath": "src/main/java/com/zaxxer/hikari/util/JavassistProxyFactory.java"}], "commitDateTime": "2017-01-27 09:13:46", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.util.JavassistProxyFactory.generateProxyClass(java.lang.Class,java.lang.String,java.lang.String)"}], "spoonFilePath": "JavassistProxyFactory.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/600", "ttf": 308.0002777777778, "gitStatsSummary": {"insertions": 5, "deletions": 1, "lines": 6, "gitFilesChange": 1}, "title": "java.lang.NoClassDefFoundError: java/sql/SQLType", "statsSkippedReason": "", "user": "dannygu", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/util"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 4, "MOV": 2, "INS": 1, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi, \n\nWe are currently running 2.4.2 on production and its working fine for us.\n\nwe started testing 2.4.4/2.4.5 and we are getting some strange errors which don't occur on 2.4.2.\n\nHere is the error with 2.4.5, we are testing some very basic code with Groovy/Java.\n\njava.lang.NoClassDefFoundError: java/sql/SQLType\n        at java.lang.Class.getDeclaredMethods0(Native Method)\n        at java.lang.Class.privateGetDeclaredMethods(Class.java:2615)\n        at java.lang.Class.getDeclaredMethods(Class.java:1860)\n        at groovy.lang.MetaClass.addMethods(MetaClass.java:1159)\n        at groovy.lang.MetaClass.<init>(MetaClass.java:139)\n        at groovy.lang.MetaClassRegistry.getMetaClass(MetaClassRegistry.java:123)\n        at org.codehaus.groovy.runtime.Invoker.invokeMethod(Invoker.java:144)\n        at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:104)\n        at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethod(ScriptBytecodeAdapter.java:85)\n        at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeNoArgumentsMethod(ScriptBytecodeAdapter.java:154)\n        at Script1.getAllRequestsCreatedBeforeWithActiveAI(Unknown Source)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:606)\n        at org.codehaus.groovy.runtime.ReflectionMetaMethod.invoke(ReflectionMetaMethod.java:67)\n        at groovy.lang.MetaClass.doMethodInvoke(MetaClass.java:1386)\n        at groovy.lang.MetaClass.invokeMethod(MetaClass.java:309)\n        at org.codehaus.groovy.runtime.Invoker.invokeMethod(Invoker.java:165)\n        at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:104)\n        at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethod(ScriptBytecodeAdapter.java:85)\n        at Script1.run(Unknown Source)\n\nin order to re-create this issue we wrote a very basic function you can find it here http://pastebin.com/KsAqbyQ0, we are unsure why this function runs fine with 2.4.2 and doesn't run with 2.4.4 or 2.4.5.\n\nThanks.\n", "labels": ["bug"]}, {"created": "2016-01-25 12:07:56", "commits": {"c0bd8bfeac1cfcbb0205fb41b8ace3d1834c347d": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "73491abb3184729d1ad1bb521432bd5538cdd54f": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.util.JavassistProxyFactory.generateProxyClass(java.lang.Class,java.lang.String,java.lang.String)", "com.zaxxer.hikari.util.JavassistProxyFactory.isDefaultMethod(java.lang.Class,javassist.CtClass,javassist.CtMethod)"], "closed": "2016-01-25 13:47:38", "filteredCommits": ["c0bd8bfeac1cfcbb0205fb41b8ace3d1834c347d"], "commitsDetails": [{"nameRev": "c0bd8bfeac1cfcbb0205fb41b8ace3d1834c347d tags/HikariCP-2.4.4-RC1~23", "commitMessage": "Fixes #555 check for default method is not longer needed because proxy generation is performed at build-time not run-time now.\n", "commitParents": ["73491abb3184729d1ad1bb521432bd5538cdd54f"], "spoonStatsSkippedReason": "", "commitHash": "c0bd8bfeac1cfcbb0205fb41b8ace3d1834c347d", "authoredDateTime": "2016-01-25 23:16:43", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 12, "deletions": 1, "lines": 13, "filePath": "src/main/java/com/zaxxer/hikari/util/JavassistProxyFactory.java"}], "commitDateTime": "2016-01-25 23:16:43", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.JavassistProxyFactory.generateProxyClass(java.lang.Class,java.lang.String,java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.JavassistProxyFactory.isDefaultMethod(java.lang.Class,javassist.CtClass,javassist.CtMethod)"}], "spoonFilePath": "JavassistProxyFactory.java"}]}, {"nameRev": "73491abb3184729d1ad1bb521432bd5538cdd54f tags/HikariCP-2.4.4-RC1~24", "commitMessage": "Fixes #555 check for default method is not longer needed because proxy generation is performed at build-time not run-time now.\n", "commitParents": ["5291e6bbb3c3f2085f456fbbbba3f4e1e49195df"], "spoonStatsSkippedReason": "", "commitHash": "73491abb3184729d1ad1bb521432bd5538cdd54f", "authoredDateTime": "2016-01-25 22:47:34", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 0, "deletions": 16, "lines": 16, "filePath": "src/main/java/com/zaxxer/hikari/util/JavassistProxyFactory.java"}], "commitDateTime": "2016-01-25 22:47:34", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.util.JavassistProxyFactory.generateProxyClass(java.lang.Class,java.lang.String,java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.util.JavassistProxyFactory.isDefaultMethod(java.lang.Class,javassist.CtClass,javassist.CtMethod)"}], "spoonFilePath": "JavassistProxyFactory.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/555", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 12, "deletions": 1, "lines": 13, "gitFilesChange": 1}, "title": "HikariProxyCallableStatement is missing overriden default method causing SQLFeatureNotSupportedException", "statsSkippedReason": "", "user": "kazuhiro", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/util"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 3, "MOV": 1, "INS": 2, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi,\n\nWhen running HikariCP on Java8, `HikariProxyCallableStatement` class is missing overriden definition of  methods from `CallableStatement` interface: \n- `registerOutParameter(String parameterName, SQLType sqlType)`\n- `registerOutParameter(String parameterName, SQLType sqlType, int scale)`\n- `registerOutParameter (String parameterName, SQLType sqlType, String typeName)`\n\nAll of them are marked as default, hence are not generated by `JavassistProxyFactory`. \n\nThis is causing a `SQLFeatureNotSupportedException` if any one of the methods is called on HikaruCP prepared statement despite the fact that method itself is implemented in particular `CallableStatement`.\n", "labels": ["bug"]}, {"created": "2016-01-15 12:24:51", "commits": {"d4d6d759deb44333b7dacb5b1ef20a1d048759d2": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "1f244af32f2c87c5d13ed40a6535fffa0265149d": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 2, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.PoolBase.SynchronousExecutor", "com.zaxxer.hikari.pool.PoolBase.createNetworkTimeoutExecutor(javax.sql.DataSource,java.lang.String,java.lang.String)", "com.zaxxer.hikari.pool.PoolBase.getAndSetNetworkTimeout(java.sql.Connection,long)", "com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(java.sql.Connection,java.lang.String)", "com.zaxxer.hikari.HikariConfig.setValidationTimeout(long)", "com.zaxxer.hikari.HikariConfig.setConnectionTimeout(long)", "com.zaxxer.hikari.pool.PoolBase.setLoginTimeout(javax.sql.DataSource,long)", "com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(java.sql.Connection)"], "closed": "2016-03-17 06:45:14", "filteredCommits": ["1f244af32f2c87c5d13ed40a6535fffa0265149d", "d4d6d759deb44333b7dacb5b1ef20a1d048759d2"], "commitsDetails": [{"nameRev": "d4d6d759deb44333b7dacb5b1ef20a1d048759d2 tags/HikariCP-2.4.4-RC1~18", "commitMessage": "Issue #547 Decreased allowable minimum connectionTimeout and validationTimeout to 250ms.\n", "commitParents": ["bd7e3ba6db56edba7ca29ed374d91f1996588ece"], "spoonStatsSkippedReason": "", "commitHash": "d4d6d759deb44333b7dacb5b1ef20a1d048759d2", "authoredDateTime": "2016-01-28 23:05:56", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 4, "lines": 8, "filePath": "src/main/java/com/zaxxer/hikari/HikariConfig.java"}, {"insertions": 1, "deletions": 2, "lines": 3, "filePath": "src/test/java/com/zaxxer/hikari/pool/TestValidation.java"}], "commitDateTime": "2016-01-28 23:05:56", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestValidation.validateInvalidConnectionTimeout()"}], "spoonFilePath": "TestValidation.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariConfig.setValidationTimeout(long)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariConfig.setConnectionTimeout(long)"}], "spoonFilePath": "HikariConfig.java"}]}, {"nameRev": "1f244af32f2c87c5d13ed40a6535fffa0265149d tags/HikariCP-2.4.4-RC2~1^2~5", "commitMessage": "Issue #547 Cleanup and additional logging.\n", "commitParents": ["fb09f102981939ff970bbc30eb14ac20f1813892"], "spoonStatsSkippedReason": "", "commitHash": "1f244af32f2c87c5d13ed40a6535fffa0265149d", "authoredDateTime": "2016-02-04 13:59:15", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 48, "deletions": 23, "lines": 71, "filePath": "src/main/java/com/zaxxer/hikari/pool/PoolBase.java"}], "commitDateTime": "2016-02-04 13:59:15", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.PoolBase.SynchronousExecutor"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.PoolBase.createNetworkTimeoutExecutor(javax.sql.DataSource,java.lang.String,java.lang.String)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 2, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.PoolBase.getAndSetNetworkTimeout(java.sql.Connection,long)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(java.sql.Connection,java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.PoolBase.setLoginTimeout(javax.sql.DataSource,long)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(java.sql.Connection)"}], "spoonFilePath": "PoolBase.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/547", "ttf": 61.000277777777775, "gitStatsSummary": {"insertions": 52, "deletions": 27, "lines": 79, "gitFilesChange": 2}, "title": "QUESTION: Why is the minimum value for connectionTimeout limited to 1000?", "statsSkippedReason": "", "user": "bysse", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/pool", "src/main/java/com/zaxxer/hikari"], "spoonStatsSummary": {"UPD": 4, "spoonMethodsChanged": 8, "TOT": 13, "MOV": 1, "INS": 2, "DEL": 6, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi, we're evaluating this connection pool and i have a question as to why the minimum value of connectionTimeout is limited to 1000 ms?\n\n> This property controls the maximum number of milliseconds that a client (that's you) will wait for a  connection from the pool. If this time is exceeded without a connection becoming available, a SQLException will be thrown. 1000ms is the minimum value. Default: 30000 (30 seconds)\n\nIf we have an issue with a single shard we will fill up all available threads on the server waiting for a connection rather than just drop the request straight away. Any thoughts on this?\n", "labels": ["bug", "enhancement"]}, {"created": "2015-10-31 12:42:50", "user": "nitincchauhan", "body": "shows 404\nbadge points to: https://github.com/brettwooldridge/HikariCP/blob/dev/LICENSE-2.0.txt\n", "closed": "2015-11-01 03:55:41", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/482", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "LICENSE badge link does not exist"}, {"created": "2015-10-19 15:37:19", "commits": {"37b96f1ed93ca3cd60a121659e3acb1e73cb8522": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.ProxyConnection.cancelLeakTask()", "com.zaxxer.hikari.pool.HikariPool.evictConnection(java.sql.Connection)"], "closed": "2015-10-21 13:49:41", "filteredCommits": ["37b96f1ed93ca3cd60a121659e3acb1e73cb8522"], "commitsDetails": [{"nameRev": "37b96f1ed93ca3cd60a121659e3acb1e73cb8522 tags/HikariCP-2.4.2~7^2", "commitMessage": "Fixes #465 fix apparent leak of one connection leak at startup when minimumIdle=0 ... the connection is not leaked, but the ProxyLeakTask was not cancelled.\n", "commitParents": ["755f2da615bc6a431cd8c25cab2fa5ccf66bfaff"], "spoonStatsSkippedReason": "", "commitHash": "37b96f1ed93ca3cd60a121659e3acb1e73cb8522", "authoredDateTime": "2015-10-21 15:52:15", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 8, "deletions": 8, "lines": 16, "filePath": "src/main/java/com/zaxxer/hikari/pool/ProxyConnection.java"}, {"insertions": 6, "deletions": 3, "lines": 9, "filePath": "src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}], "commitDateTime": "2015-10-21 15:52:15", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.evictConnection(java.sql.Connection)"}], "spoonFilePath": "HikariPool.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.ProxyConnection.cancelLeakTask()"}], "spoonFilePath": "ProxyConnection.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/465", "ttf": 1.0002777777777778, "gitStatsSummary": {"insertions": 14, "deletions": 11, "lines": 25, "gitFilesChange": 2}, "title": "2.4.2 RC1: Connection leak detection false positive", "statsSkippedReason": "", "user": "dfex55", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/pool"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 2, "TOT": 4, "MOV": 0, "INS": 3, "DEL": 0, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I tried 2.4.2 RC1 in replacement to 2.4.1.\n\nWithout any changes to the app, HikariCP reports a connection leak after pool-initialization.\nBut there is no leaking connection: one connection in pool, one idle, one connection to the database.\n\nExcerpt from log (pool configuration and leak alert):\n\n```\n[#| 16.10.2015 14:01:05.887 | ... | DEBUG com.zaxxer.hikari.HikariConfig \ndev - configuration:\nallowPoolSuspension.............false\nautoCommit......................true\ncatalog.........................\nconnectionInitSql...............\nconnectionTestQuery.............\nconnectionTimeout...............2000\ndataSource......................\ndataSourceClassName.............org.postgresql.ds.PGSimpleDataSource\ndataSourceJNDI..................\ndataSourceProperties............{serverName=\u2026, socketTimeout=15, user=\u2026, databaseName=\u2026, tcpKeepAlive=true, prepareThreshold=0, password=<masked>, portNumber=, loginTimeout=15}\ndriverClassName.................\nhealthCheckProperties...........{}\nhealthCheckRegistry.............\nidleTimeout.....................1200000\ninitializationFailFast..........true\nisolateInternalQueries..........false\njdbc4ConnectionTest.............false\njdbcUrl.........................\nleakDetectionThreshold..........10000\nmaxLifetime.....................43200000\nmaximumPoolSize.................50\nmetricRegistry..................com.codahale.metrics.MetricRegistry@148da145\nmetricsTrackerFactory...........\nminimumIdle.....................0\npassword........................<masked>\npoolName........................dev\nreadOnly........................false\nregisterMbeans..................true\nscheduledExecutorService........\nthreadFactory\u2026\u2026\u2026\u2026\u2026\u2026.<customClass>$1@21540445\ntransactionIsolation............\nusername........................\nvalidationTimeout...............2000\ndev - is starting.\ndev - Connection.setNetworkTimeout() is not supported (...)\n|#]\n\n[#| 16.10.2015 14:01:05.927 | \u2026 | DEBUG com.zaxxer.hikari.pool.HikariPool \ndev - Added connection org.postgresql.jdbc4.Jdbc4Connection@3a4a6161\n|#]\n\n[#| 16.10.2015 14:01:05.928 | ... | DEBUG com.zaxxer.hikari.pool.PoolBase \ndev - Closing connection org.postgresql.jdbc4.Jdbc4Connection@3a4a6161: (connection evicted by user)\n|#]\n\n\n\u2026<no action from app>...\n\n\n[#| 16.10.2015 14:01:15.948 | ... | WARN  com.zaxxer.hikari.pool.ProxyLeakTask \nConnection leak detection triggered for connection org.postgresql.jdbc4.Jdbc4Connection@3a4a6161, stack trace follows\njava.lang.Exception: Apparent connection leak detected\n    at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:138) ~[HikariCP-2.4.2-RC1.jar:na]\n    at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:71) ~[HikariCP-2.4.2-RC1.jar:na]\n    ...\n|#]\n\n[#| 16.10.2015 14:01:35.897 | \u2026 | DEBUG com.zaxxer.hikari.pool.HikariPool \nBefore cleanup  pool dev stats (total=1, active=0, idle=1, waiting=0)\n```\n", "labels": ["bug"]}, {"created": "2015-10-11 09:32:20", "user": "jefimm", "body": "When connection does not have initial catalog (for example it is wrapped in subclass  of org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource)  the release connection should not attempt to set catalog e.g. \n\nPoolBase:resetConnectionState\n\n```\n  if ((dirtyBits & DIRTY_BIT_CATALOG) != 0) {\n     final String currentCatalog = proxyConnection.getCatalogState();\n     if ((currentCatalog != null && !currentCatalog.equals(catalog)) || (currentCatalog == null && catalog != null)) {\n        connection.setCatalog(catalog);\n        resetBits |= DIRTY_BIT_CATALOG;\n     }\n  }\n```\n\nshould be \n\n```\n  if ((dirtyBits & DIRTY_BIT_CATALOG) != 0 && catalog != null) {\n     final String currentCatalog = proxyConnection.getCatalogState();\n     if ((currentCatalog != null && !currentCatalog.equals(catalog)) || (currentCatalog == null)) {\n        connection.setCatalog(catalog);\n        resetBits |= DIRTY_BIT_CATALOG;\n     }\n  }\n```\n", "closed": "2015-10-14 13:59:45", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/456", "ttf": 3.000277777777778, "commits": {}, "labels": ["bug"], "title": "error releasing connection"}, {"created": "2015-10-09 01:48:36", "commits": {"6d1728cc4a7874817934997a1d2fe427f6c98c46": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "42f952208e8f18dafb2a8cb3a7ebd4e096c4f779": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "a6f2534f4af6eb347910180cdb26a388cf051854": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "33138b18f752e78e81e275175495f9942592a182": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}, "a74cd0033948acf0ba16210f496fc72fcbd8209d": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.HikariPool.fillPool().4", "com.zaxxer.hikari.pool.HikariPool.closeConnection(com.zaxxer.hikari.pool.PoolEntry,java.lang.String).2", "com.zaxxer.hikari.util.ConcurrentBag.claimFromThreadLocal()", "com.zaxxer.hikari.util.ConcurrentBag.borrow(long,java.util.concurrent.TimeUnit)", "com.zaxxer.hikari.pool.HikariPool.addConnection()", "com.zaxxer.hikari.pool.HikariPool", "com.zaxxer.hikari.pool.HikariPool.AddPoolEntryCallable", "com.zaxxer.hikari.pool.HikariPool.closeConnection(com.zaxxer.hikari.pool.PoolEntry,java.lang.String)", "com.zaxxer.hikari.pool.HikariPool.addConnection().3.run()", "com.zaxxer.hikari.pool.HikariPool.initializeConnections()", "com.zaxxer.hikari.pool.HikariPool.addBagItem()", "com.zaxxer.hikari.pool.HikariPool.HouseKeeper.run()", "com.zaxxer.hikari.pool.HikariPool.releaseConnection(com.zaxxer.hikari.pool.PoolEntry)", "com.zaxxer.hikari.pool.PoolEntry", "com.zaxxer.hikari.pool.HikariPool.createPoolEntry()", "com.zaxxer.hikari.pool.RampUpDown.rampUpDownTest()", "com.zaxxer.hikari.pool.HikariPool.getPoolStats().5", "com.zaxxer.hikari.pool.HikariPool.addBagItem().1.run()", "com.zaxxer.hikari.pool.HikariPool.fillPool().4.run()", "com.zaxxer.hikari.pool.HikariPool.addConnection().3", "com.zaxxer.hikari.util.ConcurrentBag", "com.zaxxer.hikari.pool.HikariPool.closeConnection(com.zaxxer.hikari.pool.PoolEntry,java.lang.String).2.run()", "com.zaxxer.hikari.pool.HikariPool.getConnection(long)", "com.zaxxer.hikari.pool.HikariPool.getPoolStats().5.update()", "com.zaxxer.hikari.pool.HikariPool.fillPool()"], "closed": "2015-10-14 08:18:48", "filteredCommits": ["33138b18f752e78e81e275175495f9942592a182"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "6d1728cc4a7874817934997a1d2fe427f6c98c46", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": []}, {"nameRev": "33138b18f752e78e81e275175495f9942592a182 tags/HikariCP-2.4.2~20^2", "commitMessage": "Fixes #452 fixed race condition in the add-connection path.\n", "commitParents": ["eee453a873a16d62f3b457112fb5dfcf7c00d7de"], "spoonStatsSkippedReason": "", "commitHash": "33138b18f752e78e81e275175495f9942592a182", "authoredDateTime": "2015-10-13 00:40:20", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 35, "deletions": 35, "lines": 70, "filePath": "src/test/java/com/zaxxer/hikari/pool/{AddConnectionRaceConditionTest.java => ConnectionRaceConditionTest.java}"}, {"insertions": 83, "deletions": 102, "lines": 185, "filePath": "src/test/java/com/zaxxer/hikari/pool/ConnectionStateTest.java"}, {"insertions": 6, "deletions": 6, "lines": 12, "filePath": "src/test/java/com/zaxxer/hikari/pool/TestConnectionCloseBlocking.java"}, {"insertions": 46, "deletions": 13, "lines": 59, "filePath": "src/test/java/com/zaxxer/hikari/pool/TestElf.java"}, {"insertions": 61, "deletions": 30, "lines": 91, "filePath": "src/main/java/com/zaxxer/hikari/util/ConcurrentBag.java"}, {"insertions": 24, "deletions": 14, "lines": 38, "filePath": "src/test/java/com/zaxxer/hikari/pool/TestConnectionTimeoutRetry.java"}, {"insertions": 45, "deletions": 39, "lines": 84, "filePath": "src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 5, "deletions": 3, "lines": 8, "filePath": "src/test/java/com/zaxxer/hikari/pool/ShutdownTest.java"}, {"insertions": 5, "deletions": 39, "lines": 44, "filePath": "src/test/java/com/zaxxer/hikari/pool/TestConcurrentBag.java"}, {"insertions": 34, "deletions": 4, "lines": 38, "filePath": "pom.xml"}, {"insertions": 15, "deletions": 4, "lines": 19, "filePath": "src/main/java/com/zaxxer/hikari/pool/PoolEntry.java"}, {"insertions": 16, "deletions": 17, "lines": 33, "filePath": "src/test/java/com/zaxxer/hikari/pool/RampUpDown.java"}, {"insertions": 7, "deletions": 19, "lines": 26, "filePath": "src/test/java/com/zaxxer/hikari/pool/TestMetrics.java"}, {"insertions": 13, "deletions": 0, "lines": 13, "filePath": "src/test/resources/log4j2-test.xml"}, {"insertions": 72, "deletions": 73, "lines": 145, "filePath": "src/test/java/com/zaxxer/hikari/pool/TestConnections.java"}, {"insertions": 38, "deletions": 50, "lines": 88, "filePath": "src/test/java/com/zaxxer/hikari/pool/IsolationTest.java"}, {"insertions": 10, "deletions": 10, "lines": 20, "filePath": "src/main/java/com/zaxxer/hikari/pool/PoolBase.java"}, {"insertions": 3, "deletions": 4, "lines": 7, "filePath": "src/test/java/com/zaxxer/hikari/pool/MiscTest.java"}, {"insertions": 6, "deletions": 2, "lines": 8, "filePath": "src/test/java/com/zaxxer/hikari/pool/TestValidation.java"}], "commitDateTime": "2015-10-14 17:06:26", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.MiscTest.testLeakDetection()"}], "spoonFilePath": "MiscTest.java"}, {"spoonMethods": [{"UPD": 5, "TOT": 12, "MOV": 3, "INS": 3, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.TestElf.setSlf4jTargetStream(java.lang.Class,java.io.PrintStream)"}, {"UPD": 6, "TOT": 11, "MOV": 4, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.TestElf.setSlf4jLogLevel(java.lang.Class,int)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestElf.StringAppender"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestElf.setSlf4jLogLevel(java.lang.Class,org.apache.logging.log4j.Level)"}], "spoonFilePath": "TestElf.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag.claimFromThreadLocal()"}, {"UPD": 0, "TOT": 22, "MOV": 12, "INS": 6, "DEL": 4, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag.borrow(long,java.util.concurrent.TimeUnit)"}], "spoonFilePath": "ConcurrentBag.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 3, "spoonMethodName": "com.zaxxer.hikari.pool.AddConnectionRaceConditionTest.testRaceCondition().1.call()"}, {"UPD": 2, "TOT": 4, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.AddConnectionRaceConditionTest.testRaceCondition().2.call()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.ConnectionRaceConditionTest.testRaceCondition().1.call()"}, {"UPD": 5, "TOT": 18, "MOV": 12, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.AddConnectionRaceConditionTest.testRaceCondition()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.AddConnectionRaceConditionTest"}, {"UPD": 0, "TOT": 5, "MOV": 0, "INS": 5, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.ConnectionRaceConditionTest.testRaceCondition()"}], "spoonFilePath": "ConnectionRaceConditionTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 13, "MOV": 10, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.RampUpDown.rampUpDownTest()"}], "spoonFilePath": "RampUpDown.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.ShutdownTest.testThreadedShutdown().2.run()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.ShutdownTest.testThreadedShutdown().3.run()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.ShutdownTest.testShutdown1().1.run()"}], "spoonFilePath": "ShutdownTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 13, "MOV": 10, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnectionCloseBlocking.testConnectionCloseBlocking()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnectionCloseBlocking"}], "spoonFilePath": "TestConnectionCloseBlocking.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 13, "MOV": 9, "INS": 2, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testDoubleClose()"}, {"UPD": 1, "TOT": 5, "MOV": 0, "INS": 4, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testMaximumPoolLimit().1.run()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.after()"}, {"UPD": 0, "TOT": 11, "MOV": 8, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testInitializationFailure()"}, {"UPD": 2, "TOT": 17, "MOV": 11, "INS": 2, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testMaximumPoolLimit()"}, {"UPD": 1, "TOT": 22, "MOV": 17, "INS": 2, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testSuspendResume()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.before()"}, {"UPD": 0, "TOT": 25, "MOV": 22, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testBackfill()"}, {"UPD": 0, "TOT": 30, "MOV": 26, "INS": 2, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testMaxLifetime()"}, {"UPD": 0, "TOT": 10, "MOV": 6, "INS": 2, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testEviction()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testSuspendResume().2.run()"}, {"UPD": 0, "TOT": 29, "MOV": 24, "INS": 3, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testMaxLifetime2()"}, {"UPD": 1, "TOT": 26, "MOV": 21, "INS": 2, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testCreate()"}, {"UPD": 0, "TOT": 13, "MOV": 9, "INS": 2, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testOldDriver()"}], "spoonFilePath": "TestConnections.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 16, "MOV": 12, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestMetrics.testHealthChecks()"}, {"UPD": 0, "TOT": 12, "MOV": 9, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestMetrics.testMetricUsage()"}, {"UPD": 0, "TOT": 9, "MOV": 6, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestMetrics.testMetricWait()"}], "spoonFilePath": "TestMetrics.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnectionTimeoutRetry.testConnectionRetries3().2.run()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnectionTimeoutRetry.before()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnectionTimeoutRetry.after()"}, {"UPD": 3, "TOT": 13, "MOV": 4, "INS": 1, "DEL": 5, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnectionTimeoutRetry.testConnectionIdleFill()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnectionTimeoutRetry.testConnectionRetries5().3.run()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnectionTimeoutRetry.testConnectionRetries2().1.run()"}], "spoonFilePath": "TestConnectionTimeoutRetry.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 7, "MOV": 3, "INS": 3, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.PoolEntry"}], "spoonFilePath": "PoolEntry.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConcurrentBag.testConcurrentBag().1.addBagItem()"}, {"UPD": 0, "TOT": 2, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConcurrentBag.testConcurrentBag().1.addBagItem().1.get(long,java.util.concurrent.TimeUnit)"}], "spoonFilePath": "TestConcurrentBag.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.closeConnection(com.zaxxer.hikari.pool.PoolEntry,java.lang.String).2"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.fillPool().4"}, {"UPD": 4, "TOT": 7, "MOV": 1, "INS": 0, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.addConnection()"}, {"UPD": 0, "TOT": 5, "MOV": 0, "INS": 3, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.getConnection(long)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.AddPoolEntryCallable"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.getPoolStats().5"}, {"UPD": 1, "TOT": 5, "MOV": 4, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.addBagItem().1.run()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.releaseConnection(com.zaxxer.hikari.pool.PoolEntry)"}, {"UPD": 7, "TOT": 9, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.initializeConnections()"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.fillPool().4.run()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.addConnection().3"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.closeConnection(com.zaxxer.hikari.pool.PoolEntry,java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.HouseKeeper.run()"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.addConnection().3.run()"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.closeConnection(com.zaxxer.hikari.pool.PoolEntry,java.lang.String).2.run()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.createPoolEntry()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.fillPool()"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.getPoolStats().5.update()"}, {"UPD": 0, "TOT": 5, "MOV": 1, "INS": 1, "DEL": 3, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.addBagItem()"}], "spoonFilePath": "HikariPool.java"}, {"spoonMethods": [], "spoonFilePath": "PoolBase.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 27, "MOV": 24, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.ConnectionStateTest.testCommitTracking()"}, {"UPD": 0, "TOT": 16, "MOV": 13, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.ConnectionStateTest.testCatalog()"}, {"UPD": 0, "TOT": 20, "MOV": 17, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.ConnectionStateTest.testAutoCommit()"}, {"UPD": 0, "TOT": 16, "MOV": 13, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.ConnectionStateTest.testTransactionIsolation()"}, {"UPD": 0, "TOT": 16, "MOV": 13, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.ConnectionStateTest.testReadOnly()"}], "spoonFilePath": "ConnectionStateTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 1, "INS": 3, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestValidation.validateIdleTimeoutExceedsLifetime()"}, {"UPD": 0, "TOT": 4, "MOV": 1, "INS": 3, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestValidation.validateBothDSAndDSName()"}], "spoonFilePath": "TestValidation.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 15, "MOV": 12, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.IsolationTest.testIsolation()"}, {"UPD": 0, "TOT": 14, "MOV": 11, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.IsolationTest.testNonIsolation()"}], "spoonFilePath": "IsolationTest.java"}]}, {"nameRev": "a6f2534f4af6eb347910180cdb26a388cf051854 tags/HikariCP-2.4.2~20", "commitMessage": "Merge pull request #458 from brettwooldridge/experimental\n\nFixes #452 fixed race condition in the add-connection path", "commitParents": ["514d0628530095ea088bd2509300409741d52960", "33138b18f752e78e81e275175495f9942592a182"], "spoonStatsSkippedReason": "", "commitHash": "a6f2534f4af6eb347910180cdb26a388cf051854", "authoredDateTime": "2015-10-14 17:18:47", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 35, "deletions": 35, "lines": 70, "filePath": "src/test/java/com/zaxxer/hikari/pool/{AddConnectionRaceConditionTest.java => ConnectionRaceConditionTest.java}"}, {"insertions": 83, "deletions": 102, "lines": 185, "filePath": "src/test/java/com/zaxxer/hikari/pool/ConnectionStateTest.java"}, {"insertions": 6, "deletions": 6, "lines": 12, "filePath": "src/test/java/com/zaxxer/hikari/pool/TestConnectionCloseBlocking.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/zaxxer/hikari/util/Sequence.java"}, {"insertions": 61, "deletions": 30, "lines": 91, "filePath": "src/main/java/com/zaxxer/hikari/util/ConcurrentBag.java"}, {"insertions": 24, "deletions": 14, "lines": 38, "filePath": "src/test/java/com/zaxxer/hikari/pool/TestConnectionTimeoutRetry.java"}, {"insertions": 45, "deletions": 39, "lines": 84, "filePath": "src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 46, "deletions": 13, "lines": 59, "filePath": "src/test/java/com/zaxxer/hikari/pool/TestElf.java"}, {"insertions": 10, "deletions": 10, "lines": 20, "filePath": "src/main/java/com/zaxxer/hikari/pool/PoolBase.java"}, {"insertions": 5, "deletions": 39, "lines": 44, "filePath": "src/test/java/com/zaxxer/hikari/pool/TestConcurrentBag.java"}, {"insertions": 34, "deletions": 4, "lines": 38, "filePath": "pom.xml"}, {"insertions": 15, "deletions": 4, "lines": 19, "filePath": "src/main/java/com/zaxxer/hikari/pool/PoolEntry.java"}, {"insertions": 16, "deletions": 17, "lines": 33, "filePath": "src/test/java/com/zaxxer/hikari/pool/RampUpDown.java"}, {"insertions": 7, "deletions": 19, "lines": 26, "filePath": "src/test/java/com/zaxxer/hikari/pool/TestMetrics.java"}, {"insertions": 13, "deletions": 0, "lines": 13, "filePath": "src/test/resources/log4j2-test.xml"}, {"insertions": 72, "deletions": 73, "lines": 145, "filePath": "src/test/java/com/zaxxer/hikari/pool/TestConnections.java"}, {"insertions": 38, "deletions": 50, "lines": 88, "filePath": "src/test/java/com/zaxxer/hikari/pool/IsolationTest.java"}, {"insertions": 5, "deletions": 3, "lines": 8, "filePath": "src/test/java/com/zaxxer/hikari/pool/ShutdownTest.java"}, {"insertions": 3, "deletions": 4, "lines": 7, "filePath": "src/test/java/com/zaxxer/hikari/pool/MiscTest.java"}, {"insertions": 6, "deletions": 2, "lines": 8, "filePath": "src/test/java/com/zaxxer/hikari/pool/TestValidation.java"}], "commitDateTime": "2015-10-14 17:18:47", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.MiscTest.testLeakDetection()"}], "spoonFilePath": "MiscTest.java"}, {"spoonMethods": [{"UPD": 5, "TOT": 12, "MOV": 3, "INS": 3, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.TestElf.setSlf4jTargetStream(java.lang.Class,java.io.PrintStream)"}, {"UPD": 6, "TOT": 11, "MOV": 4, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.TestElf.setSlf4jLogLevel(java.lang.Class,int)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestElf.StringAppender"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestElf.setSlf4jLogLevel(java.lang.Class,org.apache.logging.log4j.Level)"}], "spoonFilePath": "TestElf.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 16, "MOV": 12, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestMetrics.testHealthChecks()"}, {"UPD": 0, "TOT": 12, "MOV": 9, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestMetrics.testMetricUsage()"}, {"UPD": 0, "TOT": 9, "MOV": 6, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestMetrics.testMetricWait()"}], "spoonFilePath": "TestMetrics.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 3, "spoonMethodName": "com.zaxxer.hikari.pool.AddConnectionRaceConditionTest.testRaceCondition().1.call()"}, {"UPD": 2, "TOT": 4, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.AddConnectionRaceConditionTest.testRaceCondition().2.call()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.ConnectionRaceConditionTest.testRaceCondition().1.call()"}, {"UPD": 5, "TOT": 18, "MOV": 12, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.AddConnectionRaceConditionTest.testRaceCondition()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.AddConnectionRaceConditionTest"}, {"UPD": 0, "TOT": 5, "MOV": 0, "INS": 5, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.ConnectionRaceConditionTest.testRaceCondition()"}], "spoonFilePath": "ConnectionRaceConditionTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 13, "MOV": 10, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.RampUpDown.rampUpDownTest()"}], "spoonFilePath": "RampUpDown.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.ShutdownTest.testThreadedShutdown().2.run()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.ShutdownTest.testThreadedShutdown().3.run()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.ShutdownTest.testShutdown1().1.run()"}], "spoonFilePath": "ShutdownTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 13, "MOV": 10, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnectionCloseBlocking.testConnectionCloseBlocking()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnectionCloseBlocking"}], "spoonFilePath": "TestConnectionCloseBlocking.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 13, "MOV": 9, "INS": 2, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testDoubleClose()"}, {"UPD": 1, "TOT": 5, "MOV": 0, "INS": 4, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testMaximumPoolLimit().1.run()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.after()"}, {"UPD": 0, "TOT": 11, "MOV": 8, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testInitializationFailure()"}, {"UPD": 2, "TOT": 17, "MOV": 11, "INS": 2, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testMaximumPoolLimit()"}, {"UPD": 1, "TOT": 22, "MOV": 17, "INS": 2, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testSuspendResume()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.before()"}, {"UPD": 0, "TOT": 25, "MOV": 22, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testBackfill()"}, {"UPD": 0, "TOT": 30, "MOV": 26, "INS": 2, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testMaxLifetime()"}, {"UPD": 0, "TOT": 10, "MOV": 6, "INS": 2, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testEviction()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testSuspendResume().2.run()"}, {"UPD": 0, "TOT": 29, "MOV": 24, "INS": 3, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testMaxLifetime2()"}, {"UPD": 1, "TOT": 26, "MOV": 21, "INS": 2, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testCreate()"}, {"UPD": 0, "TOT": 13, "MOV": 9, "INS": 2, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnections.testOldDriver()"}], "spoonFilePath": "TestConnections.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag.claimFromThreadLocal()"}, {"UPD": 1, "TOT": 21, "MOV": 11, "INS": 6, "DEL": 3, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag.borrow(long,java.util.concurrent.TimeUnit)"}], "spoonFilePath": "ConcurrentBag.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnectionTimeoutRetry.testConnectionRetries3().2.run()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnectionTimeoutRetry.before()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnectionTimeoutRetry.after()"}, {"UPD": 3, "TOT": 13, "MOV": 4, "INS": 1, "DEL": 5, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnectionTimeoutRetry.testConnectionIdleFill()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnectionTimeoutRetry.testConnectionRetries5().3.run()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConnectionTimeoutRetry.testConnectionRetries2().1.run()"}], "spoonFilePath": "TestConnectionTimeoutRetry.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 7, "MOV": 3, "INS": 3, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.PoolEntry"}], "spoonFilePath": "PoolEntry.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.TestConcurrentBag.testConcurrentBag().1.addBagItem()"}, {"UPD": 0, "TOT": 2, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestConcurrentBag.testConcurrentBag().1.addBagItem().1.get(long,java.util.concurrent.TimeUnit)"}], "spoonFilePath": "TestConcurrentBag.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.closeConnection(com.zaxxer.hikari.pool.PoolEntry,java.lang.String).2"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.fillPool().4"}, {"UPD": 4, "TOT": 7, "MOV": 1, "INS": 0, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.addConnection()"}, {"UPD": 0, "TOT": 5, "MOV": 0, "INS": 3, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.getConnection(long)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.AddPoolEntryCallable"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.getPoolStats().5"}, {"UPD": 1, "TOT": 5, "MOV": 4, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.addBagItem().1.run()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.releaseConnection(com.zaxxer.hikari.pool.PoolEntry)"}, {"UPD": 7, "TOT": 9, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.initializeConnections()"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.fillPool().4.run()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.addConnection().3"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.closeConnection(com.zaxxer.hikari.pool.PoolEntry,java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.HouseKeeper.run()"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.addConnection().3.run()"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.closeConnection(com.zaxxer.hikari.pool.PoolEntry,java.lang.String).2.run()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.createPoolEntry()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.fillPool()"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.getPoolStats().5.update()"}, {"UPD": 0, "TOT": 5, "MOV": 1, "INS": 1, "DEL": 3, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.addBagItem()"}], "spoonFilePath": "HikariPool.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.Factory.create()"}], "spoonFilePath": "Sequence.java"}, {"spoonMethods": [], "spoonFilePath": "PoolBase.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 27, "MOV": 24, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.ConnectionStateTest.testCommitTracking()"}, {"UPD": 0, "TOT": 16, "MOV": 13, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.ConnectionStateTest.testCatalog()"}, {"UPD": 0, "TOT": 20, "MOV": 17, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.ConnectionStateTest.testAutoCommit()"}, {"UPD": 0, "TOT": 16, "MOV": 13, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.ConnectionStateTest.testTransactionIsolation()"}, {"UPD": 0, "TOT": 16, "MOV": 13, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.ConnectionStateTest.testReadOnly()"}], "spoonFilePath": "ConnectionStateTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 1, "INS": 3, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestValidation.validateIdleTimeoutExceedsLifetime()"}, {"UPD": 0, "TOT": 4, "MOV": 1, "INS": 3, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.TestValidation.validateBothDSAndDSName()"}], "spoonFilePath": "TestValidation.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 15, "MOV": 12, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.IsolationTest.testIsolation()"}, {"UPD": 0, "TOT": 14, "MOV": 11, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.IsolationTest.testNonIsolation()"}], "spoonFilePath": "IsolationTest.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "a74cd0033948acf0ba16210f496fc72fcbd8209d", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "42f952208e8f18dafb2a8cb3a7ebd4e096c4f779", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": []}], "url": "https://github.com/brettwooldridge/HikariCP/issues/452", "ttf": 5.000277777777778, "gitStatsSummary": {"insertions": 131.0, "deletions": 83.0, "lines": 214.0, "gitFilesChange": 4}, "title": "Race condition while adding threads", "statsSkippedReason": "", "user": "mtambara", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/pool", "src/main/java/com/zaxxer/hikari/util"], "spoonStatsSummary": {"UPD": 26.0, "spoonMethodsChanged": 25, "TOT": 99.0, "MOV": 35.0, "INS": 24.0, "DEL": 14.0, "spoonFilesChanged": 4}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 3, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "I'm opening issue to notify you about and provide a potential solution for a bug in your code. There is a race condition when 2 threads call `HikariPool.getConnection()` while there are no idle connections available and `minimumIdle` is set to 0. Both threads will go into `ConcurrentBag.borrow(long, TimeUnit)`, see that there are no available threads to borrow, and create new worker threads to add one connection each in `HikariPool.addBagItem()`. The borrowing threads will then wait until signalled, at which point they will wake up and check for available connections again. The workers will execute sequentially and each try to create a new connection. This is the execution that leads to the race condition:\n\nWorker 1 adds a connection as usual, signalling the borrow threads to wake up. \n\nWorker 1 finishes (`isDone()`)\n\nBefore the borrow threads can check for new connections, worker 2 tries to add a new connection.\n\nWorker 2 checks if `getIdleConnections() <= minimumIdle`, sees the connection worker 1 added, and skips the `addConnection` call.\n\nBorrow thread 1 sucessfully borrows a connection.\n\nBorrow thread 2 cannot borrow a connection and goes to sleep waiting for Worker 2 to signal.\n\nWorker 2 finishes (`isDone()`)\n\nI have included a potential solution to this problem (signal at the end of the worker thread no matter what) and a test to reproduce this race condition (`AddConnectionRaceConditionTest`).\n\nI have already sent you a pull here: brettwooldridge#451\n\nLet me know if you have any questions.\n\n(cc @shuyangzhou)\n", "labels": ["bug"]}, {"created": "2015-09-25 18:37:00", "commits": {"79386c6487a53eba8b6690e3d03b90eda0e2d842": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.HikariPool.getConnection(long)"], "closed": "2015-09-29 14:08:07", "filteredCommits": ["79386c6487a53eba8b6690e3d03b90eda0e2d842"], "commitsDetails": [{"nameRev": "79386c6487a53eba8b6690e3d03b90eda0e2d842 tags/HikariCP-2.4.2~41", "commitMessage": "Fixes #432 improve accuracy of elapsed time calculation to account for time spent in isConnectionAlive() call.\n", "commitParents": ["b2cfd099988a9491b1fa0052ab32a0c05596698e"], "spoonStatsSkippedReason": "", "commitHash": "79386c6487a53eba8b6690e3d03b90eda0e2d842", "authoredDateTime": "2015-09-29 23:08:02", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}], "commitDateTime": "2015-09-29 23:08:02", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.getConnection(long)"}], "spoonFilePath": "HikariPool.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/432", "ttf": 3.000277777777778, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "title": "Timeout from HikariPool#getConnection(final long hardTimeout) does not account for call to PoolElf#isConnectionAlive", "statsSkippedReason": "", "user": "mattdandrea", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/pool"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "In  HikariPool#getConnection(final long hardTimeout) is the following block of code:\n\n```\n        final long now = clockSource.currentTime();\n        if (bagEntry.evict || (clockSource.elapsedMillis(bagEntry.lastAccess, now) > ALIVE_BYPASS_WINDOW_MS && !poolElf.isConnectionAlive(bagEntry.connection, lastConnectionFailure))) {\n           closeConnection(bagEntry, \"(connection evicted or dead)\"); // Throw away the dead connection and try again\n           timeout = hardTimeout - clockSource.elapsedMillis(startTime, now);\n        }\n```\n\n\u201cnow\u201d is being assigned a value before the if condition.\n\nThe problem is that the call to poolElf.isConnectionAlive can take time and has its own timeout.\nSo, in the if block, when you go:\n`timeout = hardTimeout - clockSource.elapsedMillis(startTime, now);`\nit does not account for this elapsed time  (e.g. 5 seconds for a call to connection.isValid(timeoutSec) where timeoutSec is 5 seconds).\n\nTherefore, I think \"now\" should also be assigned in the if block as well.\n", "labels": ["bug"]}, {"created": "2015-09-07 13:45:16", "user": "brenuart", "body": "`HikariDataSource.close()` makes a call to `DriverDataSource.shutdown()` whose body is empty (noop). `DriverDataSource` being a final class - there is no chance anyone except the Hikari maintainers extend this class or change the method implementation.\n\nConclusion: code would be cleaner and easier to maintain if that useless call to `DriverDataSource.shutdown()'  is removed.\n", "closed": "2015-09-07 14:09:01", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/413", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "Useless call to DriverDataSource.shutdown() when HikariDataSource.close() "}, {"created": "2015-09-07 11:42:09", "user": "brenuart", "body": "Method `MetricsContext.setConnectionLastOpen()` is passed a `PoolBagEntry` instance. Most its fields are public meaning any custom `MetricsContext` implementation has read/write access to them. Unfortunately, most of those fields are very sensitive and are not intended to be exposed to elements outside of Hikari internals.\n\nAs far as I can tell, `MetricsContext` only needs to update the `lastOpenTime` field - access to the other properties could remain read-only. More over, it is questionable whether `MetricsContext` is responsible to update that field or if Hikari could take care of it.\n", "closed": "2015-10-07 03:41:18", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/412", "ttf": 29.00027777777778, "commits": {}, "labels": ["bug"], "title": "PoolBagEntry sensitive fields are exposed through MetricsContext"}, {"created": "2015-09-03 13:52:37", "user": "danrah", "body": "This is the question that I have posted on SO and I feel that it might be a HIkariCP issue :)\n\nI'm trying to use HikariCP in a java app to implement connection pooling to MySQL.\n\nBecause of a DB design flaw, the app uses different databases and I have to explicitly call connection.setCatalog() to change the database when needed.\n\nWhen I try to close the connection that uses the default database (with no call to setCatalog() ) everything is fine and the connection returns back to the pool. But If this is a connection to another database (using setCatalog()) I get the following exception when I call close() method:\n\njava.sql.SQLException: Catalog can not be null\n    at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1074)\n    at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:988)\n    at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:974)\n    at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)\n    at com.mysql.jdbc.ConnectionImpl.setCatalog(ConnectionImpl.java:5324)\n    at com.zaxxer.hikari.pool.PoolElf.resetConnectionState(PoolElf.java:263)\n    at com.zaxxer.hikari.pool.PoolBagEntry.resetConnectionState(PoolBagEntry.java:122)\n    at com.zaxxer.hikari.proxy.ConnectionProxy.close(ConnectionProxy.java:193)\n    at someapp.repository.MySqlRepository.closeConnection(MySqlRepository.java:198)...\nNeedless to say that I have checked if the catalog is null:\n\npublic void closeConnection() throws SQLException{\n        System.out.println(\"trying to close with catalog:\"+connection.getCatalog());\n\n```\n    if(connection!=null){\n\n    //connection.setCatalog(\"defaultdb\");\n        connection.close();\n\n    }\n    this.connection=null;\n}\n```\n\nIf I uncomment the the connection.setCatalog(\"defaultdb\") to set the catalog back to the default, the problem still persists.\n\nThe only situation where everything is fine is when I don't use setCatalog() method at all.\n\nIs this an issue with hikaricp when the catalog is explicitly set? Is there a way to close the connection and send it back to the pool?\n", "closed": "2015-09-04 04:25:50", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/410", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug", "more-information-needed"], "title": "java.sql.SQLException: Catalog can not be null when closing a connection with explicit catalog"}, {"created": "2015-09-01 08:24:34", "commits": {"eb3adb7faf9376a9126c06231480e27c79e28cf6": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.Mediator.newConnection()", "com.zaxxer.hikari.pool.HikariPool.getConnection(long)", "com.zaxxer.hikari.pool.Mediator", "com.zaxxer.hikari.pool.Mediator.setupConnection(java.sql.Connection,long)"], "closed": "2015-09-15 05:20:42", "filteredCommits": ["eb3adb7faf9376a9126c06231480e27c79e28cf6"], "commitsDetails": [{"nameRev": "eb3adb7faf9376a9126c06231480e27c79e28cf6 tags/HikariCP-2.4.2~66", "commitMessage": "Fixes #406 execute validation query during connection setup to make sure its ... um ... valid.\n", "commitParents": ["33fe0a50350dbce40f64f41be9491e004439d148"], "spoonStatsSkippedReason": "", "commitHash": "eb3adb7faf9376a9126c06231480e27c79e28cf6", "authoredDateTime": "2015-09-15 14:20:20", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 7, "deletions": 0, "lines": 7, "filePath": "src/main/java/com/zaxxer/hikari/pool/Mediator.java"}, {"insertions": 38, "deletions": 0, "lines": 38, "filePath": "src/test/java/com/zaxxer/hikari/TestConnections.java"}, {"insertions": 6, "deletions": 1, "lines": 7, "filePath": "src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}], "commitDateTime": "2015-09-15 14:20:20", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 1, "INS": 3, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.getConnection(long)"}], "spoonFilePath": "HikariPool.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.TestConnections.testInvalidConnectionTestQuery()"}], "spoonFilePath": "TestConnections.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.Mediator.newConnection()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.Mediator.setupConnection(java.sql.Connection,long)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.Mediator"}], "spoonFilePath": "Mediator.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/406", "ttf": 13.000277777777777, "gitStatsSummary": {"insertions": 13, "deletions": 1, "lines": 14, "gitFilesChange": 2}, "title": "Recent connections are not validated (ALIVE_BYPASS_WINDOW)", "statsSkippedReason": "", "user": "brenuart", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/pool"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 4, "TOT": 7, "MOV": 1, "INS": 6, "DEL": 0, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hikari does validate pooled connections only if they are older than a given threshold. The default threshold is 1000ms, can be set via the `com.zaxxer.hikari.aliveBypassWindow` system property.\n\nIn effect, Hikari assumes that a just created connection is alive and does not need to be validated. Although this may seem a valid optimisation, it becomes confusing when the pool is configured with an _incorrect validation query_. In that case, the application will always obtain a brand new connection from the pool - already pooled connections older than the threshold are eligible for validation and will be (silently) discarded. The application is working but performs as if it had no pool at all (except for the limit on concurrent connections).\n\nThe worst is there is no way for sysadmin to detect and troubleshoot the issue (application is working and nothing in the logs) - not even with the metrics.\n\nWe decided to turn off this feature by setting the `com.zaxxer.hikari.aliveBypassWindow` property to '-1'. Changing this value through system properties is not very convenient. It would be more convenient if that property would be configurable through the `HikariConfig` just like the other. It would also allows for different settings per pool.\n\nWhat's your opinion?\n", "labels": ["bug"]}, {"created": "2015-08-31 02:30:56", "commits": {"c0c6daf93de068f53cafed4ed0161efdd0e77172": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.HikariConfig.validate()"], "closed": "2015-10-07 07:33:34", "filteredCommits": ["c0c6daf93de068f53cafed4ed0161efdd0e77172"], "commitsDetails": [{"nameRev": "c0c6daf93de068f53cafed4ed0161efdd0e77172 tags/HikariCP-2.4.2~29", "commitMessage": "Fixed #401 log warning when both dataSourceClassName and jdbcUrl are specified.\n", "commitParents": ["23c1b80bfd7ffa4df21365b6f5d6a80bcdc8f32d"], "spoonStatsSkippedReason": "", "commitHash": "c0c6daf93de068f53cafed4ed0161efdd0e77172", "authoredDateTime": "2015-10-07 16:33:10", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 0, "lines": 3, "filePath": "src/main/java/com/zaxxer/hikari/HikariConfig.java"}], "commitDateTime": "2015-10-07 16:33:10", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariConfig.validate()"}], "spoonFilePath": "HikariConfig.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/401", "ttf": 37.000277777777775, "gitStatsSummary": {"insertions": 3, "deletions": 0, "lines": 3, "gitFilesChange": 1}, "title": "Specifying both the setDataSourceClassName & jdbc url leading to connection error on localhost.", "statsSkippedReason": "", "user": "happyili", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Through this is not recommended to use both setDataSourceClassName and setJdbcUrl but I found the error message is mis-leading (while I have sqlServerJdbcUrl to pointing to some other external ip)\n\n```\npublic void init(int minimum,int Maximum){\n    HikariConfig config = new HikariConfig();\n    config.setDataSourceClassName(\"com.microsoft.sqlserver.jdbc.SQLServerDataSource\");\n    config.setJdbcUrl(sqlServerJdbcUrl.get());\n    config.setAutoCommit(true);\n    config.setMinimumIdle(minimum);\n    config.setMaximumPoolSize(Maximum);\n    config.setInitializationFailFast(true);\n\n    ds = new HikariDataSource(config);\n}\n```\n\nError:\nException in thread \"main\" com.zaxxer.hikari.pool.PoolInitializationException: Exception during pool initialization: The TCP/IP connection to the host localhost, port 1433 has failed. Error: \"Connection refused. Verify the connection properties. Make sure that an instance of SQL Server is running on the host and accepting TCP/IP connections at the port. Make sure that TCP connections to the port are not blocked by a firewall.\".\n    at com.zaxxer.hikari.pool.HikariPool.initializeConnections(HikariPool.java:581)\n    at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:152)\n    at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:96)\n", "labels": ["bug"]}, {"created": "2015-08-28 16:13:55", "commits": {"caa4b0d0bcf3534676807902f10016ce8e8dde81": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}, "4db2d79e505b7c5fc318d8b3b1555d6046050df9": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.metrics.PoolStats.getTotalConnections()", "com.zaxxer.hikari.metrics.PoolStats.getActiveConnections()", "com.zaxxer.hikari.metrics.PoolStats.getIdleConnections()", "com.zaxxer.hikari.metrics.PoolStats.getPendingThreads()"], "closed": "2015-08-31 13:06:05", "filteredCommits": ["caa4b0d0bcf3534676807902f10016ce8e8dde81"], "commitsDetails": [{"nameRev": "caa4b0d0bcf3534676807902f10016ce8e8dde81 tags/HikariCP-2.4.2~68^2", "commitMessage": "Fixes #400 make getters public\n", "commitParents": ["383af8577a8be023f28a361cff26cd7825cbb855"], "spoonStatsSkippedReason": "", "commitHash": "caa4b0d0bcf3534676807902f10016ce8e8dde81", "authoredDateTime": "2015-08-31 22:06:00", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 4, "deletions": 4, "lines": 8, "filePath": "src/main/java/com/zaxxer/hikari/metrics/PoolStats.java"}], "commitDateTime": "2015-08-31 22:06:00", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.metrics.PoolStats.getTotalConnections()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.metrics.PoolStats.getPendingThreads()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.metrics.PoolStats.getIdleConnections()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.metrics.PoolStats.getActiveConnections()"}], "spoonFilePath": "PoolStats.java"}]}, {"nameRev": "4db2d79e505b7c5fc318d8b3b1555d6046050df9 tags/HikariCP-2.4.2~69", "commitMessage": "Fixes #400 make getters public\n", "commitParents": ["5b4a853bed7b52f930481d0b8359d6d9ab601b4d"], "spoonStatsSkippedReason": "", "commitHash": "4db2d79e505b7c5fc318d8b3b1555d6046050df9", "authoredDateTime": "2015-08-31 22:06:00", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 4, "lines": 8, "filePath": "src/main/java/com/zaxxer/hikari/metrics/PoolStats.java"}], "commitDateTime": "2015-09-15 13:02:24", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.metrics.PoolStats.getTotalConnections()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.metrics.PoolStats.getPendingThreads()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.metrics.PoolStats.getIdleConnections()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.metrics.PoolStats.getActiveConnections()"}], "spoonFilePath": "PoolStats.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/400", "ttf": 2.000277777777778, "gitStatsSummary": {"insertions": 4, "deletions": 4, "lines": 8, "gitFilesChange": 1}, "title": "PoolStats methods are protected - hard to build custom MetricTracker", "statsSkippedReason": "", "user": "brenuart", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/metrics"], "spoonStatsSummary": {"UPD": 4, "spoonMethodsChanged": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "The introduction of the new `MetricsTrackerFactory` property seems to allow us to register custom implementation of `MetricsTracker` (other than the one provided for Codahale metrics).\n\nValuable metric information like total connections, idle connections, active connections, etc are made available through an instance of `PoolStats`. Unfortunately, the corresponding getter methods are all marked `protected` and are therefore not available to any MetricTracker implementation not in the Hikari packages...\n\nIs it intended?\nIf so, how are we supposed to implement a custom metric tracker?\n", "labels": ["bug"]}, {"created": "2015-08-28 13:55:10", "user": "hepin1989", "body": "```\nCaused by: com.zaxxer.hikari.pool.PoolInitializationException: Exception during pool initialization\n    at com.zaxxer.hikari.pool.HikariPool.initializeConnections(HikariPool.java:580)\n    at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:150)\n    at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:73)\n    at qgame.engine.data.db.DefaultDB$.qgame$engine$data$db$DefaultDB$$getDatabaseViaUrl(DB.scala:124)\n    at qgame.engine.data.db.DefaultDB$$anonfun$3.apply(DB.scala:83)\n    at qgame.engine.data.db.DefaultDB$$anonfun$3.apply(DB.scala:67)\n    at scala.Option.map(Option.scala:146)\n    at qgame.engine.data.db.DefaultDB$.qgame$engine$data$db$DefaultDB$$createDatabaseFromConfigOrFail(DB.scala:66)\n    at qgame.engine.data.db.DefaultDB$$anonfun$database$1.apply(DB.scala:146)\n    at qgame.engine.data.db.DefaultDB$$anonfun$database$1.apply(DB.scala:145)\n    at scala.Option.getOrElse(Option.scala:121)\n    at qgame.engine.data.db.DefaultDB$.database(DB.scala:145)\n    at qgame.engine.data.db.DefaultDB$.database(DB.scala:54)\n    at qgame.engine.libs.DB$.database(DB.scala:10)\n    at cn.qgame.xxjh.gate.module.infer.db.DBHelper$.db$lzycompute(DBHelper.scala:16)\n    at cn.qgame.xxjh.gate.module.infer.db.DBHelper$.db(DBHelper.scala:16)\n    at cn.qgame.xxjh.gate.module.infer.db.DBHelper$.tableExist(DBHelper.scala:47)\n    at cn.qgame.xxjh.gate.module.infer.db.DBHelper$.checkExistOrCreateTable(DBHelper.scala:20)\n    at cn.qgame.xxjh.gate.module.infer.InferModuleActor.preStart(InferModuleActor.scala:182)\n    at akka.actor.Actor$class.aroundPreStart(Actor.scala:472)\n    at cn.qgame.xxjh.gate.module.infer.InferModuleActor.aroundPreStart(InferModuleActor.scala:20)\n    at akka.actor.ActorCell.create(ActorCell.scala:580)\n    ... 9 more\nCaused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:422)\n    at com.mysql.jdbc.Util.handleNewInstance(Util.java:389)\n    at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1038)\n    at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:338)\n    at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2237)\n    at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2270)\n    at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2069)\n    at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:794)\n    at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:422)\n    at com.mysql.jdbc.Util.handleNewInstance(Util.java:389)\n    at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)\n    at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:325)\n    at com.mysql.jdbc.jdbc2.optional.MysqlDataSource.getConnection(MysqlDataSource.java:422)\n    at com.mysql.jdbc.jdbc2.optional.MysqlDataSource.getConnection(MysqlDataSource.java:134)\n    at com.zaxxer.hikari.pool.HikariPool.addConnection(HikariPool.java:495)\n    at com.zaxxer.hikari.pool.HikariPool.initializeConnections(HikariPool.java:564)\n    ... 30 more\nCaused by: java.net.ConnectException: connection refused\n    at java.net.PlainSocketImpl.socketConnect(Native Method)\n    at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\n    at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\n    at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\n    at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n    at java.net.Socket.connect(Socket.java:589)\n    at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:213)\n    at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:297)\n    ... 46 more\n\n```\n\nthe code setup is\n\n```\n    val cpConfig = new HikariConfig()\n        val jdbcUrl = s\"jdbc:mysql://127.0.0.1:3307/gate\"\n        log.info(jdbcUrl)\n        cpConfig.setJdbcUrl(jdbcUrl)\n        cpConfig.addDataSourceProperty(\"databaseName\", dbName)\n        cpConfig.setUsername(username)\n        cpConfig.setPassword(password)\n        val dataSource = new HikariDataSource(cpConfig)\n```\n\nI hard coding here for test.\n\nI change the `my.cnf`\nthe port to `3307` and `service mysql restart` then it throws.\nI used this lib for a low time and really don't know why it throws now.\n- mysql 5.6\n- jdbc  \"mysql\" % \"mysql-connector-java\" % \"5.1.35\",\n- ubuntu 14.04\n\nthe problem is that I could connect to mysql via navicat with port 3307,but not via code .\n", "closed": "2015-08-28 14:30:05", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/398", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug", "more-information-needed"], "title": "cannot connect to mysql after change the default port to other number"}, {"created": "2015-08-28 13:23:33", "user": "vlsi", "body": "The following FAQ entry has invalid statement:\nhttps://github.com/brettwooldridge/HikariCP/wiki/FAQ#q-how-to-i-properly-enable-preparedstatement-caching-for-postgresql\n\n> The PostgreSQL JDBC driver from the PostgreSQL project does not support PreparedStatement caching\n\nIn fact official PostgreSQL driver does support prepared statement caching: https://jdbc.postgresql.org/documentation/changelog.html#version_9.4-1202\n\nSee preparedStatementCacheQueries and preparedStatementCacheSizeMiB parameters here: https://jdbc.postgresql.org/documentation/head/connect.html#connection-parameters\n\nPlease fix the wording to advice newer pgjdbc version or remove the item altogether.\n", "closed": "2015-08-28 14:18:35", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/397", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "Correct FAQ item on PostgreSQL's statement caching"}, {"created": "2015-08-17 02:32:32", "user": "rponte", "body": "Hi,\n\nThe video from \"Oracle Real-World Performance group\" in [About Pool Sizing](https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing) wiki page is broken!\n\nI tried to find this video on youtube inside of [Oracle Real-World Performance Video Series](https://www.youtube.com/playlist?list=PLKCk3OyNwIzvwEXdaubc6PQXwnQOAE9h2) but I couldn't. \n\nCould you fix the link?\n", "closed": "2015-08-19 00:05:33", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/385", "ttf": 1.0002777777777778, "commits": {}, "labels": ["bug"], "title": "Video in wiki page is broken - About Pool Sizing"}, {"created": "2015-08-12 16:04:17", "commits": {"9613b63a4333b70bf216b940a47d820686473e3a": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.HikariPool"], "closed": "2015-08-17 08:11:30", "filteredCommits": ["9613b63a4333b70bf216b940a47d820686473e3a"], "commitsDetails": [{"nameRev": "9613b63a4333b70bf216b940a47d820686473e3a tags/HikariCP-2.4.1~2^2~8", "commitMessage": "Fixed #380 housekeeper was not being scheduled in the case of a user specified ScheduledExecutorService.\n", "commitParents": ["68225c20f1450a6c20a7d0e7a0b720261f01a7d0"], "spoonStatsSkippedReason": "", "commitHash": "9613b63a4333b70bf216b940a47d820686473e3a", "authoredDateTime": "2015-08-17 17:11:26", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 2, "deletions": 1, "lines": 3, "filePath": "src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}], "commitDateTime": "2015-08-17 17:11:26", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool"}], "spoonFilePath": "HikariPool.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/380", "ttf": 4.000277777777778, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "title": "expose houseKeepingExecutorService for sharing", "statsSkippedReason": "", "user": "jaredstehler", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/pool"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hikari 2.4.0 allows pools to share house keeping threadpools, which is great, but there's no way to actually create one for sharing, unless I'm missing something? And it's not really possible to create one which mimics what the default one does, since it uses a private task:\n\n```\n      if (config.getScheduledExecutorService() == null) {\n         ThreadFactory threadFactory = config.getThreadFactory() != null ? config.getThreadFactory() : new DefaultThreadFactory(\"Hikari housekeeper (pool \" + poolName + \")\", true);\n         this.houseKeepingExecutorService = new ScheduledThreadPoolExecutor(1, threadFactory, new ThreadPoolExecutor.DiscardPolicy());\n         this.houseKeepingExecutorService.scheduleAtFixedRate(new HouseKeeper(), HOUSEKEEPING_PERIOD_MS, HOUSEKEEPING_PERIOD_MS, TimeUnit.MILLISECONDS);\n```\n", "labels": ["bug"]}, {"created": "2015-08-08 05:29:20", "user": "g8373653", "body": "I tried to upgrade from 2.3.9 to 2.4.0. There seems to be a problem with accessing the properties file. \n\nCode:\n\n`new HikariConfig(getClass().getClassLoader().getResource(\"hikari.properties\").getFile()))`\n\nException:\n\n`java.nio.file.InvalidPathException: Illegal char <:> at index 2: /D:/Projects/Module-App1/target/classes/hikari.properties\n    at sun.nio.fs.WindowsPathParser.normalize(WindowsPathParser.java:182)\n    at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:153)\n    at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)\n    at sun.nio.fs.WindowsPath.parse(WindowsPath.java:94)\n    at sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:255)\n    at java.nio.file.Paths.get(Paths.java:84)\n    at com.zaxxer.hikari.HikariConfig.loadProperties(HikariConfig.java:848)\n    at com.zaxxer.hikari.HikariConfig.<init>(HikariConfig.java:142)`\n", "closed": "2015-08-10 14:09:20", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/375", "ttf": 2.000277777777778, "commits": {}, "labels": ["bug"], "title": "upgrade from 2.3.9 to 2.4.0 - java.nio.file.InvalidPathException"}, {"created": "2015-08-05 08:52:13", "user": "chilly", "body": "when I follow with https://github.com/brettwooldridge/HikariCP/wiki/Hibernate4:\nhibernate.connection.provider_class=com.zaxxer.hikari.hibernate.HikariConnectionProvider\nhibernate.hikari.minimumPoolSize=20\nhibernate.hikari.maximumPoolSize=100\nhibernate.hikari.idleTimeout=30000\nhibernate.hikari.dataSourceClassName=com.mysql.jdbc.jdbc2.optional.MysqlDataSource\nhibernate.hikari.dataSource.url=jdbc:mysql://localhost/database\nhibernate.hikari.dataSource.user=bart\nhibernate.hikari.dataSource.password=51mp50n\n\nhere : \nhibernate.hikari.minimumPoolSize=20\nthere is \"no method setMinimumPoolSize\"  exception will throw.\nremove it will success. \n\nchange the wiki content please.\n", "closed": "2015-08-05 14:22:27", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/368", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "https://github.com/brettwooldridge/HikariCP/wiki/Hibernate4  wiki content error"}, {"created": "2015-08-02 15:15:55", "user": "marcospereira", "body": "The current published page is pointing to 2.3.8 release.\n", "closed": "2015-08-03 13:35:19", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/363", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "Updade github page"}, {"created": "2015-07-23 09:18:19", "commits": {"428e2b56c84636d06a943faffef7bf66be33338e": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.HikariPool.HouseKeeper.run()"], "closed": "2015-07-23 11:53:03", "filteredCommits": ["428e2b56c84636d06a943faffef7bf66be33338e"], "commitsDetails": [{"nameRev": "428e2b56c84636d06a943faffef7bf66be33338e tags/HikariCP-2.4.0~6", "commitMessage": "Fix #354 always set previous timestamp\n", "commitParents": ["8c87b1570e7db505e7ce7e13fc979dc35ad4f19f"], "spoonStatsSkippedReason": "", "commitHash": "428e2b56c84636d06a943faffef7bf66be33338e", "authoredDateTime": "2015-07-23 20:52:42", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 2, "lines": 6, "filePath": "src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}], "commitDateTime": "2015-07-23 20:52:42", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.HouseKeeper.run()"}], "spoonFilePath": "HikariPool.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/354", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 4, "deletions": 2, "lines": 6, "gitFilesChange": 1}, "title": "Hikari might not recover from state \"Unusual system clock change detected\"", "statsSkippedReason": "", "user": "jnehlmeier", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/pool"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "The Housekeeper checks  for unusual system clock changes. If such a change has been detected the `previous` variable is not updated because of the `return` statement. It could happen that Hikari does not recover from this state because the value `previous` has become too old. \n\nCurrently we have a development VM which evicts connections every 30 seconds.\n\n``` java\nfinal long now = clockSource.currentTime();\nfinal long idleTimeout = config.getIdleTimeout();\n\n// Detect retrograde time as well as forward leaps of unacceptable duration\nif (now < previous || now > clockSource.plusMillis(previous, (2 * HOUSEKEEPING_PERIOD_MS))) {\n      LOGGER.warn(\"{} - Unusual system clock change detected, soft-evicting connections from pool.\", poolName);\n      softEvictConnections();\n      fillPool();\n      return;\n}\n\nprevious = now;\n```\n", "labels": ["bug"]}, {"created": "2015-07-06 08:23:40", "commits": {"2072e17da2b999c3aa330f390824d96114d89da3": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "896ccd9ec98e5da1a5791f5c62f215c4f3db6de7": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 0, "closed": "2015-07-06 13:44:54", "filteredCommits": ["2072e17da2b999c3aa330f390824d96114d89da3"], "commitsDetails": [{"nameRev": "2072e17da2b999c3aa330f390824d96114d89da3 tags/HikariCP-2.4.0~27", "commitMessage": "Fix #339 correct example", "commitParents": ["b18c786e1d0dad94292d670ee99526946cff502a"], "spoonStatsSkippedReason": "", "commitHash": "2072e17da2b999c3aa330f390824d96114d89da3", "authoredDateTime": "2015-07-06 22:45:30", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "README.md"}], "commitDateTime": "2015-07-06 22:45:30", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": []}, {"nameRev": "896ccd9ec98e5da1a5791f5c62f215c4f3db6de7 tags/HikariCP-2.3.9~3", "commitMessage": "Fix #339 correct example", "commitParents": ["e51cd98d0666947a796baa81b00abf5e82191b0a"], "spoonStatsSkippedReason": "", "commitHash": "896ccd9ec98e5da1a5791f5c62f215c4f3db6de7", "authoredDateTime": "2015-07-06 22:44:53", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "README.md"}], "commitDateTime": "2015-07-06 22:44:53", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": []}], "url": "https://github.com/brettwooldridge/HikariCP/issues/339", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Mistake in documentation for configuration via java.util.Properties", "statsSkippedReason": "", "user": "Kamaruni", "changesInPackagesGIT": [], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "[Here](https://github.com/brettwooldridge/HikariCP#initialization) the documentation states that the LogWriter can be configured via java.util.Properties like this:\n\n``` java\nProperties props = new Properties();\n// ...\nprops.setProperty(\"dataSource.logWriter\", new PrintWriter(System.out));\n```\n\nsetProperty only accepts String as second parameter, though.\n\nHow can you actually configure the log writer via java.util.Properties?\n", "labels": ["bug"]}, {"created": "2015-06-27 18:35:46", "commits": {"bc3424575c5b3c6c5bdae3f956fc8485f1689a6f": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "60e0eb1b8bb87242665c37e1f3ecf549b2457206": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari"], "closed": "2015-07-01 14:07:58", "filteredCommits": ["bc3424575c5b3c6c5bdae3f956fc8485f1689a6f"], "commitsDetails": [{"nameRev": "bc3424575c5b3c6c5bdae3f956fc8485f1689a6f tags/HikariCP-2.4.0~33", "commitMessage": "Fix #334 caused by moving the ``HikariPoolMBean`` into the ``com.zaxxer.hikari`` package.  Classes with the ``xxxMBean`` naming convention must reside in the same package.  Renaming the class to ``xxxMXBean`` allows it to reside anywhere.\n", "commitParents": ["cf2a9d3aefba1c7d6d4ad399e762edf7a6f6e111"], "spoonStatsSkippedReason": "", "commitHash": "bc3424575c5b3c6c5bdae3f956fc8485f1689a6f", "authoredDateTime": "2015-07-01 22:51:26", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/zaxxer/hikari/{HikariPoolMBean.java => HikariPoolMXBean.java}"}], "commitDateTime": "2015-07-01 22:51:26", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "HikariPool.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari"}], "spoonFilePath": "HikariPoolMXBean.java"}]}, {"nameRev": "60e0eb1b8bb87242665c37e1f3ecf549b2457206 tags/HikariCP-2.3.9~5", "commitMessage": "Fix #334 caused by moving the ``HikariPoolMBean`` into the ``com.zaxxer.hikari`` package.  Classes with the ``xxxMBean`` naming convention must reside in the same package.  Renaming the class to ``xxxMXBean`` allows it to reside anywhere.\n", "commitParents": ["7aa6870af06d990f53b00494258d2ead222aeb5a"], "spoonStatsSkippedReason": "", "commitHash": "60e0eb1b8bb87242665c37e1f3ecf549b2457206", "authoredDateTime": "2015-07-01 23:07:54", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/pool/BaseHikariPool.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/AbstractHikariConfig.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/pool/{HikariPoolMBean.java => HikariPoolMXBean.java}"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/{HikariConfigMBean.java => HikariConfigMXBean.java}"}], "commitDateTime": "2015-07-01 23:07:54", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool"}], "spoonFilePath": "HikariPoolMXBean.java"}, {"spoonMethods": [], "spoonFilePath": "BaseHikariPool.java"}, {"spoonMethods": [], "spoonFilePath": "AbstractHikariConfig.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari"}], "spoonFilePath": "HikariConfigMXBean.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/334", "ttf": 3.000277777777778, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 2}, "title": "no MBean interface", "statsSkippedReason": "", "user": "mtshane", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/pool", "src/main/java/com/zaxxer/hikari"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Just finished implementing HikariCP in an app to replace BoneCP.  The pool configures and runs successfully, but as soon as I try and turn on the JMX monitoring, I see the following.\n\n[2015-06-27 12:00:56.756] [WARN] HikariMBeanElf - Unable to register management beans.\njavax.management.NotCompliantMBeanException: com.zaxxer.hikari:type=PoolConfig (ZC_DBA) mbean has no MBean interface for class com.zaxxer.hikari.HikariDataSource\n        at com.caucho.jmx.AbstractMBeanServer.createMBean(AbstractMBeanServer.java:441)\n        at com.caucho.jmx.AbstractMBeanServer.registerMBean(AbstractMBeanServer.java:415)\n        at com.zaxxer.hikari.pool.HikariMBeanElf.registerMBeans(HikariMBeanElf.java:67)\n        at com.zaxxer.hikari.pool.BaseHikariPool.<init>(BaseHikariPool.java:170)\n        at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:60)\n        at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:48)\n        at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)\n        at com.zaneray.foundation.dbconnection.HikariCPPool.connect(HikariCPPool.java:79)\n\n[12:00:53.700] {main} Windows 8.1 6.3 amd64\n[12:00:53.700] {main} Java(TM) SE Runtime Environment 1.8.0_45-b15, UTF-8, en\n\nAnd this is using the most recent 2.3.8 release.\n\n(edit)\n\nI suppose this could simply be an issue with an outdated version of Resin also, not the pool or the JVM\n", "labels": ["bug"]}, {"created": "2015-06-17 14:06:48", "user": "dimitrisli", "body": "Hi there,\n\nwhile using the the jConnect driver (v.7.0) and also using the Driver datasource implementation as instructed in the HikariCP documentation (bottom of the page): com.sybase.jdbcx.SybDataSource\n\nthat is giving the following error:\n\nCaused by: java.lang.InstantiationException: com.sybase.jdbcx.SybDataSource\n    at java.lang.Class.newInstance(Class.java:418)\n    at com.zaxxer.hikari.util.UtilityElf.createInstance(UtilityElf.java:117)\n    ... 62 more\nCaused by: java.lang.NoSuchMethodException: com.sybase.jdbcx.SybDataSource.<init>()\n    at java.lang.Class.getConstructor0(Class.java:3069)\n    at java.lang.Class.newInstance(Class.java:403)\n    ... 63 more\n\nApparently HikariCP is looking for a default constructor that is not there.\n\nThere is another datasource implementation in the driver that has a default constructor:\ncom.sybase.jdbc4.jdbc.SybDataSource\n\nIs the intended one to use?\n\nthanks,\nDimitrios\n", "closed": "2015-06-19 13:41:07", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/328", "ttf": 1.0002777777777778, "commits": {}, "labels": ["bug"], "title": "jConnect Sybase driver java.lang.NoSuchMethodException"}, {"created": "2015-05-20 11:00:02", "commits": {"7caebb13a2a521c99ba15170c9eaf723fe8f5295": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}, "6b3a689cea10fd26d918ffac3e6fe79d7afc1548": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 2, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.HikariMBeanElf.unregisterMBeans(com.zaxxer.hikari.HikariConfig,com.zaxxer.hikari.pool.BaseHikariPool)", "com.zaxxer.hikari.pool.HikariMBeanElf.unregisterMBeans(com.zaxxer.hikari.HikariConfig,com.zaxxer.hikari.pool.HikariPool)"], "closed": "2015-05-20 13:48:21", "filteredCommits": ["6b3a689cea10fd26d918ffac3e6fe79d7afc1548", "7caebb13a2a521c99ba15170c9eaf723fe8f5295"], "commitsDetails": [{"nameRev": "7caebb13a2a521c99ba15170c9eaf723fe8f5295 tags/HikariCP-2.3.9~12", "commitMessage": "Fixes #318 add check to avoid instantiation of mbean server in the case that registration is disabled.\n", "commitParents": ["fde1885a2a86f0ebf085fca52538d5347c9ecd9c"], "spoonStatsSkippedReason": "", "commitHash": "7caebb13a2a521c99ba15170c9eaf723fe8f5295", "authoredDateTime": "2015-05-20 22:48:17", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 4, "deletions": 0, "lines": 4, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/pool/HikariMBeanElf.java"}], "commitDateTime": "2015-05-20 22:48:17", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariMBeanElf.unregisterMBeans(com.zaxxer.hikari.HikariConfig,com.zaxxer.hikari.pool.BaseHikariPool)"}], "spoonFilePath": "HikariMBeanElf.java"}]}, {"nameRev": "6b3a689cea10fd26d918ffac3e6fe79d7afc1548 tags/HikariCP-2.4.0-rc1~24", "commitMessage": "Comment #318 add check to avoid instantiation of mbean server in the case that registration is disabled.\n", "commitParents": ["8d45526f4de0faa8fccd9f1c19c03a48edb80605"], "spoonStatsSkippedReason": "", "commitHash": "6b3a689cea10fd26d918ffac3e6fe79d7afc1548", "authoredDateTime": "2015-05-20 22:46:47", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 0, "lines": 4, "filePath": "src/main/java/com/zaxxer/hikari/pool/HikariMBeanElf.java"}], "commitDateTime": "2015-05-20 22:46:47", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariMBeanElf.unregisterMBeans(com.zaxxer.hikari.HikariConfig,com.zaxxer.hikari.pool.HikariPool)"}], "spoonFilePath": "HikariMBeanElf.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/318", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 8, "deletions": 0, "lines": 8, "gitFilesChange": 2}, "title": "HikariConfig.setRegisterMbeans(false) not honored in HikariMBeanElf.unregisterMBeans", "statsSkippedReason": "", "user": "pottedplant", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/pool", "hikaricp-common/src/main/java/com/zaxxer/hikari/pool"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "please add\n\nif (!configuration.isRegisterMbeans())\n  return;\n\nin HikariMBeanElf.unregisterMBeans\n\notherwise an mbeanserver gets instantiated on pool shutdown even if regsterMBeans was set to false\n", "labels": ["bug"]}, {"created": "2015-05-19 08:56:43", "user": "ams2990", "body": "I know you've already rolled back from Javassist 3.19.0-GA to 3.18.2-GA, but I thought I would mention this since it took me a long time to track down. I shade HikariCP into my application. I cannot shade any version in [2.3.0, 2.3.7]. Specifically, any build between e3316e8618a1b00a180468041734a042738d161b and eadf8d1911da73bed9f96e5fa0d9feae11058328 causes the extremely helpful error\n\n```\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-shade-plugin:2.3:shade (default) on project insight-sql: Error creating shaded jar: null: RuntimeException -> [Help 1]\n```\n\nUsing 3.18.2-GA makes it work normally again. Any chance you can cut a 2.3.8 release soon?\n", "closed": "2015-05-19 14:12:20", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/317", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "Newer version of Javassist breaks shading"}, {"created": "2015-04-17 07:26:12", "user": "redshiftetl", "body": "This issue seems similar to #236, which I believe was fixed in version 2.3.1 - I'm on version 2.3.6. I'm seeing a lot of two possibly related exceptions in my production environment:\n\n```\n2015-04-17 07:16:26,812 | ERROR | Hikari JDBC Timeout Executor | o.a.z.s.NIOServerCnxnFactory | Thread Thread[Hikari JDBC Timeout Executor,5,main] died\njava.lang.NullPointerException: null\n    at com.mysql.jdbc.MysqlIO.setSocketTimeout(MysqlIO.java:4838) ~[mysql.mysql-connector-java-5.1.35.jar:5.1.35]\n    at com.mysql.jdbc.ConnectionImpl$12.run(ConnectionImpl.java:5544) ~[mysql.mysql-connector-java-5.1.35.jar:5.1.35]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ~[na:1.8.0_40-internal]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[na:1.8.0_40-internal]\n    at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_40-internal]\n```\n\nand\n\n```\n2015-04-17 07:16:26,907 | ERROR | Hikari JDBC Timeout Executor | o.a.z.s.NIOServerCnxnFactory | Thread Thread[Hikari JDBC Timeout Executor,5,main] died\njava.net.SocketException: Socket is closed\n    at java.net.Socket.setSoTimeout(Socket.java:1137) ~[na:1.8.0_40-internal]\n    at com.mysql.jdbc.MysqlIO.setSocketTimeout(MysqlIO.java:4838) ~[mysql.mysql-connector-java-5.1.35.jar:5.1.35]\n    ... 4 common frames omitted\nWrapped by: java.sql.SQLException: Invalid socket timeout value or state\n    at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:998) ~[mysql.mysql-connector-java-5.1.35.jar:5.1.35]\n    at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:937) ~[mysql.mysql-connector-java-5.1.35.jar:5.1.35]\n    at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:926) ~[mysql.mysql-connector-java-5.1.35.jar:5.1.35]\n    at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:872) ~[mysql.mysql-connector-java-5.1.35.jar:5.1.35]\n    at com.mysql.jdbc.MysqlIO.setSocketTimeout(MysqlIO.java:4840) ~[mysql.mysql-connector-java-5.1.35.jar:5.1.35]\n    at com.mysql.jdbc.ConnectionImpl$12.run(ConnectionImpl.java:5544) ~[mysql.mysql-connector-java-5.1.35.jar:5.1.35]\n    ... 3 common frames omitted\nWrapped by: java.lang.RuntimeException: java.sql.SQLException: Invalid socket timeout value or state\n    at com.mysql.jdbc.ConnectionImpl$12.run(ConnectionImpl.java:5546) ~[mysql.mysql-connector-java-5.1.35.jar:5.1.35]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ~[na:1.8.0_40-internal]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[na:1.8.0_40-internal]\n    at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_40-internal]\n```\n\nAny other information that would be useful? Thanks for your help.\n", "closed": "2015-04-17 07:34:48", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/310", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "Exceptions related to socket timeout with MySQL driver"}, {"created": "2015-03-21 20:50:49", "commits": {"2cabded7f40be32d169cb2dc6b94af30de1f18f9": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}, "37d5cc722e6808935d99b48a811140ad3bb33335": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.BaseHikariPool.setHealthCheckRegistry(java.lang.Object)", "com.zaxxer.hikari.pool.BaseHikariPool.setHealthCheckRegistry(com.codahale.metrics.health.HealthCheckRegistry)", "com.zaxxer.hikari.pool.BaseHikariPool.setMetricRegistry(com.codahale.metrics.MetricRegistry)", "com.zaxxer.hikari.pool.BaseHikariPool"], "closed": "2015-03-22 05:51:53", "filteredCommits": ["2cabded7f40be32d169cb2dc6b94af30de1f18f9"], "commitsDetails": [{"nameRev": "2cabded7f40be32d169cb2dc6b94af30de1f18f9 tags/HikariCP-2.3.5~1", "commitMessage": "Fix #286 fix regression in Dropwizard runtime dependency\n", "commitParents": ["b6a3f3d346b903522547af4dff414a63969b72c0"], "spoonStatsSkippedReason": "", "commitHash": "2cabded7f40be32d169cb2dc6b94af30de1f18f9", "authoredDateTime": "2015-03-22 14:51:48", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 8, "deletions": 9, "lines": 17, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/pool/BaseHikariPool.java"}], "commitDateTime": "2015-03-22 14:51:48", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.BaseHikariPool.setHealthCheckRegistry(java.lang.Object)"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.BaseHikariPool.setHealthCheckRegistry(com.codahale.metrics.health.HealthCheckRegistry)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.BaseHikariPool.setMetricRegistry(com.codahale.metrics.MetricRegistry)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.BaseHikariPool"}], "spoonFilePath": "BaseHikariPool.java"}]}, {"nameRev": "37d5cc722e6808935d99b48a811140ad3bb33335 tags/HikariCP-2.4.0-rc1~134", "commitMessage": "Merge branch 'master' into dev\n\n* master: (40 commits)\n  Fix test breakage, plus some minor cleanup.\n  Remove multi-pool (DataSource.getConnection(username, password) support.\n  Exclude PoolInitializationException from coverage\n  Update README.md\n  Added jacoco to pom\n  Added profile for coveralls\n  Update .travis.yml\n  Change travis-ci configuration for master\n  More improved logging.\n  If the pool is maxed out, return 'true' from addConnection() so we stop trying to add the connection.\n  Fix #258 Improve logging of closed connection reason\n  Recombine into a single Java 7 compatible build.\n  Update README.md\n  Fix #288 allow explicit definition of driverClassName to override DriverManager.getDriver(url) located driver.\n  Mark scope as 'test'\n  Update README.md\n  Update CHANGES\n  [maven-release-plugin] prepare for next development iteration\n  [maven-release-plugin] prepare release HikariCP-2.3.5\n  Fix #286 fix regression in Dropwizard runtime dependency\n  ...\n\nConflicts:\n\t.travis.yml\n\tREADME.md\n\thikaricp-common/pom.xml\n\thikaricp-common/src/main/java/com/zaxxer/hikari/AbstractHikariConfig.java\n\thikaricp-common/src/main/java/com/zaxxer/hikari/HikariConfig.java\n\thikaricp-common/src/main/java/com/zaxxer/hikari/proxy/JavassistProxyFactory.java\n\thikaricp-java6/src/test/java/com/zaxxer/hikari/TestMetrics.java\n\thikaricp-java7/pom.xml\n\thikaricp-java7/src/main/java/com/zaxxer/hikari/pool/HikariPool.java\n\thikaricp-java7/src/main/java/com/zaxxer/hikari/util/Java7ConcurrentBag.java\n\thikaricp-java7/src/main/resources/META-INF/codex.properties\n\thikaricp-java7/src/test/java/com/zaxxer/hikari/TestMetrics.java\n\thikaricp-java7/src/test/java/com/zaxxer/hikari/osgi/OSGiBundleTest.java\n\thikaricp-java7/src/test/resources/hibernate.properties\n\thikaricp-java7/src/test/resources/propfile1.properties\n\thikaricp-java7/src/test/resources/propfile2.properties\n\thikaricp-java7/src/test/resources/propfile3.properties\n\thikaricp/pom.xml\n\thikaricp/src/main/java/com/zaxxer/hikari/pool/HikariPool.java\n\thikaricp/src/main/java/com/zaxxer/hikari/proxy/JavassistProxyFactory.java\n\thikaricp/src/main/java/com/zaxxer/hikari/util/Java8ConcurrentBag.java\n\tpom.xml\n\tsrc/main/java/com/zaxxer/hikari/HikariConfig.java\n\tsrc/main/java/com/zaxxer/hikari/pool/HikariPool.java\n\tsrc/main/java/com/zaxxer/hikari/proxy/JavassistProxyFactory.java\n\tsrc/main/java/com/zaxxer/hikari/util/ConcurrentBag.java\n\tsrc/test/java/com/zaxxer/hikari/TestConcurrentBag.java\n\tsrc/test/java/com/zaxxer/hikari/TestMetrics.java\n", "commitParents": ["79c9e5a70985b659bed26e3d307d6e72ad541e89", "b08b0d76566e4a0c45be7b63ef4403147d697166"], "spoonStatsSkippedReason": "tooManyFiles", "commitHash": "37d5cc722e6808935d99b48a811140ad3bb33335", "authoredDateTime": "2015-03-29 00:31:17", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 35, "deletions": 0, "lines": 35, "filePath": "src/main/java/com/zaxxer/hikari/pool/PoolInitializationException.java"}, {"insertions": 3, "deletions": 5, "lines": 8, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/pool/GlobalPoolLock.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/pool/HikariPoolMBean.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/hibernate/HikariConfigurationUtil.java"}, {"insertions": 34, "deletions": 0, "lines": 34, "filePath": "CHANGES"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/TestFastList.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/TestJNDI.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp/src => src}/test/java/com/zaxxer/hikari/PostgresTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/proxy/ProxyFactory.java"}, {"insertions": 204, "deletions": 135, "lines": 339, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/pool/BaseHikariPool.java => src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/proxy/IHikariConnectionProxy.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/proxy/ClosedConnection.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/util/IConcurrentBagEntry.java"}, {"insertions": 29, "deletions": 3, "lines": 32, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/util/DriverDataSource.java"}, {"insertions": 4, "deletions": 4, "lines": 8, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/proxy/ConnectionProxy.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/HikariJNDIFactory.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/util/ClassLoaderUtils.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/TestProxies.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/TestHibernate.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/TestPropertySetter.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/metrics/CodaHaleMetricsTracker.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/mocks/StubDataSource.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/util/ConcurrentBag.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/resources/propfile2.properties"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/mocks/StubConnection.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp/src => src}/test/java/com/zaxxer/hikari/osgi/OSGiBundleTest.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/util/FastList.java"}, {"insertions": 8, "deletions": 5, "lines": 13, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/pool/PoolUtilities.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/mocks/StubPreparedStatement.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/resources/hibernate.properties"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/pool/HikariMBeanElf.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/mocks/MockDataSource.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/proxy/StatementProxy.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/mocks/StubResultSet.java"}, {"insertions": 841, "deletions": 0, "lines": 841, "filePath": "src/main/java/com/zaxxer/hikari/HikariConfig.java"}, {"insertions": 151, "deletions": 0, "lines": 151, "filePath": "src/test/java/com/zaxxer/hikari/TestMetrics.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/TestConnectionTimeoutRetry.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/TestElf.java"}, {"insertions": 1, "deletions": 3, "lines": 4, "filePath": ".travis.yml"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/mocks/StubStatement.java"}, {"insertions": 0, "deletions": 4, "lines": 4, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/JdbcDriverTest.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/RampUpDown.java"}, {"insertions": 196, "deletions": 26, "lines": 222, "filePath": "pom.xml"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/proxy/CallableStatementProxy.java"}, {"insertions": 12, "deletions": 6, "lines": 18, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/hibernate/HikariConnectionProvider.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/StatementTest.java"}, {"insertions": 11, "deletions": 9, "lines": 20, "filePath": "{hikaricp-common/src/main/java/com/zaxxer/hikari/util => src/main/java/com/zaxxer/hikari/pool}/LeakTask.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/resources/propfile3.properties"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/util/UtilityElf.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/util/DefaultThreadFactory.java"}, {"insertions": 0, "deletions": 41, "lines": 41, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/IConnectionCustomizer.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/mocks/StubDriver.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/util/PropertyBeanSetter.java"}, {"insertions": 0, "deletions": 2, "lines": 2, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/ConnectionStateTest.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/MiscTest.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/TestConnectionCloseBlocking.java"}, {"insertions": 0, "deletions": 52, "lines": 52, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/TestValidation.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/util/IBagStateListener.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/UnwrapTest.java"}, {"insertions": 4, "deletions": 13, "lines": 17, "filePath": "README.md"}, {"insertions": 4, "deletions": 4, "lines": 8, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/metrics/CodahaleHealthChecker.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/resources/propfile1.properties"}, {"insertions": 265, "deletions": 0, "lines": 265, "filePath": "src/main/java/com/zaxxer/hikari/proxy/JavassistProxyFactory.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/mocks/StubBaseConnection.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/HikariConfigMBean.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/TestMBean.java"}, {"insertions": 41, "deletions": 72, "lines": 113, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/HikariDataSource.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/proxy/ResultSetProxy.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/proxy/PreparedStatementProxy.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/pool/PoolBagEntry.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/IsolationTest.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "{hikaricp-common/src => src}/main/java/com/zaxxer/hikari/metrics/MetricsTracker.java"}, {"insertions": 1, "deletions": 13, "lines": 14, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/ShutdownTest.java"}, {"insertions": 2, "deletions": 3, "lines": 5, "filePath": "{hikaricp/src => src}/test/java/com/zaxxer/hikari/TestConcurrentBag.java"}, {"insertions": 0, "deletions": 35, "lines": 35, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/TestConnections.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "{hikaricp-common/src => src}/test/java/com/zaxxer/hikari/ExceptionTest.java"}], "commitDateTime": "2015-03-29 00:31:17", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": []}], "url": "https://github.com/brettwooldridge/HikariCP/issues/286", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 8, "deletions": 9, "lines": 17, "gitFilesChange": 1}, "title": "NoClassDefFoundError after upgrading to 2.3.4", "statsSkippedReason": "", "user": "shawjef3", "changesInPackagesGIT": ["hikaricp-common/src/main/java/com/zaxxer/hikari/pool"], "spoonStatsSummary": {"UPD": 3.0, "spoonMethodsChanged": 4, "TOT": 7.0, "MOV": 2.0, "INS": 1.0, "DEL": 1.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "This is the same as issue [https://github.com/brettwooldridge/HikariCP/issues/172](172), except for version 2.3.4. The problem is fixed if I revert to 2.3.3.\n", "labels": ["bug"]}, {"created": "2015-03-19 10:05:10", "commits": {"3ca1d0b3f1fd173370521f5b39a1956679d67cda": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.util.DriverDataSource"], "closed": "2015-03-20 02:56:21", "filteredCommits": ["3ca1d0b3f1fd173370521f5b39a1956679d67cda"], "commitsDetails": [{"nameRev": "3ca1d0b3f1fd173370521f5b39a1956679d67cda tags/HikariCP-2.3.4~4", "commitMessage": "Fix #285 ensure all properties are Strings when passed to driver's connect method\n", "commitParents": ["46b758902699821724a7e0b3c72e2a2f64d594c6"], "spoonStatsSkippedReason": "", "commitHash": "3ca1d0b3f1fd173370521f5b39a1956679d67cda", "authoredDateTime": "2015-03-20 11:54:58", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 6, "deletions": 1, "lines": 7, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/util/DriverDataSource.java"}], "commitDateTime": "2015-03-20 11:54:58", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 7, "MOV": 2, "INS": 2, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.util.DriverDataSource"}], "spoonFilePath": "DriverDataSource.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/285", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 6, "deletions": 1, "lines": 7, "gitFilesChange": 1}, "title": "NPE at com.zaxxer.hikari.pool.BaseHikariPool.initializeConnections(BaseHikariPool.java:498)", "statsSkippedReason": "", "user": "indyaah", "changesInPackagesGIT": ["hikaricp-common/src/main/java/com/zaxxer/hikari/util"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 7, "MOV": 2, "INS": 2, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Environment : \n\nHikari (for java6) 2.3.2\nOracle JDK 8u40\nSpring 4.1.5.RELEASE\nHibernate 4.3.8.Final\nMysql Connector 5.1.34\n\nThe problem was encountered while upgrading hikari from 2.0.1 to 2.3.2\nIf I stay on 2.0.1 everything works fine.\n\n**EDIT : Full stack trace**\naused by: java.lang.NullPointerException\n    at java.util.Hashtable.put(Hashtable.java:459)\n    at java.util.Properties.setProperty(Properties.java:166)\n    at com.mysql.jdbc.NonRegisteringDriver.parseURL(NonRegisteringDriver.java:805)\n    at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:316)\n    at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:57)\n    at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:63)\n    at com.zaxxer.hikari.pool.BaseHikariPool.addConnection(BaseHikariPool.java:396)\n    at com.zaxxer.hikari.pool.BaseHikariPool.initializeConnections(BaseHikariPool.java:498)\n    ... 67 more\n", "labels": ["bug"]}, {"created": "2015-03-10 09:39:22", "commits": {"f82a5afe2da1fbfc49c7f1023fffca67d09356c1": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.BaseHikariPool.logPoolState(java.lang.String[])", "com.zaxxer.hikari.pool.BaseHikariPool", "com.zaxxer.hikari.pool.BaseHikariPool.releaseConnection(com.zaxxer.hikari.pool.PoolBagEntry)", "com.zaxxer.hikari.pool.BaseHikariPool.shutdown()", "com.zaxxer.hikari.pool.BaseHikariPool.fillPool()", "com.zaxxer.hikari.pool.BaseHikariPool.addConnection()"], "closed": "2015-03-14 11:39:25", "filteredCommits": ["f82a5afe2da1fbfc49c7f1023fffca67d09356c1"], "commitsDetails": [{"nameRev": "f82a5afe2da1fbfc49c7f1023fffca67d09356c1 tags/HikariCP-2.3.4~9", "commitMessage": "Fixes #280 make logger non-static and use getClass()\n", "commitParents": ["38e4ac8deeaad891e9561b6f1d73553e16992802"], "spoonStatsSkippedReason": "", "commitHash": "f82a5afe2da1fbfc49c7f1023fffca67d09356c1", "authoredDateTime": "2015-03-14 20:39:20", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/pool/BaseHikariPool.java"}], "commitDateTime": "2015-03-14 20:39:20", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.BaseHikariPool.addConnection()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.BaseHikariPool.logPoolState(java.lang.String[])"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.BaseHikariPool"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.BaseHikariPool.shutdown()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.BaseHikariPool.fillPool()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.BaseHikariPool.releaseConnection(com.zaxxer.hikari.pool.PoolBagEntry)"}], "spoonFilePath": "BaseHikariPool.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/280", "ttf": 4.000277777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "log level is not respected?", "statsSkippedReason": "", "user": "goekay", "changesInPackagesGIT": ["hikaricp-common/src/main/java/com/zaxxer/hikari/pool"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 6, "TOT": 9, "MOV": 0, "INS": 7, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi,\nI was happily using the version 2.2.5 of the HikariCP-java6 artifact with the log level set to INFO. I'm using Slf4j with log4j. Then, I came upon a new version (2.3.3) and wanted to switch to it. But the pool clean up stats seem to be logged with the DEBUG level, even though I did not change any logging setting. Logger name I'm using is \"com.zaxxer.hikari\".\n", "labels": ["bug"]}, {"created": "2015-03-03 14:56:45", "commits": {"f7df7cd0b0a6455c1678350bb5f14050fcaa0d47": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.BaseHikariPool", "com.zaxxer.hikari.pool.GlobalPoolLock"], "closed": "2015-03-04 14:37:00", "filteredCommits": ["f7df7cd0b0a6455c1678350bb5f14050fcaa0d47"], "commitsDetails": [{"nameRev": "f7df7cd0b0a6455c1678350bb5f14050fcaa0d47 tags/HikariCP-2.3.4~12", "commitMessage": "Fixes #275 make global lock non-static\n", "commitParents": ["e9e7f05c4200382095c7bd4a480071fa7cd1579b"], "spoonStatsSkippedReason": "", "commitHash": "f7df7cd0b0a6455c1678350bb5f14050fcaa0d47", "authoredDateTime": "2015-03-04 23:36:55", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/pool/BaseHikariPool.java"}, {"insertions": 3, "deletions": 5, "lines": 8, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/pool/GlobalPoolLock.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp-common/pom.xml"}], "commitDateTime": "2015-03-04 23:36:55", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.BaseHikariPool"}], "spoonFilePath": "BaseHikariPool.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 4, "spoonMethodName": "com.zaxxer.hikari.pool.GlobalPoolLock"}], "spoonFilePath": "GlobalPoolLock.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/275", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 4, "deletions": 6, "lines": 10, "gitFilesChange": 2}, "title": "Fail to suspend 2 pools", "statsSkippedReason": "", "user": "yanivoren", "changesInPackagesGIT": ["hikaricp-common/src/main/java/com/zaxxer/hikari/pool"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 6, "MOV": 0, "INS": 1, "DEL": 5, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "When trying to suspend 2 pools, the suspend is stuck on the 2nd suspend command.\n\nNotes:\nBoth pools access the same database.\n\njetty-web.xml\n\n`<New id=\"mainDS\" class=\"org.eclipse.jetty.plus.jndi.Resource\">`\n        `<Arg>jdbc/mainDataSource</Arg>`\n        `<Arg>`\n            `<New class=\"com.zaxxer.hikari.HikariDataSource\">`\n              `<Arg>`\n                `<New class=\"com.zaxxer.hikari.HikariConfig\">`\n                    `<Set name=\"dataSourceClassName\">org.postgresql.ds.PGSimpleDataSource</Set>`\n                    `<Set name=\"username\"></Set>`\n                    `<Set name=\"password\"></Set>`\n                    `<Set name=\"maximumPoolSize\">30</Set>`\n                    `<Set name=\"allowPoolSuspension\">true</Set>`\n                    `<Set name=\"registerMbeans\">true</Set>`\n                    `<Set name=\"poolName\">MainPool</Set>`\n                    `<Call name=\"addDataSourceProperty\">`\n                        `<Arg>url</Arg>`\n                        `<Arg>jdbc:postgresql://localhost/db</Arg>`\n                    `</Call>`\n                `</New>`\n              `</Arg>`\n            `</New>`\n        `</Arg>`\n    `</New>`\n\n```\n`<!-- For Quartz job execution. -->`\n\n`<New id=\"QuartzDS\" class=\"org.eclipse.jetty.plus.jndi.Resource\">`\n    `<Arg>jdbc/QuartzDataSource</Arg>`\n    `<Arg>`\n        `<New class=\"com.zaxxer.hikari.HikariDataSource\">`\n          `<Arg>`\n            `<New class=\"com.zaxxer.hikari.HikariConfig\">`\n                `<Set name=\"dataSourceClassName\">org.postgresql.ds.PGSimpleDataSource</Set>`\n                `<Set name=\"username\"></Set>`\n                `<Set name=\"password\"></Set>`\n                `<Set name=\"maximumPoolSize\">30</Set>`\n                `<Set name=\"allowPoolSuspension\">true</Set>`\n                `<Set name=\"registerMbeans\">true</Set>`\n                `<Set name=\"poolName\">QuartzPool</Set>`\n                `<Call name=\"addDataSourceProperty\">`\n                    `<Arg>url</Arg>`\n                    `<Arg>jdbc:postgresql://localhost/db</Arg>`\n                `</Call>`\n            `</New>`\n          `</Arg>`\n        `</New>`\n    `</Arg>`\n`</New>`\n```\n", "labels": ["bug"]}, {"created": "2015-03-03 08:48:20", "user": "tedeling", "body": "SessionFactoryUtils in Spring 4 calls the unwrap of a ConnectionProvider, expecting the connection provider to unwrap to a DataSource with `cp.unwrap(DataSource.class);`.  The unwrap method in HikariConnectionProvider just casts to itself, throwing a ClassCastException when trying to unwrap to a DataSource.\n", "closed": "2015-03-04 13:56:31", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/273", "ttf": 1.0002777777777778, "commits": {}, "labels": ["bug"], "title": "Unwrap in HikariConnectionProvider fails to unwrap to DataSource"}, {"created": "2015-02-24 07:35:30", "commits": {"6833c25ab64c09f4524733c05b57ad8c635cc329": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "a310df95d71c0e3248efb9322f6a62a19590402d": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.proxy.ConnectionProxy.checkException(java.sql.SQLException)"], "closed": "2015-02-24 15:11:59", "filteredCommits": ["a310df95d71c0e3248efb9322f6a62a19590402d"], "commitsDetails": [{"nameRev": "6833c25ab64c09f4524733c05b57ad8c635cc329 tags/HikariCP-2.3.3~2", "commitMessage": "Merge branch '2.3.x' of github.com-brettwooldridge:brettwooldridge/HikariCP into 2.3.x\n\n# By Brett Wooldridge (1) and johnon (1)\n* '2.3.x' of github.com-brettwooldridge:brettwooldridge/HikariCP:\n  Fix #269 Guard against drivers that construct an SQLException where the 'cause' is self-referential.  Hopefully the cycle is not multi-layers deep, because this check will only guard against one \"loop\".\n  Allows Hikari to look up an arbitary JNDI resource name for the metric registry\n", "commitParents": ["9804b8602eb422622532507f385606f9f2d54a3f", "a310df95d71c0e3248efb9322f6a62a19590402d"], "spoonStatsSkippedReason": "", "commitHash": "6833c25ab64c09f4524733c05b57ad8c635cc329", "authoredDateTime": "2015-03-03 12:11:46", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/proxy/ConnectionProxy.java"}, {"insertions": 2, "deletions": 5, "lines": 7, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/AbstractHikariConfig.java"}], "commitDateTime": "2015-03-03 12:11:46", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.proxy.ConnectionProxy.checkException(java.sql.SQLException)"}], "spoonFilePath": "ConnectionProxy.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.AbstractHikariConfig.setHealthCheckRegistry(java.lang.Object)"}, {"UPD": 1, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.AbstractHikariConfig.setMetricRegistry(java.lang.Object)"}], "spoonFilePath": "AbstractHikariConfig.java"}]}, {"nameRev": "a310df95d71c0e3248efb9322f6a62a19590402d tags/HikariCP-2.3.3~2^2", "commitMessage": "Fix #269 Guard against drivers that construct an SQLException where the 'cause' is self-referential.  Hopefully the cycle is not multi-layers deep, because this check will only guard against one \"loop\".\n", "commitParents": ["953a5de33c4722e98297caa0b51cf7129f61c4af"], "spoonStatsSkippedReason": "", "commitHash": "a310df95d71c0e3248efb9322f6a62a19590402d", "authoredDateTime": "2015-02-25 00:11:54", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/proxy/ConnectionProxy.java"}], "commitDateTime": "2015-02-25 00:11:54", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.proxy.ConnectionProxy.checkException(java.sql.SQLException)"}], "spoonFilePath": "ConnectionProxy.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/269", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "StackOverflowError in ConnectionProxy", "statsSkippedReason": "", "user": "gfaerie", "changesInPackagesGIT": ["hikaricp-common/src/main/java/com/zaxxer/hikari/proxy"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 1, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hello\n\nI have discovered what might be a cornercase bug. During a loadtest, as one of the databases ran out of disc space we encountered the following exception:\n\nava.lang.StackOverflowError\n        at com.zaxxer.hikari.proxy.ConnectionProxy.checkException(ConnectionProxy.java:104)\n        at com.zaxxer.hikari.proxy.ConnectionProxy.checkException(ConnectionProxy.java:113)\n        at com.zaxxer.hikari.proxy.ConnectionProxy.checkException(ConnectionProxy.java:113)\n        at com.zaxxer.hikari.proxy.ConnectionProxy.checkException(ConnectionProxy.java:113)\n        at com.zaxxer.hikari.proxy.ConnectionProxy.checkException(ConnectionProxy.java:113)\n....\n\nLooking at the code it seems you got a bad exception (with itself as the next exception or with a closed loop of exceptions ?). It would be good if the code handled this in a better way though. checkException might for example only allow a recursive call so many times.  \n\nWe were using:\nPostgres 9.3.5\n9.3-1101-jdbc41 postgres driver\nHikari CP 2.3.2\nJava 1.8.0.31\nUbuntu 14.04\n\nWould gladly contribute with a PR if you want. \n", "labels": ["bug"]}, {"created": "2015-02-12 03:40:13", "user": "hrchu", "body": "In https://github.com/brettwooldridge/HikariCP/wiki/Spring-Hibernate ,\n\nThe config below does not work:\n\n```\n<!-- HikariCP configuration -->\n<bean id=\"mainDataSource\" class=\"com.zaxxer.hikari.HikariDataSource\" destroy-method=\"shutdown\">\n    <property name=\"dataSourceClassName\" value=\"com.mysql.jdbc.jdbc2.optional.MysqlDataSource\" />\n    <property name=\"connectionTestQuery\" value=\"SELECT 1\" />\n    <property name=\"dataSource.user\" value=\"${jdbc.username}\" />\n    <property name=\"dataSource.password\" value=\"${jdbc.password}\" />\n    <property name=\"dataSource.url\" value=\"${jdbc.url}\" />\n</bean>\n```\n\nI use following config instead:\n\n```\n<bean id=\"hikariConfig\" class=\"com.zaxxer.hikari.HikariConfig\">\n    <property name=\"poolName\" value=\"springHikariCP\" />\n    <property name=\"connectionTestQuery\" value=\"SELECT 1\" />\n    <property name=\"dataSourceClassName\"       value=\"com.mysql.jdbc.jdbc2.optional.MysqlDataSource\" />\n    <property name=\"dataSourceProperties\">\n        <props>\n            <prop key=\"url\">${jdbc.url}</prop>\n            <prop key=\"user\">${jdbc.username}</prop>\n            <prop key=\"password\">${jdbc.password}</prop>\n        </props>\n    </property>\n</bean>\n\n<bean id=\"dataSource\" class=\"com.zaxxer.hikari.HikariDataSource\" destroy-method=\"close\">\n    <constructor-arg ref=\"hikariConfig\" />\n</bean>\n```\n", "closed": "2015-02-12 14:27:21", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/262", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "Spring-Hibernate config example in wiki does not work"}, {"created": "2015-01-29 10:33:30", "commits": {"dd87bbde86c3a1b944aa661bf6494bb8ee46d04e": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.PoolUtilities.setNetworkTimeout(java.sql.Connection,long)", "com.zaxxer.hikari.pool.PoolUtilities.SynchronousExecutor.execute(java.lang.Runnable)", "com.zaxxer.hikari.pool.PoolUtilities.quietlyCloseConnection(java.sql.Connection)"], "closed": "2015-01-29 12:01:05", "filteredCommits": ["dd87bbde86c3a1b944aa661bf6494bb8ee46d04e"], "commitsDetails": [{"nameRev": "dd87bbde86c3a1b944aa661bf6494bb8ee46d04e tags/HikariCP-2.3.2~4", "commitMessage": "fixes #247 add additional check to quietlyCloseConnection(), demote some logging to debug so as not to freakout users\n", "commitParents": ["885b807ebb32d71fe6e980d9ba08b147b69f72af"], "spoonStatsSkippedReason": "", "commitHash": "dd87bbde86c3a1b944aa661bf6494bb8ee46d04e", "authoredDateTime": "2015-01-29 21:00:48", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 8, "deletions": 8, "lines": 16, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/pool/PoolUtilities.java"}], "commitDateTime": "2015-01-29 21:00:48", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.PoolUtilities.setNetworkTimeout(java.sql.Connection,long)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.PoolUtilities.SynchronousExecutor.execute(java.lang.Runnable)"}, {"UPD": 0, "TOT": 6, "MOV": 4, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.PoolUtilities.quietlyCloseConnection(java.sql.Connection)"}], "spoonFilePath": "PoolUtilities.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/247", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 8, "deletions": 8, "lines": 16, "gitFilesChange": 1}, "title": "PoolUtilities.quitelyCloseConnection setNetworkTimeout", "statsSkippedReason": "", "user": "willemvd", "changesInPackagesGIT": ["hikaricp-common/src/main/java/com/zaxxer/hikari/pool"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 3, "TOT": 8, "MOV": 4, "INS": 1, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "We are using HikariCP 2.3.1 together with the jt400 driver to connect to an AS400 machine.\nWhen a connection is closed the PoolUtilities.quitelyCloseConnection is calling the setNetworkTimeout, but this fails because the connection is already closed.\nWhy is this method called when closing a connection and should this not be removed and instead just only close the connection?\n\nLots of log is generated because for each connection it is generating:\n11:24:53,895 | WARN  | AS400Datasource) | PoolUtilities                    | 311 - com.zaxxer.HikariCP-java6 - 2.3.1 | Unable to reset network timeout for connection <machine name is removed> in pool AS400Datasource\njava.sql.SQLNonTransientConnectionException: The connection does not exist.\n    at com.ibm.as400.access.JDError.createSQLExceptionSubClass(JDError.java:826)[273:JT400:7.8.0]\n    at com.ibm.as400.access.JDError.throwSQLException(JDError.java:404)[273:JT400:7.8.0]\n    at com.ibm.as400.access.AS400JDBCConnection.checkOpen(AS400JDBCConnection.java:460)[273:JT400:7.8.0]\n    at com.ibm.as400.access.AS400JDBCConnection.setNetworkTimeout(AS400JDBCConnection.java:5581)[273:JT400:7.8.0]\n    at com.zaxxer.hikari.pool.PoolUtilities.setNetworkTimeout(PoolUtilities.java:218)[311:com.zaxxer.HikariCP-java6:2.3.1]\n    at com.zaxxer.hikari.pool.PoolUtilities.quietlyCloseConnection(PoolUtilities.java:53)[311:com.zaxxer.HikariCP-java6:2.3.1]\n    at com.zaxxer.hikari.pool.HikariPool$1.run(HikariPool.java:128)[311:com.zaxxer.HikariCP-java6:2.3.1]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)[:1.7.0_67]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)[:1.7.0_67]\n    at java.lang.Thread.run(Thread.java:745)[:1.7.0_67]\n", "labels": ["bug"]}, {"created": "2015-01-22 09:36:37", "commits": {"c24e6d56bbf79d4a6315199b1193eff3498c0d7b": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "8af2bc551af8f5ca6d36318b9afc2f94b917129b": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 2, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.PoolUtilities.getAndSetNetworkTimeout(java.sql.Connection,long)", "com.zaxxer.hikari.pool.PoolUtilities.setNetworkTimeout(java.sql.Connection,long)", "com.zaxxer.hikari.pool.PoolUtilities", "com.zaxxer.hikari.pool.PoolUtilities.createNetworkTimeoutExecutor(javax.sql.DataSource,java.lang.String,java.lang.String)", "com.zaxxer.hikari.pool.PoolUtilities.SynchronousExecutor", "com.zaxxer.hikari.pool.PoolUtilities.initializeDataSource(java.lang.String,javax.sql.DataSource,java.util.Properties,java.lang.String,java.lang.String,java.lang.String)"], "closed": "2015-01-24 06:33:25", "filteredCommits": ["8af2bc551af8f5ca6d36318b9afc2f94b917129b", "c24e6d56bbf79d4a6315199b1193eff3498c0d7b"], "commitsDetails": [{"nameRev": "c24e6d56bbf79d4a6315199b1193eff3498c0d7b tags/HikariCP-2.3.1~10", "commitMessage": "Fix #236 use a synchronous Executor to execute setNetworkConnection() to avoid race conditions.\n", "commitParents": ["2eefb6d4cd753f786988ace3c84c95865ce94411"], "spoonStatsSkippedReason": "", "commitHash": "c24e6d56bbf79d4a6315199b1193eff3498c0d7b", "authoredDateTime": "2015-01-23 10:10:44", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 20, "deletions": 6, "lines": 26, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/pool/PoolUtilities.java"}], "commitDateTime": "2015-01-23 10:10:44", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.PoolUtilities.getAndSetNetworkTimeout(java.sql.Connection,long)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.PoolUtilities.setNetworkTimeout(java.sql.Connection,long)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.PoolUtilities.SynchronousExecutor"}, {"UPD": 3, "TOT": 5, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.PoolUtilities"}], "spoonFilePath": "PoolUtilities.java"}]}, {"nameRev": "8af2bc551af8f5ca6d36318b9afc2f94b917129b tags/HikariCP-2.3.1~8", "commitMessage": "Fix #236 via workaround for MySQL issue http://bugs.mysql.com/bug.php?id=75615\n", "commitParents": ["34e58dfb2b05a3eab75b1f3585b89485191a086e"], "spoonStatsSkippedReason": "", "commitHash": "8af2bc551af8f5ca6d36318b9afc2f94b917129b", "authoredDateTime": "2015-01-24 15:15:49", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 34, "deletions": 11, "lines": 45, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/pool/PoolUtilities.java"}], "commitDateTime": "2015-01-24 15:15:49", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.PoolUtilities.getAndSetNetworkTimeout(java.sql.Connection,long)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.PoolUtilities.setNetworkTimeout(java.sql.Connection,long)"}, {"UPD": 1, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.pool.PoolUtilities"}, {"UPD": 0, "TOT": 3, "MOV": 2, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.PoolUtilities.initializeDataSource(java.lang.String,javax.sql.DataSource,java.util.Properties,java.lang.String,java.lang.String,java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.PoolUtilities.createNetworkTimeoutExecutor(javax.sql.DataSource,java.lang.String,java.lang.String)"}], "spoonFilePath": "PoolUtilities.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/236", "ttf": 1.0002777777777778, "gitStatsSummary": {"insertions": 54, "deletions": 17, "lines": 71, "gitFilesChange": 1}, "title": "NullPointerException in utility thread, only appearing on console", "statsSkippedReason": "", "user": "ghost", "changesInPackagesGIT": ["hikaricp-common/src/main/java/com/zaxxer/hikari/pool"], "spoonStatsSummary": {"UPD": 8, "spoonMethodsChanged": 6, "TOT": 17, "MOV": 2, "INS": 4, "DEL": 3, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I am creating this for the one from the google group https://groups.google.com/forum/#!topic/hikari-cp/RgS7J0Xs05U\n\nquote:\n\nI'm getting this funny exceptions. It only appears in my console, not on my logs where HikariCP messages appear.\nIt seems to appear every few minutes, maybe after inactivity.\n\nend quote\n\nThe stacktraces seem to appear without anything happening in particular, while the various dev/testing web apps where HikariCP is used still function as normal so far but the connection may possible fail in the middle of a long series of database operations when this happens. I am not really sure.\n\nException in thread \"HikariCP utility thread (pool HikariPool-0)\" java.lang.NullPointerException\n    at com.mysql.jdbc.MysqlIO.setSocketTimeout(MysqlIO.java:4890)\n    at com.mysql.jdbc.ConnectionImpl$12.run(ConnectionImpl.java:5540)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nException in thread \"HikariCP utility thread (pool HikariPool-0)\" java.lang.NullPointerException\n    at com.mysql.jdbc.MysqlIO.setSocketTimeout(MysqlIO.java:4890)\n    at com.mysql.jdbc.ConnectionImpl$12.run(ConnectionImpl.java:5540)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nException in thread \"HikariCP utility thread (pool HikariPool-0)\" java.lang.NullPointerException\n    at com.mysql.jdbc.MysqlIO.setSocketTimeout(MysqlIO.java:4890)\n    at com.mysql.jdbc.ConnectionImpl$12.run(ConnectionImpl.java:5540)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n", "labels": ["bug"]}, {"created": "2015-01-21 01:39:04", "user": "chaeyk", "body": "When database is not alive, HikariDataSource constructor throws RuntimeException\nbecause HikariPool constructor throws RuntimeException.\n\n``` java\n   public HikariPool(HikariConfig configuration, String username, String password)\n   {\n      ...\n\n      addConnectionExecutor = createThreadPoolExecutor(configuration.getMaximumPoolSize(), \"HikariCP connection filler (pool \" + configuration.getPoolName() + \")\", configuration.getThreadFactory(), new ThreadPoolExecutor.DiscardPolicy());\n      closeConnectionExecutor = createThreadPoolExecutor(4, \"HikariCP connection closer (pool \" + configuration.getPoolName() + \")\", configuration.getThreadFactory(), new ThreadPoolExecutor.CallerRunsPolicy());\n\n      long delayPeriod = Long.getLong(\"com.zaxxer.hikari.housekeeping.periodMs\", TimeUnit.SECONDS.toMillis(30L));\n      houseKeepingExecutorService = new ScheduledThreadPoolExecutor(1, configuration.getThreadFactory() != null ? configuration.getThreadFactory() : new DefaultThreadFactory(\"Hikari Housekeeping Timer (pool \" + configuration.getPoolName() + \")\", true));\n      houseKeepingExecutorService.setRemoveOnCancelPolicy(true);\n      houseKeepingExecutorService.scheduleAtFixedRate(new HouseKeeper(), delayPeriod, delayPeriod, TimeUnit.MILLISECONDS);\n\n      fillPool(); // this throws RuntimeException\n   }\n```\n\nwhen fillPool() failed, ThreadPoolExecutors continue to run, and it never be cleaned up.\nI think code should be fixed like this.\n\n``` java\ntry {\n    fillPool();\n} catch (RuntimeException e) {\n    addConnectionExecutor.shutdownNow();\n    closeConnectionExecutor.shutdownNow();\n    houseKeepingExecutorService.shutdownNow();\n    throw e;\n}\n```\n\nor ... constructor should not throw exception when database is down.\nconnection can be filled by housekeepingexecutor when db is online.\n\nI tested with jdk1.8.0_25\n", "closed": "2015-01-24 07:01:54", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/233", "ttf": 3.000277777777778, "commits": {}, "labels": ["bug"], "title": "thread leak when database down"}, {"created": "2015-01-19 13:42:09", "user": "simeonmalchev", "body": "Hi Brett,\n\nI'm the author of Vibur DBCP and I'm opening this issue with regards to your post \"_Bad Behavior: Handling Database Down_\". I have 3 main comments on it:\n\n1) There is no defined standard for DataSource.getConnection() timeouts, each pool implements them in its own way.\n2) How to configure properly the connection validation frequency and timeouts for Vibur DBCP.\n\u200b3) The amount of JDBC timeouts which may occur during the execution of the internal to the pool JDBC calls is only \u200ba very small part of the total amount of JDBC timeouts which may occur during an application lifecycle.\n\nI will go in details on each of these points below:\n\n1) There is no defined standard for DataSource.getConnection() timeouts, each pool implements them in its own way.\n\nSaying that in the context of someJDBCConnectionPool.getConnection(timeout) \"_a connection timeout is a contract between you and the pool; your application should get a connection within the specified time, or get an exception_\" - is incorrect. The original JDBC API spec doesn't say anything about any timeouts when it comes to creating or getting JDBC connections. If there is any contract for that, the concrete terms of this contract will be defined entirely on a pool-by-pool basis. In the Vibur DBCP case, the documentation for connectionTimeoutInMs can be seen [here](http://www.vibur.org/#connection-timeouts).\n\n2) How to configure \u200bproperly \u200bthe connection validation frequency and timeouts for Vibur DBCP.\n\nI believe that the focus of your testing has been to verify whether the chosen connection pools properly apply Java socket read timeouts when executing various specific to the pool implementation JDBC calls. It appears that HikariCP uses the Connection.setNetworkTimeout() method to control these timeouts. Vibur DBCP doesn't currently use this method, however this method is not the only way how to control these socket timeouts.\n\n\u200bThere are 2 different ways how to configure the Vibur DBCP connection validation frequency and socket read timeouts:\n\n\u200b2.\u200b1) Use Connection.isValid() for connection validation and timeouts control.\n\n// Add the below line to the Vibur config. This will cause each connection to be always \n// validated disregards of how recently it has been used:\nvibur.setConnectionIdleLimitInSeconds(0);\n// Comment out the line below. This will cause Vibur DBCP to issue a call to Connection.isValid()\n// for connection validation purposes, which is the Vibur default behaviour\u200b:\n// vibur.setTestConnectionQuery(\"SELECT 1\");\n\nThe implementation of Connection.isValid(timeout) in the MySQL Connector/J driver (and likely in all other recent and solid JDBC drivers) sets the socket read timeout to the given timeout value. In the Vibur DBCP case, this timeout value is not currently configurable, and is hardcoded to 5 seconds (this may change in future).\n\nRegarding the connection validation frequency, Vibur has its connectionIdleLimitInSeconds property set by default to 15 seconds. This is an intentional choice, as I felt that validating the connection before every single use will have much more penalizing effect on the using it application, rather than contributing any good. \u200bIf I haven't misunderstood the HikariCP source, it employs a very similar idea as it also doesn't validate all recently used connections, I'm speaking about the ALIVE_BYPASS_WINDOW property which has a default value of 1 second.\n\n2\u200b.2\u200b) Use arbitrary SQL query for connection validation but add \"?socketTimeout=5000\" to the JdbcUrl connection string.\n\n// Firstly, \u200bas before, \u200b\u200ba\u200bdd the below line\u200b:\nvibur.setConnectionIdleLimitInSeconds(0);\n\u200b// Add \"?socketTimeout=5000\" to the JdbcUrl connection string:\nvibur.setJdbcUrl(\"jdbc:mysql://192.168.0.114/test?socketTimeout=5000\");\n\nAs already explained in the CUBRID's article to which your original post links to, and for the reasons which I will outline below, the explicit configuration of the socket read timeout at the JDBC driver level is of **utmost importance**. Note that similar JdbcUrl change should cause all tested JDBC connection pools to properly timeout their validation queries, not only Vibur DBCP. However, the importance of this explicit socket timeout configuration is much broader\u200b, because\u200b:\n\n\u200b3) The amount of JDBC timeouts which may occur during the execution of the internal to the pool JDBC calls is only \u200ba very small part of the total amount of JDBC timeouts which may occur during an application lifecycle.\n\nA typical busy web application will usually execute many thousands of custom written SQL queries each hour, plus the mentioned above and specific to the pool implementation JDBC calls. These internal to the pool JDBC calls, will most likely take less than 1% of the total application time spent in JDBC calls, and the other 99% of the time will be spent in execution of the application's custom SQL queries. If the application hasn't properly configured the socket read timeout in the JdbcUrl connection string and if a network connection glitch occurs, then the application is risking some of its threads to face very long timeouts, and these timeouts will happen not during the execution of the specific to the pool JDBC calls but during the execution of the application's own SQL queries.\n\nSimeon.\n", "closed": "2017-02-28 07:09:41", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/230", "ttf": 770.0002777777778, "commits": {}, "labels": ["bug", "enhancement"], "title": "Comments on \"Bad Behavior: Handling Database Down\""}, {"created": "2015-01-19 12:58:27", "commits": {"d4e426ba48d84b6e51d379ca7dab22eccf6710af": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}, "53fe3b5b51ffa3e09b808ff35c07a6ae7656b164": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.BaseHikariPool.shutdown()", "com.zaxxer.hikari.pool.BaseHikariPool.addConnection()"], "closed": "2015-05-13 00:31:39", "filteredCommits": ["d4e426ba48d84b6e51d379ca7dab22eccf6710af"], "commitsDetails": [{"nameRev": "d4e426ba48d84b6e51d379ca7dab22eccf6710af tags/HikariCP-2.3.8~3", "commitMessage": "Fixes #229 suppress debug log at shutdown\n", "commitParents": ["641b90350ee0c866fd41c1f2b5bcfd1640e9d4af"], "spoonStatsSkippedReason": "", "commitHash": "d4e426ba48d84b6e51d379ca7dab22eccf6710af", "authoredDateTime": "2015-05-13 09:29:48", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 5, "deletions": 3, "lines": 8, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/pool/BaseHikariPool.java"}, {"insertions": 23, "deletions": 0, "lines": 23, "filePath": "hikaricp-common/src/test/java/com/zaxxer/hikari/ShutdownTest.java"}], "commitDateTime": "2015-05-13 09:29:48", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.ShutdownTest.testShutdownDuringInit()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.ShutdownTest.testThreadedShutdown()"}], "spoonFilePath": "ShutdownTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.BaseHikariPool.shutdown()"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.BaseHikariPool.addConnection()"}], "spoonFilePath": "BaseHikariPool.java"}]}, {"nameRev": "53fe3b5b51ffa3e09b808ff35c07a6ae7656b164 tags/HikariCP-2.4.0-rc1~35", "commitMessage": "Fixes #229 suppress debug log at shutdown\n", "commitParents": ["be60783476987463dc0bfd0aa3eab6684a8200a3"], "spoonStatsSkippedReason": "", "commitHash": "53fe3b5b51ffa3e09b808ff35c07a6ae7656b164", "authoredDateTime": "2015-05-13 00:04:01", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 1, "lines": 4, "filePath": "src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}], "commitDateTime": "2015-05-13 00:04:01", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.addConnection()"}], "spoonFilePath": "HikariPool.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/229", "ttf": 113.00027777777778, "gitStatsSummary": {"insertions": 5, "deletions": 3, "lines": 8, "gitFilesChange": 1}, "title": "Race condition on Shutdown?", "statsSkippedReason": "", "user": "Adhara3", "changesInPackagesGIT": ["hikaricp-common/src/main/java/com/zaxxer/hikari/pool"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 2, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi,\n\nif I shutdown Hikari before the Pool has been fully initialized (I guess before all the connections have been opened) sometimes I get an IllegalSateException\n\n`2015.01.19 13:47:44,793 CET [main] DEBUG HikariPool - Before shutdown pool stats HikariPool-0 (total=8, inUse=0, avail=8, waiting=0)\n2015.01.19 13:47:44,933 CET [HikariCP connection filler (pool HikariPool-0)] DEBUG HikariPool - Connection attempt to database HikariPool-0 failed: ConcurrentBag has been closed\njava.lang.IllegalStateException: ConcurrentBag has been closed\n    at com.zaxxer.hikari.util.ConcurrentBag.add(ConcurrentBag.java:184)\n    at com.zaxxer.hikari.pool.HikariPool.addConnection(HikariPool.java:436)\n    at com.zaxxer.hikari.pool.HikariPool.access$400(HikariPool.java:73)\n    at com.zaxxer.hikari.pool.HikariPool$1AddConnection.run(HikariPool.java:315)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:262)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:724)\n2015.01.19 13:47:45,41 CET [main] DEBUG HikariPool - After shutdown pool stats HikariPool-0 (total=0, inUse=0, avail=0, waiting=0)`\n\nNote the before shutting down total being 8 while my setting is `config.setMaximumPoolSize(10);`\nMaybe the `shutdown()` command does not stop the `addConnection()`?\n\nAnother question (probably unrelated): I have a project organized this way:\n- war\n  - jar1 accessing Oracle DB\n  - jar2 accessing MSSQL DB\n\nOn startup but jar1 & 2 try to create their own Pool (they create a new config and create a new pool). In the classpath they share the same Hikari Jar. Is that supposed to work? Because I get strange errors!\n\nThanks\nAndrea\n", "labels": ["bug"]}, {"created": "2015-01-12 15:01:58", "commits": {"eadf8d1911da73bed9f96e5fa0d9feae11058328": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}, "1e055c64d1fa156b5b94f69566df05d626601afe": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 0, "closed": "2015-05-13 00:31:39", "filteredCommits": ["eadf8d1911da73bed9f96e5fa0d9feae11058328"], "commitsDetails": [{"nameRev": "eadf8d1911da73bed9f96e5fa0d9feae11058328 tags/HikariCP-2.3.8~2", "commitMessage": "Fixes #227 Rollback to Javassist 3.18.2-GA\n", "commitParents": ["d4e426ba48d84b6e51d379ca7dab22eccf6710af"], "spoonStatsSkippedReason": "", "commitHash": "eadf8d1911da73bed9f96e5fa0d9feae11058328", "authoredDateTime": "2015-05-13 09:30:44", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "pom.xml"}], "commitDateTime": "2015-05-13 09:30:44", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": []}, {"nameRev": "1e055c64d1fa156b5b94f69566df05d626601afe tags/HikariCP-2.4.0-rc1~38", "commitMessage": "Fixes #227 Rollback to Javassist 3.18.2-GA\n", "commitParents": ["f3aee853c0ada6932f0ddba0d1d25ecb61b273b6"], "spoonStatsSkippedReason": "", "commitHash": "1e055c64d1fa156b5b94f69566df05d626601afe", "authoredDateTime": "2015-05-12 10:37:03", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "pom.xml"}], "commitDateTime": "2015-05-12 10:37:03", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": []}], "url": "https://github.com/brettwooldridge/HikariCP/issues/227", "ttf": 120.00027777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Javassist v3.19.0-GA 19 Incompatibility", "statsSkippedReason": "", "user": "dharrigan", "changesInPackagesGIT": [], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Konichiwa Brett! Hope you are well.\n\nJava 8u25\n\nI've come across an issue using the just released Javassist v3.19.0-GA. It doesn't happen with v3.18.2-GA.\n\n```\njava.lang.VerifyError: Illegal type at constant pool entry 392 in class com.zaxxer.hikari.proxy.PreparedStatementJavassistProxy\nException Details:\n  Location:\n    com/zaxxer/hikari/proxy/PreparedStatementJavassistProxy.getLargeUpdateCount()J @1: invokespecial\n  Reason:\n    Constant pool index 392 is invalid\n  Bytecode:\n    0x0000000: 2ab7 0188 ad4c 2a2b b600 1bbf          \n  Exception Handler Table:\n    bci [0, 5] => handler: 5\n  Stackmap Table:\n    same_locals_1_stack_item_frame(@5,Object[#17])\n\n    at com.zaxxer.hikari.proxy.ProxyFactory.getProxyPreparedStatement(ProxyFactory.java) ~[HikariCP-2.3.0-rc4.jar:na]\n    at com.zaxxer.hikari.proxy.ConnectionProxy.prepareStatement(ConnectionProxy.java:263) ~[HikariCP-2.3.0-rc4.jar:na]\n    at com.zaxxer.hikari.proxy.ConnectionJavassistProxy.prepareStatement(ConnectionJavassistProxy.java) ~[HikariCP-2.3.0-rc4.jar:na]\n    at org.flywaydb.core.internal.dbsupport.JdbcTemplate.queryForString(JdbcTemplate.java:181) ~[flyway-core-3.1.jar:na]\n    at org.flywaydb.core.internal.dbsupport.postgresql.PostgreSQLDbSupport.doGetCurrentSchema(PostgreSQLDbSupport.java:55) ~[flyway-core-3.1.jar:na]\n    at org.flywaydb.core.internal.dbsupport.DbSupport.getCurrentSchema(DbSupport.java:75) ~[flyway-core-3.1.jar:na]\n    at org.flywaydb.core.Flyway.execute(Flyway.java:1295) ~[flyway-core-3.1.jar:na]\n    at org.flywaydb.core.Flyway.migrate(Flyway.java:919) ~[flyway-core-3.1.jar:na]\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_25]\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_25]\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_25]\n    at java.lang.reflect.Method.invoke(Method.java:483) ~[na:1.8.0_25]\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1694) ~[spring-beans-4.1.4.RELEASE.jar:4.1.4.RELEASE]\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1633) ~[spring-beans-4.1.4.RELEASE.jar:4.1.4.RELEASE]\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1562) ~[spring-beans-4.1.4.RELEASE.jar:4.1.4.RELEASE]\n    ... 55 common frames omitted\n```\n", "labels": ["bug"]}, {"created": "2015-01-03 19:12:29", "commits": {"8aa2034709ff321e8a910a2c1c450edc0c6ea7b0": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.HikariPool.addBagItem()", "com.zaxxer.hikari.pool.BaseHikariPool.fillPool()", "com.zaxxer.hikari.pool.BaseHikariPool", "com.zaxxer.hikari.pool.HikariPool.HouseKeeper.run()"], "closed": "2015-01-04 17:37:25", "filteredCommits": ["8aa2034709ff321e8a910a2c1c450edc0c6ea7b0"], "commitsDetails": [{"nameRev": "8aa2034709ff321e8a910a2c1c450edc0c6ea7b0 tags/HikariCP-2.3.0~18", "commitMessage": "Fixes #222 separate responsibility of maintaining idle connections from addBagItem().  addBagItem() will now add exactly one connection per-invocation (with retry).  Create a separate fillPool() method to handle idle connection maintenance.\n", "commitParents": ["f6b0ee5ab947f86a4d0d465e976b993d8b3f619c"], "spoonStatsSkippedReason": "", "commitHash": "8aa2034709ff321e8a910a2c1c450edc0c6ea7b0", "authoredDateTime": "2015-01-05 02:36:57", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 20, "deletions": 5, "lines": 25, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/pool/BaseHikariPool.java"}, {"insertions": 11, "deletions": 16, "lines": 27, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 11, "deletions": 16, "lines": 27, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 4, "deletions": 2, "lines": 6, "filePath": "hikaricp-common/src/test/java/com/zaxxer/hikari/ShutdownTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp-common/src/test/java/com/zaxxer/hikari/TestConnections.java"}], "commitDateTime": "2015-01-05 02:36:57", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 10, "MOV": 3, "INS": 2, "DEL": 5, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.addBagItem()"}, {"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.HouseKeeper.run()"}], "spoonFilePath": "HikariPool.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.ShutdownTest.testShutdown2()"}, {"UPD": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.ShutdownTest.testShutdown3()"}], "spoonFilePath": "ShutdownTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.BaseHikariPool.fillPool()"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.BaseHikariPool"}], "spoonFilePath": "BaseHikariPool.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.TestConnections.testBackfill()"}], "spoonFilePath": "TestConnections.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/222", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 42, "deletions": 37, "lines": 79, "gitFilesChange": 3}, "title": "Race condition in addBagItem lambda", "statsSkippedReason": "", "user": "nomagic", "changesInPackagesGIT": ["hikaricp/src/main/java/com/zaxxer/hikari/pool", "hikaricp-common/src/main/java/com/zaxxer/hikari/pool", "hikaricp-java6/src/main/java/com/zaxxer/hikari/pool"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 4, "TOT": 18, "MOV": 5, "INS": 5, "DEL": 7, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hello Brett,\n\nIn short, it is possible that the pool can end up in a situation where it's:\n-well below maxPoolSize\n-small minIdle (say 1)\n-there are (say 10) resource-starved threads (because there are no free connections)\n-those 10 threads block (in AQS)\n-only 1 new connection gets added to the pool **\n-the 10 resource-starved threads eventually are unparked from AQS\n-only one can successfully obtain a Connection (since only one was added)\n-repeat.\n\nNow this takes a bit of unlucky timing (definition of a race condition), but is certainly possible; it seems unlikely that this is intentional?\nThe problem is the:\ngetIdleConnections() < minIdle condition in the lambda ==> this can result in \"addConnection\" tasks essentially being \"swallowed\", with resource-starved threads unnecessarily blocking/waiting when the pool is still well below saturation (i.e. maxSize not reached).\nIn the wild, I suspect this would reveal itself when the pool goes suddenly from a quiescent state to a burst of demand.\n\nI'd be willing to discuss this further (as race conditions are notoriously difficult to explain/diagnose and nearly impossible to test), but it seems there is no way to send a private message and I'm not sure that filing a new issue is the best forum, but I thought I should bring it to your attention.\n\nThe good news is that the fix should be relatively straightforward.\n\n-Thurston\n", "labels": ["bug"]}, {"created": "2014-12-29 06:19:20", "commits": {"6017c8019bb92dde7bd84b660dcab71fd25bd44c": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.proxy.StatementProxy.getResultSet()"], "closed": "2014-12-30 20:49:18", "filteredCommits": ["6017c8019bb92dde7bd84b660dcab71fd25bd44c"], "commitsDetails": [{"nameRev": "6017c8019bb92dde7bd84b660dcab71fd25bd44c tags/HikariCP-2.3.0~21", "commitMessage": "Fix #221 handle getResultSet()", "commitParents": ["8a61e581c2fa2b0d2e036f5441d84ccb4959bea8"], "spoonStatsSkippedReason": "", "commitHash": "6017c8019bb92dde7bd84b660dcab71fd25bd44c", "authoredDateTime": "2014-12-30 14:48:41", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 11, "deletions": 1, "lines": 12, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/proxy/StatementProxy.java"}], "commitDateTime": "2014-12-30 14:48:41", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.proxy.StatementProxy.getResultSet()"}], "spoonFilePath": "StatementProxy.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/221", "ttf": 1.0002777777777778, "gitStatsSummary": {"insertions": 11, "deletions": 1, "lines": 12, "gitFilesChange": 1}, "title": "When the ResultSet is retrieved by java.sql.Statement.getResultSet(), Statement Proxy don't create proxied ResultSet", "statsSkippedReason": "", "user": "bobwenx", "changesInPackagesGIT": ["hikaricp-common/src/main/java/com/zaxxer/hikari/proxy"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "When the ResultSet is retrieved by java.sql.Statement.getResultSet(), Statement Proxy don't create proxied Object.\neg: when i execute sql query using java.sql.Statement#execute(java.lang.String), and when it return true, i can get the ResultSet by call java.sql.Statement#getResultSet(). however, the Hikari's StatementProxy did't override getResultSet() method to create proxied ResultSet.\n", "labels": ["bug"]}, {"created": "2014-12-09 22:09:53", "commits": {"f6b0ee5ab947f86a4d0d465e976b993d8b3f619c": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.BaseHikariPool.getConnection()"], "closed": "2015-01-30 00:05:33", "filteredCommits": ["f6b0ee5ab947f86a4d0d465e976b993d8b3f619c"], "commitsDetails": [{"nameRev": "f6b0ee5ab947f86a4d0d465e976b993d8b3f619c tags/HikariCP-2.3.0~19", "commitMessage": "#215 don't return evicted connections ever\n", "commitParents": ["fafcd38a56e3a0855b999a6565386d88376ee039"], "spoonStatsSkippedReason": "", "commitHash": "f6b0ee5ab947f86a4d0d465e976b993d8b3f619c", "authoredDateTime": "2015-01-02 13:25:48", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/pool/BaseHikariPool.java"}], "commitDateTime": "2015-01-02 13:25:48", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.BaseHikariPool.getConnection()"}], "spoonFilePath": "BaseHikariPool.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/215", "ttf": 51.000277777777775, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "Very slow calling getConnection", "statsSkippedReason": "", "user": "nateww", "changesInPackagesGIT": ["hikaricp-common/src/main/java/com/zaxxer/hikari/pool"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "This is a shot in the dark.  We recently (2 weeks ago) switched from the default pooling provider in Play 2.3 (BoneCP) to HikariCP.\n\nEarlier today we had a huge spike in the application, and analysis revealed that getConnection() of HikariCP was taking ~7 seconds per invocation.\n\n![screen shot 2014-12-09 at 3 05 09 pm](https://cloud.githubusercontent.com/assets/8377844/5367018/a71efbaa-7fb5-11e4-9036-78e7b8c89434.png)\n\nAny ideas on what might cause this?  Analysis of the database shows the database running normal up to this point, and then once the spike occurred, the load average (and queries) went DOWN during this spike in behavior as no connections were being made, and thus no operations were being done.\n\n[ Due to network configuration with the firewall, we have a very short TTL for connections of 2 mins ]\n", "labels": ["bug"]}, {"created": "2014-11-27 17:35:48", "commits": {"44ecfd7f016172a032b045efd92adcdb44951c2f": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}, "50a4de5fa47b0cb4674e7e739bc83147d42ea671": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 2, "changesInPackagesSPOON": ["com.zaxxer.hikari.HikariDataSource.isWrapperFor(java.lang.Class)", "com.zaxxer.hikari.HikariDataSource.unwrap(java.lang.Class)"], "closed": "2014-12-02 00:12:45", "filteredCommits": ["44ecfd7f016172a032b045efd92adcdb44951c2f", "50a4de5fa47b0cb4674e7e739bc83147d42ea671"], "commitsDetails": [{"nameRev": "44ecfd7f016172a032b045efd92adcdb44951c2f tags/HikariCP-2.3.0~126", "commitMessage": "Fix #208 little bit cleaner impl of unwrap() and isWrapper()\n", "commitParents": ["a4c6c03ded43c1e026312cc34841741e9cc82402"], "spoonStatsSkippedReason": "", "commitHash": "44ecfd7f016172a032b045efd92adcdb44951c2f", "authoredDateTime": "2014-12-02 09:12:43", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/HikariDataSource.java"}], "commitDateTime": "2014-12-02 09:12:43", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource.isWrapperFor(java.lang.Class)"}, {"UPD": 1, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource.unwrap(java.lang.Class)"}], "spoonFilePath": "HikariDataSource.java"}]}, {"nameRev": "50a4de5fa47b0cb4674e7e739bc83147d42ea671 tags/HikariCP-2.3.0~128", "commitMessage": "Fix #208 all unwrap when the specified \"iface\" is actually a HikariDataSource\n", "commitParents": ["32a996e7ac8089e12f61f67b87ab72685a03079f"], "spoonStatsSkippedReason": "", "commitHash": "50a4de5fa47b0cb4674e7e739bc83147d42ea671", "authoredDateTime": "2014-11-28 23:19:29", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 8, "deletions": 2, "lines": 10, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/HikariDataSource.java"}], "commitDateTime": "2014-11-28 23:19:29", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource.isWrapperFor(java.lang.Class)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource.unwrap(java.lang.Class)"}], "spoonFilePath": "HikariDataSource.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/208", "ttf": 4.000277777777778, "gitStatsSummary": {"insertions": 10, "deletions": 4, "lines": 14, "gitFilesChange": 1}, "title": "com.zaxxer.hikari.HikariDataSource.unwrap(Class<T>) does not return this", "statsSkippedReason": "", "user": "mauromol", "changesInPackagesGIT": ["hikaricp-common/src/main/java/com/zaxxer/hikari"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 2, "TOT": 10, "MOV": 4, "INS": 2, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "The aforementioned method does not return `this` if this is an instance of the argument class.\n\nI would need to unwrap the HikariDataSource instance from a wrapper but I can't easily do it right now.\n", "labels": ["bug"]}, {"created": "2014-11-27 02:44:51", "commits": {"d47d5a7b0e1352b1333d3c6af554e266c15a4620": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}, "f7415c72845f59f1e09334e5ae23bc67763677c0": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "62d3f4e9d9f84fc8a570f25cbb79417c6b07ca6c": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 2, "changesInPackagesSPOON": ["com.zaxxer.hikari.util.PoolUtilities.setQueryTimeout(java.sql.Statement,int)", "com.zaxxer.hikari.util.PoolUtilities.setNetworkTimeout(java.util.concurrent.Executor,java.sql.Connection,long,boolean)", "com.zaxxer.hikari.util.PoolUtilities", "com.zaxxer.hikari.util.PoolUtilities.isJdbc40Compliant(java.sql.Connection)"], "closed": "2014-11-27 08:42:47", "filteredCommits": ["f7415c72845f59f1e09334e5ae23bc67763677c0", "62d3f4e9d9f84fc8a570f25cbb79417c6b07ca6c", "d47d5a7b0e1352b1333d3c6af554e266c15a4620"], "commitsDetails": [{"nameRev": "d47d5a7b0e1352b1333d3c6af554e266c15a4620 tags/HikariCP-2.3.0~134", "commitMessage": "Fix #207 Make PoolUtilities stateful, because using statics causes issues when two pools with different drivers and different capabilities exist in the same JVM.  Pull out non-pooly things into a separate utility class.\n", "commitParents": ["7e7d124a932219e4c01b3ed6823ddaac09fa2235"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "d47d5a7b0e1352b1333d3c6af554e266c15a4620", "authoredDateTime": "2014-11-27 17:42:44", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "hikaricp-common/src/test/java/com/zaxxer/hikari/ConnectionStateTest.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "hikaricp-java6/src/test/java/com/zaxxer/hikari/TestMetrics.java"}, {"insertions": 5, "deletions": 5, "lines": 10, "filePath": "hikaricp-common/src/test/java/com/zaxxer/hikari/MiscTest.java"}, {"insertions": 0, "deletions": 154, "lines": 154, "filePath": "hikaricp/src/test/java/com/zaxxer/hikari/BargeTest.java"}, {"insertions": 16, "deletions": 20, "lines": 36, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/pool/BaseHikariPool.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "hikaricp-common/src/test/java/com/zaxxer/hikari/mocks/StubConnection.java"}, {"insertions": 2, "deletions": 4, "lines": 6, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/AbstractHikariConfig.java"}, {"insertions": 8, "deletions": 8, "lines": 16, "filePath": "hikaricp/src/test/java/com/zaxxer/hikari/PostgresTest.java"}, {"insertions": 163, "deletions": 0, "lines": 163, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/util/UtilityElf.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/util/ConcurrentBag.java"}, {"insertions": 10, "deletions": 144, "lines": 154, "filePath": "{hikaricp-java6 => hikaricp-common}/src/main/java/com/zaxxer/hikari/util/PoolUtilities.java"}, {"insertions": 0, "deletions": 312, "lines": 312, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/util/PoolUtilities.java"}, {"insertions": 4, "deletions": 4, "lines": 8, "filePath": "hikaricp-common/src/test/java/com/zaxxer/hikari/TestConnectionCloseBlocking.java"}, {"insertions": 7, "deletions": 7, "lines": 14, "filePath": "hikaricp-common/src/test/java/com/zaxxer/hikari/TestConnections.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "hikaricp-common/src/test/java/com/zaxxer/hikari/ExceptionTest.java"}, {"insertions": 3, "deletions": 2, "lines": 5, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/metrics/CodaHaleMetricsTracker.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/proxy/ProxyFactory.java"}, {"insertions": 9, "deletions": 12, "lines": 21, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 11, "deletions": 10, "lines": 21, "filePath": "hikaricp-common/src/test/java/com/zaxxer/hikari/ShutdownTest.java"}, {"insertions": 7, "deletions": 10, "lines": 17, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}], "commitDateTime": "2014-11-27 17:42:44", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": []}, {"nameRev": "f7415c72845f59f1e09334e5ae23bc67763677c0 tags/HikariCP-2.3.0~132", "commitMessage": "Fix #207 remove unneeded test utility class\n", "commitParents": ["62d3f4e9d9f84fc8a570f25cbb79417c6b07ca6c"], "spoonStatsSkippedReason": "", "commitHash": "f7415c72845f59f1e09334e5ae23bc67763677c0", "authoredDateTime": "2014-11-27 23:26:15", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 20, "lines": 20, "filePath": "hikaricp-common/src/test/java/com/zaxxer/hikari/TestElf.java"}, {"insertions": 0, "deletions": 2, "lines": 2, "filePath": "hikaricp-common/src/test/java/com/zaxxer/hikari/TestConnections.java"}], "commitDateTime": "2014-11-27 23:26:15", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.TestElf.resetPoolUtilities()"}], "spoonFilePath": "TestElf.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.TestConnections.testOldDriver()"}], "spoonFilePath": "TestConnections.java"}]}, {"nameRev": "62d3f4e9d9f84fc8a570f25cbb79417c6b07ca6c tags/HikariCP-2.3.0~133", "commitMessage": "Fix #207 opps, missed a crucial part of the fix...\n", "commitParents": ["d47d5a7b0e1352b1333d3c6af554e266c15a4620"], "spoonStatsSkippedReason": "", "commitHash": "62d3f4e9d9f84fc8a570f25cbb79417c6b07ca6c", "authoredDateTime": "2014-11-27 23:22:26", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 5, "deletions": 5, "lines": 10, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/util/PoolUtilities.java"}], "commitDateTime": "2014-11-27 23:22:26", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 0, "INS": 4, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.PoolUtilities.setQueryTimeout(java.sql.Statement,int)"}, {"UPD": 0, "TOT": 7, "MOV": 0, "INS": 7, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.PoolUtilities.setNetworkTimeout(java.util.concurrent.Executor,java.sql.Connection,long,boolean)"}, {"UPD": 0, "TOT": 5, "MOV": 0, "INS": 0, "DEL": 5, "spoonMethodName": "com.zaxxer.hikari.util.PoolUtilities"}, {"UPD": 0, "TOT": 7, "MOV": 0, "INS": 7, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.PoolUtilities.isJdbc40Compliant(java.sql.Connection)"}], "spoonFilePath": "PoolUtilities.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/207", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 216, "deletions": 511, "lines": 727, "gitFilesChange": 11}, "title": "PoolUtilities static methods maintain state. Causing incorrect results for PoolUtilities::isJdbc40Compliant", "statsSkippedReason": "", "user": "frensley", "changesInPackagesGIT": ["{hikaricp-java6 => hikaricp-common}/src/main/java/com/zaxxer/hikari/util", "hikaricp-common/src/main/java/com/zaxxer/hikari/proxy", "hikaricp-common/src/main/java/com/zaxxer/hikari/metrics", "hikaricp-java6/src/main/java/com/zaxxer/hikari/pool", "hikaricp-common/src/main/java/com/zaxxer/hikari", "hikaricp/src/main/java/com/zaxxer/hikari/pool", "hikaricp/src/main/java/com/zaxxer/hikari/util", "hikaricp-java6/src/main/java/com/zaxxer/hikari/util", "hikaricp-common/src/main/java/com/zaxxer/hikari/pool", "hikaricp-common/src/main/java/com/zaxxer/hikari/util"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 4, "TOT": 23.0, "MOV": 0.0, "INS": 18.0, "DEL": 5.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I have two HikariCP connection pools in my application.\nOne pool is JDBC4 compliant. The other is not.\n\nPoolUtilities is used to test for jdbc40 and jdbc41 compliance. However, it seems to try to cache the results of this test by using private static fields on the PoolUtilities class. This causes one of my two pools to have incorrect results reported by the various test methods (i.e. PoolUtilities::isJdbc40Compliant). \n", "labels": ["bug"]}, {"created": "2014-11-25 11:03:53", "commits": {"87be72362109df6300e9d5c500395f414b450732": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "527c8ce59c1c59b317618a3521ab5d4f84e08246": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "f0b735cb0241a32dbda31bc2d7abd56921651986": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 3, "changesInPackagesSPOON": ["com.zaxxer.hikari.util.PoolUtilities.quietlySleep(long)", "com.zaxxer.hikari.pool.BaseHikariPool", "com.zaxxer.hikari.util.ConcurrentBag.add(com.zaxxer.hikari.util.ConcurrentBag$BagEntry)"], "closed": "2014-11-28 00:25:50", "filteredCommits": ["f0b735cb0241a32dbda31bc2d7abd56921651986", "527c8ce59c1c59b317618a3521ab5d4f84e08246", "87be72362109df6300e9d5c500395f414b450732"], "commitsDetails": [{"nameRev": "87be72362109df6300e9d5c500395f414b450732 tags/HikariCP-2.3.0~137", "commitMessage": "Issue #206 suppress noisy exceptions in \"quiteSleep()\" method.\n", "commitParents": ["5a90be91991b04fe510d65168edf2574a2cec450"], "spoonStatsSkippedReason": "", "commitHash": "87be72362109df6300e9d5c500395f414b450732", "authoredDateTime": "2014-11-27 13:11:43", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/util/PoolUtilities.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/util/PoolUtilities.java"}], "commitDateTime": "2014-11-27 13:11:43", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.util.PoolUtilities.quietlySleep(long)"}], "spoonFilePath": "PoolUtilities.java"}]}, {"nameRev": "527c8ce59c1c59b317618a3521ab5d4f84e08246 tags/HikariCP-2.3.0~146", "commitMessage": "Issue #206 Throw an exception if the bag is closed, this will cause addConnection() to cleanly close the opened connection and correctly decrement the pool count.\n", "commitParents": ["396ecf4008a3a43223f83da3bc94326402fe3f2a"], "spoonStatsSkippedReason": "", "commitHash": "527c8ce59c1c59b317618a3521ab5d4f84e08246", "authoredDateTime": "2014-11-25 23:43:17", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/util/ConcurrentBag.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/util/ConcurrentBag.java"}], "commitDateTime": "2014-11-25 23:43:17", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag.add(com.zaxxer.hikari.util.ConcurrentBag$BagEntry)"}], "spoonFilePath": "ConcurrentBag.java"}]}, {"nameRev": "f0b735cb0241a32dbda31bc2d7abd56921651986 tags/HikariCP-2.3.0~136", "commitMessage": "Issue #206 Use a discard policy rather than an abort policy for the housekeeping thread, the abort policy causes unnecessary looping in addConnection() during shutdown() due to the housekeeping thread being used as the executor for the setNetworkTImeout() call.  We could create another executor just for that, but it doesn't really make sense or matter.\n", "commitParents": ["87be72362109df6300e9d5c500395f414b450732"], "spoonStatsSkippedReason": "", "commitHash": "f0b735cb0241a32dbda31bc2d7abd56921651986", "authoredDateTime": "2014-11-27 13:14:08", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 1, "lines": 4, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/pool/BaseHikariPool.java"}], "commitDateTime": "2014-11-27 13:14:08", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.BaseHikariPool"}], "spoonFilePath": "BaseHikariPool.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/206", "ttf": 2.000277777777778, "gitStatsSummary": {"insertions": 7, "deletions": 5, "lines": 12, "gitFilesChange": 5}, "title": "Unclosed MySQL connections when not using connectionTestQuery", "statsSkippedReason": "", "user": "danielfernandez", "changesInPackagesGIT": ["hikaricp-java6/src/main/java/com/zaxxer/hikari/util", "hikaricp-common/src/main/java/com/zaxxer/hikari/pool", "hikaricp/src/main/java/com/zaxxer/hikari/util"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 3, "TOT": 6, "MOV": 1, "INS": 2, "DEL": 2, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "We are testing a high-load database tool that requires the execution of a big amount of queries on a MySQL server. For this, we are using HikariCP (`HikariCP-java6:2.2.5`) and the MySQL JDBC Driver (`mysql-connector-java:5.1.34`). \n\nWe use Hikari's default configuration: we only set the driver class (`com.mysql.jdbc.Driver`), JDBC URL, user and password. And sometimes the `connectionTestQuery`, which seems to make a big difference.\n\nIt was our understanding that the newest versions of the MySQL driver would implement the `isValid()` method and therefore not need a `connectionTestQuery` property to be set. However, when we run one of our tests --which creates and shutdowns 1,002 different instances of the Hikari pool in sequence-- with such setup, we observe a growing number of unclosed connections (orange):\n\n![mysql_novalidationquery](https://cloud.githubusercontent.com/assets/1492299/5181387/2d9af060-7496-11e4-97a6-222aa448e4fc.png)\n\nHowever, if we run exactly the same test setting having set the `connectionTestQuery` property like:\n\n``` java\nproperties.setProperty(\"connectionTestQuery\", \"/* ping */ SELECT 1\");\n```\n\n...this doesn't happen at all, and everything looks fine:\n\n![mysql_validationquery](https://cloud.githubusercontent.com/assets/1492299/5181334/9757ad14-7495-11e4-8068-245a8467c2c8.png)\n\nThe profiler shows to us that our test actually uses and _closes_ the same amount of connections in both cases (29,058), but in the first case many more connections are open and never closed. Also, the profiler shows that these unclosed connections are not strongly-reachable after the test has finished executing all the queries, but that a good number of connections are still weak and/or soft reachable (and forcing a GC execution doesn't change things):\n\n![mysql_novalidationreachability](https://cloud.githubusercontent.com/assets/1492299/5181730/8e6c8bb2-7499-11e4-8ac5-da43ac7832e4.png)\n\nNote that, when we use `connectionTestQuery`, we also see a comparable number of weak/softly reachable connections at the end. The difference seems to be that the connections are closed this time...\n\n![mysql_validationreachability](https://cloud.githubusercontent.com/assets/1492299/5181840/a5fad8aa-749a-11e4-81e3-a9990277c787.png)\n\nAt first we thought this could be some kind of issue at the MySQL JDBC Driver, but the fact is, we run this same test using Commons-DBCP with its default configuration (no connection validation query), and we obtained no unclosed connections...\n", "labels": ["bug"]}, {"created": "2014-11-21 08:28:35", "commits": {"26d6f254db4e66f812080ef041576472d56c7c37": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.HikariPool.shutdown()", "com.zaxxer.hikari.metrics.MetricsTracker.close()", "com.zaxxer.hikari.metrics.CodaHaleMetricsTracker.close()", "com.zaxxer.hikari.metrics.CodaHaleMetricsTracker"], "closed": "2014-11-22 10:45:45", "filteredCommits": ["26d6f254db4e66f812080ef041576472d56c7c37"], "commitsDetails": [{"nameRev": "26d6f254db4e66f812080ef041576472d56c7c37 tags/HikariCP-2.3.0~155", "commitMessage": "Fix #203 unregister metrics at shutdown.\n", "commitParents": ["03542eb5796cf396f51088f0a85098da34298eba"], "spoonStatsSkippedReason": "", "commitHash": "26d6f254db4e66f812080ef041576472d56c7c37", "authoredDateTime": "2014-11-22 19:45:40", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 4, "deletions": 2, "lines": 6, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/metrics/MetricsTracker.java"}, {"insertions": 16, "deletions": 2, "lines": 18, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/metrics/CodaHaleMetricsTracker.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 4, "deletions": 2, "lines": 6, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/metrics/MetricsTracker.java"}, {"insertions": 16, "deletions": 2, "lines": 18, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/metrics/CodaHaleMetricsTracker.java"}], "commitDateTime": "2014-11-22 19:45:40", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.shutdown()"}], "spoonFilePath": "HikariPool.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.metrics.MetricsTracker.close()"}], "spoonFilePath": "MetricsTracker.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.metrics.CodaHaleMetricsTracker.close()"}, {"UPD": 0, "TOT": 6, "MOV": 0, "INS": 4, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.metrics.CodaHaleMetricsTracker"}], "spoonFilePath": "CodaHaleMetricsTracker.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/203", "ttf": 1.0002777777777778, "gitStatsSummary": {"insertions": 42, "deletions": 8, "lines": 50, "gitFilesChange": 6}, "title": "Metrics not unregistered when pool is shut down", "statsSkippedReason": "", "user": "TuomasKiviaho", "changesInPackagesGIT": ["hikaricp/src/main/java/com/zaxxer/hikari/pool", "hikaricp-java6/src/main/java/com/zaxxer/hikari/pool", "hikaricp/src/main/java/com/zaxxer/hikari/metrics", "hikaricp-java6/src/main/java/com/zaxxer/hikari/metrics"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 4, "TOT": 9, "MOV": 0, "INS": 7, "DEL": 2, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I'm getting java.lang.IllegalArgumentException: A metric named foobar.pool.TotalConnections already exists\n    at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:91)\n    at com.zaxxer.hikari.metrics.CodaHaleMetricsTracker.<init>(CodaHaleMetricsTracker.java:40)\n    at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:145)\n    at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:114)\n    at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:78)\nwhen I try to restart a pool after shutdown. MetricsRegistry is reused so the previous registrations still exist in it. \n\nWould it be possible to add a Closeable.close of similar method to CodaHaleMetricsTracker and call it at pool shutdown (in same way as it is done for JMX).\n", "labels": ["bug"]}, {"created": "2014-11-17 23:09:28", "commits": {"d097828d9d301db4af329c7b1a88ad3a528a19b1": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}, "c78fc35c27d6def1b4a86c379692cc7aebaa0cea": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}, "03542eb5796cf396f51088f0a85098da34298eba": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "d71db82715782f7121132aea982478f7b6c77cd1": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 4, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.PoolBagEntry", "com.zaxxer.hikari.pool.HikariPool.resumePool()", "com.zaxxer.hikari.proxy.ConnectionProxy.close()", "com.zaxxer.hikari.util.ConcurrentBag.add(com.zaxxer.hikari.util.ConcurrentBag$BagEntry)", "com.zaxxer.hikari.pool.HikariPool.addConnection()", "com.zaxxer.hikari.pool.HikariPool.abortActiveConnections()", "com.zaxxer.hikari.proxy.ConnectionProxy", "com.zaxxer.hikari.pool.HikariPool.closeConnection(com.zaxxer.hikari.pool.PoolBagEntry)", "com.zaxxer.hikari.util.ConcurrentBag.remove(com.zaxxer.hikari.util.ConcurrentBag$BagEntry)", "com.zaxxer.hikari.pool.HikariPool.addBagItem()"], "closed": "2014-11-21 15:43:46", "filteredCommits": ["d71db82715782f7121132aea982478f7b6c77cd1", "03542eb5796cf396f51088f0a85098da34298eba", "c78fc35c27d6def1b4a86c379692cc7aebaa0cea", "d097828d9d301db4af329c7b1a88ad3a528a19b1"], "commitsDetails": [{"nameRev": "d097828d9d301db4af329c7b1a88ad3a528a19b1 tags/HikariCP-2.3.0~174", "commitMessage": "Fix #198 back out original optimisation as it masks application errors.\n", "commitParents": ["7485e2dd8b7ef8d151f9815b95791c6f0be3e1fe"], "spoonStatsSkippedReason": "", "commitHash": "d097828d9d301db4af329c7b1a88ad3a528a19b1", "authoredDateTime": "2014-11-18 21:13:57", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/proxy/ConnectionProxy.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/proxy/ConnectionProxy.java"}], "commitDateTime": "2014-11-18 21:13:57", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.proxy.ConnectionProxy"}], "spoonFilePath": "ConnectionProxy.java"}]}, {"nameRev": "c78fc35c27d6def1b4a86c379692cc7aebaa0cea tags/HikariCP-2.3.0~160", "commitMessage": "Fix #198 handle pull shutdown synchronisation issues\n", "commitParents": ["da4ffe6d18bf34e447ab2b232f21e60258338e2d"], "spoonStatsSkippedReason": "", "commitHash": "c78fc35c27d6def1b4a86c379692cc7aebaa0cea", "authoredDateTime": "2014-11-22 00:43:41", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 4, "deletions": 1, "lines": 5, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/proxy/ConnectionProxy.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/pool/PoolBagEntry.java"}, {"insertions": 15, "deletions": 16, "lines": 31, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 11, "deletions": 12, "lines": 23, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 4, "deletions": 1, "lines": 5, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/proxy/ConnectionProxy.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/pool/PoolBagEntry.java"}, {"insertions": 5, "deletions": 2, "lines": 7, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/util/ConcurrentBag.java"}, {"insertions": 5, "deletions": 2, "lines": 7, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/util/ConcurrentBag.java"}], "commitDateTime": "2014-11-22 00:43:41", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.PoolBagEntry"}], "spoonFilePath": "PoolBagEntry.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 2, "INS": 2, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.abortActiveConnections()"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.addBagItem()"}, {"UPD": 0, "TOT": 5, "MOV": 4, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.closeConnection(com.zaxxer.hikari.pool.PoolBagEntry)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.resumePool()"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.addConnection()"}], "spoonFilePath": "HikariPool.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.proxy.ConnectionProxy.close()"}], "spoonFilePath": "ConnectionProxy.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 12, "MOV": 5, "INS": 5, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag.remove(com.zaxxer.hikari.util.ConcurrentBag$BagEntry)"}], "spoonFilePath": "ConcurrentBag.java"}]}, {"nameRev": "03542eb5796cf396f51088f0a85098da34298eba tags/HikariCP-2.3.0~156", "commitMessage": "Fix #198 rework of the fix\n", "commitParents": ["3b1ae79d7d817dbc942c75db4a57cd8de66b2016"], "spoonStatsSkippedReason": "", "commitHash": "03542eb5796cf396f51088f0a85098da34298eba", "authoredDateTime": "2014-11-22 19:34:30", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/proxy/ConnectionProxy.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/pool/PoolBagEntry.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/proxy/ConnectionProxy.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/pool/PoolBagEntry.java"}], "commitDateTime": "2014-11-22 19:34:30", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.PoolBagEntry"}], "spoonFilePath": "PoolBagEntry.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.abortActiveConnections()"}], "spoonFilePath": "HikariPool.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.proxy.ConnectionProxy.close()"}], "spoonFilePath": "ConnectionProxy.java"}]}, {"nameRev": "d71db82715782f7121132aea982478f7b6c77cd1 tags/HikariCP-2.3.0~173", "commitMessage": "Fix #198 improve shutdown handling with respect to asynchronous close() calls that might be occurring.\n", "commitParents": ["d097828d9d301db4af329c7b1a88ad3a528a19b1"], "spoonStatsSkippedReason": "", "commitHash": "d71db82715782f7121132aea982478f7b6c77cd1", "authoredDateTime": "2014-11-18 23:56:33", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 2, "lines": 5, "filePath": "hikaricp/src/test/java/com/zaxxer/hikari/TestConcurrentBag.java"}, {"insertions": 68, "deletions": 0, "lines": 68, "filePath": "hikaricp-java6/src/test/java/com/zaxxer/hikari/ShutdownTest.java"}, {"insertions": 3, "deletions": 2, "lines": 5, "filePath": "hikaricp-java6/src/test/java/com/zaxxer/hikari/TestConcurrentBag.java"}, {"insertions": 68, "deletions": 0, "lines": 68, "filePath": "hikaricp/src/test/java/com/zaxxer/hikari/ShutdownTest.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 9, "deletions": 10, "lines": 19, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/util/ConcurrentBag.java"}, {"insertions": 9, "deletions": 10, "lines": 19, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/util/ConcurrentBag.java"}], "commitDateTime": "2014-11-18 23:56:33", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.ShutdownTest.testThreadedShutdown()"}], "spoonFilePath": "ShutdownTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.abortActiveConnections()"}], "spoonFilePath": "HikariPool.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 9, "MOV": 6, "INS": 2, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag.remove(com.zaxxer.hikari.util.ConcurrentBag$BagEntry)"}, {"UPD": 0, "TOT": 5, "MOV": 2, "INS": 2, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag.add(com.zaxxer.hikari.util.ConcurrentBag$BagEntry)"}], "spoonFilePath": "ConcurrentBag.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 4, "MOV": 1, "INS": 2, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.TestConcurrentBag.testConcurrentBag()"}], "spoonFilePath": "TestConcurrentBag.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/198", "ttf": 3.000277777777778, "gitStatsSummary": {"insertions": 77, "deletions": 65, "lines": 142, "gitFilesChange": 8}, "title": "Connection marked as broken because of SQLSTATE(08003)", "statsSkippedReason": "", "user": "cowwoc", "changesInPackagesGIT": ["hikaricp-java6/src/main/java/com/zaxxer/hikari/pool", "hikaricp/src/main/java/com/zaxxer/hikari/util", "hikaricp/src/main/java/com/zaxxer/hikari/pool", "hikaricp-java6/src/main/java/com/zaxxer/hikari/util", "hikaricp-java6/src/main/java/com/zaxxer/hikari/proxy", "hikaricp/src/main/java/com/zaxxer/hikari/proxy"], "spoonStatsSummary": {"UPD": 3, "spoonMethodsChanged": 10, "TOT": 51, "MOV": 24, "INS": 20, "DEL": 4, "spoonFilesChanged": 4}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "PostgreSQL 9.3, Hikari 2.2.5\n\nI'm getting random exceptions like this:\n\n```\n17:22:24.117 [qtp1372269468-674] WARN  com.zaxxer.hikari.proxy.ConnectionProxy.checkException() - Connection org.postgresql.jdbc4.Jdbc4Connection@482c822f (HikariPool-39) marked as broken because of SQLSTATE(08003), ErrorCode(0).\norg.postgresql.util.PSQLException: This connection has been closed.\n    at org.postgresql.jdbc2.AbstractJdbc2Connection.checkClosed(AbstractJdbc2Connection.java:843)\n    at org.postgresql.jdbc2.AbstractJdbc2Connection.setAutoCommit(AbstractJdbc2Connection.java:785)\n    at com.zaxxer.hikari.proxy.ConnectionProxy.resetConnectionState(ConnectionProxy.java:164)\n    at com.zaxxer.hikari.proxy.ConnectionProxy.close(ConnectionProxy.java:207)\n    at com.realestate.backend.scope.DefaultRequestScope$ConnectionFactory.disposeValue(DefaultRequestScope.java:200)\n    at com.realestate.backend.scope.DefaultRequestScope$ConnectionFactory.disposeValue(DefaultRequestScope.java:147)\n    at org.bitbucket.cowwoc.pouch.LazyFactory.close(LazyFactory.java:59)\n    at com.realestate.backend.scope.DefaultRequestScope.close(DefaultRequestScope.java:143)\n    at com.realestate.backend.jersey.PouchBinder$RequestFactory.dispose(PouchBinder.java:50)\n    at com.realestate.backend.jersey.PouchBinder$RequestFactory.dispose(PouchBinder.java:23)\n    at org.jvnet.hk2.internal.FactoryCreator.dispose(FactoryCreator.java:114)\n    at org.jvnet.hk2.internal.SystemDescriptor.dispose(SystemDescriptor.java:516)\n    at org.glassfish.jersey.process.internal.RequestScope$Instance.remove(RequestScope.java:512)\n    at org.glassfish.jersey.process.internal.RequestScope$Instance.release(RequestScope.java:529)\n    at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:299)\n    at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:254)\n    at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1030)\n    at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:373)\n    at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:381)\n    at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:534)\n    at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:482)\n    at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:419)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1650)\n    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:583)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)\n    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)\n    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1125)\n    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\n    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1059)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n    at org.eclipse.jetty.server.Server.handle(Server.java:497)\n    at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:311)\n    at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:248)\n    at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\n    at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:610)\n    at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:539)\n    at java.lang.Thread.run(Thread.java:745)\n17:22:24.121 [qtp1372269468-674] WARN  org.eclipse.jetty.servlet.ServletHandler.doHandle() - \njavax.servlet.ServletException: A MultiException has 1 exceptions.  They are:\n1. java.lang.IllegalStateException: Attempt to remove an object from the bag that was not borrowed or reserved\n\n    at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:393)\n    at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:381)\n    at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:534)\n    at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:482)\n    at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:419)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1650)\n    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:583)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)\n    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)\n    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1125)\n    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\n    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1059)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n    at org.eclipse.jetty.server.Server.handle(Server.java:497)\n    at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:311)\n    at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:248)\n    at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\n    at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:610)\n    at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:539)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: org.glassfish.hk2.api.MultiException: A MultiException has 1 exceptions.  They are:\n1. java.lang.IllegalStateException: Attempt to remove an object from the bag that was not borrowed or reserved\n\n    at org.jvnet.hk2.internal.FactoryCreator.dispose(FactoryCreator.java:121)\n    at org.jvnet.hk2.internal.SystemDescriptor.dispose(SystemDescriptor.java:516)\n    at org.glassfish.jersey.process.internal.RequestScope$Instance.remove(RequestScope.java:512)\n    at org.glassfish.jersey.process.internal.RequestScope$Instance.release(RequestScope.java:529)\n    at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:299)\n    at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:254)\n    at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1030)\n    at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:373)\n    ... 22 common frames omitted\nCaused by: java.lang.IllegalStateException: Attempt to remove an object from the bag that was not borrowed or reserved\n    at com.zaxxer.hikari.util.ConcurrentBag.remove(ConcurrentBag.java:206)\n    at com.zaxxer.hikari.pool.HikariPool.closeConnection(HikariPool.java:378)\n    at com.zaxxer.hikari.pool.HikariPool.releaseConnection(HikariPool.java:220)\n    at com.zaxxer.hikari.proxy.ConnectionProxy.close(ConnectionProxy.java:216)\n    at com.realestate.backend.scope.DefaultRequestScope$ConnectionFactory.disposeValue(DefaultRequestScope.java:200)\n    at com.realestate.backend.scope.DefaultRequestScope$ConnectionFactory.disposeValue(DefaultRequestScope.java:147)\n    at org.bitbucket.cowwoc.pouch.LazyFactory.close(LazyFactory.java:59)\n    at com.realestate.backend.scope.DefaultRequestScope.close(DefaultRequestScope.java:143)\n    at com.realestate.backend.jersey.PouchBinder$RequestFactory.dispose(PouchBinder.java:50)\n    at com.realestate.backend.jersey.PouchBinder$RequestFactory.dispose(PouchBinder.java:23)\n    at org.jvnet.hk2.internal.FactoryCreator.dispose(FactoryCreator.java:114)\n    ... 29 common frames omitted\n```\n\nWith the default value of `log_statement` the only log I see is:\n\n```\n2014-11-17 17:14:56 EST 546a735e.31a0 ERROR:  could not serialize access due to concurrent update\n2014-11-17 17:14:56 EST 546a735e.31a0 STATEMENT:  update \"user\"\n    set email = $1, password = $2, name = $3, version = $4, last_modified = $5\n    where \"user\".id = $6\n```\n\nbut I don't think is related. I tried increasing the level of `log_statement` but got a lot of noise.\n\nAny ideas on how to debug this further? Does the stack-trace give you any clues? Is there a specific text pattern I should scan for with `log_statement = 'all'`?\n", "labels": ["bug"]}, {"created": "2014-11-17 04:42:37", "commits": {"19049c54ad15abcfc16e889c900bf0052260f2af": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.HikariJNDIFactory"], "closed": "2014-12-02 03:22:49", "filteredCommits": ["19049c54ad15abcfc16e889c900bf0052260f2af"], "commitsDetails": [{"nameRev": "19049c54ad15abcfc16e889c900bf0052260f2af tags/HikariCP-2.3.0~123", "commitMessage": "Fix #194 no need to initialize the CodaHaleShim in the JNDI factory\n", "commitParents": ["6772e5f4ca59cae6908df34d2cf5dfe534053e3e"], "spoonStatsSkippedReason": "", "commitHash": "19049c54ad15abcfc16e889c900bf0052260f2af", "authoredDateTime": "2014-12-02 12:22:46", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 0, "deletions": 6, "lines": 6, "filePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/HikariJNDIFactory.java"}], "commitDateTime": "2014-12-02 12:22:46", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariJNDIFactory"}], "spoonFilePath": "HikariJNDIFactory.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/194", "ttf": 14.000277777777777, "gitStatsSummary": {"insertions": 0, "deletions": 6, "lines": 6, "gitFilesChange": 1}, "title": "Tomcat 8 failing to start with global jndi data source", "statsSkippedReason": "", "user": "tim-oe", "changesInPackagesGIT": ["hikaricp-common/src/main/java/com/zaxxer/hikari"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "running tomcat 8.0.12 (64b windows with arp libs), HikariCP 2.2.5\n\ni have a jndi configuration in $CATALINA_HOME/conf/context.xml\n\n```\n<Resource\n        auth=\"Container\"\n        type=\"javax.sql.DataSource\"\n        name=\"jdbc/oeDatabase\"\n        factory=\"com.zaxxer.hikari.HikariJNDIFactory\"\n        dataSourceClassName=\"com.mysql.jdbc.jdbc2.optional.MysqlDataSource\" \n        driverClass=\"com.mysql.jdbc.Driver\"\n        driverClassName=\"com.mysql.jdbc.Driver\"\n        idleMaxAgeInMinutes=\"15\"\n        idleConnectionTestPeriodInMinutes=\"10\"\n        partitionCount=\"3\"\n        acquireIncrement=\"5\"\n        maxConnectionsPerPartition=\"10\"\n        minConnectionsPerPartition=\"5\"\n        statementsCacheSize=\"50\"\n        dataSource.url=\"jdbc:mysql://localhost:3306/outboundengine\"\n        dataSource.user=\"root\"\n        dataSource.password=\"root\"\n        />\n```\n\nI have no custom webapps installed, just ROOT from the install.\n\nI have added the following jars to $CATALINA_HOME/lib\nHikariCP-2.2.5.jar\njavassist-3.18.1-GA.jar\njul-to-slf4j-1.7.7.jar\nmysql-connector-java-5.1.33.jar\nslf4j-api-1.7.7.jar\nslf4j-jdk14-1.7.7.jar\n\nI get the following errors trying to start tomcat\n\nNov 17, 2014 4:33:02 AM org.apache.catalina.startup.HostConfig deployDirectory\nINFO: Deploying web application directory C:\\java\\tomcat\\webapps\\ROOT\nNov 17, 2014 4:33:03 AM com.zaxxer.hikari.metrics.CodaHaleShim loadOrShimCodahale\nSEVERE: Cannot generate CodaHale metrics shim\njavassist.CannotCompileException: by java.lang.LinkageError: loader (instance of  org/apache/catalina/loader/WebappClassLoader): attempted  duplicate class definition for name: \"com/codahale/metrics/MetricRegistry\"\n    at javassist.ClassPool.toClass(ClassPool.java:1099)\n    at javassist.CtClass.toClass(CtClass.java:1265)\n    at com.zaxxer.hikari.metrics.CodaHaleShim.loadOrShimCodahale(CodaHaleShim.java:81)\n    at com.zaxxer.hikari.metrics.CodaHaleShim.initialize(CodaHaleShim.java:52)\n    at com.zaxxer.hikari.HikariConfig.<clinit>(HikariConfig.java:90)\n    at com.zaxxer.hikari.HikariJNDIFactory.createDataSource(HikariJNDIFactory.java:82)\n    at com.zaxxer.hikari.HikariJNDIFactory.getObjectInstance(HikariJNDIFactory.java:73)\n    at org.apache.naming.factory.FactoryBase.getObjectInstance(FactoryBase.java:94)\n    at javax.naming.spi.NamingManager.getObjectInstance(NamingManager.java:321)\n    at org.apache.naming.NamingContext.lookup(NamingContext.java:841)\n    at org.apache.naming.NamingContext.lookup(NamingContext.java:152)\n    at org.apache.naming.NamingContext.lookup(NamingContext.java:829)\n    at org.apache.naming.NamingContext.lookup(NamingContext.java:166)\n    at org.apache.catalina.core.NamingContextListener.addResource(NamingContextListener.java:1084)\n    at org.apache.catalina.core.NamingContextListener.createNamingContext(NamingContextListener.java:663)\n    at org.apache.catalina.core.NamingContextListener.lifecycleEvent(NamingContextListener.java:256)\n    at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:117)\n    at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)\n    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5074)\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n    at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:724)\n    at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:700)\n    at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:714)\n    at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1071)\n    at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1722)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.LinkageError: loader (instance of  org/apache/catalina/loader/WebappClassLoader): attempted  duplicate class definition for name: \"com/codahale/metrics/MetricRegistry\"\n    at java.lang.ClassLoader.defineClass1(Native Method)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:760)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:483)\n    at javassist.ClassPool.toClass2(ClassPool.java:1112)\n    at javassist.ClassPool.toClass(ClassPool.java:1093)\n    ... 29 more\n\nNov 17, 2014 4:33:03 AM org.apache.catalina.core.ContainerBase addChildInternal\nSEVERE: ContainerBase.addChild: start: \norg.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Catalina].StandardHost[localhost].StandardContext[]]\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:154)\n    at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:724)\n    at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:700)\n    at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:714)\n    at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1071)\n    at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1722)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.ExceptionInInitializerError\n    at com.zaxxer.hikari.HikariJNDIFactory.createDataSource(HikariJNDIFactory.java:82)\n    at com.zaxxer.hikari.HikariJNDIFactory.getObjectInstance(HikariJNDIFactory.java:73)\n    at org.apache.naming.factory.FactoryBase.getObjectInstance(FactoryBase.java:94)\n    at javax.naming.spi.NamingManager.getObjectInstance(NamingManager.java:321)\n    at org.apache.naming.NamingContext.lookup(NamingContext.java:841)\n    at org.apache.naming.NamingContext.lookup(NamingContext.java:152)\n    at org.apache.naming.NamingContext.lookup(NamingContext.java:829)\n    at org.apache.naming.NamingContext.lookup(NamingContext.java:166)\n    at org.apache.catalina.core.NamingContextListener.addResource(NamingContextListener.java:1084)\n    at org.apache.catalina.core.NamingContextListener.createNamingContext(NamingContextListener.java:663)\n    at org.apache.catalina.core.NamingContextListener.lifecycleEvent(NamingContextListener.java:256)\n    at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:117)\n    at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)\n    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5074)\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n    ... 10 more\nCaused by: java.lang.RuntimeException: javassist.CannotCompileException: by java.lang.LinkageError: loader (instance of  org/apache/catalina/loader/WebappClassLoader): attempted  duplicate class definition for name: \"com/codahale/metrics/MetricRegistry\"\n    at com.zaxxer.hikari.metrics.CodaHaleShim.loadOrShimCodahale(CodaHaleShim.java:85)\n    at com.zaxxer.hikari.metrics.CodaHaleShim.initialize(CodaHaleShim.java:52)\n    at com.zaxxer.hikari.HikariConfig.<clinit>(HikariConfig.java:90)\n    ... 25 more\nCaused by: javassist.CannotCompileException: by java.lang.LinkageError: loader (instance of  org/apache/catalina/loader/WebappClassLoader): attempted  duplicate class definition for name: \"com/codahale/metrics/MetricRegistry\"\n    at javassist.ClassPool.toClass(ClassPool.java:1099)\n    at javassist.CtClass.toClass(CtClass.java:1265)\n    at com.zaxxer.hikari.metrics.CodaHaleShim.loadOrShimCodahale(CodaHaleShim.java:81)\n    ... 27 more\nCaused by: java.lang.LinkageError: loader (instance of  org/apache/catalina/loader/WebappClassLoader): attempted  duplicate class definition for name: \"com/codahale/metrics/MetricRegistry\"\n    at java.lang.ClassLoader.defineClass1(Native Method)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:760)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:483)\n    at javassist.ClassPool.toClass2(ClassPool.java:1112)\n    at javassist.ClassPool.toClass(ClassPool.java:1093)\n    ... 29 more\n\nNov 17, 2014 4:33:03 AM org.apache.catalina.startup.HostConfig deployDirectory\nSEVERE: Error deploying web application directory C:\\java\\tomcat\\webapps\\ROOT\njava.lang.IllegalStateException: ContainerBase.addChild: start: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Catalina].StandardHost[localhost].StandardContext[]]\n    at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:727)\n    at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:700)\n    at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:714)\n    at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1071)\n    at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1722)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n", "labels": ["bug"]}, {"created": "2014-11-11 23:32:19", "commits": {"f4fffb5f1e9d073615ddc1fc709320488b60182b": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "4c0c9711e13db8ad72f86093461fee7a12451ee6": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.util.PoolUtilities.setupConnection(java.sql.Connection,boolean,boolean,int,java.lang.String)"], "closed": "2014-11-12 03:59:12", "filteredCommits": ["4c0c9711e13db8ad72f86093461fee7a12451ee6"], "commitsDetails": [{"nameRev": "f4fffb5f1e9d073615ddc1fc709320488b60182b tags/HikariCP-2.3.0~186", "commitMessage": "Merge branch '2.2.5-rc1' into dev\n\n* 2.2.5-rc1:\n  [maven-release-plugin] prepare for next development iteration\n  [maven-release-plugin] prepare release HikariCP-2.2.5-rc3\n  Fix a bug reported on Stackoverflow.\n  Fix #187 only set transaction isolation if it differs from the default.\n", "commitParents": ["327b738a42bea32e5f6dc97e039bcf7034054986", "a7a84e9497b4f2820d28b2bc84062a8527f5328e"], "spoonStatsSkippedReason": "", "commitHash": "f4fffb5f1e9d073615ddc1fc709320488b60182b", "authoredDateTime": "2014-11-12 22:54:31", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 7, "deletions": 0, "lines": 7, "filePath": "CHANGES"}, {"insertions": 4, "deletions": 2, "lines": 6, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/util/PoolUtilities.java"}, {"insertions": 4, "deletions": 2, "lines": 6, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/util/PoolUtilities.java"}], "commitDateTime": "2014-11-12 22:54:31", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.PoolUtilities.setLoginTimeout(javax.sql.DataSource,long,org.slf4j.Logger)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.PoolUtilities.setupConnection(java.sql.Connection,boolean,boolean,int,java.lang.String)"}], "spoonFilePath": "PoolUtilities.java"}]}, {"nameRev": "4c0c9711e13db8ad72f86093461fee7a12451ee6 tags/HikariCP-2.2.5~7", "commitMessage": "Fix #187 only set transaction isolation if it differs from the default.\n", "commitParents": ["04e48feb30b48baa1c9cf631ef71380627ac2d77"], "spoonStatsSkippedReason": "", "commitHash": "4c0c9711e13db8ad72f86093461fee7a12451ee6", "authoredDateTime": "2014-11-12 12:58:20", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 1, "lines": 4, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/util/PoolUtilities.java"}, {"insertions": 3, "deletions": 1, "lines": 4, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/util/PoolUtilities.java"}], "commitDateTime": "2014-11-12 12:58:20", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.PoolUtilities.setupConnection(java.sql.Connection,boolean,boolean,int,java.lang.String)"}], "spoonFilePath": "PoolUtilities.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/187", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 6, "deletions": 2, "lines": 8, "gitFilesChange": 2}, "title": "Cannot override Hikari setting transaction isolation level", "statsSkippedReason": "", "user": "andygrove", "changesInPackagesGIT": ["hikaricp-java6/src/main/java/com/zaxxer/hikari/util", "hikaricp/src/main/java/com/zaxxer/hikari/util"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 1, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi,\n\nI'm new to HikariCP, so maybe I am missing something, but I cannot find a way to stop Hikari from attempting to set the transaction isolation level on the driver I am using. I want to use the default transaction isolation level of the driver. \n\nThe issue is that in com.zaxxer.hikari.util.PoolUtilities#setupConnection, the isolation level is always set:\n\n<code>public static void setupConnection(...)\n   {\n      connection.setAutoCommit(isAutoCommit);\n      connection.setTransactionIsolation(transactionIsolation);\n      connection.setReadOnly(isReadOnly);\n</code>\n\nThe caller (com.zaxxer.hikari.pool.HikariPool#addConnection) does have code that seems to be designed to handle just using the default:\n\n<code>transactionIsolation = (transactionIsolation < 0 ? connection.getTransactionIsolation() : transactionIsolation);</code>\n\nHowever, as far as I can tell, transactionIsolation defaults to 0, so this code is never triggered.\n\n<code>public int transactionIsolation;</code>\n\nShould this variable be declared to default to -1?\n\nThanks,\n\nAndy.\n", "labels": ["bug"]}, {"created": "2014-11-07 15:46:24", "commits": {"5880aac801d9a8f17e641b3e98a2d50ef154a720": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "2fdf51516451a5e7eb99f34a5d6ebae1fdaa808e": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.util.PropertyBeanSetter.setTargetFromProperties(java.lang.Object,java.util.Properties)"], "closed": "2014-11-08 04:04:37", "filteredCommits": ["5880aac801d9a8f17e641b3e98a2d50ef154a720"], "commitsDetails": [{"nameRev": "5880aac801d9a8f17e641b3e98a2d50ef154a720 tags/HikariCP-2.2.5~25", "commitMessage": "Fix #183 use propertyNames() enumeration to ensure picking up default properties.\n", "commitParents": ["5b6d846a3c9a0e6d8f256c072ea41c89f11c6aec"], "spoonStatsSkippedReason": "", "commitHash": "5880aac801d9a8f17e641b3e98a2d50ef154a720", "authoredDateTime": "2014-11-08 16:07:09", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 5, "deletions": 1, "lines": 6, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/util/PropertyBeanSetter.java"}, {"insertions": 5, "deletions": 1, "lines": 6, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/util/PropertyBeanSetter.java"}], "commitDateTime": "2014-11-08 16:07:09", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 1, "INS": 3, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.PropertyBeanSetter.setTargetFromProperties(java.lang.Object,java.util.Properties)"}], "spoonFilePath": "PropertyBeanSetter.java"}]}, {"nameRev": "2fdf51516451a5e7eb99f34a5d6ebae1fdaa808e tags/HikariCP-2.2.5~27", "commitMessage": "Fix #183 use propertyNames() enumeration to ensure picking up default properties.\n", "commitParents": ["6758ae4447e0d87de5ea65731d66bf8b8e45f0bc"], "spoonStatsSkippedReason": "", "commitHash": "2fdf51516451a5e7eb99f34a5d6ebae1fdaa808e", "authoredDateTime": "2014-11-08 13:04:32", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 5, "deletions": 4, "lines": 9, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/util/PropertyBeanSetter.java"}, {"insertions": 5, "deletions": 4, "lines": 9, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/util/PropertyBeanSetter.java"}], "commitDateTime": "2014-11-08 13:04:32", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 6, "TOT": 16, "MOV": 7, "INS": 2, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.util.PropertyBeanSetter.setTargetFromProperties(java.lang.Object,java.util.Properties)"}], "spoonFilePath": "PropertyBeanSetter.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/183", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 10, "deletions": 2, "lines": 12, "gitFilesChange": 2}, "title": "Wrong Properties iteration in PropertyBeanSetter", "statsSkippedReason": "", "user": "mauromol", "changesInPackagesGIT": ["hikaricp-java6/src/main/java/com/zaxxer/hikari/util", "hikaricp/src/main/java/com/zaxxer/hikari/util"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 4, "MOV": 1, "INS": 3, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "In `com.zaxxer.hikari.util.PropertyBeanSetter.setTargetFromProperties(Object, Properties)` you're using `java.util.Hashtable.entrySet()` to iterate over properties, but you should rather use `java.util.Properties.propertyNames()` or `java.util.Properties.stringPropertyNames()`, otherwise you will lose default properties specified at construction time with `java.util.Properties.Properties(Properties)`. This also applies to `com.zaxxer.hikari.util.PropertyBeanSetter.copyProperties(Properties)`, which uses `java.util.Hashtable.keySet()`.\n", "labels": ["bug"]}, {"created": "2014-11-07 11:10:44", "user": "jacy", "body": "Hikari version: HikariCP-java6  2.2.4\nJava version: \"1.6.0_24\"\n\nGot error:\nCould not instantiate bean class [com.zaxxer.hikari.HikariDataSource]: Constructor threw exception; nested exception is java.lang.NoSuchMethodError: java.sql.Connection.getNetworkTimeout()\n\nIf switch to java7, it is working..\n", "closed": "2014-11-07 12:10:56", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/182", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "Could not instantiate bean class [com.zaxxer.hikari.HikariDataSource]: Constructor threw exception; nested exception is java.lang.NoSuchMethodError: java.sql.Connection.getNetworkTimeout()I"}, {"created": "2014-10-14 21:07:27", "user": "uwewolfrath", "body": "Hi,\nwe switched to HikariCP-java6-2.0.1.jar from BoneCP and first tests worked fine. Now we get the following exception at the end of a session:\n\nError occured, java.lang.NoSuchMethodError: com.zaxxer.hikari.proxy.IHikariConnectionProxy.abort(Ljava/util/concurrent/Executor;)V\n  com.zaxxer.hikari.pool.HikariPool.abortActiveConnections(HikariPool.java:486)\n  com.zaxxer.hikari.pool.HikariPool.shutdown(HikariPool.java:250)\n  com.zaxxer.hikari.HikariDataSource.shutdownHelper(HikariDataSource.java:256)\n  com.zaxxer.hikari.HikariDataSource.shutdown(HikariDataSource.java:238)\n  com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:223)\n\nA short glimpse at the code base reveals, that method abortActiveConnections in HikariPool.java uses method \"abort\" in Connection, which is, according to the java docs, introduced in Java 7.\n\nGreetings\nUwe\n", "closed": "2014-10-14 22:59:07", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/161", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "java.lang.NoSuchMethodError"}, {"created": "2014-09-26 21:46:01", "commits": {"3b7095b4778598b36141e6ce9777afe1ee3bbf30": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}, "66c63a13db7ce53fb0e2dd897db7ff6421dea3b8": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 2, "changesInPackagesSPOON": ["com.zaxxer.hikari.util.ConcurrentBag.borrow(long,java.util.concurrent.TimeUnit)", "com.zaxxer.hikari.util.ConcurrentBag.requite(com.zaxxer.hikari.util.ConcurrentBag$BagEntry)", "com.zaxxer.hikari.util.ConcurrentBag", "com.zaxxer.hikari.util.ConcurrentBag.1", "com.zaxxer.hikari.util.ConcurrentBag.Synchronizer", "com.zaxxer.hikari.util.ConcurrentBag.1.initialValue()"], "closed": "2014-09-27 13:29:36", "filteredCommits": ["66c63a13db7ce53fb0e2dd897db7ff6421dea3b8", "3b7095b4778598b36141e6ce9777afe1ee3bbf30"], "commitsDetails": [{"nameRev": "3b7095b4778598b36141e6ce9777afe1ee3bbf30 tags/HikariCP-2.1.0~19", "commitMessage": "Fixed #148 revert to using LinkedList rather than FastList in ConcurrentBag due to Tomcat leak detection.\n", "commitParents": ["fd156489794dbc4c2ec803db39336265348b9c4f"], "spoonStatsSkippedReason": "", "commitHash": "3b7095b4778598b36141e6ce9777afe1ee3bbf30", "authoredDateTime": "2014-09-27 22:29:30", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 6, "deletions": 5, "lines": 11, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/util/ConcurrentBag.java"}, {"insertions": 6, "deletions": 5, "lines": 11, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/util/ConcurrentBag.java"}], "commitDateTime": "2014-09-27 22:29:30", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag.1"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag.borrow(long,java.util.concurrent.TimeUnit)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag.1.initialValue()"}], "spoonFilePath": "ConcurrentBag.java"}]}, {"nameRev": "66c63a13db7ce53fb0e2dd897db7ff6421dea3b8 tags/HikariCP-2.1.0~17", "commitMessage": "Fixed #148 remove static ThreadLocal, causes a regression with multiple-pools.\n", "commitParents": ["aea005d4ea9c6f525ecd74f1e1f0794f7c7be8e9"], "spoonStatsSkippedReason": "", "commitHash": "66c63a13db7ce53fb0e2dd897db7ff6421dea3b8", "authoredDateTime": "2014-09-28 13:30:02", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 17, "deletions": 16, "lines": 33, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/util/ConcurrentBag.java"}, {"insertions": 17, "deletions": 16, "lines": 33, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/util/ConcurrentBag.java"}], "commitDateTime": "2014-09-28 13:30:02", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 0, "INS": 2, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag.Synchronizer"}, {"UPD": 0, "TOT": 3, "MOV": 1, "INS": 2, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag.borrow(long,java.util.concurrent.TimeUnit)"}, {"UPD": 0, "TOT": 6, "MOV": 2, "INS": 3, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag.requite(com.zaxxer.hikari.util.ConcurrentBag$BagEntry)"}], "spoonFilePath": "ConcurrentBag.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/148", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 46, "deletions": 42, "lines": 88, "gitFilesChange": 2}, "title": "Possible memory leak due to usage of ThreadLocals", "statsSkippedReason": "", "user": "arpol1993", "changesInPackagesGIT": ["hikaricp-java6/src/main/java/com/zaxxer/hikari/util", "hikaricp/src/main/java/com/zaxxer/hikari/util"], "spoonStatsSummary": {"UPD": 4, "spoonMethodsChanged": 6, "TOT": 18, "MOV": 3, "INS": 8, "DEL": 3, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I am using HikariCP 2.0.1 with Tomcat 8.0.12. The latter keeps complaining about non-cleared ConcurrentBag threadlocal:\n\n27-Sep-2014 00:14:49.001 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoader.checkThreadLocalMapForLeaks The web application [/medex] created a ThreadLocal with key of type [java.lang.ThreadLocal](value [java.lang.ThreadLocal@4437ca25]) and a value of type [com.zaxxer.hikari.util.FastList](value [com.zaxxer.hikari.util.FastList@62b24a7b]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\n\nConcurrentBag uses FastList threadlocal but never removes it. Consequently, this thread cannot be processed by garbage collector.\n\nThe easiest and most obvious fix is to provide some shutdown hook for ConcurrentBag allowing to remove it's threadlocal and then use it in pool shutdown routine. As ConcurrentBag will get \"corrupted\" after shutdown call, it makes sense to track it's state in some property and throw IllegalStateException on subsequent attempts to use this concurrent bag (if necessary).\n\nBest regards, Arthur\n", "labels": ["bug"]}, {"created": "2014-09-15 16:12:44", "user": "jnehlmeier", "body": "Hi,\n\nI am using Postgres with 9.3-1102 JDBC driver and it seems like HikariCP does not honor the database name when using the dev branch. The latest release 2.0.1 works fine.\n\nI tried it both with setting datasource name (PGSimpleDataSource) and using a JDBC connection string. In both cases HikariCP connects to some default (seems like it is the first db on the server) database.\n\nNot sure if that is a known problem because dev branch isn't stable right now, but I thought I better tell you just to be sure.\n", "closed": "2014-09-29 13:39:20", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/143", "ttf": 13.000277777777777, "commits": {}, "labels": ["bug"], "title": "dev branch does not honor databaseName"}, {"created": "2014-09-05 18:01:42", "user": "diwakergupta", "body": "Example at https://github.com/brettwooldridge/HikariCP/wiki/JMX-Monitoring#programmatic-access reads:\n\n``` java\nMBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n   ObjectName poolName = new ObjectName(\"com.zaxxer.hikari.pool:type=Pool (foo)\");\n   Integer idleConnections = (Integer) mBeanServer.getAttribute(poolName, \"IdleConnections\");\n```\n\nThe ObjectName should be `com.zaxxer.hikari:type=Pool (foo)` not `com.zaxxer.hikari.pool:type=Pool (foo)`\n", "closed": "2014-09-05 23:51:52", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/139", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "Code fragment on JMX monitoring page incorrect"}, {"created": "2014-08-21 15:04:44", "commits": {"aff5c8ef9c550d1be1d2b41d3fb76b75234fc760": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.util.PoolUtilities.getTransactionIsolation(java.lang.String)", "com.zaxxer.hikari.HikariConfig.getTransactionIsolation()", "com.zaxxer.hikari.HikariConfig", "com.zaxxer.hikari.pool.HikariPool", "com.zaxxer.hikari.HikariConfig.validate()"], "closed": "2014-08-22 07:16:23", "filteredCommits": ["aff5c8ef9c550d1be1d2b41d3fb76b75234fc760"], "commitsDetails": [{"nameRev": "aff5c8ef9c550d1be1d2b41d3fb76b75234fc760 tags/HikariCP-2.1.0~33", "commitMessage": "Fix issue #135 make get/setTransactionIsolation() fit proper bean pattern.\n", "commitParents": ["01d811924495745178284438b761d8a7069de443"], "spoonStatsSkippedReason": "", "commitHash": "aff5c8ef9c550d1be1d2b41d3fb76b75234fc760", "authoredDateTime": "2014-08-22 16:14:44", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 1, "lines": 4, "filePath": "hikaricp/src/test/java/com/zaxxer/hikari/ConnectionStateTest.java"}, {"insertions": 16, "deletions": 0, "lines": 16, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/util/PoolUtilities.java"}, {"insertions": 4, "deletions": 12, "lines": 16, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/HikariConfig.java"}, {"insertions": 2, "deletions": 1, "lines": 3, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 16, "deletions": 0, "lines": 16, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/util/PoolUtilities.java"}, {"insertions": 2, "deletions": 1, "lines": 3, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 3, "deletions": 1, "lines": 4, "filePath": "hikaricp-java6/src/test/java/com/zaxxer/hikari/ConnectionStateTest.java"}, {"insertions": 4, "deletions": 12, "lines": 16, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/HikariConfig.java"}], "commitDateTime": "2014-08-22 16:14:44", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool"}], "spoonFilePath": "HikariPool.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.ConnectionStateTest.testIsolation()"}], "spoonFilePath": "ConnectionStateTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariConfig.getTransactionIsolation()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.HikariConfig"}, {"UPD": 0, "TOT": 4, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariConfig.validate()"}], "spoonFilePath": "HikariConfig.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.PoolUtilities.getTransactionIsolation(java.lang.String)"}], "spoonFilePath": "PoolUtilities.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/135", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 44, "deletions": 26, "lines": 70, "gitFilesChange": 6}, "title": "Setting transactionIsolation level in HikariCP configuration", "statsSkippedReason": "", "user": "PriyaSodexo", "changesInPackagesGIT": ["hikaricp-java6/src/main/java/com/zaxxer/hikari", "hikaricp-java6/src/main/java/com/zaxxer/hikari/pool", "hikaricp/src/main/java/com/zaxxer/hikari/util", "hikaricp/src/main/java/com/zaxxer/hikari/pool", "hikaricp-java6/src/main/java/com/zaxxer/hikari/util", "hikaricp/src/main/java/com/zaxxer/hikari"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 5, "TOT": 11, "MOV": 3, "INS": 3, "DEL": 4, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hello,\nI have the following configuration\n\n```\n<property name=\"idleTimeout\" value = \"3600000\" />\n<property name=\"maximumPoolSize\" value = \"10\" />\n<property name=\"connectionTestQuery\" value=\"SELECT 1 from dual\" />\n<property name=\"maxLifetime\" value=\"1800000\" />\n<property name=\"transactionIsolation\" value=\"TRANSACTION_READ_COMMITTED\" />\n```\n\nfor which I get the exception given below:\n\nInitialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'int' for property 'transactionIsolation'; nested exception is java.lang.NumberFormatException: For input string: \"TRANSACTION_READ_COMMITTED\"\n\nso i tried this:\n\n```\n <property name=\"transactionIsolation\" value=\"2\" />\n```\n\nAnd this still throws an exception as shown below \nProperty 'transactionIsolation' threw exception; nested exception is java.lang.IllegalArgumentException: argument type mismatch\n\nCan someone pls help. Thanks in advance, Priya\n", "labels": ["bug"]}, {"created": "2014-07-30 18:13:08", "commits": {"281c2872880bd67e294fc8cc41bffb89857a9c66": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "closed": "2014-07-31 06:05:16", "filteredCommits": ["281c2872880bd67e294fc8cc41bffb89857a9c66"], "commitsDetails": [{"nameRev": "281c2872880bd67e294fc8cc41bffb89857a9c66 tags/HikariCP-2.1.0~59", "commitMessage": "Fix #128 fix accounting issue with totalConnections when aborting connections during shutdown.\n", "commitParents": ["6b7143fb3e95aff2142921b68aa94b78823ffd6e"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "281c2872880bd67e294fc8cc41bffb89857a9c66", "authoredDateTime": "2014-07-31 15:05:10", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 184, "deletions": 157, "lines": 341, "filePath": "hikaricp-java6/src/test/java/com/zaxxer/hikari/ShutdownTest.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "hikaricp/src/test/java/com/zaxxer/hikari/mocks/StubConnection.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "hikaricp-java6/src/test/java/com/zaxxer/hikari/mocks/StubConnection.java"}, {"insertions": 184, "deletions": 157, "lines": 341, "filePath": "hikaricp/src/test/java/com/zaxxer/hikari/ShutdownTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}], "commitDateTime": "2014-07-31 15:05:10", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": []}], "url": "https://github.com/brettwooldridge/HikariCP/issues/128", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 2}, "title": "Possible Race Condition on Shutdown", "statsSkippedReason": "", "user": "dharrigan", "changesInPackagesGIT": ["hikaricp/src/main/java/com/zaxxer/hikari/pool", "hikaricp-java6/src/main/java/com/zaxxer/hikari/pool"], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi,\n\nContinuing on from the forums, thought I might as well open an issue for tracking purposes. \n\nI'm seeing this now and again when I shutdown (ctrl+c) my Spring application (using HikariCP as the datasource provider):\n\n```\n[2014-07-30 18:06:55.004][               ][DEVELOPMENT][WARN ][com.zaxxer.hikari.pool.HikariPool       ][279 ] - Internal accounting inconsistency, totalConnections=-2\njava.lang.Exception: null\n    at com.zaxxer.hikari.pool.HikariPool.closeConnection(HikariPool.java:279) [HikariCP-2.0.1.jar:na]\n    at com.zaxxer.hikari.pool.HikariPool.releaseConnection(HikariPool.java:221) [HikariCP-2.0.1.jar:na]\n    at com.zaxxer.hikari.proxy.ConnectionProxy.close(ConnectionProxy.java:343) [HikariCP-2.0.1.jar:na]\n    at com.zaxxer.hikari.util.PoolUtilities.quietlyCloseConnection(PoolUtilities.java:18) [HikariCP-2.0.1.jar:na]\n    at com.zaxxer.hikari.pool.HikariPool.lambda$abortActiveConnections$5(HikariPool.java:478) [HikariCP-2.0.1.jar:na]\n    at com.zaxxer.hikari.pool.HikariPool$$Lambda$63/633170599.accept(Unknown Source) [HikariCP-2.0.1.jar:na]\n    at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [na:1.8.0_11]\n    at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1359) [na:1.8.0_11]\n    at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:512) [na:1.8.0_11]\n    at java.util.stream.ForEachOps$ForEachTask.compute(ForEachOps.java:290) [na:1.8.0_11]\n    at java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731) [na:1.8.0_11]\n    at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289) [na:1.8.0_11]\n    at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:902) [na:1.8.0_11]\n    at java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1689) [na:1.8.0_11]\n    at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1644) [na:1.8.0_11]\n    at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157) [na:1.8.0_11]\n[2014-07-30 18:06:55.007][               ][DEVELOPMENT][INFO ][o.s.s.concurrent.ThreadPoolTaskScheduler][203 ] - Shutting down ExecutorService 'taskScheduler'\n```\n\nComments from Brett suggest that this could be a race condition.\n\nhttps://groups.google.com/forum/?hl=en-GB#!topic/hikari-cp/Dfpn8iaZxkA\n\n-=david=-\n", "labels": ["bug"]}, {"created": "2014-07-29 20:06:17", "commits": {"22f86cce82ebaf3f27396ce05595cd72369a3eba": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.HikariPool.abortActiveConnections()", "com.zaxxer.hikari.pool.HikariPool.closeIdleConnections()", "com.zaxxer.hikari.pool.HikariPool.getIdleConnections()", "com.zaxxer.hikari.pool.HikariPool.HouseKeeper.run()"], "closed": "2014-07-30 00:52:52", "filteredCommits": ["22f86cce82ebaf3f27396ce05595cd72369a3eba"], "commitsDetails": [{"nameRev": "22f86cce82ebaf3f27396ce05595cd72369a3eba tags/HikariCP-2.0.1~1", "commitMessage": "Fix #125 add java version check around ScheduledThreadPoolExecutor.setRemoveOnCancelPolicy() for Java 6.\n", "commitParents": ["5e75b12a992081f413c6196ac67fdf1c1fa7fe6d"], "spoonStatsSkippedReason": "", "commitHash": "22f86cce82ebaf3f27396ce05595cd72369a3eba", "authoredDateTime": "2014-07-30 09:52:50", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "CHANGES"}, {"insertions": 13, "deletions": 8, "lines": 21, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 6, "deletions": 4, "lines": 10, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}], "commitDateTime": "2014-07-30 09:52:50", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.closeIdleConnections()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.HouseKeeper.run()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.getIdleConnections()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.abortActiveConnections()"}], "spoonFilePath": "HikariPool.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/125", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 19, "deletions": 12, "lines": 31, "gitFilesChange": 2}, "title": "hikari-java6: NoSuchMethodError ScheduledThreadPoolExecutor.setRemoveOnCancelPolicy", "statsSkippedReason": "", "user": "manikantag", "changesInPackagesGIT": ["hikaricp/src/main/java/com/zaxxer/hikari/pool", "hikaricp-java6/src/main/java/com/zaxxer/hikari/pool"], "spoonStatsSummary": {"UPD": 4, "spoonMethodsChanged": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi, \n\nI've upgraded from 1.40 to hikari-java6 2.0.0, and I m getting below exception at server start up:\n\n```\n    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:328)\n    ... 25 more\nCaused by: org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [com.zaxxer.hikari.HikariDataSource]: Constructor threw exception; nested exception is java.lang.NoSuchMethodError: java.util.concurrent.ScheduledThreadPoolExecutor.setRemoveOnCancelPolicy(Z)V\n    at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:164)\n    at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:125)\n    at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:270)\n    ... 34 more\nCaused by: java.lang.NoSuchMethodError: java.util.concurrent.ScheduledThreadPoolExecutor.setRemoveOnCancelPolicy(Z)V\n    at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:146)\n    at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:99)\n    at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:513)\n    at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148)\n```\n\nThis method is not available in Java 6, it is only present from Java 7 ([comparison between JDK_7 and JDK_6](http://kdt.users.sourceforge.net/java/japi/JDK_6-JDK_7.html))\n\nIs there anything I should be knowing? or this needs some fix? Similar issue reported [here](https://github.com/almende/eve/issues/35)\n\n_I m using Hikari from last 4-5 months and I m very much pleased with the direction it is heading._\n\nThanks.\n", "labels": ["bug"]}, {"created": "2014-07-28 08:08:56", "user": "chenleijava", "body": "hello\uff0cMy English is poor\uff0cI do not know if Clears ,using hikaricp1.4.0 appears bug,  normal use druid connection pool.\n\n![1](https://cloud.githubusercontent.com/assets/3043963/3717897/23b1d4ae-162e-11e4-8ba8-59d9b4c89036.png)\n\nhiariCP config :\n\n ###################HikariDataSource#############################################\nhikaricp.jdbc.driverClassName=com.mysql.jdbc.Driver\n# hikaricp.url= jdbc:mysql://115.28.134.193:3306/gameServer40?useUnicode=true&amp;characterEncoding=UTF-8\n\nhikaricp.url= jdbc:mysql://127.0.0.1:3306/gameServer40?useUnicode=true&amp;characterEncoding=UTF-8\nhikaricp.quratz_jdbc.url=jdbc:mysql://127.0.0.1:3306/quartz?useUnicode=true&amp;characterEncoding=UTF-8\nhikaricp.username=root\n# hikaricp.jdbc.driverClassName.pgsql=org.postgresql.Driver\n# hikaricp.url.pgsql=jdbc:postgresql:gameServer\n# hikaricp.quratz_jdbc.url.pgsql=jdbc:postgresql://localhost:5432//quartz?useUnicode=true&amp;characterEncoding=UTF-8\n# hikaricp.username.pgsql=postgres\n\nhikaricp.password=123456\nhikaricp.connectionTestQuery= SELECT 1\nhikaricp.connectionTimeout =    30000\nhikaricp.idleTimeout =  600000\nhikaricp.maxLifetime =  1800000\n# \u6c60\u8fde\u63a5\u6570\u91cf\n\nhikaricp.maximumPoolSize  =100\nhikaricp.minimumIdle =100\n", "closed": "2014-07-28 10:26:13", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/123", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "hikariCP exception"}, {"created": "2014-07-24 17:39:44", "user": "garneke", "body": "The ConnectionJavassistProxy is calling abort on my H2 database connection.  The abort() method was not introduced until java 7 and is not implemented by H2's jdbc driver.  The HikariCP shutdown is throwing a AbstractMethodError because the method does not exist. \n\nAre there any workarounds for this? \n", "closed": "2014-07-24 23:56:03", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/119", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "HikariDataSource shutdown throws AbstractMethodError ( H2 database )"}, {"created": "2014-07-23 01:22:07", "commits": {"f4c86f8f40108a3e53bcb01a922ac569f705a42d": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.HikariDataSource.isWrapperFor(java.lang.Class)", "com.zaxxer.hikari.proxy.StatementProxy.unwrap(java.lang.Class)", "com.zaxxer.hikari.proxy.ConnectionProxy.unwrap(java.lang.Class)", "com.zaxxer.hikari.HikariDataSource.unwrap(java.lang.Class)", "com.zaxxer.hikari.proxy.ConnectionProxy.isWrapperFor(java.lang.Class)"], "closed": "2014-07-23 02:44:40", "filteredCommits": ["f4c86f8f40108a3e53bcb01a922ac569f705a42d"], "commitsDetails": [{"nameRev": "f4c86f8f40108a3e53bcb01a922ac569f705a42d tags/HikariCP-2.0.0~9", "commitMessage": "Fix #116 recursively call isWrapperFor() and unwrap() per spec\n", "commitParents": ["1753195d9f9fe84f95866de7bdbf5337cbdd864f"], "spoonStatsSkippedReason": "", "commitHash": "f4c86f8f40108a3e53bcb01a922ac569f705a42d", "authoredDateTime": "2014-07-23 11:44:13", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 5, "deletions": 1, "lines": 6, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/proxy/ConnectionProxy.java"}, {"insertions": 19, "deletions": 4, "lines": 23, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/HikariDataSource.java"}, {"insertions": 5, "deletions": 1, "lines": 6, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/proxy/StatementProxy.java"}, {"insertions": 5, "deletions": 1, "lines": 6, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/proxy/ConnectionProxy.java"}, {"insertions": 19, "deletions": 4, "lines": 23, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/HikariDataSource.java"}, {"insertions": 5, "deletions": 1, "lines": 6, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/proxy/StatementProxy.java"}], "commitDateTime": "2014-07-23 11:44:13", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.proxy.ConnectionProxy.isWrapperFor(java.lang.Class)"}, {"UPD": 0, "TOT": 4, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.proxy.ConnectionProxy.unwrap(java.lang.Class)"}], "spoonFilePath": "ConnectionProxy.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 5, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.proxy.StatementProxy.unwrap(java.lang.Class)"}], "spoonFilePath": "StatementProxy.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 7, "MOV": 3, "INS": 2, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource.isWrapperFor(java.lang.Class)"}, {"UPD": 2, "TOT": 8, "MOV": 4, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource.unwrap(java.lang.Class)"}], "spoonFilePath": "HikariDataSource.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/116", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 58, "deletions": 12, "lines": 70, "gitFilesChange": 6}, "title": "ConnectionProxy.unwrap not meeting its contract", "statsSkippedReason": "", "user": "daviderickson", "changesInPackagesGIT": ["hikaricp/src/main/java/com/zaxxer/hikari", "hikaricp-java6/src/main/java/com/zaxxer/hikari/proxy", "hikaricp-java6/src/main/java/com/zaxxer/hikari", "hikaricp/src/main/java/com/zaxxer/hikari/proxy"], "spoonStatsSummary": {"UPD": 4, "spoonMethodsChanged": 5, "TOT": 26, "MOV": 12, "INS": 6, "DEL": 4, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi Brett-\nI am trying to use Connection.unwrap with your pool, and I've noticed what looks like a bug in the code.  The contract for the interface method states that if the object being wrapped matches the passed in interface it should return it, otherwise it should recursively call unwrap until a matching interface is found or there is nothing left to unwrap.  The current implementation of the method only checks one layer deep, and does not recursively call unwrap.  This is a problem for us when we layer in something like log4jdbc below the connection pool, but still need to operate on methods specific to our DB connection.\n\nThanks!\n", "labels": ["bug"]}, {"created": "2014-07-21 16:56:43", "commits": {"1753195d9f9fe84f95866de7bdbf5337cbdd864f": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "907313c69fa83ec31672d391b28a3dfa1c205984": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2014-07-22 05:10:53", "filteredCommits": ["1753195d9f9fe84f95866de7bdbf5337cbdd864f"], "commitsDetails": [{"nameRev": "1753195d9f9fe84f95866de7bdbf5337cbdd864f tags/HikariCP-2.0.0~10", "commitMessage": "Fix #115 do not call addBagItem() from housekeeping thread if minimumIdle is 0.\n", "commitParents": ["907313c69fa83ec31672d391b28a3dfa1c205984"], "spoonStatsSkippedReason": "", "commitHash": "1753195d9f9fe84f95866de7bdbf5337cbdd864f", "authoredDateTime": "2014-07-22 14:11:58", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 0, "lines": 3, "filePath": "CHANGES"}], "commitDateTime": "2014-07-22 14:11:58", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": []}, {"nameRev": "907313c69fa83ec31672d391b28a3dfa1c205984 tags/HikariCP-2.0.0~11", "commitMessage": "Fix #115 do not call addBagItem() from housekeeping thread if minimumIdle is 0.\n", "commitParents": ["97666c00868b66e39bce8680d6da7407c613ead5"], "spoonStatsSkippedReason": "", "commitHash": "907313c69fa83ec31672d391b28a3dfa1c205984", "authoredDateTime": "2014-07-22 14:10:30", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 3, "deletions": 1, "lines": 4, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 3, "deletions": 1, "lines": 4, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}], "commitDateTime": "2014-07-22 14:10:30", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.HouseKeeper.run()"}], "spoonFilePath": "HikariPool.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/115", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "minimumIdle=0 means no limit?", "statsSkippedReason": "", "user": "djj0809", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 0, "TOT": 0.0, "MOV": 0.0, "INS": 0.0, "DEL": 0.0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I just want to obtain `HikariDataSource` with no connections initially as backup datasources,  but I found that it still reach `maximumPoolSize` after a while when I never invoke `getConnection()` on this dataSource.\nThen I found this piece of code: \n\n``` java\n   @Override\n   public void addBagItem()\n   {\n      class AddConnection implements Runnable\n      {\n         public void run()\n         {\n            long sleepBackoff = 200L;\n            final int maxPoolSize = configuration.getMaximumPoolSize();\n            final int minIdle = configuration.getMinimumIdle();\n            while (!isShutdown && totalConnections.get() < maxPoolSize && (minIdle == 0 || getIdleConnections() < minIdle)) {  \n               if (!addConnection()) {\n                  quietlySleep(sleepBackoff);\n                  sleepBackoff = Math.min(1000L, (long) ((double) sleepBackoff * 1.5));\n                  continue;\n               }\n\n               if (minIdle == 0) {\n                  break; // This break is here so we only add one connection when there is no min. idle\n               }\n            }\n         }\n      }\n\n      addConnectionExecutor.submit(new AddConnection());\n   }\n```\n\nIt seems the house keeper thread create one connection each time when minIdle==0, until reach maxPoolSize...\n\nI am wondering why doing things like that? Can we just do nothing when minIdle==0?\n", "labels": ["bug"]}, {"created": "2014-07-13 20:21:46", "user": "iKeirNez", "body": "I'm getting this error when calling HikariDataSource.close()\n\nhttp://pastebin.com/P2pXR2hZ\n\nI attempted to look into it myself but couldn't. I'm using mysql with the mysql connector version 5.1.31.\n\nThanks!\n", "closed": "2014-07-13 22:50:38", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/111", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "Error when shutting down"}, {"created": "2014-07-11 22:02:08", "user": "mantesat", "body": "Hi all, Brett,\n\nI'm using HikariCP for the past month, transitioning from BoneCP to remedy some leak connection problems. I'm using Hikari with Postgresql, Spring and Hibernate, and I'm printing some MBean statistics  about the active/idle connections. As reported by Hikari pool MBean, active connections slowly but steadily increase. However, when running \n\nselect query, state, state_change from pg_stat_activity\n\nto the postgresql, all connections are reported as idle.\n\nI'm sure that when the active connections reach the max pool size, the application will freeze. Which one reports the correct status of the connections, Hikari or postgresql? Is there a way to see which query is running on the active connections from Hikari?\n\nThanks in advance\nmantesat, Greece\n", "closed": "2014-07-14 22:47:22", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/109", "ttf": 3.000277777777778, "commits": {}, "labels": ["bug"], "title": "HikariCP and active connections in Postgresql"}, {"created": "2014-07-10 15:28:05", "commits": {"19eaea93aa657ebc412874115ff1795d8a789fb3": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.util.FastList", "com.zaxxer.hikari.util.FastList.add(java.lang.Object)"], "closed": "2014-07-11 01:01:08", "filteredCommits": ["19eaea93aa657ebc412874115ff1795d8a789fb3"], "commitsDetails": [{"nameRev": "19eaea93aa657ebc412874115ff1795d8a789fb3 tags/HikariCP-2.0.0~21", "commitMessage": "Fix #107 when we grow the original array, use the same Class that was specified during construction.\n", "commitParents": ["5b5841e616092cc6a71295e0df03001bea4dd99f"], "spoonStatsSkippedReason": "", "commitHash": "19eaea93aa657ebc412874115ff1795d8a789fb3", "authoredDateTime": "2014-07-11 09:56:54", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 27, "deletions": 0, "lines": 27, "filePath": "hikaricp-java6/src/test/java/com/zaxxer/hikari/TestFastList.java"}, {"insertions": 27, "deletions": 0, "lines": 27, "filePath": "hikaricp/src/test/java/com/zaxxer/hikari/TestFastList.java"}, {"insertions": 4, "deletions": 1, "lines": 5, "filePath": "hikaricp/src/main/java/com/zaxxer/hikari/util/FastList.java"}, {"insertions": 4, "deletions": 1, "lines": 5, "filePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/util/FastList.java"}], "commitDateTime": "2014-07-11 09:56:54", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.FastList"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.util.FastList.add(java.lang.Object)"}], "spoonFilePath": "FastList.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.TestFastList.testPolyMorphism1()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.TestFastList"}], "spoonFilePath": "TestFastList.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/107", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 8, "deletions": 2, "lines": 10, "gitFilesChange": 2}, "title": "ArrayStoreException when invoking a CallableStatement", "statsSkippedReason": "", "user": "tydavis76", "changesInPackagesGIT": ["hikaricp-java6/src/main/java/com/zaxxer/hikari/util", "hikaricp/src/main/java/com/zaxxer/hikari/util"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 5, "MOV": 0, "INS": 4, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Encountered a case where a CallableStatement - specifically an instance of CallableStatementJavassistProxy - is being added to a FastList.openStatements lists whose component type is PreparedStatementJavassistProxy. This occurs during a Batch update of hundreds of inserts using PreparedStatements and a single stored-proc call.\n", "labels": ["bug"]}, {"created": "2014-07-07 04:56:43", "user": "JohnMerlino1", "body": "I am testing a little udp server I created. In my test environment, I have a udp client that runs every 30 seconds and it sends  a packet to the server. The server decodes packet and inserts data into postgresql database. There is absolutely no load on this. Yet, sometimes I get this error:\n\njava.sql.SQLException: Timeout of 30000ms encountered waiting for connection\n\nresulting from this code:\n\n```\n    conn = dbPool.getConnection();\n    stmt = conn.createStatement();\n    status = stmt.executeUpdate(sql);\n```\n\ndbPool is simply an abstraction of HikariCp:\n\n```\n    HikariConfig config = new HikariConfig();  \nconfig.setMaximumPoolSize(50);\nconfig.setDataSourceClassName(\"org.postgresql.ds.PGSimpleDataSource\");\nconfig.addDataSourceProperty(\"serverName\", host);\nconfig.addDataSourceProperty(\"databaseName\", database);\nconfig.addDataSourceProperty(\"portNumber\", \"5432\");\nconfig.addDataSourceProperty(\"user\", username);\nconfig.addDataSourceProperty(\"password\", password);\n    ds = new HikariDataSource(config);\n\npublic Connection getConnection()  throws SQLException  \n{  \n    return ds.getConnection();  \n}\n```\n\nWhy am I getting a connection timeout with hikaricp within this light test environment with only one request every 30 seconds?\n", "closed": "2015-03-28 13:16:06", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/104", "ttf": 264.0002777777778, "commits": {}, "labels": ["bug"], "title": "java.sql.SQLException: Timeout of 30000ms encountered waiting for connection"}, {"created": "2014-06-27 15:46:27", "user": "jondavidnd1", "body": "If you use the HikariDataSource(HikariConfig configuration) constructor the first step (configuration.validate()) overrides any pre-configured poolName at line 682 of HikariConfig:\n\npoolName = \"HikariPool-\" + poolNumber++;\n\nThis looks like it should be:\n\nif (poolName == null) {\n    poolName = \"HikariPool-\" + poolNumber++;\n}\n\nI'm using HikariCP 1.4.0\n", "closed": "2014-06-27 22:39:48", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/101", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "PoolName is overriden in HikariConfig.validate()"}, {"created": "2014-05-13 09:23:19", "commits": {"f8afba872d936bb8070874ef6c9431200ab09ce9": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "96a30c2b7d156171e999fb7ac53321e4c79d8a2c": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.HikariPool.releaseConnection(com.zaxxer.hikari.proxy.IHikariConnectionProxy,boolean)", "com.zaxxer.hikari.pool.HikariPool.closeConnection(com.zaxxer.hikari.proxy.IHikariConnectionProxy)", "com.zaxxer.hikari.HikariDataSource.shutdown()", "com.zaxxer.hikari.pool.HikariPool.addConnection()", "com.zaxxer.hikari.pool.HikariPool.toString()", "com.zaxxer.hikari.pool.HikariPool", "com.zaxxer.hikari.pool.HikariPool.abortActiveConnections()", "com.zaxxer.hikari.pool.HikariPool.getConnection()", "com.zaxxer.hikari.util.PoolUtilities.quietlySleep(int)", "com.zaxxer.hikari.util.PoolUtilities", "com.zaxxer.hikari.pool.HikariPool.shutdown()", "com.zaxxer.hikari.mocks.StubConnection", "com.zaxxer.hikari.util.PoolUtilities.createInstance(java.lang.String,java.lang.Class)", "com.zaxxer.hikari.proxy.ConnectionProxy.close()", "com.zaxxer.hikari.pool.HikariPool.initializeCustomizer()", "com.zaxxer.hikari.pool.HikariPool.releaseConnection(com.zaxxer.hikari.proxy.IHikariConnectionProxy)", "com.zaxxer.hikari.util.PoolUtilities.elapsedTimeMs(long)", "com.zaxxer.hikari.HikariConfig"], "closed": "2014-05-14 03:24:19", "filteredCommits": ["96a30c2b7d156171e999fb7ac53321e4c79d8a2c"], "commitsDetails": [{"nameRev": "f8afba872d936bb8070874ef6c9431200ab09ce9 tags/HikariCP-1.3.9~27", "commitMessage": "Merge pull request #77 from johannesherr/dev\n\nFix #76 avoid possible thread leak on shutdown.  Thanks.", "commitParents": ["ed7234793b061e46338e61dad5398338b5785a95", "a89f52c1deb4fbdd00ea2cdea558673965fd3cad"], "spoonStatsSkippedReason": "", "commitHash": "f8afba872d936bb8070874ef6c9431200ab09ce9", "authoredDateTime": "2014-05-14 20:00:34", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 34, "deletions": 0, "lines": 34, "filePath": "src/test/java/com/zaxxer/hikari/ShutdownTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}], "commitDateTime": "2014-05-14 20:00:34", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.ShutdownTest.testShutdown4()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.ShutdownTest.threadCount()"}], "spoonFilePath": "ShutdownTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.addBagItem().1AddConnection.run()"}], "spoonFilePath": "HikariPool.java"}]}, {"nameRev": "96a30c2b7d156171e999fb7ac53321e4c79d8a2c tags/HikariCP-1.3.9~33", "commitMessage": "Fix #76 add more extensive shutdown() code to attempt to close() or abort() all connections in the pool.\n", "commitParents": ["d6e6d14fb290ab87f1f4cc011d869e46a14576a1"], "spoonStatsSkippedReason": "", "commitHash": "96a30c2b7d156171e999fb7ac53321e4c79d8a2c", "authoredDateTime": "2014-05-14 12:24:07", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 2, "deletions": 1, "lines": 3, "filePath": "src/main/java/com/zaxxer/hikari/HikariConfig.java"}, {"insertions": 152, "deletions": 0, "lines": 152, "filePath": "src/test/java/com/zaxxer/hikari/ShutdownTest.java"}, {"insertions": 42, "deletions": 4, "lines": 46, "filePath": "src/main/java/com/zaxxer/hikari/util/PoolUtilities.java"}, {"insertions": 8, "deletions": 0, "lines": 8, "filePath": "src/test/java/com/zaxxer/hikari/mocks/StubConnection.java"}, {"insertions": 21, "deletions": 3, "lines": 24, "filePath": "src/main/java/com/zaxxer/hikari/HikariDataSource.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/zaxxer/hikari/proxy/ConnectionProxy.java"}, {"insertions": 86, "deletions": 30, "lines": 116, "filePath": "src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}], "commitDateTime": "2014-05-14 12:24:07", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.releaseConnection(com.zaxxer.hikari.proxy.IHikariConnectionProxy,boolean)"}, {"UPD": 1, "TOT": 8, "MOV": 3, "INS": 4, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.shutdown()"}, {"UPD": 1, "TOT": 5, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.addConnection()"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.toString()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.initializeCustomizer()"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.abortActiveConnections()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.releaseConnection(com.zaxxer.hikari.proxy.IHikariConnectionProxy)"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 3, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.closeConnection(com.zaxxer.hikari.proxy.IHikariConnectionProxy)"}, {"UPD": 1, "TOT": 4, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.getConnection()"}], "spoonFilePath": "HikariPool.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.mocks.StubConnection"}], "spoonFilePath": "StubConnection.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.proxy.ConnectionProxy.close()"}], "spoonFilePath": "ConnectionProxy.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariConfig"}], "spoonFilePath": "HikariConfig.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 2, "INS": 2, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource.shutdown()"}], "spoonFilePath": "HikariDataSource.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.ShutdownTest"}], "spoonFilePath": "ShutdownTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.PoolUtilities.elapsedTimeMs(long)"}, {"UPD": 0, "TOT": 5, "MOV": 2, "INS": 2, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.util.PoolUtilities.createInstance(java.lang.String,java.lang.Class)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.PoolUtilities.quietlySleep(int)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.PoolUtilities"}], "spoonFilePath": "PoolUtilities.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/76", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 152, "deletions": 39, "lines": 191, "gitFilesChange": 5}, "title": "Connections not closed on Shutdown", "statsSkippedReason": "", "user": "johannesherr", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/pool", "src/main/java/com/zaxxer/hikari/util", "src/main/java/com/zaxxer/hikari", "src/main/java/com/zaxxer/hikari/proxy"], "spoonStatsSummary": {"UPD": 4, "spoonMethodsChanged": 18, "TOT": 47, "MOV": 13, "INS": 24, "DEL": 6, "spoonFilesChanged": 6}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "There seems to be a race condition when a pool is created and immediately shutdown, that leaves connections open.\n\nTested with _HikariCP 1.3.8_ and _\"PostgreSQL 9.3.4, compiled by Visual C++ build 1600, 64-bit\"_. DataSource is `org.postgresql.ds.PGSimpleDataSource`.\n\nTo reproduce create a HikariDataSource and shut it down immediately. Querying the number of open connections afterward `SELECT count(*) FROM pg_stat_activity;` shows 21 (20 is the my configured Hikari pool size). Its sufficient to sleep for a second before shuting down to make the problem go away.\n\n```\nHikariDataSource dataSource = new HikariDataSource(config);\n// Thread.sleep(1_000);  // will make the problem vanish \ndataSource.shutdown();\n// 20 connections left open\n```\n\nThe problem might be in line 354 in `com.zaxxer.hikari.pool.HikariPool`. The method  `closeIdleConnections` as its name indicates closes only idle connections. If one sets a conditional break point on line 355 with the condition `list.size() != connectionBag.size()` one sees the the list of idle connections is empty and the list of connections has size 20. I am not sure what the strategy is for closing 'non-idle' connections on pool shutdown.\n\nTo give some context I run into this problem when a test suite started failing yesterday (too many open connections db error) . The tests of course do not close pools immediately after creating them, that is just for reproduceing the problem. They might however run just a few statements before closing a pool. I am also wondering if a connection might be left open, when it used before the pool is shut down. It might be non-idle at that point?\n\nThanks a lot for your impressing work. Hope this helps.\n", "labels": ["bug"]}, {"created": "2014-05-06 21:18:09", "user": "markwoon", "body": "1.3.8 changed the MBean name from \"com.zaxxer.hikari:type=...\" to \"com.zaxxer.hikari.pool:type=...\" (added \".pool\").\n", "closed": "2014-05-07 00:00:34", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/72", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "JMX Monitoring wiki page out of date"}, {"created": "2014-04-28 19:05:14", "commits": {"301d5f78a280e65c98e6d84522000ca75eaa7d15": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "closed": "2014-04-29 04:07:15", "filteredCommits": ["301d5f78a280e65c98e6d84522000ca75eaa7d15"], "commitsDetails": [{"nameRev": "301d5f78a280e65c98e6d84522000ca75eaa7d15 tags/HikariCP-1.3.9~47", "commitMessage": "Fix #68 correct JavaDoc for HikariConfig.getConnectionTimeout()/setConnectionTimeout().\n", "commitParents": ["f0197a62309564a9e289c6c0ffa5cee593bffda5"], "spoonStatsSkippedReason": "", "commitHash": "301d5f78a280e65c98e6d84522000ca75eaa7d15", "authoredDateTime": "2014-04-29 13:07:08", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 9, "deletions": 11, "lines": 20, "filePath": "src/main/java/com/zaxxer/hikari/HikariConfigMBean.java"}], "commitDateTime": "2014-04-29 13:07:08", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "HikariConfigMBean.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/68", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 9, "deletions": 11, "lines": 20, "gitFilesChange": 1}, "title": "connectionTimeout implementation default different from documentation default", "statsSkippedReason": "", "user": "steventhomson", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari"], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "The documentation says the default `connectionTimeout` is 30000 ms.\nThe implementation actually defaults the `connectionTimeout` to 5000 ms.\n\nAlso, the JavaDoc for `connectionTimeout` is actually the JavaDoc for `connectionTestQuery`\n", "labels": ["bug"]}, {"created": "2014-04-28 12:28:19", "commits": {"22f783067fd07aea65ce9aef06c51f6a25de15e6": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.HikariMBeanElf.registerMBeans(com.zaxxer.hikari.HikariConfig,com.zaxxer.hikari.pool.HikariPool)"], "closed": "2014-04-28 13:57:38", "filteredCommits": ["22f783067fd07aea65ce9aef06c51f6a25de15e6"], "commitsDetails": [{"nameRev": "22f783067fd07aea65ce9aef06c51f6a25de15e6 tags/HikariCP-1.3.9~49", "commitMessage": "Fixed #67 mbean UN-registration\n", "commitParents": ["6dd78cac93b1ab8589bdf116758066a87104a802"], "spoonStatsSkippedReason": "", "commitHash": "22f783067fd07aea65ce9aef06c51f6a25de15e6", "authoredDateTime": "2014-04-28 22:57:32", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/zaxxer/hikari/pool/HikariMBeanElf.java"}], "commitDateTime": "2014-04-28 22:57:32", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariMBeanElf.registerMBeans(com.zaxxer.hikari.HikariConfig,com.zaxxer.hikari.pool.HikariPool)"}], "spoonFilePath": "HikariMBeanElf.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/67", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "MBean Stuff", "statsSkippedReason": "", "user": "dharrigan", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/pool"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi,\n\nNot sure if also related to the previous issue, but on shut-down of the app, I now get get:\n\n```\n[13:22:58.900] [               ] [DEVELOPMENT] [WARN ] [com.zaxxer.hikari.pool.HikariMBeanElf   ] [99  ] - Unable to unregister management beans.\njavax.management.InstanceNotFoundException: com.zaxxer.hikari:type=Pool (corePool)\n    at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1095) ~[na:1.8.0]\n    at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.exclusiveUnregisterMBean(DefaultMBeanServerInterceptor.java:427) ~[na:1.8.0]\n    at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.unregisterMBean(DefaultMBeanServerInterceptor.java:415) ~[na:1.8.0]\n    at com.sun.jmx.mbeanserver.JmxMBeanServer.unregisterMBean(JmxMBeanServer.java:546) ~[na:1.8.0]\n    at com.zaxxer.hikari.pool.HikariMBeanElf.unregisterMBeans(HikariMBeanElf.java:90) ~[HikariCP-1.3.8.jar:na]\n    at com.zaxxer.hikari.pool.HikariPool.shutdown(HikariPool.java:239) [HikariCP-1.3.8.jar:na]\n    at com.zaxxer.hikari.HikariDataSource.shutdown(HikariDataSource.java:225) [HikariCP-1.3.8.jar:na]\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0]\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0]\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0]\n    at java.lang.reflect.Method.invoke(Method.java:483) ~[na:1.8.0]\n    at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:349) [spring-beans-4.0.3.RELEASE.jar:4.0.3.RELEASE]\n```\n\n-=david=-\n", "labels": ["bug"]}, {"created": "2014-04-27 15:17:21", "commits": {"64ca5eefb601d70a9298cf76fbd140cce9d590a0": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.pool.HikariMBeanElf.registerMBeans(com.zaxxer.hikari.HikariConfig,com.zaxxer.hikari.pool.HikariPool)"], "closed": "2014-04-28 02:33:06", "filteredCommits": ["64ca5eefb601d70a9298cf76fbd140cce9d590a0"], "commitsDetails": [{"nameRev": "64ca5eefb601d70a9298cf76fbd140cce9d590a0 tags/HikariCP-1.3.8~1", "commitMessage": "Fixed #66 mbean registration\n", "commitParents": ["4cb3602ad91b2026e12b83e34d8222f715517af5"], "spoonStatsSkippedReason": "", "commitHash": "64ca5eefb601d70a9298cf76fbd140cce9d590a0", "authoredDateTime": "2014-04-28 11:32:55", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 0, "deletions": 1, "lines": 1, "filePath": "src/main/java/com/zaxxer/hikari/pool/HikariPool.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/zaxxer/hikari/pool/HikariMBeanElf.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/zaxxer/hikari/{ => pool}/HikariPoolMBean.java"}, {"insertions": 38, "deletions": 0, "lines": 38, "filePath": "src/test/java/com/zaxxer/hikari/TestMBean.java"}], "commitDateTime": "2014-04-28 11:32:55", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "HikariPool.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariMBeanElf.registerMBeans(com.zaxxer.hikari.HikariConfig,com.zaxxer.hikari.pool.HikariPool)"}], "spoonFilePath": "HikariMBeanElf.java"}, {"spoonMethods": [], "spoonFilePath": "HikariPoolMBean.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.TestMBean"}], "spoonFilePath": "TestMBean.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/66", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 2, "deletions": 3, "lines": 5, "gitFilesChange": 3}, "title": "HikariPool does not implement DynamicMBean", "statsSkippedReason": "", "user": "dharrigan", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/{ => pool}", "src/main/java/com/zaxxer/hikari/pool"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi,\n\nJava 1.8u5\nHikariCP 1.3.7\nSpring 4.0.3.RELEASE\n\nUpgraded from 1.3.6 to 1.3.7 of HikariCP. I now get this exception on startup:\n\n```\n16:12:01.258] [               ] [DEVELOPMENT] [WARN ] [com.zaxxer.hikari.pool.HikariMBeanElf   ] [69  ] - Unable to register management beans.\njavax.management.NotCompliantMBeanException: MBean class com.zaxxer.hikari.pool.HikariPool does not implement DynamicMBean, and neither follows the Standard MBean conventions (javax.management.NotCompliantMBeanException: Class com.zaxxer.hikari.pool.HikariPool is not a JMX compliant Standard MBean) nor the MXBean conventions (javax.management.NotCompliantMBeanException: com.zaxxer.hikari.pool.HikariPool: Class com.zaxxer.hikari.pool.HikariPool is not a JMX compliant MXBean)\n    at com.sun.jmx.mbeanserver.Introspector.checkCompliance(Introspector.java:176) ~[na:1.8.0_05]\n    at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:317) ~[na:1.8.0_05]\n    at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_05]\n    at com.zaxxer.hikari.pool.HikariMBeanElf.registerMBeans(HikariMBeanElf.java:60) ~[HikariCP-1.3.7.jar:na]\n    at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:128) [HikariCP-1.3.7.jar:na]\n    at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:91) [HikariCP-1.3.7.jar:na]\n    at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:69) [HikariCP-1.3.7.jar:na]\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) [na:1.8.0_05]\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) [na:1.8.0_05]\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) [na:1.8.0_05]\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:408) [na:1.8.0_05]\n    at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148) [spring-beans-4.0.3.RELEASE.jar:4.0.3.RELEASE]\n    at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:125) [spring-beans-4.0.3.RELEASE.jar:4.0.3.RELEASE]\n```\n", "labels": ["bug"]}, {"created": "2014-04-24 09:06:57", "commits": {"cfda5e022c3ca104d7748d199d1a76decc2c2fc9": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}, "4cb3602ad91b2026e12b83e34d8222f715517af5": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "262c34c8c9d217d5a621f254fad58fb116fc224a": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "ace19c72a12285cc7a13ef70a1af35d4ea68aa3e": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.HikariPool.logPoolState(java.lang.String[])", "com.zaxxer.hikari.HikariDataSource.shutdown()", "com.zaxxer.hikari.HikariPool.addBagItem().1AddConnection.run()", "com.zaxxer.hikari.proxy.ProxyFactory.getProxyConnection(com.zaxxer.hikari.HikariPool,java.sql.Connection,int,boolean,boolean,java.lang.String)", "com.zaxxer.hikari.pool.HikariPool.shutdown()", "com.zaxxer.hikari.util.PoolUtilities.createInstance(java.lang.String,java.lang.Class)", "com.zaxxer.hikari.HikariPool.initializeDataSource()", "com.zaxxer.hikari.HikariMBeanElf.unregisterMBeans(com.zaxxer.hikari.HikariConfig,com.zaxxer.hikari.HikariPool)", "com.zaxxer.hikari.pool.HikariPool.closeConnection(com.zaxxer.hikari.proxy.IHikariConnectionProxy)", "com.zaxxer.hikari.metrics.CodaHaleMetricsTracker", "com.zaxxer.hikari.HikariPool.getIdleConnections()", "com.zaxxer.hikari.HikariPool.closeConnection(com.zaxxer.hikari.proxy.IHikariConnectionProxy)", "com.zaxxer.hikari.HikariPool.HouseKeeper.run()", "com.zaxxer.hikari.HikariPool.releaseConnection(com.zaxxer.hikari.proxy.IHikariConnectionProxy)", "com.zaxxer.hikari.pool.HikariPool.initializeCustomizer()", "com.zaxxer.hikari.pool.HikariPool.closeIdleConnections()", "com.zaxxer.hikari.HikariDataSource.isWrapperFor(java.lang.Class)", "com.zaxxer.hikari.HikariDataSource.getLogWriter()", "com.zaxxer.hikari.HikariMBeanElf.registerMBeans(com.zaxxer.hikari.HikariConfig,com.zaxxer.hikari.HikariPool)", "com.zaxxer.hikari.HikariDataSource.setLogWriter(java.io.PrintWriter)", "com.zaxxer.hikari.proxy.ConnectionProxy", "com.zaxxer.hikari.HikariPool.getConnection()", "com.zaxxer.hikari.pool.HikariPool", "com.zaxxer.hikari.HikariDataSource.getConnection()", "com.zaxxer.hikari.HikariDataSource", "com.zaxxer.hikari.HikariPool.addBagItem()", "com.zaxxer.hikari.HikariDataSource.unwrap(java.lang.Class)", "com.zaxxer.hikari.RampUpDown.rampUpDownTest()", "com.zaxxer.hikari.HikariPool.addConnection()", "com.zaxxer.hikari.pool.HikariPool.getConnection()", "com.zaxxer.hikari.HikariPool.shutdown()", "com.zaxxer.hikari.HikariConfig.validate()", "com.zaxxer.hikari.HikariPool.fillPool()", "com.zaxxer.hikari.pool.HikariPool.getDataSource()", "com.zaxxer.hikari.HikariPool.closeIdleConnections()", "com.zaxxer.hikari.HikariPool.getThreadsAwaitingConnection()", "com.zaxxer.hikari.HikariPool.getTotalConnections()", "com.zaxxer.hikari.HikariPool.toString()", "com.zaxxer.hikari.HikariDataSource.getConnection(java.lang.String,java.lang.String)", "com.zaxxer.hikari.HikariMBeanElf", "com.zaxxer.hikari.HikariConfig.getConnectionCustomizer()", "com.zaxxer.hikari.HikariPool.isConnectionAlive(com.zaxxer.hikari.proxy.IHikariConnectionProxy,long)", "com.zaxxer.hikari.HikariConfig", "com.zaxxer.hikari.HikariPool.getActiveConnections()", "com.zaxxer.hikari.HikariPool"], "closed": "2014-04-24 23:24:57", "filteredCommits": ["cfda5e022c3ca104d7748d199d1a76decc2c2fc9"], "commitsDetails": [{"nameRev": "cfda5e022c3ca104d7748d199d1a76decc2c2fc9 tags/HikariCP-1.3.8~13", "commitMessage": "This fixes #65 as well as correcting OSGi manifest generation warnings by reorganizing the code and packages somewhat to ensure that the publicly exported com.zaxxer.hikari package does not expose any internal classes.\n", "commitParents": ["62297a0c885e15b400e6bac02656b78f4f0ff7ac"], "spoonStatsSkippedReason": "", "commitHash": "cfda5e022c3ca104d7748d199d1a76decc2c2fc9", "authoredDateTime": "2014-04-25 08:24:47", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/zaxxer/hikari/proxy/ProxyFactory.java"}, {"insertions": 2, "deletions": 9, "lines": 11, "filePath": "src/main/java/com/zaxxer/hikari/HikariConfig.java"}, {"insertions": 7, "deletions": 0, "lines": 7, "filePath": "src/main/java/com/zaxxer/hikari/util/PoolUtilities.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "src/test/java/com/zaxxer/hikari/RampUpDown.java"}, {"insertions": 12, "deletions": 12, "lines": 24, "filePath": "src/test/java/com/zaxxer/hikari/ExceptionTest.java"}, {"insertions": 4, "deletions": 4, "lines": 8, "filePath": "src/test/java/com/zaxxer/hikari/TestConnectionTimeoutRetry.java"}, {"insertions": 4, "deletions": 4, "lines": 8, "filePath": "src/test/java/com/zaxxer/hikari/StatementTest.java"}, {"insertions": 27, "deletions": 0, "lines": 27, "filePath": "src/test/java/com/zaxxer/hikari/TestElf.java"}, {"insertions": 5, "deletions": 1, "lines": 6, "filePath": "pom.xml"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/test/java/com/zaxxer/hikari/UnwrapTest.java"}, {"insertions": 67, "deletions": 35, "lines": 102, "filePath": "src/main/java/com/zaxxer/hikari/{ => pool}/HikariPool.java"}, {"insertions": 3, "deletions": 1, "lines": 4, "filePath": "src/main/java/com/zaxxer/hikari/{ => pool}/HikariMBeanElf.java"}, {"insertions": 13, "deletions": 12, "lines": 25, "filePath": "src/main/java/com/zaxxer/hikari/HikariDataSource.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/zaxxer/hikari/proxy/ConnectionProxy.java"}, {"insertions": 23, "deletions": 23, "lines": 46, "filePath": "src/test/java/com/zaxxer/hikari/TestConnections.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/zaxxer/hikari/metrics/CodaHaleMetricsTracker.java"}], "commitDateTime": "2014-04-25 08:24:47", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 11, "MOV": 2, "INS": 4, "DEL": 3, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource.shutdown()"}, {"UPD": 0, "TOT": 6, "MOV": 2, "INS": 2, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource.setLogWriter(java.io.PrintWriter)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource.getConnection()"}, {"UPD": 3, "TOT": 5, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource"}, {"UPD": 2, "TOT": 5, "MOV": 2, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource.isWrapperFor(java.lang.Class)"}, {"UPD": 1, "TOT": 6, "MOV": 2, "INS": 2, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource.getLogWriter()"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource.getConnection(java.lang.String,java.lang.String)"}, {"UPD": 0, "TOT": 6, "MOV": 2, "INS": 2, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource.unwrap(java.lang.Class)"}], "spoonFilePath": "HikariDataSource.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariMBeanElf.unregisterMBeans(com.zaxxer.hikari.HikariConfig,com.zaxxer.hikari.HikariPool)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariMBeanElf"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariMBeanElf.registerMBeans(com.zaxxer.hikari.HikariConfig,com.zaxxer.hikari.HikariPool)"}], "spoonFilePath": "HikariMBeanElf.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.TestElf"}], "spoonFilePath": "TestElf.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 0, "INS": 3, "DEL": 3, "spoonMethodName": "com.zaxxer.hikari.RampUpDown.rampUpDownTest()"}], "spoonFilePath": "RampUpDown.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 12, "MOV": 0, "INS": 6, "DEL": 6, "spoonMethodName": "com.zaxxer.hikari.TestConnections.testCreate()"}, {"UPD": 0, "TOT": 16, "MOV": 0, "INS": 8, "DEL": 8, "spoonMethodName": "com.zaxxer.hikari.TestConnections.testBackfill()"}, {"UPD": 0, "TOT": 18, "MOV": 0, "INS": 9, "DEL": 9, "spoonMethodName": "com.zaxxer.hikari.TestConnections.testMaxLifetime()"}], "spoonFilePath": "TestConnections.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.UnwrapTest.testUnwrapConnection()"}], "spoonFilePath": "UnwrapTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 8, "MOV": 0, "INS": 4, "DEL": 4, "spoonMethodName": "com.zaxxer.hikari.TestConnectionTimeoutRetry.testConnectionIdleFill()"}], "spoonFilePath": "TestConnectionTimeoutRetry.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.proxy.ConnectionProxy"}], "spoonFilePath": "ConnectionProxy.java"}, {"spoonMethods": [{"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.logPoolState(java.lang.String[])"}, {"UPD": 12, "TOT": 14, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.getConnection()"}, {"UPD": 7, "TOT": 7, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.addBagItem().1AddConnection.run()"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.addBagItem()"}, {"UPD": 27, "TOT": 27, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.addConnection()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.getConnection()"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.getIdleConnections()"}, {"UPD": 31, "TOT": 31, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool"}, {"UPD": 6, "TOT": 6, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.fillPool()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.getDataSource()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.closeConnection(com.zaxxer.hikari.proxy.IHikariConnectionProxy)"}, {"UPD": 10, "TOT": 10, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.shutdown()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.getTotalConnections()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.initializeCustomizer()"}, {"UPD": 0, "TOT": 5, "MOV": 4, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariPool.closeConnection(com.zaxxer.hikari.proxy.IHikariConnectionProxy)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.toString()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.shutdown()"}, {"UPD": 15, "TOT": 17, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.HouseKeeper.run()"}, {"UPD": 12, "TOT": 13, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariPool.initializeDataSource()"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.getThreadsAwaitingConnection()"}, {"UPD": 5, "TOT": 5, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.isConnectionAlive(com.zaxxer.hikari.proxy.IHikariConnectionProxy,long)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.closeIdleConnections()"}, {"UPD": 3, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.closeIdleConnections()"}, {"UPD": 3, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.getActiveConnections()"}, {"UPD": 5, "TOT": 5, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.releaseConnection(com.zaxxer.hikari.proxy.IHikariConnectionProxy)"}], "spoonFilePath": "HikariPool.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 18, "MOV": 6, "INS": 6, "DEL": 6, "spoonMethodName": "com.zaxxer.hikari.ExceptionTest.testException1()"}, {"UPD": 0, "TOT": 12, "MOV": 0, "INS": 6, "DEL": 6, "spoonMethodName": "com.zaxxer.hikari.ExceptionTest.testUseAfterClose()"}], "spoonFilePath": "ExceptionTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.proxy.ProxyFactory.getProxyConnection(com.zaxxer.hikari.HikariPool,java.sql.Connection,int,boolean,boolean,java.lang.String)"}], "spoonFilePath": "ProxyFactory.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.PoolUtilities.createInstance(java.lang.String,java.lang.Class)"}], "spoonFilePath": "PoolUtilities.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 8, "MOV": 0, "INS": 4, "DEL": 4, "spoonMethodName": "com.zaxxer.hikari.StatementTest.testStatementClose()"}], "spoonFilePath": "StatementTest.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.metrics.CodaHaleMetricsTracker"}], "spoonFilePath": "CodaHaleMetricsTracker.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariConfig.getConnectionCustomizer()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariConfig"}, {"UPD": 0, "TOT": 5, "MOV": 2, "INS": 0, "DEL": 3, "spoonMethodName": "com.zaxxer.hikari.HikariConfig.validate()"}], "spoonFilePath": "HikariConfig.java"}]}, {"nameRev": "ace19c72a12285cc7a13ef70a1af35d4ea68aa3e tags/HikariCP-1.3.8~3", "commitMessage": "Merge branch 'master' into dev\n\n* master:\n  [maven-release-plugin] prepare for next development iteration\n  [maven-release-plugin] prepare release HikariCP-1.3.7\n  Remove redundant assignment.\n  Eliminate double-execution of shutdown code.\n  Updated change log\n  Updated change log\n  Fix typo bug in JNDI factory class ... reflect properties from HikariConfig instead of HikariPool.\n  Add a test for PropertyBeanSetter.getPropertyNames().\n  Add a JNDI factory to create datasources for Tomcat users.\n  This fixes #65 as well as correcting OSGi manifest generation warnings by reorganizing the code and packages somewhat to ensure that the publicly exported com.zaxxer.hikari package does not expose any internal classes.\n  Fix isConnectionAlive() check when using Connection.isValid().  Clarify logging.\n  Fix issue #63 improper setting of null state during connection failure.\n  [maven-release-plugin] prepare for next development iteration\n  Update TODO.md\n  Update maven version.\n  Update README.md\n\nConflicts:\n\tREADME.md\n\tpom.xml\n", "commitParents": ["dbe76bef8ae84ee9769c028eb8d2cd66dc0f4b06", "483cfc011a9e05f2ad3b2f070552888db52bd1e3"], "spoonStatsSkippedReason": "", "commitHash": "ace19c72a12285cc7a13ef70a1af35d4ea68aa3e", "authoredDateTime": "2014-04-28 11:30:25", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 7, "deletions": 7, "lines": 14, "filePath": "README.md"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "pom.xml"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "TODO.md"}], "commitDateTime": "2014-04-28 11:30:25", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": []}, {"nameRev": "262c34c8c9d217d5a621f254fad58fb116fc224a tags/HikariCP-1.3.7~8", "commitMessage": "This fixes #65 as well as correcting OSGi manifest generation warnings by reorganizing the code and packages somewhat to ensure that the publicly exported com.zaxxer.hikari package does not expose any internal classes.\n", "commitParents": ["3b262816f84e205f992b0ae79aa811b6090f81ab"], "spoonStatsSkippedReason": "", "commitHash": "262c34c8c9d217d5a621f254fad58fb116fc224a", "authoredDateTime": "2014-04-25 08:24:47", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/zaxxer/hikari/proxy/ProxyFactory.java"}, {"insertions": 2, "deletions": 9, "lines": 11, "filePath": "src/main/java/com/zaxxer/hikari/HikariConfig.java"}, {"insertions": 7, "deletions": 0, "lines": 7, "filePath": "src/main/java/com/zaxxer/hikari/util/PoolUtilities.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "src/test/java/com/zaxxer/hikari/RampUpDown.java"}, {"insertions": 12, "deletions": 12, "lines": 24, "filePath": "src/test/java/com/zaxxer/hikari/ExceptionTest.java"}, {"insertions": 4, "deletions": 4, "lines": 8, "filePath": "src/test/java/com/zaxxer/hikari/TestConnectionTimeoutRetry.java"}, {"insertions": 4, "deletions": 4, "lines": 8, "filePath": "src/test/java/com/zaxxer/hikari/StatementTest.java"}, {"insertions": 27, "deletions": 0, "lines": 27, "filePath": "src/test/java/com/zaxxer/hikari/TestElf.java"}, {"insertions": 5, "deletions": 1, "lines": 6, "filePath": "pom.xml"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/test/java/com/zaxxer/hikari/UnwrapTest.java"}, {"insertions": 67, "deletions": 35, "lines": 102, "filePath": "src/main/java/com/zaxxer/hikari/{ => pool}/HikariPool.java"}, {"insertions": 3, "deletions": 1, "lines": 4, "filePath": "src/main/java/com/zaxxer/hikari/{ => pool}/HikariMBeanElf.java"}, {"insertions": 13, "deletions": 12, "lines": 25, "filePath": "src/main/java/com/zaxxer/hikari/HikariDataSource.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/zaxxer/hikari/proxy/ConnectionProxy.java"}, {"insertions": 23, "deletions": 23, "lines": 46, "filePath": "src/test/java/com/zaxxer/hikari/TestConnections.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/zaxxer/hikari/metrics/CodaHaleMetricsTracker.java"}], "commitDateTime": "2014-04-26 23:46:44", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 11, "MOV": 2, "INS": 4, "DEL": 3, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource.shutdown()"}, {"UPD": 0, "TOT": 6, "MOV": 2, "INS": 2, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource.setLogWriter(java.io.PrintWriter)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource.getConnection()"}, {"UPD": 3, "TOT": 5, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource"}, {"UPD": 2, "TOT": 5, "MOV": 2, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource.isWrapperFor(java.lang.Class)"}, {"UPD": 1, "TOT": 6, "MOV": 2, "INS": 2, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource.getLogWriter()"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource.getConnection(java.lang.String,java.lang.String)"}, {"UPD": 0, "TOT": 6, "MOV": 2, "INS": 2, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource.unwrap(java.lang.Class)"}], "spoonFilePath": "HikariDataSource.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariMBeanElf.unregisterMBeans(com.zaxxer.hikari.HikariConfig,com.zaxxer.hikari.HikariPool)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariMBeanElf"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariMBeanElf.registerMBeans(com.zaxxer.hikari.HikariConfig,com.zaxxer.hikari.HikariPool)"}], "spoonFilePath": "HikariMBeanElf.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.TestElf"}], "spoonFilePath": "TestElf.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 0, "INS": 3, "DEL": 3, "spoonMethodName": "com.zaxxer.hikari.RampUpDown.rampUpDownTest()"}], "spoonFilePath": "RampUpDown.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 12, "MOV": 0, "INS": 6, "DEL": 6, "spoonMethodName": "com.zaxxer.hikari.TestConnections.testCreate()"}, {"UPD": 0, "TOT": 16, "MOV": 0, "INS": 8, "DEL": 8, "spoonMethodName": "com.zaxxer.hikari.TestConnections.testBackfill()"}, {"UPD": 0, "TOT": 18, "MOV": 0, "INS": 9, "DEL": 9, "spoonMethodName": "com.zaxxer.hikari.TestConnections.testMaxLifetime()"}], "spoonFilePath": "TestConnections.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.UnwrapTest.testUnwrapConnection()"}], "spoonFilePath": "UnwrapTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 8, "MOV": 0, "INS": 4, "DEL": 4, "spoonMethodName": "com.zaxxer.hikari.TestConnectionTimeoutRetry.testConnectionIdleFill()"}], "spoonFilePath": "TestConnectionTimeoutRetry.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.proxy.ConnectionProxy"}], "spoonFilePath": "ConnectionProxy.java"}, {"spoonMethods": [{"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.logPoolState(java.lang.String[])"}, {"UPD": 12, "TOT": 14, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.getConnection()"}, {"UPD": 7, "TOT": 7, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.addBagItem().1AddConnection.run()"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.addBagItem()"}, {"UPD": 27, "TOT": 27, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.addConnection()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.getConnection()"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.getIdleConnections()"}, {"UPD": 31, "TOT": 31, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool"}, {"UPD": 6, "TOT": 6, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.fillPool()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.getDataSource()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.closeConnection(com.zaxxer.hikari.proxy.IHikariConnectionProxy)"}, {"UPD": 10, "TOT": 10, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.shutdown()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.getTotalConnections()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.initializeCustomizer()"}, {"UPD": 0, "TOT": 5, "MOV": 4, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariPool.closeConnection(com.zaxxer.hikari.proxy.IHikariConnectionProxy)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.toString()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.shutdown()"}, {"UPD": 15, "TOT": 17, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.HouseKeeper.run()"}, {"UPD": 12, "TOT": 13, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariPool.initializeDataSource()"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.getThreadsAwaitingConnection()"}, {"UPD": 5, "TOT": 5, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.isConnectionAlive(com.zaxxer.hikari.proxy.IHikariConnectionProxy,long)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.pool.HikariPool.closeIdleConnections()"}, {"UPD": 3, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.closeIdleConnections()"}, {"UPD": 3, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.getActiveConnections()"}, {"UPD": 5, "TOT": 5, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.releaseConnection(com.zaxxer.hikari.proxy.IHikariConnectionProxy)"}], "spoonFilePath": "HikariPool.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 18, "MOV": 6, "INS": 6, "DEL": 6, "spoonMethodName": "com.zaxxer.hikari.ExceptionTest.testException1()"}, {"UPD": 0, "TOT": 12, "MOV": 0, "INS": 6, "DEL": 6, "spoonMethodName": "com.zaxxer.hikari.ExceptionTest.testUseAfterClose()"}], "spoonFilePath": "ExceptionTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.proxy.ProxyFactory.getProxyConnection(com.zaxxer.hikari.HikariPool,java.sql.Connection,int,boolean,boolean,java.lang.String)"}], "spoonFilePath": "ProxyFactory.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.util.PoolUtilities.createInstance(java.lang.String,java.lang.Class)"}], "spoonFilePath": "PoolUtilities.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 8, "MOV": 0, "INS": 4, "DEL": 4, "spoonMethodName": "com.zaxxer.hikari.StatementTest.testStatementClose()"}], "spoonFilePath": "StatementTest.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.metrics.CodaHaleMetricsTracker"}], "spoonFilePath": "CodaHaleMetricsTracker.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariConfig.getConnectionCustomizer()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariConfig"}, {"UPD": 0, "TOT": 5, "MOV": 2, "INS": 0, "DEL": 3, "spoonMethodName": "com.zaxxer.hikari.HikariConfig.validate()"}], "spoonFilePath": "HikariConfig.java"}]}, {"nameRev": "4cb3602ad91b2026e12b83e34d8222f715517af5 tags/HikariCP-1.3.8~2", "commitMessage": "Merge branch 'master' into dev\n\n* master:\n  [maven-release-plugin] prepare for next development iteration\n  [maven-release-plugin] prepare release HikariCP-1.3.7\n  Remove redundant assignment.\n  Eliminate double-execution of shutdown code.\n  Updated change log\n  Updated change log\n  Fix typo bug in JNDI factory class ... reflect properties from HikariConfig instead of HikariPool.\n  Add a test for PropertyBeanSetter.getPropertyNames().\n  Add a JNDI factory to create datasources for Tomcat users.\n  This fixes #65 as well as correcting OSGi manifest generation warnings by reorganizing the code and packages somewhat to ensure that the publicly exported com.zaxxer.hikari package does not expose any internal classes.\n  Fix isConnectionAlive() check when using Connection.isValid().  Clarify logging.\n  Fix issue #63 improper setting of null state during connection failure.\n  [maven-release-plugin] prepare for next development iteration\n  Update TODO.md\n  Update maven version.\n  Update README.md\n\nConflicts:\n\tREADME.md\n\tpom.xml\n", "commitParents": ["ace19c72a12285cc7a13ef70a1af35d4ea68aa3e"], "spoonStatsSkippedReason": "", "commitHash": "4cb3602ad91b2026e12b83e34d8222f715517af5", "authoredDateTime": "2014-04-28 11:31:45", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "README.md"}], "commitDateTime": "2014-04-28 11:31:45", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": []}], "url": "https://github.com/brettwooldridge/HikariCP/issues/65", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 95, "deletions": 60, "lines": 155, "gitFilesChange": 8}, "title": "Make metrics tracker optional", "statsSkippedReason": "", "user": "TuomasKiviaho", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/{ => pool}", "src/main/java/com/zaxxer/hikari/util", "src/main/java/com/zaxxer/hikari/metrics", "src/main/java/com/zaxxer/hikari", "src/main/java/com/zaxxer/hikari/proxy"], "spoonStatsSummary": {"UPD": 166.0, "spoonMethodsChanged": 45, "TOT": 234.0, "MOV": 24.0, "INS": 26.0, "DEL": 18.0, "spoonFilesChanged": 9}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 2, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "Currently CodaHaleMetricsTracker is required at compile/runtime to be present even when metrics are not recorded although pom.xml states scope provided. It would not help even if dependency would be marker as optional (as it should, same goes for hibernate). \n\nI think that it would be better to initialize it from a given classname instead of boolean so that other metrics implementations could be used as well. That would fix this problem at the same time. \n", "labels": ["bug"]}, {"created": "2014-04-24 08:34:14", "user": "brettwooldridge", "body": "Lars Gr\u00e5mark has reported a scenario where HikariCP does not seem to recover successfully after MySQL connections are killed.  This bug is to provide a place to attach materials related to the issue.\n", "closed": "2014-04-25 14:00:51", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/64", "ttf": 1.0002777777777778, "commits": {}, "labels": ["bug"], "title": "Problem with MySQL recovery"}, {"created": "2014-04-23 21:02:10", "commits": {"d5b91c0c21afb0c5b58007f3d1576eada20ef25b": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "4cb3602ad91b2026e12b83e34d8222f715517af5": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "62297a0c885e15b400e6bac02656b78f4f0ff7ac": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "fde045100705364cc888b627e078014ef8eecace": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "ace19c72a12285cc7a13ef70a1af35d4ea68aa3e": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.HikariPool.addBagItem().1AddConnection.run()", "com.zaxxer.hikari.HikariPool"], "closed": "2014-04-24 02:18:03", "filteredCommits": ["d5b91c0c21afb0c5b58007f3d1576eada20ef25b"], "commitsDetails": [{"nameRev": "d5b91c0c21afb0c5b58007f3d1576eada20ef25b tags/HikariCP-1.3.7~10", "commitMessage": "Fix issue #63 improper setting of null state during connection failure.\n", "commitParents": ["4be12eb0a18b8a00e2571349f98c3d5539975765"], "spoonStatsSkippedReason": "", "commitHash": "d5b91c0c21afb0c5b58007f3d1576eada20ef25b", "authoredDateTime": "2014-04-24 11:17:28", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "src/main/java/com/zaxxer/hikari/HikariPool.java"}], "commitDateTime": "2014-04-26 23:46:44", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariPool.addBagItem().1AddConnection.run()"}], "spoonFilePath": "HikariPool.java"}]}, {"nameRev": "4cb3602ad91b2026e12b83e34d8222f715517af5 tags/HikariCP-1.3.8~2", "commitMessage": "Merge branch 'master' into dev\n\n* master:\n  [maven-release-plugin] prepare for next development iteration\n  [maven-release-plugin] prepare release HikariCP-1.3.7\n  Remove redundant assignment.\n  Eliminate double-execution of shutdown code.\n  Updated change log\n  Updated change log\n  Fix typo bug in JNDI factory class ... reflect properties from HikariConfig instead of HikariPool.\n  Add a test for PropertyBeanSetter.getPropertyNames().\n  Add a JNDI factory to create datasources for Tomcat users.\n  This fixes #65 as well as correcting OSGi manifest generation warnings by reorganizing the code and packages somewhat to ensure that the publicly exported com.zaxxer.hikari package does not expose any internal classes.\n  Fix isConnectionAlive() check when using Connection.isValid().  Clarify logging.\n  Fix issue #63 improper setting of null state during connection failure.\n  [maven-release-plugin] prepare for next development iteration\n  Update TODO.md\n  Update maven version.\n  Update README.md\n\nConflicts:\n\tREADME.md\n\tpom.xml\n", "commitParents": ["ace19c72a12285cc7a13ef70a1af35d4ea68aa3e"], "spoonStatsSkippedReason": "", "commitHash": "4cb3602ad91b2026e12b83e34d8222f715517af5", "authoredDateTime": "2014-04-28 11:31:45", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "README.md"}], "commitDateTime": "2014-04-28 11:31:45", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": []}, {"nameRev": "62297a0c885e15b400e6bac02656b78f4f0ff7ac tags/HikariCP-1.3.8~14", "commitMessage": "Merge branch 'dev' of https://github.com/brettwooldridge/HikariCP into dev\n\n* 'dev' of https://github.com/brettwooldridge/HikariCP:\n  Fix issue #63 improper setting of null state during connection failure.\n", "commitParents": ["7cd733f9011bb0d5bea3ed6a421c840fd0fef68e", "fde045100705364cc888b627e078014ef8eecace"], "spoonStatsSkippedReason": "", "commitHash": "62297a0c885e15b400e6bac02656b78f4f0ff7ac", "authoredDateTime": "2014-04-24 22:47:20", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "src/main/java/com/zaxxer/hikari/HikariPool.java"}], "commitDateTime": "2014-04-24 22:47:20", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariPool.addBagItem().1AddConnection.run()"}], "spoonFilePath": "HikariPool.java"}]}, {"nameRev": "fde045100705364cc888b627e078014ef8eecace tags/HikariCP-1.3.8~14^2", "commitMessage": "Fix issue #63 improper setting of null state during connection failure.\n", "commitParents": ["22fe4773f2b338dea8bcfa04f640ae22a165ef58"], "spoonStatsSkippedReason": "", "commitHash": "fde045100705364cc888b627e078014ef8eecace", "authoredDateTime": "2014-04-24 11:17:28", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "src/main/java/com/zaxxer/hikari/HikariPool.java"}], "commitDateTime": "2014-04-24 11:17:28", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariPool.addBagItem().1AddConnection.run()"}], "spoonFilePath": "HikariPool.java"}]}, {"nameRev": "ace19c72a12285cc7a13ef70a1af35d4ea68aa3e tags/HikariCP-1.3.8~3", "commitMessage": "Merge branch 'master' into dev\n\n* master:\n  [maven-release-plugin] prepare for next development iteration\n  [maven-release-plugin] prepare release HikariCP-1.3.7\n  Remove redundant assignment.\n  Eliminate double-execution of shutdown code.\n  Updated change log\n  Updated change log\n  Fix typo bug in JNDI factory class ... reflect properties from HikariConfig instead of HikariPool.\n  Add a test for PropertyBeanSetter.getPropertyNames().\n  Add a JNDI factory to create datasources for Tomcat users.\n  This fixes #65 as well as correcting OSGi manifest generation warnings by reorganizing the code and packages somewhat to ensure that the publicly exported com.zaxxer.hikari package does not expose any internal classes.\n  Fix isConnectionAlive() check when using Connection.isValid().  Clarify logging.\n  Fix issue #63 improper setting of null state during connection failure.\n  [maven-release-plugin] prepare for next development iteration\n  Update TODO.md\n  Update maven version.\n  Update README.md\n\nConflicts:\n\tREADME.md\n\tpom.xml\n", "commitParents": ["dbe76bef8ae84ee9769c028eb8d2cd66dc0f4b06", "483cfc011a9e05f2ad3b2f070552888db52bd1e3"], "spoonStatsSkippedReason": "", "commitHash": "ace19c72a12285cc7a13ef70a1af35d4ea68aa3e", "authoredDateTime": "2014-04-28 11:30:25", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 7, "deletions": 7, "lines": 14, "filePath": "README.md"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "pom.xml"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "TODO.md"}], "commitDateTime": "2014-04-28 11:30:25", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": []}], "url": "https://github.com/brettwooldridge/HikariCP/issues/63", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "title": "lastConnectionFailure causes null pointer", "statsSkippedReason": "", "user": "CorayThan", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari"], "spoonStatsSummary": {"UPD": 2.0, "spoonMethodsChanged": 2, "TOT": 5.0, "MOV": 1.0, "INS": 1.0, "DEL": 1.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 1, "mergeCommitUsed": 0, "duplicated": 2, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "I'm trying to configure Hikari, but I'm getting a null pointer right now. HikariPool line 175:\n\n```\n        throw new SQLException(String.format(\"Timeout of %dms encountered waiting for connection.\", configuration.getConnectionTimeout()), lastConnectionFailure.getAndSet(null));\n```\n\n`lastConnectionFailure` is null. Perhaps a null check is warranted?\n", "labels": ["bug"]}, {"created": "2014-04-07 05:40:54", "user": "jpeffer", "body": "The requirements of HikariCP are unclear as the documentation found at the following site do not match those documented on GitHib:\n\nhttp://brettwooldridge.github.io/HikariCP/\n\nJava 7 is stated as a requirement at the aforementioned link, yet GitHub states Java 6+ is supported.\n", "closed": "2014-04-07 07:05:32", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/58", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "Requirements not aligned"}, {"created": "2014-03-29 02:47:49", "commits": {"e3e913c8cf06e8514a9f7afe77dad34e5460889a": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "cf2f0b0be4340c1079d96edd74dd9120f86d5dcf": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.HikariMBeanElf.unregisterMBeans(com.zaxxer.hikari.HikariConfig,com.zaxxer.hikari.HikariPool)"], "closed": "2014-03-29 07:23:37", "filteredCommits": ["cf2f0b0be4340c1079d96edd74dd9120f86d5dcf"], "commitsDetails": [{"nameRev": "e3e913c8cf06e8514a9f7afe77dad34e5460889a tags/HikariCP-1.3.5~1", "commitMessage": "Merge branch 'dev'\n\n* dev:\n  Updated change log\n  Restore max lifetime check to getConnection() rather than only in the housekeeper thread.  An extremely active pool may never find an idle connection in the housekeeper alone.\n  Restore max lifetime check to getConnection() rather than only in the housekeeper thread.  An extremely active pool may never find an idle connection in the housekeeper alone.\n  Fixed #51 fix logging string substitution parameter.\n  Switch back to setting our own context class loader during code generation.\n  Change visibility.\n", "commitParents": ["9c058e7b3a5cd957c7375e8c9e3a00992add713d", "ec373755f8b23767261d899df2701d94891a458d"], "spoonStatsSkippedReason": "", "commitHash": "e3e913c8cf06e8514a9f7afe77dad34e5460889a", "authoredDateTime": "2014-03-30 10:46:14", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 6, "deletions": 0, "lines": 6, "filePath": "CHANGES"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/zaxxer/hikari/metrics/MetricsTracker.java"}, {"insertions": 7, "deletions": 0, "lines": 7, "filePath": "src/main/java/com/zaxxer/hikari/proxy/JavassistProxyFactory.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/zaxxer/hikari/HikariMBeanElf.java"}, {"insertions": 9, "deletions": 7, "lines": 16, "filePath": "src/main/java/com/zaxxer/hikari/HikariPool.java"}], "commitDateTime": "2014-03-30 10:46:14", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariMBeanElf.unregisterMBeans(com.zaxxer.hikari.HikariConfig,com.zaxxer.hikari.HikariPool)"}], "spoonFilePath": "HikariMBeanElf.java"}, {"spoonMethods": [{"UPD": 8, "TOT": 16, "MOV": 3, "INS": 4, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariPool.getConnection()"}], "spoonFilePath": "HikariPool.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.metrics.MetricsTracker"}], "spoonFilePath": "MetricsTracker.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.proxy.JavassistProxyFactory"}], "spoonFilePath": "JavassistProxyFactory.java"}]}, {"nameRev": "cf2f0b0be4340c1079d96edd74dd9120f86d5dcf tags/HikariCP-1.3.5~1^2~3", "commitMessage": "Fixed #51 fix logging string substitution parameter.\n", "commitParents": ["8430fce40d515ee4c8f1329c92f65f9ed7139701"], "spoonStatsSkippedReason": "", "commitHash": "cf2f0b0be4340c1079d96edd74dd9120f86d5dcf", "authoredDateTime": "2014-03-29 16:23:08", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "src/main/java/com/zaxxer/hikari/HikariMBeanElf.java"}], "commitDateTime": "2014-03-29 16:23:08", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariMBeanElf.unregisterMBeans(com.zaxxer.hikari.HikariConfig,com.zaxxer.hikari.HikariPool)"}], "spoonFilePath": "HikariMBeanElf.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/51", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "logging bug in HikariMBeanElf.java", "statsSkippedReason": "", "user": "mdagit", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 1, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "in  HikariMBeanElf.java there is line:\nLOGGER.error(\"No registered MBean for {0}.\", configuration.getPoolName());\n\nbut slf4j doesn't work that way. it should just be {}.\nthe message i'm seeing in logs is:\n No registered MBean for {0}.\n", "labels": ["bug"]}, {"created": "2014-03-28 12:57:08", "user": "dimzon", "body": "I'm using my custom ClassLoader (nothing special, just this)\n\n```\n            ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();\n            Thread.currentThread().setContextClassLoader(new ClassLoader(contextClassLoader) {\n            });\n```\n\nSeems like bytecode modifications doesn't take effect :(\n\n```\n            IHikariConnectionProxy proxyConnection = ProxyFactory.getProxyConnection(this, connection, transactionIsolation, isAutoCommit, isReadOnly, catalog);\n            proxyConnection.resetConnectionState();\n```\n\nproxyConnection is null (seems like no code generation affected) !!!\n\n```\n        JavassistProxyFactory.initialize();\n        HikariConfig config = new HikariConfig();\n        setBeanValues(properties, config);\n        config.setPassword(null);\n        config.setUsername(null);\n        config.setDataSource(dataSource);\n        return new HikariDataSource(config);\n```\n\nremoving custom classloader fixes issue\n", "closed": "2014-03-29 07:25:37", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/50", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "it don't work :("}, {"created": "2014-03-24 05:08:03", "user": "brettwooldridge", "body": "I recently switched my Spring RESTful API data source from DriverManagerDataSource to HikariCp, but my database connections went from 20 connections to 600 connections. Is this suppose to happen?\n\nMy settings are as follows:\n\n``` xml\n<bean id=\"jdbcDataSource\"\n    class=\"com.zaxxer.hikari.HikariDataSource\" destroy-method=\"shutdown\">\n    <constructor-arg>\n        <bean class=\"com.zaxxer.hikari.HikariConfig\">\n            <constructor-arg>\n                <props>\n                    <prop key=\"dataSource.url\">url</prop>\n                    <prop key=\"dataSource.user\">user</prop>\n                    <prop key=\"dataSource.password\">password</prop>\n                    <prop key=\"dataSource.cachePrepStmts\">true</prop>\n                    <prop key=\"dataSource.prepStmtCacheSize\">250</prop>\n                    <prop key=\"dataSource.prepStmtCacheSqlLimit\">2048</prop>\n                    <prop key=\"dataSource.useServerPrepStmts\">true</prop>\n                </props>\n            </constructor-arg>\n            <property name=\"dataSourceClassName\" value=\"com.mysql.jdbc.jdbc2.optional.MysqlDataSource\" />\n        </bean>\n    </constructor-arg>\n</bean>\n\n<bean id=\"jdbcTemplate\" class=\"org.springframework.jdbc.core.JdbcTemplate\">\n    <property name=\"dataSource\" ref=\"jdbcDataSource\" />\n</bean>\n```\n", "closed": "2014-03-25 06:02:38", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/49", "ttf": 1.0002777777777778, "commits": {}, "labels": ["bug"], "title": "[1.3.3] User is reporting overcommitted pool (600 connections at the DB)"}, {"created": "2014-03-19 06:48:51", "commits": {"99b2b765cea806ab91f947ca1bea7cd037211a1c": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.HikariPool.quietlyCloseConnection(java.sql.Connection)", "com.zaxxer.hikari.HikariPool.addConnection(long)"], "closed": "2014-03-19 08:58:42", "filteredCommits": ["99b2b765cea806ab91f947ca1bea7cd037211a1c"], "commitsDetails": [{"nameRev": "99b2b765cea806ab91f947ca1bea7cd037211a1c tags/HikariCP-1.3.4~1^2~46", "commitMessage": "closes #44 potential connection leak during connection creation in some failure scenarios.\n", "commitParents": ["079bf9e8c2d461012d7c403081c5f9cf29372d28"], "spoonStatsSkippedReason": "", "commitHash": "99b2b765cea806ab91f947ca1bea7cd037211a1c", "authoredDateTime": "2014-03-19 17:58:30", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 19, "deletions": 1, "lines": 20, "filePath": "src/main/java/com/zaxxer/hikari/HikariPool.java"}], "commitDateTime": "2014-03-19 17:58:30", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.quietlyCloseConnection(java.sql.Connection)"}, {"UPD": 0, "TOT": 5, "MOV": 1, "INS": 3, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.HikariPool.addConnection(long)"}], "spoonFilePath": "HikariPool.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/44", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 19, "deletions": 1, "lines": 20, "gitFilesChange": 1}, "title": "Pool leaks connections open if customization/initSql fails", "statsSkippedReason": "", "user": "TuomasKiviaho", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 6, "MOV": 1, "INS": 4, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "There seems to be slight a possibility to connection leak in the pool between acquiring a connection and adding it to the pool. Connection state reset has similar problem as well.\n\nSteps to fix the issue (HikariPool.addConnection):\n1. Obtaining of a datasource connection should be closed (try/catch) in case of a failure prior it has been added to the pool\n2. initSql block should be followed by resetConnectionState in any case (try/finally)\n", "labels": ["bug"]}, {"created": "2014-03-17 14:41:02", "commits": {"04005cf619bbcb4edc48ab53e5474f98522b578d": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.HikariDataSource.shutdown()"], "closed": "2014-03-17 14:53:32", "filteredCommits": ["04005cf619bbcb4edc48ab53e5474f98522b578d"], "commitsDetails": [{"nameRev": "04005cf619bbcb4edc48ab53e5474f98522b578d tags/HikariCP-1.3.4~1^2~58", "commitMessage": "fix #43 add null check to shutdown\n", "commitParents": ["4dea4c8d41100aeceb4cb1fd4d9467e5d5f646ea"], "spoonStatsSkippedReason": "", "commitHash": "04005cf619bbcb4edc48ab53e5474f98522b578d", "authoredDateTime": "2014-03-17 23:52:44", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 6, "deletions": 6, "lines": 12, "filePath": "src/main/java/com/zaxxer/hikari/HikariDataSource.java"}], "commitDateTime": "2014-03-17 23:52:44", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 2, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariDataSource.shutdown()"}], "spoonFilePath": "HikariDataSource.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/43", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 6, "deletions": 6, "lines": 12, "gitFilesChange": 1}, "title": "NullPointerException within HikariDataSource.shutdown()", "statsSkippedReason": "", "user": "holgerstolzenberg", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 3, "MOV": 2, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I have a encountered a NullPointerException using the close method of HikariDataSource (1.3.2) when using it as a spring bean.\n\nFollowing use case. A declared a HikariCP data source as a spring bean in Java config manner. Here is the code:\n\n``` java\n@Bean(destroyMethod = \"close\")\n  public HikariDataSource dataSource(@Value(\"${db.name}\") String databaseName,\n    @Value(\"${db.user}\") String user, @Value(\"${dashboard.db.pass}\") String password,\n    @Value(\"${db.login.timeout.sec}\") int loginTimeoutSec,\n    @Value(\"${db.connect.timeout.ms}\") final int connectionTimeoutMs,\n    @Value(\"${db.max.pool.size}\") final int maxPoolSize,\n    @Value(\"${db.min.pool.size}\") final int minPoolSize,\n    @Value(\"${db.test.query}\") final String connectionTestQuery,\n    @Value(\"${db.acq.inc}\") final int acquireIncrement) throws SQLException {\n\n    MysqlDataSource mysqlDataSource = new MysqlDataSource();\n    mysqlDataSource.setDatabaseName(databaseName);\n    mysqlDataSource.setUser(user);\n    mysqlDataSource.setEncoding(\"UTF-8\");\n    mysqlDataSource.setUseUnicode(true);\n    if (!Strings.isNullOrEmpty(password)) {\n      mysqlDataSource.setPassword(Aes.decrypt(password));\n    }\n\n    HikariDataSource dataSource = new HikariDataSource();\n    dataSource.setLoginTimeout(loginTimeoutSec); // sec\n    dataSource.setPoolName(\"dashboard-server-pool\");\n    dataSource.setConnectionTimeout(connectionTimeoutMs); // ms\n    dataSource.setMaximumPoolSize(maxPoolSize);\n    dataSource.setMinimumPoolSize(minPoolSize);\n    dataSource.setJdbc4ConnectionTest(false);\n    dataSource.setConnectionTestQuery(connectionTestQuery);\n    dataSource.setAcquireIncrement(acquireIncrement);\n    dataSource.setAcquireRetries(1);\n    dataSource.setAcquireRetryDelay(1000); // ms\n    dataSource.setDataSource(mysqlDataSource);\n\n    return dataSource;\n  }\n```\n\nAs you can see, I am using \"close()\" as Spring destroy method when shutting down the app. The \"close()\" effectively does nothing more then delegating to \"shutdown()\". When shutting down the app, a NullPointerException was raised for <code>HikariDataSource:167</code>.\n\nThe code there shows that the internal <code>pool</code> instance was not instantiated at that time.\n\n``` java\n/**\n     * Shutdown the DataSource and its associated pool.\n     */\n    public void shutdown()\n    {\n        boolean shutdown = isShutdown;\n        isShutdown = true;\n        if (!shutdown)\n        {\n            pool.shutdown();\n            pool = null;\n        }\n    }\n```\n\nI noticed that this is a rare use case, because it only happened because Spring started up but no connection had been used so far, so no pool was created and when the app shuts down the NullPointer was raised.\n\nI managed to workaround this splitting the declaration up into HikariConfig and HikariDataSource. Here is the code:\n\n``` java\n@Bean(destroyMethod = \"close\")\n  public HikariDataSource dataSource(@Value(\"${db.name}\") String databaseName,\n    @Value(\"${db.user}\") String user, @Value(\"${db.pass}\") String password,\n    @Value(\"${db.login.timeout.sec}\") int loginTimeoutSec,\n    @Value(\"${db.connect.timeout.ms}\") final int connectionTimeoutMs,\n    @Value(\"${db.max.pool.size}\") final int maxPoolSize,\n    @Value(\"${db.min.pool.size}\") final int minPoolSize,\n    @Value(\"${db.test.query}\") final String connectionTestQuery,\n    @Value(\"${db.acq.inc}\") final int acquireIncrement) throws SQLException {\n\n    MysqlDataSource mysqlDataSource = new MysqlDataSource();\n    mysqlDataSource.setDatabaseName(databaseName);\n    mysqlDataSource.setUser(user);\n    mysqlDataSource.setEncoding(\"UTF-8\");\n    mysqlDataSource.setUseUnicode(true);\n    if (!Strings.isNullOrEmpty(password)) {\n      mysqlDataSource.setPassword(Aes.decrypt(password));\n    }\n\n    HikariConfig config = new HikariConfig();\n    config.setPoolName(\"dashboard-server-pool\");\n    config.setConnectionTimeout(connectionTimeoutMs); // ms\n    config.setMaximumPoolSize(maxPoolSize);\n    config.setMinimumPoolSize(minPoolSize);\n    config.setJdbc4ConnectionTest(false);\n    config.setConnectionTestQuery(connectionTestQuery);\n    config.setAcquireIncrement(acquireIncrement);\n    config.setAcquireRetries(1);\n    config.setAcquireRetryDelay(1000); // ms\n    config.setDataSource(mysqlDataSource);\n\n    HikariDataSource dataSource = new HikariDataSource(config);\n    dataSource.setLoginTimeout(loginTimeoutSec); // sec\n\n    return dataSource;\n  }\n```\n\nThe constructor call of <code>HikariDataSource</code> that takes the <code>HikariConfig</code> parameter initialises the pool within the constructor, so the NullPointerException was not raised during shutdown.\n\nMy question is, am I missing something obvious here or is the different behaviour of the <code>HikariDataSource</code> constructors the desired behaviour? Is the initialisation of the <code>pool</code> instance missing from no arg constructor?\n", "labels": ["bug"]}, {"created": "2014-03-02 11:45:09", "commits": {"07d630de5ab28bea68f466a4cf1dc19dce300a33": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.util.ConcurrentBag", "com.zaxxer.hikari.util.ConcurrentBag.borrow(long,java.util.concurrent.TimeUnit)"], "closed": "2014-03-02 13:56:08", "filteredCommits": ["07d630de5ab28bea68f466a4cf1dc19dce300a33"], "commitsDetails": [{"nameRev": "07d630de5ab28bea68f466a4cf1dc19dce300a33 tags/HikariCP-1.3.1~1^2~11", "commitMessage": "#39 Get rid of anonymous inner class in ThreadLocal as it might possibly trigger a warning in Tomcat.\n", "commitParents": ["83b88f675ea8f8e975a43336af688f63fd72a413"], "spoonStatsSkippedReason": "", "commitHash": "07d630de5ab28bea68f466a4cf1dc19dce300a33", "authoredDateTime": "2014-03-03 00:03:43", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 8, "deletions": 7, "lines": 15, "filePath": "src/main/java/com/zaxxer/hikari/util/ConcurrentBag.java"}], "commitDateTime": "2014-03-03 00:03:43", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.zaxxer.hikari.util.ConcurrentBag.borrow(long,java.util.concurrent.TimeUnit)"}], "spoonFilePath": "ConcurrentBag.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/39", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 8, "deletions": 7, "lines": 15, "gitFilesChange": 1}, "title": "Tomcat 7.0.50 shutdown issue", "statsSkippedReason": "", "user": "timur86", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/util"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 4, "MOV": 0, "INS": 2, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "After updating HikariCP from 1.2.8 to 1.3.0 during shutdown Apache Tomcat 7.0.50 I'm getting these messages in catalina.log:\n\nMar 02, 2014 5:27:40 PM org.apache.catalina.core.StandardServer await\nINFO: A valid shutdown command was received via the shutdown port. Stopping the Server instance.\nMar 02, 2014 5:27:40 PM org.apache.coyote.AbstractProtocol pause\nINFO: Pausing ProtocolHandler [\"http-apr-8080\"]\nMar 02, 2014 5:27:40 PM org.apache.coyote.AbstractProtocol pause\nINFO: Pausing ProtocolHandler [\"ajp-apr-8009\"]\nMar 02, 2014 5:27:40 PM org.apache.catalina.core.StandardService stopInternal\nINFO: Stopping service Catalina\nMar 02, 2014 5:27:40 PM org.apache.catalina.core.ApplicationContext log\nINFO: Closing Spring root WebApplicationContext\nMar 02, 2014 5:27:40 PM org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks\nSEVERE: The web application [/test] created a ThreadLocal with key of type [com.zaxxer.hikari.util.ConcurrentBag$1](value [com.zaxxer.hikari.util.ConcurrentBag$1@1b6f3995]) and a value of type [java.util.LinkedList](value [[com.zaxxer.hikari.proxy.ConnectionJavassistProxy@af5dd35]]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\nMar 02, 2014 5:27:40 PM org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks\nSEVERE: The web application [/test] created a ThreadLocal with key of type [com.zaxxer.hikari.util.ConcurrentBag$1](value [com.zaxxer.hikari.util.ConcurrentBag$1@1b6f3995]) and a value of type [java.util.LinkedList](value [[com.zaxxer.hikari.proxy.ConnectionJavassistProxy@4034afa3]]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\nMar 02, 2014 5:27:40 PM org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks\nSEVERE: The web application [/test] created a ThreadLocal with key of type [com.zaxxer.hikari.util.ConcurrentBag$1](value [com.zaxxer.hikari.util.ConcurrentBag$1@1b6f3995]) and a value of type [java.util.LinkedList](value [[com.zaxxer.hikari.proxy.ConnectionJavassistProxy@4034afa3]]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\nMar 02, 2014 5:27:40 PM org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks\nSEVERE: The web application [/test] created a ThreadLocal with key of type [com.zaxxer.hikari.util.ConcurrentBag$1](value [com.zaxxer.hikari.util.ConcurrentBag$1@1b6f3995]) and a value of type [java.util.LinkedList](value [[com.zaxxer.hikari.proxy.ConnectionJavassistProxy@af5dd35]]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\nMar 02, 2014 5:27:40 PM org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks\nSEVERE: The web application [/test] created a ThreadLocal with key of type [com.zaxxer.hikari.util.ConcurrentBag$1](value [com.zaxxer.hikari.util.ConcurrentBag$1@1b6f3995]) and a value of type [java.util.LinkedList](value [[com.zaxxer.hikari.proxy.ConnectionJavassistProxy@af5dd35]]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\nMar 02, 2014 5:27:40 PM org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks\nSEVERE: The web application [/test] created a ThreadLocal with key of type [com.zaxxer.hikari.util.ConcurrentBag$1](value [com.zaxxer.hikari.util.ConcurrentBag$1@1b6f3995]) and a value of type [java.util.LinkedList](value [[com.zaxxer.hikari.proxy.ConnectionJavassistProxy@af5dd35]]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\nMar 02, 2014 5:27:40 PM org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks\nSEVERE: The web application [/test] created a ThreadLocal with key of type [com.zaxxer.hikari.util.ConcurrentBag$1](value [com.zaxxer.hikari.util.ConcurrentBag$1@1b6f3995]) and a value of type [java.util.LinkedList](value [[com.zaxxer.hikari.proxy.ConnectionJavassistProxy@4034afa3]]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\nMar 02, 2014 5:27:40 PM org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks\nSEVERE: The web application [/test] created a ThreadLocal with key of type [com.zaxxer.hikari.util.ConcurrentBag$1](value [com.zaxxer.hikari.util.ConcurrentBag$1@1b6f3995]) and a value of type [java.util.LinkedList](value [[com.zaxxer.hikari.proxy.ConnectionJavassistProxy@4034afa3]]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\nMar 02, 2014 5:27:40 PM org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks\nSEVERE: The web application [/test] created a ThreadLocal with key of type [com.zaxxer.hikari.util.ConcurrentBag$1](value [com.zaxxer.hikari.util.ConcurrentBag$1@1b6f3995]) and a value of type [java.util.LinkedList](value [[com.zaxxer.hikari.proxy.ConnectionJavassistProxy@af5dd35]]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\nMar 02, 2014 5:27:40 PM org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks\nSEVERE: The web application [/test] created a ThreadLocal with key of type [com.zaxxer.hikari.util.ConcurrentBag$1](value [com.zaxxer.hikari.util.ConcurrentBag$1@1b6f3995]) and a value of type [java.util.LinkedList](value [[com.zaxxer.hikari.proxy.ConnectionJavassistProxy@af5dd35]]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\nMar 02, 2014 5:27:40 PM org.apache.coyote.AbstractProtocol stop\nINFO: Stopping ProtocolHandler [\"http-apr-8080\"]\nMar 02, 2014 5:27:40 PM org.apache.coyote.AbstractProtocol stop\nINFO: Stopping ProtocolHandler [\"ajp-apr-8009\"]\nMar 02, 2014 5:27:40 PM org.apache.coyote.AbstractProtocol destroy\nINFO: Destroying ProtocolHandler [\"http-apr-8080\"]\nMar 02, 2014 5:27:40 PM org.apache.coyote.AbstractProtocol destroy\nINFO: Destroying ProtocolHandler [\"ajp-apr-8009\"]\n", "labels": ["bug"]}, {"created": "2014-01-24 13:22:22", "commits": {"a96b55308a72d2716bafc7d7540c1f8614b77d2c": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}, "f3c0feb15cfbb2646c51b7c4c83c37e1499342a7": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.HikariPool.shutdown()", "com.zaxxer.hikari.HikariPool.getConnection()", "com.zaxxer.hikari.HikariPool", "com.zaxxer.hikari.HikariPool.addConnection()", "com.zaxxer.hikari.HikariPool.addConnections(com.zaxxer.hikari.HikariPool$AddConnectionStrategy)", "com.zaxxer.hikari.HikariPool.releaseConnection(com.zaxxer.hikari.proxy.IHikariConnectionProxy)"], "closed": "2014-01-24 13:35:59", "filteredCommits": ["a96b55308a72d2716bafc7d7540c1f8614b77d2c"], "commitsDetails": [{"nameRev": "a96b55308a72d2716bafc7d7540c1f8614b77d2c tags/HikariCP-1.2.9~1^2~18", "commitMessage": "Fixed #29 implement clean shutdown\n", "commitParents": ["06ba9ef3c3ff8800e6035c825bb71a7c0a726674"], "spoonStatsSkippedReason": "", "commitHash": "a96b55308a72d2716bafc7d7540c1f8614b77d2c", "authoredDateTime": "2014-01-24 22:35:27", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 26, "deletions": 6, "lines": 32, "filePath": "src/main/java/com/zaxxer/hikari/HikariPool.java"}], "commitDateTime": "2014-01-24 22:35:27", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.shutdown()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.getConnection()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool"}, {"UPD": 0, "TOT": 4, "MOV": 3, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.addConnection()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.addConnections(com.zaxxer.hikari.HikariPool$AddConnectionStrategy)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.releaseConnection(com.zaxxer.hikari.proxy.IHikariConnectionProxy)"}], "spoonFilePath": "HikariPool.java"}]}, {"nameRev": "f3c0feb15cfbb2646c51b7c4c83c37e1499342a7 tags/HikariCP-1.2.9~18", "commitMessage": "Fixed #29 implement clean shutdown\n", "commitParents": ["f5171c96e63196d23890f68e3e32e625ec9193f3"], "spoonStatsSkippedReason": "", "commitHash": "f3c0feb15cfbb2646c51b7c4c83c37e1499342a7", "authoredDateTime": "2014-01-24 22:35:27", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 26, "deletions": 6, "lines": 32, "filePath": "src/main/java/com/zaxxer/hikari/HikariPool.java"}], "commitDateTime": "2014-02-10 12:55:14", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.shutdown()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.getConnection()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool"}, {"UPD": 0, "TOT": 4, "MOV": 3, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.addConnection()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.addConnections(com.zaxxer.hikari.HikariPool$AddConnectionStrategy)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.HikariPool.releaseConnection(com.zaxxer.hikari.proxy.IHikariConnectionProxy)"}], "spoonFilePath": "HikariPool.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/29", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 26, "deletions": 6, "lines": 32, "gitFilesChange": 1}, "title": "[1.2.8] Housekeeping timer thread never terminating / Connections remain opened", "statsSkippedReason": "", "user": "sjaenick", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 6, "TOT": 12, "MOV": 4, "INS": 7, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi,\n\nI'm using HikariCP within a GlassFish 3.x application server. Datasources are created on demand, kept available for some time and closed after a certain timeout.\n\nHikariPool#shutdown() currently isn't implemented, thus every datasource ever\ncreated (and removed) \"leaks\" the associated connections as well as one timer\nthread.\n\nProbably, shutdown() should\n- close all connections\n- terminate the associated housekeeping timer thread\n", "labels": ["bug"]}, {"created": "2014-01-14 23:50:14", "commits": {"93fd7d7330a54bbb0ed35077626e07265cd9c416": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.proxy.ConnectionProxy.close()"], "closed": "2014-01-15 00:34:47", "filteredCommits": ["93fd7d7330a54bbb0ed35077626e07265cd9c416"], "commitsDetails": [{"nameRev": "93fd7d7330a54bbb0ed35077626e07265cd9c416 tags/HikariCP-1.2.6~3", "commitMessage": "Fixed #27 set the isClosed flag earlier in the close() method, it was meant to short-circuit the unregisterStatement() call, but was moved later, which broke that behavior.\n", "commitParents": ["7235091496c93c1a455925f6c14c1460f28f1a6a"], "spoonStatsSkippedReason": "", "commitHash": "93fd7d7330a54bbb0ed35077626e07265cd9c416", "authoredDateTime": "2014-01-15 09:34:25", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 3, "lines": 7, "filePath": "src/main/java/com/zaxxer/hikari/proxy/ConnectionProxy.java"}, {"insertions": 27, "deletions": 4, "lines": 31, "filePath": "src/test/java/com/zaxxer/hikari/StatementTest.java"}], "commitDateTime": "2014-01-15 09:34:25", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 0, "INS": 1, "DEL": 3, "spoonMethodName": "com.zaxxer.hikari.StatementTest.testStatementClose()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.zaxxer.hikari.StatementTest.testDoubleStatementClose()"}], "spoonFilePath": "StatementTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 1, "INS": 2, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.proxy.ConnectionProxy.close()"}], "spoonFilePath": "ConnectionProxy.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/27", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 4, "deletions": 3, "lines": 7, "gitFilesChange": 1}, "title": "IndexOutOfBoundsException in close()", "statsSkippedReason": "", "user": "virtyvoid", "changesInPackagesGIT": ["src/main/java/com/zaxxer/hikari/proxy"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 5, "MOV": 1, "INS": 2, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "There's a little problem lying in ConnectionProxy.close().\n\nExample case:\n\n``` java\ntry(final Connection con = Pool.getInstance().getConnection())\n{\n    // e.g forgot to close.\n    con.createStatement();\n    con.createStatement();\n}\ncatch (SQLException e)\n{\n    e.printStackTrace();\n}\n```\n\nThis one leads to this:\n\n```\nException in thread \"main\" java.lang.IndexOutOfBoundsException: Index: 1, Size: 1\n        at java.util.ArrayList.rangeCheck(ArrayList.java:635)\n        at java.util.ArrayList.get(ArrayList.java:411)\n        at com.zaxxer.hikari.proxy.ConnectionProxy.close(Unknown Source)\n```\n\nThe cause of this is simple. The size of openStatements stored as a constant.\nThen, when the statement is closed (unregisterStatement) - it'll be removed from the List and therefore we cannot use the size constant again which is used for loop as it is points to invalid index (from now).\n\np.s Shouldn't there be a option for logging such \"unclosed\" resources? :)\n", "labels": ["bug"]}, {"created": "2014-01-14 15:42:06", "commits": {"f79af53fb61039d8babb6369ff582d35c257d46b": {"commitGHEventType": "referenced", "commitUser": "brettwooldridge"}}, "numCommits": 0, "closed": "2014-01-15 00:32:02", "filteredCommits": ["f79af53fb61039d8babb6369ff582d35c257d46b"], "commitsDetails": [{"nameRev": "f79af53fb61039d8babb6369ff582d35c257d46b tags/HikariCP-1.2.6~5", "commitMessage": "Fixed #26 change Hibernate dependency to \u2018provided\u2019 now that HikariCP uses it for more than just testing.\n", "commitParents": ["ec0c88a88e6eb7df6abff41550d7f15df9f47497"], "spoonStatsSkippedReason": "", "commitHash": "f79af53fb61039d8babb6369ff582d35c257d46b", "authoredDateTime": "2014-01-15 09:24:55", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "pom.xml"}], "commitDateTime": "2014-01-15 09:24:55", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": []}], "url": "https://github.com/brettwooldridge/HikariCP/issues/26", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Dependency on Hibernate?", "statsSkippedReason": "", "user": "analytically", "changesInPackagesGIT": [], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": " +-com.zaxxer:HikariCP:1.2.5\n[info]   | +-org.hibernate:hibernate-core:4.3.0.Final\n[info]   | | +-antlr:antlr:2.7.7\n[info]   | | +-dom4j:dom4j:1.6.1\n[info]   | | | +-xml-apis:xml-apis:1.0.b2\n[info]   | | | \n[info]   | | +-org.hibernate.common:hibernate-commons-annotations:4.0.4.Final\n[info]   | | | +-org.jboss.logging:jboss-logging-annotations:1.2.0.Beta1\n[info]   | | | +-org.jboss.logging:jboss-logging:3.1.3.GA\n[info]   | | | \n[info]   | | +-org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final\n[info]   | | +-org.javassist:javassist:3.18.1-GA\n[info]   | | +-org.jboss.logging:jboss-logging-annotations:1.2.0.Beta1\n[info]   | | +-org.jboss.logging:jboss-logging:3.1.3.GA\n[info]   | | +-org.jboss.spec.javax.transaction:jboss-transaction-api_1.2_spec:1.0.0.Final\n[info]   | | +-org.jboss:jandex:1.1.0.Final\n[info]   | | \n[info]   | +-org.javassist:javassist:3.18.1-GA\n[info]   | +-org.slf4j:slf4j-api:1.7.5\n", "labels": ["bug"]}, {"created": "2014-01-11 13:55:30", "user": "zimmi", "body": "I am running HikariCP 1.2.4 with \n\n```\nHikariConfig config = new HikariConfig();\nconfig.setUseInstrumentation(false);\nconfig.setJdbc4ConnectionTest(true);\nconfig.setAutoCommit(false);\nconfig.setTransactionIsolation(\"TRANSACTION_REPEATABLE_READ\");\n```\n\nBecause HikariPool does not reset the autocommit flag (to its default of true) when the connection is returned to the pool, this leads to (comments inline, code from HikariPool, line 152):\n\n```\nConnection connection = (Connection) connectionProxy;\n// if connectionProxy is not autocommiting, this will start a transaction\nif (!isConnectionAlive(connection, timeout))\n{\n    // Throw away the dead connection, try again\n    closeConnection(connectionProxy);\n    timeout -= (System.currentTimeMillis() - start);\n    continue;\n}\n\nif (leakDetectionThreshold > 0)\n{\n    connectionProxy._captureStack(leakDetectionThreshold, houseKeepingTimer);\n}\n// if autocommit is already false, this is a noop, transaction still running\nconnection.setAutoCommit(isAutoCommit);\n// Exception here, because transaction is already running\nconnection.setTransactionIsolation(transactionIsolation);\nconnection.clearWarnings();\n```\n\nI also noticed while debugging that postgres (in my case) will perform a roundtrip to the database on \n\n```\nConnection#setTransactionIsolation and also on Connection#getTransactionIsolation\n```\n\nMaybe the transaction isloation could be cached by HikariCP and only set once on creation of the actual connection?\n", "closed": "2014-01-11 15:26:36", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/24", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "Transaction isolation applied to running transaction in HikariPool "}, {"created": "2014-01-10 23:45:15", "user": "vasiliypelikh", "body": "Log say: \"idleTimeout is less than 30000ms, did you specify the wrong time unit?  Using default instead.\"\n", "closed": "2014-01-11 04:17:16", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/23", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "Can't set idleTimeout to 0."}, {"created": "2014-01-09 00:54:40", "commits": {"34e6f5c4b45d8a89598b0f5bbb09e0ccff9c1d62": {"commitGHEventType": "closed", "commitUser": "brettwooldridge"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.zaxxer.hikari.proxy.ConnectionProxy.__init()"], "closed": "2014-01-09 01:23:46", "filteredCommits": ["34e6f5c4b45d8a89598b0f5bbb09e0ccff9c1d62"], "commitsDetails": [{"nameRev": "34e6f5c4b45d8a89598b0f5bbb09e0ccff9c1d62 tags/HikariCP-1.2.4~2", "commitMessage": "Fixed #19 Create thread local with overridden initialValue().\n", "commitParents": ["ff527ab43573f8f79f17099c104e0c31c7628782"], "spoonStatsSkippedReason": "", "commitHash": "34e6f5c4b45d8a89598b0f5bbb09e0ccff9c1d62", "authoredDateTime": "2014-01-09 09:57:01", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 8, "deletions": 2, "lines": 10, "filePath": "core/src/main/java/com/zaxxer/hikari/proxy/ConnectionProxy.java"}], "commitDateTime": "2014-01-09 09:57:01", "commitUser": "brettwooldridge", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 2, "spoonMethodName": "com.zaxxer.hikari.proxy.ConnectionProxy.__init()"}], "spoonFilePath": "ConnectionProxy.java"}]}], "url": "https://github.com/brettwooldridge/HikariCP/issues/19", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 8, "deletions": 2, "lines": 10, "gitFilesChange": 1}, "title": "NPE in Hibernate when Connection accessed from thread that did not create it", "statsSkippedReason": "", "user": "brettwooldridge", "changesInPackagesGIT": ["core/src/main/java/com/zaxxer/hikari/proxy"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi,\n\nJust bumped up to the latest version (from 1.2.1) and now I'm getting this error, which is causing the transaction to rollback. This was okay on 1.2.1 (no code changes, just a version bump).\n\n-=david=-\n\njava.lang.NullPointerException: null\n    at com.zaxxer.hikari.proxy.ConnectionProxy._checkClosed(Unknown Source) ~[HikariCP-1.2.3.jar:na]\n    at com.zaxxer.hikari.proxy.ConnectionJavassistProxy.getAutoCommit(ConnectionJavassistProxy.java) ~[na:na]\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_45]\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_45]\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_45]\n    at java.lang.reflect.Method.invoke(Method.java:606) ~[na:1.7.0_45]\n    at org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy$LazyConnectionInvocationHandler.invoke(LazyConnectionDataSourceProxy.java:376) ~[spring-jdbc-4.0.1.BUILD-SNAPSHOT.jar:4.0.1.BUILD-SNAPSHOT]\n    at com.sun.proxy.$Proxy21.getAutoCommit(Unknown Source) ~[na:na]\n    at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:68) ~[hibernate-core-4.3.0.Final.jar:4.3.0.Final]\n    at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:162) ~[hibernate-core-4.3.0.Final.jar:4.3.0.Final]\n    at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1431) ~[hibernate-core-4.3.0.Final.jar:4.3.0.Final]\n    at org.hibernate.jpa.internal.TransactionImpl.begin(TransactionImpl.java:61) ~[hibernate-entitymanager-4.3.0.Final.jar:4.3.0.Final]\n    at org.springframework.orm.jpa.DefaultJpaDialect.beginTransaction(DefaultJpaDialect.java:67) ~[spring-orm-4.0.1.BUILD-SNAPSHOT.jar:4.0.1.BUILD-SNAPSHOT]\n    at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:110) ~[spring-orm-4.0.1.BUILD-SNAPSHOT.jar:4.0.1.BUILD-SNAPSHOT]\n    at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:380) ~[spring-orm-4.0.1.BUILD-SNAPSHOT.jar:4.0.1.BUILD-SNAPSHOT]\nWrapped by: org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction; nested exception is java.lang.NullPointerException\n    at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:430) ~[spring-orm-4.0.1.BUILD-SNAPSHOT.jar:4.0.1.BUILD-SNAPSHOT]\n    at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373) ~[spring-tx-4.0.1.BUILD-SNAPSHOT.jar:4.0.1.BUILD-SNAPSHOT]\n    at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:420) ~[spring-tx-4.0.1.BUILD-SNAPSHOT.jar:4.0.1.BUILD-SNAPSHOT]\n    at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:257) ~[spring-tx-4.0.1.BUILD-SNAPSHOT.jar:4.0.1.BUILD-SNAPSHOT]\n    at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:95) ~[spring-tx-4.0.1.BUILD-SNAPSHOT.jar:4.0.1.BUILD-SNAPSHOT]\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.0.1.BUILD-SNAPSHOT.jar:4.0.1.BUILD-SNAPSHOT]\n    at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136) ~[spring-tx-4.0.1.BUILD-SNAPSHOT.jar:4.0.1.BUILD-SNAPSHOT]\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.0.1.BUILD-SNAPSHOT.jar:4.0.1.BUILD-SNAPSHOT]\n    at org.springframework.data.jpa.repository.support.LockModeRepositoryPostProcessor$LockModePopulatingMethodIntercceptor.invoke(LockModeRepositoryPostProcessor.java:92) ~[spring-data-jpa-1.5.0.M1.jar:na]\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.0.1.BUILD-SNAPSHOT.jar:4.0.1.BUILD-SNAPSHOT]\n    at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) ~[spring-aop-4.0.1.BUILD-SNAPSHOT.jar:4.0.1.BUILD-SNAPSHOT]\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.0.1.BUILD-SNAPSHOT.jar:4.0.1.BUILD-SNAPSHOT]\n    at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207) ~[spring-aop-4.0.1.BUILD-SNAPSHOT.jar:4.0.1.BUILD-SNAPSHOT]\n    at com.sun.proxy.$Proxy109.save(Unknown Source) ~[na:na]\n", "labels": ["bug"]}, {"created": "2013-12-25 21:33:44", "user": "hamid-nazari", "body": "Following my previous [question](http://stackoverflow.com/q/20775165/1863244) on SO it would be nice to have automatic rollback for checked-in connections when their `autoCommit` is set to `false`.\n", "closed": "2013-12-26 01:44:25", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/16", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "Automatic rollback"}, {"created": "2018-08-12 01:36:23", "user": "devzonetrack", "body": "I have search about \"Howto Disable HikariCP Debug\" but i can't find solution, so i want to ask about is there are function howto disable hikariCP Debug log?", "closed": "2018-08-22 19:18:32", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/1221", "ttf": 10.000277777777777, "commits": {}, "labels": ["not-a-bug", "question"], "title": "Disable HikariCP Log"}, {"created": "2018-08-02 15:28:48", "user": "kaushik1979", "body": "Working with mssql-jdbc-6.2.2.jre8 version, I get the following error. Can you suggest how to get around it? Thanks.\r\n\r\n`\r\njava.sql.SQLFeatureNotSupportedException: This operation is not supported.\r\n\tat com.microsoft.sqlserver.jdbc.SQLServerConnection.createArrayOf(SQLServerConnection.java:4859)\r\n\tat com.zaxxer.hikari.pool.HikariProxyConnection.createArrayOf(HikariProxyConnection.java)\r\n`\r\n\r\n", "closed": "2018-08-03 13:04:24", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/1216", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["not-a-bug", "question"], "title": " com.microsoft.sqlserver.jdbc.SQLServerConnection.createArrayOf - This operation is not supported."}, {"created": "2018-07-23 03:41:26", "user": "DamilyLi", "body": "#### Environment\r\n```\r\nHikariCP version: 2.3.7\r\nJDK version     : 1.8.0_172\r\nDatabase        : SQL Server/ JTDS\r\nDriver version  :  1.3.1\r\nPlay version: 2.4.6\r\n\r\n-----------------------------------------------------------------------------------------\r\nWe use HikariCP with Play! 2.4.6. The application ran fine before, but throw SQLTimeoutException due to increase load. \r\nA request timed out after 23607ms , but the Hikari connectionTimeout is set to 10000ms.\r\nShouldn't the connection acquire timeout after 10000ms?  \r\nI haven't been able to reproduce this problem locally. And ConnectionTimeout is set to HikariCP correctly I confirm.\r\n\r\n**Play's HikariCP config**\r\nplay.db.pool=hikaricp\r\ndb.default.url=${database.jdbc.url}\r\ndb.default.driver=\"net.sourceforge.jtds.jdbc.Driver\"\r\ndb.default.hikaricp.autocommit=true\r\ndb.default.hikaricp.maximumPoolSize=25\r\ndb.default.hikaricp.minimumIdle=10\r\ndb.default.username=${username}\r\ndb.default.password=${password}\r\ndb.default.hikaricp.connectionTimeout = 10000\r\ndb.default.hikaricp.connectionTestQuery=\"select 1\"\r\ndb.default.hikaricp.readOnly = true\r\ndb.default.hikaricp.poolName = current\r\ndb.default.hikaricp.disableJMX = false\r\ndb.default.hikaricp.registerMbeans= true\r\n\r\ndb.central.url=${database.jdbc.url}\r\ndb.central.driver=\"net.sourceforge.jtds.jdbc.Driver\"\r\ndb.central.hikaricp.autocommit=true\r\ndb.central.hikaricp.maximumPoolSize=15\r\ndb.central.hikaricp.minimumIdle=10\r\ndb.central.username=${username}\r\ndb.central.password=${password}\r\ndb.central.hikaricp.connectionTimeout = 10000\r\ndb.central.hikaricp.connectionTestQuery=\"select 1\"\r\ndb.central.hikaricp.readOnly = true\r\ndb.central.hikaricp.poolName = central\r\ndb.central.hikaricp.disableJMX = false\r\ndb.central.hikaricp.registerMbeans= true\r\n\r\n\r\nBelow Log :\r\njava.sql.SQLTimeoutException: Timeout after 23607ms of waiting for a connection.\r\n        at com.zaxxer.hikari.pool.BaseHikariPool.getConnection(BaseHikariPool.java:227) ~[com.zaxxer.HikariCP-2.3.7.jar:na]\r\n        at com.zaxxer.hikari.pool.BaseHikariPool.getConnection(BaseHikariPool.java:182) ~[com.zaxxer.HikariCP-2.3.7.jar:na]\r\n        at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:93) ~[com.zaxxer.HikariCP-2.3.7.jar:na]\r\n        at play.api.db.DefaultDatabase.getConnection(Databases.scala:143) ~[com.typesafe.play.play-jdbc_2.11-2.4.6.jar:2.4.6\r\n]\r\n\r\n\r\n\r\n", "closed": "2018-07-23 11:42:47", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/1205", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["not-a-bug", "question"], "title": "connectionTimeout not working properly"}, {"created": "2018-05-24 08:04:35", "user": "kulatamicuda", "body": "#### Environment\r\n```\r\nHikariCP version: 3.1.0 but occurs also with 2.7.4\r\nJDK version     : 1.8.0_172\r\nDatabase        : MS SQL\r\nDriver version  : 6.4.0.jre8\r\n```\r\nI am using JNDI + HikariCP on Tomcat 9.0.7 with the following configuration :\r\n```\r\n<Resource name=\"jdbc/mydb\" auth=\"Container\"\r\n      factory=\"com.zaxxer.hikari.HikariJNDIFactory\"\r\n      type=\"javax.sql.DataSource\"\r\n      minimumIdle=\"5\" \r\n      maximumPoolSize=\"20\"\r\n      connectionTimeout=\"300000\"\r\n      dataSourceClassName=\"com.microsoft.sqlserver.jdbc.SQLServerDataSource\"\r\n      dataSource.url=\"jdbc:sqlserver://server:1433;databaseName=mydb\"      \r\n      dataSource.user=\"fantomas\"\r\n      dataSource.password=\"somepassword\" \r\n      closeMethod=\"close\"\r\n      />\r\n```\r\nWhen I run tomcat without any of my WAR deployed (just standard installation, nothing more), I have the following WARNING in Catalina log:\r\n```\r\n09-May-2018 10:15:16.971 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [host-manager] appears to have started a thread named [mssql-jdbc-TimeoutTimer-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n sun.misc.Unsafe.park(Native Method)\r\n java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)\r\n java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)\r\n java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)\r\n java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)\r\n java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1073)\r\n java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)\r\n java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n java.lang.Thread.run(Thread.java:748)\r\n```\r\nFor details please see https://stackoverflow.com/questions/50248823/ms-sql-jdbc-driver-leak-with-jndi-hikari-on-tomcat-9/ \r\n", "closed": "2018-05-24 10:21:50", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/1165", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["not-a-bug"], "title": "Memmory leak with MS SQL JNDI"}, {"created": "2018-05-16 23:43:53", "user": "ocafebabe", "body": "#### Environment\r\n```\r\nHikariCP version: 2.4.1\r\nJDK version     : 1.8.0_131\r\nDatabase        : Oracle\r\nDriver version  : 12.1.0.2.0\r\n```\r\nHi,\r\n\r\nI have been experiencing weird random freezes for some time in my application and after analyzing the thread dump I narrowed it down to a class loading call made by **Hikari** during its initialization but I don't understand what could be causing such an issue:\r\n\r\n```\r\nThread 87375: (state = BLOCKED)\r\n - java.lang.ClassLoader.findBootstrapClass(java.lang.String) @bci=0 (Compiled frame; information may be imprecise)\r\n - java.lang.ClassLoader.findBootstrapClassOrNull(java.lang.String) @bci=12, line=1015 (Compiled frame)\r\n - java.lang.ClassLoader.loadClass(java.lang.String, boolean) @bci=48, line=413 (Compiled frame)\r\n - java.lang.ClassLoader.loadClass(java.lang.String, boolean) @bci=38, line=411 (Compiled frame)\r\n - sun.misc.Launcher$AppClassLoader.loadClass(java.lang.String, boolean) @bci=81, line=335 (Compiled frame)\r\n - java.lang.ClassLoader.loadClass(java.lang.String) @bci=3, line=357 (Compiled frame)\r\n - com.zaxxer.hikari.util.Sequence$Factory.create() @bci=7, line=53 (Interpreted frame)\r\n - com.zaxxer.hikari.util.QueuedSequenceSynchronizer.<init>() @bci=18, line=60 (Interpreted frame)\r\n - com.zaxxer.hikari.util.ConcurrentBag.<init>(com.zaxxer.hikari.util.ConcurrentBag$IBagStateListener) @bci=33, line=95 (Interpreted frame)\r\n - com.zaxxer.hikari.pool.HikariPool.<init>(com.zaxxer.hikari.HikariConfig) @bci=86, line=116 (Interpreted frame)\r\n - com.zaxxer.hikari.HikariDataSource.getConnection() @bci=100, line=96 (Interpreted frame)\r\n```\r\nBased on the thread dump and the code here: https://github.com/brettwooldridge/HikariCP/blob/HikariCP-2.4.1/src/main/java/com/zaxxer/hikari/util/Sequence.java, line 53 seems to be the culprit, but again I don't understand why it would randomely block at this stage!\r\n\r\nAt first, I thought I had the same issue as #418 (freezes on a call to getConnection() and same Hikari version) but I'm not 100% sure as our stacktraces differ a bit...\r\n\r\nI know that my Hikari version is old but it's not an easy task for me to deploy a new version and prior of doing that I would like to get a confirmation that it's a known issue...\r\n\r\nThanks", "closed": "2018-05-19 09:12:40", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/1155", "ttf": 2.000277777777778, "commits": {}, "labels": ["not-a-bug"], "title": "Blocked thread on java.lang.ClassLoader.findBootstrapClass"}, {"created": "2018-05-16 13:45:13", "user": "Benyuss", "body": "Dear contributors,\r\n\r\nWe have a memory leak for a long time but we can't figure it out.\r\nI want to request for some help because I'm clueless at this point.\r\nIt's a legacy codebase and we have to make some changes, fix a couple of bugs, etc..\r\n\r\nWe have a singleton class which has 2 DataSources.\r\nIf those are null or invalid we try to initialize them.\r\n\r\nI've attached every code, configuration, log that you should see.\r\nCan you help me to figure out what's the problem?\r\nThanks in advance.\r\n\r\n```\r\npublic Connection initConnection(DataSource dataSource, boolean isDocument) throws FirebirdConnectionException {\r\n        Connection conn;\r\n        try {\r\n          dataSource = ensureDataSourceInitialized(dataSource, isDocument);\r\n            conn = new MiddlewareConnection(dataSource.getConnection());\r\n        } catch (SQLException e) {\r\n            LogExceptionStackTrace(e);\r\n            throw new FirebirdConnectionException(e);\r\n        }\r\n        return conn;\r\n    }\r\n```\r\nDataSource close if it was invalid:\r\n\r\n```\r\n private DataSource resetDataSource(DataSource dataSource) {\r\n        if (dataSource != null) {\r\n            ((HikariDataSource) dataSource).close();\r\n            LOGGER.debug(\"HikariDataSource closed. Leftower connection: {0} Statement: {1}\", new Object[]{MiddlewareConnection.getConnectionCount(), MiddlewareStatement.getStatementCount()});\r\n            MiddlewareConnection.resetConnectionCount();\r\n            MiddlewareStatement.resetStatementCount();\r\n        }\r\n        return null;\r\n    }\r\n```\r\n\r\nAnd we close all of the connections in every place.\r\nEg.:\r\n\r\n```\r\ntry (Connection connection= getConnection()) {\r\n             //dostuff\r\n            connection.close();\r\n}\r\n```\r\n\r\nConfiguration:\r\n\r\n```\r\n#Hiraki datasource parameters\r\nhikari.idleTimeout=30\r\nhikari.maxLifetime=60\r\nhikari.minimumIdle=0\r\nhikari.maximumPoolSize=20\r\n```\r\n\r\n```\r\nprivate DataSource createDataSource(String dbConnectionString, PropertiesProvider properties) {\r\n        HikariConfig config = new HikariConfig();\r\n        config.setJdbcUrl(PropertiesProvider.connectionPrefix() + dbConnectionString);\r\n        config.setUsername(properties.user);\r\n        config.setPassword(properties.password);\r\n        config.setDriverClassName(FBDriver.class.getName());\r\n        config.setIdleTimeout(properties.IdleTimeout * 1000);\r\n        config.setMaxLifetime(properties.MaxLifetime * 1000);\r\n        config.setLeakDetectionThreshold(60 * 1000);\r\n        config.setMinimumIdle(properties.MinimumIdle);\r\n        config.setMaximumPoolSize(properties.MaximumPoolSize);\r\n        config.addDataSourceProperty(\"encoding\", \"WIN1250\");\r\n        return new HikariDataSource(config);\r\n    }\r\n```\r\n\r\n\r\n\r\nLog:\r\n\r\n6-May-2018 15:03:36.647 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-584 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.648 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-586 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.650 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-588 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.663 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-589 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.664 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-591 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.666 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-585 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.668 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-577 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.681 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-574 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.683 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-567 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.685 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-590 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.687 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-592 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.702 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-595 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.704 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-594 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.706 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-593 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.707 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-596 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.721 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-597 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.723 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-598 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.725 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-599 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.727 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-602 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.741 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-604 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.743 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-606 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.744 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-600 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.746 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-603 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.760 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-601 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.762 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-605 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.764 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-607 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.766 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-608 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.779 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-609 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.781 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-610 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.783 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-613 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.785 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-611 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.798 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-618 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.800 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-616 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.803 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-612 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.805 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-620 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.817 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-621 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.820 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-614 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.822 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-622 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.823 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-624 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.838 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-625 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.840 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-626 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.841 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-631 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.843 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-632 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.856 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-623 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.858 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-617 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.861 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-615 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.863 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-630 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.877 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-619 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.878 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-629 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.880 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-635 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.882 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-633 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.896 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-628 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.897 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-627 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.899 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-634 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.901 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-636 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.915 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-637 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.917 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-639 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.920 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-656 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.922 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-641 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.934 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-649 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.936 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-638 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.938 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-643 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.940 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-648 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.953 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-642 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.956 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-644 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.958 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-650 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.959 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-668 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.976 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-672 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.978 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-670 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.981 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-687 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.983 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-647 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:36.999 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-664 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.002 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-654 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.005 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-678 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.008 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-683 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.022 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-674 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.023 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-680 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.025 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-665 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.026 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-682 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.040 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-681 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.041 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-691 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.042 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-723 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.044 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-669 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.064 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-646 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.066 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-676 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.068 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-686 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.070 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-726 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.081 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-645 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.083 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-651 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.085 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-779 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.087 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-778 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.100 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-774 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.102 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-679 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.104 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-661 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.105 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-722 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.117 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-782 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.119 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-811 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.121 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-783 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.123 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-699 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.135 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-709 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.137 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-728 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.138 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-688 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.140 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-673 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.153 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-667 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.155 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-700 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.156 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-733 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.157 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-719 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.171 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-662 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.173 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-653 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.174 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-652 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.176 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-702 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.189 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-735 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.190 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-785 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.192 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-734 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.193 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-675 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.207 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-692 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.208 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-663 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.210 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-671 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.211 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-660 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.225 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-739 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.226 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-724 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.228 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-784 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.230 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-685 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.244 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-810 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.246 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-708 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.248 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-712 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.251 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-717 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.264 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-703 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.266 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-741 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.268 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-694 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.270 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-716 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.283 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-729 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.285 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-789 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.287 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-659 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.288 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-751 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.300 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-781 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.302 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-701 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.303 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-715 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.305 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-730 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.319 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-736 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.322 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-809 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.324 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-714 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.326 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-695 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.337 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-718 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.340 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-706 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.342 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-732 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.344 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-738 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.355 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-721 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.358 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-737 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.359 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-773 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.361 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-666 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.374 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-693 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.376 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-696 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.378 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-808 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.380 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-684 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.393 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-658 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.395 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-713 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.397 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-740 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.399 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-770 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.411 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-771 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.413 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-640 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.415 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-711 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.417 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-796 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.430 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-780 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.432 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-742 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.434 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-804 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.436 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-805 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.450 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-795 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.452 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-753 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.455 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-745 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.456 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-756 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.468 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-806 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.470 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-746 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.472 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-769 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.473 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-813 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.487 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-757 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.489 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-766 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.491 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-761 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.493 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-798 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.505 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-764 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.507 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-797 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.509 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-720 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.511 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-754 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.523 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-801 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.524 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-822 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.526 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-657 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.528 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-792 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.542 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-803 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.544 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-758 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.545 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-823 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.547 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-697 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.560 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-765 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.561 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-819 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.563 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-818 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.565 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-814 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.579 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-707 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.581 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-755 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.583 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-799 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.585 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-829 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.598 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-824 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.599 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-791 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.601 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-750 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.602 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-705 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.616 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-825 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.618 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-775 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.619 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-760 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.621 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-794 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.635 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-752 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.637 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-812 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.640 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-759 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.642 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-744 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.654 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-710 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.657 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-689 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.659 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-787 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.661 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-704 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.674 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-698 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.677 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-820 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.679 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-767 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.681 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-768 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.692 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-802 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.694 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-772 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.696 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-843 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.697 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-842 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.711 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-845 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.713 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-837 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.715 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-832 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.716 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-853 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.729 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-847 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.730 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-846 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.732 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-849 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.734 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-828 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.747 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-836 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.750 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-827 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.752 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-835 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.754 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-854 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.767 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-821 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.769 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-817 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.771 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-859 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.773 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-860 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.786 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-838 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.788 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-830 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.790 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-844 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.793 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-851 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.805 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-841 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.807 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-858 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.809 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-840 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.812 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-856 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.824 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-855 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.825 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-834 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.827 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-831 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.829 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-848 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.843 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-857 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.846 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-852 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n16-May-2018 15:03:37.848 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [server] appears to have started a thread named [HikariPool-850 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n\r\n\r\n", "closed": "2018-05-19 09:04:03", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/1154", "ttf": 2.000277777777778, "commits": {}, "labels": ["not-a-bug"], "title": "Tomcat, firebird memory leak"}, {"created": "2018-03-11 13:30:34", "user": "yooniks", "body": "#### Environment\r\n```\r\nHikariCP version: 2.7.8\r\nJDK version     : 1.8.0_111\r\nDatabase        : MySQL|\r\n```\r\n\r\n-----------------------------------------------------------------------------------------\r\nHey, since long time I have big problem with my database, when I'm doing something I got this:\r\n(HikariPool-1 - Connection is not available, request timed out after 30000ms. | )\r\n`[09:26:26] [Craft Scheduler Thread - 2/WARN]: java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 30000ms.\r\n[09:26:26] [Craft Scheduler Thread - 2/WARN]: \tat com.zaxxer.hikari.pool.HikariPool.createTimeoutException(HikariPool.java:667)\r\n[09:26:26] [Craft Scheduler Thread - 2/WARN]: \tat com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:183)\r\n[09:26:26] [Craft Scheduler Thread - 2/WARN]: \tat com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:148)\r\n[09:26:26] [Craft Scheduler Thread - 2/WARN]: \tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128)\r\n[09:26:26] [Craft Scheduler Thread - 2/WARN]: \tat xyz.yooniks.something.subpackage.SomeCommand$1.run(SomeCommand.java:74)\r\n[09:26:26] [Craft Scheduler Thread - 2/WARN]: \tat org.bukkit.craftbukkit.v1_8_R3.scheduler.CraftTask.run(CraftTask.java:59)\r\n[09:26:26] [Craft Scheduler Thread - 2/WARN]: \tat org.bukkit.craftbukkit.v1_8_R3.scheduler.CraftAsyncTask.run(CraftAsyncTask.java:53)\r\n[09:26:26] [Craft Scheduler Thread - 2/WARN]: \tat org.github.paperspigot.ServerSchedulerReportingWrapper.run(ServerSchedulerReportingWrapper.java:23)\r\n[09:26:26] [Craft Scheduler Thread - 2/WARN]: \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n[09:26:26] [Craft Scheduler Thread - 2/WARN]: \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n[09:26:26] [Craft Scheduler Thread - 2/WARN]: \tat java.lang.Thread.run(Thread.java:748)`\r\nHow can I fix that?\r\n", "closed": "2018-03-17 01:38:12", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/1111", "ttf": 5.000277777777778, "commits": {}, "labels": ["not-a-bug"], "title": "HikariPool-1 - Connection is not available, request timed out after 30096ms."}, {"created": "2018-03-06 23:49:43", "user": "aalbacha", "body": "#### Environment\r\n```\r\nHikariCP version: 2.4.7\r\nJDK version     : 1.8.0_121-b13\r\nDatabase        : Oracle 11.2.0.3\r\nDriver version  : jdbc:oracle:thin\r\nServer OS: SunOS 5.11\r\nJOOQ Version: 3.10.4\r\nWeb Server: Apache Tomcat/9.0.1\r\n\r\n#### Configuration\r\n\r\n2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - kwecm - idleTimeout is close to or more than maxLifetime, disabling it.\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - kwecm - configuration:\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - allowPoolSuspension.............false\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - autoCommit......................true\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - catalog.........................null\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - connectionInitSql...............null\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - connectionTestQuery.............\"SELECT 1 FROM DUAL\"\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - connectionTimeout...............30000\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - dataSource......................null\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - dataSourceClassName.............null\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - dataSourceJNDI..................null\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - dataSourceProperties............{password=<masked>}\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - driverClassName.................\"oracle.jdbc.driver.OracleDriver\"\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - healthCheckProperties...........{}\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - healthCheckRegistry.............null\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - idleTimeout.....................0\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - initializationFailFast..........true\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - isolateInternalQueries..........false\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - jdbc4ConnectionTest.............false\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - jdbcUrl.........................\"jdbc:oracle:thin:@(DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = dbsrv-cluster)(PORT = 1521))(CONNECT_DATA = (SERVER = DEDICATED)(SERVICE_NAME = MOTPROD1)))\"\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - leakDetectionThreshold..........15000\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - maxLifetime.....................50000\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - maximumPoolSize.................200\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - metricRegistry..................null\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - metricsTrackerFactory...........null\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - minimumIdle.....................5\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - password........................<masked>\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - poolName........................\"kwecm\"\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - readOnly........................false\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - registerMbeans..................false\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - scheduledExecutorService........null\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - threadFactory...................null\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - transactionIsolation............null\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - username........................\"KWECM\"\r\nDEBUG 2018-02-20 18:03:46 com.zaxxer.hikari.HikariConfig - validationTimeout...............5000\r\n\r\n\r\n\r\nwe have two nodes of our application connect to RAC oracle DB, and we are using Hikari in our application to connect to DB and every thing working smoothly, after some times 1 weeks the application hanged and we get the following error:\r\n\r\nWARN  2018-02-21 18:29:43 c.zaxxer.hikari.pool.ProxyLeakTask - Connection leak detection triggered for oracle.jdbc.driver.T4CConnection@7babe4c1, stack trace follows\r\njava.lang.Exception: Apparent connection leak detected\r\n\r\nCaused by: java.sql.SQLTransientConnectionException: kwecm - Connection is not available, request timed out after 30000ms.\r\n\r\nwe have tried to configured maxlifetime, connectionleak detection but no chance.\r\n\r\nin attach you can find the full log of one node:\r\n\r\n[35.txt](https://github.com/brettwooldridge/HikariCP/files/1787161/35.txt)\r\n\r\nThanks.\r\n\r\n\r\n-----------------------------------------------------------------------------------------\r\n*Have you searched the CLOSED issues already? How about checking [stackoverflow](https://stackoverflow.com/search?q=HikariCP)?*\r\n", "closed": "2018-03-14 17:30:32", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/1106", "ttf": 7.000277777777778, "commits": {}, "labels": ["not-a-bug"], "title": "Apparent connection leak detected"}, {"created": "2017-12-20 03:21:07", "user": "natpoornal", "body": "#### Environment\r\n```\r\nHikariCP version: 2.7.4\r\nJDK version     : 1.8.0_111\r\nDatabase        : SOLR\r\nDriver version  : solr-solrj 7.1.0\r\n```\r\nConnection Pool is not getting initialized due to the following exception:\r\n\r\n2017-12-20 03:13:23.836 ERROR 12296 --- [io-19091-exec-7] com.zaxxer.hikari.pool.HikariPool        : HikariPool-4 - Exception during pool initialization.\r\n\r\njava.lang.UnsupportedOperationException: null\r\n\tat org.apache.solr.client.solrj.io.sql.ConnectionImpl.getTransactionIsolation(ConnectionImpl.java:189) ~[solr-solrj-7.1.0.jar!/:7.1.0 84c90ad2c0218156c840e19a64d72b8a38550659 - ubuntu - 2017-10-13 16:16:00]\r\n\tat com.zaxxer.hikari.pool.PoolBase.checkDriverSupport(PoolBase.java:467) ~[HikariCP-2.7.4.jar!/:na]\r\n\tat com.zaxxer.hikari.pool.PoolBase.setupConnection(PoolBase.java:422) ~[HikariCP-2.7.4.jar!/:na]\r\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:380) ~[HikariCP-2.7.4.jar!/:na]\r\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:204) ~[HikariCP-2.7.4.jar!/:na]\r\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:459) [HikariCP-2.7.4.jar!/:na]\r\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:533) [HikariCP-2.7.4.jar!/:na]\r\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:114) [HikariCP-2.7.4.jar!/:na]\r\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:97) [HikariCP-2.7.4.jar!/:na]\r\n\tat org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:151) [spring-jdbc-5.0.2.RELEASE.jar!/:5.0.2.RELEASE]\r\n\tat org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) [spring-jdbc-5.0.2.RELEASE.jar!/:5.0.2.RELEASE]\r\n\tat org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78) [spring-jdbc-5.0.2.RELEASE.jar!/:5.0.2.RELEASE]\r\n\tat org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:600) [spring-jdbc-5.0.2.RELEASE.jar!/:5.0.2.RELEASE]\r\n\tat org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:657) [spring-jdbc-5.0.2.RELEASE.jar!/:5.0.2.RELEASE]\r\n\tat org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:682) [spring-jdbc-5.0.2.RELEASE.jar!/:5.0.2.RELEASE]\r\n\tat org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:736) [spring-jdbc-5.0.2.RELEASE.jar!/:5.0.2.RELEASE]\r\n\tat org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.query(NamedParameterJdbcTemplate.java:199) [spring-jdbc-5.0.2.RELEASE.jar!/:5.0.2.RELEASE]\r\n\tat org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForList(NamedParameterJdbcTemplate.java:279) [spring-jdbc-5.0.2.RELEASE.jar!/:5.0.2.RELEASE]\r\n\r\n\r\n-----------------------------------------------------------------------------------------\r\n*Have you searched the CLOSED issues already? How about checking [stackoverflow](https://stackoverflow.com/search?q=HikariCP)?*\r\n", "closed": "2017-12-20 19:56:58", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/1048", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["not-a-bug"], "title": "Hikari 2.7.4 with solr-solrj 7.1.0"}, {"created": "2017-12-16 01:06:24", "user": "sergioszy", "body": "#### Environment\r\n```\r\nHikariCP version: 2.7.4\r\nJDK version     : 1.8.0_102\r\nDatabase        : PostgreSQL\r\nDriver version  : postgresql-42.1.4.jar\r\n```\r\n\r\nPreparedStatement prepared = connection.preparedStatement(\r\n\"select mytable.column1, mytable.column2 from mytable where mytable.column1 > 0\" );  //OK\r\n\r\nWhen execute  resultSet = prepared.executeQuery();\r\n\r\nthrows this exception \r\n\r\norg.postgresql.util.PSQLException: ERROR: relation mytable does not exist\r\n  Position: 176\r\n        at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2477)\r\n        at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2190)\r\n        at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:300)\r\n        at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:428)\r\n        at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:354)\r\n        at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:169)\r\n        at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:117)\r\n        at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)\r\n        at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)\r\n\r\n\r\n\r\n-----------------------------------------------------------------------------------------\r\n", "closed": "2017-12-16 06:33:09", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/1044", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["not-a-bug"], "title": "PostgreSQL   relation \"mytable\" does not exist"}, {"created": "2017-11-28 17:49:30", "user": "jnrbo", "body": "#### Environment\r\n```\r\nHikariCP version:        2.7.3\r\nJDK version:             1.8.0_121\r\nDatabase:                MySQL\r\nDriver version:          x.x.x\r\nHibernate version:       5.1.10.Final\r\nTomcat version:          8.5.23\r\n```\r\n-----------------------------------------------------------------------------------------\r\n\r\n\r\nAfter a few hours running, my application stop working. I'm getting a few leak detections, but with no success figuring out how to fix it.\r\n\r\nThe error I get when stop working is:\r\n\r\n```\r\nERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper - HikariPool-1 - Connection is not available, request timed out after 30004ms.\r\njavax.persistence.PersistenceException: \r\n\r\norg.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection\r\n\r\nCaused by: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection\r\n```\r\n\r\nAlso, I'm getting a lot of logs when I perform any SELECT/UPDATE/INSERT (when showing a list, for example, there's 120x):\r\n\r\n```\r\n1985837 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.pool.ProxyConnection - HikariPool-1 - Executed rollback on connection com.mysql.jdbc.JDBC4Connection@438b4b42 due to dirty commit state on close().\r\n```\r\n\r\n\r\n\r\nActive pool's only increases (total=27, active=22, idle=5, waiting=0).\r\n\r\n\r\n**HikariCP Startup log:**\r\n\r\n```\r\n883 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:\r\n887 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension.............false\r\n888 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit......................false\r\n889 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - catalog.........................none\r\n890 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql...............none\r\n891 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery.............none\r\n892 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout...............30000\r\n893 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - dataSource......................none\r\n894 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName.............none\r\n897 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI..................none\r\n900 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties............{cacheServerConfiguration=true, useServerPrepStmts=true, cachePrepStmts=true, rewriteBatchedStatements=true, cacheResultSetMetadata=true, useLocalSessionState=true, maintainTimeStats=false, prepStmtCacheSize=350, prepStmtCacheSqlLimit=2048, password=<masked>}\r\n902 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName.................\"com.mysql.jdbc.Driver\"\r\n903 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties...........{}\r\n904 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry.............none\r\n905 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout.....................740000\r\n905 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailFast..........true\r\n906 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout.......1\r\n907 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries..........false\r\n908 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - jdbc4ConnectionTest.............false\r\n909 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl.........................jdbc:mysql://localhost/mydb?autoReconnect=true&useSSL=false\r\n909 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold..........60000\r\n910 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime.....................1740000\r\n910 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize.................200\r\n911 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry..................none\r\n912 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory...........none\r\n912 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle.....................5\r\n913 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - password........................<masked>\r\n914 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - poolName........................\"HikariPool-1\"\r\n918 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - readOnly........................false\r\n920 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans..................false\r\n920 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor...............none\r\n921 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutorService........internal\r\n922 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - schema..........................none\r\n922 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory...................internal\r\n922 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation............default\r\n924 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - username........................\"myuser\"\r\n926 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout...............5000\r\n931 [http-nio-8080-exec-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...\r\n1483 [http-nio-8080-exec-5] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@40750294\r\n1486 [http-nio-8080-exec-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.\r\n1520 [http-nio-8080-exec-5] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect\r\n```\r\n\r\n\r\n**Hibernate persistence.xml configuration:**\r\n\r\n```\r\n<property name=\"hibernate.dialect\" value=\"org.hibernate.dialect.MySQL5Dialect\"/>\r\n<property name=\"hibernate.connection.autocommit\" value=\"false\" />\r\n\r\n<property name=\"hibernate.show_sql\" value=\"false\" />\r\n<property name=\"hibernate.format_sql\" value=\"false\"/>\r\n<property name=\"hibernate.connection.provider_class\" value=\"org.hibernate.hikaricp.internal.HikariCPConnectionProvider\" />\r\n\r\n<property name=\"hibernate.hikari.dataSource.prepStmtCacheSize\" value=\"350\" />\r\n<property name=\"hibernate.hikari.dataSource.prepStmtCacheSqlLimit\" value=\"2048\" />\r\n<property name=\"hibernate.hikari.dataSource.cachePrepStmts\" value=\"true\" />\r\n<property name=\"hibernate.hikari.dataSource.useServerPrepStmts\" value=\"true\" />\r\n<property name=\"hibernate.hikari.dataSource.useLocalSessionState\" value=\"true\" />\r\n<property name=\"hibernate.hikari.dataSource.useLocalTransactionState\" value=\"true\" />\r\n<property name=\"hibernate.hikari.dataSource.rewriteBatchedStatements\" value=\"true\" />\r\n<property name=\"hibernate.hikari.dataSource.cacheResultSetMetadata\" value=\"true\" />\r\n<property name=\"hibernate.hikari.dataSource.cacheResultSetMetadata\" value=\"true\" />\r\n<property name=\"hibernate.hikari.dataSource.cacheServerConfiguration\" value=\"true\" />\r\n<property name=\"hibernate.hikari.dataSource.elideSetAutoCommits\" value=\"true\" />\r\n<property name=\"hibernate.hikari.dataSource.maintainTimeStats\" value=\"false\" />\r\n\r\n<!--\r\n\tMySQL:  \r\n\tinteractive_timeout = 7200\r\n\twait_timeout = 1800\r\n\tmax_connections = 200\r\n\t\r\n\tidleTimeout, maxLifetime should be 1min less than wait_timeout = 1740s or 1740000ms\r\n --> \r\n\r\n<property name=\"hibernate.hikari.minimumIdle\" value=\"5\" />\r\n<property name=\"hibernate.hikari.maximumPoolSize\" value=\"200\" /> \r\n<property name=\"hibernate.hikari.idleTimeout\" value=\"740000\" /> \r\n<property name=\"hibernate.hikari.maxLifetime\" value=\"1740000\" /> \r\n<property name=\"hibernate.hikari.leakDetectionThreshold\" value=\"60000\" /> \r\n\r\n<property name=\"javax.persistence.jdbc.driver\" value=\"com.mysql.jdbc.Driver\" />\r\n<property name=\"javax.persistence.jdbc.url\" value=\"jdbc:mysql://localhost/mydb?autoReconnect=true&amp;useSSL=false\" />\r\n<property name=\"javax.persistence.jdbc.user\" value=\"myuser\" />\r\n<property name=\"javax.persistence.jdbc.password\" value=\"mypassword\" />\r\n```\r\n\r\n\r\n**HikariCP housekeeper log:**\r\n\r\n```\r\n1621219 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Before cleanup stats (total=27, active=22, idle=5, waiting=0)\r\n1621220 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After cleanup  stats (total=37, active=33, idle=4, waiting=0)\r\n```\r\n\r\n\r\n\r\n**MySQL thrads**\r\n\r\n```\r\nThreads_connected:\t22\r\nThreads_created:\t29\r\nThreads_running:\t2\r\n```\r\n\r\n**Hikari Leak detection log:**\r\n\r\n```\r\n295269 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.ProxyLeakTask - Connection leak detection triggered for com.mysql.jdbc.JDBC4Connection@64f645d5 on thread http-nio-8080-exec-9, stack trace follows\r\njava.lang.Exception: Apparent connection leak detected\r\n    at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:85)\r\n    at org.hibernate.hikaricp.internal.HikariCPConnectionProvider.getConnection(HikariCPConnectionProvider.java:77)\r\n    at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:386)\r\n    at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:84)\r\n    at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:109)\r\n    at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:47)\r\n    at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:146)\r\n    at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:172)\r\n    at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:148)\r\n    at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.prepareQueryStatement(AbstractLoadPlanBasedLoader.java:241)\r\n    at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeQueryStatement(AbstractLoadPlanBasedLoader.java:185)\r\n    at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:121)\r\n    at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:86)\r\n    at org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:88)\r\n    at org.hibernate.persister.collection.AbstractCollectionPersister.initialize(AbstractCollectionPersister.java:688)\r\n    at org.hibernate.event.internal.DefaultInitializeCollectionEventListener.onInitializeCollection(DefaultInitializeCollectionEventListener.java:75)\r\n    at org.hibernate.internal.SessionImpl.initializeCollection(SessionImpl.java:2004)\r\n    at org.hibernate.collection.internal.AbstractPersistentCollection$4.doWork(AbstractPersistentCollection.java:567)\r\n    at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:249)\r\n    at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:563)\r\n    at org.hibernate.collection.internal.AbstractPersistentCollection.read(AbstractPersistentCollection.java:132)\r\n    at org.hibernate.collection.internal.AbstractPersistentCollection$1.doWork(AbstractPersistentCollection.java:161)\r\n    at org.hibernate.collection.internal.AbstractPersistentCollection$1.doWork(AbstractPersistentCollection.java:146)\r\n    at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:249)\r\n    at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:145)\r\n    at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:261)\r\n    at javax.faces.model.ListDataModel.isRowAvailable(ListDataModel.java:110)\r\n    at javax.faces.model.ListDataModel.setRowIndex(ListDataModel.java:185)\r\n    at javax.faces.model.ListDataModel.setWrappedData(ListDataModel.java:220)\r\n    at javax.faces.model.ListDataModel.<init>(ListDataModel.java:79)\r\n    at org.primefaces.component.api.UIData.getDataModel(UIData.java:583)\r\n    at javax.faces.component.UIData.isRowAvailable(UIData.java:343)\r\n    at org.primefaces.component.api.UIData.setRowModel(UIData.java:418)\r\n    at org.primefaces.component.api.UIData.setRowIndex(UIData.java:397)\r\n    at org.primefaces.component.api.UIData.visitTree(UIData.java:629)\r\n    at javax.faces.component.UIComponent.visitTree(UIComponent.java:1623)\r\n    at javax.faces.component.UIComponent.visitTree(UIComponent.java:1623)\r\n    at javax.faces.component.UIComponent.visitTree(UIComponent.java:1623)\r\n    at javax.faces.component.UIComponent.visitTree(UIComponent.java:1623)\r\n    at javax.faces.component.UIForm.visitTree(UIForm.java:371)\r\n    at javax.faces.component.UIComponent.visitTree(UIComponent.java:1623)\r\n    at javax.faces.component.UIComponent.visitTree(UIComponent.java:1623)\r\n    at com.sun.faces.context.PartialViewContextImpl.processComponents(PartialViewContextImpl.java:376)\r\n    at com.sun.faces.context.PartialViewContextImpl.processPartial(PartialViewContextImpl.java:297)\r\n    at javax.faces.context.PartialViewContextWrapper.processPartial(PartialViewContextWrapper.java:183)\r\n    at javax.faces.component.UIViewRoot.encodeChildren(UIViewRoot.java:981)\r\n    at javax.faces.component.UIComponent.encodeAll(UIComponent.java:1779)\r\n    at com.sun.faces.application.view.FaceletViewHandlingStrategy.renderView(FaceletViewHandlingStrategy.java:391)\r\n    at com.sun.faces.application.view.MultiViewHandler.renderView(MultiViewHandler.java:125)\r\n    at com.sun.faces.lifecycle.RenderResponsePhase.execute(RenderResponsePhase.java:121)\r\n    at com.sun.faces.lifecycle.Phase.doPhase(Phase.java:101)\r\n    at com.sun.faces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:139)\r\n    at javax.faces.webapp.FacesServlet.service(FacesServlet.java:594)\r\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n    at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\r\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)\r\n    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)\r\n    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)\r\n    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)\r\n    at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:650)\r\n    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\r\n    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)\r\n    at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)\r\n    at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n    at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)\r\n    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)\r\n    at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n    at java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\n\r\n\r\nSome code that I use:\r\n\r\n**Business object layer**\r\n\r\n```\r\n@Transactional(readOnly = true)\r\npublic List<Person> getPersons() {\r\n    if (persons == null) {\r\n        try {\r\n            persons = new PersonBO().listAll(Person.class);\r\n        } catch (Exception e) {\r\n            getLog().error(\"Erro\", e);\r\n        }\r\n    }\r\n    return persons;\r\n}\r\n```\r\n\r\n\r\n**DAO Layer**\r\n\r\n```\r\n@Transactional(readOnly = true)\r\npublic List<E> listAll(Class<E> classEntity) throws Exception {\r\n    return list(createQuery(\"SELECT o FROM \" + classEntity.getSimpleName() + \" o\"));\r\n}\r\n\r\n@Transactional(readOnly = true)\r\npublic List<E> list(Query query) throws Exception {\r\n    List<E> entities = null;\r\n    if (query != null) {\r\n        try {\r\n            entities = query.getResultList();\r\n        } catch (Exception e) {\r\n            throw new Exception(e);\r\n        }\r\n    }\r\n    return entities;\r\n}\r\n\r\n@Transactional(readOnly = false)\r\nprivate Query createQuery(String jpql) {\r\n    Query query = null;\r\n    if (jpql != null && !jpql.isEmpty()) {\r\n        query = entityManager.createQuery(jpql);\r\n    }\r\n    return query;\r\n}\r\n\r\n```", "closed": "2018-12-10 18:35:09", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/1030", "ttf": 377.0002777777778, "commits": {}, "labels": ["not-a-bug"], "title": "Thread leak + Unable to acquire JDBC Connection (Hibernate + Hikari + MySQL)"}, {"created": "2017-11-27 18:01:21", "user": "OksanaMykhalets", "body": "#### Environment\r\n```\r\nHikariCP version: 2.2.5\r\nJDK version       : 1.8.0_144\r\nDatabase           : MySQL\r\nDriver version    : 5.1.43\r\nHibernate           : 4.3.6\r\n```\r\n-----------------------------------------------------------------------------------------\r\nI'm trying to investigate problem:\r\n\r\n`org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Could not open connection \r\n    at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:431) \r\n    at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373) \r\n    at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:427) \r\n    at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:276) \r\n    at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) \r\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) \r\n    at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655) \r\n    at de.bcg.xchange.requests.rest.RequestResource$$EnhancerBySpringCGLIB$$3bf285f1.fetchConversationByRequest(<generated>) \r\n    at sun.reflect.GeneratedMethodAccessor554.invoke(Unknown Source) \r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) \r\n    at java.lang.reflect.Method.invoke(Method.java:498) \r\n    at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:221) \r\n    at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) \r\n    at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110) \r\n    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:817) \r\n    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:731) \r\n    at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) \r\n    at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959) \r\n    at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893) \r\n    at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968) \r\n    at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859) \r\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:624) \r\n    at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844) \r\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:731) \r\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303) \r\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) \r\n    at de.bcg.xchange.platform.filters.gzip.GZipServletFilter.doFilter(GZipServletFilter.java:46) \r\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) \r\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) \r\n    at de.bcg.xchange.platform.filters.MDCUserInfoServletFilter.doFilter(MDCUserInfoServletFilter.java:52) \r\n    at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346) \r\n    at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262) \r\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) \r\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) \r\n    at ch.qos.logback.classic.helpers.MDCInsertingServletFilter.doFilter(MDCInsertingServletFilter.java:51) \r\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) \r\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) \r\n    at de.bcg.xchange.platform.filters.MDCInvocationFilter.doFilter(MDCInvocationFilter.java:25) \r\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) \r\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) \r\n    at com.codahale.metrics.servlet.AbstractInstrumentedFilter.doFilter(AbstractInstrumentedFilter.java:104) \r\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) \r\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) \r\n    at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) \r\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) \r\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) \r\n    at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:237) \r\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) \r\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) \r\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) \r\n    at de.bcg.xchange.platform.filters.MDCUserInfoServletFilter.doFilter(MDCUserInfoServletFilter.java:52) \r\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) \r\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) \r\n    at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:112) \r\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) \r\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) \r\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) \r\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316) \r\n    at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126) \r\n    at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90) \r\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) \r\n    at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114) \r\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) \r\n    at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:122) \r\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) \r\n    at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169) \r\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) \r\n    at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:48) \r\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) \r\n    at de.bcg.xchange.platform.filters.AcceptedTermsOfUseFilter.doFilterInternal(AcceptedTermsOfUseFilter.java:45) \r\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) \r\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) \r\n    at de.bcg.xchange.platform.filters.AgentLoginFilter.doFilterInternal(AgentLoginFilter.java:94) \r\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) \r\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) \r\n    at de.bcg.xchange.platform.filters.ImpersonateUserFilter.doFilterInternal(ImpersonateUserFilter.java:78) \r\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) \r\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) \r\n    at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:140) \r\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) \r\n    at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:120) \r\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) \r\n    at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64) \r\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) \r\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) \r\n    at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91) \r\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) \r\n    at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53) \r\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) \r\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) \r\n    at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213) \r\n    at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176) \r\n    at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346) \r\n    at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262) \r\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) \r\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) \r\n    at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) \r\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) \r\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) \r\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) \r\n    at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87) \r\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) \r\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) \r\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) \r\n    at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77) \r\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) \r\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) \r\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) \r\n    at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121) \r\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) \r\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) \r\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) \r\n    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:218) \r\n    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:110) \r\n    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:506) \r\n    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:169) \r\n    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103) \r\n    at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:962) \r\n    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116) \r\n    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:445) \r\n    at org.apache.coyote.ajp.AjpProcessor.process(AjpProcessor.java:190) \r\n    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:637) \r\n    at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:316) \r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) \r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) \r\n    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) \r\n    at java.lang.Thread.run(Thread.java:748) \r\nCaused by: javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Could not open connection \r\n    at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1763) \r\n    at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1677) \r\n    at org.hibernate.jpa.spi.AbstractEntityManagerImpl.throwPersistenceException(AbstractEntityManagerImpl.java:1771) \r\n    at org.hibernate.jpa.internal.TransactionImpl.begin(TransactionImpl.java:64) \r\n    at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:170) \r\n    at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:380) \r\n     ... 126 common frames omitted \r\nCaused by: org.hibernate.exception.GenericJDBCException: Could not open connection \r\n    at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:54) \r\n    at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:126) \r\n    at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:112) \r\n    at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:235) \r\n    at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:171) \r\n    at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67) \r\n    at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:162) \r\n    at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1435) \r\n    at org.hibernate.jpa.internal.TransactionImpl.begin(TransactionImpl.java:61) \r\n     ... 128 common frames omitted \r\nCaused by: java.sql.SQLException: Timeout after 34877ms of waiting for a connection. \r\n    at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:205) \r\n    at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:91) \r\n    at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:139) \r\n    at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:380) \r\n    at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:228) \r\n     ... 133 common frames omitted`\r\n\r\nI've enabled logging and found out one strange thing, could you please help to understand that:\r\nI'm using default maxPoolSize and minimumIdle and typical state of connections is:\r\n\r\n2017-11-27 15:27:00,352 [DEBUG] com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats HikariPool-0 (**total=10**, inUse=3, avail=7, waiting=0)\r\n2017-11-27 15:27:00,353 [DEBUG] com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats HikariPool-0 (**total=10**, inUse=3, avail=7, waiting=0)\r\n\r\nAs I get from the documentation for minimumIdle \"we recommend not setting this value and instead allowing HikariCP to act as a **fixed size connection pool**\", so I expect that total connections should always be equal to maxPoolSize.\r\nBut I see sometimes such cases:\r\n\r\n2017-11-27 15:35:30,351 [DEBUG] com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats HikariPool-0 (total=10, inUse=4, avail=6, waiting=0)\r\n2017-11-27 15:35:30,353 [DEBUG] com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats HikariPool-0 (**total=5**, inUse=4, avail=1, waiting=0)\r\n\r\n2017-11-27 16:11:07,255 [DEBUG] com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats HikariPool-0 (total=10, inUse=3, avail=7, waiting=0)\r\n2017-11-27 16:11:07,259 [DEBUG] com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats HikariPool-0 (**total=3**, inUse=3, avail=0, waiting=0)\r\n\r\nAnd thinking why it's changing and could it be a reason for the problem with java.sql.SQLException: Timeout after 34877ms of waiting for a connection that time-to-time there's fewer connections in the pool that is needed (this error appears pretty rarely)? Can minimumIdle help with the problem?", "closed": "2017-11-28 13:41:10", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/1028", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["not-a-bug", "question"], "title": "Decreasing of pool size in runtime"}, {"created": "2017-07-10 04:12:24", "user": "AyubOpen", "body": "#### Environment\r\n```\r\nHikariCP version:2.6.2\r\nJDK version     : 1.8.0_102\r\nDatabase        : Oracle\r\nDriver version  : 11.2.0.3\r\n```\r\n-----------------------------------------------------------------------------------------\r\n\r\n@brettwooldridge  I am trying the same appoarch as you mentioned about config.add for utf-8, but I still see the issue of garbled characters reading from oracle database. Code works if I use plain jdbc; below is my property file. complete code is on github https://github.com/AyubOpen/spring-boot-jdbc\r\n\r\n```\r\n//hikari.properties\r\ndriverClassName=oracle.jdbc.driver.OracleDriver\r\njdbcUrl=jdbc:oracle:thin:@localhost:1521/xe\r\nmaximumPoolSize=20\r\nusername=testdbapp\r\npassword=oracle\r\ndataSource.cachePrepStmts=true\r\ndataSource.prepStmtCacheSize=250\r\n```\r\n```java\r\n@configuration\r\npublic class AppConfig {\r\n\r\n   @Bean(destroyMethod = \"close\")\r\n   public DataSource dataSource() throws SQLException {\r\n      HikariConfig config = new HikariConfig(\"/hikari.properties\");\r\n      config.addDataSourceProperty(\"characterEncoding\",\"utf8\"); //tried with UTF-8 as well\r\n      config.addDataSourceProperty(\"useUnicode\",\"true\");\r\n      HikariDataSource dataSource = new HikariDataSource(config);\r\n\r\n      return dataSource;\r\n   }\r\n}\r\n```\r\nthis is a spring boot application, please advise\r\n", "closed": "2017-07-10 14:23:08", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/932", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["not-a-bug", "question"], "title": "UTF-8 encoding issue"}, {"created": "2017-07-07 04:49:47", "user": "Nbhaz", "body": "#### Environment\r\n```\r\nHikariCP version: 2.6.2\r\nJDK version     : 1.8.0_111\r\nDatabase        : MySQL\r\nDriver version  : 5.1.38\r\n```\r\n-----------------------------------------------------------------------------------------\r\nGetting following exceptions: \r\n\r\n2017-07-07 09:45:58.040 IST DEBUG rid=NA cid=NA 2717 --- [nnection closer] com.zaxxer.hikari.pool.PoolBase          : mdsDataSourcePool - Closing connection com.mysql.jdbc.JDBC4Connection@610dffca: (connection has passed maxLifetime)\r\nException in thread \"mdsDataSourcePool network timeout executor\" java.lang.NullPointerException\r\n\tat com.mysql.jdbc.MysqlIO.setSocketTimeout(MysqlIO.java:4980)\r\n\tat com.mysql.jdbc.ConnectionImpl$12.run(ConnectionImpl.java:5529)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)", "closed": "2017-07-10 14:35:49", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/930", "ttf": 3.000277777777778, "commits": {}, "labels": ["not-a-bug", "question"], "title": "Null Pointer exception while trying to close connection"}, {"created": "2017-04-25 11:07:57", "user": "huzefaalid", "body": "#### Environment\r\n```\r\nHikariCP version: 2.4.2\r\nJDK version     : 1.8.0_111\r\nDatabase        : Oracle\r\nDriver version  : oracle10g\r\n\r\nI am getting below stack trace while calling the procedure with Hibernate session..\r\nHibernate session i am taking from entitymanager. Please help me to resolve this.\r\njava.sql.SQLRecoverableException: Closed Statement\r\n\tat oracle.jdbc.driver.OracleClosedStatement.getMaxRows(OracleClosedStatement.java:3577)\r\n\tat oracle.jdbc.driver.OracleStatementWrapper.getMaxRows(OracleStatementWrapper.java:136)\r\n\tat com.zaxxer.hikari.pool.HikariProxyCallableStatement.getMaxRows(HikariProxyCallableStatement.java)\r\n\tat org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:154)\r\n\tat org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:292)\r\n\tat org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:228)\r\n\tat org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:183)\r\n\tat org.hibernate.internal.AbstractSharedSessionContract.close(AbstractSharedSessionContract.java:304)\r\n\tat org.hibernate.internal.SessionImpl.close(SessionImpl.java:409)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\r\n\tat java.lang.reflect.Method.invoke(Unknown Source)\r\n\tat org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:347)\r\n\tat com.sun.proxy.$Proxy125.close(Unknown Source)\r\n\tat org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:438)\r\n\tat org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor.afterCompletion(OpenEntityManagerInViewInterceptor.java:111)\r\n\tat org.springframework.web.servlet.handler.WebRequestHandlerInterceptorAdapter.afterCompletion(WebRequestHandlerInterceptorAdapter.java:72)\r\n\tat org.springframework.web.servlet.HandlerExecutionChain.triggerAfterCompletion(HandlerExecutionChain.java:170)\r\n\tat org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1055)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980)\r\n-----------------------------------------------------------------------------------------\r\nDB Configuration file\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\r\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n       xmlns:p=\"http://www.springframework.org/schema/p\"\r\n       xmlns:util=\"http://www.springframework.org/schema/util\"\r\n       xmlns:tx=\"http://www.springframework.org/schema/tx\"\r\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd\r\n\t\t\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd\r\n\t\t\thttp://www.springframework.org/schema/tx\r\n        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd\">\r\n        \r\n\r\n    <import resource=\"classpath:/jpa-persistence-conf.xml\"/>\r\n   <!--  <import resource=\"classpath:META-INF/spring/jdbc-persistence-conf.xml\"/> -->\r\n\r\n    <!-- TODO: To be checked with oracle in JBoss EAP -->\r\n    <!--<bean id=\"abstractDataSource\" abstract=\"true\" p:username=\"egs_testing\" p:password=\"egs_testing\"\r\n          class=\"org.springframework.jdbc.datasource.DriverManagerDataSource\"\r\n          p:driverClassName=\"oracle.jdbc.driver.OracleDriver\" p:url=\"jdbc:oracle:thin:@lnxdevvm366.hq.emirates.com:6516:jfod\"/>-->\r\n\r\n    <!-- <bean id=\"hikariConfig\"\r\n          p:username=\"lounge_ops\" p:password=\"lounge_ops\"\r\n          class=\"org.springframework.jdbc.datasource.DriverManagerDataSource\"\r\n          p:driverClassName=\"oracle.jdbc.driver.OracleDriver\" p:url=\"jdbc:oracle:thin:@lnxdevvm667.hq.emirates.com:6516:asuiod\"/> -->\r\n\r\n  <bean id=\"hikariConfig\" class=\"com.zaxxer.hikari.HikariConfig\"\r\n          p:driverClassName=\"oracle.jdbc.OracleDriver\" p:jdbcUrl=\"jdbc:oracle:thin:@10.50.200.224:1521:orcldev\"\r\n      p:username=\"T2_EBS_DEV\" p:password=\"T2_EBS_DEV\"/>\r\n\r\n     <bean id=\"transactionManager\" class=\"org.springframework.transaction.jta.JtaTransactionManager\"\r\n          depends-on=\"atomikosTransactionManager,atomikosUserTransaction\">\r\n        <property name=\"transactionManager\" ref=\"atomikosTransactionManager\"/>\r\n        <property name=\"userTransaction\" ref=\"atomikosUserTransaction\"/>\r\n    </bean>\r\n    <bean id=\"atomikosTransactionManager\" class=\"com.atomikos.icatch.jta.UserTransactionManager\"\r\n          init-method=\"init\" destroy-method=\"close\">\r\n        <property name=\"forceShutdown\" value=\"false\"/>\r\n    </bean>\r\n\r\n    <bean id=\"atomikosUserTransaction\" class=\"com.atomikos.icatch.jta.J2eeUserTransaction\">\r\n        <property name=\"transactionTimeout\" value=\"30000\"/>\r\n    </bean> \r\n    \r\n    \r\n    <bean id=\"appDataSource\"\r\n          class=\"com.zaxxer.hikari.HikariDataSource\">\r\n        <constructor-arg ref=\"hikariConfig\"/>\r\n    </bean>\r\n\r\n    <bean id=\"defaultJDBCDataSource\" parent=\"dataSource\"/>\r\n    <bean id=\"dataSource\" primary=\"true\"\r\n          class=\"com.tapro.db.config.datasource.DataSourceRouter\"\r\n          lazy-init=\"true\">\r\n        <property name=\"targetDataSources\">\r\n            <map>\r\n                <entry key=\"RODS\" value-ref=\"appDataSource\"/>\r\n                <entry key=\"RWDS\" value-ref=\"appDataSource\"/>\r\n                <entry key=\"XADS\" value-ref=\"appDataSource\"/>\r\n            </map>\r\n        </property>\r\n        <property name=\"defaultTargetDataSource\" ref=\"appDataSource\"/>\r\n    </bean>\r\n    \r\n    <!-- Security datasource - Ideally this is not required - Just for segregation\r\n        have put this -->\r\n    <bean id=\"securityDatasource\"\r\n          class=\"com.tapro.db.config.datasource.DataSourceRouter\"\r\n          lazy-init=\"true\">\r\n        <property name=\"targetDataSources\">\r\n            <map>\r\n                <entry key=\"RODS\" value-ref=\"appDataSource\"/>\r\n                <entry key=\"RWDS\" value-ref=\"appDataSource\"/>\r\n                <entry key=\"XADS\" value-ref=\"appDataSource\"/>\r\n            </map>\r\n        </property>\r\n        <property name=\"defaultTargetDataSource\" ref=\"appDataSource\"/>\r\n    </bean>\r\n    \r\n\r\n    <bean id=\"auditDatasource\"\r\n          class=\"com.tapro.db.config.datasource.DataSourceRouter\"\r\n          lazy-init=\"true\">\r\n        <property name=\"targetDataSources\">\r\n            <map>\r\n                <entry key=\"RODS\" value-ref=\"appDataSource\"/>\r\n                <entry key=\"RWDS\" value-ref=\"appDataSource\"/>\r\n                <entry key=\"XADS\" value-ref=\"appDataSource\"/>\r\n            </map>\r\n        </property>\r\n        <property name=\"defaultTargetDataSource\" ref=\"appDataSource\"/>\r\n    </bean>\r\n\r\n    <!-- <bean id=\"entityManagerFactory\"\r\n          class=\"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean\"\r\n          parent=\"abstractEntityManagerFactory\" lazy-init=\"true\">\r\n        <property name=\"dataSource\" ref=\"dataSource\"/>\r\n        <property name=\"persistenceUnitName\" value=\"oracle_pu\"/>\r\n    </bean> -->\r\n\r\n    <bean id=\"defaultEntityManagerFactory\"\r\n          class=\"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean\"\r\n          parent=\"abstractEntityManagerFactory\" lazy-init=\"true\">\r\n        <property name=\"dataSource\" ref=\"dataSource\"/>\r\n        <property name=\"persistenceUnitName\" value=\"oracle_pu\"/>\r\n    </bean>\r\n\r\n   <!--  <util:map id=\"entityMangerFactoryMap\">\r\n        <entry key=\"audit\" value-ref=\"entityManagerFactory\"/>\r\n        <entry key=\"securityService\" value-ref=\"entityManagerFactory\"/>\r\n    </util:map> -->\r\n\r\n    <!-- <alias name=\"defaultEntityManagerFactory\" alias=\"entityManagerFactory\"/>-->\r\n\t<bean id=\"springJtaPlatformAdapter\" class=\"com.tapro.db.config.jta.SpringJtaPlatformAdapter\">\r\n        <property name=\"jtaTransactionManager\" ref=\"transactionManager\" />\r\n    </bean>\r\n    <util:properties id=\"jpaProperties\">\r\n        <prop key=\"hibernate.show_sql\">true</prop>\r\n        <prop key=\"hibernate.format_sql\">true</prop>\r\n<!--         <prop key=\"hibernate.transaction.manager_lookup_class\">\r\n            com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup\r\n        </prop>\r\n        <prop key=\"hibernate.transaction.factory_class\">\r\n            org.hibernate.engine.transaction.internal.jta.CMTTransactionFactory\r\n            \r\n        </prop>  -->\r\n        \r\n       <!--  <prop key=\"hibernate.transaction.coordinator_class\">jta</prop> -->\r\n        <!--<prop key=\"hibernate.transaction.factory_class\">org.hibernate.engine.transaction.internal.jta.CMTTransactionFactory</prop>\r\n        <prop key=\"hibernate.connection.autocommit\">false</prop>-->\r\n        <!--<prop key=\"hibernate.transaction.jta.platform\">com.atomikos.icatch.jta.hibernate4.AtomikosPlatform</prop>-->\r\n        <!--<prop key=\"hibernate.transaction.jta.platform\">org.hibernate.service.jta.platform.internal.JBossAppServerJtaPlatform</prop>-->\r\n        <!-- <prop key=\"hibernate.transaction.jta.platform\">org.hibernate.service.jta.platform.internal.SunOneJtaPlatform</prop> -->\r\n        <prop key=\"hibernate.transaction.jta.platform\">com.tapro.db.config.jta.SpringJtaPlatformAdapter</prop>\r\n        <prop key=\"hibernate.transaction.flush_before_completion\">false</prop>\r\n        <prop key=\"hibernate.transaction.auto_close_session\">true</prop>\r\n        <prop key=\"hibernate.current_session_context_class\">jta</prop>\r\n        <prop key=\"hibernate.connection.release_mode\">auto</prop>\r\n    </util:properties>\r\n\t<tx:annotation-driven transaction-manager=\"transactionManager\"/>\r\n</beans>\r\n\r\nGetting session from getSession\r\n\tprotected Session getSession(){\r\n\t\t EntityManager entityManager = SharedEntityManagerCreator.createSharedEntityManager(entityManagerFactory);\r\n\t\t return entityManager.unwrap(Session.class);\r\n\t}\r\n\t", "closed": "2017-04-25 16:06:13", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/874", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["not-a-bug", "question"], "title": "HikariPool-0 - Connection oracle.jdbc.driver.T4CConnection@418d4665 marked as broken because of SQLSTATE(08003), ErrorCode(17009)"}, {"created": "2017-03-29 15:06:34", "user": "avolokhov", "body": "#### Environment\r\n```\r\nHikariCP version: 2.6.0\r\nJDK version     : 1.8.0_112\r\nDatabase        : MySQL\r\nDriver version  : 5.1.39\r\n```\r\n-----------------------------------------------------------------------------------------\r\nHi!\r\n\r\nI'm using hikari with slick. After updating hikari from 2.5.0 to 2.6.0 and slick from 3.2.0-M1 to 3.2.0 I started to get deadlocks in mysql driver. As a result, my streaming task stuck indefinitely.\r\nThe problem occurred twice, however I couldn't reproduce it synthetically.\r\nHere are the thread dumps.\r\nThe first one:\r\n```\r\nconnection closer id=46518 state=BLOCKED\r\n    - waiting to lock <0x0b7d22b9> (a com.mysql.jdbc.LoadBalancedConnectionProxy)\r\n     owned by slick-db-3 id=440\r\n    at com.mysql.jdbc.MultiHostConnectionProxy.invoke(MultiHostConnectionProxy.java:409)\r\n    at com.sun.proxy.$Proxy2.setNetworkTimeout(Unknown Source)\r\n    at com.mysql.jdbc.MultiHostMySQLConnection.setNetworkTimeout(MultiHostMySQLConnection.java:2323)\r\n    at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)\r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke(Method.java:497)\r\n    at com.mysql.jdbc.ReplicationConnectionProxy.invokeMore(ReplicationConnectionProxy.java:309)\r\n    at com.mysql.jdbc.MultiHostConnectionProxy.invoke(MultiHostConnectionProxy.java:452)\r\n    at com.sun.proxy.$Proxy3.setNetworkTimeout(Unknown Source)\r\n    at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:516)\r\n    at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:133)\r\n    at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$5(HikariPool.java:419)\r\n    at com.zaxxer.hikari.pool.HikariPool$$Lambda$8/590896586.run(Unknown Source)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n    at java.lang.Thread.run(Thread.java:745)\r\n\r\n    Locked synchronizers: count = 1\r\n      - java.util.concurrent.ThreadPoolExecutor$Worker@1ae17c12\r\n```\r\n```\r\nslick-db-3 id=440 state=BLOCKED\r\n    - waiting to lock <0x3b5e50f8> (a com.mysql.jdbc.ReplicationConnectionProxy)\r\n     owned by connection closer id=46518\r\n    at com.mysql.jdbc.ReplicationConnectionProxy.getCurrentConnection(ReplicationConnectionProxy.java:509)\r\n    at com.mysql.jdbc.ReplicationMySQLConnection.getCurrentConnection(ReplicationMySQLConnection.java:46)\r\n    at com.mysql.jdbc.ReplicationMySQLConnection.getActiveMySQLConnection(ReplicationMySQLConnection.java:42)\r\n    at com.mysql.jdbc.MultiHostMySQLConnection.getConnectionMutex(MultiHostMySQLConnection.java:2355)\r\n    at com.mysql.jdbc.PreparedStatement.realClose(PreparedStatement.java:2691)\r\n    at com.mysql.jdbc.StatementImpl.close(StatementImpl.java:532)\r\n    at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)\r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke(Method.java:497)\r\n    at com.mysql.jdbc.MultiHostConnectionProxy$JdbcInterfaceProxy.invoke(MultiHostConnectionProxy.java:103)\r\n      - locked com.mysql.jdbc.LoadBalancedConnectionProxy@b7d22b9\r\n    at com.sun.proxy.$Proxy7.close(Unknown Source)\r\n    at com.zaxxer.hikari.pool.ProxyStatement.close(ProxyStatement.java:76)\r\n    at slick.jdbc.StatementInvoker.results(StatementInvoker.scala:77)\r\n    at slick.jdbc.StatementInvoker.iteratorTo(StatementInvoker.scala:22)\r\n    at slick.jdbc.Invoker$class.foreach(Invoker.scala:48)\r\n    at slick.jdbc.StatementInvoker.foreach(StatementInvoker.scala:16)\r\n    at slick.jdbc.StreamingInvokerAction$class.run(StreamingInvokerAction.scala:22)\r\n    at slick.jdbc.SQLActionBuilder$$anon$1.run(StaticQuery.scala:98)\r\n    at slick.jdbc.SQLActionBuilder$$anon$1.run(StaticQuery.scala:98)\r\n    at slick.basic.BasicBackend$DatabaseDef$$anon$2.liftedTree1$1(BasicBackend.scala:240)\r\n    at slick.basic.BasicBackend$DatabaseDef$$anon$2.run(BasicBackend.scala:240)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n    at java.lang.Thread.run(Thread.java:745)\r\n\r\n    Locked synchronizers: count = 1\r\n      - java.util.concurrent.ThreadPoolExecutor$Worker@cc92bfc\r\n```\r\nAnd the second one:\r\n```\r\nslick-db-8 id=451 state=BLOCKED\r\n    - waiting to lock <0x68b16260> (a com.mysql.jdbc.ReplicationConnectionProxy)\r\n     owned by connection closer id=16614\r\n    at com.mysql.jdbc.ReplicationConnectionProxy.getCurrentConnection(ReplicationConnectionProxy.java:509)\r\n    at com.mysql.jdbc.ReplicationMySQLConnection.getCurrentConnection(ReplicationMySQLConnection.java:46)\r\n    at com.mysql.jdbc.ReplicationMySQLConnection.getActiveMySQLConnection(ReplicationMySQLConnection.java:42)\r\n    at com.mysql.jdbc.MultiHostMySQLConnection.getConnectionMutex(MultiHostMySQLConnection.java:2355)\r\n    at com.mysql.jdbc.PreparedStatement.realClose(PreparedStatement.java:2691)\r\n    at com.mysql.jdbc.StatementImpl.close(StatementImpl.java:532)\r\n    at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)\r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke(Method.java:497)\r\n    at com.mysql.jdbc.MultiHostConnectionProxy$JdbcInterfaceProxy.invoke(MultiHostConnectionProxy.java:103)\r\n      - locked com.mysql.jdbc.LoadBalancedConnectionProxy@155d2dea\r\n    at com.sun.proxy.$Proxy7.close(Unknown Source)\r\n    at com.zaxxer.hikari.pool.ProxyStatement.close(ProxyStatement.java:76)\r\n    at slick.jdbc.StatementInvoker.results(StatementInvoker.scala:77)\r\n    at slick.jdbc.StatementInvoker.iteratorTo(StatementInvoker.scala:22)\r\n    at slick.jdbc.Invoker$class.foreach(Invoker.scala:48)\r\n    at slick.jdbc.StatementInvoker.foreach(StatementInvoker.scala:16)\r\n    at slick.jdbc.StreamingInvokerAction$class.run(StreamingInvokerAction.scala:22)\r\n    at slick.jdbc.SQLActionBuilder$$anon$1.run(StaticQuery.scala:98)\r\n    at slick.jdbc.SQLActionBuilder$$anon$1.run(StaticQuery.scala:98)\r\n    at slick.basic.BasicBackend$DatabaseDef$$anon$2.liftedTree1$1(BasicBackend.scala:240)\r\n    at slick.basic.BasicBackend$DatabaseDef$$anon$2.run(BasicBackend.scala:240)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n    at java.lang.Thread.run(Thread.java:745)\r\n\r\n    Locked synchronizers: count = 1\r\n      - java.util.concurrent.ThreadPoolExecutor$Worker@bc0f752\r\n```\r\n```\r\nconnection closer id=16614 state=BLOCKED\r\n    - waiting to lock <0x6649c156> (a com.mysql.jdbc.JDBC4ReplicationMySQLConnection)\r\n     owned by slick-db-8 id=451\r\n    at com.mysql.jdbc.ReplicationMySQLConnection.getCurrentConnection(ReplicationMySQLConnection.java:46)\r\n    at com.mysql.jdbc.ReplicationMySQLConnection.getActiveMySQLConnection(ReplicationMySQLConnection.java:42)\r\n    at com.mysql.jdbc.MultiHostMySQLConnection.setNetworkTimeout(MultiHostMySQLConnection.java:2323)\r\n    at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)\r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke(Method.java:497)\r\n    at com.mysql.jdbc.ReplicationConnectionProxy.invokeMore(ReplicationConnectionProxy.java:309)\r\n    at com.mysql.jdbc.MultiHostConnectionProxy.invoke(MultiHostConnectionProxy.java:452)\r\n    at com.sun.proxy.$Proxy3.setNetworkTimeout(Unknown Source)\r\n    at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:516)\r\n    at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:133)\r\n    at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$5(HikariPool.java:419)\r\n    at com.zaxxer.hikari.pool.HikariPool$$Lambda$8/688491727.run(Unknown Source)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n    at java.lang.Thread.run(Thread.java:745)\r\n\r\n    Locked synchronizers: count = 1\r\n      - java.util.concurrent.ThreadPoolExecutor$Worker@747d5d1a\r\n```\r\n", "closed": "2017-03-30 18:55:46", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/854", "ttf": 1.0002777777777778, "commits": {}, "labels": ["not-a-bug"], "title": "deadlock with connection closer thread"}, {"created": "2017-02-22 10:45:01", "user": "debasishdas01", "body": "\r\n\r\n\r\n\r\npackage XXX;\r\n\r\nimport org.postgresql.PGConnection;\r\n\r\nimport java.sql.*;\r\n\r\npublic class NotificationTest {\r\n\r\n    public static void main(String args[]) throws Exception {\r\n        Class.forName(\"org.postgresql.Driver\");\r\n        String url = \"jdbc:postgresql://localhost:5432/TAHITIAN_APP_DB\";\r\n\r\n    //un-comment the next line and comment the line following next. Run to see 2 different results.\r\n//        Connection lConn = DriverManager.getConnection(url,\"tahitianuser\",\"tahitian\");\r\n        Connection lConn = DaoUtil.getDBConnection().unwrap(Connection.class);\r\n\r\n        System.out.println(\"lConn: \" +lConn.toString());\r\n\r\n        // Create two threads, one to issue notifications and\r\n        // the other to receive them.\r\n        Listener listener = new Listener(lConn);\r\n        Notifier notifier = new Notifier(lConn);\r\n        listener.start();\r\n        notifier.start();\r\n    }\r\n\r\n}\r\n\r\nclass Listener extends Thread {\r\n\r\n    private Connection conn;\r\n    private org.postgresql.PGConnection pgconn;\r\n\r\n    Listener(Connection conn) throws SQLException {\r\n        this.conn = conn;\r\n        this.pgconn = conn.unwrap(PGConnection.class);\r\n        Statement stmt = conn.createStatement();\r\n        stmt.execute(\"LISTEN new_facility_added\");\r\n        stmt.close();\r\n    }\r\n\r\n    public void run() {\r\n        while (true) {\r\n            try {\r\n                // issue a dummy query to contact the backend\r\n                // and receive any pending notifications.\r\n                Statement stmt = conn.createStatement();\r\n                ResultSet rs = stmt.executeQuery(\"SELECT 1\");\r\n                rs.close();\r\n                stmt.close();\r\n\r\n                org.postgresql.PGNotification notifications[] = pgconn.getNotifications();\r\n                if (notifications == null) {\r\n                    System.out.println(\"Got no notification\");\r\n                } else {\r\n                    for (int i=0; i<notifications.length; i++) {\r\n                        System.out.println(\"Got notification: \" + notifications[i].getName());\r\n                    }\r\n                }\r\n\r\n                // wait a while before checking again for new\r\n                // notifications\r\n                Thread.sleep(1000);\r\n            } catch (SQLException sqle) {\r\n                sqle.printStackTrace();\r\n            } catch (InterruptedException ie) {\r\n                ie.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nclass Notifier extends Thread {\r\n\r\n    private Connection conn;\r\n\r\n    public Notifier(Connection conn) {\r\n        this.conn = conn;\r\n    }\r\n\r\n    public void run() {\r\n        while (true) {\r\n            try {\r\n                Statement stmt = conn.createStatement();\r\n                stmt.execute(\"NOTIFY new_facility_added\");\r\n                stmt.close();\r\n                Thread.sleep(2000);\r\n            } catch (SQLException sqle) {\r\n                sqle.printStackTrace();\r\n            } catch (Exception ie) {\r\n                ie.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n--------------------------------------------------------\r\nDaoUtil.getDBConnection() basically returns the following\r\n\r\n            Sql2o sql2o = new Sql2o(aDataSource, new PostgresQuirks());\r\n            return (sql2o.open().getJdbcConnection());\r\n\r\n\r\nand the DataSource is -----HikariDataSource aDataSource\r\n\r\n--------------------------------------------------------\r\nResults using -- Connection lConn = DriverManager.getConnection(url,\"tahitianuser\",\"tahitian\");\r\n\r\nlConn: org.postgresql.jdbc4.Jdbc4Connection@6d21714c\r\nGot notification: new_facility_added\r\nGot no notification\r\nGot notification: new_facility_added\r\nGot no notification\r\nGot notification: new_facility_added\r\nGot no notification\r\nGot notification: new_facility_added\r\nGot no notification\r\nGot notification: new_facility_added\r\nGot no notification\r\nGot notification: new_facility_added\r\n\r\n----------------------------------------------------\r\n\r\nResults using -- Connection lConn = DaoUtil.getDBConnection().unwrap(Connection.class);\r\nor                       Connection lConn = DaoUtil.getDBConnection();\r\n\r\n2017-02-22 16:09:50,198 [main] INFO  com.zaxxer.hikari.HikariDataSource - TahitianConnectionPool_1 - Started.\r\n2017-02-22 16:09:50,352 [main] INFO  com.zaxxer.hikari.pool.PoolBase - TahitianConnectionPool_1 - Driver does not support get/set network timeout for connections. (Method org.postgresql.jdbc4.Jdbc4Connection.getNetworkTimeout() is not yet implemented.)\r\nlConn: org.postgresql.jdbc4.Jdbc4Connection@71e7a66b\r\nGot no notification\r\nGot no notification\r\nGot no notification\r\nGot no notification\r\nGot no notification\r\nGot no notification\r\nGot no notification\r\nGot no notification\r\nGot no notification\r\nGot no notification\r\nGot no notification\r\nGot no notification\r\nGot no notification\r\nGot no notification\r\n\r\n-----------------------------------------------------------------------------------------------------\r\nAm using the following maven config\r\n\r\n        <dependency>\r\n            <groupId>org.postgresql</groupId>\r\n            <artifactId>postgresql</artifactId>\r\n            <version>9.4-1200-jdbc41</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.zaxxer</groupId>\r\n            <artifactId>HikariCP</artifactId>\r\n            <version>2.5.1</version>\r\n        </dependency>\r\n--------------------------------------------------------------------------------------------------------\r\n\r\nAppreciate your help! \r\n\r\nDD", "closed": "2017-02-22 11:57:46", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/828", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["not-a-bug", "question"], "title": "Connection behaving differently"}, {"created": "2017-01-18 12:41:12", "user": "guven", "body": "Please see this post for details:\r\n\r\nhttps://github.com/kimchy/kimchy.github.com/blob/master/_posts/2008-11-23-juc-executorservice-gotcha.textile\r\n", "closed": "2017-01-18 15:01:18", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/810", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["not-a-bug"], "title": "Hikari is prone to not being able to create filler/adder threads"}, {"created": "2017-01-04 14:27:24", "user": "mi-st", "body": "I'm using H2 DB with default query timeout (0 means no timeout), but I still got timeouts from JDBC connection.   I noticed that query timeout was altered by Hikari   in metohd  PoolBase#isConnectionAlive .  It looks like Hikari uses query timeout if isNetworkTimeoutSupported  = false, but it doesn't  set it back to the original one. As result clients gets connection with query timeout set to validation timeout instead of default one.  ", "closed": "2017-01-04 19:55:07", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/800", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["not-a-bug"], "title": "Hikari changes query timeout to validation timeout"}, {"created": "2016-10-27 20:52:04", "user": "anverus", "body": "Metrics are exposed OK(ish)\r\n\r\n> \\# HELP hikaricp_connection_acquired_nanos Connection acquired time\r\n> \\# TYPE hikaricp_connection_acquired_nanos summary\r\n> hikaricp_connection_acquired_nanos_count{pool=\"MAIN\",} 28.0\r\n> hikaricp_connection_acquired_nanos_sum{pool=\"MAIN\",} 4251108.0\r\n> \\# HELP hikaricp_connection_acquired_nanos Connection acquired time\r\n> \\# TYPE hikaricp_connection_acquired_nanos summary\r\n> hikaricp_connection_acquired_nanos_count{pool=\"PERSONAL\",} 0.0\r\n> hikaricp_connection_acquired_nanos_sum{pool=\"PERSONAL\",} 0.0\r\n\r\nbut prometheus does not expect multiple type / help lines for same metric name\r\n<prometheus>:9090/status reports \r\n\r\n> text format parsing error in line 5: second HELP line for metric name \"hikaricp_connection_acquired_nanos\"\r\n\r\nFor reference using prometheus 1.2.1 and hikariCP 2.4.7\r\n", "closed": "2017-01-10 00:32:35", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/757", "ttf": 74.00027777777778, "commits": {}, "labels": ["not-a-bug"], "title": "Prometheus fails to parse metrics if more then one connection pool is in use"}, {"created": "2016-09-26 01:13:46", "user": "buremba", "body": "I use the default configuration and limit the maximum connection to 30.\n\nWhen I start the application, it works fine but after some time, I'm getting timeout errors even if there is only one running query.\n\nNormally, Hikari creates 30 connections but eventually it closes them in lifecycle process and keep only one connection in total.\n\nHere is the logs:\n\n```\n2016-09-26T04:09:23.875+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - After adding stats (total=30, active=0, idle=30, waiting=0)\n2016-09-26T04:09:23.979+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@3a3991: (connection has passed maxLifetime)\n2016-09-26T04:09:24.085+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@69a3a909: (connection has passed maxLifetime)\n2016-09-26T04:09:24.239+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@d63650f: (connection has passed maxLifetime)\n2016-09-26T04:09:24.241+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@3884f31d: (connection has passed maxLifetime)\n2016-09-26T04:09:24.253+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@2bf32fb: (connection has passed maxLifetime)\n2016-09-26T04:09:24.449+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@16676f84: (connection has passed maxLifetime)\n2016-09-26T04:09:24.454+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@7630a9d8: (connection has passed maxLifetime)\n2016-09-26T04:09:24.477+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@847598b: (connection has passed maxLifetime)\n2016-09-26T04:09:24.522+0300    DEBUG   generic-jdbc-query-executor housekeeper com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Pool stats (total=17, active=0, idle=17, waiting=0)\n2016-09-26T04:09:24.522+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@73b73056: (connection has passed maxLifetime)\n2016-09-26T04:09:24.528+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@5d7e4b1e\n2016-09-26T04:09:24.535+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@53b9aec1\n2016-09-26T04:09:24.540+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@5786206e\n2016-09-26T04:09:24.546+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@1284a4fa\n2016-09-26T04:09:24.551+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@3d8d3b0f\n2016-09-26T04:09:24.555+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@23dc55d9\n2016-09-26T04:09:24.560+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@453f949c\n2016-09-26T04:09:24.566+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@72ab5bb5\n2016-09-26T04:09:24.568+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@75043eb5: (connection has passed maxLifetime)\n2016-09-26T04:09:24.571+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@26aa53ac\n2016-09-26T04:09:24.576+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@6799a83d\n2016-09-26T04:09:24.584+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@5e3b5b26\n2016-09-26T04:09:24.590+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@76e5c5a7\n2016-09-26T04:09:24.595+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@226cfe4\n2016-09-26T04:09:24.595+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - After adding stats (total=28, active=0, idle=28, waiting=0)\n2016-09-26T04:09:24.604+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@23dc08a4: (connection has passed maxLifetime)\n2016-09-26T04:09:25.571+0300    DEBUG   generic-jdbc-query-executor housekeeper com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Pool stats (total=1, active=1, idle=0, waiting=0)\n2016-09-26T04:09:52.629+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@419d3e64: (connection has passed maxLifetime)\n2016-09-26T04:09:52.702+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@6ee17780: (connection has passed maxLifetime)\n2016-09-26T04:09:52.728+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@7924766: (connection has passed maxLifetime)\n2016-09-26T04:09:52.736+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@7d2175c9: (connection has passed maxLifetime)\n2016-09-26T04:09:52.769+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@2fcff8b6: (connection has passed maxLifetime)\n2016-09-26T04:09:52.831+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@43d88efc: (connection has passed maxLifetime)\n2016-09-26T04:09:52.892+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@ebb1aee: (connection has passed maxLifetime)\n2016-09-26T04:09:53.063+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@63738bb: (connection has passed maxLifetime)\n2016-09-26T04:09:53.132+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@6a216854: (connection has passed maxLifetime)\n2016-09-26T04:09:53.158+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@6635de94: (connection has passed maxLifetime)\n2016-09-26T04:09:53.229+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@6e6b9017: (connection has passed maxLifetime)\n2016-09-26T04:09:53.229+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@75f522e8: (connection has passed maxLifetime)\n2016-09-26T04:09:53.356+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@21917991: (connection has passed maxLifetime)\n2016-09-26T04:09:53.362+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@6df96001: (connection has passed maxLifetime)\n2016-09-26T04:09:53.522+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@1754fc2b: (connection has passed maxLifetime)\n2016-09-26T04:09:53.537+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@52182973: (connection has passed maxLifetime)\n2016-09-26T04:09:53.684+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@666c6598: (connection has passed maxLifetime)\n2016-09-26T04:09:53.706+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@3975fb68: (connection has passed maxLifetime)\n2016-09-26T04:09:53.737+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@704dcb78: (connection has passed maxLifetime)\n2016-09-26T04:09:53.748+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@10fabe6c: (connection has passed maxLifetime)\n2016-09-26T04:09:53.775+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@41be86de: (connection has passed maxLifetime)\n2016-09-26T04:09:53.776+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@6493fb67: (connection has passed maxLifetime)\n2016-09-26T04:09:53.789+0300    DEBUG   generic-jdbc-query-executor housekeeper com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Pool stats (total=18, active=0, idle=18, waiting=0)\n2016-09-26T04:09:53.794+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@4cacea28\n2016-09-26T04:09:53.798+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@11dd949b\n2016-09-26T04:09:53.802+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@4bcb036a\n2016-09-26T04:09:53.810+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@50e9539e\n2016-09-26T04:09:53.816+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@1f70b96c\n2016-09-26T04:09:53.821+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@6c4238c8\n2016-09-26T04:09:53.825+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@7a353e24\n2016-09-26T04:09:53.830+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@76376b51\n2016-09-26T04:09:53.835+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@9102cb6\n2016-09-26T04:09:53.854+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@62d6147f\n2016-09-26T04:09:53.856+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@514d611\n2016-09-26T04:09:53.865+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@1a7909eb\n2016-09-26T04:09:53.866+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - After adding stats (total=30, active=0, idle=30, waiting=0)\n2016-09-26T04:09:54.260+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@6b4927d7: (connection has passed maxLifetime)\n2016-09-26T04:09:54.413+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@13c8be9c: (connection has passed maxLifetime)\n2016-09-26T04:09:54.439+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@60ac73aa: (connection has passed maxLifetime)\n2016-09-26T04:09:54.451+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@45f03bd9: (connection has passed maxLifetime)\n2016-09-26T04:09:54.526+0300    DEBUG   generic-jdbc-query-executor housekeeper com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Pool stats (total=13, active=0, idle=13, waiting=0)\n2016-09-26T04:09:54.533+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@7f8a79bc\n2016-09-26T04:09:54.539+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@714d883d\n2016-09-26T04:09:54.545+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@757212cc\n2016-09-26T04:09:54.551+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@30708206\n2016-09-26T04:09:54.556+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@1c1b4a2d\n2016-09-26T04:09:54.559+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@18a35f3\n2016-09-26T04:09:54.563+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@640ba37c\n2016-09-26T04:09:54.567+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@505f7d49\n2016-09-26T04:09:54.571+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@16531f4d\n2016-09-26T04:09:54.576+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@462695d9\n2016-09-26T04:09:54.584+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@7f0fce22\n2016-09-26T04:09:54.591+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@541141bf\n2016-09-26T04:09:54.598+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@5a368507\n2016-09-26T04:09:54.602+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@28cc5bc5\n2016-09-26T04:09:54.610+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@29b3fe20\n2016-09-26T04:09:54.615+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@77f15e10\n2016-09-26T04:09:54.620+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@1901f354\n2016-09-26T04:09:54.620+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - After adding stats (total=30, active=0, idle=30, waiting=0)\n2016-09-26T04:09:55.575+0300    DEBUG   generic-jdbc-query-executor housekeeper com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Pool stats (total=1, active=1, idle=0, waiting=0)\n2016-09-26T04:10:22.343+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@69d4fa0f: (connection has passed maxLifetime)\n2016-09-26T04:10:22.486+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@7b721543: (connection has passed maxLifetime)\n2016-09-26T04:10:22.495+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@114fedf5: (connection has passed maxLifetime)\n2016-09-26T04:10:22.515+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@18b1e1a: (connection has passed maxLifetime)\n2016-09-26T04:10:22.549+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@65eb39de: (connection has passed maxLifetime)\n2016-09-26T04:10:22.649+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@df2abea: (connection has passed maxLifetime)\n2016-09-26T04:10:22.814+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@2592fde1: (connection has passed maxLifetime)\n2016-09-26T04:10:22.957+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@33da078f: (connection has passed maxLifetime)\n2016-09-26T04:10:23.017+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@7ddfff2d: (connection has passed maxLifetime)\n2016-09-26T04:10:23.071+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@29847ed9: (connection has passed maxLifetime)\n2016-09-26T04:10:23.093+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@53b9aec1: (connection has passed maxLifetime)\n2016-09-26T04:10:23.128+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@6be5d649: (connection has passed maxLifetime)\n2016-09-26T04:10:23.176+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@4fcd2621: (connection has passed maxLifetime)\n2016-09-26T04:10:23.310+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@5d7e4b1e: (connection has passed maxLifetime)\n2016-09-26T04:10:23.334+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@5e3b5b26: (connection has passed maxLifetime)\n2016-09-26T04:10:23.400+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@5786206e: (connection has passed maxLifetime)\n2016-09-26T04:10:23.497+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@6799a83d: (connection has passed maxLifetime)\n2016-09-26T04:10:23.511+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@7a889e28: (connection has passed maxLifetime)\n2016-09-26T04:10:23.533+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@1a50d9af: (connection has passed maxLifetime)\n2016-09-26T04:10:23.551+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@76e5c5a7: (connection has passed maxLifetime)\n2016-09-26T04:10:23.655+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@67d70633: (connection has passed maxLifetime)\n2016-09-26T04:10:23.658+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@58e15828: (connection has passed maxLifetime)\n2016-09-26T04:10:23.729+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@453f949c: (connection has passed maxLifetime)\n2016-09-26T04:10:23.748+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@7c2fbf84: (connection has passed maxLifetime)\n2016-09-26T04:10:23.755+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@211d6cf6: (connection has passed maxLifetime)\n2016-09-26T04:10:23.765+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@1284a4fa: (connection has passed maxLifetime)\n2016-09-26T04:10:23.793+0300    DEBUG   generic-jdbc-query-executor housekeeper com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Pool stats (total=12, active=0, idle=12, waiting=0)\n2016-09-26T04:10:23.799+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@23dc55d9: (connection has passed maxLifetime)\n2016-09-26T04:10:23.813+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@430d2704\n2016-09-26T04:10:23.826+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@4abec178\n2016-09-26T04:10:23.833+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@1f152ca1\n2016-09-26T04:10:23.836+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@53b998e8\n2016-09-26T04:10:23.847+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@6651d141\n2016-09-26T04:10:23.854+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@14929c4e\n2016-09-26T04:10:23.870+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@afb89ed\n2016-09-26T04:10:23.899+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@60d54bdf\n2016-09-26T04:10:23.904+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@6b3fa525\n2016-09-26T04:10:23.915+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@381d9ec8\n2016-09-26T04:10:23.919+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@2a9ab87\n2016-09-26T04:10:23.950+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@592c8ab5\n2016-09-26T04:10:23.985+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@648185fb\n2016-09-26T04:10:24.012+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@54fdf8da\n2016-09-26T04:10:24.030+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@226cfe4: (connection has passed maxLifetime)\n2016-09-26T04:10:24.048+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@5fc04255\n2016-09-26T04:10:24.054+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@3d8d3b0f: (connection has passed maxLifetime)\n2016-09-26T04:10:24.089+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@5c400805\n2016-09-26T04:10:24.096+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@405839d7\n2016-09-26T04:10:24.105+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@5985301a\n2016-09-26T04:10:24.105+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - After adding stats (total=30, active=0, idle=30, waiting=0)\n2016-09-26T04:10:24.276+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@26aa53ac: (connection has passed maxLifetime)\n2016-09-26T04:10:24.283+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@72ab5bb5: (connection has passed maxLifetime)\n2016-09-26T04:10:24.529+0300    DEBUG   generic-jdbc-query-executor housekeeper com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Pool stats (total=17, active=0, idle=17, waiting=0)\n2016-09-26T04:10:24.541+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@595afb40\n2016-09-26T04:10:24.552+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@579d1e1b\n2016-09-26T04:10:24.557+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@53a29030\n2016-09-26T04:10:24.561+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@16a01420\n2016-09-26T04:10:24.565+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@182e6d4f\n2016-09-26T04:10:24.569+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@27fcc597\n2016-09-26T04:10:24.573+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@6098e248\n2016-09-26T04:10:24.577+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@768feb6f\n2016-09-26T04:10:24.583+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@1da0a4e4\n2016-09-26T04:10:24.588+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@5c311aba\n2016-09-26T04:10:24.593+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@7b9c29d6\n2016-09-26T04:10:24.598+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@72c17159\n2016-09-26T04:10:24.603+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@6ade7c61\n2016-09-26T04:10:24.603+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - After adding stats (total=30, active=0, idle=30, waiting=0)\n2016-09-26T04:10:25.577+0300    DEBUG   generic-jdbc-query-executor housekeeper com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Pool stats (total=1, active=1, idle=0, waiting=0)\n2016-09-26T04:10:52.396+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@6c4238c8: (connection has passed maxLifetime)\n2016-09-26T04:10:52.451+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@50e9539e: (connection has passed maxLifetime)\n2016-09-26T04:10:52.545+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@4bcb036a: (connection has passed maxLifetime)\n2016-09-26T04:10:52.629+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@4cacea28: (connection has passed maxLifetime)\n2016-09-26T04:10:52.643+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@1f70b96c: (connection has passed maxLifetime)\n2016-09-26T04:10:52.725+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@7a353e24: (connection has passed maxLifetime)\n2016-09-26T04:10:52.997+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@11dd949b: (connection has passed maxLifetime)\n2016-09-26T04:10:53.081+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@1c1b4a2d: (connection has passed maxLifetime)\n2016-09-26T04:10:53.216+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@1a7909eb: (connection has passed maxLifetime)\n2016-09-26T04:10:53.223+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@62d6147f: (connection has passed maxLifetime)\n2016-09-26T04:10:53.244+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@514d611: (connection has passed maxLifetime)\n2016-09-26T04:10:53.334+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@76376b51: (connection has passed maxLifetime)\n2016-09-26T04:10:53.473+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@757212cc: (connection has passed maxLifetime)\n2016-09-26T04:10:53.506+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@7f8a79bc: (connection has passed maxLifetime)\n2016-09-26T04:10:53.564+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@29b3fe20: (connection has passed maxLifetime)\n2016-09-26T04:10:53.620+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@30708206: (connection has passed maxLifetime)\n2016-09-26T04:10:53.683+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@9102cb6: (connection has passed maxLifetime)\n2016-09-26T04:10:53.749+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@18a35f3: (connection has passed maxLifetime)\n2016-09-26T04:10:53.792+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@462695d9: (connection has passed maxLifetime)\n2016-09-26T04:10:53.794+0300    DEBUG   generic-jdbc-query-executor housekeeper com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Pool stats (total=18, active=0, idle=18, waiting=0)\n2016-09-26T04:10:53.800+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@6d6a8686\n2016-09-26T04:10:53.804+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@1e09997a\n2016-09-26T04:10:53.807+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@76330d21\n2016-09-26T04:10:53.812+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@2f32bd4d\n2016-09-26T04:10:53.820+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@4814f6b\n2016-09-26T04:10:53.827+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@2063d13\n2016-09-26T04:10:53.830+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@59dd925e\n2016-09-26T04:10:53.833+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@18198fd\n2016-09-26T04:10:53.842+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@70368c00\n2016-09-26T04:10:53.850+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@77f15e10: (connection has passed maxLifetime)\n2016-09-26T04:10:53.851+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@7c98fb4b\n2016-09-26T04:10:53.875+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@69c4ec4\n2016-09-26T04:10:53.885+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@11c44c6c\n2016-09-26T04:10:53.885+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - After adding stats (total=30, active=0, idle=30, waiting=0)\n2016-09-26T04:10:53.938+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@640ba37c: (connection has passed maxLifetime)\n2016-09-26T04:10:53.947+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@714d883d: (connection has passed maxLifetime)\n2016-09-26T04:10:54.218+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@1901f354: (connection has passed maxLifetime)\n2016-09-26T04:10:54.280+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@505f7d49: (connection has passed maxLifetime)\n2016-09-26T04:10:54.280+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@7f0fce22: (connection has passed maxLifetime)\n2016-09-26T04:10:54.340+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@541141bf: (connection has passed maxLifetime)\n2016-09-26T04:10:54.438+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@16531f4d: (connection has passed maxLifetime)\n2016-09-26T04:10:54.447+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@28cc5bc5: (connection has passed maxLifetime)\n2016-09-26T04:10:54.510+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@5a368507: (connection has passed maxLifetime)\n2016-09-26T04:10:54.532+0300    DEBUG   generic-jdbc-query-executor housekeeper com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Pool stats (total=13, active=0, idle=13, waiting=0)\n2016-09-26T04:10:54.912+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@bd3ce29\n2016-09-26T04:10:54.915+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@5142123\n2016-09-26T04:10:54.922+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@12ba559\n2016-09-26T04:10:54.926+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@44292b18\n2016-09-26T04:10:54.929+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@519e0732\n2016-09-26T04:10:54.933+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@7527291b\n2016-09-26T04:10:54.938+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@297a5b8b\n2016-09-26T04:10:54.946+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@2406d457\n2016-09-26T04:10:54.953+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@500f072\n2016-09-26T04:10:54.959+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@49a36e38\n2016-09-26T04:10:54.963+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@327ed284\n2016-09-26T04:10:54.968+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@20480cf0\n2016-09-26T04:10:54.973+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@22c9ebeb\n2016-09-26T04:10:54.977+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@70c99324\n2016-09-26T04:10:54.981+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@3467954b\n2016-09-26T04:10:54.991+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@542820bb\n2016-09-26T04:10:54.995+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@39d31f66\n2016-09-26T04:10:54.995+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - After adding stats (total=30, active=0, idle=30, waiting=0)\n2016-09-26T04:10:55.580+0300    DEBUG   generic-jdbc-query-executor housekeeper com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Pool stats (total=1, active=1, idle=0, waiting=0)\n2016-09-26T04:11:22.417+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@afb89ed: (connection has passed maxLifetime)\n2016-09-26T04:11:22.462+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@53b998e8: (connection has passed maxLifetime)\n2016-09-26T04:11:22.552+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@430d2704: (connection has passed maxLifetime)\n2016-09-26T04:11:22.559+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@6b3fa525: (connection has passed maxLifetime)\n2016-09-26T04:11:22.843+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@381d9ec8: (connection has passed maxLifetime)\n2016-09-26T04:11:22.875+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@2a9ab87: (connection has passed maxLifetime)\n2016-09-26T04:11:22.923+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@6651d141: (connection has passed maxLifetime)\n2016-09-26T04:11:23.011+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@5985301a: (connection has passed maxLifetime)\n2016-09-26T04:11:23.084+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@182e6d4f: (connection has passed maxLifetime)\n2016-09-26T04:11:23.103+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@5c400805: (connection has passed maxLifetime)\n2016-09-26T04:11:23.121+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@1f152ca1: (connection has passed maxLifetime)\n2016-09-26T04:11:23.135+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@6ade7c61: (connection has passed maxLifetime)\n2016-09-26T04:11:23.191+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@27fcc597: (connection has passed maxLifetime)\n2016-09-26T04:11:23.192+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@53a29030: (connection has passed maxLifetime)\n2016-09-26T04:11:23.413+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@60d54bdf: (connection has passed maxLifetime)\n2016-09-26T04:11:23.419+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@579d1e1b: (connection has passed maxLifetime)\n2016-09-26T04:11:23.479+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@72c17159: (connection has passed maxLifetime)\n2016-09-26T04:11:23.514+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@4abec178: (connection has passed maxLifetime)\n2016-09-26T04:11:23.547+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@54fdf8da: (connection has passed maxLifetime)\n2016-09-26T04:11:23.573+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@14929c4e: (connection has passed maxLifetime)\n2016-09-26T04:11:23.643+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@7b9c29d6: (connection has passed maxLifetime)\n2016-09-26T04:11:23.651+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@405839d7: (connection has passed maxLifetime)\n2016-09-26T04:11:23.724+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@5fc04255: (connection has passed maxLifetime)\n2016-09-26T04:11:23.729+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@648185fb: (connection has passed maxLifetime)\n2016-09-26T04:11:23.796+0300    DEBUG   generic-jdbc-query-executor housekeeper com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Pool stats (total=13, active=0, idle=13, waiting=0)\n2016-09-26T04:11:23.801+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@290c69bc\n2016-09-26T04:11:23.804+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@204d981\n2016-09-26T04:11:23.808+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@de20e9b\n2016-09-26T04:11:23.813+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@40dba463\n2016-09-26T04:11:23.828+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@57547a64\n2016-09-26T04:11:23.837+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@9bc33db\n2016-09-26T04:11:23.840+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@3d80c221\n2016-09-26T04:11:23.844+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@7f3f934f\n2016-09-26T04:11:23.856+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@1de109ec\n2016-09-26T04:11:23.859+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@608d54cc\n2016-09-26T04:11:23.862+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@6e4d4c63\n2016-09-26T04:11:23.862+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@592c8ab5: (connection has passed maxLifetime)\n2016-09-26T04:11:23.868+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@25dbd066\n2016-09-26T04:11:23.873+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@7622d9e1\n2016-09-26T04:11:23.878+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@2d745360\n2016-09-26T04:11:23.900+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@37fac2a9\n2016-09-26T04:11:23.910+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@5fadf80a\n2016-09-26T04:11:23.913+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@4968d75f\n2016-09-26T04:11:23.914+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - After adding stats (total=29, active=0, idle=29, waiting=0)\n2016-09-26T04:11:23.958+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@16a01420: (connection has passed maxLifetime)\n2016-09-26T04:11:24.016+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@5c311aba: (connection has passed maxLifetime)\n2016-09-26T04:11:24.159+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@1da0a4e4: (connection has passed maxLifetime)\n2016-09-26T04:11:24.292+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@768feb6f: (connection has passed maxLifetime)\n2016-09-26T04:11:24.432+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@6098e248: (connection has passed maxLifetime)\n2016-09-26T04:11:24.535+0300    DEBUG   generic-jdbc-query-executor housekeeper com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Pool stats (total=18, active=0, idle=18, waiting=0)\n2016-09-26T04:11:24.538+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@595afb40: (connection has passed maxLifetime)\n2016-09-26T04:11:24.540+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@292f2182\n2016-09-26T04:11:24.545+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@27e8dad7\n2016-09-26T04:11:24.549+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@23d74af2\n2016-09-26T04:11:24.553+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@66d5d0ec\n2016-09-26T04:11:24.559+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@36a6de85\n2016-09-26T04:11:24.562+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@577994e4\n2016-09-26T04:11:24.566+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@4ee0c423\n2016-09-26T04:11:24.569+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@6fa2fa3\n2016-09-26T04:11:24.573+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@6288b0f\n2016-09-26T04:11:24.577+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@1d6df19a\n2016-09-26T04:11:24.580+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@55e4efc8\n2016-09-26T04:11:24.585+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@2b455e0\n2016-09-26T04:11:24.585+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - After adding stats (total=29, active=0, idle=29, waiting=0)\n2016-09-26T04:11:25.584+0300    DEBUG   generic-jdbc-query-executor housekeeper com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Pool stats (total=1, active=1, idle=0, waiting=0)\n2016-09-26T04:11:52.402+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@59dd925e: (connection has passed maxLifetime)\n2016-09-26T04:11:52.719+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@70368c00: (connection has passed maxLifetime)\n2016-09-26T04:11:52.773+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@11c44c6c: (connection has passed maxLifetime)\n2016-09-26T04:11:52.821+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@76330d21: (connection has passed maxLifetime)\n2016-09-26T04:11:52.856+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@6d6a8686: (connection has passed maxLifetime)\n2016-09-26T04:11:53.218+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@2f32bd4d: (connection has passed maxLifetime)\n2016-09-26T04:11:53.224+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@18198fd: (connection has passed maxLifetime)\n2016-09-26T04:11:53.260+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@4814f6b: (connection has passed maxLifetime)\n2016-09-26T04:11:53.418+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@7c98fb4b: (connection has passed maxLifetime)\n2016-09-26T04:11:53.493+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@2063d13: (connection has passed maxLifetime)\n2016-09-26T04:11:53.557+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@500f072: (connection has passed maxLifetime)\n2016-09-26T04:11:53.567+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@5142123: (connection has passed maxLifetime)\n2016-09-26T04:11:53.579+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@44292b18: (connection has passed maxLifetime)\n2016-09-26T04:11:53.697+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@1e09997a: (connection has passed maxLifetime)\n2016-09-26T04:11:53.748+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@69c4ec4: (connection has passed maxLifetime)\n2016-09-26T04:11:53.799+0300    DEBUG   generic-jdbc-query-executor housekeeper com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Pool stats (total=17, active=0, idle=17, waiting=0)\n2016-09-26T04:11:53.803+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@1716977f\n2016-09-26T04:11:53.808+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@3fa47f6e\n2016-09-26T04:11:53.812+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@486fbbf2\n2016-09-26T04:11:53.823+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@1392a090\n2016-09-26T04:11:53.837+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@7b44d8b4\n2016-09-26T04:11:53.842+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@2f6843cb\n2016-09-26T04:11:53.849+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@455d3860\n2016-09-26T04:11:53.854+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@d0d0e14\n2016-09-26T04:11:53.862+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@d436471\n2016-09-26T04:11:53.869+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@3ac1cf2f\n2016-09-26T04:11:53.875+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@36906ce6\n2016-09-26T04:11:53.891+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@a606d8b\n2016-09-26T04:11:53.891+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@3467954b: (connection has passed maxLifetime)\n2016-09-26T04:11:53.896+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@3766ef68\n2016-09-26T04:11:53.896+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - After adding stats (total=30, active=0, idle=30, waiting=0)\n2016-09-26T04:11:54.013+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@12ba559: (connection has passed maxLifetime)\n2016-09-26T04:11:54.088+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@70c99324: (connection has passed maxLifetime)\n2016-09-26T04:11:54.139+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@39d31f66: (connection has passed maxLifetime)\n2016-09-26T04:11:54.227+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@519e0732: (connection has passed maxLifetime)\n2016-09-26T04:11:54.304+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@49a36e38: (connection has passed maxLifetime)\n2016-09-26T04:11:54.445+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@542820bb: (connection has passed maxLifetime)\n2016-09-26T04:11:54.537+0300    DEBUG   generic-jdbc-query-executor housekeeper com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Pool stats (total=19, active=0, idle=19, waiting=0)\n2016-09-26T04:11:54.542+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@b21dd0e\n2016-09-26T04:11:54.548+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@327ed284: (connection has passed maxLifetime)\n2016-09-26T04:11:54.549+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@5e6221a\n2016-09-26T04:11:54.553+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@1d9b67e\n2016-09-26T04:11:54.560+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@44db2821\n2016-09-26T04:11:54.568+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@41175419\n2016-09-26T04:11:54.575+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@755548d3\n2016-09-26T04:11:54.583+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@39736a41\n2016-09-26T04:11:54.588+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@24f4d76e\n2016-09-26T04:11:54.593+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@5f38f875\n2016-09-26T04:11:54.599+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@f43091\n2016-09-26T04:11:54.605+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection org.postgresql.jdbc4.Jdbc4Connection@227763ac\n2016-09-26T04:11:54.605+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - After adding stats (total=29, active=0, idle=29, waiting=0)\n2016-09-26T04:11:54.814+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@2406d457: (connection has passed maxLifetime)\n2016-09-26T04:11:54.856+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@bd3ce29: (connection has passed maxLifetime)\n2016-09-26T04:11:54.857+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@22c9ebeb: (connection has passed maxLifetime)\n2016-09-26T04:11:54.873+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@297a5b8b: (connection has passed maxLifetime)\n2016-09-26T04:11:54.906+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@7527291b: (connection has passed maxLifetime)\n2016-09-26T04:11:54.959+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@20480cf0: (connection has passed maxLifetime)\n2016-09-26T04:11:55.589+0300    DEBUG   generic-jdbc-query-executor housekeeper com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Pool stats (total=1, active=1, idle=0, waiting=0)\n2016-09-26T04:11:57.533+0300    INFO    nioEventLoopGroup-5-1   io.netty.handler.logging.LoggingHandler [id: 0xeb6978f0, /0:0:0:0:0:0:0:0:9999] RECEIVED: [id: 0x08f3b9c2, /127.0.0.1:55626 => /127.0.0.1:9999]\n2016-09-26T04:12:25.280+0300    DEBUG   generic-jdbc-query-executor housekeeper com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Pool stats (total=13, active=0, idle=13, waiting=0)\n2016-09-26T04:12:25.280+0300    DEBUG   generic-jdbc-query-executor housekeeper com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Pool stats (total=11, active=0, idle=11, waiting=0)\n2016-09-26T04:12:25.280+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@66d5d0ec: (connection has passed maxLifetime)\n2016-09-26T04:12:25.288+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@6fa2fa3: (connection has passed maxLifetime)\n2016-09-26T04:12:25.288+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@3d80c221: (connection has passed maxLifetime)\n2016-09-26T04:12:25.296+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@55e4efc8: (connection has passed maxLifetime)\n2016-09-26T04:12:25.296+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@4968d75f: (connection has passed maxLifetime)\n2016-09-26T04:12:25.280+0300    DEBUG   nioEventLoopGroup-4-7   com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Timeout failure stats (total=1, active=1, idle=0, waiting=0)\n2016-09-26T04:12:25.306+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@36a6de85: (connection has passed maxLifetime)\n2016-09-26T04:12:25.306+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@de20e9b: (connection has passed maxLifetime)\n2016-09-26T04:12:25.308+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@292f2182: (connection has passed maxLifetime)\n2016-09-26T04:12:25.308+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@204d981: (connection has passed maxLifetime)\n2016-09-26T04:12:25.312+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@1d6df19a: (connection has passed maxLifetime)\n2016-09-26T04:12:25.312+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@290c69bc: (connection has passed maxLifetime)\n2016-09-26T04:12:25.314+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@7622d9e1: (connection has passed maxLifetime)\n2016-09-26T04:12:25.314+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@1de109ec: (connection has passed maxLifetime)\n2016-09-26T04:12:25.314+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@27e8dad7: (connection has passed maxLifetime)\n2016-09-26T04:12:25.314+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@57547a64: (connection has passed maxLifetime)\n2016-09-26T04:12:25.316+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@37fac2a9: (connection has passed maxLifetime)\n2016-09-26T04:12:25.316+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@6288b0f: (connection has passed maxLifetime)\n2016-09-26T04:12:25.322+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@7f3f934f: (connection has passed maxLifetime)\n2016-09-26T04:12:25.322+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@4ee0c423: (connection has passed maxLifetime)\n2016-09-26T04:12:25.322+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@25dbd066: (connection has passed maxLifetime)\n2016-09-26T04:12:25.323+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@2b455e0: (connection has passed maxLifetime)\n2016-09-26T04:12:25.323+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@9bc33db: (connection has passed maxLifetime)\n2016-09-26T04:12:25.328+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@23d74af2: (connection has passed maxLifetime)\n2016-09-26T04:12:25.328+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@6e4d4c63: (connection has passed maxLifetime)\n2016-09-26T04:12:25.331+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@40dba463: (connection has passed maxLifetime)\n2016-09-26T04:12:25.331+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection org.postgresql.jdbc4.Jdbc4Connection@577994e4: (connection has passed maxLifetime)\n2016-09-26T04:12:25.334+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@608d54cc: (connection has passed maxLifetime)\n2016-09-26T04:12:25.334+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@2d745360: (connection has passed maxLifetime)\n2016-09-26T04:12:25.334+0300    DEBUG   generic-jdbc-query-executor connection closer   com.zaxxer.hikari.pool.PoolBase generic-jdbc-query-executor - Closing connection com.mysql.jdbc.JDBC4Connection@5fadf80a: (connection has passed maxLifetime)\n2016-09-26T04:12:25.334+0300    DEBUG   generic-jdbc-query-executor connection adder    com.zaxxer.hikari.pool.HikariPool   generic-jdbc-query-executor - Added connection com.mysql.jdbc.JDBC4Connection@54b4105e\n2016-09-26T04:12:25.322+0300    ERROR   nioEventLoopGroup-4-7   org.rakam.server.http.HttpServer    An uncaught exception raised while processing request.\norg.skife.jdbi.v2.exceptions.UnableToObtainConnectionException: java.sql.SQLTransientConnectionException: generic-jdbc-query-executor - Connection is not available, request timed out after 27780ms.\n    at org.skife.jdbi.v2.DBI.open(DBI.java:230)\n    at org.rakam.ui.user.WebUserService.getUser(WebUserService.java:631)\n    at org.rakam.ui.user.WebUserHttpService.me(WebUserHttpService.java:297)\n    at java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:627)\n    at org.rakam.server.http.JsonParametrizedRequestHandler.handleInternal(JsonParametrizedRequestHandler.java:126)\n    at org.rakam.server.http.JsonParametrizedRequestHandler.handle(JsonParametrizedRequestHandler.java:93)\n    at org.rakam.server.http.RouteMatcher.handle(RouteMatcher.java:59)\n    at org.rakam.server.http.HttpServerHandler.channelRead(HttpServerHandler.java:75)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:318)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:304)\n    at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:276)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:263)\n    at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:147)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:318)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:304)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:112)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.sql.SQLTransientConnectionException: generic-jdbc-query-executor - Connection is not available, request timed out after 27780ms.\n    at com.zaxxer.hikari.pool.HikariPool.createTimeoutException(HikariPool.java:548)\n    at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186)\n    at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:145)\n    at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:83)\n    at org.rakam.analysis.JDBCPoolDataSource.getConnection(JDBCPoolDataSource.java:73)\n    at org.skife.jdbi.v2.DataSourceConnectionFactory.openConnection(DataSourceConnectionFactory.java:36)\n    at org.skife.jdbi.v2.DBI.open(DBI.java:212)\n    ... 23 more\n```\n\nIn fact, WebUserService only borrow one connection and uses it to run two separate queries so even if there is only one available connection, it should work in theory.\n\nHere is the code: https://github.com/rakam-io/rakam/blob/562f74accd870641f6d1ee56d5dad45e4f56d142/rakam-ui/src/main/java/org/rakam/ui/user/WebUserService.java#L631\n", "closed": "2016-09-27 01:51:02", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/731", "ttf": 1.0002777777777778, "commits": {}, "labels": ["not-a-bug"], "title": "Connection is not available error even if there idle connections."}, {"created": "2016-09-20 14:06:51", "user": "donbeave", "body": "Hello!\n\nWe use HikariCP with inside our Grails applications. After upgrading from `2.4.7` to `2.5.1` I started getting the following warning:\n\n```\njava.lang.RuntimeException: Reloading agent exited via exception, please raise a jira\n    at org.springsource.loaded.agent.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:110)\n    at sun.instrument.TransformerManager.transform(TransformerManager.java:188)\n    at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:428)\n    at sun.misc.Unsafe.defineAnonymousClass(Native Method)\n    at java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass(InnerClassLambdaMetafactory.java:326)\n    at java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite(InnerClassLambdaMetafactory.java:194)\n    at java.lang.invoke.LambdaMetafactory.metafactory(LambdaMetafactory.java:304)\n    at java.lang.invoke.CallSite.makeSite(CallSite.java:302)\n    at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)\n    at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)\n    at com.zaxxer.hikari.util.PropertyElf.setTargetFromProperties(PropertyElf.java:52)\n    at com.zaxxer.hikari.HikariConfig.<init>(HikariConfig.java:130)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n    at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:1075)\n    at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)\n    at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)\n    at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)\n    at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)\n    at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)\n    at resources$_run_closure1$_closure4$_closure5$_closure6.doCall(resources.groovy:56)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1426)\n    at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\n    at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\n    at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:294)\n    at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)\n    at groovy.lang.Closure.call(Closure.java:426)\n    at grails.spring.BeanBuilder.invokeBeanDefiningMethod(BeanBuilder.java:707)\n    at grails.spring.BeanBuilder.invokeMethod(BeanBuilder.java:565)\n    at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeOnDelegationObjects(ClosureMetaClass.java:446)\n    at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:369)\n    at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)\n    at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)\n    at groovy.lang.GroovSupport.invokeMethod(GroovyObjectSupport.java:46)\n    at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeOnDelegationObjects(ClosureMetaClass.java:430)\n    at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:369)\n    at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)\n    at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)\n    at groovy.lang.GroovyObjectSupport.invokeMethod(GroovyObjectSupport.java:46)\n    at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeOnDelegationObjects(ClosureMetaClass.java:430)\n    at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:369)\n    at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnCurrentN(ScriptBytecodeAdapter.java:82)\n    at resources$_run_closure1$_closure4$_closure5.doCall(resources.groovy:44)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1426)\n    at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\n    at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\n    at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:294)\n    at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)\n    at groovy.lang.Closure.call(Closure.java:426)\n    at groovy.lang.Closure.call(Closure.java:442)\n    at org.codehaus.groovy.runtime.DefaultGroovyMethods.each(DefaultGroovyMethods.java:2030)\n    at org.codehaus.groovy.runtime.DefaultGroovyMethods.each(DefaultGroovyMethods.java:2015)\n    at org.codehaus.groovy.runtime.DefaultGroovyMethods.each(DefaultGroovyMethods.java:2056)\n    at org.codehaus.groovy.runtime.dgm$162.invoke(Unknown Source)\n    at org.codehaus.groovy.runtime.callsite.PojoMedSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:274)\n    at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:56)\n    at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)\n    at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)\n    at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)\n    at resources$_run_closure1$_closure4.doCall(resources.groovy:43)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1426)\n    at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\n    at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\n    at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:294)\n    at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)\n    at groovy.lang.Closure.call(Closure.java:426)\n    at org.codehaus.groovy.runtime.DefaultGroovyMethods.callClosureForMapEntry(DefaultGroovyMethods.java:5226)\n    at org.codehaus.groovy.runtime.DefaultGroovyMethods.each(DefaultGroovyMethods.java:2107)\n    at org.codehaus.groovy.runtime.dgm$163.invoke(Unknown Source)\n    at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:274)\n    at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:56)\n    at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)\n    at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)\n    at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)\n    at resources$_run_closure1.doCall(es.groovy:33)\n    at resources$_run_closure1.doCall(resources.groovy)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1426)\n    at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\n    at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\n    at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:294)\n    at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)\n    at groovy.lang.Closure.call(Closure.java:426)\n    at groovy.lang.Closure.call(Closure.java:420)\n    at grails.spring.BeanBuilder.invokeBeanDefiningClosure(BeanBuilder.java:758)\n    at grails.spring.BeanBuilder.beans(BeanBuilder.java:588)\n    at org.grails.spring.RuntimeSpringConfigUtilities.reloadSpringResourcesConfig(RuntimeSpringConfigUtilities.java:100)\n    at grails.boot.config.GrailsApplicationPostProcessor.postProcessBeanDefinitionRegistry(GrailsApplicationPostProcessor.groovy:167)\n    at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:119)\n    at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:607)\n    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:462)\n    at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:117)\n    at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:689)\n    at org.springframework.boot.SpringApplication.run(SpringApplication.java:321)\n    at grails.boot.GrailsApp.run(GrailsApp.groovy:51)\n    at grails.boot.GrailsApp.run(GrailsApp.groovy:335)\n    at grailsrailsApp.run(GrailsApp.groovy:324)\n    at grails.boot.GrailsApp$run.call(Unknown Source)\n    at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)\n    at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)\n    at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:133)\n    at com.scentbird.messaging.Application.main(Application.groovy:10)\nCaused by: java.lang.NullPointerException\n    at org.springsource.loaded.agent.SpringLoadedPreProcessor.preProcess(SpringLoadedPreProcessor.java:217)\n    at org.springsource.loaded.agent.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:107)\n    ... 118 more\njava.lang.RuntimeException: Reloading agent exited via exception, please raise a jira\n    at org.springsource.loaded.agent.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:110)\n    at sun.instrument.TransformerManager.transform(TransformerManager.java:188)\n    at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:428)\n    at sun.misc.Unsafe.defineAnonymousClass(Native Method)\n    at java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass(InnerClassLambdaMetafactory.java:326)\n    at java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite(InnerClassLambdaMetafactory.java:194)\n    at java.lang.invoke.LambdaMetafactory.metafactory(LambdaMetafactory.java:304)\n    at java.lang.invoke.CallSite.makeSite(CallSite.java:302)\n    at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)\n    at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)\n    at com.zaxxer.hikari.util.PropertyElf.setProperty(PropertyElf.java:122)\n    at com.zaxxer.hikari.util.PropertyElf.lambda$setTargetFromProperties$0(PropertyElf.java:57)\n    at java.util.Hashtable.forEach(Hashtable.java:878)\n    at com.zaxxer.hikari.util.PropertyElf.setTargetFromProperties(PropertyElf.java:52)\n    at com.zaxxer.hikari.HikariConfig.<init>(HikariConfig.java:130)\n    at sun.reflect.NativeConstructorAccessorImpl.newIn(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n    at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:1075)\n    at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)\n    at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)\n    at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)\n    at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)\n    at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)\n    at resources$_run_closure1$_closure4$_closure5$_closure6.doCall(resources.groovy:56)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1426)\n    at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\n    at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\n    at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:294)\n    at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)\n    at groovy.lang.Closure.call(Closure.java:426)\n    at grails.spring.BeanBuilder.invokeBeanDefiningMethod(BeanBuilder.java:707)\n    at grails.spring.BeanBuilder.invokeMethod(BeanBuilder.java:565)\n    at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeOnDelegationObjects(ClosureMetaClass.java:446)\n    at org.codehaus.groovy.runtime.metacosureMetaClass.invokeMethod(ClosureMetaClass.java:369)\n    at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)\n    at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)\n    at groovy.lang.GroovyObjectSupport.invokeMethod(GroovyObjectSupport.java:46)\n    at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeOnDelegationObjects(ClosureMetaClass.java:430)\n    at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:369)\n    at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)\n    at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)\n    at groovy.lang.GroovyObjectSupport.invokeMethod(GroovyObjectSupport.java:46)\n    at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeOnDelegationObjects(ClosureMetaClass.java:430)\n    at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:369)\n    at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnCurrentN(ScriptBytecodeAdapter.java:82)\n    at resources$_run_closure1$_closure4$_closure5.doCall(resources.groovy:44)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1426)\n    at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\n    at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\n    at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:294)\n    at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)\n    at groovy.lang.Closure.call(Closure.java:426)\n    at groovy.lang.Closure.call(Closure.java:442)\n    at org.codehaus.groovy.runtime.DefaultGroovyMethods.each(DefaultGroovyMethods.java:2030)\n    at org.codehaus.groovy.runtime.DefaultGroovyMethods.each(DefaultGroovyMjava:2015)\n    at org.codehaus.groovy.runtime.DefaultGroovyMethods.each(DefaultGroovyMethods.java:2056)\n    at org.codehaus.groovy.runtime.dgm$162.invoke(Unknown Source)\n    at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:274)\n    at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:56)\n    at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)\n    at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)\n    at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)\n    at resources$_run_closure1$_closure4.doCall(resources.groovy:43)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1426)\n    at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\n    at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\n    at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:294)\n    at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)\n    at groovy.lang.Closure.call(Closure.java:426)\n    at org.codehaus.groovy.runtime.DefaultGroovyMethods.callClosureForMapEntry(DefaultGroovyMethods.java:5226)\n    at org.codehaus.groovy.runtime.DefaultGroovyMethods.each(DefaultGroovyMethods.java:2107)\n    at org.codehaus.groovy.runtime.dgm$163.invoke(Unknown Source)\n    at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:274)\n    at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:56)\n    at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)\n    org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)\n    at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)\n    at resources$_run_closure1.doCall(resources.groovy:33)\n    at resources$_run_closure1.doCall(resources.groovy)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1426)\n    at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\n    at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\n    at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:294)\n    at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)\n    at groovy.lang.Closure.call(Closure.java:426)\n    at groovy.lang.Closure.call(Closure.java:420)\n    at grails.spring.BeanBuilder.invokeBeanDefiningClosure(BeanBuilder.java:758)\n    at grails.spring.BeanBuilder.beans(BeanBuilder.java:588)\n    at org.grails.spring.RuntimeSpringConfigUtilities.reloadSpringResourcesConfig(RuntimeSpringConfigUtilities.java:100)\n    at grails.boot.config.GrailsApplicationPostProcessor.postProcessBeanDefinitionRegistry(GrailsApplicationPostProcessor.groovy:167)\n    at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:119)\n    at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:607)\n    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:462)\n    at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:117)\n    at org.springframework.boot.SpringApplication.refresh(Splication.java:689)\n    at org.springframework.boot.SpringApplication.run(SpringApplication.java:321)\n    at grails.boot.GrailsApp.run(GrailsApp.groovy:51)\n    at grails.boot.GrailsApp.run(GrailsApp.groovy:335)\n    at grails.boot.GrailsApp.run(GrailsApp.groovy:324)\n    at grails.boot.GrailsApp$run.call(Unknown Source)\n    at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)\n    at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)\n    at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:133)\n    at com.scentbird.messaging.Application.main(Application.groovy:10)\nCaused by: java.lang.NullPointerException\n    at org.springsource.loaded.agent.SpringLoadedPreProcessor.preProcess(SpringLoadedPreProcessor.java:217)\n    at org.springsource.loaded.agent.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:107)\n    ... 121 more\n```\n", "closed": "2016-09-20 17:46:26", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/727", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["not-a-bug"], "title": "\"Reloading agent exited via exception, please raise a jira\" with HikariCP 2.5.1"}, {"created": "2016-09-19 13:19:38", "user": "tonywestonuk", "body": "Hi,\nI create, and destroy HikariCP as part of a JavaEE app's lifecycle (rather than the containers lifecycle).\n\nHowever, I get the following error while closing it in the @PreDestroy method. \n\n`java.lang.NoClassDefFoundError: java/util/concurrent/ScheduledFuture\n    at com.zaxxer.hikari.pool.PoolEntry.close(PoolEntry.java:173)\n    at com.zaxxer.hikari.pool.HikariPool.closeConnection(HikariPool.java:411)\n    at com.zaxxer.hikari.pool.HikariPool.softEvictConnection(HikariPool.java:525)\n    at com.zaxxer.hikari.pool.HikariPool.softEvictConnections(HikariPool.java:339)\n    at com.zaxxer.hikari.pool.HikariPool.shutdown(HikariPool.java:205)\n    at com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:304)\n\n...\n\nCaused by: java.lang.ClassNotFoundException: Illegal access: this web application instance has been stopped already. Could not load [java.util.concurrent.ScheduledFuture]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.\n    at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1292)\n    at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1155)\n    at org.apache.tomee.catalina.TomEEWebappClassLoader.loadClass(TomEEWebappClassLoader.java:201)\n    at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1116)`\n", "closed": "2016-09-20 17:51:32", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/726", "ttf": 1.0002777777777778, "commits": {}, "labels": ["not-a-bug"], "title": "Exception when closing datasource when in @predestroy method"}, {"created": "2016-09-13 10:33:47", "user": "wplatform", "body": "If get/close connection is not the same thread ,the connection will leak\n\n//threadLocal differences , so the connection not return the pool,\npublic void requite(final T bagEntry)\n   {\n      bagEntry.lazySet(STATE_NOT_IN_USE);\n      final List<Object> threadLocalList = threadList.get();\n      if (threadLocalList != null) {\n         threadLocalList.add(weakThreadLocals ? new WeakReference<>(bagEntry) : bagEntry);\n      }\n      synchronizer.signal();\n   }\n", "closed": "2016-09-13 17:38:27", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/718", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["not-a-bug"], "title": "connection leak"}, {"created": "2016-08-28 14:42:40", "user": "godenji", "body": "Hi, thanks for Hikari, quite impressive on the performance front, very nice ;-)\n\nQuestion about interplay between idleTimeout and maxLifetime; with the following I'm seeing 116 connections open (with max used at 9) in MySQL:\n\n```\nminimumIdle=\"5\"\nmaximumPoolSize=\"10\"\nidleTimeout=\"0\" # does this negate maxLifetime setting?\nmaxLifetime=\"27000000\" # 7.5 hours (mysql timeout is 8 hours)\n```\n\nIn local dev I noticed that there were 6546 connections open, heh O_o \nThis may have to do with a bug in Play Framework where stop hooks are not getting called on application reload.\n\nJust trying to narrow down what may be causing the large number of open connections, suspect it's that the `idleTimeout` setting is causing `maxLifetime` to be ignored.\n", "closed": "2016-09-20 17:57:08", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/706", "ttf": 23.00027777777778, "commits": {}, "labels": ["not-a-bug", "question"], "title": "Relationship between idleTimeout and maxLifetime wrt open connections."}, {"created": "2016-06-07 10:34:07", "user": "coexia", "body": "I am trying to setup Hikari as a JNDI DataSource Factory on my tomcat 7. But Not sure that i have to add Hikari.jar inside tomcat lib or simply adding as maven dependency for using it as a JNDI \nDataSource. \n\nAnyway, Here are following steps which i did so far.\n1. Added Maven dependency into my POM.xml\n   \n   `<dependency>\n         <groupId>com.zaxxer</groupId>\n         <artifactId>HikariCP</artifactId>\n         <version>2.4.6</version>\n     </dependency>`\n2. Added following resource inside context.xml\n   <Resource name=\"jdbc/MysqlHikari\" auth=\"Container\"\n     factory=\"com.zaxxer.hikari.HikariJNDIFactory\"\n     type=\"javax.sql.DataSource\"\n     minimumIdle=\"5\" \n     maximumPoolSize=\"10\"\n     connectionTimeout=\"300000\"\n     dataSourceClassName=\"com.mysql.jdbc.jdbc2.optional.MysqlDataSource\"\n     dataSource.user=\"root\"\n     dataSource.password=\"\"\n     dataSource.url=\"jdbc:mysql://localhost:3306/coesi?useUnicode=true&amp;characterEncoding=utf-8\"/>  \n3. Added a Bean inside my persistance Config\n\n@Bean\n    public DataSource dataSource() {\n        Context ctx;\n        try {\n            ctx = new InitialContext();\n            return (DataSource) ctx.lookup(\"java:comp/env/jdbc/MysqlHikari\");\n        } catch (NamingException e) {\n            LOGGER.info(\"Error loockup to the database : \\\"java:comp/env/jdbc/MysqlHikari\\\".\");\n        }\n        return null;\n    }\n\nI am getting this following error \"DataSource must not be null\".\n\nFull Stack\n\nCaused by: org.springframework.beans.factory.BeanDefinitionStoreException: Factory method [public org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean com.ftprod.fappi.gc.config.PersistanceConfig.entityManagerFactoryBean()] threw exception; nested exception is java.lang.IllegalArgumentException: DataSource must not be null\n    at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:188)\n    at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:586)\n    ... 83 more\nCaused by: java.lang.IllegalArgumentException: DataSource must not be null\n    at org.springframework.util.Assert.notNull(Assert.java:112)\n    at org.springframework.jdbc.datasource.lookup.SingleDataSourceLookup.<init>(SingleDataSourceLookup.java:40)\n    at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.setDataSource(LocalContainerEntityManagerFactoryBean.java:231)\n    at com.ftprod.fappi.gc.config.PersistanceConfig.entityManagerFactoryBean(PersistanceConfig.java:59)\n    at com.ftprod.fappi.gc.config.PersistanceConfig$$EnhancerBySpringCGLIB$$238d1829.CGLIB$entityManagerFactoryBean$1(<generated>)\n    at com.ftprod.fappi.gc.config.PersistanceConfig$$EnhancerBySpringCGLIB$$238d1829$$FastClassBySpringCGLIB$$f799cb05.invoke(<generated>)\n    at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)\n    at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:312)\n    at com.ftprod.fappi.gc.config.PersistanceConfig$$EnhancerBySpringCGLIB$$238d1829.entityManagerFactoryBean(<generated>)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:166)\n    ... 84 more\n", "closed": "2016-09-23 18:32:51", "commitsDetails": [], "url": "https://github.com/brettwooldridge/HikariCP/issues/639", "ttf": 108.00027777777778, "commits": {}, "labels": ["not-a-bug", "question"], "title": "Getting error while including HikariCP as a JNDI DataSource Factory on Tomcat."}]}