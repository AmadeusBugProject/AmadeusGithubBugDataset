{"projectName": "facebook/fresco", "bugLabels": ["bug"], "captureTime": "Sun Jul  5 13:08:28 2020", "issues": [{"title": "com.caverock:androidsvg@1.2.1 XXE injection", "body": "### Description\r\n\r\n XML External Entity (XXE) Injection\r\nVulnerable module: com.caverock:androidsvg\r\nIntroduced through: com.caverock:androidsvg@1.2.1\r\nExploit maturity: No known exploit\r\nFixed in: 1.3.0\r\nDetailed paths and remediation\r\nIntroduced through: project@0.0.0 \u203a com.caverock:androidsvg@1.2.1\r\n\r\n### Reproduction\r\n\r\n### Solution\r\n\r\nRemediation: Upgrade to com.caverock:androidsvg@1.3\r\n\r\n### Additional Information\r\n\r\n* Fresco version: latest\r\n* Platform version: android\r\n\r\n### Overview\r\ncom.caverock.androidsvg is a SVG parser and renderer for Android.\r\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection via the SVG parsing component", "url": "https://github.com/facebook/fresco/issues/2507", "user": "deadjdona", "labels": ["bug"], "created": "2020-06-05 11:02:36", "closed": "2020-06-10 15:25:25", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Showcase crash for API <21", "body": "### Description\r\n\r\nShowcase is crashing for API <21.\r\n\r\n### Reproduction\r\nOpen \"Placeholder, Progress, Failure\" tab.\r\nhttps://imgur.com/a/eyfzeOv\r\n\r\n### Solution\r\n\r\nhttps://stackoverflow.com/a/41629944\r\nhttps://imgur.com/a/yWTwNrl\r\n\r\n### Additional Information\r\n* Platform version: [API <21]\r\n", "url": "https://github.com/facebook/fresco/issues/2426", "user": "Yithis", "labels": ["bug"], "created": "2019-10-28 14:26:30", "closed": "2019-10-30 13:24:35", "commits": {"53455d01e456b78030a74bba35571b2a8bf4e3cd": {"commitGHEventType": "referenced", "commitUser": "facebook-github-bot"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "53455d01e456b78030a74bba35571b2a8bf4e3cd", "commitGHEventType": "referenced", "commitUser": "facebook-github-bot", "commitParents": ["1dd0ccd4b63bd4acec59796e589eda010c4280cd"], "nameRev": "53455d01e456b78030a74bba35571b2a8bf4e3cd tags/v2.1.0~19", "commitMessage": "Fix crash for API <21 (#2427)\n\nSummary:\n## Motivation (required)\n\nhttps://github.com/facebook/fresco/issues/2426\n\n## Test Plan (required)\nRunning \"Showcase\" app.\n`./gradlew assembleDebug`\nPull Request resolved: https://github.com/facebook/fresco/pull/2427\n\nReviewed By: defHLT\n\nDifferential Revision: D18192435\n\nPulled By: oprisnik\n\nfbshipit-source-id: 4f912672d648399a3e94853169bfe80c917ecfcf\n", "commitDateTime": "2019-10-29 08:56:12", "authoredDateTime": "2019-10-29 08:54:31", "commitGitStats": [{"filePath": "samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/drawee/DraweeHierarchyFragment.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DraweeHierarchyFragment.java", "spoonMethods": [{"spoonMethodName": "com.facebook.fresco.samples.showcase.drawee.DraweeHierarchyFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["53455d01e456b78030a74bba35571b2a8bf4e3cd"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 0, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["samples/showcase/src/main/java/com/facebook/fresco/samples/showcase"], "changesInPackagesSPOON": ["com.facebook.fresco.samples.showcase.drawee.DraweeHierarchyFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)"]}, {"title": "Android Q open failed: EACCES (Permission denied)", "body": "### Description\r\n\r\nRun in Android Q beta 5 and use the URI from MediaStore but the image will not show.\r\n\r\n### Reproduction\r\n\r\nLoad image path from MediaStore and use the path to generate URI, then put it into the ImageRequest.\r\n\r\n### Solution\r\n\r\n\"resolver.openFileDescriptor(item, mode)\" Maybe use this will help?\r\n\r\n### Additional Information\r\n\r\n* Fresco version: last\r\n* Platform version: Android Q beta 5\r\n", "url": "https://github.com/facebook/fresco/issues/2378", "user": "Rogero0o", "labels": ["bug"], "created": "2019-07-19 07:46:52", "closed": "2019-08-08 14:04:28", "commits": {}, "ttf": 20.00027777777778, "commitsDetails": []}, {"title": "java.lang.Thread.parkFor$(Thread.java:2163)", "body": "\r\n### Description\r\nThis is an online bug that cannot be reproduced.\r\n\r\nMy stacktrace:\r\njava:\r\njava.lang.Thread.parkFor$(Thread.java:2163)\r\nsun.misc.Unsafe.park(Unsafe.java:358)\r\njava.util.concurrent.locks.LockSupport.park(LockSupport.java:190) java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2059)\r\njava.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)\r\njava.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1092)\r\njava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1152)\r\njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\ncom.facebook.imagepipeline.core.PriorityThreadFactory$1.run(PriorityThreadFactory.java:51)\r\n java.lang.Thread.run(Thread.java:784)\r\n\r\n\r\n### Additional Information\r\n\r\n* Fresco version: 1.13.0\r\n* Platform version: Android 9  level 28\r\n", "url": "https://github.com/facebook/fresco/issues/2374", "user": "bmwhanm", "labels": ["bug", "help wanted", "needs-details"], "created": "2019-07-09 17:36:22", "closed": "2020-03-03 11:28:52", "commits": {}, "ttf": 237.00027777777777, "commitsDetails": []}, {"title": "A group of network pictures, one does not show.", "body": "The url of the image that cannot be displayed is\r\n\r\n```\r\nhttps://qn.yixionline.com/enjoy/app/dev/children/enjoyShow/image/2019-04-17_16-51-08_348\r\n```\r\n\r\nFresco init config\r\n``` kotlin\r\nval pipelineConfig = OkHttpImagePipelineConfigFactory\r\n                .newBuilder(this, HttpServer.okHttpClient)\r\n```", "url": "https://github.com/facebook/fresco/issues/2326", "user": "hkllzh", "labels": ["bug", "good first issue", "help wanted"], "created": "2019-04-17 10:26:59", "closed": "2019-04-29 11:39:52", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "Scaling up image with RoundingParams works wrong (Android 9.0)", "body": "### Description\r\nHello, I've found a problem with scaling up images with Fresco with rounding params in Android 9.0.\r\n\r\nWhen image is small and it need to be scaled up to fill View (with CENTER_CROP ScaleType for example) it displays with artifacts. Looks like pixels are not interpolated to fill the view, but scaled separately and image looks pixelated\r\n\r\nAt the screenshot: top picture looks as expected, and the bottom one (with rounding) pixelated\r\n![screenshot_20190226-150018_my application](https://user-images.githubusercontent.com/2329931/53411821-9c544b80-39d8-11e9-8399-80c2cb01266b.jpg)\r\n\r\n### Reproduction\r\nrun code on Android 9 device (reprodused on Samsung Galaxy S 9 and Pixel 2)\r\n```\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    private static final String SMALL_IMAGE_URL = \"https://www.dropbox.com/s/5mxb5a2mae773c9/small.jpg?dl=1\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        Fresco.initialize(this);\r\n\r\n        LinearLayout root = new LinearLayout(this);\r\n\r\n        root.setOrientation(LinearLayout.VERTICAL);\r\n        root.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));\r\n\r\n        //first view without rounding\r\n        SimpleDraweeView firstImage = new SimpleDraweeView(this);\r\n        firstImage.setImageURI(SMALL_IMAGE_URL);\r\n        firstImage.getHierarchy().setActualImageScaleType(ScalingUtils.ScaleType.CENTER_CROP);\r\n        root.addView(firstImage, paramsForImage());\r\n\r\n        //same view, but with rounding\r\n        SimpleDraweeView secondImage = new SimpleDraweeView(this);\r\n        secondImage.setImageURI(SMALL_IMAGE_URL);\r\n        secondImage.getHierarchy().setActualImageScaleType(ScalingUtils.ScaleType.CENTER_CROP);\r\n        secondImage.getHierarchy().setRoundingParams(RoundingParams.fromCornersRadius(24));\r\n        root.addView(secondImage, paramsForImage());\r\n\r\n        setContentView(root);\r\n    }\r\n\r\n    private LinearLayout.LayoutParams paramsForImage() {\r\n        LinearLayout.LayoutParams result = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\r\n        result.weight = 1;\r\n        return result;\r\n    }\r\n\r\n}\r\n```\r\n\r\n### Additional Information\r\nMay be BitmapShader, which is used for rounding, works unexpected at Android 9.0\r\nRounding with overlay color works fine\r\n\r\n* Fresco version: 1.12.1\r\n* Platform version: Android 9.0\r\n", "url": "https://github.com/facebook/fresco/issues/2293", "user": "dmitrychistyakov", "labels": ["bug", "good first issue", "help wanted", "starter-task"], "created": "2019-02-26 12:22:39", "closed": "2019-03-01 17:53:52", "commits": {"6d3a538525d2eab10bd59400ee1fcaf9569bdf79": {"commitGHEventType": "referenced", "commitUser": "facebook-github-bot"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "6d3a538525d2eab10bd59400ee1fcaf9569bdf79", "commitGHEventType": "referenced", "commitUser": "facebook-github-bot", "commitParents": ["77de326819029c19b4d6155b3167563d6b141c3f"], "nameRev": "6d3a538525d2eab10bd59400ee1fcaf9569bdf79 tags/v1.14.0~83", "commitMessage": "Fix scaling up image with RoundingParams #2293 (#2294)\n\nSummary:\nThis is fix for issue #2293\nPull Request resolved: https://github.com/facebook/fresco/pull/2294\n\nReviewed By: oprisnik\n\nDifferential Revision: D14241045\n\nPulled By: erikandre\n\nfbshipit-source-id: a609e1fb48741db6d1e09f3b8544c615e1af46f5\n", "commitDateTime": "2019-02-28 09:33:53", "authoredDateTime": "2019-02-28 09:31:10", "commitGitStats": [{"filePath": "drawee/src/main/java/com/facebook/drawee/drawable/Rounded.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "drawee/src/main/java/com/facebook/drawee/drawable/RoundedBitmapDrawable.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "drawee/src/main/java/com/facebook/drawee/drawable/RoundedColorDrawable.java", "insertions": 25, "deletions": 0, "lines": 25}, {"filePath": "drawee/src/main/java/com/facebook/drawee/drawable/RoundedCornersDrawable.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "drawee/src/main/java/com/facebook/drawee/drawable/RoundedDrawable.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "drawee/src/main/java/com/facebook/drawee/generic/RoundingParams.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "drawee/src/main/java/com/facebook/drawee/generic/WrappingUtils.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "drawee/src/test/java/com/facebook/drawee/drawable/RoundedBitmapDrawableTest.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "drawee/src/test/java/com/facebook/drawee/drawable/RoundedColorDrawableTest.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "drawee/src/test/java/com/facebook/drawee/drawable/RoundedCornersDrawableTest.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "drawee/src/test/java/com/facebook/drawee/generic/RoundingParamsTest.java", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Rounded.java", "spoonMethods": [{"spoonMethodName": "com.facebook.drawee.drawable.setPaintFilterBitmap(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.drawee.drawable.getPaintFilterBitmap()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoundedBitmapDrawable.java", "spoonMethods": [{"spoonMethodName": "com.facebook.drawee.drawable.RoundedBitmapDrawable.updatePaint()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoundedColorDrawable.java", "spoonMethods": [{"spoonMethodName": "com.facebook.drawee.drawable.RoundedColorDrawable", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.drawee.drawable.RoundedColorDrawable.draw(android.graphics.Canvas)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoundedCornersDrawable.java", "spoonMethods": [{"spoonMethodName": "com.facebook.drawee.drawable.RoundedCornersDrawable", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.drawee.drawable.RoundedCornersDrawable.setPaintFilterBitmap(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.drawee.drawable.RoundedCornersDrawable.getPaintFilterBitmap()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.drawee.drawable.RoundedCornersDrawable.draw(android.graphics.Canvas)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoundedDrawable.java", "spoonMethods": [{"spoonMethodName": "com.facebook.drawee.drawable.RoundedDrawable", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.drawee.drawable.RoundedDrawable.setPaintFilterBitmap(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.drawee.drawable.RoundedDrawable.getPaintFilterBitmap()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoundingParams.java", "spoonMethods": [{"spoonMethodName": "com.facebook.drawee.generic.RoundingParams", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.drawee.generic.RoundingParams.setPaintFilterBitmap(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.drawee.generic.RoundingParams.getPaintFilterBitmap()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.drawee.generic.RoundingParams.equals(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.drawee.generic.RoundingParams.hashCode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WrappingUtils.java", "spoonMethods": [{"spoonMethodName": "com.facebook.drawee.generic.WrappingUtils.applyRoundingParams(com.facebook.drawee.drawable.Rounded,com.facebook.drawee.generic.RoundingParams)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.drawee.generic.WrappingUtils.resetRoundingParams(com.facebook.drawee.drawable.Rounded)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoundedBitmapDrawableTest.java", "spoonMethods": [{"spoonMethodName": "com.facebook.drawee.drawable.RoundedBitmapDrawableTest.testSetPaintFilterBitmap()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoundedColorDrawableTest.java", "spoonMethods": [{"spoonMethodName": "com.facebook.drawee.drawable.RoundedColorDrawableTest.testSetPaintFilterBitmap()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoundedCornersDrawableTest.java", "spoonMethods": [{"spoonMethodName": "com.facebook.drawee.drawable.RoundedCornersDrawableTest.testSetPaintFilterBitmap()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoundingParamsTest.java", "spoonMethods": [{"spoonMethodName": "com.facebook.drawee.generic.RoundingParamsTest.testSetPaintFilterBitmap()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.drawee.generic.RoundingParamsTest.testDefaults()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "large gif problem", "body": "when i load a large gif in demo app decoder with movie decoder ,it doesn't work\uff0cthe picture looks blurry.native decoder is work.\r\nThis is url(https://img2.tapimg.com/album/etag/FqOcaqDH1kQ16BuYuDinyhQkV_io.jpg?imageView2/2/w/984/interlace/1/ignore-error/1)\r\n![screenshot_20190122-170505_fresco showcase](https://user-images.githubusercontent.com/17633836/51524485-1d17a900-1e69-11e9-922b-79a10114088b.jpg)\r\n![screenshot_20190122-170449_fresco showcase](https://user-images.githubusercontent.com/17633836/51524491-230d8a00-1e69-11e9-8ae6-a038df894376.jpg)\r\n\r\n\r\n\r\n\r\n* Fresco version: [1.11.0]\r\n* Platform version: [28]\r\n", "url": "https://github.com/facebook/fresco/issues/2278", "user": "didixyy", "labels": ["bug"], "created": "2019-01-22 09:17:03", "closed": "2019-01-24 09:39:59", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "animated-gif 1.11.0 incorrectly published to maven central", "body": "\r\n### Description\r\nhttps://repo1.maven.org/maven2/com/facebook/fresco/animated-gif/1.11.0/\r\nmissing animated-gif-1.11.0.pom file.\r\n\r\nsee any other version - the file in place https://repo1.maven.org/maven2/com/facebook/fresco/animated-gif/1.10.0/\r\nAs result, the dependency can't be resolved by maven.\r\n\r\n### Reproduction\r\nMaven can't resolve the dependency.\r\n\r\n### Solution\r\n\r\nRe-publish animated-gif artifact.\r\n\r\n### Additional Information\r\n\r\n* Fresco version: 1.11.0\r\n", "url": "https://github.com/facebook/fresco/issues/2269", "user": "dryganets", "labels": ["bug"], "created": "2018-12-27 18:55:01", "closed": "2019-02-04 12:29:14", "commits": {}, "ttf": 38.000277777777775, "commitsDetails": []}, {"title": "When building via App Bundle, Fresco fails to find \"libimagepipeline.so\"", "body": "### Description\r\n\r\nWhen launching an Activity that uses Fresco, which has been generated via [Android App Bundle](https://developer.android.com/platform/technology/app-bundle/), it fails to find \"libimagepipeline.so\" and crashes the application.\r\n\r\n### Reproduction\r\n\r\n1. Create a sample application that uses Fresco\r\n2. Generate a signed Bundle\r\n3. Using [Bundle Tool](https://github.com/google/bundletool) build the APKs from the Bundle\r\n4. Using Bundle Tool, install the APK on to your device\r\n5. Navigate to Activity where Fresco is initialised\r\n6. Observe crash\r\n\r\n### Solution\r\n\r\nI originally thought this might have been an issue with minify, R8, or Proguard, but I disabled all of those, and still observed the same result when building via App Bundle.\r\n\r\nI have tested other components of my app that also use native libraries, but they all operate as expected, only with Fresco struggling to load the respective binary.\r\n\r\nA temporary, but not ideal solution I found is disabling splitting of APK's by `abi` using the following configuration, but including all the binaries results in a significantly larger APK size.\r\n\r\n```\r\nandroid {\r\n    // Rest of your configuration here\r\n    \r\n    bundle {\r\n        abi {\r\n            enableSplit false\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Additional Information\r\n\r\n* Fresco version: 1.10.0\r\n* Platform version: Samsung SM-G955F, Android 8.0.0", "url": "https://github.com/facebook/fresco/issues/2253", "user": "icerfish", "labels": ["bug", "help wanted"], "created": "2018-12-07 15:58:21", "closed": "2019-02-04 12:27:28", "commits": {}, "ttf": 58.000277777777775, "commitsDetails": []}, {"title": "Build Error -- imagepipeline:ndk_build_bitmaps", "body": "i'm getting this error everytime trying to build the samples! \r\n\r\n<img width=\"1920\" alt=\"screen shot 2018-11-30 at 10 40 12 pm\" src=\"https://user-images.githubusercontent.com/19984252/49316757-a5796d80-f4fa-11e8-92a5-87d070e9712f.png\">\r\n\r\n-------\r\nstacktrace: \r\n```\r\n2018-12-01 22:08:48.628 28543-20318/? E/ActivityThread: Failed to find provider info for com.google.android.apps.gsa.testing.ui.audio.recorded\r\n2018-12-01 22:08:52.668 1670-1687/? E/BatteryStatsService: modem info is invalid: ModemActivityInfo{ mTimestamp=0 mSleepTimeMs=0 mIdleTimeMs=0 mTxTimeMs[]=[0, 0, 0, 0, 0] mRxTimeMs=0 mEnergyUsed=0}\r\n2018-12-01 22:08:53.667 28543-20318/? E/ActivityThread: Failed to find provider info for com.google.android.apps.gsa.testing.ui.audio.recorded\r\n2018-12-01 22:15:41.736 28543-20318/? E/ActivityThread: Failed to find provider info for com.google.android.apps.gsa.testing.ui.audio.recorded\r\n2018-12-01 22:15:45.466 1670-1687/? E/BatteryStatsService: modem info is invalid: ModemActivityInfo{ mTimestamp=0 mSleepTimeMs=0 mIdleTimeMs=0 mTxTimeMs[]=[0, 0, 0, 0, 0] mRxTimeMs=0 mEnergyUsed=0}\r\n2018-12-01 22:15:46.770 28543-20318/? E/ActivityThread: Failed to find provider info for com.google.android.apps.gsa.testing.ui.audio.recorded\r\n2018-12-01 22:17:17.424 28543-20318/? E/ActivityThread: Failed to find provider info for com.google.android.apps.gsa.testing.ui.audio.recorded\r\n2018-12-01 22:17:22.457 28543-20318/? E/ActivityThread: Failed to find provider info for com.google.android.apps.gsa.testing.ui.audio.recorded\r\n2018-12-01 22:18:32.982 28543-20318/? E/ActivityThread: Failed to find provider info for com.google.android.apps.gsa.testing.ui.audio.recorded\r\n2018-12-01 22:18:38.019 28543-20318/? E/ActivityThread: Failed to find provider info for com.google.android.apps.gsa.testing.ui.audio.recorded\r\n    \r\n    --------- beginning of main\r\n2018-12-01 22:22:00.002 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:22:00.021 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:22:00.033 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:22:00.042 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:22:00.055 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:23:00.003 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:23:00.026 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:23:00.040 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:23:00.049 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:24:00.004 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:24:20.542 28543-20318/? E/ActivityThread: Failed to find provider info for com.google.android.apps.gsa.testing.ui.audio.recorded\r\n2018-12-01 22:24:20.643 1670-1687/? E/BluetoothAdapter: Bluetooth binder is null\r\n2018-12-01 22:24:20.646 1670-1687/? E/KernelCpuSpeedReader: Failed to read cpu-freq: /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state (No such file or directory)\r\n2018-12-01 22:24:20.648 1670-1687/? E/BatteryStatsService: modem info is invalid: ModemActivityInfo{ mTimestamp=0 mSleepTimeMs=0 mIdleTimeMs=0 mTxTimeMs[]=[0, 0, 0, 0, 0] mRxTimeMs=0 mEnergyUsed=0}\r\n2018-12-01 22:24:25.575 28543-20318/? E/ActivityThread: Failed to find provider info for com.google.android.apps.gsa.testing.ui.audio.recorded\r\n2018-12-01 22:24:30.602 28543-20318/? E/ActivityThread: Failed to find provider info for com.google.android.apps.gsa.testing.ui.audio.recorded\r\n2018-12-01 22:24:36.048 7721-6167/? E/WakeLock: GCM_HB_ALARM release without a matched acquire!\r\n2018-12-01 22:25:00.007 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:25:00.800 28543-20318/? E/ActivityThread: Failed to find provider info for com.google.android.apps.gsa.testing.ui.audio.recorded\r\n2018-12-01 22:25:03.644 1670-1687/? E/BatteryStatsService: modem info is invalid: ModemActivityInfo{ mTimestamp=0 mSleepTimeMs=0 mIdleTimeMs=0 mTxTimeMs[]=[0, 0, 0, 0, 0] mRxTimeMs=0 mEnergyUsed=0}\r\n2018-12-01 22:25:05.832 28543-20318/? E/ActivityThread: Failed to find provider info for com.google.android.apps.gsa.testing.ui.audio.recorded\r\n2018-12-01 22:25:15.212 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:25:15.223 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:26:00.008 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:27:00.008 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:28:00.005 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:28:00.017 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:28:00.028 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:28:22.100 28543-20318/? E/ActivityThread: Failed to find provider info for com.google.android.apps.gsa.testing.ui.audio.recorded\r\n2018-12-01 22:28:25.085 1670-1687/? E/BatteryStatsService: modem info is invalid: ModemActivityInfo{ mTimestamp=0 mSleepTimeMs=0 mIdleTimeMs=0 mTxTimeMs[]=[0, 0, 0, 0, 0] mRxTimeMs=0 mEnergyUsed=0}\r\n2018-12-01 22:28:27.130 28543-20318/? E/ActivityThread: Failed to find provider info for com.google.android.apps.gsa.testing.ui.audio.recorded\r\n2018-12-01 22:29:00.010 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:30:00.012 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:31:00.010 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:31:55.432 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:32:00.005 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:32:00.018 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:33:00.011 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:34:00.004 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:34:00.015 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:35:00.013 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:36:00.043 1670-1683/? E/memtrack: Couldn't load memtrack module\r\n2018-12-01 22:36:30.528 28543-20318/? E/ActivityThread: Failed to find provider info for com.google.android.apps.gsa.testing.ui.audio.recorded\r\n2018-12-01 22:36:32.698 7721-22163/? E/ctxmgr: [AppIntervalImpl]closeInterval: ongoing\r\n2018-12-01 22:36:35.527 28543-20318/? E/ActivityThread: Failed to find provider info for com.google.android.apps.gsa.testing.ui.audio.recorded\r\n2018-12-01 22:36:35.694 7721-4872/? E/PlaceInferenceEngine: Position timestamp out of order. Previous: 1543696073742, Current: 1542832589000. Skipping this Position.\r\n\r\n```\r\n\r\n----------\r\n\r\n\u00a0 NDK| Version\u00a0 | 18.1.5063045 | Installed\r\n-- | -- | -- | --\r\n\r\nNDK path:  /Users/doct0rX/Library/Android/sdk/ndk-bundle\r\n\r\n---------\r\n\r\nin my fresco/.gradle/local.properties:\r\n```\r\nndk.path=/path/to/android_ndk/r10e\r\n\r\norg.gradle.daemon=true\r\norg.gradle.parallel=true\r\norg.gradle.configureondemand=true\r\n```\r\n\r\n- build w/ gradle 4.4\r\n- building on Emulator: Pixel 2 - API 26 - Android 8 (Oreo)\r\n- OS: macOS 10.14.1", "url": "https://github.com/facebook/fresco/issues/2249", "user": "doct0rX", "labels": ["bug", "build"], "created": "2018-11-30 21:39:38", "closed": "2018-12-10 15:54:05", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "\"Parent has no child drawable!\" on Nokia's old devices if scaleType is specified for failure drawable", "body": "### Description\r\n\r\nWe've got some strange crashes on old Nokia's devices on `setFailureImage(resourceId, scaleType)` method call:\r\n```\r\nNon-fatal Exception: java.lang.NullPointerException: Parent has no child drawable!\r\n       at com.facebook.common.internal.Preconditions.checkNotNull(Preconditions.java:226)\r\n       at com.facebook.drawee.generic.WrappingUtils.wrapChildWithScaleType(WrappingUtils.java:129)\r\n       at com.facebook.drawee.generic.GenericDraweeHierarchy.getScaleTypeDrawableAtIndex(GenericDraweeHierarchy.java:361)\r\n       at com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(GenericDraweeHierarchy.java:465)\r\n       at com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(GenericDraweeHierarchy.java:484)\r\n       at my.favorite.app.PhotoPreviewBinder.onBindViewHolder(PhotoPreviewBinder.java:37)\r\n       ...\r\n```\r\n\r\n### Reproduction\r\n\r\nI don't know how to reproduce this crash, because we don't have that device. But I can show the lines of code where crash is occurred and how we handle it:\r\n```\r\nSimpleDraweeView photo = findViewById(R.id.photo);\r\n\r\nImageRequest imageRequest = ImageRequestBuilder.newBuilderWithSource(Uri.parse(entry.url))\r\n\t.setResizeOptions(ResizeOptions.forSquareSize(200))\r\n\t.build();\r\nphoto.setImageRequest(imageRequest);\r\n\r\nfinal GenericDraweeHierarchy hierarchy = photo.getHierarchy();\r\ntry {\r\n\t// **Crash is here!**\r\n\thierarchy.setFailureImage(R.drawable.video_preview_stub, ScalingUtils.ScaleType.CENTER_CROP);\r\n} catch (Exception e) {\r\n\t// And no crash here\r\n\thierarchy.setFailureImage(R.drawable.video_preview_stub);\r\n\tExceptionHook.hook(e);\r\n}\r\n```\r\n\r\n### Additional Information\r\n\r\n* Fresco version: 1.11.0\r\n* Devices: Nokia_X (RM-980), Nokia_XL (RM-1030), NokiaX2DS (RM-1013)\r\n* Android version: Android 4.1.2 (API 16), Android 4.3 (API 18)\r\n* Arch: armv7l", "url": "https://github.com/facebook/fresco/issues/2241", "user": "Kazemir", "labels": ["bug", "good first issue", "help wanted"], "created": "2018-11-14 07:37:46", "closed": "2019-11-11 03:40:50", "commits": {}, "ttf": 361.0002777777778, "commitsDetails": []}, {"title": "java.lang.NoClassDefFoundError when Fresco.initialize(this)", "body": "### Description\r\n\r\nHi, I have created a simple project https://github.com/shinwan2/SimpleFrescoApp. At `master` branch, running the app will trigger a crash on `Fresco.initialize(this)`.\r\nHere is the relevant stacktrace\r\n\r\n```\r\njava.lang.NoClassDefFoundError: Failed resolution of: Landroid/support/v4/util/Pools$SynchronizedPool;\r\n        at com.facebook.imagepipeline.core.ImagePipelineFactory.buildPlatformDecoder(ImagePipelineFactory.java:337)\r\n        at com.facebook.imagepipeline.core.ImagePipelineFactory.getPlatformDecoder(ImagePipelineFactory.java:356)\r\n        at com.facebook.imagepipeline.core.ImagePipelineFactory.getPlatformBitmapFactory(ImagePipelineFactory.java:319)\r\n        at com.facebook.imagepipeline.core.ImagePipelineFactory.getAnimatedFactory(ImagePipelineFactory.java:163)\r\n        at com.facebook.imagepipeline.core.ImagePipelineFactory.getImageDecoder(ImagePipelineFactory.java:222)\r\n        at com.facebook.imagepipeline.core.ImagePipelineFactory.getProducerFactory(ImagePipelineFactory.java:372)\r\n        at com.facebook.imagepipeline.core.ImagePipelineFactory.getProducerSequenceFactory(ImagePipelineFactory.java:402)\r\n        at com.facebook.imagepipeline.core.ImagePipelineFactory.getImagePipeline(ImagePipelineFactory.java:279)\r\n        at com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier.<init>(PipelineDraweeControllerBuilderSupplier.java:51)\r\n        at com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier.<init>(PipelineDraweeControllerBuilderSupplier.java:42)\r\n        at com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier.<init>(PipelineDraweeControllerBuilderSupplier.java:35)\r\n        at com.facebook.drawee.backends.pipeline.Fresco.initializeDrawee(Fresco.java:96)\r\n        at com.facebook.drawee.backends.pipeline.Fresco.initialize(Fresco.java:85)\r\n        at com.facebook.drawee.backends.pipeline.Fresco.initialize(Fresco.java:38)\r\n```\r\n\r\n### Reproduction\r\n\r\nPlease checkout to `master` branch, compile, and run in emulator or Android device.\r\n\r\n### Solution\r\n\r\nFresco (`com.facebook.imagepipeline`) needs additional dependency to `android.support.v4.util.Pools.SynchronizedPool` which based on [this](https://developer.android.com/reference/android/support/v4/util/Pools.SynchronizedPool) should be in `com.android.support:support-compat:28.0.0`.\r\n\r\n### Additional Information\r\n\r\n* Fresco version: 1.11.0\r\n* Platform version: Android Emulator API 27\r\n\r\nRelated with #2194", "url": "https://github.com/facebook/fresco/issues/2226", "user": "shinwan2", "labels": ["bug"], "created": "2018-10-20 05:48:36", "closed": "2019-02-07 11:11:50", "commits": {}, "ttf": 110.00027777777778, "commitsDetails": []}, {"title": "Bug when using regiondecode and resize together", "body": "when i using regiondecode and resize together, then  i find the image can not show correctly.\r\n`BitmapRegionDecoder` supperts resize.\r\nhow to repeat it :\r\n1.init, here `setDownsampleEnabled` is set \r\n```\r\nImagePipelineConfig.Builder pipelineConfigureBuilder = ImagePipelineConfig.newBuilder(this);\r\nImagePipelineConfig pipelineConfig=pipelineConfigureBuilder.setDownsampleEnabled(true).build();\r\nFresco.initialize(this, pipelineConfig, draweeConfig);\r\n```\r\n2. for a jpg 750*422\uff0c ResizeOption(375,211), region(164, 0, 586,422)\r\n\r\nwhat I see is as below\uff0cthe Bitmap resize did not seem to take effect\u3002Bitmap Size is not 211*211 which I want to be. Also scaleType is not correct.\r\n<img width=\"150\" height=\"150\" src=\"https://user-images.githubusercontent.com/7428590/45074726-2cdf5c80-b117-11e8-94f6-dd95860f0601.png\"/>\r\n\r\nwhe `setDownsampleEnabled` is set to `true`,  we will use inSampleSize, the following code `targetWidth` and `targetHeight` may be error? \r\n\r\n```\r\n protected CloseableReference<Bitmap> decodeStaticImageFromStream(\r\n            InputStream inputStream, BitmapFactory.Options options, @Nullable Rect regionToDecode) {\r\n        Preconditions.checkNotNull(inputStream);\r\n        int targetWidth = options.outWidth;\r\n        int targetHeight = options.outHeight;\r\n        if (regionToDecode != null) {\r\n            targetWidth = regionToDecode.width();\r\n            targetHeight = regionToDecode.height();\r\n        }\r\n        // ...\r\n        bitmapToReuse.reconfigure(targetWidth, targetHeight, options.inPreferredConfig);\r\n```\r\n\r\nAfter I change `targetWidth` to  `egionToDecode.width()/options.inSampleSize`, it works correctlly.\r\n<img width=\"150\" height=\"150\" src=\"https://user-images.githubusercontent.com/7428590/45074752-3ec0ff80-b117-11e8-9923-a4bdb2d61f63.png\"/>\r\n", "url": "https://github.com/facebook/fresco/issues/2201", "user": "qhyuan1992", "labels": ["bug", "good first issue", "help wanted", "starter-task"], "created": "2018-09-05 06:13:36", "closed": "2018-09-21 18:51:08", "commits": {"70003824db692e797b8121299c3832d671df0396": {"commitGHEventType": "referenced", "commitUser": "facebook-github-bot"}}, "ttf": 16.00027777777778, "commitsDetails": [{"commitHash": "70003824db692e797b8121299c3832d671df0396", "commitGHEventType": "referenced", "commitUser": "facebook-github-bot", "commitParents": ["dd0a6115c561b89c522ccb32178510f408c62743"], "nameRev": "70003824db692e797b8121299c3832d671df0396 tags/v1.11.0~26", "commitMessage": "fix bug when using DownSample and RegionDecoder together (#2203)\n\nSummary:\nTo fix the bug discribed in issue [2201](https://github.com/facebook/fresco/issues/2201)\n\nThe Image can not show correctly when using Resize and RegionDecoder together with `downsample` setting to `true`. Here I change the `targetWidth` and `targetHeight` with region decoder to fix the bug.\nwhe `setDownsampleEnable` is not  set to `true` or using default value. Resize is a process of pipeline before decoding (only for JPEG). so the region is not the same with the former. but this can be set in custom decoder.\nPull Request resolved: https://github.com/facebook/fresco/pull/2203\n\nReviewed By: oprisnik\n\nDifferential Revision: D9677783\n\nPulled By: defHLT\n\nfbshipit-source-id: c010728047ca4f8a876cb9284ee9efebcbc97ab1\n", "commitDateTime": "2018-09-21 03:21:18", "authoredDateTime": "2018-09-21 03:04:32", "commitGitStats": [{"filePath": "imagepipeline/src/main/java/com/facebook/imagepipeline/platform/DefaultDecoder.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DefaultDecoder.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.platform.DefaultDecoder.decodeFromStream(java.io.InputStream,android.graphics.BitmapFactory$Options,android.graphics.Rect,boolean)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["70003824db692e797b8121299c3832d671df0396"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["imagepipeline/src/main/java/com/facebook/imagepipeline/platform"], "changesInPackagesSPOON": ["com.facebook.imagepipeline.platform.DefaultDecoder.decodeFromStream(java.io.InputStream,android.graphics.BitmapFactory$Options,android.graphics.Rect,boolean)"]}, {"title": "Placeholder image scale type not working", "body": "### Description\r\n\r\nIn layout xml file, set SimpleDraweeView's placeholder scale type but not set placeholder image. The scale type not working when set placeholder image in Java code.\r\n\r\n### Reproduction\r\nLayout xml:\r\n```xml\r\n<com.facebook.drawee.view.SimpleDraweeView\r\n      android:id=\"@+id/drawee_view\"\r\n      android:layout_width=\"@dimen/drawee_width_medium\"\r\n      android:layout_height=\"300dp\"\r\n      fresco:placeholderImageScaleType=\"centerCrop\"\r\n      android:layout_marginTop=\"@dimen/margin_large\"\r\n      />\r\n```\r\nJava code:\r\n```Java\r\ndraweeView.getHierarchy().setPlaceholderImage(R.drawable.logo);\r\n```\r\n\r\n### Additional Information\r\n\r\n* Fresco version: 1.10.0\r\n* Platform version: Android 7.1.1, Nexus 6\r\n", "url": "https://github.com/facebook/fresco/issues/2193", "user": "fengshenzhu", "labels": ["bug"], "created": "2018-08-23 09:41:38", "closed": "2018-08-28 09:43:18", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Get load image callback when parent is GONE in android 7.0", "body": " ### Description\r\n\r\nI write code like this.\r\n![image](https://user-images.githubusercontent.com/4319006/42984959-d9ede7f4-8c21-11e8-8d91-154a382707f3.png)\r\nwhen i call  parent.setVisibility(GONE).\r\nIn android 7.1.1 callback log is not print.\r\nbut in android 7.0, call back log is print.\r\n\r\n\r\n* Fresco version: 1.10.0\r\n* Platform version:android 7.0  \r\n", "url": "https://github.com/facebook/fresco/issues/2161", "user": "jave1987", "labels": ["bug"], "created": "2018-07-20 05:47:26", "closed": "2019-03-18 10:05:37", "commits": {}, "ttf": 241.00027777777777, "commitsDetails": []}, {"title": "roundingBorderColor cause the placeholder image display error", "body": "```\r\n<com.facebook.drawee.view.SimpleDraweeView\r\n        android:layout_below=\"@id/button\"\r\n        android:id=\"@+id/simple\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"600px\"\r\n        fresco:placeholderImage=\"@drawable/logo\"\r\n        fresco:roundingBorderWidth=\"10px\"\r\n        fresco:roundingBorderColor=\"@color/image_detail_help_background\" />\r\n```\r\nthen \r\n\r\n![qq20180719-1](https://user-images.githubusercontent.com/18482342/42941365-1c51c57c-8b8f-11e8-88c8-a609a30fc3c4.png)\r\n\r\n* Fresco version: all version\r\n* Platform version:all devices", "url": "https://github.com/facebook/fresco/issues/2160", "user": "TongWeiLe", "labels": ["bug", "help wanted"], "created": "2018-07-19 12:06:38", "closed": "2018-07-23 11:15:19", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Invalid base64 string fails to decode on Android <7", "body": "base on api 'com.facebook.fresco:fresco:1.1.0' .\r\nCan be displayed using Google Chrome\uff0cPlease help me with the thank you\uff1bbase64 string as follows\uff1a\r\ndata:image/png;base64,\r\niVBORw0KGgoAAAANSUhEUgAAAWgAAAFoCAYAAAB65WHVAAAaeUlEQVR42u3dCbQcVZkH8IIBF1QU\r\nUFHBXZGjzDmjiCOCB2ZGQSCgKExAwCgimwEFFJUgoOwgBMMeIgLisAsSwmYwJuyLYTdCCCFhR8i+\r\nkO19c6urmnRCNrK8VFf//ufUCe+lq7rSdetXH7eq781CREQqmcxHICICaBERAbSICKBFRATQIiKA\r\nFhERQIuICKBFRAAtIiKAFhEBtIiIAFpERAAtIgJoEREBtIgIoEVEBNAiIoAWERFAi4gIoEVEAC0i\r\nIoAWEQG0iIgAWkREAC0iAmgREQG0iAigRUQE0CIigBYREUCLiAigRUQALSIigBYRAbSIiAC6dYey\r\nrO2Xpf33dfd63f1vXxH7WaVt1uH41WE/u7vtAhrQgAY0oAENaEADGtCABjSgAQ1oQAMa0IAGtOMH\r\naEADGtCABjSgAQ1oQAMa0ICuENB12M/uXg/6nXmC16F9drIvgHYCABrQgAY0oAENaO2TL4B2AgAa\r\n0IAGtA8Q0IDWPgENaCcAoAENaED7AAENaEADGtBtgkYdwHSCt3f77O6Lk/MW0A40oAENaEADGtCA\r\nBjSgAQ1oQAMa0IAGNKABDWhAAxrQgAY0oJ23gHagAQ1oQAMa0BUedrIOw0e6ONV3qE5AAxrQgAY0\r\noAENaEADGtCABjSgAQ1oQAMa0IAGNKABDWhAAxrQgAY0oAENaEADGtCABvRKg68Os2y3y/ngvAW0\r\nAw1oQAMa0IAGNKABDWhAAxrQgAY0oAENaEADGtCABjSgAQ1o5y2gHWhAAxrQgO5IoOt+Ian7yVH3\r\nGb/rMBN6J5+3gAY0oAENaL4AGtCABjSgAQ1oQAMa0HwBNKABDWhAA9oHCGhAAxrQgAY0oAENaEC3\r\nyQdoWEbrWa/91qv7RQ3QgLae9QANaEAD2nrWAzSgAW096wEa0IAGtPWsB2hAA9qJaj3rARrQgLae\r\n9QANaKnExalKJ0d3X3yr9Hl297+vSp+LABrQgAY0oAXQgAY0oAENaAE0oAEtgAY0oAENaEALoAEN\r\naAE0oAENaEADGnwVbuTer/suToqE6g/tWqVCANCA9n6ABjSgNTpgAhrQgAY0oL0foAENaEADGtCA\r\nBjSgNTpAA9q5AmhAA9r7ARrQgG6TBlKHg9kuzx7Drb5tt5OH5gU0oAENaEADGtCABrS2C2hAa+SA\r\nBjSgAQ1oQAMa0IAGtEYOaEADGtCABjSgAQ1oQLcJ0FWCqLsbcru8HzCrf/GtUrsGLaAB7eQANKAB\r\nDWhAAxrQ2iCgAQ1oQAMa0IAGNKABDWhAAxrQgAY0oAENaEADGtCArvwJ192w1/25z7rj3ckzcLfL\r\nDPGd0nYBDWhAAxrQgAY0oAENaEADGtCABjSgAQ1oQAMa0IAGNKABDWhAAxrQgAY0oAEN6AqcOHV4\r\ntrNdhlrtZGzqMGt5Jz8bD2hAAxrQgAY0oAENaEADGtCABjSgAQ1oQAMa0IAGNKABDWhAAxrQgAY0\r\noAENaEDXIDCt/r+vk585r8NwnFUqngANaEADGtCABjSgAQ1oQAMa0IAGNKABDWhAAxrQgAY0oAEN\r\naEADGtCABjSgAQ1oQHckDHW4INR92Mm6z8reLs+Od8qM34AGNKABDWhAAxrQgAY0oAENaEADGtCA\r\nBjSgAQ1oQAMa0IAGNKABDWhAL9vnufHGG8dRRx0VN910U4wcOTLGjRsXkyZNWuTS3VnafWm+Zvz4\r\n8TFq1KgYPHhwHHPMMbHpppsCGtCArkol1d0Nqx2GYe3Zs2dIZ/6fjFnSAQ3oigK93nrrxaBBgygM\r\naEADGtBVAjr/X/sJEyYQGNCABjSgqwT0JptsQl5AAxrQgK4a0Ouss05MmzaNvIAGNKABXTWghw4d\r\nSl1AAxrQgK7aNrfffnvivsH06tUL0ICuN9B1P9CdPJRl3TN27Fizc3fTBahWBSSgAf1GtrnRRhvR\r\ndimz5ZZbAhrQgAb0igM6/9acLF369+8PaEADGtArDughQ4aQdikzfPhwQAMa0IBecUCPGTOGtEuZ\r\n5557DtCABjSgVxzQEydOJO1SJv/sAA1oQAN6hQE9ZcoU0i5lJk+eDGhAtzfQdTgodRiWcWHrrIyh\r\nQeuS/LMzc7fhRgENaEADGtCABjSgBdCABjSg2xroV2ZHnPFyRJ9nI457PuLBxYyz1JWW89NrD34s\r\n4uePRwx6aeUdz/tfjDjmLxG9r54TJ90yJ0aO7wI0oAEN6HoAfVfCeL1/pG0OT8vf03JPsZz14oJf\r\n/8KMiH+/K73munL5c1qujtj9/u4/ln3zfT24K7IfzIls79mRfXdWrHLgjLh8xBxAAxrQgG5voJ+d\r\nmXAeEfGmhyI+nf7c4JG0PByx5n3pPW6NGDzfWP85exvniA+KWGtoxLuGRLzzr2n9m9PvLo3Y7u7u\r\nO44n3Znec9+E86Fp+XUC+sgE9BEz0+9mpGV6PPJiF6ABDWhAty/Qx76UtvVAxGdynB+N+ETC+WMP\r\npj/T77LbIr766Lyv/8u49PubIt6RcF7rbwXO7xgc8fa/RLw5/T77v4ht7lzxx/CEvILfP8HcpwXn\r\nX86K7PAE9OEJ6F2mxV5XzgQ0oAG9soZCbJdnNKsM9H7PRKyWQP5UgviTqXr+eKqkP5pw/sjwiDVS\r\nNbxBqpZntPQWnDgmvff1EWsnoN+Zqud33FLgvEaqoN96Y9pW+rvs4oiv3b6Cce5d4nx0Wo5KQB9R\r\n4twn4fyLVyPbc1p84fRXq3tit8l5VKWLE6AB3XFA905Ar55A/mRL9fyR+yM+lAOdINwwAT21BegB\r\nzxVAvzNVz2uW1fPbcpxT9fzmGyLelP5ulYHpNRekSvrW5f9ZnpguGtkBJc7HlDg3q+c+CehflEDv\r\nPiW2HgBoQAMa0G0M9IEJ6H9LIH+ipXr+cPr5gwnmt9wR8en057QWoJ9J5mWpYs5uLLo38uo5x/kt\r\nNxY4r3Zd2t7A8sbhgIhtl+PELiffU+L8y7Qcm5ZfNfudy+r5sBLnn06L7FuT48J7ZwEa0IAGdPsC\r\nfUACetXhBc6t1fP696WK+PZUQd83L9B5zk3rZH9KEN9YAJ3jnFfPqw8qcF4lx/matFyVlnMivjZk\r\nOeF8YEL5iCbOLV0bjeo54XxYwvnn0yPbaXJ89bzp1T6xAQ1oQAN6sV0cTydQU5X8sWb1PLyontdL\r\nIL7ptohP3ft6oBv9wKPTPlyZ1h00b/W86rUlzleXQF+eljMjth68DN0aOc4/SiAfmZbj8puCLV0b\r\n8/c995wSW/abXv0TG9CABjSgFwv02LSte8sbg3n1nHBeP/38gYTi6rdGbHDPgoHOc9yotO5laUko\r\nr359S9dGs3q+ogT6krT8NiF981LgnPYlO6jE+fjypmCjes5xnj0vzrtMTTi/2h4nNqABDWhALy4/\r\nHFN8KSXHuVE931dUz++/O1XEwyI+mf6cNnvh6x8zMq3/x6JiXnVgifOfiuq6AfRlJdAXp+WUiG1v\r\nXPJ9OzNV9dmPS5xPKG8K/nq+G4PNvuddE86nv9o+JzagAV33Bmlflj37P5X24e7ixuBr1XP6+X13\r\npop4aAL6rkUDnefox9M2Liqr5tbquYnzH0ugL0zLiRHbXb/4/XpmchSVcv60xollv/M81XPe91xW\r\nz7tOW2k4V6m4qMP3EADtoNiXluyXA31XcWPwteo5/bzuHRGrDIn4xJ2LBzrPrx5L2zm/RLnZ93xp\r\n8cWVBs4XlUDnrzk2YpvrFr29Y+8quzZOLPudj15I3/O3p8cWK7FyBjSgAW1fVhzQo9M+3FncGMyr\r\n5/eX1fN7b0+/T0B//I4lAzrPUSPSOv1LlC9vqZ7/UOL8+xLo89Ly64T0nxf+Vex9by67N44vuzaO\r\nXsBjdbvlOM+obLsGNKABbV+WKfvmQN8x98Zgs3p+z23p97dEfOz2JQe6gfSjab2zS5QvaameLyhx\r\n/l0J9DlF3/I2Vy94O/0fKJ/cOG4hfc+7vxpbnDGj0u0a0IAGtH1ZpuzzZNqH2+feGFy3rJ7ffWv6\r\n/eCIj972xoBuIP1IWvf0EuWLW6rnJs7nlkCfmZbDumLbq15fSU+bFfHWk9Lf/7AEOq+e877nPgnn\r\n3XKcZ1a+XQMa0IC2L8sG9Khi1LrGjcFUPb+3rJ7XGVZ8Y/Ajt75xoBtI509g9C2+Tfha3/OAsgsk\r\nx/msEuiz0s9HRPRYQJ/0bc9ErJl/a/D7Cef9E857zYzsOzNi2/NmtkW7BjSgAW1flil750APK7s2\r\nWqrnfDCk7OaID6e/mzp76bZ9VN5N8ZuyYj6/pXo+qwQ6r6j75V0d0yL73tTY9uLXfzX7helpOzd1\r\nxQ6/mx27XDQ7Lhk+p23aNaAB3TYNsl22WaWTozsa8g+eSO8ztLwxWFbPaw8rhhLNhxX90NClBzrP\r\nkfen7ZwQRaWcA312V1FB590fR0yJbNenI/vm6Mi+kZbNxsQ2J4+rTeFRh6FBXWQADeiVCfTI4mmN\r\nxo3Bluo5H4g/HxDpg8sIdAPpfID/Y8pquX950/CwSZH1GBXZjgnmXRLS307LTmMi22hk7HzWOEAD\r\nGtCABvReOdB/Lbs2WqrnfKS67IaI9f+27EA3kM5naMkflcu7OvqUOOcg5zDvWi75f38j/e6/Rsff\r\nR88ENKABDejOBvr7jxeP0zVuDN46dxqrNW8pxn1eb8jyATrPeaMiVtlvfGRfeyKynXOcn5mLc3PZ\r\nLS2bjIo+l08ENKABDejOBnrPx4rH6RpdG6l6flc5EP/bBxcTwn7gr8sP6MvzkfP2eiWyrRPQPcfO\r\nWz23Av2FUfGLywANaEADutOB/mfxOF2ja2O+aayygRHvv2X5AH3Kg+XYGvlTHIdOiGz7UZH97wK6\r\nOL6V4N5idNw5cgagAQ1oQHc20N8bUTxO1+jaaJnGKp9jMAf6fYOXHegGzkclnE/umvs0xyEJ6R6p\r\nkv7WU3Nxzqvqzzwe25zyspuEgAZ0d6JRpYPZyejPn++OKJ7WaNwYLKvnt5XTWOVjO69787IBfcpD\r\nZeX8m7SckZa+XY2xoRtQHzqpQHnHJyP7Zlq++FR8+aiXo2slte2Fzepd9zZfpfOo3QJoQK/Qhtzr\r\nH8XTGo0bg2Xfc14957Ok5EOHvncZgO77cInzKeW3Bn9bAv2bcumXj2w3O7KfTols58nx5X6v79aY\r\nOCvijCGzYs+LZkTvS2fEDY/MAjSgAQ3oDgH60eJpjUbXRkv1nM8xmA/C/56blg7oBs75AEenljjn\r\nz0CfVv6c43xSOZToyfmodRGbX/T6bTz0Yles25jGampkuyXEeyZAd5oYPQdMAzSgAQ3o+gP9nRzo\r\nQcVjdY3quWWG7nxmlHff+MaBPvXh8pnn08qvdPcrq+cmzieXOOezpOzXFZv3f32nxsw5EWsdnXD+\r\ndsL5Z9NSlZ3+/ElCundCdLtx0eOMKYAGNKABXW+g93ikeJwux/ltN8+tnvMZuvOB99e54Y0Bfeoj\r\nxYD8DZzzr3Wf3tK1cUpL9bwInPNcMHxOZHtMm4vzIQnngydHdlBC9ICJCemXo0e/yYAGNKABXXOg\r\nBxZdG82+5+YM3fm8gmtfv+RAN3A+rsT5nPKm4PxdG83q+YcJ5/MWvq39rpk1t3r+Sfrz4CkFzj9K\r\nOB+Ylv3HR7b1S7H9aRMBDWhAA7qeQO/+cPG0xhrzVc+NGbqviFhr0JIBfdqjJc75jb9zy37nhVXP\r\nvRPOAxb9rMavBs9qTASbHVpWzwel6vnHkwqce09IwCeg930lsv9+IXY4dQKgAQ3oFdXo2gXTKl3U\r\nlld2e6h4WqOJc7N6XvXaYtqqta5bPNANnI9vwfmsRVTPB3TFZgMW/yDdk+PSa/dJMO89peh7buJ8\r\nQInz/uMi2y8BvffLkW3xbGx/yvgVBnR3w9cu71elbQIa0PUE+sHiaY28ayMHerWyel7lz8Wkr2sP\r\nXDTQfR8thxPNZ1Dp3zIQf78FVM8HdsWXBiz5U87H/21mZDsmlPebVHRvNKrnFpz3STjv/a/Ivv9S\r\nZF9+Onos41ClgAY0oAFdKaB3fbB4WqPRtVFWz6tcW1TV+ZyCa1+7cKD75s9Qn5SWM1rGej6zpXru\r\n21I9J5w3+90b/wrK4TfMiOwbCeV9UuV8YFk9N3Auq+e9EtB7vRhZrxci22xs9DjxFUADGtCArgnQ\r\nDxRPa+RdG6u3Vs9XF7Nzr53+e+oCvhvSN/8G4sklzgNaprFq7dpoVs8/Tjifv/T7ePh1r0bWI4G8\r\nV6qce48r+p7z6vkHZfW8ZwL6ewnoPZ6L7D9Hxw4nvAxoQAMa0DUB+soC59UGtlTPqarO/piAvub1\r\nQJ8/qqyczywngj23pXpu3hhs9j0flOO87F/ePnzg9Mi2SSDv+UrZ95xXzi0493o+su8koHd7NrL/\r\neCJ2+u3LgAY0oAHd3kD3vL+4GfjajcFm9Zyq6uwPCeir5wX6+WnlxK/9WnCev3pu9j0f3BVf+v3y\r\nG1nj8GunRbZV3p2RcN6npXr+bonz7gnn3Z6JbOexDaQvvXMqoAENaEC3L9A759NRXVZ2bTSr56uK\r\nqjqfmupd6b+ntAB9zmPlRLCtM3S3Vs/N7o1DumLT3y//YY/6XDM1sv9JIO/+YtH33Kye93i2qJ6b\r\nI+N98cnY7qR/ARrQgF5Z2HT3gW6HC1COzBvJ1+8tbgau2sS5WT1fkZYLI9ZI1fX0lpuERwwvuzcG\r\nLKR6znH+SaqcL1hxY9Id9qcpkW2Zz8aSYN7zhbnVc+sMLVuMjs/3eaG6J3aF2m6VijXDjQIa0C3Z\r\n/+EC4kb13IpzvpwdseHAeV9/9VMl0P3nw7nZ95zjfOGKb4d9rpoc2eZjI+uZYO71XNG10cR597Rs\r\n/ET0OvsVQAMa0IBuX6D/Obnog85vCDYq6CtLnPOZt0+LuPypeV+fD2K0bv7aX88HdLNyvrD7RnM+\r\n7IpJjTGks6/nKD8zd8qsrz7VqKD//uRMQAMa0IBuX6DzXP58CXT/suvirGI5+P4Fv37kxIj35d8Y\r\n/GVXMVPK4Wn5WVdsdUn3D7V/5FWTGhjnE81mmz8Z2edHNWYFH3Dr1KhyAA1oQAN6iTMyeXbkgxG7\r\nDIv40d0RQ19c9OsnzY7od1/EbgO7Ys/ru+KKf6y8NpnPX3jIeeNil+P/FX0uGB8PPzsrqh5AAxrQ\r\ngBZAAxrQgAa0ABrQlW5YdW8E7bAvgK53wWJGekADuo33ZfLkydQENKABDWgVtAAa0IAG9BLvy9NP\r\nP01NQAMa0ICu4r4MGzaMmoAGNKABXcV9OeGEE6gJaEADGtBV3JfPfvaz1AQ0oAHt2eOq7svo0aPJ\r\n2cbFTCcXOoAGdO2B7tmzJx0BDWhAA7qq+3LvvfcScgkzYsQIQAMa0IDuvn1Zf/31Y/bs2fRdgmyw\r\nwQaABjSgAd29+7LlllvSdzHZYYcdKtd2AQ1oQHcA0Pnyla98JebMmUPiBWTHHXesZNsFNKAB3SFA\r\n58uGG27oCywtueeee+Jzn/tcZdsuoAHdNo2uzs8sd/c2991333jggQcIXVNMu3ub3X3eAhrQtQa6\r\nuWy11VZx+umnx1133RVjxoyJ8ePHNwZZWtSytFncdpfm/ZZk/QkTJsTYsWMb1fI555wTPXr0ADSg\r\nAQ3o6gMNG0ADGtCABjSgAQ1oQAMa0IAGNKABDWhA+8wADWhAAxrQgAb0Sge67mBW6ThUqb3U4f3q\r\nhE3VLySABjSgAQ1oQAMa0IAGNKABDWhAAxrQgAY0oAENaEADGtCABjSgAQ1oQAMa0IAGdJsAXSW8\r\ngenYruw20cnPXde9zQMa0I4toAENaCcxoB1bQAMa0IAGNKABDWgnMaAdW0ADGtCABjSgAQ1oQAPa\r\nsQU0oAFdAxjqAFHdh+Ose5uo+wXdzN2ABjSgAQ1oQAMa0IAGNKABDWhAAxrQgAY0oAENaEADGtCA\r\nBjSgAQ1oQAMa0IAGdFsfsDo8v9kuz4C3y8WpXRDu5M+6TrADGtCABjSgAQ1oQAMa0IAGNKABDWhA\r\nAxrQgAY0oAENaEADGtCABjSgAQ1oQAMa0B34wdcBDc/RVh/MdmmDAmhAAxrQgAY0oAENaEALoAEN\r\naEADGtCABjSgAQ1oQAMa0IAGtAAa0IAGNKABXfkTru4nh39D971fHS6wdRgOtw6FHKABDWhAAxrQ\r\ngAY0oAENaEADGtCABjSgAQ1oQAMa0IAGNKABDWhAAxrQgAY0oAHdwTEsY/VRrFKR4Lh39ozfgAY0\r\noAENaEALoAENaEADGtCABjSgAS2ABjSgAQ1oQDtRAe24A1oADWhAAxrQ3XSi1n2m4jqcqO0Ceyc/\r\nN98uF6c6nbeABjSgAQ1oQAMa0IAGNKABDWhAAxrQgAY0oAENaEADGtCABjSgAQ1oQAMa0IAGdE1h\r\naBekqvRvr/tQq3WYRbxd2i6gAQ1oQAMa0IAGNKABDWhAgw/QgAY0oAENaEADGtCABjSgAQ1oQAMa\r\n0IAGNKABDehKnDjtMoNzHVDs7n2pUntpl1nL6/48OqABDWhAAxrQgAY0oAENaEADGtCABjSgAQ1o\r\nQAMa0IAGNKABDWhAAxrQgAY0oAEN6EqccO1yIelkwOrQJtrlotYuhQ6gAQ1oQAMa0IAGNKABDWhA\r\nAxrQgAY0oAENaEADGtCABjSgAQ1oQAMa0IAGNKABDeiOhK/ugNXhc6nDftb9+wuABjSgAQ1oQAMa\r\n0IAGNKABDWhAAxrQgAY0oAENaEADGtCABjSgAQ1oQAMa0IAGdIUaTx32sw5DPXb3BahK79fd7azu\r\nw+i2yxC7gAY0oAENaEADGtCABjSgAQ1oQAMa0IAGNKABDWhAAxrQgAY0oAENaEADGtCABnQNGmQn\r\nD6HYLsN/tgv6LkDVOG/rhDCgAQ1oQAMa0IAGNKABDWhAAxrQgAY0oAENaEADGtCABjSgAQ1oQAMa\r\n0IAGNKABLSIigBYRAbSIiABaRATQIiICaBERAbSICKBFRATQIiKAFhERQIuICKBFRAAtIiKAFhEB\r\ntIiIAFpEBNAiIgJoEREBtIgIoEVEBNAiIoAWERFAi4gIoEVEAC0iIoAWEQG0iIgAWkREAC0iAmgR\r\nEQG0iAigRUQE0CIigBYREUCLiAigRUQALSIiyyn/D560t9qHT3RQAAAAAElFTkSuQmCC", "url": "https://github.com/facebook/fresco/issues/2148", "user": "Iamrookie", "labels": ["bug"], "created": "2018-07-11 11:43:01", "closed": "2018-07-12 11:32:21", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Android P Fresco initialize", "body": "Fresco version: 1.8.1\r\n\r\nWhen I try to initialize it I get this error:\r\n\r\n```\r\nW/SoLoader: Cannot get nativeLoad method\r\n            java.lang.NoSuchMethodException: nativeLoad [class java.lang.String, class java.lang.ClassLoader, class java.lang.String]\r\n                at java.lang.Class.getMethod(Class.java:2068)\r\n                at java.lang.Class.getDeclaredMethod(Class.java:2047)\r\n                at com.facebook.soloader.SoLoader.getNativeLoadRuntimeMethod(SoLoader.java:281)\r\n                at com.facebook.soloader.SoLoader.initSoLoader(SoLoader.java:233)\r\n                at com.facebook.soloader.SoLoader.initImpl(SoLoader.java:141)\r\n                at com.facebook.soloader.SoLoader.init(SoLoader.java:120)\r\n                at com.facebook.soloader.SoLoader.init(SoLoader.java:104)\r\n                at com.facebook.drawee.backends.pipeline.Fresco.initialize(Fresco.java:63)\r\n                at com.facebook.drawee.backends.pipeline.Fresco.initialize(Fresco.java:46)\r\n```", "url": "https://github.com/facebook/fresco/issues/2115", "user": "dbeqiraj", "labels": ["bug"], "created": "2018-05-16 09:00:05", "closed": "2018-06-12 10:54:04", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "ExceptionInInitializerError shows after upgrade to fresco 1.8.1", "body": "### Description\r\nUse fresco 1.8.1, then Update android studio to 3.1 version, build and launch, App crashed.\r\nAfter roll back fresco to 1.7.1, it works fine.\r\n```\r\nW/System.err: java.lang.ExceptionInInitializerError\r\n                  at com.facebook.imagepipeline.memory.NativeMemoryChunkPool.alloc(NativeMemoryChunkPool.java:58)\r\nI/art: Rejecting re-init on previously-failed class java.lang.Class<com.facebook.imagepipeline.memory.NativeMemoryChunk>: java.lang.ExceptionInInitializerError: \r\n           at com.facebook.imagepipeline.memory.NativeMemoryChunk com.facebook.imagepipeline.memory.NativeMemoryChunkPool.alloc(int) (NativeMemoryChunkPool.java:58)\r\n           at java.lang.Object com.facebook.imagepipeline.memory.NativeMemoryChunkPool.alloc(int) (NativeMemoryChunkPool.java:20)\r\n           at java.lang.Object com.facebook.imagepipeline.memory.BasePool.get(int) (BasePool.java:257)\r\n           at void com.facebook.imagepipeline.memory.NativePooledByteBufferOutputStream.<init>(com.facebook.imagepipeline.memory.NativeMemoryChunkPool, int) (NativePooledByteBufferOutputStream.java:51)\r\n           at com.facebook.imagepipeline.memory.NativePooledByteBuffer com.facebook.imagepipeline.memory.NativePooledByteBufferFactory.newByteBuffer(java.io.InputStream, int) (NativePooledByteBufferFactory.java:98)\r\n           at com.facebook.common.memory.PooledByteBuffer com.facebook.imagepipeline.memory.NativePooledByteBufferFactory.newByteBuffer(java.io.InputStream, int) (NativePooledByteBufferFactory.java:26)\r\n           at com.facebook.common.memory.PooledByteBuffer com.facebook.imagepipeline.cache.BufferedDiskCache.readFromDiskCache(com.facebook.cache.common.CacheKey) (BufferedDiskCache.java:336)\r\n           at com.facebook.common.memory.PooledByteBuffer com.facebook.imagepipeline.cache.BufferedDiskCache.access$400(com.facebook.imagepipeline.cache.BufferedDiskCache, com.facebook.cache.common.CacheKey) (BufferedDiskCache.java:36)\r\n           at com.facebook.imagepipeline.image.EncodedImage com.facebook.imagepipeline.cache.BufferedDiskCache$2.call() (BufferedDiskCache.java:182)\r\nW/System.err:     at com.facebook.imagepipeline.memory.NativeMemoryChunkPool.alloc(NativeMemoryChunkPool.java:20)\r\nI/art:     at java.lang.Object com.facebook.imagepipeline.cache.BufferedDiskCache$2.call() (BufferedDiskCache.java:166)\r\n           at void bolts.Task$4.run() (Task.java:357)\r\n           at void java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) (ThreadPoolExecutor.java:1133)\r\n           at void java.util.concurrent.ThreadPoolExecutor$Worker.run() (ThreadPoolExecutor.java:607)\r\n           at void com.facebook.imagepipeline.core.PriorityThreadFactory$1.run() (PriorityThreadFactory.java:53)\r\n           at void java.lang.Thread.run() (Thread.java:761)\r\nW/System.err:     at com.facebook.imagepipeline.memory.BasePool.get(BasePool.java:257)\r\n                  at com.facebook.imagepipeline.memory.NativePooledByteBufferOutputStream.<init>(NativePooledByteBufferOutputStream.java:51)\r\nW/System.err:     at com.facebook.imagepipeline.memory.NativePooledByteBufferFactory.newByteBuffer(NativePooledByteBufferFactory.java:98)\r\n                  at com.facebook.imagepipeline.memory.NativePooledByteBufferFactory.newByteBuffer(NativePooledByteBufferFactory.java:26)\r\n                  at com.facebook.imagepipeline.cache.BufferedDiskCache.readFromDiskCache(BufferedDiskCache.java:336)\r\n                  at com.facebook.imagepipeline.cache.BufferedDiskCache.access$400(BufferedDiskCache.java:36)\r\n                  at com.facebook.imagepipeline.cache.BufferedDiskCache$2.call(BufferedDiskCache.java:182)\r\n                  at com.facebook.imagepipeline.cache.BufferedDiskCache$2.call(BufferedDiskCache.java:166)\r\n                  at bolts.Task$4.run(Task.java:357)\r\n                  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n                  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n                  at com.facebook.imagepipeline.core.PriorityThreadFactory$1.run(PriorityThreadFactory.java:53)\r\nW/System.err:     at java.lang.Thread.run(Thread.java:761)\r\n              Caused by: java.lang.RuntimeException: SoLoader.init() not yet called\r\n                  at com.facebook.soloader.SoLoader.assertInitialized(SoLoader.java:562)\r\n                  at com.facebook.soloader.SoLoader.loadLibrary(SoLoader.java:353)\r\n                  at com.facebook.soloader.SoLoader.loadLibrary(SoLoader.java:335)\r\n                  at com.facebook.imagepipeline.nativecode.ImagePipelineNativeLoader.load(ImagePipelineNativeLoader.java:42)\r\n                  at com.facebook.imagepipeline.memory.NativeMemoryChunk.<clinit>(NativeMemoryChunk.java:33)\r\n              \t... 15 more\r\n```\r\n\r\n### Reproduction\r\nAndroid studio 3.1   fresco 1.8.1  X\r\nAndroid studio 3.0   fresco 1.8.1  X\r\nAndroid studio 3.1   fresco 1.7.1  \u2713\r\nAndroid studio 3.0   fresco 1.7.1  \u2713\r\n\r\n### Additional Information\r\n\r\n* Fresco version: **1.8.1**\r\n* Platform version: **android 7.1.1**\r\n* gradle build tool version: **2.2.0**\r\n* use new proguard file : **yes**\r\n", "url": "https://github.com/facebook/fresco/issues/2094", "user": "s1rius", "labels": ["bug", "needs-details"], "created": "2018-04-09 07:35:34", "closed": "2018-04-19 11:29:28", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "Animation stopped without onAnimationStop getting called", "body": "### Description\r\nI want to hide simpleDraweeView after gif animation completion. So I have added AnimationListener and hide my controller onAnimationStop. But half of the time it does not call the onAnimationStop method. \r\nLet me know if I am doing something wrong.\r\n\r\n```\r\n new BaseControllerListener() {\r\n        @Override\r\n        public void onFinalImageSet(\r\n          String id,\r\n          @Nullable Object imageInfo,\r\n          @Nullable final Animatable animatable) {\r\n          if (animatable != null) {\r\n            AnimatedDrawable2 animatedDrawable = (AnimatedDrawable2) animatable;\r\n            animatedDrawable.setAnimationListener(new AnimationListener() {\r\n              @Override\r\n              public void onAnimationStart(AnimatedDrawable2 drawable) {\r\n\r\n                Log.i(TAG, \"onAnimationStart: \");\r\n              }\r\n\r\n              @Override\r\n              public void onAnimationStop(AnimatedDrawable2 drawable) {\r\n                .setVisibility(View.GONE);\r\n                Log.i(TAG, \"onAnimationStop: \");\r\n              }\r\n\r\n              @Override\r\n              public void onAnimationReset(AnimatedDrawable2 drawable) {\r\n                Log.i(TAG, \"onAnimationReset: \");\r\n              }\r\n\r\n              @Override\r\n              public void onAnimationRepeat(AnimatedDrawable2 drawable) {\r\n                Log.i(TAG, \"onAnimationRepeat: \");\r\n              }\r\n\r\n              @Override\r\n              public void onAnimationFrame(AnimatedDrawable2 drawable, int frameNumber) {\r\n                Log.i(TAG, \"onAnimationFrame: \"+frameNumber);\r\n              }\r\n            });\r\n            Log.i(TAG, \"animatable.start();: \");\r\n            animatable.start();\r\n          }\r\n        }\r\n      })\r\n```\r\n\r\n### Additional Information\r\n\r\n* Fresco version:1.8.1\r\n* Platform version: Android 7.1.1\r\n", "url": "https://github.com/facebook/fresco/issues/2081", "user": "PalDhv", "labels": ["bug", "help wanted", "starter-task"], "created": "2018-03-28 11:48:50", "closed": "2018-06-19 11:26:53", "commits": {}, "ttf": 82.00027777777778, "commitsDetails": []}, {"title": "proguard-fresco.pro broken link", "body": "### Description\r\nin file https://github.com/facebook/fresco/blob/cd416a3bcab402617ec95b69892f865568d49647/docs/_docs/proguard.md\r\n\r\nbroken link to download file _proguard-fresco.pro_ (https://raw.githubusercontent.com/facebook/fresco/master/proguard-fresco.pro)\r\n\r\n### Reproduction\r\n\r\nhttps://github.com/facebook/fresco/blob/cd416a3bcab402617ec95b69892f865568d49647/docs/_docs/proguard.md or http://frescolib.org/docs/shipping.html - follow instruction - \"download Fresco\u2019s ProGuard file, proguard-fresco.pro\"\r\n", "url": "https://github.com/facebook/fresco/issues/2080", "user": "novotnyfra", "labels": ["bug"], "created": "2018-03-27 11:39:53", "closed": "2018-03-27 16:49:47", "commits": {"8997d4e2bc726f9136e5bd1eb979448f2514a03d": {"commitGHEventType": "closed", "commitUser": "facebook-github-bot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8997d4e2bc726f9136e5bd1eb979448f2514a03d", "commitGHEventType": "closed", "commitUser": "facebook-github-bot", "commitParents": ["0e9aba2e0226c0c95c91f7d694f5e0112d2d5620"], "nameRev": "8997d4e2bc726f9136e5bd1eb979448f2514a03d tags/v1.9.0~11", "commitMessage": "Fix broken link to pro-guard file\n\nSummary:\nThe proguard file got moved in https://github.com/facebook/fresco/pull/2075 which broke a link on the website. Updating the link to the new location of the file.\n\nCloses https://github.com/facebook/fresco/issues/2080\n\nReviewed By: erikandre\n\nDifferential Revision: D7414836\n\nfbshipit-source-id: bebb570bbc2157d158b62b8cb8b6b8c3d15c185b\n", "commitDateTime": "2018-03-27 09:49:21", "authoredDateTime": "2018-03-27 09:46:54", "commitGitStats": [{"filePath": "docs/_docs/proguard.md", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8997d4e2bc726f9136e5bd1eb979448f2514a03d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "webp have native memory leak", "body": "\r\n\r\n### Description\r\n\r\nwebp have native memory leak; please open the file : \r\nhttps://github.com/facebook/fresco/blob/master/static-webp/src/main/jni/static-webp/webp.cpp\r\nand jump to the function:\r\n\r\n`\r\njobject WebPImage_nativeGetFrame(JNIEnv* pEnv, jobject thiz, jint index) {\r\n  auto spNativeContext = getWebPImageNativeContext(pEnv, thiz);\r\n  if (!spNativeContext) {\r\n    throwIllegalStateException(pEnv, \"Already disposed\");\r\n    return nullptr;\r\n  }\r\n\r\n\r\n  auto spIter = std::unique_ptr<WebPIterator, decltype(&WebPDemuxReleaseIterator)> {\r\n    new WebPIterator(),\r\n    WebPDemuxReleaseIterator\r\n  };\r\n........\r\n`\r\n\r\nbecause \"WebPDemuxReleaseIterator\" do nothing, and \"spIter\" will never release, the \"WebPDemuxReleaseIterator\" implemention:\r\n\r\n`void WebPDemuxReleaseIterator(WebPIterator* iter) {\r\n  (void)iter;\r\n}`\r\n\r\n### Reproduction\r\n\r\nplay webp animated\r\n\r\n### Solution\r\n\r\nDon't use \"std::unique_ptr\", use local var to define \"spIter\" or don't specify deleter to \"std::unique_ptr\"\r\n\r\n### Additional Information\r\n\r\n* Fresco version: all version\r\n* Platform version: [FILL THIS OUT: specific to a particular Android version? Device?]\r\n", "url": "https://github.com/facebook/fresco/issues/2073", "user": "howardpang", "labels": ["bug", "help wanted", "starter-task"], "created": "2018-03-21 07:04:56", "closed": "2018-03-27 18:17:41", "commits": {"7bb10e001e03c8e29cd0ad43d8d11269262f87b4": {"commitGHEventType": "referenced", "commitUser": "facebook-github-bot"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "7bb10e001e03c8e29cd0ad43d8d11269262f87b4", "commitGHEventType": "referenced", "commitUser": "facebook-github-bot", "commitParents": ["8997d4e2bc726f9136e5bd1eb979448f2514a03d"], "nameRev": "7bb10e001e03c8e29cd0ad43d8d11269262f87b4 tags/v1.9.0~10", "commitMessage": "Fixed webp native memory leak\n\nSummary:\nFixed bug #2073\n\nit is a obvious bug, and i found the native memory do not increase when i use this patch\n\nSign the [CLA][2], if you haven't already.\n\nSmall pull requests are much easier to review and more likely to get merged. Make sure the PR does only one thing, otherwise please split it.\n\nMake sure all **tests pass** on [Circle CI][4]. PRs that break tests are unlikely to be merged.\n\nFor more info, see the [Contributing guide][4].\n\n[1]: https://medium.com/martinkonicek/what-is-a-test-plan-8bfc840ec171#.y9lcuqqi9\n[2]: https://code.facebook.com/cla\n[3]: http://circleci.com/gh/facebook/fresco\n[4]: https://github.com/facebook/fresco/blob/master/CONTRIBUTING.md\nCloses https://github.com/facebook/fresco/pull/2079\n\nReviewed By: cuva\n\nDifferential Revision: D7398009\n\nPulled By: lambdapioneer\n\nfbshipit-source-id: 927f079bd0f80fa8f8f19592a5e49207d266f34e\n", "commitDateTime": "2018-03-27 10:48:46", "authoredDateTime": "2018-03-27 10:33:39", "commitGitStats": [{"filePath": "static-webp/src/main/jni/static-webp/webp.cpp", "insertions": 15, "deletions": 16, "lines": 31}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7bb10e001e03c8e29cd0ad43d8d11269262f87b4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 15, "deletions": 16, "lines": 31, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["static-webp/src/main/jni/static-webp/webp.cpp"]}, {"title": "there are sawteeth when setting rounding border to display round pic", "body": "### Description\r\n\r\nthere are sawteeth when setting rounding border to display round pic, Only on versions above 8.0\r\n\r\n### Reproduction\r\n\r\nHere's the code:\r\n``` xml\r\n    <com.facebook.drawee.view.SimpleDraweeView\r\n        android:id=\"@+id/active_img\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        fresco:actualImageScaleType=\"fitXY\"\r\n        fresco:layout_constraintBottom_toBottomOf=\"parent\"\r\n        fresco:layout_constraintLeft_toLeftOf=\"parent\"\r\n        fresco:layout_constraintRight_toRightOf=\"parent\"\r\n        fresco:layout_constraintTop_toTopOf=\"parent\"\r\n        fresco:placeholderImageScaleType=\"fitXY\"\r\n        fresco:roundedCornerRadius=\"3.33dp\"\r\n        fresco:roundingBorderColor=\"#FFEBEBEB\"\r\n        fresco:roundingBorderWidth=\"0.33dp\"/>\r\n```\r\n``` java\r\nSimpleDraweeView mTopicImg = Views.findViewById(this, R.id.active_img);\r\nUri urii = Uri.parse(mPicUrl);\r\nmTopicImg.setImageURI(uri);\r\n```\r\n\r\n###ImageLink:\r\n![the whole picture](https://s1.ax1x.com/2018/03/20/9TOOns.png)\r\n![detail picture](https://s1.ax1x.com/2018/03/20/9TOXBn.png)\r\n![detailMark](https://s1.ax1x.com/2018/03/20/9TOj7q.png)\r\n\r\n### Additional Information\r\n* Only on versions above 8.0\r\n* Fresco version: [fresco:1.8.0]\r\n* Platform version: [OPPO R11s Android 8.1.0]\r\n", "url": "https://github.com/facebook/fresco/issues/2072", "user": "YuZhiLiang", "labels": ["bug", "help wanted", "needs-details"], "created": "2018-03-20 10:49:23", "closed": "2018-07-12 15:07:34", "commits": {}, "ttf": 114.00027777777778, "commitsDetails": []}, {"title": "Loading GIF images does not take effect when using ScalingUtils.ScaleType.FIT_XY zoom type", "body": "##Description\r\n\r\nLoading GIF images does not take effect when using ScalingUtils.ScaleType.FIT_XY zoom type.\r\nThe size of the gif is 600 x 338 \uff0cand the size of the SimpleDraweeView is 222 x 292.\r\n![1521019163 1](https://user-images.githubusercontent.com/17508458/37393409-f825acfa-27ab-11e8-817c-4a2ddac17204.jpg)\r\n\r\n\r\n##Reproduction\r\n\r\n        <com.facebook.drawee.view.SimpleDraweeView\r\n            android:id=\"@+id/simple_drawee_view\"\r\n            android:layout_width=\"222px\"\r\n            android:layout_height=\"292px\" \r\n            android:background=\"#00ff54\"\r\n            fresco:actualImageScaleType=\"fitXY\" />\r\n\r\n\r\n##Additional Information\r\n\r\n* Fresco version:  1.8.1\r\n* Platform version: 5.1", "url": "https://github.com/facebook/fresco/issues/2067", "user": "BerkeWu", "labels": ["bug", "help wanted", "starter-task"], "created": "2018-03-14 09:22:18", "closed": "2018-06-04 12:24:05", "commits": {}, "ttf": 82.00027777777778, "commitsDetails": []}, {"title": "NoClassDefFoundError SoLoaderShim$Handler", "body": "\r\n### Description\r\n\r\nNoClassDefFoundError when update the fresco lib v 1.8.1 with the react  SoLoaderShim$Handler\r\n\r\njava.lang.NoClassDefFoundError: Failed resolution of: Lcom/facebook/common/soloader/SoLoaderShim$Handler;\r\n                                                               at com.facebook.react.shell.MainReactPackage$8.get(MainReactPackage.java:149)\r\n                                                               at com.facebook.react.shell.MainReactPackage$8.get(MainReactPackage.java:146)\r\n                                                               at com.facebook.react.LazyReactPackage.createNativeModules(LazyReactPackage.java:81)\r\n                                                               at com.facebook.react.NativeModuleRegistryBuilder.processPackage(NativeModuleRegistryBuilder.java:106)\r\n                                                               at com.facebook.react.ReactInstanceManager.processPackage(ReactInstanceManager.java:1071)\r\n                                                               at com.facebook.react.ReactInstanceManager.processPackages(ReactInstanceManager.java:1042)\r\n                                                               at com.facebook.react.ReactInstanceManager.createReactContext(ReactInstanceManager.java:980)\r\n                                                               at com.facebook.react.ReactInstanceManager.access$600(ReactInstanceManager.java:109)\r\n                                                               at com.facebook.react.ReactInstanceManager$4.run(ReactInstanceManager.java:802)\r\n                                                               at java.lang.Thread.run(Thread.java:761)\r\n                                                            Caused by: java.lang.ClassNotFoundException: Didn't find class \"com.facebook.common.soloader.SoLoaderShim$Handler\" on path: DexPathList[[zip file \r\n                                                               at dalvik.system.BaseDexClassLoader.findClass(BaseDexClassLoader.java:56)\r\n                                                               at java.lang.ClassLoader.loadClass(ClassLoader.java:380)\r\n                                                               at java.lang.ClassLoader.loadClass(ClassLoader.java:312)\r\n                                                               at com.facebook.react.shell.MainReactPackage$8.get(MainReactPackage.java:149) \r\n                                                               at com.facebook.react.shell.MainReactPackage$8.get(MainReactPackage.java:146) \r\n                                                               at com.facebook.react.LazyReactPackage.createNativeModules(LazyReactPackage.java:81) \r\n                                                               at com.facebook.react.NativeModuleRegistryBuilder.processPackage(NativeModuleRegistryBuilder.java:106) \r\n                                                               at com.facebook.react.ReactInstanceManager.processPackage(ReactInstanceManager.java:1071) \r\n                                                               at com.facebook.react.ReactInstanceManager.processPackages(ReactInstanceManager.java:1042) \r\n                                                               at com.facebook.react.ReactInstanceManager.createReactContext(ReactInstanceManager.java:980) \r\n                                                               at com.facebook.react.ReactInstanceManager.access$600(ReactInstanceManager.java:109) \r\n                                                               at com.facebook.react.ReactInstanceManager$4.run(ReactInstanceManager.java:802) \r\n                                                               at java.lang.Thread.run(Thread.java:761) \r\n\r\n\r\n\r\n\r\ngradle dependencies\r\n\r\n  frescoLibVersion = '1.5.0'\r\n  okHttp3 = '1.5.0'\r\n\r\n\r\n    compile(\"com.facebook.fresco:fresco:$frescoLibVersion\") {\r\n        exclude module: 'bolts-tasks'\r\n    }\r\n    compile(\"com.facebook.fresco:animated-gif:$frescoLibVersion\") {\r\n        exclude module: 'bolts-tasks'\r\n    }\r\n\r\n    compile('com.facebook.react:react-native:+') {\r\n        exclude module: 'bolts-tasks'\r\n    }\r\n    compile(\"com.facebook.fresco:imagepipeline-okhttp3:$okHttp3\") {\r\n        exclude module: 'bolts-tasks'\r\n    }\r\n    compile ('com.facebook.shimmer:shimmer:0.1.0@aar') \r\n\r\n### Additional Information\r\n\r\n* Fresco version: 1.8.1\r\n* Platform version: android API v26\r\n", "url": "https://github.com/facebook/fresco/issues/2054", "user": "Anilugale", "labels": ["bug"], "created": "2018-02-16 12:04:26", "closed": "2018-05-17 09:05:14", "commits": {}, "ttf": 89.00027777777778, "commitsDetails": []}, {"title": "Debug build from sources fails with error : use of undeclared identifier 'memset'", "body": "### Description\r\n\r\nIn Android Studio, up to date, with ndk 16.1.4479499, and Fresco lib sources from master branch, to last commit (yesterday), build fails with : \r\n```\r\n./jpeg/jpeg_codec.cpp:180:3: error: use of undeclared identifier 'memset'; did you mean 'wmemset'?\r\n  memset(&dinfo, 0, sizeof(struct jpeg_decompress_struct));\r\n```\r\n(...) and few more errors (...)\r\n```\r\n1: Task failed with an exception.\r\n-----------\r\n* What went wrong:\r\nExecution failed for task ':imagepipeline:ndk_build_imagepipeline'.\r\n```\r\n```\r\n2: Task failed with an exception.\r\n-----------\r\n* What went wrong:\r\nExecution failed for task ':static-webp:ndk_build_static-webp'.\r\n```\r\n### Reproduction\r\n\r\nTry to build again\r\n\r\n* Fresco version: master to https://github.com/facebook/fresco/commit/06fe3719a3a3c659438b6c25a8008945e67156a0\r\n* Platform version: debug build for api 24 - Android 6.0\r\n", "url": "https://github.com/facebook/fresco/issues/2040", "user": "eldk", "labels": ["bug"], "created": "2018-02-02 16:47:22", "closed": "2018-02-06 03:44:45", "commits": {"f10bbe7bab08a9765183f014f22b38606da5a9a0": {"commitGHEventType": "referenced", "commitUser": "facebook-github-bot"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "f10bbe7bab08a9765183f014f22b38606da5a9a0", "commitGHEventType": "referenced", "commitUser": "facebook-github-bot", "commitParents": ["bab2c9110326e364765fc8fc4e5165a9d3d52ec3"], "nameRev": "f10bbe7bab08a9765183f014f22b38606da5a9a0 tags/v1.8.1~1", "commitMessage": "Debug build from sources fails with error : undeclared identifier memset\n\nSummary:\nndk : 16.1.4479499\nandroid-studio : 3.01\nsolves : https://github.com/facebook/fresco/issues/2040\n\nThanks lambdapioneer\nCloses https://github.com/facebook/fresco/pull/2043\n\nReviewed By: oprisnik\n\nDifferential Revision: D6899099\n\nPulled By: lambdapioneer\n\nfbshipit-source-id: 211bab2e14637853dce978ca246ebd436a05d5ed\n", "commitDateTime": "2018-02-05 06:31:39", "authoredDateTime": "2018-02-05 06:24:16", "commitGitStats": [{"filePath": "animated-gif/src/main/jni/gifimage/jni_helpers.h", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "circle.yml", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "imagepipeline/src/main/jni/imagepipeline/jpeg/jpeg_codec.h", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "static-webp/src/main/jni/static-webp/jpeg/jpeg_codec.h", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f10bbe7bab08a9765183f014f22b38606da5a9a0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 3, "lines": 12, "gitFilesChange": 4}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["imagepipeline/src/main/jni/imagepipeline/jpeg/jpeg_codec.h", "circle.yml", "static-webp/src/main/jni/static-webp/jpeg/jpeg_codec.h", "animated-gif/src/main/jni/gifimage/jni_helpers.h"]}, {"title": "java.lang.VerifyError: com/facebook/i/k at SoLoader.initImpl$230dc011(SoLoader.java:203)", "body": "### Description\r\n\r\nCrash is happening on Android 4.x devices, when APK is built with ProGuard enabled and 'proguard-android-optimize.txt' configuration file.\r\n\r\n### Reproduction\r\n\r\n1. Get an Android 4.x device\r\n2. Build an app with following build settings (\"-optimize\" is the important part):\r\n```\r\ndebug {\r\n    minifyEnabled true\r\n    proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-fresco.pro'\r\n}\r\n```\r\n3. BOOM!\r\n\r\nYou can find all the detailed information and system dumps here: http://crashes.to/s/c450feed2e9\r\n\r\n### Additional Information\r\n\r\n* Fresco version: 1.8.0\r\n* Platform version: Android 4.x.", "url": "https://github.com/facebook/fresco/issues/2039", "user": "gajicm93", "labels": ["bug"], "created": "2018-01-31 13:18:44", "closed": "2018-02-07 14:47:28", "commits": {"559082930126c05988f46de8f27fccad0dd88568": {"commitGHEventType": "referenced", "commitUser": "facebook-github-bot"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "559082930126c05988f46de8f27fccad0dd88568", "commitGHEventType": "referenced", "commitUser": "facebook-github-bot", "commitParents": ["8fc70f1699d14706caffbcc7cacb20c7d02f4b9d"], "nameRev": "559082930126c05988f46de8f27fccad0dd88568 tags/v1.8.1~4", "commitMessage": "Adding proguard rules to obey DoNotOptimize annotation\n\nSummary:\nIssue: https://github.com/facebook/fresco/issues/2039\n\nWhen proguard runs on SoLoader it needs to know about the `DoNotOptimize` annotation to leave out some methods that cause problems with Dalvik (esp. Android 4.x).\n\nThis diff adds the required proguard rules to Fresco.\n\n**Test Plan**\n\nReproduce with the showcase app and the following modification in the buildfile to trigger proguard for the mainDebug build variant:\n\n```\n diff --git a/fbandroid/libraries/fresco/samples/showcase/build.gradle b/fbandroid/libraries/fresco/samples/showcase/build.gradle\n --- a/fbandroid/libraries/fresco/samples/showcase/build.gradle\n+++ b/fbandroid/libraries/fresco/samples/showcase/build.gradle\n@@ -22,7 +22,7 @@\n         vectorDrawables.useSupportLibrary = true // needed for tinting\n     }\n     buildTypes {\n-        release {\n+        debug {\n             minifyEnabled true\n             proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), '../../proguard-fresco.pro', 'proguard-showcase.pro'\n         }\n```\n\nJust with this change and a 4.4.2 emulator, the showcase app crashes on start and we see the following error messages in logcat:\n\n```\n02-01 11:03:12.250 3446-3446/com.facebook.fresco.samples.showcase D/SoLoader: init start\n02-01 11:03:12.250 3446-3446/com.facebook.fresco.samples.showcase I/dalvikvm: Could not find method android.system.Os.posix_fallocate, referenced from method com.facebook.h.k.a\n02-01 11:03:12.250 3446-3446/com.facebook.fresco.samples.showcase W/dalvikvm: VFY: unable to resolve static method 9734: Landroid/system/Os;.posix_fallocate (Ljava/io/FileDescriptor;JJ)V\n02-01 11:03:12.250 3446-3446/com.facebook.fresco.samples.showcase D/dalvikvm: VFY: replacing opcode 0x71 at 0x012b\n02-01 11:03:12.250 3446-3446/com.facebook.fresco.samples.showcase W/dalvikvm: VFY: unable to resolve exception class 1338 (Landroid/system/ErrnoException;)\n02-01 11:03:12.250 3446-3446/com.facebook.fresco.samples.showcase W/dalvikvm: VFY: unable to find exception handler at addr 0x18a\n02-01 11:03:12.250 3446-3446/com.facebook.fresco.samples.showcase W/dalvikvm: VFY:  rejected Lcom/facebook/h/k;.a (BLcom/facebook/h/k$b;Lcom/facebook/h/k$d;)V\n02-01 11:03:12.250 3446-3446/com.facebook.fresco.samples.showcase W/dalvikvm: VFY:  rejecting opcode 0x0d at 0x018a\n02-01 11:03:12.250 3446-3446/com.facebook.fresco.samples.showcase W/dalvikvm: VFY:  rejected Lcom/facebook/h/k;.a (BLcom/facebook/h/k$b;Lcom/facebook/h/k$d;)V\n02-01 11:03:12.250 3446-3446/com.facebook.fresco.samples.showcase W/dalvikvm: Verifier rejected class Lcom/facebook/h/k;\n02-01 11:03:12.250 3446-3446/com.facebook.fresco.samples.showcase D/AndroidRuntime: Shutting down VM\n02-01 11:03:12.250 3446-3446/com.facebook.fresco.samples.showcase W/dalvikvm: threadid=1: thread exiting with uncaught exception (group=0xa4d0cb20)\n02-01 11:03:12.250 3446-3446/com.facebook.fresco.samples.showcase E/AndroidRuntime: FATAL EXCEPTION: main\n                                                                                    Process: com.facebook.fresco.samples.showcase, PID: 3446\n                                                                                    java.lang.VerifyError: com/facebook/h/k\n                                                                                        at com.facebook.h.g.b(Unknown Source)\n                                                                                        at com.facebook.h.g.a(Unknown Source)\n                                                                                        at com.facebook.drawee.a.a.b.a(Unknown Source)\n                                                                                        at com.facebook.fresco.samples.showcase.ShowcaseApplication.onCreate(Unknown Source)\n                                                                                        at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1007)\n                                                                                        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4344)\n                                                                                        at android.app.ActivityThread.access$1500(ActivityThread.java:135)\n                                                                                        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1256)\n                                                                                        at android.os.Handler.dispatchMessage(Handler.java:102)\n                                                                                        at android.os.Looper.loop(Looper.java:136)\n                                                                                        at android.app.ActivityThread.main(ActivityThread.java:5017)\n                                                                                        at java.lang.reflect.Method.invokeNative(Native Method)\n                                                                                        at java.lang.reflect.Method.invoke(Method.java:515)\n                                                                                        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)\n                                                                                        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)\n                                                                                        at dalvik.system.NativeStart.main(Native Method)\n```\n\nAfter applying the changes in this diff, the app starts without problems.\n\nReviewed By: erikandre, passy\n\nDifferential Revision: D6870674\n\nfbshipit-source-id: e3fee1d231af2392ce50d63a9e8b52141086a244\n", "commitDateTime": "2018-02-01 03:47:05", "authoredDateTime": "2018-02-01 03:42:12", "commitGitStats": [{"filePath": "proguard-fresco.pro", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["559082930126c05988f46de8f27fccad0dd88568"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 0, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["proguard-fresco.pro"]}, {"title": "About SimpleDraweeSpanTextView ", "body": "I found a problem  if set enableResizing true and set fix width and height like this: \r\n draweeSpanStringBuilder.setImageSpan(\r\n        getContext(), \r\n        draweeHierarchy, \r\n        controller, \r\n        imagePosition, \r\n        60,\r\n        60,\r\n        true,\r\n        DraweeSpan.ALIGN_CENTER);\r\n\r\nif the placeholder picture the width is larger(140*60) When word breaks The text on the line may not be full  the acture text is \"Text with an # inline image using a dd dd dd dd dd DraweeSpan. Also works with % animated images!\"\r\n![i2d l3qn t3 _apsp4 r](https://user-images.githubusercontent.com/8609480/35100420-b9a47c94-fc96-11e7-8d1e-060bbceb2c0f.png)\r\n\r\n", "url": "https://github.com/facebook/fresco/issues/2025", "user": "zhangzhen123", "labels": ["bug", "help wanted"], "created": "2018-01-18 13:37:07", "closed": "2018-01-19 01:55:13", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Android Oreo - can't load some PNG - BitmapFactory: bitmap marked for reuse (3944728 bytes) can't fit new bitmap (7889456 bytes)", "body": "Fresco can't load some PNG on OREO. We've got the followling warning:\r\n\r\nW/BitmapFactory: bitmap marked for reuse (3944728 bytes) can't fit new bitmap (7889456 bytes)\r\nThe code to reproduce the bug:\r\n\r\n```Kotlin \r\noverride fun onCreate(savedInstanceState: Bundle?) {\r\n        Fresco.initialize(this)\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_main)\r\n        val uri = Uri.parse(\"https://kyashu.aquafadas.com/wsapi/KyashuDownload.php?service=KS-AvePublishing&error=404&keepaspect=1&uselength=0&ratio_filter=0&width=1080&height=394&format=png&upscale=1&stickyRatio=desc&operation=fill&ids=5281064;5281065;5281066&version=0\")\r\n        val draweeView = findViewById<View>(R.id.my_image_view) as SimpleDraweeView\r\n        draweeView.setImageURI(uri, this)\r\n\r\n    }\r\n```\r\nSteps to reproduce:\r\n- launch the sample code on android Nougat 7.1  and before, it works\r\n- launch the sample code on android Oreo the PNG is not loaded\r\n- Expected result same code should work on Oreo and Nougat\r\n\r\nDevice: One Plus 5 \r\nFresco Version: 1.7.1", "url": "https://github.com/facebook/fresco/issues/2021", "user": "scdc", "labels": ["bug"], "created": "2018-01-17 14:25:22", "closed": "2018-01-17 14:37:07", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "setProgressiveRenderingEnabled(true) broken PNG image load from network", "body": "### Description\r\nWhen upgrade fresco to version 1.3.0+, if the ImageRequest setProgressiveRendingEnabled to true, the PNG image load from network will not display first. other non-jpeg images will be affected as well.\r\n\r\nIt works well with 1.2.0. As a application user, we cannot distinguish the url to load is a PNG, JPEG, WEBP or others, so we try to turn on progressiveRenderingEnable for all the requests though it just support JPEG. It should be handled correctly by the ImageLoader Engine(Fresco), because it can parse and get the right image format and then decide to do it or not.\r\n\r\n### Reproduction\r\n\r\nThe following code snippet can be used to reproduce this issue.\r\n```\r\nprivate static final String PNG = \"http://pic0.qiyipic.com/common/20171220/03b3aaccbefb4240b06721e25cc3dce9.png\";\r\n\r\nImageRequest imageRequest = ImageRequestBuilder.newBuilderWithSource(Uri.parse(PNG))\r\n                .setProgressiveRenderingEnabled(true)\r\n                .build();\r\n        DraweeController controller = Fresco.newDraweeControllerBuilder()\r\n                .setImageRequest(imageRequest)\r\n                .setOldController(draweeView.getController())\r\n                .build();\r\n        draweeView.setController(controller);\r\n```\r\n\r\n### Logcat\r\n\r\n```\r\n01-09 20:51:53.699 17818-17818/org.lcy.iwork.home V/unknown:AbstractDraweeController: controller ba4281e null -> 0: initialize\r\n01-09 20:51:53.699 17818-17818/org.lcy.iwork.home V/unknown:AbstractDraweeController: controller ba4281e 0: setHierarchy: com.facebook.drawee.generic.GenericDraweeHierarchy@e5268ff\r\n01-09 20:51:53.709 17818-17818/org.lcy.iwork.home V/unknown:AbstractDraweeController: controller ba4281e 0: onAttach: request needs submit\r\n01-09 20:51:53.709 17818-17818/org.lcy.iwork.home V/unknown:PipelineDraweeController: controller ba4281e: getDataSource\r\n01-09 20:51:53.712 17818-17818/org.lcy.iwork.home V/unknown:RequestLoggingListener: time 41282905: onRequestSubmit: {requestId: 0, callerContext: null, isPrefetch: false}\r\n01-09 20:51:53.712 17818-17818/org.lcy.iwork.home V/unknown:RequestLoggingListener: time 41282905: onProducerStart: {requestId: 0, producer: BitmapMemoryCacheGetProducer}\r\n01-09 20:51:53.713 17818-17818/org.lcy.iwork.home V/unknown:RequestLoggingListener: time 41282906: onProducerFinishWithSuccess: {requestId: 0, producer: BitmapMemoryCacheGetProducer, elapsedTime: 1 ms, extraMap: {cached_value_found=false}}\r\n01-09 20:51:53.714 17818-17818/org.lcy.iwork.home V/unknown:RequestLoggingListener: time 41282906: onProducerStart: {requestId: 0, producer: BackgroundThreadHandoffProducer}\r\n01-09 20:51:53.714 17818-17818/org.lcy.iwork.home V/unknown:AbstractDraweeController: controller ba4281e 0: submitRequest: dataSource: 6308d15\r\n01-09 20:51:53.716 17818-17866/org.lcy.iwork.home V/unknown:RequestLoggingListener: time 41282908: onProducerFinishWithSuccess: {requestId: 0, producer: BackgroundThreadHandoffProducer, elapsedTime: 2 ms, extraMap: null}\r\n01-09 20:51:53.716 17818-17818/org.lcy.iwork.home D/yuan: onVisibilityChanged----android.widget.ListView{3ee961b V.ED.VC.. ......I. 0,0-0,0 #7f0b0063 app:id/listview}\r\n01-09 20:51:53.718 17818-17866/org.lcy.iwork.home V/unknown:RequestLoggingListener: time 41282911: onProducerStart: {requestId: 0, producer: BitmapMemoryCacheProducer}\r\n01-09 20:51:53.719 17818-17866/org.lcy.iwork.home V/unknown:RequestLoggingListener: time 41282912: onProducerFinishWithSuccess: {requestId: 0, producer: BitmapMemoryCacheProducer, elapsedTime: 1 ms, extraMap: {cached_value_found=false}}\r\n01-09 20:51:53.722 17818-17866/org.lcy.iwork.home V/unknown:RequestLoggingListener: time 41282915: onProducerStart: {requestId: 0, producer: EncodedMemoryCacheProducer}\r\n01-09 20:51:53.723 17818-17866/org.lcy.iwork.home V/unknown:RequestLoggingListener: time 41282916: onProducerFinishWithSuccess: {requestId: 0, producer: EncodedMemoryCacheProducer, elapsedTime: 1 ms, extraMap: {cached_value_found=false}}\r\n01-09 20:51:53.723 17818-17866/org.lcy.iwork.home V/unknown:RequestLoggingListener: time 41282916: onProducerStart: {requestId: 0, producer: DiskCacheProducer}\r\n01-09 20:51:53.727 17818-17867/org.lcy.iwork.home V/unknown:BufferedDiskCache: Did not find image for http://pic0.qiyipic.com/common/20171220/03b3aaccbefb4240b06721e25cc3dce9.png in staging area\r\n01-09 20:51:53.728 17818-17867/org.lcy.iwork.home V/unknown:BufferedDiskCache: Disk cache read for http://pic0.qiyipic.com/common/20171220/03b3aaccbefb4240b06721e25cc3dce9.png\r\n01-09 20:51:53.729 17818-17867/org.lcy.iwork.home D/unknown:DynamicDefaultDiskStorage: Created cache directory /data/user/0/org.lcy.iwork.home/cache/image_cache\r\n01-09 20:51:53.733 17818-17867/org.lcy.iwork.home V/unknown:BufferedDiskCache: Disk cache miss for http://pic0.qiyipic.com/common/20171220/03b3aaccbefb4240b06721e25cc3dce9.png\r\n01-09 20:51:53.733 17818-17867/org.lcy.iwork.home V/unknown:RequestLoggingListener: time 41282926: onProducerFinishWithSuccess: {requestId: 0, producer: DiskCacheProducer, elapsedTime: 10 ms, extraMap: {cached_value_found=false}}\r\n01-09 20:51:53.735 17818-17867/org.lcy.iwork.home V/unknown:RequestLoggingListener: time 41282927: onProducerStart: {requestId: 0, producer: NetworkFetchProducer}\r\n01-09 20:51:53.786 17818-17868/org.lcy.iwork.home V/unknown:NativeMemoryChunkPool: Used = (1, 262144); Free = (0, 0)\r\n01-09 20:51:53.786 17818-17868/org.lcy.iwork.home V/unknown:NativeMemoryChunkPool: get (alloc) (object, size) = (9981282, 262144)\r\n01-09 20:51:53.787 17818-17836/org.lcy.iwork.home D/OpenGLRenderer: endAllActiveAnimators on 0xea692800 (RippleDrawable) with handle 0xb1c83c60\r\n01-09 20:51:53.787 17818-17868/org.lcy.iwork.home V/unknown:GenericByteArrayPool: Used = (1, 16384); Free = (0, 0)\r\n01-09 20:51:53.787 17818-17868/org.lcy.iwork.home V/unknown:GenericByteArrayPool: get (alloc) (object, size) = (defad93, 16384)\r\n01-09 20:51:53.788 17818-17868/org.lcy.iwork.home V/unknown:RequestLoggingListener: time 41282981: onProducerEvent: {requestId: 0, stage: NetworkFetchProducer, eventName: intermediate_result; elapsedTime: 53 ms}\r\n01-09 20:51:53.795 17818-17868/org.lcy.iwork.home D/skia: ------ png error Read Error!\r\n01-09 20:51:53.795 17818-17868/org.lcy.iwork.home D/skia: --- SkAndroidCodec::NewFromStream returned null\r\n01-09 20:51:53.802 17818-17868/org.lcy.iwork.home D/skia: ------ png error Read Error!\r\n01-09 20:51:53.802 17818-17868/org.lcy.iwork.home D/skia: --- SkAndroidCodec::NewFromStream returned null\r\n01-09 20:51:53.806 17818-17876/org.lcy.iwork.home V/unknown:RequestLoggingListener: time 41282999: onProducerStart: {requestId: 0, producer: DecodeProducer}\r\n01-09 20:51:53.813 17818-17876/org.lcy.iwork.home D/skia: ------ png error Read Error!\r\n01-09 20:51:53.813 17818-17876/org.lcy.iwork.home D/skia: --- SkAndroidCodec::NewFromStream returned null\r\n01-09 20:51:53.814 17818-17876/org.lcy.iwork.home W/unknown:RequestLoggingListener: time 41283007: onProducerFinishWithFailure: {requestId: 0, stage: DecodeProducer, elapsedTime: 8 ms, extraMap: {sampleSize=1, hasGoodQuality=true, imageFormat=PNG, encodedImageSize=-1x-1, isFinal=false, queueTime=2, requestedImageSize=unknown}, throwable: java.lang.IllegalArgumentException}\r\n01-09 20:51:53.814 17818-17818/org.lcy.iwork.home V/unknown:AbstractDraweeController: controller ba4281e 0: final_failed @ onFailure: failure: java.lang.IllegalArgumentException\r\n01-09 20:51:53.815 17818-17876/org.lcy.iwork.home W/unknown:RequestLoggingListener: time 41283008: onRequestFailure: {requestId: 0, elapsedTime: 103 ms, throwable: java.lang.IllegalArgumentException}\r\n01-09 20:51:53.828 17818-17868/org.lcy.iwork.home V/unknown:RequestLoggingListener: time 41283021: onProducerFinishWithSuccess: {requestId: 0, producer: NetworkFetchProducer, elapsedTime: 94 ms, extraMap: {queue_time=47, total_time=92, fetch_time=45, image_size=141665}}\r\n01-09 20:51:53.828 17818-17868/org.lcy.iwork.home V/unknown:RequestLoggingListener: time 41283021: onUltimateProducerReached: {requestId: 0, producer: NetworkFetchProducer, elapsedTime: -1 ms, success: true}\r\n01-09 20:51:53.835 17818-17868/org.lcy.iwork.home V/unknown:StagingArea: Count = 1\r\n01-09 20:51:53.836 17818-17877/org.lcy.iwork.home V/unknown:BufferedDiskCache: About to write to disk-cache for key http://pic0.qiyipic.com/common/20171220/03b3aaccbefb4240b06721e25cc3dce9.png\r\n01-09 20:51:53.836 17818-17868/org.lcy.iwork.home V/unknown:GenericByteArrayPool: release (reuse) (object, size) = (defad93, 16384)\r\n01-09 20:51:53.836 17818-17868/org.lcy.iwork.home V/unknown:GenericByteArrayPool: Used = (0, 0); Free = (1, 16384)\r\n01-09 20:51:53.841 17818-17877/org.lcy.iwork.home V/unknown:GenericByteArrayPool: Used = (1, 16384); Free = (0, 0)\r\n01-09 20:51:53.841 17818-17877/org.lcy.iwork.home V/unknown:GenericByteArrayPool: get (reuse) (object, size) = (defad93, 16384)\r\n01-09 20:51:53.842 17818-17877/org.lcy.iwork.home V/unknown:GenericByteArrayPool: release (reuse) (object, size) = (defad93, 16384)\r\n01-09 20:51:53.842 17818-17877/org.lcy.iwork.home V/unknown:GenericByteArrayPool: Used = (0, 0); Free = (1, 16384)\r\n01-09 20:51:53.843 17818-17877/org.lcy.iwork.home V/unknown:BufferedDiskCache: Successful disk-cache write for key http://pic0.qiyipic.com/common/20171220/03b3aaccbefb4240b06721e25cc3dce9.png\r\n01-09 20:51:53.843 17818-17877/org.lcy.iwork.home V/unknown:StagingArea: Count = 0\r\n```\r\nFrom the log, we can see `onProducerFinishWithFailure: {requestId: 0, stage: DecodeProducer, elapsedTime: 8 ms, extraMap: {sampleSize=1, hasGoodQuality=true, imageFormat=PNG, encodedImageSize=-1x-1, isFinal=false, queueTime=2, requestedImageSize=unknown}, throwable: java.lang.IllegalArgumentException}`, isFinal=false, make the DecodeProducer failed.\r\n\r\n### Solution\r\n\r\nAfter comparing the differece between 1.2.0 and 1.3.0, the change to `NetworkImageProgressDecoder#updateDecodeJob()` will modify the behavior for immediate result, see [code](https://github.com/facebook/fresco/blob/master/imagepipeline/src/main/java/com/facebook/imagepipeline/producers/DecodeProducer.java#L450).\r\n\r\nversion 1.2.0\r\nIf the image is a png or webp, the `NetworkImageProgressDecoder#updateDecodeJob()` will return false for immediate result. Only the final result is get, `doDecode()` will be called, so it works fine.\r\n\r\nversion 1.3.0\r\nIf the image is a png or webp, setProgressiveRenderingEnabled is true, the `NetworkImageProgressDecoder#updateDecodeJob()` will return true because the super call. Then `doDecode()` is called to decode partial data and then failed. \r\n\r\nSo I think if the result is not last but immediate result, `NetworkImageProgressDecoder#updateDecodeJob()` should always return false for non JPEGs and ignore the setProgressiveRenderingEnabled config.\r\nThanks.", "url": "https://github.com/facebook/fresco/issues/2019", "user": "zjupure", "labels": ["bug"], "created": "2018-01-09 13:24:11", "closed": "2018-02-09 11:09:42", "commits": {}, "ttf": 30.00027777777778, "commitsDetails": []}, {"title": "Animated WebP Rendering is Broken", "body": "### Description\r\n\r\nThe animated WebP in the showcase sample project is rendered incorrectly.\r\n\r\nOriginal WebP ([Chrome-only](https://caniuse.com/#feat=webp)) | Fresco 1.7.1 on Google Pixel 1, 8.1\r\n--- | ---\r\n![sample animated webp](https://www.gstatic.com/webp/animated/1.webp) | ![rubix-fresco-crop-scaled](https://user-images.githubusercontent.com/1572011/34501228-f8ca231e-efdb-11e7-8fbe-2dc2f24ed020.gif)\r\n\r\nIgnore the color differences, the latter is a gif so that the images are shown side by side.\r\n\r\nNote that WebP files that have full-size intermediary frames do not seem to be affected, such as [this one](https://78.media.tumblr.com/a587fdc05866312443e46153e2da8b47/tumblr_olz8ax7awm1rhfekio1_640.gifv).\r\n\r\n### Reproduction\r\n\r\n1. Build and launch the sample project.\r\n2. Navigate to the \"WebP\" sample under the \"Image Format\" section in the hamburger menu.\r\n3. Scroll down to the animated WebP, and notice the corrupted image.\r\n\r\n### Additional Information\r\n\r\n* Fresco version: 1.7.1\r\n* Platform version: 8.1", "url": "https://github.com/facebook/fresco/issues/2015", "user": "ericleong", "labels": ["bug"], "created": "2018-01-02 21:58:19", "closed": "2018-01-16 13:27:52", "commits": {"086fd1dfc4ee6d772ea50cba7731461120dd95c5": {"commitGHEventType": "closed", "commitUser": "facebook-github-bot"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "086fd1dfc4ee6d772ea50cba7731461120dd95c5", "commitGHEventType": "closed", "commitUser": "facebook-github-bot", "commitParents": ["907711046fb9ca0246782a7b239742c5e8394300"], "nameRev": "086fd1dfc4ee6d772ea50cba7731461120dd95c5 tags/v1.8.0~5", "commitMessage": "Fixed animated image rendering for dynamic frame dimensions\n\nSummary:\nThis fixes animated image rendering for frames with varying dimensions.\nOur temp bitmap will increase in size during the first animated image loop and we will then draw the correct bounds of the set bitmap.\n\nFixes https://github.com/facebook/fresco/issues/2015\n\nReviewed By: erikandre\n\nDifferential Revision: D6726703\n\nfbshipit-source-id: 57602c925bb59481885be3a7ef44e9c85dc76035\n", "commitDateTime": "2018-01-16 05:27:44", "authoredDateTime": "2018-01-16 05:12:13", "commitGitStats": [{"filePath": "animated-base/src/main/java/com/facebook/imagepipeline/animated/impl/AnimatedDrawableBackendImpl.java", "insertions": 14, "deletions": 7, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AnimatedDrawableBackendImpl.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendImpl.prepareTempBitmapForThisSize(int,int)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendImpl.renderImageSupportsScaling(android.graphics.Canvas,com.facebook.imagepipeline.animated.base.AnimatedImageFrame)", "TOT": 14, "UPD": 0, "INS": 8, "MOV": 2, "DEL": 4}, {"spoonMethodName": "com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendImpl.clearTempBitmap()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendImpl", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendImpl.dropCaches()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["086fd1dfc4ee6d772ea50cba7731461120dd95c5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 14, "deletions": 7, "lines": 21, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 20, "UPD": 1, "INS": 12, "MOV": 3, "DEL": 4, "spoonFilesChanged": 1, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["animated-base/src/main/java/com/facebook/imagepipeline/animated/impl"], "changesInPackagesSPOON": ["com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendImpl.clearTempBitmap()", "com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendImpl.renderImageSupportsScaling(android.graphics.Canvas,com.facebook.imagepipeline.animated.base.AnimatedImageFrame)", "com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendImpl.dropCaches()", "com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendImpl", "com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendImpl.prepareTempBitmapForThisSize(int,int)"]}, {"title": "CacheKey doesn't contains Postprocessor when submit a ImageRequest", "body": "### Description\r\n\r\nWhen submit a ImageRequest with PostProcessor, BitmapMemoryCacheProducer$produceResults() should use `getPostprocessedBitmapCacheKey` method. Otherwise the cached bitmap key is different from the `mCacheKey` of PipelineDraweeController.class\r\n\r\n### Solution\r\n\r\nuse `getPostprocessedBitmapCacheKey` replace `getBitmapCacheKey` in BitmapMemoryCacheProducer$produceResults()\r\n", "url": "https://github.com/facebook/fresco/issues/2007", "user": "jungletian", "labels": ["bug"], "created": "2017-12-26 07:07:21", "closed": "2018-01-16 11:45:34", "commits": {}, "ttf": 21.00027777777778, "commitsDetails": []}, {"title": "ResizeOptions is not working in Fresco 1.7.1\uff1f", "body": "#### Description\r\nExcuse me.\r\nI can not confirm this is a bug, but when I update Fresco version to 1.7.1, ResizeOptions is not working, but it works normally in version 1.5.0.\r\nPlease help me to test this function.\r\nthx.\r\n\r\n#### Reproduction\r\n##### This is my code:\r\n``` java\r\npublic static void loadImgByFile(CommonImageView imageView, String path) {\r\n        if (imageView != null && !TextUtils.isEmpty(path)) {\r\n            File file = new File(path);\r\n            //if size too large then resize\r\n            if (file.exists()) {\r\n                BitmapFactory.Options options = new BitmapFactory.Options();\r\n                options.inJustDecodeBounds = true;\r\n                BitmapFactory.decodeFile(path, options);\r\n                int imageHeight = options.outHeight;\r\n                int imageWidth = options.outWidth;\r\n                int maxSize = getGLESTextureMaxSize();\r\n                Log.e(\"texture---test---->\", \"imageHeight=\" + imageHeight\r\n                        + \"    imageWidth=\" + imageWidth\r\n                        + \"    maxSize=\" + maxSize\r\n                );\r\n                if (maxSize <= imageHeight || maxSize <= imageWidth) {\r\n                    ImageRequest request = ImageRequestBuilder.newBuilderWithSource(Uri.fromFile(file))\r\n                            .setResizeOptions(new ResizeOptions(maxSize/2, maxSize/2,maxSize))\r\n                            .build();\r\n\r\n                    DraweeController controller = Fresco.newDraweeControllerBuilder()\r\n                            .setImageRequest(request)\r\n                            .setOldController(imageView.getController())\r\n                            .build();\r\n                    imageView.setController(controller);\r\n                    Log.e(\"texture---test---->\", \"controller=\" + controller);\r\n                    return;\r\n                }\r\n            }\r\n            imageView.setImageURI(Uri.parse(\"file://\" + path));\r\n        }\r\n    }\r\n```\r\n\r\n```java\r\nprivate static int OPENGL_MAX_SIZE = 0;\r\n    private static int getGLESTextureMaxSize() {\r\n        if (OPENGL_MAX_SIZE != 0) {\r\n            return OPENGL_MAX_SIZE;\r\n        }\r\n        EGL10 egl = (EGL10) EGLContext.getEGL();\r\n        EGLDisplay dpy = egl.eglGetDisplay(EGL10.EGL_DEFAULT_DISPLAY);\r\n        int[] vers = new int[2];\r\n        egl.eglInitialize(dpy, vers);\r\n        int[] configAttr = {\r\n                EGL10.EGL_COLOR_BUFFER_TYPE, EGL10.EGL_RGB_BUFFER,\r\n                EGL10.EGL_LEVEL, 0,\r\n                EGL10.EGL_SURFACE_TYPE, EGL10.EGL_PBUFFER_BIT,\r\n                EGL10.EGL_NONE\r\n        };\r\n        EGLConfig[] configs = new EGLConfig[1];\r\n        int[] numConfig = new int[1];\r\n        egl.eglChooseConfig(dpy, configAttr, configs, 1, numConfig);\r\n        if (numConfig[0] == 0) {// TROUBLE! No config found.\r\n        }\r\n        EGLConfig config = configs[0];\r\n        int[] surfAttr = {\r\n                EGL10.EGL_WIDTH, 64,\r\n                EGL10.EGL_HEIGHT, 64,\r\n                EGL10.EGL_NONE\r\n        };\r\n        EGLSurface surf = egl.eglCreatePbufferSurface(dpy, config, surfAttr);\r\n        final int EGL_CONTEXT_CLIENT_VERSION = 0x3098; // missing in EGL10\r\n        int[] ctxAttrib = {\r\n                EGL_CONTEXT_CLIENT_VERSION, 1,\r\n                EGL10.EGL_NONE\r\n        };\r\n        EGLContext ctx = egl.eglCreateContext(dpy, config, EGL10.EGL_NO_CONTEXT, ctxAttrib);\r\n        egl.eglMakeCurrent(dpy, surf, surf, ctx);\r\n        int[] maxSize = new int[1];\r\n        GLES10.glGetIntegerv(GLES10.GL_MAX_TEXTURE_SIZE, maxSize, 0);\r\n        egl.eglMakeCurrent(dpy, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_SURFACE,\r\n                EGL10.EGL_NO_CONTEXT);\r\n        egl.eglDestroySurface(dpy, surf);\r\n        egl.eglDestroyContext(dpy, ctx);\r\n        egl.eglTerminate(dpy);\r\n        OPENGL_MAX_SIZE = maxSize[0];\r\n        return OPENGL_MAX_SIZE;\r\n    }\r\n```\r\n\r\n##### When i run them in Fresco 1.7.1 ,the Logcat showing:\r\n![image](https://user-images.githubusercontent.com/11972411/34199347-728b3488-e5a8-11e7-91d8-c93cebf50d68.png)\r\n\r\nThe ResizeOptions is not working.\r\nSimpleDraweeView shows blank.\r\nI think it is because that OpenGLRenderer can't load the jpeg image, when the height or width of the jpeg image is too large. DraweeController should have loaded the ResizeOptions which I set, but it uploaded the original image to OpenGLRenderer instead.\r\n\r\n##### When i run them in  Fresco 1.5.0 ,the Logcat showing:\r\n![image](https://user-images.githubusercontent.com/11972411/34199811-ecf7642a-e5a9-11e7-9d66-d5f81a113671.png)\r\nThe ResizeOptions is working normally.\r\nSimpleDraweeView can show pictures.\r\n\r\n\r\n#### Just a guess\r\nI noticed in the page\uff1a\r\n![image](https://user-images.githubusercontent.com/11972411/34200238-48be38c8-e5ab-11e7-9d68-99f2abc6407f.png)\r\nRegion decoding support is added in this version, this commit(bd249fa) changed ArtDecoder.\r\nI can not confirm the problem because of this commit.\r\n\r\n\r\n#### Some device parameters \r\n+ Device Model:  HUAWEI P9 (HUAWEI EVA-AL00)\r\n+ Platform:  Android 7.0 \r\n+ API level:  24\r\n+ Screen resolution:  1080*1920\r\n+ CPU:  Hisilicon Kirin 955 \r\n+ RAM:  3.0 GB\r\n\r\n\r\n", "url": "https://github.com/facebook/fresco/issues/2000", "user": "MidoriInu1", "labels": ["bug"], "created": "2017-12-20 10:16:48", "closed": "2017-12-28 15:02:22", "commits": {"e2c464efbc9214d1a00aa416d3d9cfb26c0298da": {"commitGHEventType": "closed", "commitUser": "facebook-github-bot"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "e2c464efbc9214d1a00aa416d3d9cfb26c0298da", "commitGHEventType": "closed", "commitUser": "facebook-github-bot", "commitParents": ["8280b6d53aaf6982405aa359166e341d7e4219dc"], "nameRev": "e2c464efbc9214d1a00aa416d3d9cfb26c0298da tags/v1.8.0~9", "commitMessage": "Fix downsampling for PNGs\n\nSummary:\nWe recently changed EXIF rotation handling to support flipped modes. However, this broke downsampling and smart resizing for PNGs.\nWe don't really need to check the exif rotation for metadata available methods. We should probably rename them and only use for specific checks.\n\nFixes https://github.com/facebook/fresco/issues/2000\n\nReviewed By: erikandre\n\nDifferential Revision: D6642052\n\nfbshipit-source-id: 542dbc450974ca56497b70ec0967ed631c582731\n", "commitDateTime": "2017-12-28 07:02:12", "authoredDateTime": "2017-12-28 06:59:26", "commitGitStats": [{"filePath": "imagepipeline-base/src/main/java/com/facebook/imagepipeline/image/EncodedImage.java", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncodedImage.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.image.EncodedImage.isMetaDataAvailable(com.facebook.imagepipeline.image.EncodedImage)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e2c464efbc9214d1a00aa416d3d9cfb26c0298da"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0, "deletions": 1, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["imagepipeline-base/src/main/java/com/facebook/imagepipeline/image"], "changesInPackagesSPOON": ["com.facebook.imagepipeline.image.EncodedImage.isMetaDataAvailable(com.facebook.imagepipeline.image.EncodedImage)"]}, {"title": "java.lang.UnsatisfiedLinkError", "body": "\r\n### Description\r\n\r\nI met a bug on Sumsung and ZTE phone, the descirptions: \r\njava.lang.NoClassDefFoundError\r\n[com.facebook.imagepipeline.memory.NativeMemoryChunk]([url](url))\r\n\r\n### Reproduction\r\n\r\n[FILL THIS OUT: How can we reproduce the bug? Provide URLs to relevant images if possible, or a sample project.]\r\n\r\n### Solution\r\n\r\n[OPTIONAL: Do you know what needs to be done to address this issue? Ideally, provide a pull request which fixes this issue.]\r\n\r\n### Additional Information\r\n\r\n* Fresco version: [1.5.0]\r\n* Platform version: [Sumsung and ZTE phone 4.0 66%  7.0 33%]\r\n", "url": "https://github.com/facebook/fresco/issues/1982", "user": "WenshyDreamPenta", "labels": ["bug", "duplicate"], "created": "2017-12-05 03:13:05", "closed": "2017-12-07 17:34:50", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Thumbnail of video from Android document provider does not show ", "body": "### Description\r\n\r\nVideo thumbnail cannot be rendered via `SimpleDraweeView#setImageURI` if the content uri is like: \r\n`content://com.android.providers.media.documents/document/video%3A160`\r\n\r\n### Reproduction\r\n\r\nMy app allows user to choose a file from Android document provider.  The Intent is constructed by this way:\r\n```.java\r\n    public static Intent getChooseMediaIntent(String type) {\r\n        Intent intent = new Intent(Intent.ACTION_GET_CONTENT, MediaStore.Video.Media.EXTERNAL_CONTENT_URI);\r\n        intent.setType(type); // type is \"video/*\" here\r\n        return intent;\r\n    }\r\n```\r\nThe returned uri is `content://com.android.providers.media.documents/document/video%3A160`.\r\nHowever, when I use `SimpleDraweeView#setImageURI` to render the video thumbnail, it should blank.\r\n\r\n### Solution\r\nThe root cause as I found out is within `LocalVideoThumbnailProducer#getLocalFilePath`. For the uri `content://com.android.providers.media.documents/document/video%3A160` this method will return null.\r\nI've sent a PR #1970 \r\n\r\n### Additional Information\r\n\r\n* Fresco version: 1.5.0\r\n* Platform version: Android 7.1.1 on OnePlus 5 / Android 7.1.2 on Xiaomi 5C.\r\n\r\n![device-2017-11-16-171253](https://user-images.githubusercontent.com/5569148/32885768-748310e0-caf9-11e7-9502-58ddb9164845.png)\r\n\r\n", "url": "https://github.com/facebook/fresco/issues/1969", "user": "w0yne", "labels": ["bug"], "created": "2017-11-16 10:03:11", "closed": "2017-11-22 18:33:43", "commits": {"86c3b37e8ab6749467d946660967991c56b6baa8": {"commitGHEventType": "closed", "commitUser": "facebook-github-bot"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "86c3b37e8ab6749467d946660967991c56b6baa8", "commitGHEventType": "closed", "commitUser": "facebook-github-bot", "commitParents": ["48871d1e4a0171c22596c740e209029c48b291b5"], "nameRev": "86c3b37e8ab6749467d946660967991c56b6baa8 tags/v1.7.0~15", "commitMessage": "Issue #1969 Fix LocalVideoThumbnailProducer#getLocalFilePath for videos from Android document provider.\n\nSummary:\nThis resolves #1969.\n`LocalVideoThumbnailProducer#getLocalFilePath` will return null for uris like `content://com.android.providers.media.documents/document/video%3A160`. Inspired by https://github.com/iPaulPro/aFileChooser/blob/master/aFileChooser/src/com/ipaulpro/afilechooser/utils/FileUtils.java, this PR just fix this case.\n\nSince this method is private and the test uri in `LocalVideoThumbnailProducerTest` is just a mocked uri starts with `file://`, there is no test to cover.\nCloses https://github.com/facebook/fresco/pull/1970\n\nReviewed By: kirwan\n\nDifferential Revision: D6395591\n\nPulled By: dmitry-voronkevich\n\nfbshipit-source-id: f2cb0dc4a231848503141835c3a3685a51d117cc\n", "commitDateTime": "2017-11-22 10:33:34", "authoredDateTime": "2017-11-22 10:22:46", "commitGitStats": [{"filePath": "imagepipeline/src/main/java/com/facebook/imagepipeline/producers/LocalVideoThumbnailProducer.java", "insertions": 14, "deletions": 8, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LocalVideoThumbnailProducer.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer.getLocalFilePath(com.facebook.imagepipeline.request.ImageRequest)", "TOT": 7, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["86c3b37e8ab6749467d946660967991c56b6baa8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 14, "deletions": 8, "lines": 22, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["imagepipeline/src/main/java/com/facebook/imagepipeline/producers"], "changesInPackagesSPOON": ["com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer.getLocalFilePath(com.facebook.imagepipeline.request.ImageRequest)"]}, {"title": "Crash when playing some Animated webp.", "body": "We use GitHub Issues for bugs.\r\n\r\nIf you have a non-bug question, please ask on Stack Overflow: http://stackoverflow.com/questions/tagged/fresco\r\n\r\n--- Please use this template, and delete everything above this line before submitting your issue --- \r\n\r\nDescription\r\n\r\nit can render a few frames , but crash later.\r\n\r\nReproduction\r\nPlay the webp -> https://github.com/KeepLearningKeepGoing/LearningNotes/blob/master/10002802_broken.webp\r\n\r\nSolution\r\n\r\n\r\nAdditional Information\r\ni got some log output for help. \r\n------------------------------------------\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410] JNI DETECTED ERROR IN APPLICATION: JNI MonitorEnter called with pending exception java.lang.IllegalStateException: Failed to decode frame\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at void com.facebook.animated.webp.WebPFrame.nativeRenderFrame(int, int, android.graphics.Bitmap) (WebPFrame.java:-2)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at void com.facebook.animated.webp.WebPFrame.renderFrame(int, int, android.graphics.Bitmap) (WebPFrame.java:50)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at void com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendImpl.renderImageSupportsScaling(android.graphics.Canvas, com.facebook.imagepipeline.animated.base.AnimatedImageFrame) (AnimatedDrawableBackendImpl.java:203)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at void com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendImpl.renderFrame(int, android.graphics.Canvas) (AnimatedDrawableBackendImpl.java:177)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at void com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor.renderFrame(int, android.graphics.Bitmap) (AnimatedImageCompositor.java:120)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at boolean com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer.renderFrame(int, android.graphics.Bitmap) (AnimatedDrawableBackendFrameRenderer.java:74)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at boolean com.facebook.fresco.animation.bitmap.preparation.DefaultBitmapFramePreparer$FrameDecodeRunnable.renderFrameAndCache(int, com.facebook.common.references.CloseableReference, int) (DefaultBitmapFramePreparer.java:175)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at boolean com.facebook.fresco.animation.bitmap.preparation.DefaultBitmapFramePreparer$FrameDecodeRunnable.prepareFrameAndCache(int, int) (DefaultBitmapFramePreparer.java:154)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at boolean com.facebook.fresco.animation.bitmap.preparation.DefaultBitmapFramePreparer$FrameDecodeRunnable.prepareFrameAndCache(int, int) (DefaultBitmapFramePreparer.java:162)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at void com.facebook.fresco.animation.bitmap.preparation.DefaultBitmapFramePreparer$FrameDecodeRunnable.run() (DefaultBitmapFramePreparer.java:112)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at void com.facebook.common.executors.ConstrainedExecutorService$Worker.run() (ConstrainedExecutorService.java:177)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at void java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) (ThreadPoolExecutor.java:1113)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at void java.util.concurrent.ThreadPoolExecutor$Worker.run() (ThreadPoolExecutor.java:588)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at void com.facebook.imagepipeline.core.PriorityThreadFactory$1.run() (PriorityThreadFactory.java:42)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at void java.lang.Thread.run() (Thread.java:818)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410] \r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]     in call to MonitorEnter\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]     from void com.facebook.animated.webp.WebPFrame.nativeRenderFrame(int, int, android.graphics.Bitmap)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410] \"Thread-7809\" prio=5 tid=86 Runnable\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   | group=\"main\" sCount=0 dsCount=0 obj=0x33d2c100 self=0xd7724e00\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   | sysTid=31483 nice=10 cgrp=bg_non_interactive sched=0/0 handle=0xc7f7f930\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   | state=R schedstat=( 118803164 71801828 135 ) utm=11 stm=0 core=0 HZ=100\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   | stack=0xc7e7d000-0xc7e7f000 stackSize=1038KB\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   | held mutexes= \"mutator lock\"(shared held)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   native: #00 pc 0035cd85  /system/lib/libart.so (_ZN3art15DumpNativeStackERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEiPKcPNS_9ArtMethodEPv+116)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   native: #01 pc 0033d753  /system/lib/libart.so (_ZNK3art6Thread4DumpERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE+138)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   native: #02 pc 0024f8f9  /system/lib/libart.so (_ZN3art9JavaVMExt8JniAbortEPKcS2_+760)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   native: #03 pc 0024ff97  /system/lib/libart.so (_ZN3art9JavaVMExt9JniAbortVEPKcS2_St9__va_list+54)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   native: #04 pc 000fc033  /system/lib/libart.so (_ZN3art11ScopedCheck6AbortFEPKcz+30)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   native: #05 pc 00100f0f  /system/lib/libart.so (_ZN3art11ScopedCheck5CheckERNS_18ScopedObjectAccessEbPKcPNS_12JniValueTypeE.constprop.95+5054)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   native: #06 pc 0010cac3  /system/lib/libart.so (_ZN3art8CheckJNI12MonitorEnterEP7_JNIEnvP8_jobject+370)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   native: #07 pc 000089cb  /data/app/com.sohu.qianfan-1/lib/arm/libstatic-webp.so (???)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   native: #08 pc 00008b91  /data/app/com.sohu.qianfan-1/lib/arm/libstatic-webp.so (???)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   native: #09 pc 000ea8c9  /system/lib/libart.so (art_quick_generic_jni_trampoline+40)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   native: #10 pc 000e61d1  /system/lib/libart.so (art_quick_invoke_stub_internal+64)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   native: #11 pc 003eb9e3  /system/lib/libart.so (art_quick_invoke_stub+170)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   native: #12 pc 000ff3a4  [stack:31483] (???)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at com.facebook.animated.webp.WebPFrame.nativeRenderFrame(Native method)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at com.facebook.animated.webp.WebPFrame.renderFrame(WebPFrame.java:50)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendImpl.renderImageSupportsScaling(AnimatedDrawableBackendImpl.java:203)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   - locked <0x09d071be> (a com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendImpl)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendImpl.renderFrame(AnimatedDrawableBackendImpl.java:177)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor.renderFrame(AnimatedImageCompositor.java:120)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer.renderFrame(AnimatedDrawableBackendFrameRenderer.java:74)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at com.facebook.fresco.animation.bitmap.preparation.DefaultBitmapFramePreparer$FrameDecodeRunnable.renderFrameAndCache(DefaultBitmapFramePreparer.java:175)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at com.facebook.fresco.animation.bitmap.preparation.DefaultBitmapFramePreparer$FrameDecodeRunnable.prepareFrameAndCache(DefaultBitmapFramePreparer.java:154)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at com.facebook.fresco.animation.bitmap.preparation.DefaultBitmapFramePreparer$FrameDecodeRunnable.prepareFrameAndCache(DefaultBitmapFramePreparer.java:162)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at com.facebook.fresco.animation.bitmap.preparation.DefaultBitmapFramePreparer$FrameDecodeRunnable.run(DefaultBitmapFramePreparer.java:112)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at com.facebook.common.executors.ConstrainedExecutorService$Worker.run(ConstrainedExecutorService.java:177)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at com.facebook.imagepipeline.core.PriorityThreadFactory$1.run(PriorityThreadFactory.java:42)\r\n10-27 16:05:41.425 29538-31483/xx A/art: art/runtime/java_vm_ext.cc:410]   at java.lang.Thread.run(Thread.java:818)\r\n\r\n* Fresco version: [1.5.0]\r\n* Platform version: [ALL Device]\r\n", "url": "https://github.com/facebook/fresco/issues/1954", "user": "DuranShelf", "labels": ["bug"], "created": "2017-10-27 08:25:09", "closed": "2018-06-04 12:18:07", "commits": {}, "ttf": 220.00027777777777, "commitsDetails": []}, {"title": "Animated Image does not play completely in SimpleDraweeSpanTextView", "body": "### Description\r\n\r\n`SimpleDraweeSpanTextView`, when given an animated image as the source, only plays a couple frames and then freezes. Rerenders can trigger a different frame to be displayed, but it is still not actually \"playing\". The same happens on both `.webm` and `.gif` files.\r\n\r\nGIF example showcasing frozen GIF using keyboard show/hide toggle to force rerenders that show new frames:\r\n\r\n![output](https://user-images.githubusercontent.com/8857134/31738618-1e13762e-b400-11e7-97ee-05e095c8d322.gif)\r\n\r\n### Reproduction\r\n\r\nTry to put a GIF into a `DraweeSpanStringBuilder`.\r\n\r\nSample project: https://github.com/angarron/FrescoSamples/blob/master/app/src/main/java/com/agarron/frescosamples/MainActivity.kt\r\n\r\nSample code snippet:\r\n\r\n```\r\n  private fun renderImage() {\r\n    val builder = DraweeSpanStringBuilder(\"Animated Image: \")\r\n\r\n    val startIndex = builder.length\r\n    builder.append(\"<image>\")\r\n\r\n    val controller = Fresco.newDraweeControllerBuilder()\r\n        .setUri(\"http://cultofthepartyparrot.com/parrots/hd/parrot.gif\")\r\n        .setAutoPlayAnimations(true)\r\n        .build()\r\n\r\n    val draweeHierarchy = GenericDraweeHierarchyBuilder.newInstance(resources)\r\n        .setPlaceholderImage(ColorDrawable(Color.TRANSPARENT))\r\n        .setActualImageScaleType(ScalingUtils.ScaleType.FIT_CENTER)\r\n        .build()\r\n\r\n    builder.setImageSpan(\r\n        this,\r\n        draweeHierarchy,\r\n        controller,\r\n        startIndex,\r\n        builder.length - 1,\r\n        dpToPixels(IMAGE_WIDTH_DP),\r\n        dpToPixels(IMAGE_HEIGHT_DP),\r\n        false,\r\n        DraweeSpan.ALIGN_CENTER)\r\n\r\n    simpleDraweeSpanTextView.setDraweeSpanStringBuilder(builder)\r\n  }\r\n```\r\n\r\n### Solution\r\n\r\nI don't know a solution here yet :( Would like to dedicate the resources soon but happy to accept any tips or help in the meantime that may make that easier.\r\n\r\n### Additional Information\r\n\r\n* Fresco version: 1.5.0", "url": "https://github.com/facebook/fresco/issues/1940", "user": "AndyG", "labels": ["bug"], "created": "2017-10-18 19:35:38", "closed": "2018-01-17 17:49:05", "commits": {"e548e50967768fbfdf27d6c2c8f3601533f5e11b": {"commitGHEventType": "referenced", "commitUser": "facebook-github-bot"}}, "ttf": 90.00027777777778, "commitsDetails": [{"commitHash": "e548e50967768fbfdf27d6c2c8f3601533f5e11b", "commitGHEventType": "referenced", "commitUser": "facebook-github-bot", "commitParents": ["52a0fa5c305ae5bb5b398a5035fdba4da1b488a7"], "nameRev": "e548e50967768fbfdf27d6c2c8f3601533f5e11b tags/v1.7.0~19", "commitMessage": "Issue 1940: Fix animated images not playing in SimpleDraweeSpanTextView\n\nSummary:\nThe pull request solves [issue#1940](https://github.com/facebook/fresco/issues/1940). Also it's fix that unscheduleDrawable() calls itself recursively (if it was ever called).\n\n- Run tests.\n- Ensure that DraweeSpan in Showcase app works properly (fist span is still, second is animating).\nCloses https://github.com/facebook/fresco/pull/1966\n\nReviewed By: kirwan\n\nDifferential Revision: D6349009\n\nPulled By: oprisnik\n\nfbshipit-source-id: 269ab8d0e028d2d6c70f3843528cdb80331b4cea\n", "commitDateTime": "2017-11-16 11:34:18", "authoredDateTime": "2017-11-16 11:33:11", "commitGitStats": [{"filePath": "drawee-span/src/main/java/com/facebook/drawee/span/DraweeSpanStringBuilder.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/drawee/DraweeSpanSimpleTextFragment.java", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "samples/showcase/src/main/res/values/strings.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DraweeSpanStringBuilder.java", "spoonMethods": [{"spoonMethodName": "com.facebook.drawee.span.DraweeSpanStringBuilder.DrawableCallback.unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.drawee.span.DraweeSpanStringBuilder.DrawableCallback.scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)", "TOT": 7, "UPD": 1, "INS": 2, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "DraweeSpanSimpleTextFragment.java", "spoonMethods": [{"spoonMethodName": "com.facebook.fresco.samples.showcase.drawee.DraweeSpanSimpleTextFragment", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.fresco.samples.showcase.drawee.DraweeSpanSimpleTextFragment.onViewCreated(android.view.View,android.os.Bundle)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.fresco.samples.showcase.drawee.DraweeSpanSimpleTextFragment.updateText()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e548e50967768fbfdf27d6c2c8f3601533f5e11b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 34, "deletions": 2, "lines": 36, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 14, "UPD": 2, "INS": 8, "MOV": 3, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["drawee-span/src/main/java/com/facebook/drawee/span", "samples/showcase/src/main/java/com/facebook/fresco/samples/showcase"], "changesInPackagesSPOON": ["com.facebook.fresco.samples.showcase.drawee.DraweeSpanSimpleTextFragment.updateText()", "com.facebook.fresco.samples.showcase.drawee.DraweeSpanSimpleTextFragment", "com.facebook.drawee.span.DraweeSpanStringBuilder.DrawableCallback.scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)", "com.facebook.drawee.span.DraweeSpanStringBuilder.DrawableCallback.unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)", "com.facebook.fresco.samples.showcase.drawee.DraweeSpanSimpleTextFragment.onViewCreated(android.view.View,android.os.Bundle)"]}, {"title": "Placeholder transparency doesn't work properly with background.", "body": "### Description\r\n\r\nI want to set placeholder and background to the image. The issue is that my placeholder is an icon on transparent background. And regions of the icon crops background. It is very vague in words, but please look at the attached picture and everything will become clear.\r\nhttps://yadi.sk/i/xUFRLHlv3Nrsss\r\nCompare with expected result - https://yadi.sk/i/RJ-tRu9l3Nrtw4\r\n\r\n### Code\r\n\r\n`\r\n                  \r\n                 final SimpleDraweeView imageView = new SimpleDraweeView(getActivity(), \r\n                 GenericDraweeHierarchyBuilder.newInstance(getResources())\r\n                .setFadeDuration(400)\r\n                .setRoundingParams(RoundingParams.fromCornersRadius(RUtils.convertDpToPixels(5)))\r\n                .setPlaceholderImage(RUtils.getDrFromAttr(R.attr.dialog_cover_image_loading, getActivity()))\r\n                .setBackground(RUtils.getDrFromAttr(R.attr.dialog_cover_image_background, getActivity()))\r\n                .build());\r\n        imageView.setId(id);\r\n\r\n        ImageRequest request = ImageRequestBuilder\r\n                .newBuilderWithSource(Uri.parse(url))\r\n                .disableDiskCache()\r\n                .build();\r\n\r\n        DraweeController controller = Fresco.newDraweeControllerBuilder()\r\n                .setImageRequest(request)\r\n                .build();\r\n\r\n        imageView.setController(controller);`\r\n\r\n### Additional Information\r\n\r\n* Fresco version: 1.5.0\r\n* Platform version:  Tested on Android 6.0 and Android 8.0\r\n", "url": "https://github.com/facebook/fresco/issues/1939", "user": "krottv", "labels": ["bug", "starter-task"], "created": "2017-10-18 12:56:53", "closed": "2018-01-16 17:29:19", "commits": {}, "ttf": 90.00027777777778, "commitsDetails": []}, {"title": "Cannot import project and run its sample", "body": "I get this error:\r\n![image](https://user-images.githubusercontent.com/5357526/30971610-0d0046ee-a471-11e7-8e96-54e577e52c13.png)\r\n", "url": "https://github.com/facebook/fresco/issues/1915", "user": "AndroidDeveloperLB", "labels": ["bug", "needs-details"], "created": "2017-09-28 14:18:36", "closed": "2017-11-06 17:53:31", "commits": {"01caf7b97e64cc6b2fd88162288026f11d63a7c1": {"commitGHEventType": "referenced", "commitUser": "facebook-github-bot"}}, "ttf": 39.000277777777775, "commitsDetails": [{"commitHash": "01caf7b97e64cc6b2fd88162288026f11d63a7c1", "commitGHEventType": "referenced", "commitUser": "facebook-github-bot", "commitParents": ["ff3bed97fb05e4d235e5e67009b1e26b7ad384b8"], "nameRev": "01caf7b97e64cc6b2fd88162288026f11d63a7c1 tags/v1.7.0~3", "commitMessage": "Update versions\n\nSummary:\nUpdated build tools, gradle plugin, gradle and support library dependencies.\n\nFixed \"bintrayUsername not found\" errors (#1915).\n\nThis makes sample apps API 14+ (because of new support library). The core lib remains API 9+.\n\nRun showcase app + CI.\nCloses https://github.com/facebook/fresco/pull/1986\n\nReviewed By: oprisnik, kirwan\n\nDifferential Revision: D6545311\n\nPulled By: foghina\n\nfbshipit-source-id: f5808836075412fec9c9c22596fd9527718367cb\n", "commitDateTime": "2017-12-13 04:02:44", "authoredDateTime": "2017-12-13 03:49:08", "commitGitStats": [{"filePath": "animated-drawable/build.gradle", "insertions": 17, "deletions": 17, "lines": 34}, {"filePath": "build.gradle", "insertions": 6, "deletions": 9, "lines": 15}, {"filePath": "circle.yml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "drawee-backends/drawee-pipeline/build.gradle", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "drawee/build.gradle", "insertions": 9, "deletions": 8, "lines": 17}, {"filePath": "fbcore/build.gradle", "insertions": 13, "deletions": 12, "lines": 25}, {"filePath": "gradle.properties", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "gradle/bintray.gradle", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "gradle/wrapper/gradle-wrapper.properties", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "imagepipeline-base-test/build.gradle", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "imagepipeline-test/build.gradle", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "imagepipeline/build.gradle", "insertions": 21, "deletions": 18, "lines": 39}, {"filePath": "release-sonatype.gradle", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "samples/animation2/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/comparison/build.gradle", "insertions": 20, "deletions": 20, "lines": 40}, {"filePath": "samples/comparison/src/main/java/com/facebook/samples/comparison/MainActivity.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "samples/kotlin/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/scrollperf/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/showcase/build.gradle", "insertions": 24, "deletions": 21, "lines": 45}, {"filePath": "samples/zoomableapp/build.gradle", "insertions": 6, "deletions": 4, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MainActivity.java", "spoonMethods": [{"spoonMethodName": "com.facebook.samples.comparison.MainActivity", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["01caf7b97e64cc6b2fd88162288026f11d63a7c1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 151, "deletions": 135, "lines": 286, "gitFilesChange": 20}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["", "imagepipeline-base-test", "imagepipeline-test", "samples/comparison", "gradle", "gradle/wrapper/gradle-wrapper.properties", "samples/animation2", "samples/kotlin", "imagepipeline", "drawee-backends/drawee-pipeline", "samples/showcase", "animated-drawable", "gradle.properties", "drawee", "samples/comparison/src/main/java/com/facebook/samples/comparison", "fbcore", "circle.yml", "samples/zoomableapp", "samples/scrollperf"], "changesInPackagesSPOON": ["com.facebook.samples.comparison.MainActivity"]}, {"title": "java.lang.RuntimeException: Failed to pin Bitmap", "body": "1) the way i used:\r\n\r\n```\r\n        ImageRequestBuilder imageRequestBuilder = ImageRequestBuilder.newBuilderWithSource(imageUri);\r\n        imageRequestBuilder.setProgressiveRenderingEnabled(true);\r\n        ImageRequest imageRequest = imageRequestBuilder.build();\r\n\r\n        PipelineDraweeControllerBuilder controllerBuilder = Fresco.newDraweeControllerBuilder();\r\n        // controllerBuilder.setOldController(frescoView.getController());\r\n        controllerBuilder.setImageRequest(imageRequest);\r\n        DraweeController controller = controllerBuilder.build();\r\n\r\n        // GenericDraweeHierarchy genericDraweeHierarchy = frescoView.getHierarchy();\r\n\r\n        frescoView.setController(controller);\r\n```\r\n\r\n2) So the question happend:\r\n[issues.txt](https://github.com/facebook/fresco/files/1328230/issues.txt)\r\n\r\nthe issues.txt is my log for the problem;\r\n\r\n3) last: the version that i use\r\n\r\n```\r\n    compile 'com.facebook.fresco:fresco:1.5.0'                // \u4e3b\u4f9d\u8d56\r\n    compile 'com.facebook.fresco:animated-gif:1.5.0'  // \u652f\u6301gif\u52a8\u56fe\r\n    compile 'com.facebook.fresco:animated-webp:1.5.0'// \u652f\u6301webp\u52a8\u6001\r\n    compile 'com.facebook.fresco:webpsupport:1.5.0'  // \u652f\u6301webp\u9759\u6001\r\n    compile 'com.facebook.fresco:imagepipeline-okhttp3:1.5.0'\r\n```\r\n\r\n", "url": "https://github.com/facebook/fresco/issues/1909", "user": "yline", "labels": ["bug", "needs-details"], "created": "2017-09-25 04:03:48", "closed": "2018-01-15 14:49:02", "commits": {}, "ttf": 112.00027777777778, "commitsDetails": []}, {"title": "focusCrop doesn't work correctly with sharedTransitions", "body": "### Description\r\n\r\nWhen using scaleType \"focusCrop\" for a shared transition the image will change to be centerCropped then the shared Transition will take place.  On the exit transition, it will transition to be centerCropped and then after the transition finishes it will move to the focusCrop.\r\n\r\nI am using setLegacyVisibilityHandlingEnabled, but don't think that matters.\r\n\r\n### Reproduction\r\n\r\nThis is a video of the issue happening with transitions set to 5x slower than normal, so the issue is more visible.\r\n\r\n![ezgif com-optimize](https://user-images.githubusercontent.com/1966657/30776810-2518a9a0-a062-11e7-9e74-355630ceced9.gif)\r\n\r\nTesting on pixel with Android O, physical device.\r\n\r\n### Solution\r\n\r\nI'm guessing the transition magic just isn't aware that focus crop is a thing, so ideally when the transition image is displayed it can be aware of that, not sure if that is possible though.\r\n\r\n### Additional Information\r\n\r\n* Fresco version: 1.5.0\r\n* Platform version: Pixel, O, physical device.  Seen it on on emulators as well.\r\n", "url": "https://github.com/facebook/fresco/issues/1908", "user": "ryanzor", "labels": ["bug"], "created": "2017-09-23 20:24:31", "closed": "2018-01-19 20:55:36", "commits": {}, "ttf": 118.00027777777778, "commitsDetails": []}, {"title": "SIGSEGV crashed at libstatic-webp.so on x86 ", "body": "hi, I've introduced fresco which version is 1.3.0. However, I got the SIGSEGV crashed at libstatic-webp.so when run on x86 android phone.  The stack info is: \r\nlibstatic-webp.so + 0x7ca97\r\n    eip = 0x683d9a97   esp = 0x6befd61c   ebp = 0x6f33e280   ebx = 0x6840df10\r\n    esi = 0xf3f00000   edi = 0x0000000a   eax = 0x6f33df30   ecx = 0x00000000\r\n    edx = 0x683e78f0   efl = 0x00210246\r\nand the corresponding assemble instruction(reassemble by IDA) is \"movdqa  [esp+1Ch+var_1C], xmm6\". I looked at the function of movdqa on web, and there exist an detailed description at [1]. It said that 'when the source or destination operand is a memory operand, the operand must be aligned on a 16-byte boundary or a general-protection exception (#GP) will be generated.'  However, the esp value printed on stack info are not aligned 16-byte. So, I wonder if the unaligned esp access leaded to this crash. If so,   Can we add '-falign-stack=maintain-16-byte' flag to request compiler to avoid unaligned access? [2]\r\n\r\nref: [1]. http://x86.renejeschke.de/html/file_module_x86_id_183.html\r\n[2].https://software.intel.com/en-us/forums/intel-c-compiler/topic/277295\r\n\r\nBrs\r\nnewjor", "url": "https://github.com/facebook/fresco/issues/1907", "user": "newjorchen", "labels": ["bug", "needs-details"], "created": "2017-09-23 08:33:59", "closed": "2018-01-18 15:06:54", "commits": {}, "ttf": 117.00027777777778, "commitsDetails": []}, {"title": "For infinitely animated webp, the animation listener \"onAnimationFrame\" does't work", "body": "\r\n\r\n### Description\r\nI use a infinitely animated webp with fresco, I add a listener to check every frame to draw. When the animation start, I found that the frame callback is not increasing step by 1 and the drop frame is always 0. \r\nWhat expected: It should increasing step by 1 or the frameNumber + dropFrame == FrameCount.\r\n\r\n### Reproduction\r\n\r\njust use a infinitely animated webp in fresco.\r\n\r\n### Additional Information\r\n\r\n* Fresco version: [1.40 above]\r\n* Platform version: [All Android device]\r\n", "url": "https://github.com/facebook/fresco/issues/1900", "user": "TinoGuo", "labels": ["bug"], "created": "2017-09-12 06:59:07", "closed": "2018-01-16 17:35:39", "commits": {}, "ttf": 126.00027777777778, "commitsDetails": []}, {"title": "crash when rendering some GIF's", "body": "### Description\r\n\r\nTest Gif:\r\nhttps://beauty.nosdn.127.net/beauty/img/5fcca295-c5b9-4b91-8413-353db505ddd3.gif?imageView&thumbnail=960x0&tostatic=0\r\n\r\n### Additional Information\r\n\r\n* Fresco version: 1.4.0, 1.5.0\r\n* Platform version:  Device: Nexus 6P(Android 7.1.2)\r\n", "url": "https://github.com/facebook/fresco/issues/1872", "user": "thiross", "labels": ["bug"], "created": "2017-08-21 02:04:30", "closed": "2017-11-01 13:50:15", "commits": {}, "ttf": 72.00027777777778, "commitsDetails": []}, {"title": "How can i catch the exception \" Failed to pin Bitmap \"", "body": "I know this exception due to an invalid image.But I can't make sure the picture is valid before using Fresco to load the picture,\r\n\r\nWhen the picture goes wrong,I don't want to my app stoped because of the exception throw, I want my app to be continue.\r\n\r\nAlso, Fresco can configure failureImage and, as I understand, when the picture is invalid, Fresco can help me show failureImage instead of throwing a runtime exception.\r\n\r\nIf Fresco must throw the \"Failed to pin Bitmap\" exception, How can I catch it?\r\n\r\nHear is a stack trace for this exception:\r\n\r\n```java\r\nFatal Exception: java.lang.RuntimeException: Failed to pin Bitmap\r\n       at com.facebook.imagepipeline.nativecode.Bitmaps.nativePinBitmap(SourceFile)\r\n       at com.facebook.imagepipeline.nativecode.Bitmaps.pinBitmap(SourceFile:44)\r\n       at com.facebook.imagepipeline.platform.DalvikPurgeableDecoder.pinBitmap(SourceFile:155)\r\n       at com.facebook.imagepipeline.platform.KitKatPurgeableDecoder.pinBitmap(SourceFile:32)\r\n       at com.facebook.imagepipeline.platform.DalvikPurgeableDecoder.decodeJPEGFromEncodedImage(SourceFile:90)\r\n       at com.facebook.imagepipeline.platform.KitKatPurgeableDecoder.decodeJPEGFromEncodedImage(SourceFile:32)\r\n       at com.facebook.imagepipeline.bitmaps.HoneycombBitmapFactory.createBitmapInternal(SourceFile:65)\r\n       at com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(SourceFile:79)\r\n       at com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(SourceFile:46)\r\n       at com.facebook.fresco.animation.bitmap.preparation.DefaultBitmapFramePreparer$FrameDecodeRunnable.prepareFrameAndCache(SourceFile:146)\r\n       at com.facebook.fresco.animation.bitmap.preparation.DefaultBitmapFramePreparer$FrameDecodeRunnable.prepareFrameAndCache(SourceFile:164)\r\n       at com.facebook.fresco.animation.bitmap.preparation.DefaultBitmapFramePreparer$FrameDecodeRunnable.run(SourceFile:114)\r\n       at com.facebook.common.executors.ConstrainedExecutorService$Worker.run(SourceFile:178)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n       at com.facebook.imagepipeline.core.PriorityThreadFactory$1.run(SourceFile:43)\r\n       at java.lang.Thread.run(Thread.java:841)\r\n```", "url": "https://github.com/facebook/fresco/issues/1862", "user": "UFreedom", "labels": ["bug"], "created": "2017-08-10 12:27:25", "closed": "2018-01-16 15:55:31", "commits": {}, "ttf": 159.00027777777777, "commitsDetails": []}, {"title": "Android N with Fragment bug", "body": "Hi;\r\ndevice\uff1agoogle pixel Android 7.1 and hauwei mate9  Android 7.0\r\nFresco is not visible on Android N devices, using the fragment jump, Android N below is ok.\r\n\r\nTested the other library is ok .\r\n\r\ninitialization\uff0cone/two\uff1afresco  \uff0c Three four\uff1aGlide \r\n![init](https://user-images.githubusercontent.com/10434110/28601909-8fa560ea-71ed-11e7-8129-62187746681b.png)\r\n\r\nstart fragment:\r\n![load](https://user-images.githubusercontent.com/10434110/28601912-93c9c2d8-71ed-11e7-81ff-d10dd2174f54.png)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "url": "https://github.com/facebook/fresco/issues/1841", "user": "super-hu", "labels": ["bug"], "created": "2017-07-26 02:32:25", "closed": "2018-07-09 15:20:30", "commits": {}, "ttf": 348.0002777777778, "commitsDetails": []}, {"title": " I don't  kown how to do  for this issue??  Thanks  ", "body": "  java.io.IOException: Invalid marker: 89\r\n                                                                    at android.media.ExifInterface.getJpegAttributes(ExifInterface.java:1604)\r\n                                                                    at android.media.ExifInterface.loadAttributes(ExifInterface.java:1335)\r\n                                                                    at android.media.ExifInterface.<init>(ExifInterface.java:1053)\r\n                                                                    at com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getExifInterface(LocalExifThumbnailProducer.java:136)\r\n                                                                    at com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1.getResult(LocalExifThumbnailProducer.java:103)\r\n                                                                    at com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1.getResult(LocalExifThumbnailProducer.java:97)\r\n                                                                    at com.facebook.common.executors.StatefulRunnable.run(StatefulRunnable.java:45)\r\n                                                                    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n                                                                    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n                                                                    at java.lang.Thread.run(Thread.java:831)", "url": "https://github.com/facebook/fresco/issues/1760", "user": "Troll4it", "labels": ["bug", "duplicate"], "created": "2017-05-11 02:33:01", "closed": "2017-05-17 12:12:43", "commits": {"81334f10bbbd78cded8185ea1776cf1ae6930276": {"commitGHEventType": "referenced", "commitUser": "facebook-github-bot"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "81334f10bbbd78cded8185ea1776cf1ae6930276", "commitGHEventType": "referenced", "commitUser": "facebook-github-bot", "commitParents": ["4f3796b23f06202962f536387c1e86c68a941791"], "nameRev": "81334f10bbbd78cded8185ea1776cf1ae6930276 tags/v1.4.0~108", "commitMessage": "Catch exception when opening an ExifInterface for a non-jpeg\n\nSummary:\nFixes #1558 and #1760.\n\nWhen a local file is loaded an attempt is made to load the thumbnail from its exif data but that is only available for JPEGs.\n\nTrying the same with a PNG lead to an `IOException` which wasn't being caught within the producer. Catching it allows us to return null which is the appropriate thing to do if no thumbnail is available.\n\nReviewed By: erikandre\n\nDifferential Revision: D5077525\n\nfbshipit-source-id: fdfd8e0bc369e4672729c6e3bfde5b035f836149\n", "commitDateTime": "2017-05-17 03:47:33", "authoredDateTime": "2017-05-17 03:33:30", "commitGitStats": [{"filePath": "imagepipeline/src/main/java/com/facebook/imagepipeline/producers/LocalExifThumbnailProducer.java", "insertions": 8, "deletions": 4, "lines": 12}, {"filePath": "imagepipeline/src/test/java/com/facebook/imagepipeline/producers/LocalExifThumbnailProducerTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LocalExifThumbnailProducer.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getExifInterface(android.net.Uri)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "LocalExifThumbnailProducerTest.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.producers.LocalExifThumbnailProducerTest.TestLocalExifThumbnailProducer.getExifInterface(android.net.Uri)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Progress updates not working when using OKHttpClient with HttpLoggingInterceptor", "body": "### Description\r\n\r\nWhen using OKHttpClient with HttpLoggingInterceptor progressive loading doesn't seem to work. setProgress method is never called.\r\n\r\n### Reproduction\r\n\r\nHttpLoggingInterceptor interceptor = new HttpLoggingInterceptor();\r\ninterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);\r\n\r\n* Fresco version: 1.3.0\r\n* Platform version: can reproduce on 7.1.2 didn't test on other devices.\r\n", "url": "https://github.com/facebook/fresco/issues/1748", "user": "gbero", "labels": ["bug"], "created": "2017-05-03 09:03:36", "closed": "2017-05-04 16:10:20", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Compressed animated GIFs showed with white spots", "body": "### Description\r\nWhen I try to render any compressed gif (I suppose they were compressed with gifsicle or something similar), I have white spots all around the picture\r\n\r\n### Reproduction\r\nFor example this gif (you can try to split it with https://ezgif.com to see white spots)\r\nhttps://media.giphy.com/media/RHoRwhdlh6TBK/giphy.gif\r\n\r\n`\r\n        SimpleDraweeView myDraweeView\r\n                = (SimpleDraweeView)findViewById(R.id.my_drawee_view);\r\n\r\n        DraweeController controller =\r\n                Fresco.newDraweeControllerBuilder()\r\n                        .setUri(\"https://media.giphy.com/media/RHoRwhdlh6TBK/giphy.gif\\n\")\r\n                        .setAutoPlayAnimations(true)\r\n                        .build();\r\n\r\n        myDraweeView.setController(controller);\r\n`\r\n\r\n### Solution\r\nunknown\r\n\r\n### Additional Information\r\n\r\n* Fresco version: I tried 1.0.0-1.3.0\r\n* Platform version: Android\r\n\r\n![screenshot_2017-04-27-15-18-24](https://cloud.githubusercontent.com/assets/54374/25508641/5ce34b3e-2b68-11e7-8cf6-a4c59aa18322.png)\r\n\r\n", "url": "https://github.com/facebook/fresco/issues/1742", "user": "venik", "labels": ["bug"], "created": "2017-04-27 23:42:29", "closed": "2017-05-03 09:52:37", "commits": {"f7487d1153461e654695ef6d20c1295cfceaca69": {"commitGHEventType": "closed", "commitUser": "facebook-github-bot"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "f7487d1153461e654695ef6d20c1295cfceaca69", "commitGHEventType": "closed", "commitUser": "facebook-github-bot", "commitParents": ["acd108d5b6c509df79fd692464f714d766d428ad"], "nameRev": "f7487d1153461e654695ef6d20c1295cfceaca69 tags/v1.4.0~138", "commitMessage": "Fixed animated gif frame transpacency for multiple graphics control blocks\n\nSummary:\nAccording to the GIF standard there should only be one GCM block per frame, but in practice there seem to be some GIFs that have multiple.\nThis fixes incorrect transparency calculations for GIFs with multiple graphics control blocks for a frame.\nThe current version always took the first GCM block whereas all other implementations I've tested (e.g. Chrome) seem to use the last GCM block instead.\n\nSample GIF: https://media.giphy.com/media/RHoRwhdlh6TBK/giphy.gif\n\nFixes #1742\n\nReviewed By: lambdapioneer\n\nDifferential Revision: D4986365\n\nfbshipit-source-id: b1ddb90256dfdcd64b0ae4781439fca2460b1432\n", "commitDateTime": "2017-05-03 02:52:25", "authoredDateTime": "2017-05-03 02:42:19", "commitGitStats": [{"filePath": "animated-gif/src/main/jni/gifimage/gif.cpp", "insertions": 4, "deletions": 3, "lines": 7}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f7487d1153461e654695ef6d20c1295cfceaca69"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 3, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["animated-gif/src/main/jni/gifimage/gif.cpp"]}, {"title": "java.lang.RuntimeException: Canvas: trying to use a recycled bitmap android.graphics.Bitmap@2dad25ee", "body": "### Description\r\nThe BitmapPool log below:\r\n04-18 10:39:34.797 21848-21984/? V/unknown:BitmapPool: release (free) (object, size) = (37535584, 16384)\r\n04-18 10:39:34.797 21848-21984/? V/unknown:BitmapPool: Used = (256, 10787136); Free = (0, 0)\r\n04-18 10:39:34.797 21848-21977/? V/unknown:BitmapPool: Used = (257, 10803520); Free = (0, 0)\r\n04-18 10:39:34.797 21848-21977/? V/unknown:BitmapPool: get (alloc) (object, size) = (84036b7, 16384)\r\n04-18 10:39:34.797 21848-21977/? V/unknown:BitmapPool: release (free) (object, size) = (39308e33, 16384)\r\n04-18 10:39:34.797 21848-21977/? V/unknown:BitmapPool: Used = (256, 10787136); Free = (0, 0)\r\n04-18 10:39:34.807 21848-21982/? V/unknown:BitmapPool: Used = (257, 10803520); Free = (0, 0)\r\n04-18 10:39:34.807 21848-21982/? V/unknown:BitmapPool: get (alloc) (object, size) = (1bf43b42, 16384)\r\n04-18 10:39:34.807 21848-21982/? V/unknown:BitmapPool: release (free) (object, size) = (2dad25ee, 16384)\r\n04-18 10:39:34.807 21848-21982/? V/unknown:BitmapPool: Used = (256, 10787136); Free = (0, 0)\r\n04-18 10:39:34.807 21848-21975/? V/unknown:BitmapPool: Used = (257, 10803520); Free = (0, 0)\r\n04-18 10:39:34.807 21848-21975/? V/unknown:BitmapPool: get (alloc) (object, size) = (35708589, 16384)\r\n04-18 10:39:34.817 21848-21975/? V/unknown:BitmapPool: release (free) (object, size) = (afcb37f, 16384)\r\n04-18 10:39:34.817 21848-21975/? V/unknown:BitmapPool: Used = (256, 10787136); Free = (0, 0)\r\n04-18 10:39:34.817 21848-21976/? V/unknown:BitmapPool: Used = (257, 10803520); Free = (0, 0)\r\n04-18 10:39:34.817 21848-21976/? V/unknown:BitmapPool: get (alloc) (object, size) = (5882dbc, 16384)\r\n04-18 10:39:34.817 21848-21976/? V/unknown:BitmapPool: release (free) (object, size) = (1f80c125, 16384)\r\n04-18 10:39:34.817 21848-21976/? V/unknown:BitmapPool: Used = (256, 10787136); Free = (0, 0)\r\n\r\n\r\nThen there was a crash.This happens when I use ImagePipeline directly while repeating the same picture but rewriting the CacheKey in PostProcess for not allow it to use bitmap in memory. Because it can be reproduced this crash.The code is below:\r\n\r\n```\r\nimagePipeline.fetchDecodedImage(request, null);\r\n\r\n@Override\r\n            protected void onNewResultImpl(DataSource<CloseableReference<CloseableImage>> dataSource) {\r\n                if (!dataSource.isFinished()) {\r\n                    onFailureImpl(dataSource);\r\n                    return;\r\n                }\r\n\r\n                CloseableReference<CloseableImage> result = dataSource.getResult();\r\n                if (result != null) {\r\n                    listener.success(new FrescoBitmapWrapper(result));\r\n                    result.close();\r\n                }\r\n            }\r\n```\r\n\r\nHere i clone the result in FrescoBitmapWrapper's constructor.And then put the bitmap in the ImageView.\r\n\r\n### Additional Information\r\n* Fresco version: [1.0]\r\n* Platform version: [android 4.0,5.0,6.0]\r\n", "url": "https://github.com/facebook/fresco/issues/1726", "user": "minji19", "labels": ["bug", "needs-details"], "created": "2017-04-18 03:04:52", "closed": "2017-07-11 12:00:49", "commits": {}, "ttf": 84.00027777777778, "commitsDetails": []}, {"title": "Media variations not working if candidate not a jpeg image", "body": "Self-creating an issue to track this.\r\n\r\n@FtheGFW raised PR #1630 to fix this but it involved changes to the `ProgressiveJpegParser`. We shouldn't get into that class if we're not decoding a jpeg. This comes from the previous assumption that non-final images would always be progressive jpegs.", "url": "https://github.com/facebook/fresco/issues/1707", "user": "kirwan", "labels": ["bug"], "created": "2017-03-21 11:06:21", "closed": "2017-03-27 14:49:07", "commits": {"f0545aa3593500bfd11cc5f65a617304d7f8ff2a": {"commitGHEventType": "referenced", "commitUser": "facebook-github-bot"}, "427727cca0509592b56c467a388f7cfb535fc423": {"commitGHEventType": "closed", "commitUser": "facebook-github-bot"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "f0545aa3593500bfd11cc5f65a617304d7f8ff2a", "commitGHEventType": "referenced", "commitUser": "facebook-github-bot", "commitParents": ["676be098f0c925963c12aa2f7489a4b5f3ab25df"], "nameRev": "f0545aa3593500bfd11cc5f65a617304d7f8ff2a tags/v1.2.0~2", "commitMessage": "Add non-jpeg images to test with media variations\n\nSummary: Add a couple of non-jpeg images to the sample images used by the media variations sample. This will allow us to resolve GitHub issue #1707.\n\nReviewed By: lambdapioneer\n\nDifferential Revision: D4745550\n\nfbshipit-source-id: b23ca90f49c704740059fbd609d51d80448f7155\n", "commitDateTime": "2017-03-21 04:49:58", "authoredDateTime": "2017-03-21 04:44:15", "commitGitStats": [{"filePath": "docs/static/sample-images/monkey-selfie-s.webp", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "docs/static/sample-images/monkey-selfie-xs.png", "insertions": 0, "deletions": 0, "lines": 0}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "427727cca0509592b56c467a388f7cfb535fc423", "commitGHEventType": "closed", "commitUser": "facebook-github-bot", "commitParents": ["cd46d06ba1de9d444750e0715345c27a9fa4d898"], "nameRev": "427727cca0509592b56c467a388f7cfb535fc423 tags/v1.3.0~36", "commitMessage": "Fix media variations with non-jpeg images\n\nSummary:\nFixes #1707.\n\nStop non-jpegs being passed to the progressive decoder when non-final images are returned thanks to media variations.\n\nAlso added use of non-jpeg images to the media variations sample within the showcase app.\n\nReviewed By: oprisnik\n\nDifferential Revision: D4747947\n\nfbshipit-source-id: f0f35ea43c5c5460de14afff390fad7bd83c56d8\n", "commitDateTime": "2017-03-27 07:48:58", "authoredDateTime": "2017-03-27 07:47:53", "commitGitStats": [{"filePath": "imagepipeline/src/main/java/com/facebook/imagepipeline/producers/DecodeProducer.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "imagepipeline/src/test/java/com/facebook/imagepipeline/producers/DecodeProducerTest.java", "insertions": 15, "deletions": 16, "lines": 31}, {"filePath": "samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/imagepipeline/MediaVariationsFragment.java", "insertions": 9, "deletions": 9, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DecodeProducer.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.producers.DecodeProducer.NetworkImagesProgressiveDecoder.updateDecodeJob(com.facebook.imagepipeline.image.EncodedImage,boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "DecodeProducerTest.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.producers.DecodeProducerTest.mockEncodedImage(com.facebook.common.references.CloseableReference)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DecodeProducerTest.testNewResult_Intermediate_NonJPEG()", "TOT": 20, "UPD": 4, "INS": 6, "MOV": 4, "DEL": 6}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DecodeProducerTest.testNewResult_Intermediate_pJPEG()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DecodeProducerTest.setUp()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DecodeProducerTest.mockEncodedJpeg(com.facebook.common.references.CloseableReference)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MediaVariationsFragment.java", "spoonMethods": [{"spoonMethodName": "com.facebook.fresco.samples.showcase.imagepipeline.MediaVariationsFragment", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.fresco.samples.showcase.imagepipeline.MediaVariationsFragment.Size", "TOT": 7, "UPD": 5, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.fresco.samples.showcase.imagepipeline.MediaVariationsFragment.loadMainImage()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f0545aa3593500bfd11cc5f65a617304d7f8ff2a", "427727cca0509592b56c467a388f7cfb535fc423"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 12, "deletions": 10, "lines": 22, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 11.0, "UPD": 6.0, "INS": 4.0, "MOV": 1.0, "DEL": 0.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["samples/showcase/src/main/java/com/facebook/fresco/samples/showcase", "docs/static/sample-images/monkey-selfie-s.webp", "imagepipeline/src/main/java/com/facebook/imagepipeline/producers"], "changesInPackagesSPOON": ["com.facebook.imagepipeline.producers.DecodeProducer.NetworkImagesProgressiveDecoder.updateDecodeJob(com.facebook.imagepipeline.image.EncodedImage,boolean)", "com.facebook.fresco.samples.showcase.imagepipeline.MediaVariationsFragment.Size", "com.facebook.fresco.samples.showcase.imagepipeline.MediaVariationsFragment", "com.facebook.fresco.samples.showcase.imagepipeline.MediaVariationsFragment.loadMainImage()"]}, {"title": "App may crash when load gif", "body": "I think following code snippet in `gif.cpp` may cause crash when `pSavedImage->ImageDesc.Height` is 0.\r\n```c++\r\n// Check size of image.\r\nif (pSavedImage->ImageDesc.Width <= 0 &&\r\n    pSavedImage->ImageDesc.Height <= 0 &&\r\n    pSavedImage->ImageDesc.Width > (INT_MAX / pSavedImage->ImageDesc.Height)) {\r\n  return GIF_ERROR;\r\n}\r\n```", "url": "https://github.com/facebook/fresco/issues/1706", "user": "xjy2061", "labels": ["bug", "needs-details"], "created": "2017-03-20 11:47:23", "closed": "2017-05-06 04:52:56", "commits": {"bcbe1c57f2d95be6f3827bf5f5a5a38cea5fec12": {"commitGHEventType": "closed", "commitUser": "facebook-github-bot"}}, "ttf": 46.000277777777775, "commitsDetails": [{"commitHash": "bcbe1c57f2d95be6f3827bf5f5a5a38cea5fec12", "commitGHEventType": "closed", "commitUser": "facebook-github-bot", "commitParents": ["6ee00684cec93418c8b71e9285d30026c496d3cd"], "nameRev": "bcbe1c57f2d95be6f3827bf5f5a5a38cea5fec12 tags/v1.4.0~134", "commitMessage": "Don't crash for GIF frames with 0 width/height\n\nSummary:\nIf a GIF frame had a width and/or height of 0, Fresco crashes due to a division by 0.\nSample GIF that includes such frames: http://p1.music.126.net/35Y3orENEaclRSwHUFWr1Q==/18983068253562273.gif\n\nFixes #1706\n\nReviewed By: lambdapioneer\n\nDifferential Revision: D5010658\n\nfbshipit-source-id: d591b14f1e445b1080d7df558575e36d6a291eee\n", "commitDateTime": "2017-05-05 21:52:45", "authoredDateTime": "2017-05-05 15:55:58", "commitGitStats": [{"filePath": "animated-gif/src/main/jni/gifimage/gif.cpp", "insertions": 9, "deletions": 4, "lines": 13}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bcbe1c57f2d95be6f3827bf5f5a5a38cea5fec12"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 4, "lines": 13, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["animated-gif/src/main/jni/gifimage/gif.cpp"]}, {"title": "MediaVariations item never delete from database", "body": "It seems there is no code for deleting item from `media_variations_index` database, the database file size will bloat continuously, is that expected?\r\n", "url": "https://github.com/facebook/fresco/issues/1702", "user": "xjy2061", "labels": ["bug"], "created": "2017-03-16 10:12:11", "closed": "2018-07-13 13:55:22", "commits": {}, "ttf": 484.0002777777778, "commitsDetails": []}, {"title": "Dynamically link jpegturbo lib for reduce library size.", "body": "I've noticed native lib **jpegturbo** is both statically linked in bellowing module:\r\n\r\n- **imagepipeline** (See  [imagepipeline/Android.mk#L28](https://github.com/facebook/fresco/blob/master/imagepipeline/src/main/jni/imagepipeline/Android.mk#L28)) \r\n- **static-webp** (See [static-webp/Android.mk#L37](https://github.com/facebook/fresco/blob/master/static-webp/src/main/jni/static-webp/Android.mk#L37))\r\n\r\nIt's size is 165KB kb in armeabi-v7 and 409KB in x86 (so big!), would cause a lot of redundant apk size!\r\n\r\nSince every body who use **static-webp** library would and must already have  **imagepipeline** in their app, so I think we can do some trick:\r\n\r\n- make fb_jpegturbo as a shared library and dynamically link them in two modules;\r\n- after ndk-build success in **static-webp**, delete fb_jpegturbo.so in this module otherwise it would conflict with **imagepipeline**'s.\r\n\r\nIf this idea is accepted, I would give a PR in several days.\r\n", "url": "https://github.com/facebook/fresco/issues/1685", "user": "desmond1121", "labels": ["bug", "build", "enhancement"], "created": "2017-03-02 11:50:36", "closed": "2017-03-07 03:34:26", "commits": {"43c9f91ab0f96ea5004df8758bb979e9bf6ab6ac": {"commitGHEventType": "referenced", "commitUser": "facebook-github-bot"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "43c9f91ab0f96ea5004df8758bb979e9bf6ab6ac", "commitGHEventType": "referenced", "commitUser": "facebook-github-bot", "commitParents": ["6a3d87a44e7fbea56c76c61724178c2099d1f4af"], "nameRev": "43c9f91ab0f96ea5004df8758bb979e9bf6ab6ac tags/v1.2.0~24", "commitMessage": "Build jpegturbo as a shared library.\n\nSummary:\nLink jpegturbo as a shared library for reduce apk size.\n\nSee [#1865](https://github.com/facebook/fresco/issues/1685)\n\nAfter this work, if somebody use webp support, his so library would be (file size is measured in armeabi-v7a abi):\n\n- **libfb_jpegturbo.so** 165kb\n- **libimagepipeline.so** 26kb\n- **libstatic-webp.so** 290kb\n\nTotally: 481kb\n\nBefore (which would link jpegturbo as a static library):\n\n- **libimagepipeline.so** 230kb\n- **libstatic-webp.so** 362kb\n\nTotally: 592kb (So we reduce 117kb just in armeabi-v7 !)\n\nBut if someone only use imagepipeline (not use webp support), he would also have 39kb size reduce!\nCloses https://github.com/facebook/fresco/pull/1686\n\nReviewed By: kirwan\n\nDifferential Revision: D4658508\n\nPulled By: lambdapioneer\n\nfbshipit-source-id: d62028d799ddf6be13ac40e903a149d616192972\n", "commitDateTime": "2017-03-06 10:18:48", "authoredDateTime": "2017-03-06 10:05:47", "commitGitStats": [{"filePath": "imagepipeline/src/main/java/com/facebook/imagepipeline/nativecode/ImagePipelineNativeLoader.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "imagepipeline/src/main/jni/imagepipeline/Android.mk", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "imagepipeline/src/main/jni/third-party/libjpeg-turbo-1.5.x/Android.mk", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "static-webp/build.gradle", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "static-webp/src/main/jni/static-webp/Android.mk", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "static-webp/src/main/jni/third-party/libjpeg-turbo-1.5.x/Android.mk", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ImagePipelineNativeLoader.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.nativecode.ImagePipelineNativeLoader.load()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["43c9f91ab0f96ea5004df8758bb979e9bf6ab6ac"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 0, "lines": 5, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["static-webp", "imagepipeline/src/main/java/com/facebook/imagepipeline/nativecode"], "changesInPackagesSPOON": ["com.facebook.imagepipeline.nativecode.ImagePipelineNativeLoader.load()"]}, {"title": "Comparison demo crash when select Volley + network", "body": "### Description\r\n\r\n```\r\nE/AndroidRuntime: FATAL EXCEPTION: main\r\n    Process: com.facebook.samples.comparison, PID: 4529\r\n    java.util.ConcurrentModificationException\r\n       at java.util.HashMap$HashIterator.nextEntry(HashMap.java:851)\r\n       at java.util.HashMap$ValueIterator.next(HashMap.java:879)\r\n       at com.android.volley.toolbox.ImageLoader$4.run(ImageLoader.java:464)\r\n       at android.os.Handler.handleCallback(Handler.java:751)\r\n       at android.os.Handler.dispatchMessage(Handler.java:95)\r\n       at android.os.Looper.loop(Looper.java:154)\r\n       at android.app.ActivityThread.main(ActivityThread.java:6119)\r\n       at java.lang.reflect.Method.invoke(Native Method)\r\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:886)\r\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:776)\r\n```\r\n\r\n### Reproduction\r\n\r\nSelect Volley and Network in the Comparison demo application \r\n\r\n### Additional Information\r\n\r\n* Fresco version: 1.0.1\r\n* Platform version: 5.1 - Xiaomi Redmi Note 3, 7.0 - Android Emulator\r\n", "url": "https://github.com/facebook/fresco/issues/1664", "user": "hangduykhiem", "labels": ["bug", "starter-task"], "created": "2017-02-13 12:43:10", "closed": "2017-05-23 16:39:03", "commits": {"ad5793109bc6ab6aa6fa8df50e7e491e41a732b5": {"commitGHEventType": "referenced", "commitUser": "facebook-github-bot"}}, "ttf": 99.00027777777778, "commitsDetails": [{"commitHash": "ad5793109bc6ab6aa6fa8df50e7e491e41a732b5", "commitGHEventType": "referenced", "commitUser": "facebook-github-bot", "commitParents": ["c75654ca2f743f8c9c8690bcb6c322f304cfcc84"], "nameRev": "ad5793109bc6ab6aa6fa8df50e7e491e41a732b5 tags/v1.4.0~101", "commitMessage": "#1664: Prevent ConcurrentModificationException in Volley\n\nSummary:\nIssue:\nhttps://github.com/facebook/fresco/issues/1664\n\nIt's because that _Volley_ notifies `listeners` inside a `for-loop` uses `mBatchedResponses.values()` :\n```\nfor (BatchedImageRequest bir : mBatchedResponses.values()) {\n  ...\n  mListener.onResponse(...)\n}\n```\nAfter some methods calling inside the `onResponse`, finally, the `mBatchedResponses.remove` will be called.\n\nThe stacktrace will look like:\n```\ninoke mBatchedResponses.remove(mCacheKey)\nat com.android.volley.toolbox.ImageLoader$ImageContainer.cancelRequest(ImageLoader.java:365)\nat com.facebook.drawee.backends.volley.VolleyDataSource.close(VolleyDataSource.java:66)\nat com.facebook.datasource.BaseDataSubscriber.onNewResult(BaseDataSubscriber.java:51)\nat com.facebook.datasource.AbstractDataSource$1.run(AbstractDataSource.java:181)\nat com.facebook.common.executors.UiThreadImmediateExecutorService.execute(UiThreadImmediateExecutorService.java:40)\nat com.facebook.datasource.AbstractDataSource.notifyDataSubscriber\nat com.facebook.datasource.AbstractDataSource.notifyDataSubscribers(AbstractDataSource.java:163)\nat com.facebook.datasource.AbstractDataSource.setResult(AbstractDataSource.java:215)\nat com.facebook.drawee.backends.volley.VolleyDataSource$1.onResponse\nat com.android.volley.toolbox.ImageLoader$4.run(ImageLoader.java:474)\n```\nThanks for submitting a PR! Please read these instructions carefully:\n\n- [x] Explain the **motivation** for making this change.\n- [x] Provide a **test plan** demonstrating that the code is solid.\n- [x] Match the **code formatting** of the rest of the codebase.\n- [x] Target the `master` branch\n\nFix issue: https://github.com/facebook/fresco/issues/1664\n```\njava.util.ConcurrentModificationException\n  at java.util.HashMap$HashIterator.nextEntry(HashMap.java:851)\n  at java.util.HashMap$ValueIterator.next(HashMap.java:879)\n  at com.android.volley.toolbox.ImageLoader$4.run(ImageLoader.java:464)\n  at android.os.Handler.handleCallback(Handler.java:751)\n```\n\n![5 -19-2017 20-38-34](https://cloud.githubusercontent.com/assets/520786/26248050/424afdea-3cd3-11e7-815b-517a1e468069.gif)\n\nSign the [CLA][2], if you haven't already.\n\nSmall pull requests are much easier to review and more likely to get merged. Make sure the PR does only one thing, otherwise please split it.\n\nMake sure all **tests pass** on [Circle CI][4]. PRs that break tests are unlikely to be merged.\n\nFor more info, see the [Contributing guide][4].\n\n[1]: https://medium.com/martinkonicek/what-is-a-test-plan-8bfc840ec171#.y9lcuqqi9\n[2]: https://code.facebook.com/cla\n[3]: http://circleci.com/gh/facebook/fresco\n[4]: https://github.com/facebook/fresco/blob/master/CONTRIBUTING.md\nCloses https://github.com/facebook/fresco/pull/1775\n\nReviewed By: lambdapioneer\n\nDifferential Revision: D5095502\n\nPulled By: kirwan\n\nfbshipit-source-id: 1531afa7852313436c1cdc52ebc3507d67d35c86\n", "commitDateTime": "2017-05-22 09:47:38", "authoredDateTime": "2017-05-22 09:37:11", "commitGitStats": [{"filePath": "drawee-backends/drawee-volley/src/main/java/com/facebook/drawee/backends/volley/VolleyDataSource.java", "insertions": 12, "deletions": 1, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VolleyDataSource.java", "spoonMethods": [{"spoonMethodName": "com.facebook.drawee.backends.volley.VolleyDataSource.close()", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.facebook.drawee.backends.volley.VolleyDataSource", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ad5793109bc6ab6aa6fa8df50e7e491e41a732b5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 1, "lines": 13, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 2, "INS": 2, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["drawee-backends/drawee-volley/src/main/java/com/facebook/drawee/backends/volley"], "changesInPackagesSPOON": ["com.facebook.drawee.backends.volley.VolleyDataSource", "com.facebook.drawee.backends.volley.VolleyDataSource.close()"]}, {"title": "Crash in producers.LocalExifThumbnailProducer.getExifInterface", "body": "Hi, we got some crash report from our users\r\n\r\n```\r\nFatal Exception: java.lang.StackOverflowError: stack size 1036KB\r\n       at java.io.ByteArrayInputStream.read(ByteArrayInputStream.java:145)\r\n       at android.media.ExifInterface$ByteOrderAwarenessDataInputStream.readFully(ExifInterface.java:2353)\r\n       at android.media.ExifInterface.readImageFileDirectory(ExifInterface.java:2029)\r\n       at android.media.ExifInterface.readImageFileDirectory(ExifInterface.java:2019)\r\n       at android.media.ExifInterface.readImageFileDirectory(ExifInterface.java:2046)\r\n       at android.media.ExifInterface.readImageFileDirectory(ExifInterface.java:2019)\r\n       at android.media.ExifInterface.readImageFileDirectory(ExifInterface.java:2046)\r\n       at android.media.ExifInterface.readImageFileDirectory(ExifInterface.java:2019)\r\n       at android.media.ExifInterface.readImageFileDirectory(ExifInterface.java:2046)\r\n       at android.media.ExifInterface.readImageFileDirectory(ExifInterface.java:2019)\r\n       at android.media.ExifInterface.readImageFileDirectory(ExifInterface.java:2046)\r\n       at android.media.ExifInterface.readImageFileDirectory(ExifInterface.java:2019)\r\n       at android.media.ExifInterface.readImageFileDirectory(ExifInterface.java:2046)\r\n       at android.media.ExifInterface.readImageFileDirectory(ExifInterface.java:2019)\r\n       at android.media.ExifInterface.readImageFileDirectory(ExifInterface.java:2046)\r\n       at android.media.ExifInterface.readImageFileDirectory(ExifInterface.java:2019)\r\n       at android.media.ExifInterface.readImageFileDirectory(ExifInterface.java:2046)\r\n       at android.media.ExifInterface.readImageFileDirectory(ExifInterface.java:2019)\r\n       at android.media.ExifInterface.readImageFileDirectory(ExifInterface.java:2046)\r\n       at android.media.ExifInterface.readImageFileDirectory(ExifInterface.java:2019)\r\n       at android.media.ExifInterface.readImageFileDirectory(ExifInterface.java:2046)\r\n       at android.media.ExifInterface.readImageFileDirectory(ExifInterface.java:2019)\r\n       at android.media.ExifInterface.readImageFileDirectory(ExifInterface.java:2046)\r\n       at android.media.ExifInterface.readImageFileDirectory(ExifInterface.java:2019)\r\n       at android.media.ExifInterface.readExifSegment(ExifInterface.java:1868)\r\n       at android.media.ExifInterface.getJpegAttributes(ExifInterface.java:1667)\r\n       at android.media.ExifInterface.loadAttributes(ExifInterface.java:1334)\r\n       at android.media.ExifInterface.(ExifInterface.java:1052)\r\n       at com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getExifInterface(SourceFile:136)\r\n       at com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1.getResult(SourceFile:2103)\r\n       at com.facebook.common.executors.StatefulRunnable.run(SourceFile:45)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n       at java.lang.Thread.run(Thread.java:818)\r\n```", "url": "https://github.com/facebook/fresco/issues/1661", "user": "bluef", "labels": ["bug", "starter-task"], "created": "2017-02-10 08:22:02", "closed": "2017-11-02 10:27:02", "commits": {}, "ttf": 265.0002777777778, "commitsDetails": []}, {"title": "Crash for GIF with different frame sizes out of image boundaries", "body": "When I play a gif with the url \"http://stcbeta.zjol.com.cn/g1/M001C55CggRGlib1AqAeVBbAAAoz8pj_YU378.gif\"\r\nthere throw exception java.lang.IllegalStateException: Width or height is too small.\r\n\r\nlog:\r\n02-09 14:55:23.556 18793-20099/com.zhejiangdaily A/art: art/runtime/java_vm_ext.cc:410] JNI DETECTED ERROR IN APPLICATION: JNI MonitorEnter called with pending exception java.lang.IllegalStateException: Width or height is too small\r\n02-09 14:55:23.556 18793-20099/com.zhejiangdaily A/art: art/runtime/java_vm_ext.cc:410]   at void com.facebook.animated.gif.GifFrame.nativeRenderFrame(int, int, android.graphics.Bitmap) (GifFrame.java:-2)\r\n02-09 14:55:23.556 18793-20099/com.zhejiangdaily A/art: art/runtime/java_vm_ext.cc:410]   at void com.facebook.animated.gif.GifFrame.renderFrame(int, int, android.graphics.Bitmap) (GifFrame.java:52)\r\n02-09 14:55:23.556 18793-20099/com.zhejiangdaily A/art: art/runtime/java_vm_ext.cc:410]   at void com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendImpl.renderImageDoesNotSupportScaling(android.graphics.Canvas, com.facebook.imagepipeline.animated.base.AnimatedImageFrame) (AnimatedDrawableBackendImpl.java:223)\r\n02-09 14:55:23.556 18793-20099/com.zhejiangdaily A/art: art/runtime/java_vm_ext.cc:410]   at void com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendImpl.renderFrame(int, android.graphics.Canvas) (AnimatedDrawableBackendImpl.java:181)\r\n\r\nthe fresco version 1.0.1\r\nWhy does it happen and How can I fix this bug?\r\n", "url": "https://github.com/facebook/fresco/issues/1657", "user": "shidongdi", "labels": ["bug", "starter-task"], "created": "2017-02-09 07:20:59", "closed": "2017-10-25 14:48:48", "commits": {}, "ttf": 258.0002777777778, "commitsDetails": []}, {"title": "Can't handle MediaStore URI if no Storage Permission.", "body": " If Storage Permission is not granted, `fetchDecodedImage` in `ImagePipeline` fails when passed an `ImageRequest` with a MediaStore URI (e.g. `content://media/external/images/media/917`).\r\n\r\nError is `/storage/emulated/0/DCIM/Camera/20161128_142252.jpg: open failed: EACCES (Permission denied)`\r\n\r\nMy workaround was to convert the MediaStore Uri into a File Uri that is saved in the cache directory. The File Uri is then passed to Fresco.\r\n\r\n```\r\nif (UriUtil.isLocalCameraUri(uri)) {\r\n   uri = copyMediaStoreUriToCacheDir(uri, filename);\r\n}\r\n\r\n    Uri copyMediaStoreUriToCacheDir(Uri uri, String filename) {\r\n\r\n        String destinationFilename = App.getAppContext().getCacheDir().getAbsolutePath() + \"/\" + filename;\r\n\r\n        BufferedInputStream bis = null;\r\n        BufferedOutputStream bos = null;\r\n\r\n        try {\r\n            bis = new BufferedInputStream(App.getAppContext().getContentResolver().openInputStream(uri));\r\n            bos = new BufferedOutputStream(new FileOutputStream(destinationFilename, false));\r\n            byte[] buf = new byte[1024];\r\n            bis.read(buf);\r\n            do {\r\n                bos.write(buf);\r\n            } while (bis.read(buf) != -1);\r\n\r\n            return Uri.fromFile(new File(destinationFilename));\r\n        } catch (IOException e) {\r\n            //\r\n        } finally {\r\n            try {\r\n                if (bis != null) {\r\n                    bis.close();\r\n                }\r\n                if (bos != null) {\r\n                    bos.close();\r\n                }\r\n            } catch (IOException e) {\r\n                //\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n```", "url": "https://github.com/facebook/fresco/issues/1656", "user": "dannyroa", "labels": ["bug"], "created": "2017-02-08 19:12:12", "closed": "2018-01-19 11:55:42", "commits": {}, "ttf": 344.0002777777778, "commitsDetails": []}, {"title": "NullPointer on getHierarchy  on version 1.0.1", "body": "I have the following code \r\n\r\n\r\n```\r\nZoomableDraweeView image=(ZoomableDraweeView) v.findViewById(R.id.test);\r\n\r\n   image.setController( Fresco.newDraweeControllerBuilder()\r\n                .setUri(Uri.parse(\"https://img1.wsimg.com/fos/sales/cwh/8/images/cats-with-hats-shop-06.jpg\"))\r\n                .build());\r\n        GenericDraweeHierarchy hierarchy =\r\n                new GenericDraweeHierarchyBuilder(getActivity().getResources())\r\n                        .setActualImageScaleType(ScalingUtils.ScaleType.FIT_CENTER)\r\n                        .setProgressBarImage(new ProgressBarDrawable())\r\n                        .build();\r\n        image.setHierarchy(hierarchy);\r\n```\r\n\r\nand I am using this [ZoomableDraweeView](https://github.com/facebook/fresco/blob/master/samples/zoomable/src/main/java/com/facebook/samples/zoomable/ZoomableDraweeView.java)\r\n\r\nand I get \r\n\r\n> Caused by: java.lang.NullPointerException\r\n                                                       at com.facebook.common.internal.Preconditions.checkNotNull(Preconditions.java:210)\r\n                                                       at com.facebook.drawee.view.DraweeHolder.getHierarchy(DraweeHolder.java:257)\r\n                                                       at com.facebook.drawee.view.DraweeHolder.isControllerValid(DraweeHolder.java:321)\r\n                                                       at com.facebook.drawee.view.DraweeHolder.setHierarchy(DraweeHolder.java:240)\r\n                                                       at com.facebook.drawee.view.DraweeView.setHierarchy(DraweeView.java:90)\r\n                                                       at xxx.iku.fragments.MainFragment.onCreateView(MainFragment.java:126)\r\n                                                       at android.support.v4.app.Fragment.performCreateView(Fragment.java:2087)\r\n                                                       at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1113)\r\n                                                       at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1295)\r\n                                                       at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:801)\r\n                                                       at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1682)\r\n                                                       at android.support.v4.app.FragmentController.execPendingActions(FragmentController.java:388)\r\n                                                       at android.support.v4.app.FragmentActivity.onStart(FragmentActivity.java:607)\r\n                                                       at android.support.v7.app.AppCompatActivity.onStart(AppCompatActivity.java:181)\r\n                                                       at xxx.iku.activities.MainActivity.onStart(MainActivity.java:1740)\r\n                                                       at android.app.Instrumentation.callActivityOnStart(Instrumentation.java:1238)\r\n                                                       at android.app.Activity.performStart(Activity.java:6320)\r\n                                                       at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2386)\r\n                                                       at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2483)\u00a0\r\n                                                       at android.app.ActivityThread.access$900(ActivityThread.java:153)\u00a0\r\n                                                       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1349)\u00a0\r\n                                                       at android.os.Handler.dispatchMessage(Handler.java:102)\u00a0\r\n                                                       at android.os.Looper.loop(Looper.java:148)\u00a0\r\n                                                       at android.app.ActivityThread.main(ActivityThread.java:5441)\u00a0\r\n                                                       at java.lang.reflect.Method.invoke(Native Method)\u00a0\r\n                                                       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:738)\u00a0\r\n                                                       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:628)\u00a0\r\n\r\n\r\non version 1.0.0 works fine ", "url": "https://github.com/facebook/fresco/issues/1642", "user": "tzanou", "labels": ["bug"], "created": "2017-01-26 12:42:32", "closed": "2017-01-31 11:00:55", "commits": {"ac680571b4de16740bd4a4d33e857c6825257bfb": {"commitGHEventType": "referenced", "commitUser": "facebook-github-bot"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "ac680571b4de16740bd4a4d33e857c6825257bfb", "commitGHEventType": "referenced", "commitUser": "facebook-github-bot", "commitParents": ["c023888ca7807121fc1c721c427c3aa5fce1681b"], "nameRev": "ac680571b4de16740bd4a4d33e857c6825257bfb tags/v1.1.0~19", "commitMessage": "Fix DraweeHolder controller set before hierarchy\n\nSummary: Fixes issue #1642 where if a DraweeHolder's DraweeController is set before the DrawableHierarchy a precondition check failed.\n\nReviewed By: lambdapioneer\n\nDifferential Revision: D4474855\n\nfbshipit-source-id: 8bc8a7a1e062775c3c6745924374d7be06aa3a58\n", "commitDateTime": "2017-01-28 03:44:58", "authoredDateTime": "2017-01-28 03:34:47", "commitGitStats": [{"filePath": "drawee/src/main/java/com/facebook/drawee/view/DraweeHolder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "drawee/src/test/java/com/facebook/drawee/view/DraweeHolderTest.java", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DraweeHolder.java", "spoonMethods": [{"spoonMethodName": "com.facebook.drawee.view.DraweeHolder.isControllerValid()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DraweeHolderTest.java", "spoonMethods": [{"spoonMethodName": "com.facebook.drawee.view.DraweeHolderTest.testSetControllerBeforeHierarchy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ac680571b4de16740bd4a4d33e857c6825257bfb"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["drawee/src/main/java/com/facebook/drawee/view"], "changesInPackagesSPOON": ["com.facebook.drawee.view.DraweeHolder.isControllerValid()"]}, {"title": "SimpleDraweeSpanTextView does not resize when width is match_parent", "body": "When `SimpleDraweeSpanTextView`'s width is set to `match_parent` and a `DraweeSpan` is displayed which is larger than the view's height, going back to text does not resize the view.\r\n\r\nSee gif (pardon the horrendous compression):\r\n\r\n![output](https://cloud.githubusercontent.com/assets/8857134/22095144/4eb50b72-ddc7-11e6-9a64-6c93be074a2a.gif)\r\n\r\nHere is an example of offending code (just stuffed inside of an activity, nothing complicated, and don't forget to set the width to `match_parent` on the `SimpleDraweeSpanTextView`):\r\n\r\n<details>\r\n\r\n\r\n```\r\n        textView = (SimpleDraweeSpanTextView) findViewById(R.id.textview);\r\n        textButton = (Button) findViewById(R.id.text_button);\r\n        imageButton = (Button) findViewById(R.id.image_button);\r\n\r\n        textButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                final DraweeSpanStringBuilder builder = new DraweeSpanStringBuilder();\r\n                builder.append(\"hello\");\r\n                textView.setDraweeSpanStringBuilder(builder);\r\n            }\r\n        });\r\n\r\n        imageButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                final DraweeSpanStringBuilder builder = new DraweeSpanStringBuilder();\r\n                final int startIndex = builder.length();\r\n                builder.append(\"#\");\r\n\r\n                final DraweeController controller = Fresco.newDraweeControllerBuilder()\r\n                    .setUri(\"https://cdn.discordapp.com/emojis/232595451734392832.png\")\r\n                    .build();\r\n\r\n                final DraweeHierarchy draweeHierarchy = GenericDraweeHierarchyBuilder.newInstance(getResources())\r\n                    .setPlaceholderImage(new ColorDrawable(Color.TRANSPARENT))\r\n                    .build();\r\n\r\n                builder.setImageSpan(\r\n                    MainActivity.this,\r\n                    draweeHierarchy,\r\n                    controller,\r\n                    startIndex,\r\n                    builder.length() - 1,\r\n                    dpToPx(30),\r\n                    dpToPx(30),\r\n                    true,\r\n                    DraweeSpan.ALIGN_BASELINE);\r\n\r\n                textView.setDraweeSpanStringBuilder(builder);\r\n            }\r\n        });\r\n\r\n```\r\n\r\n</details>\r\n\r\n\r\nThis bug is reproducible with 100% consistency on a Samsung Duos (API level 19) and not reproducible on a Google Pixel (API level 25). It is encountered outside of contrived examples when `SimpleDraweeSpanTextView` is used in a `RecyclerView` to display text of varying lengths, with or without `DraweeSpans` inside of them. It does not matter what type of image it is or where it comes from (local vs. network).\r\n\r\nThere is a fix which involves changing the call to `setText` in `SimpleDraweeSpanTextView#setDraweeSpanStringBuilder` to explicitly specify `BufferType.SPANNABLE`, which should be a safe change to make but there may be some consequence I am overlooking.", "url": "https://github.com/facebook/fresco/issues/1633", "user": "AndyG", "labels": ["bug"], "created": "2017-01-19 05:59:06", "closed": "2017-01-19 12:41:22", "commits": {"6fe61d0bc349eac6971e6808714716a161b51e07": {"commitGHEventType": "referenced", "commitUser": "facebook-github-bot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "6fe61d0bc349eac6971e6808714716a161b51e07", "commitGHEventType": "referenced", "commitUser": "facebook-github-bot", "commitParents": ["39417a2b95ccaca1d75b11d9c51a4c73a12b65c4"], "nameRev": "6fe61d0bc349eac6971e6808714716a161b51e07 tags/v1.0.1~1", "commitMessage": "Use BufferType.SPANNABLE in setText of SimpleDraweeSpanStringBuilder\n\nSummary:\nExplicitly uses `BufferType.SPANNABLE` to let `SimpleDraweeSpanTextView` know that it might need to resize itself. See associated issue: https://github.com/facebook/fresco/issues/1633\n\nFeel free to suggest alternative solutions; I think this is safe to do and a cursory search didn't turn up anything better, but I suspect maintainers of `DraweeSpan` might know more about spans than I do!\nCloses https://github.com/facebook/fresco/pull/1634\n\nDifferential Revision: D4435370\n\nPulled By: oprisnik\n\nfbshipit-source-id: 09dcbc9a3360771a726cf283d9ff20da8b1d94f1\n", "commitDateTime": "2017-01-19 04:30:16", "authoredDateTime": "2017-01-19 04:20:17", "commitGitStats": [{"filePath": "drawee-span/src/main/java/com/facebook/drawee/span/SimpleDraweeSpanTextView.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SimpleDraweeSpanTextView.java", "spoonMethods": [{"spoonMethodName": "com.facebook.drawee.span.SimpleDraweeSpanTextView.setDraweeSpanStringBuilder(com.facebook.drawee.span.DraweeSpanStringBuilder)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6fe61d0bc349eac6971e6808714716a161b51e07"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["drawee-span/src/main/java/com/facebook/drawee/span"], "changesInPackagesSPOON": ["com.facebook.drawee.span.SimpleDraweeSpanTextView.setDraweeSpanStringBuilder(com.facebook.drawee.span.DraweeSpanStringBuilder)"]}, {"title": "Requested: Lcom/facebook/imagepipeline/nativecode/Bitmaps;.nativeCopyBitmap:(Landroid/graphics/Bitmap;ILandroid/graphics/Bitmap;II)V", "body": "4.4 system \u3002  cannoet load imag white  with log \r\nE/dalvikvm: ERROR: couldn't find native method\r\n\r\nRequested: Lcom/facebook/imagepipeline/nativecode/Bitmaps;.nativeCopyBitmap:(Landroid/graphics/Bitmap;ILandroid/graphics/Bitmap;II)V\r\n\r\n\r\nother system  can  use successful", "url": "https://github.com/facebook/fresco/issues/1627", "user": "836154942", "labels": ["bug", "needs-details"], "created": "2017-01-12 11:21:34", "closed": "2017-01-14 22:40:39", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "applicationContext.getFilesDir().getParent()  java.lang.NullPointerException", "body": "fresco 0.13, I got some crash message:,applicationContext.getFilesDir() return null?\r\n/com/facebook/cache/disk/DiskStorageCache.java  \r\n//TODO(t12287315): Remove the temp method for deleting created Preference in next release\r\n  private static void maybeDeleteSharedPreferencesFile(\r\n      Context context,\r\n      String directoryName) {\r\n    Context applicationContext = context.getApplicationContext();\r\n    String path =\r\n        applicationContext.getFilesDir().getParent() // java.lang.NullPointerException why??\r\n            + File.separator\r\n            + \"shared_prefs\"\r\n            + File.separator\r\n            + SHARED_PREFS_FILENAME_PREFIX\r\n            + directoryName;\r\n    File file = new File(path + \".xml\");\r\n    try {\r\n      if (file.exists()) {\r\n        file.delete();\r\n      }\r\n    } catch (Exception e) {\r\n      FLog.e(TAG, \"Fail to delete SharedPreference from file system. \");\r\n    }\r\n  }\r\n\r\njava.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.String java.io.File.getParent()' on a null object reference\r\n\tat com.facebook.cache.disk.DiskStorageCache.maybeDeleteSharedPreferencesFile(SourceFile:782)\r\n\tat com.facebook.cache.disk.DiskStorageCache.access$300(SourceFile:50)\r\n\tat com.facebook.cache.disk.DiskStorageCache$1.run(SourceFile:193)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n\tat java.lang.Thread.run(Thread.j", "url": "https://github.com/facebook/fresco/issues/1618", "user": "shenrh", "labels": ["bug"], "created": "2017-01-08 06:11:20", "closed": "2017-01-20 12:54:26", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "gif image play crash on x86 based device", "body": "When I load a gif image on my x86 device, the image can be displayed at first, but soon it will crash after a few loops, here is the crash backtrace:\r\n\r\n12-30 18:42:25.772 150-150/? I/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n12-30 18:42:25.772 150-150/? I/DEBUG: Build fingerprint: 'Lenovo/K900/K900:4.3/JSS15Q/VIBEROM_V1.0_1418_DEV_K900:user/releasekey'\r\n12-30 18:42:25.772 150-150/? I/DEBUG: Revision: '0'\r\n12-30 18:42:25.772 150-150/? I/DEBUG: pid: 4773, tid: 4823, name: Thread-5812  >>> com.facebook.samples.demo <<<\r\n12-30 18:42:25.772 150-150/? I/DEBUG: signal 11 (SIGSEGV), code 128 (SI_KERNEL), fault addr 00000000\r\n12-30 18:42:25.802 150-150/? I/DEBUG:     eax 60bbac80  ebx 6108ef24  ecx 00001002  edx 60f61a14\r\n12-30 18:42:25.802 150-150/? I/DEBUG:     esi 00000000  edi 00000000\r\n12-30 18:42:25.802 150-150/? I/DEBUG:     xcs 00000073  xds 0000007b  xes 0000007b  xfs 00000000  xss 0000007b\r\n12-30 18:42:25.802 150-150/? I/DEBUG:     eip 6106f8df  ebp 613ef154  esp 60f619cc  flags 00210206\r\n12-30 18:42:25.812 150-150/? I/DEBUG: backtrace:\r\n12-30 18:42:25.812 150-150/? I/DEBUG:     #00  pc 000058df  /data/app-lib/com.facebook.samples.demo-2/libgifimage.so\r\n12-30 18:42:25.812 150-150/? I/DEBUG:     #01  pc 00006f31  /data/app-lib/com.facebook.samples.demo-2/libgifimage.so\r\n12-30 18:42:25.812 150-150/? I/DEBUG:     #02  pc 00002c9b  /data/app-lib/com.facebook.samples.demo-2/libgifimage.so\r\n12-30 18:42:25.812 150-150/? I/DEBUG:     #03  pc 000049bd  /data/app-lib/com.facebook.samples.demo-2/libgifimage.so\r\n\r\nand this is the related code lines:\r\nLOADING-MC0:bin loading$ ./i686-linux-android-addr2line -e libgifimage.so 000058df 00006f31 00002c9b 000049bd\r\n/Users/loading/work/fresco/fresco-1.0.0/animated-gif/src/main/jni/../../../nativedeps/merge/giflib/dgif_lib.c:819\r\n/Users/loading/work/fresco/fresco-1.0.0/animated-gif/src/main/jni/../../../nativedeps/merge/giflib/dgif_lib.c:457\r\n/Users/loading/work/fresco/fresco-1.0.0/animated-gif/src/main/jni/gifimage/./gif.cpp:346\r\n/Users/loading/work/fresco/fresco-1.0.0/animated-gif/src/main/jni/gifimage/./gif.cpp:1106 (discriminator 2)\r\n\r\nbesides gif image, an animated webp image may also cause a similar crash, the image is from fresco sample demo, https://www.gstatic.com/webp/animated/1.webp, and the backtrace looks like this\uff1a\r\n12-30 18:44:11.012 150-150/? I/DEBUG: pid: 6445, tid: 6520, name: Thread-5908  >>> com.facebook.samples.demo <<<\r\n12-30 18:44:11.012 150-150/? I/DEBUG: signal 11 (SIGSEGV), code 128 (SI_KERNEL), fault addr 00000000\r\n12-30 18:44:11.042 150-150/? I/DEBUG:     eax 605482f0  ebx 63ef7ee0  ecx 00000000  edx 63ed2a20\r\n12-30 18:44:11.042 150-150/? I/DEBUG:     esi f3ffc000  edi 00000006\r\n12-30 18:44:11.042 150-150/? I/DEBUG:     xcs 00000073  xds 0000007b  xes 0000007b  xfs 00000000  xss 0000007b\r\n12-30 18:44:11.042 150-150/? I/DEBUG:     eip 63ec53f7  ebp 605492c0  esp 61ddd58c  flags 00210246\r\n12-30 18:44:11.052 150-150/? I/DEBUG: backtrace:\r\n12-30 18:44:11.052 150-150/? I/DEBUG:     #00  pc 000763f7  /data/app-lib/com.facebook.samples.demo-1/libstatic-webp.so\r\n12-30 18:44:11.052 150-150/? I/DEBUG:     #01  pc 0004c18e  /data/app-lib/com.facebook.samples.demo-1/libstatic-webp.so\r\n12-30 18:44:11.052 150-150/? I/DEBUG:     #02  pc 0004d17a  /data/app-lib/com.facebook.samples.demo-1/libstatic-webp.so\r\n12-30 18:44:11.052 150-150/? I/DEBUG:     #03  pc 00051a0b  /data/app-lib/com.facebook.samples.demo-1/libstatic-webp.so\r\n12-30 18:44:11.052 150-150/? I/DEBUG:     #04  pc 00043124  /data/app-lib/com.facebook.samples.demo-1/libstatic-webp.so\r\n12-30 18:44:11.052 150-150/? I/DEBUG:     #05  pc 000452d0  /data/app-lib/com.facebook.samples.demo-1/libstatic-webp.so\r\n12-30 18:44:11.052 150-150/? I/DEBUG:     #06  pc 000097e0  /data/app-lib/com.facebook.samples.demo-1/libstatic-webp.so\r\n\r\nLOADING-MC0:bin loading$ ./i686-linux-android-addr2line -e libstatic-webp.so 000763f7 0004c18e 0004d17a 00051a0b 00043124 000452d0 000097e0\r\n/Users/loading/Android/NDK/android-ndk-r12b/toolchains/x86-4.9/prebuilt/darwin-x86_64/lib/gcc/i686-linux-android/4.9.x/include/emmintrin.h:979\r\n/Users/loading/work/fresco/fresco-1.0.0/static-webp/src/main/jni/../../../nativedeps/merge/libwebp-0.5.1/src/dec/frame.c:47\r\n/Users/loading/work/fresco/fresco-1.0.0/static-webp/src/main/jni/../../../nativedeps/merge/libwebp-0.5.1/src/dec/frame.c:511\r\n/Users/loading/work/fresco/fresco-1.0.0/static-webp/src/main/jni/../../../nativedeps/merge/libwebp-0.5.1/src/dec/vp8.c:603\r\n/Users/loading/work/fresco/fresco-1.0.0/static-webp/src/main/jni/../../../nativedeps/merge/libwebp-0.5.1/src/dec/webp.c:488\r\n/Users/loading/work/fresco/fresco-1.0.0/static-webp/src/main/jni/../../../nativedeps/merge/libwebp-0.5.1/src/dec/webp.c:780\r\n/Users/loading/work/fresco/fresco-1.0.0/static-webp/src/main/jni/static-webp/./webp.cpp:656\r\n\r\n\r\nCan anyone help us? Many thanks for your kind help!\r\n", "url": "https://github.com/facebook/fresco/issues/1610", "user": "dwzzhw", "labels": ["bug", "needs-details"], "created": "2017-01-02 05:22:05", "closed": "2018-05-24 12:26:37", "commits": {}, "ttf": 507.0002777777778, "commitsDetails": []}, {"title": "Build fails with clang++: error: unknown argument: '-fno-weak'", "body": "From GCC documentation:\r\n\r\n-fno-weak\r\nDo not use weak symbol support, even if it is provided by the linker. By default, G++ uses weak symbols if they are available. This option exists only for testing, and should not be used by end-users; it results in inferior code and has no benefits. This option may be removed in a future release of G++.\r\n\r\nLet's not use it.", "url": "https://github.com/facebook/fresco/issues/1608", "user": "korDen", "labels": ["bug", "enhancement"], "created": "2016-12-30 01:48:14", "closed": "2017-07-14 10:53:39", "commits": {"9a75a448ea511aab907ac7d938cd5043c4ae45cf": {"commitGHEventType": "referenced", "commitUser": "facebook-github-bot"}}, "ttf": 196.00027777777777, "commitsDetails": [{"commitHash": "9a75a448ea511aab907ac7d938cd5043c4ae45cf", "commitGHEventType": "referenced", "commitUser": "facebook-github-bot", "commitParents": ["ad5793109bc6ab6aa6fa8df50e7e491e41a732b5"], "nameRev": "9a75a448ea511aab907ac7d938cd5043c4ae45cf tags/v1.4.0~100", "commitMessage": "#1608: Remove deprecated flag: -fno-weak in mk files.\n\nSummary:\nIssue#1608: Build fails with clang++: error: unknown argument: '-fno-weak'\nhttps://github.com/facebook/fresco/issues/1608\n\nSince NDK r13, GCC is no longer supported.\nhttps://github.com/android-ndk/ndk/wiki/Changelog-r13#announcements\n\nThanks for submitting a PR! Please read these instructions carefully:\n\n- [x] Explain the **motivation** for making this change.\n- [x] Provide a **test plan** demonstrating that the code is solid.\n- [x] Match the **code formatting** of the rest of the codebase.\n- [x] Target the `master` branch\n\nFix Issue#1608: Build fails with clang++: error: unknown argument: '-fno-weak'\n\nSign the [CLA][2], if you haven't already.\n\nSmall pull requests are much easier to review and more likely to get merged. Make sure the PR does only one thing, otherwise please split it.\n\nMake sure all **tests pass** on [Circle CI][4]. PRs that break tests are unlikely to be merged.\n\nFor more info, see the [Contributing guide][4].\n\n[1]: https://medium.com/martinkonicek/what-is-a-test-plan-8bfc840ec171#.y9lcuqqi9\n[2]: https://code.facebook.com/cla\n[3]: http://circleci.com/gh/facebook/fresco\n[4]: https://github.com/facebook/fresco/blob/master/CONTRIBUTING.md\nCloses https://github.com/facebook/fresco/pull/1776\n\nReviewed By: lambdapioneer\n\nDifferential Revision: D5095445\n\nPulled By: kirwan\n\nfbshipit-source-id: 83be6feec15a27bd8be5982d801ab0e9e63ff69c\n", "commitDateTime": "2017-05-23 01:16:31", "authoredDateTime": "2017-05-23 01:13:03", "commitGitStats": [{"filePath": "animated-gif/src/main/jni/Application.mk", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "imagepipeline/src/main/jni/Application.mk", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "static-webp/src/main/jni/Application.mk", "insertions": 0, "deletions": 3, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9a75a448ea511aab907ac7d938cd5043c4ae45cf"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Building URIs for local files manually is prone to errors", "body": "In different issues (e.g. https://github.com/facebook/fresco/issues/1589) we've seen that creating URIs for local files can be prone to errors. The main reason for this is that the `Uri.Builder()` and `Uri.fromFile(...)` methods encode certain characters such as spaces.\r\n\r\nWe should add a canonical way in `UriUtil` that provides a `Uri` for a given `File`. This would also include updating the samples and documentation.", "url": "https://github.com/facebook/fresco/issues/1596", "user": "lambdapioneer", "labels": ["bug", "starter-task"], "created": "2016-12-22 17:24:50", "closed": "2017-01-10 13:45:06", "commits": {"c6dcedcfbdd94ee26d2911bdfcef30f812551010": {"commitGHEventType": "closed", "commitUser": "facebook-github-bot"}}, "ttf": 18.00027777777778, "commitsDetails": [{"commitHash": "c6dcedcfbdd94ee26d2911bdfcef30f812551010", "commitGHEventType": "closed", "commitUser": "facebook-github-bot", "commitParents": ["1d4461d9afc549380cc1a9b7f58460e44a75f9f1"], "nameRev": "c6dcedcfbdd94ee26d2911bdfcef30f812551010 tags/v1.0.1~20", "commitMessage": "Provide canonical way to create ImageRequest for local files\n\nSummary:\nThis change adds a canonical method `ImageRequest#fromFile` in order to allow developers not having to care about the correct way to create URIs for local files.\n\nCloses #1596\n\nReviewed By: oprisnik\n\nDifferential Revision: D4386923\n\nfbshipit-source-id: e2edc8f31b7dd2ea7698a5b1bba9fcd47da67923\n", "commitDateTime": "2017-01-10 05:44:57", "authoredDateTime": "2017-01-10 05:36:38", "commitGitStats": [{"filePath": "fbcore/src/main/java/com/facebook/common/util/UriUtil.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "imagepipeline/src/main/java/com/facebook/imagepipeline/request/ImageRequest.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "imagepipeline/src/test/java/com/facebook/imagepipeline/request/ImageRequestTest.java", "insertions": 26, "deletions": 0, "lines": 26}], "commitSpoonAstDiffStats": [{"spoonFilePath": "UriUtil.java", "spoonMethods": [{"spoonMethodName": "com.facebook.common.util.UriUtil.getUriForFile(java.io.File)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ImageRequest.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.request.ImageRequest.fromFile(java.io.File)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ImageRequestTest.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.request.ImageRequestTest.testImageRequestForLocalFile_normal()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.request.ImageRequestTest.testImageRequestForLocalFile_withSpaces()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.request.ImageRequestTest.testImageRequestForLocalFile_withSpecialCharacters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c6dcedcfbdd94ee26d2911bdfcef30f812551010"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 17, "deletions": 0, "lines": 17, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["imagepipeline/src/main/java/com/facebook/imagepipeline/request", "fbcore/src/main/java/com/facebook/common/util"], "changesInPackagesSPOON": ["com.facebook.imagepipeline.request.ImageRequest.fromFile(java.io.File)", "com.facebook.common.util.UriUtil.getUriForFile(java.io.File)"]}, {"title": "AnimatedZoomableController->setTransformAnimated does nothing", "body": "In zoomable sample this method does nothing. Only setTransformImmediate works. Please fix.", "url": "https://github.com/facebook/fresco/issues/1565", "user": "karaarda", "labels": ["bug", "starter-task"], "created": "2016-12-04 13:26:05", "closed": "2016-12-13 11:46:56", "commits": {"63092467b90a8bb16c8b96c38c3d53d5df215c09": {"commitGHEventType": "referenced", "commitUser": "facebook-github-bot"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "63092467b90a8bb16c8b96c38c3d53d5df215c09", "commitGHEventType": "referenced", "commitUser": "facebook-github-bot", "commitParents": ["c9aa0f3c05a682b77c22fb88fc4bf4c297357134"], "nameRev": "63092467b90a8bb16c8b96c38c3d53d5df215c09 tags/v1.0.1~52", "commitMessage": "add double tap to zoom to zoomableapp sample\n\nSummary:\nPeople get this wrong sometimes, provide an example gesture listener for double tap & double-tap-and-scroll zooming. Use it in the sample app.\n\nSee:\n\n* https://github.com/facebook/fresco/pull/1382\n* https://github.com/facebook/fresco/issues/1565\n\nReviewed By: massimocarli\n\nDifferential Revision: D4326479\n\nfbshipit-source-id: d964bf946e971276128e5018e1a738ffb3217225\n", "commitDateTime": "2016-12-16 04:30:00", "authoredDateTime": "2016-12-16 04:17:16", "commitGitStats": [{"filePath": "samples/zoomable/src/main/java/com/facebook/samples/zoomable/DoubleTapGestureListener.java", "insertions": 99, "deletions": 0, "lines": 99}, {"filePath": "samples/zoomableapp/src/main/java/com/facebook/samples/zoomableapp/MyPagerAdapter.java", "insertions": 4, "deletions": 13, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DoubleTapGestureListener.java", "spoonMethods": [{"spoonMethodName": "com.facebook.samples.zoomable.DoubleTapGestureListener", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MyPagerAdapter.java", "spoonMethods": [{"spoonMethodName": "com.facebook.samples.zoomableapp.MyPagerAdapter.instantiateItem(android.view.ViewGroup,int)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.facebook.samples.zoomableapp.MyPagerAdapter.createTapListener(int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["63092467b90a8bb16c8b96c38c3d53d5df215c09"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 103, "deletions": 13, "lines": 116, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 6, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["samples/zoomableapp/src/main/java/com/facebook/samples/zoomableapp", "samples/zoomable/src/main/java/com/facebook/samples/zoomable"], "changesInPackagesSPOON": ["com.facebook.samples.zoomableapp.MyPagerAdapter.createTapListener(int)", "com.facebook.samples.zoomable.DoubleTapGestureListener", "com.facebook.samples.zoomableapp.MyPagerAdapter.instantiateItem(android.view.ViewGroup,int)"]}, {"title": "ExifInterface: Invalid image.", "body": "11-29 14:38:58.418 27599-27644/? W/ExifInterface: Invalid image.\r\n                                                  java.io.IOException: Invalid marker: 89\r\n                                                      at android.media.ExifInterface.getJpegAttributes(ExifInterface.java:1612)\r\n                                                      at android.media.ExifInterface.loadAttributes(ExifInterface.java:1335)\r\n                                                      at android.media.ExifInterface.<init>(ExifInterface.java:1053)\r\n                                                      at com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getExifInterface(LocalExifThumbnailProducer.java:136)\r\n                                                      at com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1.getResult(LocalExifThumbnailProducer.java:103)\r\n                                                      at com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1.getResult(LocalExifThumbnailProducer.java:97)\r\n                                                      at com.facebook.common.executors.StatefulRunnable.run(StatefulRunnable.java:45)\r\n                                                      at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n                                                      at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n                                                      at java.lang.Thread.run(Thread.java:818)", "url": "https://github.com/facebook/fresco/issues/1558", "user": "hpdx", "labels": ["bug"], "created": "2016-11-29 06:46:04", "closed": "2017-05-17 10:47:43", "commits": {"81334f10bbbd78cded8185ea1776cf1ae6930276": {"commitGHEventType": "closed", "commitUser": "facebook-github-bot"}}, "ttf": 169.00027777777777, "commitsDetails": [{"commitHash": "81334f10bbbd78cded8185ea1776cf1ae6930276", "commitGHEventType": "closed", "commitUser": "facebook-github-bot", "commitParents": ["4f3796b23f06202962f536387c1e86c68a941791"], "nameRev": "81334f10bbbd78cded8185ea1776cf1ae6930276 tags/v1.4.0~108", "commitMessage": "Catch exception when opening an ExifInterface for a non-jpeg\n\nSummary:\nFixes #1558 and #1760.\n\nWhen a local file is loaded an attempt is made to load the thumbnail from its exif data but that is only available for JPEGs.\n\nTrying the same with a PNG lead to an `IOException` which wasn't being caught within the producer. Catching it allows us to return null which is the appropriate thing to do if no thumbnail is available.\n\nReviewed By: erikandre\n\nDifferential Revision: D5077525\n\nfbshipit-source-id: fdfd8e0bc369e4672729c6e3bfde5b035f836149\n", "commitDateTime": "2017-05-17 03:47:33", "authoredDateTime": "2017-05-17 03:33:30", "commitGitStats": [{"filePath": "imagepipeline/src/main/java/com/facebook/imagepipeline/producers/LocalExifThumbnailProducer.java", "insertions": 8, "deletions": 4, "lines": 12}, {"filePath": "imagepipeline/src/test/java/com/facebook/imagepipeline/producers/LocalExifThumbnailProducerTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LocalExifThumbnailProducer.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getExifInterface(android.net.Uri)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "LocalExifThumbnailProducerTest.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.producers.LocalExifThumbnailProducerTest.TestLocalExifThumbnailProducer.getExifInterface(android.net.Uri)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Disabling downsampling for a single request", "body": "In general I want to use downsampling but would like to disable it for a single request where I am getting an image strip that is considerably larger than allowed to render on Android. For example, the image is 40x4000 (100 frames). I'm processing the image creating an animated drawable from the 100 frames which are then rendered in sequence at 40x40. If I enable downsampling I get a 20x2000 image :( Is there any way to explicitly disable downsampling for a particular image request? I tried setting resize options but it didn't seem to help, probably because it isn't a jpg file.", "url": "https://github.com/facebook/fresco/issues/1548", "user": "rpatton", "labels": ["bug", "starter-task"], "created": "2016-11-19 01:26:48", "closed": "2016-12-14 10:37:39", "commits": {}, "ttf": 25.00027777777778, "commitsDetails": []}, {"title": "java.lang.UnsatisfiedLinkError: dlopen failed.", "body": "Recently, we've encountered several strange problems in `System.loadLibrary()`, it crashed in `dlopen` with several different msg, they are:\r\n\r\n1. Bad file number\r\n\r\n```\r\njava.lang.UnsatisfiedLinkError\r\ndlopen failed: \"/data/app-lib/tv.danmaku.bili-2/libimagepipeline.so\" phdr mmap failed: Bad file number\r\n```\r\n\r\n2. Has no loadable segemnts\r\n\r\n```\r\njava.lang.UnsatisfiedLinkError\r\ndlopen failed: \"/data/app-lib/tv.danmaku.bili-1/libimagepipeline.so\" has no loadable segments\r\n```\r\n\r\n3. Invalid argument\r\n\r\n```\r\njava.lang.UnsatisfiedLinkError\r\nCannot load library: load_library(linker.cpp:785): can't load program header table: /data/app-lib/tv.danmaku.bili-2/libimagepipeline.so: Invalid argument\r\n```\r\n\r\n4. Bad ELF magic\r\n\r\n```\r\njava.lang.UnsatisfiedLinkError\r\ndlopen failed: \"/data/app/tv.danmaku.bili-1/lib/arm/libimagepipeline.so\" has bad ELF magic\r\n```\r\n\r\n\r\nWe have many other native lib but the problem seems only occur in Fresco's so(It seems only happend in `libimagepipeline.so` and `libmemtrunk.so`). It cannot be reproduced and we know the crash in our crash system.\r\n\r\n===\r\n**Fresco version**: 0.11.0\r\n**Android system distribution**:\r\n4.4.4(API 19) => 39.85%\r\n4.3(API 18) => 19.13%\r\n4.4.2(API 19) => 11.99%\r\n5.1.1(API 22) => 11.06%\r\n4.2.2(API 17) => 6.49%\r\n**Manufacturer**:\r\nMost in XIAOMI and VIVO", "url": "https://github.com/facebook/fresco/issues/1547", "user": "desmond1121", "labels": ["bug", "needs-details"], "created": "2016-11-18 09:20:31", "closed": "2018-01-18 11:57:46", "commits": {}, "ttf": 426.0002777777778, "commitsDetails": []}, {"title": " java.lang.NoSuchMethodError: android.os.StatFs.getBlockSizeLong in Android 4.3 operating system oppo brand mobile phone", "body": "fresco 0.14.1:in Android 4.3 operating system oppo brand mobile phone\r\njava.lang.NoSuchMethodError: android.os.StatFs.getBlockSizeLong\r\nat com.facebook.common.statfs.StatFsHelper.getAvailableStorageSpace(StatFsHelper.java:137)\r\nat com.facebook.common.statfs.StatFsHelper.testLowDiskSpace(StatFsHelper.java:114)\r\nat com.facebook.cache.disk.DiskStorageCache.updateFileCacheSizeLimit(DiskStorageCache.java:584)\r\nat com.facebook.cache.disk.DiskStorageCache.maybeEvictFilesInCacheDir(DiskStorageCache.java:485)\r\nat com.facebook.cache.disk.DiskStorageCache.startInsert(DiskStorageCache.java:342)\r\nat com.facebook.cache.disk.DiskStorageCache.insert(DiskStorageCache.java:377)\r\nat com.facebook.imagepipeline.cache.BufferedDiskCache.writeToDiskCache(BufferedDiskCache.java:364)\r\nat com.facebook.imagepipeline.cache.BufferedDiskCache.access$500(BufferedDiskCache.java:38)\r\nat com.facebook.imagepipeline.cache.BufferedDiskCache$3.run(BufferedDiskCache.java:243)\r\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)\r\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)\r\nat java.lang.Thread.run(Thread.java:838)", "url": "https://github.com/facebook/fresco/issues/1539", "user": "xiaoyao27610", "labels": ["bug", "needs-details"], "created": "2016-11-15 06:50:01", "closed": "2017-04-24 14:39:38", "commits": {}, "ttf": 160.00027777777777, "commitsDetails": []}, {"title": "ImageInfo Incorrect for Rotated Images", "body": "When auto-rotate is enabled, it seems that the `ImageInfo` returned in the `ControllerListener.onFinalImageSet` is wrong for images that were rotated.\r\n\r\nNamely if I have a 50x100 image with rotation 90, Fresco will auto-rotate this as 100x50 and display the image as wide, but the ImageInfo will report the image as having 50x100.\r\n\r\n```\r\n        ControllerListener<ImageInfo> listener = new BaseControllerListener<ImageInfo>() {\r\n            @Override\r\n            public void onFinalImageSet(String id, @Nullable ImageInfo imageInfo, @Nullable Animatable animatable) {\r\n                int width = imageInfo.getWidth(); // Reports 50\r\n                int height = imageInfo.getHeight(); // Reports 100\r\n            }\r\n        };\r\n\r\n        DraweeController controller = Fresco.newDraweeControllerBuilder()\r\n                .setUri(uri)\r\n                .setControllerListener(listener)\r\n                .build();\r\n        draweeView.setController(controller);\r\n\r\n```\r\n\r\nIs this intended? If it is, is there a way to detect if a rotation occurred? \r\n\r\nI am trying to have images loaded in that are full width but variable height with the image's intended aspect ratio as described in this [SO post](http://stackoverflow.com/questions/33955510/facebook-fresco-using-wrap-conent/34075281#34075281).", "url": "https://github.com/facebook/fresco/issues/1536", "user": "sushiisumii", "labels": ["bug"], "created": "2016-11-10 01:20:06", "closed": "2016-12-12 18:15:05", "commits": {"04a29969bafb86ec73d949d558eaa61d650827f6": {"commitGHEventType": "closed", "commitUser": "facebook-github-bot"}}, "ttf": 32.000277777777775, "commitsDetails": [{"commitHash": "04a29969bafb86ec73d949d558eaa61d650827f6", "commitGHEventType": "closed", "commitUser": "facebook-github-bot", "commitParents": ["5a2d5cf41d51c91916f013c93f3a655a6f76f79f"], "nameRev": "04a29969bafb86ec73d949d558eaa61d650827f6 tags/v1.0.0~42", "commitMessage": "Fix CloseableStaticBitmap dimensions for images to be rotated\n\nSummary:\nSwaps the width/height in CloseableStaticBitmap is the image should be rotated so that they match the size as the image is seen rather than as the bitmap data is stored.\n\nThis fixes #1536.\n\nReviewed By: oprisnik\n\nDifferential Revision: D4313347\n\nfbshipit-source-id: 71f8f9171f1939375009c06810c6d296c0e169c6\n", "commitDateTime": "2016-12-12 10:14:56", "authoredDateTime": "2016-12-12 10:11:05", "commitGitStats": [{"filePath": "imagepipeline-base/src/main/java/com/facebook/imagepipeline/image/CloseableStaticBitmap.java", "insertions": 16, "deletions": 3, "lines": 19}, {"filePath": "imagepipeline-base/src/test/java/com/facebook/imagepipeline/image/CloseableStaticBitmapTest.java", "insertions": 27, "deletions": 5, "lines": 32}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CloseableStaticBitmap.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.image.CloseableStaticBitmap.getWidth()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.image.CloseableStaticBitmap.getHeight()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "CloseableStaticBitmapTest.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.image.CloseableStaticBitmapTest.testConvert()", "TOT": 8, "UPD": 1, "INS": 2, "MOV": 4, "DEL": 1}, {"spoonMethodName": "com.facebook.imagepipeline.image.CloseableStaticBitmapTest.testClose()", "TOT": 6, "UPD": 2, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.image.CloseableStaticBitmapTest.setUp()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.facebook.imagepipeline.image.CloseableStaticBitmapTest", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.image.CloseableStaticBitmapTest.testWidthAndHeight()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.image.CloseableStaticBitmapTest.testWidthAndHeightWithRotatedImage()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["04a29969bafb86ec73d949d558eaa61d650827f6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 16, "deletions": 3, "lines": 19, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8, "UPD": 2, "INS": 2, "MOV": 4, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["imagepipeline-base/src/main/java/com/facebook/imagepipeline/image"], "changesInPackagesSPOON": ["com.facebook.imagepipeline.image.CloseableStaticBitmap.getHeight()", "com.facebook.imagepipeline.image.CloseableStaticBitmap.getWidth()"]}, {"title": "the image has rough edge ", "body": "   <com.facebook.drawee.view.SimpleDraweeView\r\n        android:id=\"@+id/imageview_user_header_image\"\r\n        android:layout_width=\"100dp\"\r\n        android:layout_height=\"100dp\"\r\n        android:layout_below=\"@+id/imageview_user_skin\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_marginLeft=\"15dp\"\r\n        android:layout_marginTop=\"-50dp\"\r\n        fresco:placeholderImage=\"@mipmap/ico_peron_non\"\r\n        fresco:roundWithOverlayColor=\"@color/white\"\r\n        fresco:roundedCornerRadius=\"5dp\"\r\n        fresco:roundingBorderColor=\"@color/white\"\r\n        fresco:roundingBorderWidth=\"3dp\" />\r\n\r\n\r\n\r\n![qq 20161101190205](https://cloud.githubusercontent.com/assets/7720072/19887920/68ef306a-a066-11e6-89d7-6baba5b8ec2a.png)\r\n", "url": "https://github.com/facebook/fresco/issues/1525", "user": "sungerk", "labels": ["bug", "duplicate"], "created": "2016-11-01 11:06:18", "closed": "2016-11-02 03:39:02", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "I have a problem about loading GIF.The url is http://image.zzd.sm.cn/1721434009114212362.gif?id=0", "body": "I have a problem about loading GIF.The url is http://image.zzd.sm.cn/1721434009114212362.gif?id=0.\r\nFresco loaded success,but can't play it .This problem is just for the specific url.", "url": "https://github.com/facebook/fresco/issues/1524", "user": "yangbo637829", "labels": ["bug"], "created": "2016-11-01 09:24:37", "closed": "2016-12-14 15:09:50", "commits": {"5ae014e00f571980c661ad553a853755d2ed37ce": {"commitGHEventType": "referenced", "commitUser": "facebook-github-bot"}}, "ttf": 43.000277777777775, "commitsDetails": [{"commitHash": "5ae014e00f571980c661ad553a853755d2ed37ce", "commitGHEventType": "referenced", "commitUser": "facebook-github-bot", "commitParents": ["5f556e1aa5f74d137c6dcb563a46179532a7f6bf"], "nameRev": "5ae014e00f571980c661ad553a853755d2ed37ce tags/v1.0.0~20", "commitMessage": "always use animated decoder for gifs\n\nSummary:\nTurns out the naive implementation in GifFormatChecker does not cover all cases. For example, this gif doesn't have the graphic control extension header for frames: {F65219848}. This makes us decode it as a static bitmap, showing only the first frame. After long and arduous conversations with oprisnik, we've reached the conclusion that the best thing to do is to simply always use the animated decoder (which correctly decodes the frames, in spite of the missing header).\n\nThis has the drawback of making all GIFs skip memory cache. However, oprisnik's new animation framework should fix that.\n\nThis has been raised here: https://github.com/facebook/fresco/issues/1524\n\nReviewed By: kirwan\n\nDifferential Revision: D4321492\n\nfbshipit-source-id: f680c7111d21f44a3901f00749298f0c30b3153d\n", "commitDateTime": "2016-12-14 04:00:00", "authoredDateTime": "2016-12-14 03:54:07", "commitGitStats": [{"filePath": "imagepipeline-base/src/main/java/com/facebook/imageformat/GifFormatChecker.java", "insertions": 0, "deletions": 104, "lines": 104}, {"filePath": "imagepipeline-base/src/test/java/com/facebook/imageformat/GifFormatCheckerTest.java", "insertions": 0, "deletions": 97, "lines": 97}, {"filePath": "imagepipeline/src/main/java/com/facebook/imagepipeline/decoder/DefaultImageDecoder.java", "insertions": 6, "deletions": 8, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GifFormatChecker.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imageformat.GifFormatChecker", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "GifFormatCheckerTest.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imageformat.GifFormatCheckerTest", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DefaultImageDecoder.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.decoder.DefaultImageDecoder.decodeGif(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.ImageDecodeOptions)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5ae014e00f571980c661ad553a853755d2ed37ce"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 112, "lines": 118, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["imagepipeline-base/src/main/java/com/facebook/imageformat", "imagepipeline/src/main/java/com/facebook/imagepipeline/decoder"], "changesInPackagesSPOON": ["com.facebook.imageformat.GifFormatChecker", "com.facebook.imagepipeline.decoder.DefaultImageDecoder.decodeGif(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.ImageDecodeOptions)"]}, {"title": "hierarchy.setPlaceholderImage(null) not working since 0.14", "body": "Hello!\r\nAt first I have only low resolution image and loading it with my placeholder drawable\r\n```\r\nhierarchy.setPlaceholderImage(photoLoadingDrawable);\r\nimageView.setImageURI(lowResUrl);\r\n```\r\nNext, I fetch high resolution image url from API and if low resolution image is already in cache, I show low resolution image as a preview while high resolution image is loading. There placeholder is set to null and low resolution image is acting as a placeholder.\r\n```\r\nhierarchy.setPlaceholderImage(null);\r\nDraweeController controller = Fresco.newDraweeControllerBuilder()\r\n\t\t.setLowResImageRequest(ImageRequest.fromUri(lowResUrl))\r\n\t\t.setImageRequest(ImageRequest.fromUri(highResUrl))\r\n\t\t.setOldController(imageView.getController())\r\n\t\t.build();\r\nimageView.setController(controller);\r\n```\r\n\r\nWhen I upgrade from 0.13 to 0.14 (both 0.14.0 and 0.14.1) this solution breaks. I see low resolution image first, then when I get high resolution image url I see placeholder and then high res image. ", "url": "https://github.com/facebook/fresco/issues/1523", "user": "ekzee", "labels": ["bug"], "created": "2016-11-01 08:29:49", "closed": "2016-12-14 11:39:36", "commits": {}, "ttf": 43.000277777777775, "commitsDetails": []}, {"title": "Race-condition leads to OutOfBounds in ForwardingControllerListener", "body": "Hello. I'm getting a strange crash when loading a simple local gif.\r\n\r\n10-18 18:00:57.522 8284-8284/com.goodrun.android.debug D/AndroidRuntime: Shutting down VM\r\n\r\n```\r\nFATAL EXCEPTION: main\r\n Process: com.goodrun.android.debug, PID: 8284\r\n java.lang.IndexOutOfBoundsException: Invalid index 1, size is 1\r\n     at java.util.ArrayList.throwIndexOutOfBoundsException(ArrayList.java:255)\r\n     at java.util.ArrayList.get(ArrayList.java:308)\r\n     at com.facebook.drawee.controller.ForwardingControllerListener.onFinalImageSet(ForwardingControllerListener.java:91)\r\n     at com.facebook.drawee.controller.AbstractDraweeController.onNewResultInternal(AbstractDraweeController.java:524)\r\n     at com.facebook.drawee.controller.AbstractDraweeController.access$000(AbstractDraweeController.java:47)\r\n     at com.facebook.drawee.controller.AbstractDraweeController$1.onNewResultImpl(AbstractDraweeController.java:469)\r\n     at com.facebook.datasource.BaseDataSubscriber.onNewResult(BaseDataSubscriber.java:48)\r\n     at com.facebook.datasource.AbstractDataSource$1.run(AbstractDataSource.java:181)\r\n     at android.os.Handler.handleCallback(Handler.java:739)\r\n     at android.os.Handler.dispatchMessage(Handler.java:95)\r\n     at android.os.Looper.loop(Looper.java:148)\r\n     at android.app.ActivityThread.main(ActivityThread.java:5417)\r\n     at java.lang.reflect.Method.invoke(Native Method)\r\n     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)\r\n     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)\r\n```", "url": "https://github.com/facebook/fresco/issues/1504", "user": "ffelini", "labels": ["bug"], "created": "2016-10-18 15:43:50", "closed": "2016-12-14 15:12:47", "commits": {"0a140fc368830c5c978eb3c1b18e3c18b5b650b8": {"commitGHEventType": "referenced", "commitUser": "facebook-github-bot"}}, "ttf": 56.000277777777775, "commitsDetails": [{"commitHash": "0a140fc368830c5c978eb3c1b18e3c18b5b650b8", "commitGHEventType": "referenced", "commitUser": "facebook-github-bot", "commitParents": ["11d01363746baf593d0e123d758a1f5c82a6db14"], "nameRev": "0a140fc368830c5c978eb3c1b18e3c18b5b650b8 tags/v1.0.0~150", "commitMessage": "Mitigate crash in ForwardControllerListener caused by race condition\n\nSummary:\nIn #1504 a race condition is described that leads to a `OutOfBounds` in `ForwardingControllerListener`. It happens when a `ControllerListener` is removed while an event is propagated in the `for` loop of any of those methods.\n\nThis diffs mitigates the crash by moving the `get(i)` part inside `try-catch` block. By this we still have visibility when it happens, but it does not crash the app.\n\nReviewed By: oprisnik\n\nDifferential Revision: D4037029\n\nfbshipit-source-id: 6d110c2d2d2f32820579d4c998d4fcc33a41745b\n", "commitDateTime": "2016-10-18 12:00:22", "authoredDateTime": "2016-10-18 11:52:25", "commitGitStats": [{"filePath": "drawee/src/main/java/com/facebook/drawee/controller/ForwardingControllerListener.java", "insertions": 6, "deletions": 6, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ForwardingControllerListener.java", "spoonMethods": [{"spoonMethodName": "com.facebook.drawee.controller.ForwardingControllerListener.onSubmit(java.lang.String,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.facebook.drawee.controller.ForwardingControllerListener.onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.facebook.drawee.controller.ForwardingControllerListener.onIntermediateImageSet(java.lang.String,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.facebook.drawee.controller.ForwardingControllerListener.onIntermediateImageFailed(java.lang.String,java.lang.Throwable)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.facebook.drawee.controller.ForwardingControllerListener.onFailure(java.lang.String,java.lang.Throwable)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.facebook.drawee.controller.ForwardingControllerListener.onRelease(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0a140fc368830c5c978eb3c1b18e3c18b5b650b8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 6, "lines": 12, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["drawee/src/main/java/com/facebook/drawee/controller"], "changesInPackagesSPOON": ["com.facebook.drawee.controller.ForwardingControllerListener.onSubmit(java.lang.String,java.lang.Object)", "com.facebook.drawee.controller.ForwardingControllerListener.onRelease(java.lang.String)", "com.facebook.drawee.controller.ForwardingControllerListener.onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable)", "com.facebook.drawee.controller.ForwardingControllerListener.onFailure(java.lang.String,java.lang.Throwable)", "com.facebook.drawee.controller.ForwardingControllerListener.onIntermediateImageFailed(java.lang.String,java.lang.Throwable)", "com.facebook.drawee.controller.ForwardingControllerListener.onIntermediateImageSet(java.lang.String,java.lang.Object)"]}, {"title": "Huge bitmaps, rounded with bitmap shader are black", "body": "This occurs on specific device ZTE blade (possible, may be reproduced on another devices)\nI simplified round demo from sources, so it shows only one image with scaleType CENTER and rounding method BITMAP_ONLY. I also change image to bigger one\nResult on zte is:\n![bitmap_shader_zte](https://cloud.githubusercontent.com/assets/2329931/19312293/72182dbc-909a-11e6-831b-cc3977cdfc0a.png)\n\nSame code, but with rounding method OVERLAY_COLOR works well:\n![overlay_color_zte](https://cloud.githubusercontent.com/assets/2329931/19312389/d955e7b2-909a-11e6-856f-4b436fbaa2ce.png)\n\nSame code without any rounding works well too\nAnd no problems on nexus 6 (and other devices) with any rounding method\n\nIn our application this bug reproduced in two ways (we are using BITMAP_ONLY method)\n1) Image is loading black and staying black \n2) Image is loading well, but then another image on the screen is loading (for example when we scrolling recycler view), the first one becomes black. When another image scrolls away, the first one becomes normal again. You can see it on the video\nhttps://youtu.be/rNt07hydWyE\nThe black are in the middle on the screen - image which won't load at all (as in demo)\nAnd in the right up corner there is images which appear and disappear while image in bottom recycler view loading/unloading (view attaches, detaches from window)\n\nWithout rounding we have no problems at all. So, I assume there is some problem in RoundedBitmapDrawable which uses bitmap shaders to round corners\n", "url": "https://github.com/facebook/fresco/issues/1500", "user": "dmitrychistyakov", "labels": ["bug", "needs-details"], "created": "2016-10-12 13:33:29", "closed": "2018-07-09 10:26:17", "commits": {}, "ttf": 634.0002777777778, "commitsDetails": []}, {"title": "illegal rotation angle caused exception with default RotationOptions ", "body": "Recently the library in our project is upgraded to 0.14.0, sometimes get the following exception:\n\nE/unknown:TransformingConsumer: unhandled exception\n                                                                               java.lang.IllegalArgumentException\n                                                                                   at com.facebook.common.internal.Preconditions.checkArgument(Preconditions.java:108)\n                                                                                   at com.facebook.imagepipeline.producers.ResizeAndRotateProducer.getRotationAngle(ResizeAndRotateProducer.java:288)\n                                                                                   at com.facebook.imagepipeline.producers.ResizeAndRotateProducer.shouldRotate(ResizeAndRotateProducer.java:301)\n                                                                                   at com.facebook.imagepipeline.producers.ResizeAndRotateProducer.shouldTransform(ResizeAndRotateProducer.java:228)\n                                                                                   at com.facebook.imagepipeline.producers.ResizeAndRotateProducer.access$600(ResizeAndRotateProducer.java:43)\n                                                                                   at com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer.onNewResultImpl(ResizeAndRotateProducer.java:128)\n                                                                                   at com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer.onNewResultImpl(ResizeAndRotateProducer.java:76)\n                                                                                   at com.facebook.imagepipeline.producers.BaseConsumer.onNewResult(BaseConsumer.java:49)\n                                                                                   at com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$AddImageTransformMetaDataConsumer.onNewResultImpl(AddImageTransformMetaDataProducer.java:48)\n                                                                                   at com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$AddImageTransformMetaDataConsumer.onNewResultImpl(AddImageTransformMetaDataProducer.java:32)\n                                                                                   at com.facebook.imagepipeline.producers.BaseConsumer.onNewResult(BaseConsumer.java:49)\n                                                                                   at com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer.onNextResult(MultiplexProducer.java:442)\n                                                                                   at com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer.onNewResultImpl(MultiplexProducer.java:499)\n                                                                                   at com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer.onNewResultImpl(MultiplexProducer.java:496)\n                                                                                   at com.facebook.imagepipeline.producers.BaseConsumer.onNewResult(BaseConsumer.java:49)\n                                                                                   at com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer$1.onNewResultImpl(EncodedMemoryCacheProducer.java:94)\n                                                                                   at com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer$1.onNewResultImpl(EncodedMemoryCacheProducer.java:89)\n                                                                                   at com.facebook.imagepipeline.producers.BaseConsumer.onNewResult(BaseConsumer.java:49)\n                                                                                   at com.facebook.imagepipeline.producers.DiskCacheProducer$DiskCacheConsumer.onNewResultImpl(DiskCacheProducer.java:234)\n                                                                                   at com.facebook.imagepipeline.producers.DiskCacheProducer$DiskCacheConsumer.onNewResultImpl(DiskCacheProducer.java:206)\n                                                                                   at com.facebook.imagepipeline.producers.BaseConsumer.onNewResult(BaseConsumer.java:49)\n                                                                                   at com.facebook.imagepipeline.producers.NetworkFetchProducer.notifyConsumer(NetworkFetchProducer.java:168)\n                                                                                   at com.facebook.imagepipeline.producers.NetworkFetchProducer.maybeHandleIntermediateResult(NetworkFetchProducer.java:145)\n                                                                                   at com.facebook.imagepipeline.producers.NetworkFetchProducer.onResponse(NetworkFetchProducer.java:104)\n                                                                                   at com.facebook.imagepipeline.producers.NetworkFetchProducer.access$000(NetworkFetchProducer.java:37)\n                                                                                   at com.facebook.imagepipeline.producers.NetworkFetchProducer$1.onResponse(NetworkFetchProducer.java:72)\n                                                                                   at com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.fetchSync(HttpUrlConnectionNetworkFetcher.java:83)\n                                                                                   at com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$1.run(HttpUrlConnectionNetworkFetcher.java:61)\n                                                                                   at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\n                                                                                   at java.util.concurrent.FutureTask.run(FutureTask.java:237)\n                                                                                   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n                                                                                   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n                                                                                   at java.lang.Thread.run(Thread.java:841)\n\nAfter debugging the code, found that it caused by the illegal rotation angle (-1, the default value in the EncodedImage).  \n\nFor some reason, it failed to decode the dimension information, which means the following expression returns null in the EncodedImage.java\nPair<Integer, Integer> dimensions = BitmapUtil.decodeDimensions(getInputStream());\n\nI think mRotationAngle should be set to Zero in this case, right?\n", "url": "https://github.com/facebook/fresco/issues/1482", "user": "victorxxie", "labels": ["bug"], "created": "2016-09-28 03:37:34", "closed": "2016-09-28 20:54:37", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Strange transcoder error: java.lang.RuntimeException: Bogus Huffman table definition", "body": "I create custom view with MultiDraweeHolder. In this view I have the custom logic for drawing several images. Main big image and two rows below whith preview, but some images take this stack:\n`java.lang.RuntimeException: Bogus Huffman table definition\n                                                                            at com.facebook.imagepipeline.nativecode.JpegTranscoder.nativeTranscodeJpeg(Native Method)\n                                                                            at com.facebook.imagepipeline.nativecode.JpegTranscoder.transcodeJpeg(JpegTranscoder.java:66)\n                                                                            at com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer.doTransform(ResizeAndRotateProducer.java:154)\n                                                                            at com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer.access$000(ResizeAndRotateProducer.java:72)\n                                                                            at com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$1.run(ResizeAndRotateProducer.java:89)\n                                                                            at com.facebook.imagepipeline.producers.JobScheduler.doJob(JobScheduler.java:207)\n                                                                            at com.facebook.imagepipeline.producers.JobScheduler.access$000(JobScheduler.java:27)\n                                                                            at com.facebook.imagepipeline.producers.JobScheduler$1.run(JobScheduler.java:78)\n                                                                            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\n                                                                            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\n                                                                            at com.facebook.imagepipeline.core.PriorityThreadFactory$1.run(PriorityThreadFactory.java:43)\n                                                                            at java.lang.Thread.run(Thread.java:818)`\nImage for example: http://mobs.mail.ru/pthumb/2442026b434dd1533aa66027adf1bd73/r/-x-/news/pic/91/53/image403989_68937dd070195913eb586485d90dcb8e.jpg\n\nPlease, help me! Thanx!\nPS: there is my custom views implementation.\n[GalleriesArticleView.txt](https://github.com/facebook/fresco/files/479532/GalleriesArticleView.txt)\n", "url": "https://github.com/facebook/fresco/issues/1470", "user": "jobpav1984", "labels": ["bug", "needs-details"], "created": "2016-09-19 08:29:15", "closed": "2017-07-10 15:57:39", "commits": {}, "ttf": 294.0002777777778, "commitsDetails": []}, {"title": "Updating Fresco sources from master seems to make animated-webp needed (API 10 - download webp pictures)", "body": "Hello,\n\nI've updated my repo (https://github.com/eldk/fresco - up to this commit https://github.com/facebook/fresco/commit/93d5a4c81c8b4b1bb9e5a1f874851969d06a3a0f ) from Fresco master sources.\n\nBuilding my app is ok.\n\nBut, on run, when webp transcode is done (to a non animated webp), app crash with this error message : \n\n> FATAL EXCEPTION: Thread-17\n>                                                                                java.lang.NoClassDefFoundError: com.facebook.animated.webp.WebPImage\n>                                                                                    at java.lang.Runtime.nativeLoad(Native Method)\n>                                                                                    at java.lang.Runtime.loadLibrary(Runtime.java:432)\n>                                                                                    at java.lang.System.loadLibrary(System.java:554)\n>                                                                                    at com.facebook.common.soloader.SoLoaderShim$DefaultHandler.loadLibrary(SoLoaderShim.java:32)\n>                                                                                    at com.facebook.common.soloader.SoLoaderShim.loadLibrary(SoLoaderShim.java:56)\n>                                                                                    at com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader.ensure(StaticWebpNativeLoader.java:35)\n>                                                                                    at com.facebook.imagepipeline.nativecode.WebpTranscoderImpl.transcodeWebpToJpeg(WebpTranscoderImpl.java:57)\n>                                                                                    at com.facebook.imagepipeline.producers.WebpTranscodeProducer.doTranscode(WebpTranscodeProducer.java:185)\n>                                                                                    at com.facebook.imagepipeline.producers.WebpTranscodeProducer.access$300(WebpTranscodeProducer.java:38)\n>                                                                                    at com.facebook.imagepipeline.producers.WebpTranscodeProducer$1.getResult(WebpTranscodeProducer.java:111)\n>                                                                                    at com.facebook.imagepipeline.producers.WebpTranscodeProducer$1.getResult(WebpTranscodeProducer.java:106)\n>                                                                                    at com.facebook.common.executors.StatefulRunnable.run(StatefulRunnable.java:45)\n>                                                                                    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1088)\n>                                                                                    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:581)\n>                                                                                    at com.facebook.imagepipeline.core.PriorityThreadFactory$1.run(PriorityThreadFactory.java:43)\n>                                                                                    at java.lang.Thread.run(Thread.java:1019)\n>                                                                                 Caused by: java.lang.ClassNotFoundException: com.facebook.animated.webp.WebPImage in loader dalvik.system.PathClassLoader[/data/app/net.opalesurfcasting.lamaille-2.apk]\n>                                                                                    at dalvik.system.PathClassLoader.findClass(PathClassLoader.java:240)\n>                                                                                    at java.lang.ClassLoader.loadClass(ClassLoader.java:551)\n>                                                                                    at java.lang.ClassLoader.loadClass(ClassLoader.java:511\n\nThanks,\n\nEric\n\nPS : I try now to add module animated-webp to my project as a workaround\n", "url": "https://github.com/facebook/fresco/issues/1462", "user": "eldk", "labels": ["bug"], "created": "2016-09-07 15:17:21", "closed": "2016-09-15 15:30:06", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "DiskStorageCache mLock problem", "body": "as we see, when new DiskStorageCache class, it could use a background thread to calculate the cache size which may take long time, and when I want to get a resource, it must wait the initialization to complete, because they use the same locker. \n\ncan this be optimized? \n", "url": "https://github.com/facebook/fresco/issues/1460", "user": "jiqimaogou", "labels": ["bug"], "created": "2016-09-07 03:56:16", "closed": "2018-01-18 15:41:22", "commits": {}, "ttf": 498.0002777777778, "commitsDetails": []}, {"title": "[BUG]closeableObject could be closed unsafely in MultiplexProducer.Multiplexer#onNextResult", "body": "**closeableObject** could be closed unsafely in MultiplexProducer.Multiplexer#onNextResult\n\n> com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer#onNextResult\n\n```\n      while (iterator.hasNext()) {\n        Pair<Consumer<T>, ProducerContext> pair = iterator.next();\n        synchronized (pair) {\n          pair.first.onNewResult(closeableObject, isFinal);\n        }\n      }\n```\n\n**The Failed Situation is submitting two image request for the same url image, but their width/height is different.**\nIn result, one image request is successful, one image request is **failed**. e.g.\n![image](https://cloud.githubusercontent.com/assets/815609/18239160/e53e1ee2-7375-11e6-9382-b51271d43426.png)\n## Here, closeableObject should be cloneOrNull(closeableObject).\n", "url": "https://github.com/facebook/fresco/issues/1453", "user": "huangjunkun", "labels": ["bug"], "created": "2016-09-05 06:37:49", "closed": "2016-12-14 16:47:24", "commits": {}, "ttf": 100.00027777777778, "commitsDetails": []}, {"title": "Border not visible in Rounded Image", "body": "I'm using the following code to round the image and also trying to set the border with it. The result image is rounded but the border is not visible.\n\n`RoundingParams roundingParams = RoundingParams.asCircle();`\n`roundingParams.setRoundAsCircle(true);`\n`roundingParams.setBorder(android.R.color.white,15.0f);`\n\nand setting this as the rounding params as\n`view.getHeirarchy().setRoundingParams(roundingParams)`\n\nbut still no border is seen.\nI also tried setting in xml but still no luck.\nI'm using the latest version of fresco i.e. \n`compile 'com.facebook.fresco:fresco:0.13.0'`\n", "url": "https://github.com/facebook/fresco/issues/1436", "user": "varunrramani", "labels": ["bug", "docs"], "created": "2016-08-27 14:47:15", "closed": "2016-09-13 12:15:24", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "centerCrop does not work", "body": "I am setting a local Uri for the image for the Drawee and once the image loads, it doesn't centerCrop. \n\nWhen the image is not square, there is always one side that is smaller than the respective width/height as if no scaling type was being applied and the default fitCenter was being used. \n\nI'm also using fresco's scaleType as opposed to android:scaleType since I read the Android property is just ignores by Fresco. \n", "url": "https://github.com/facebook/fresco/issues/1435", "user": "eddieberklee", "labels": ["bug", "needs-details"], "created": "2016-08-27 09:12:02", "closed": "2018-01-19 17:09:35", "commits": {}, "ttf": 510.0002777777778, "commitsDetails": []}, {"title": "Pictures drawing problem", "body": "Excuse me but i have a problem\uff1a\ncode\uff1a\n![a123123](https://cloud.githubusercontent.com/assets/10346229/17797865/ed0f6e16-65fe-11e6-9bd2-1b4467222b83.png)\n\n![123123123](https://cloud.githubusercontent.com/assets/10346229/17797953/b1a00a92-65ff-11e6-98ca-bd8efea24cb3.png)\n\nand the effect is\uff1a\n![456456](https://cloud.githubusercontent.com/assets/10346229/17797996/15f5ff24-6600-11e6-85d4-1ec4f8131a9a.png)\n\nHere is the picture address\uff1a\nhttp://miclouds.hebg3.com//userfiles/manufacturer/images/goods/1/0204020208003.jpg\n\ni \u2018d also try to use CENTER_INSIDE ,run on different phone,use android:hardwareAccelerated=\"true\" but it doesn't works.\n\nShould I need to add some other code to solve this\uff1f\nThanks in advance.\n", "url": "https://github.com/facebook/fresco/issues/1422", "user": "mxylayout", "labels": ["bug"], "created": "2016-08-19 03:50:21", "closed": "2016-08-19 16:56:12", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "FadeDrawable call invalidateSelf() so many times when the picture is downloading.", "body": "I had a RecyclerView like this.\n![screen_shot](https://cloud.githubusercontent.com/assets/3580391/17665201/fc0a8f7a-632b-11e6-83b1-7afd5d0f1a79.png)\n\nI write a custom view follow this [guide](http://frescolib.org/docs/writing-custom-views.html) to show 0-9 pictures.\nTo make the view scroll smooth, I set the fade animation's duration is 0 and not set the ProgressBarDrawable. \n\nI except \nthe custom view call onDraw() times = 1(init) + DraweeHolder count \\* (1(placeholder drawable) + 1(actual drawable))\n\nBut I find the invalidateDrawable() method called so many times.\n\nI checked the source code(GenericDraweeHierarchy.java line 278)\n\n```\n  public void setProgress(float progress, boolean immediate) {\n    mFadeDrawable.beginBatchMode();\n    setProgress(progress);\n    if (immediate) {\n      mFadeDrawable.finishTransitionImmediately();\n    }\n    mFadeDrawable.endBatchMode();\n  }\n\n```\n\nThe InvalidateSelf() function called wether the ProgressBarDrawable is set or not.\nI think we can check ProgressBarDrawable not null first, then call the `setProgress` function.\n", "url": "https://github.com/facebook/fresco/issues/1417", "user": "s1rius", "labels": ["bug"], "created": "2016-08-15 14:00:00", "closed": "2016-08-25 18:45:15", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "Unknown image format exception", "body": "Hello, this issue is mentioned earlier, but i created new bug to show pure example of how to reproduce it and why it happens.\nI noticed this issue when test my app on device with WiFi disabled and 4G enabled, but there is very important detail. I have negative balance on my phone account, so there is no actually internet on 4G.\n\nSo how issue looks like: \n1. I turn off Wifi there is only 4G working\n2. I try to load image and got error\n3. I enable wifi and try again - image still not loading\n\nThat happens, because my 4G internet provider in case of negative balance returns me html page like \"please add money to your account\" on every html request to show me it when i open some page in browser\n\nThe bad thing is that Fresco save this page to cache (I found it there) and tries to decode it as image again and again so user will never see actual image event if internet available.\n\nSo, maybe in case of decode exceptions better not to save corrupted data to cache\n", "url": "https://github.com/facebook/fresco/issues/1413", "user": "dmitrychistyakov", "labels": ["bug", "good first issue"], "created": "2016-08-12 13:20:11", "closed": "2018-07-11 14:34:24", "commits": {"7a874c17bda54a92755d36bce6278599cc0cecc1": {"commitGHEventType": "closed", "commitUser": "facebook-github-bot"}, "c00e72c98e2e61990ae020e3f95b3bc0fcce6175": {"commitGHEventType": "referenced", "commitUser": "facebook-github-bot"}}, "ttf": 698.0002777777778, "commitsDetails": [{"commitHash": "7a874c17bda54a92755d36bce6278599cc0cecc1", "commitGHEventType": "closed", "commitUser": "facebook-github-bot", "commitParents": ["98657b39efeacfbcdee50efc2c43b324ac084ba9"], "nameRev": "7a874c17bda54a92755d36bce6278599cc0cecc1 tags/v1.10.0~22", "commitMessage": "Do not cache images if they are of unknown format\n\nSummary: Fixes https://github.com/facebook/fresco/issues/1413 and https://github.com/facebook/fresco/issues/675\n\nReviewed By: oprisnik\n\nDifferential Revision: D8780521\n\nfbshipit-source-id: efec5b689ce696c2132771d70fe3533ea4597680\n", "commitDateTime": "2018-07-11 07:34:01", "authoredDateTime": "2018-07-11 07:23:52", "commitGitStats": [{"filePath": "imagepipeline/src/main/java/com/facebook/imagepipeline/producers/DiskCacheWriteProducer.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "imagepipeline/src/main/java/com/facebook/imagepipeline/producers/PartialDiskCacheProducer.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "imagepipeline/src/test/java/com/facebook/imagepipeline/producers/DiskCacheWriteProducerTest.java", "insertions": 45, "deletions": 17, "lines": 62}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DiskCacheWriteProducer.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducer.DiskCacheWriteConsumer.onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "PartialDiskCacheProducer.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.producers.PartialDiskCacheProducer.PartialDiskCacheConsumer.onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "DiskCacheWriteProducerTest.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducerTest.testDoesNotWriteResultToCacheIfNotEnabled()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducerTest.testDoesNotWriteToCacheIfPartialResult()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducerTest.testDoesNotWriteResultToCacheIfResultStatusSaysNotTo()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducerTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducerTest.testSmallImageDiskCacheInputProducerUnknownFormat()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducerTest.setupInputProducerSuccessFormatUnknown()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducerTest.setUp()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducerTest.setupInputProducerSuccess()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducerTest.setupInputProducerSuccessWithStatusFlags(int,com.facebook.imagepipeline.image.EncodedImage)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducerTest.setupInputProducerSuccessWithStatusFlags(int,com.facebook.imagepipeline.image.EncodedImage).1.answer(org.mockito.invocation.InvocationOnMock)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducerTest.setupInputProducerSuccessWithStatusFlags(int).1.answer(org.mockito.invocation.InvocationOnMock)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "c00e72c98e2e61990ae020e3f95b3bc0fcce6175", "commitGHEventType": "referenced", "commitUser": "facebook-github-bot", "commitParents": ["70003824db692e797b8121299c3832d671df0396"], "nameRev": "c00e72c98e2e61990ae020e3f95b3bc0fcce6175 tags/v1.11.0~25", "commitMessage": "Do not cache unknown format images to EncodedMemoryCache (#2190)\n\nSummary:\noptimize #1413 #675\n\nBUG reproduce step\uff1a\n1. connect to a Portal WiFi, we got a HTTP 200 code and html response. fresco cache the data to EncodedMemoryCache\n2. user login the wifi or change to another connectable WIFI and enter the page again, the image still can not be load success due to the wrong memory cache hit.\n3. user must restart the app or  browse other more pictures to trim the corrupt data from memory cache, then it will restore to normal status.\n\nTo optimize the user experience, we should not cache the unknown image format data to EncodedMemoryCache. Once the network become available, the image will reload success.\nPull Request resolved: https://github.com/facebook/fresco/pull/2190\n\nReviewed By: erikandre\n\nDifferential Revision: D9423330\n\nPulled By: oprisnik\n\nfbshipit-source-id: e985458856efed27f02dd2e4a7f02711c4243179\n", "commitDateTime": "2018-09-21 09:21:12", "authoredDateTime": "2018-09-21 09:11:03", "commitGitStats": [{"filePath": "imagepipeline/src/main/java/com/facebook/imagepipeline/producers/EncodedMemoryCacheProducer.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "imagepipeline/src/test/java/com/facebook/imagepipeline/producers/EncodedMemoryCacheProducerTest.java", "insertions": 38, "deletions": 8, "lines": 46}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncodedMemoryCacheProducer.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer.EncodedMemoryCacheConsumer.onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "EncodedMemoryCacheProducerTest.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.producers.EncodedMemoryCacheProducerTest.testInputProducerSuccessButResultNotCacheableDueToStatusFlags(int)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.EncodedMemoryCacheProducerTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.EncodedMemoryCacheProducerTest.testEncodedMemoryCacheGetNotFoundInputProducerSuccessButResultIsUnknownFormat()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.EncodedMemoryCacheProducerTest.setupInputProducerStreamingSuccessFormatUnknown()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.EncodedMemoryCacheProducerTest.setUp()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.EncodedMemoryCacheProducerTest.setupInputProducerStreamingSuccess()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.EncodedMemoryCacheProducerTest.setupInputProducerStreamingSuccessWithStatusFlags(int,com.facebook.imagepipeline.image.EncodedImage)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.EncodedMemoryCacheProducerTest.setupInputProducerStreamingSuccessWithStatusFlags(int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7a874c17bda54a92755d36bce6278599cc0cecc1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 3, "lines": 13, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["imagepipeline/src/main/java/com/facebook/imagepipeline/producers"], "changesInPackagesSPOON": ["com.facebook.imagepipeline.producers.PartialDiskCacheProducer.PartialDiskCacheConsumer.onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)", "com.facebook.imagepipeline.producers.DiskCacheWriteProducer.DiskCacheWriteConsumer.onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)"]}, {"title": "Using placeholder with progressive image throws java.lang.OutOfMemoryError", "body": "```\n<com.facebook.drawee.view.SimpleDraweeView\n            android:id=\"@+id/post_img\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"240dp\"\n            android:layout_gravity=\"center_horizontal\"\n            android:adjustViewBounds=\"true\"\n            android:maxHeight=\"240dp\"\n            android:visibility=\"visible\"\n            fresco:actualImageScaleType=\"fitCenter\"\n            fresco:placeholderImage=\"@drawable/img_placeholder\" />\n\nUri mUri = Uri.parse(mUrl);\n        ImageRequest request = ImageRequestBuilder.newBuilderWithSource(mUri)\n                .setProgressiveRenderingEnabled(true)\n                .build();\n        DraweeController mController = Fresco.newDraweeControllerBuilder()\n                .setImageRequest(request)\n                .setOldController(mSimpleDraweeView.getController())\n                .build();\n        mSimpleDraweeView.setController(mController);\n```\n\nplaceholderImage size : 7kb\n\nCaused by java.lang.OutOfMemoryError\n\n```\ndalvik.system.VMRuntime.newNonMovableArray (VMRuntime.java)\nandroid.graphics.BitmapFactory.nativeDecodeAsset (BitmapFactory.java)\nandroid.graphics.BitmapFactory.decodeStream (BitmapFactory.java:613)\nandroid.graphics.BitmapFactory.decodeResourceStream (BitmapFactory.java:446)\nandroid.graphics.drawable.Drawable.createFromResourceStream (Drawable.java:988)\nandroid.content.res.Resources.createFromResourceStream (Resources.java:2822)\nandroid.content.res.Resources.loadDrawableForCookie (Resources.java:2523)\nandroid.content.res.Resources.loadDrawable (Resources.java:2421)\nandroid.content.res.MiuiResources.loadDrawable (MiuiResources.java:393)\nandroid.content.res.Resources.getDrawable (Resources.java:805)\nandroid.content.res.Resources.getDrawable (Resources.java:770)\ncom.facebook.drawee.generic.GenericDraweeHierarchyInflater.getDrawable (GenericDraweeHierarchyInflater.java:227)\ncom.facebook.drawee.generic.GenericDraweeHierarchyInflater.updateBuilder (GenericDraweeHierarchyInflater.java:116)\ncom.facebook.drawee.generic.GenericDraweeHierarchyInflater.inflateBuilder (GenericDraweeHierarchyInflater.java:77)\ncom.facebook.drawee.view.GenericDraweeView.inflateHierarchy (GenericDraweeView.java:58)\ncom.facebook.drawee.view.GenericDraweeView. (GenericDraweeView.java)\ncom.facebook.drawee.view.SimpleDraweeView. (SimpleDraweeView.java)\njava.lang.reflect.Constructor.newInstance (Constructor.java)\njava.lang.reflect.Constructor.newInstance (Constructor.java:288)\nandroid.view.LayoutInflater.createView (LayoutInflater.java:611)\nandroid.view.LayoutInflater.createViewFromTag (LayoutInflater.java:747)\nandroid.view.LayoutInflater.rInflate (LayoutInflater.java:810)\nandroid.view.LayoutInflater.rInflate (LayoutInflater.java:813)\nandroid.view.LayoutInflater.inflate (LayoutInflater.java:508)\nandroid.view.LayoutInflater.inflate (LayoutInflater.java:418)\ncom.yappily.adapter.PostDetailAdapter.onCreateViewHolder (PostDetailAdapter.java:83)\nandroid.support.v7.widget.RecyclerView$Adapter.createViewHolder (RecyclerView.java:5779)\nandroid.support.v7.widget.RecyclerView$Recycler.getViewForPosition (RecyclerView.java:5003)\nandroid.support.v7.widget.RecyclerView$Recycler.getViewForPosition (RecyclerView.java:4913)\nandroid.support.v7.widget.LinearLayoutManager$LayoutState.next (LinearLayoutManager.java:2029)\nandroid.support.v7.widget.LinearLayoutManager.layoutChunk (LinearLayoutManager.java:1414)\nandroid.support.v7.widget.LinearLayoutManager.fill (LinearLayoutManager.java:1377)\nandroid.support.v7.widget.LinearLayoutManager.onLayoutChildren (LinearLayoutManager.java:578)\nandroid.support.v7.widget.RecyclerView.dispatchLayoutStep2 (RecyclerView.java:3260)\nandroid.support.v7.widget.RecyclerView.dispatchLayout (RecyclerView.java:3069)\nandroid.support.v7.widget.RecyclerView.onLayout (RecyclerView.java:3518)\nandroid.view.View.layout (View.java:15691)\nandroid.view.ViewGroup.layout (ViewGroup.java:5039)\nandroid.support.v4.widget.SwipeRefreshLayout.onLayout (SwipeRefreshLayout.java:598)\nandroid.view.View.layout (View.java:15691)\nandroid.view.ViewGroup.layout (ViewGroup.java:5039)\nandroid.widget.RelativeLayout.onLayout (RelativeLayout.java:1077)\nandroid.view.View.layout (View.java:15691)\nandroid.view.ViewGroup.layout (ViewGroup.java:5039)\nandroid.widget.RelativeLayout.onLayout (RelativeLayout.java:1077)\nandroid.view.View.layout (View.java:15691)\nandroid.view.ViewGroup.layout (ViewGroup.java:5039)\nandroid.widget.FrameLayout.layoutChildren (FrameLayout.java:579)\nandroid.widget.FrameLayout.onLayout (FrameLayout.java:514)\nandroid.view.View.layout (View.java:15691)\nandroid.view.ViewGroup.layout (ViewGroup.java:5039)\nandroid.widget.LinearLayout.setChildFrame (LinearLayout.java:1703)\nandroid.widget.LinearLayout.layoutVertical (LinearLayout.java:1557)\nandroid.widget.LinearLayout.onLayout (LinearLayout.java:1466)\nandroid.view.View.layout (View.java:15691)\nandroid.view.ViewGroup.layout (ViewGroup.java:5039)\nandroid.widget.FrameLayout.layoutChildren (FrameLayout.java:579)\nandroid.widget.FrameLayout.onLayout (FrameLayout.java:514)\nandroid.view.View.layout (View.java:15691)\nandroid.view.ViewGroup.layout (ViewGroup.java:5039)\nandroid.widget.LinearLayout.setChildFrame (LinearLayout.java:1703)\nandroid.widget.LinearLayout.layoutVertical (LinearLayout.java:1557)\nandroid.widget.LinearLayout.onLayout (LinearLayout.java:1466)\nandroid.view.View.layout (View.java:15691)\nandroid.view.ViewGroup.layout (ViewGroup.java:5039)\nandroid.widget.FrameLayout.layoutChildren (FrameLayout.java:579)\nandroid.widget.FrameLayout.onLayout (FrameLayout.java:514)\nandroid.view.View.layout (View.java:15691)\nandroid.view.ViewGroup.layout (ViewGroup.java:5039)\nandroid.view.ViewRootImpl.performLayout (ViewRootImpl.java:2116)\nandroid.view.ViewRootImpl.performTraversals (ViewRootImpl.java:1873)\nandroid.view.ViewRootImpl.doTraversal (ViewRootImpl.java:1091)\nandroid.view.ViewRootImpl$TraversalRunnable.run (ViewRootImpl.java:5926)\nandroid.view.Choreographer$CallbackRecord.run (Choreographer.java:775)\nandroid.view.Choreographer.doCallbacks (Choreographer.java:588)\nandroid.view.Choreographer.doFrame (Choreographer.java:558)\nandroid.view.Choreographer$FrameDisplayEventReceiver.run (Choreographer.java:761)\nandroid.os.Handler.handleCallback (Handler.java:739)\nandroid.os.Handler.dispatchMessage (Handler.java:95)\nandroid.os.Looper.loop (Looper.java:135)\nandroid.app.ActivityThread.main (ActivityThread.java:5276)\njava.lang.reflect.Method.invoke (Method.java)\njava.lang.reflect.Method.invoke (Method.java:372)\ncom.android.internal.os.ZygoteInit$MethodAndArgsCaller.run (ZygoteInit.java:908)\ncom.android.internal.os.ZygoteInit.main (ZygoteInit.java:703)\n```\n", "url": "https://github.com/facebook/fresco/issues/1411", "user": "iamprashant", "labels": ["bug"], "created": "2016-08-11 17:01:24", "closed": "2018-07-12 14:40:30", "commits": {}, "ttf": 699.0002777777778, "commitsDetails": []}, {"title": "CMYK support", "body": "HI\uff1a\nI'm on the Samsung SM-G3818Android4.2.2: pictures do not show up, this is my picture address: https: //dn-runedu-img.qbox.me/5324277294619549696.   \n\nAdjustment ResizeOptions on other mobile phone and some can not be displayed\n\npublic static void showImageEnty(SimpleDraweeView view, String url,\n            int width, int height, int imageResouse) {\n        if (url == null) {\n            view.setImageURI(Uri\n                    .parse(\"res://com.zjcs.student/\" + imageResouse));\n        } else {\n            Uri uri = Uri.parse(url);\n            ImageRequest request = ImageRequestBuilder\n                    .newBuilderWithSource(uri)\n                    .setResizeOptions(new ResizeOptions(width, height)).build();\n            DraweeController controller = Fresco.newDraweeControllerBuilder()\n                    .setOldController(view.getController())\n//                  .setAutoPlayAnimations(true)\n                    .setImageRequest(request).build();\n            view.setController(controller);\n        }\n    }\n\n ImageUtils.showImageEnty(itemHolder.groupLogo, info.getImgUrl(), ScreenUtil.dp2px(activity, 48), ScreenUtil.dp2px(activity, 48)\n                    , R.drawable.home_def_type);\n\n<com.facebook.drawee.view.SimpleDraweeView\n        android:id=\"@+id/group_photo\"\n        android:layout_width=\"48dp\"\n        android:layout_height=\"48dp\"\n        android:layout_gravity=\"center_horizontal\"\n        fresco:actualImageScaleType=\"focusCrop\"\n        fresco:roundAsCircle=\"true\"\n        fresco:failureImageScaleType=\"center\"\n        fresco:placeholderImage=\"@drawable/home_def_type\"\n        fresco:placeholderImageScaleType=\"center\"\n        fresco:retryImage=\"@drawable/home_def_type\"\n        fresco:retryImageScaleType=\"center\"\n        android:layout_centerVertical=\"true\"\n        android:layout_alignParentLeft=\"true\"\n        android:layout_alignParentStart=\"true\" />\n", "url": "https://github.com/facebook/fresco/issues/1404", "user": "super-hu", "labels": ["bug", "help wanted"], "created": "2016-08-08 07:27:04", "closed": "2018-01-16 13:25:12", "commits": {}, "ttf": 526.0002777777778, "commitsDetails": []}, {"title": "[CRASH] Decode gif image to static image, and it could lead to JNI Crash.", "body": "**Decode gif image to static image, and it could lead to JNI Crash**\n\n> com.facebook.imagepipeline.decoder.ImageDecoder#decodeGif\n> \n> com.facebook.imagepipeline.decoder.ImageDecoder#decodeStaticImage\n\n**Crash on Android 4.4.4, 4.1.2, 4.3, 4.4.2**\n\n**JNI Crash log as follow** \n\n```\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr deadbaad\n  r0 00000000  r1 40136456  r2 deadbaad  r3 40139fbb\n  r4 7cdac0b8  r5 40144180  r6 400e5000  r7 7cdac0c0\n  r8 7c5f77d0  r9 7c5f73a8  10 7c5f7378  fp 00000200\n  ip 00000001  sp 7c5f72d0  lr 4010771f  pc 40107720  cpsr 600f0030\n    --- --- ---\n    00 pc 00011720  /system/lib/libc.so (dlfree+1191)\n    01 pc 0000dc6f  /system/lib/libc.so (free+10)\n    02 pc 000fe179  /system/lib/libskia.so (_ZN17SkGIFImageDecoder8onDecodeEP8SkStreamP8SkBitmapN14SkImageDecoder4ModeE+1064)\n    03 pc 000fc41d  /system/lib/libskia.so (_ZN14SkImageDecoder6decodeEP8SkStreamP8SkBitmapNS2_6ConfigENS_4ModeE+36)\n    04 pc 001013ab  /system/lib/libskia.so (_ZN21SkImageRef_GlobalPool8onDecodeEP14SkImageDecoderP18SkStreamRewindableP8SkBitmapNS4_6ConfigENS0_4ModeE+12)\n    05 pc 00100e17  /system/lib/libskia.so (_ZN10SkImageRef13prepareBitmapEN14SkImageDecoder4ModeE+102)\n    06 pc 00100e5d  /system/lib/libskia.so (_ZN10SkImageRef12onLockPixelsEPP12SkColorTable+12)\n    07 pc 000c969b  /system/lib/libskia.so (_ZN10SkPixelRef10lockPixelsEv+38)\n    08 pc 0009bc77  /system/lib/libskia.so (_ZNK8SkBitmap10lockPixelsEv+20)\n    09 pc 00100cd7  /system/lib/libskia.so (_ZN10SkImageRef8isOpaqueEP8SkBitmap+18)\n    10 pc 00077135  /system/lib/libandroid_runtime.so\n    11 pc 0007732b  /system/lib/libandroid_runtime.so\n    12 pc 0001d30c  /system/lib/libdvm.so (dvmPlatformInvoke+112)\n    13 pc 0004d8db  /system/lib/libdvm.so (_Z16dvmCallJNIMethodPKjP6JValuePK6MethodP6Thread+398)\n    14 pc 00026720  /system/lib/libdvm.so\n    15 pc 0002d790  /system/lib/libdvm.so (_Z11dvmMterpStdP6Thread+76)\n    16 pc 0002adf4  /system/lib/libdvm.so (_Z12dvmInterpretP6ThreadPK6MethodP6JValue+184)\n    17 pc 0005fd75  /system/lib/libdvm.so (_Z14dvmCallMethodVP6ThreadPK6MethodP6ObjectbP6JValueSt9__va_list+336)\n    18 pc 0005fd99  /system/lib/libdvm.so (_Z13dvmCallMethodP6ThreadPK6MethodP6ObjectP6JValuez+20)\n    19 pc 00054a93  /system/lib/libdvm.so\n    20 pc 0000d1d0  /system/lib/libc.so (__thread_entry+72)\n    21 pc 0000d368  /system/lib/libc.so (pthread_create+240)\n    --- --- --- ---\n```\n\n**Java backtrace**\n\n```\nat android.graphics.BitmapFactory.nativeDecodeByteArray\n  at android.graphics.BitmapFactory.decodeByteArray\n  at com.facebook.imagepipeline.platform.KitKatPurgeableDecoder.decodeByteArrayAsPurgeable\n  at com.facebook.imagepipeline.platform.DalvikPurgeableDecoder.decodeFromEncodedImage\n  at com.facebook.imagepipeline.decoder.ImageDecoder.decodeStaticImage\n  at com.facebook.imagepipeline.decoder.ImageDecoder.decodeGif\n  at com.facebook.imagepipeline.decoder.ImageDecoder.decodeImage\n  at com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder.doDecode\n  at com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder.onNewResultImpl\n\n```\n", "url": "https://github.com/facebook/fresco/issues/1350", "user": "huangjunkun", "labels": ["bug", "needs-details"], "created": "2016-07-12 02:53:31", "closed": "2017-07-17 14:53:39", "commits": {}, "ttf": 370.0002777777778, "commitsDetails": []}, {"title": "com.facebook.common.soloader.SoLoaderShim$DefaultHandler.loadLibrary error", "body": "i use 0.10.0\n\ncompile 'com.facebook.fresco:fresco:0.10.0@aar'\n    compile 'com.facebook.fresco:drawee:0.10.0@aar'\n    compile 'com.facebook.fresco:fbcore:0.10.0@aar'\n    compile 'com.facebook.fresco:imagepipeline:0.10.0@aar'\n    compile group: 'com.facebook.fresco', name: 'imagepipeline-okhttp3', version: '0.10.0'\n\nhttp://crashes.to/s/47cbe863a3c\n", "url": "https://github.com/facebook/fresco/issues/1336", "user": "chonamdoo", "labels": ["bug"], "created": "2016-07-04 04:10:20", "closed": "2018-01-19 19:35:37", "commits": {}, "ttf": 564.0002777777778, "commitsDetails": []}, {"title": "A IllegalArgumentException caused by file length 0 (get filelength failed!)", "body": "Back traces starts.\njava.lang.IllegalArgumentException\n        at com.facebook.common.internal.Preconditions.checkArgument(Preconditions.java:108)\n        at com.facebook.imagepipeline.memory.NativePooledByteBufferOutputStream.<init>(NativePooledByteBufferOutputStream.java:50)\n        at com.facebook.imagepipeline.memory.NativePooledByteBufferFactory.newByteBuffer(NativePooledByteBufferFactory.java:98)\n        at com.facebook.imagepipeline.memory.NativePooledByteBufferFactory.newByteBuffer(NativePooledByteBufferFactory.java:26)\n        at com.facebook.imagepipeline.producers.LocalFetchProducer.getByteBufferBackedEncodedImage(LocalFetchProducer.java:79)\n        at com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(LocalFetchProducer.java:107)\n        at com.facebook.imagepipeline.producers.LocalFileFetchProducer.getEncodedImage(LocalFileFetchProducer.java:38)\n        at com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(LocalFetchProducer.java:56)\n", "url": "https://github.com/facebook/fresco/issues/1315", "user": "huangjunkun", "labels": ["bug"], "created": "2016-06-21 09:46:32", "closed": "2016-06-21 16:08:35", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Not able to show GIF with ProGuard enabled in 0.11.0", "body": "Hello,\n\nI've built my app with proguard enabled and followed the instruction found in the document:\nhttps://raw.githubusercontent.com/facebook/fresco/master/proguard-fresco.pro\n\nHowever, the GIFs cannot be displayed.\nI have found a solution to fixing this problem by adding the following line to the ProGuard config file:\n`-keep class com.facebook.imagepipeline.animated.** { *; }`\nand everything worked as normal.\n\nCould you update the ProGuard file in documentation if there is no other solution?\nThank you.\n", "url": "https://github.com/facebook/fresco/issues/1301", "user": "joshzngf", "labels": ["bug"], "created": "2016-06-16 13:38:05", "closed": "2016-06-21 12:42:15", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Downscaling CMYK JPEGs fails", "body": "`JpegTranscoder.transcodeJpeg()` fails, if the jpeg uses CMYK colors. \n\n> java.lang.RuntimeException: Unsupported color conversion request\n", "url": "https://github.com/facebook/fresco/issues/1294", "user": "jbxbergdev", "labels": ["bug"], "created": "2016-06-14 17:11:18", "closed": "2017-06-09 13:54:01", "commits": {}, "ttf": 359.0002777777778, "commitsDetails": []}, {"title": "WebP with alpha on API 17", "body": "I'm using `compile 'com.facebook.fresco:webpsupport:0.10.0'` to support transparent webp images on devices < 18 API (API 18 is when native support was added to framework).\n\nBut on some devices on **API 17** (for example Huawei Ascend G700) I'm facing this weird bug: [screenshot](http://i.imgur.com/las5poh.png) (for the reference, it should look like [this](http://i.imgur.com/rFqZiR0.png)). These webp images are from [official google samples](https://developers.google.com/speed/webp/gallery2#side-by-side_comparison) (WebP-lossy with alpha).\n\nIs there some workaround about this?\n", "url": "https://github.com/facebook/fresco/issues/1285", "user": "paulzin", "labels": ["bug"], "created": "2016-06-08 10:39:30", "closed": "2018-01-11 14:49:18", "commits": {"705b77452f2834e67f4586fdbd3e0157bfc6e071": {"commitGHEventType": "closed", "commitUser": "facebook-github-bot"}}, "ttf": 582.0002777777778, "commitsDetails": [{"commitHash": "705b77452f2834e67f4586fdbd3e0157bfc6e071", "commitGHEventType": "closed", "commitUser": "facebook-github-bot", "commitParents": ["e2c464efbc9214d1a00aa416d3d9cfb26c0298da"], "nameRev": "705b77452f2834e67f4586fdbd3e0157bfc6e071 tags/v1.8.0~8", "commitMessage": "#1285 Fix webp with alpha decoding on API <= 17 devices\n\nSummary:\nThis PR aims to fix #1285 , because `doDecode` method in `webp_bitmapfactory.cpp` use the wrong colorspace to decode webp images on Android system.  `MODE_rgbA` should be used not `MODE_RGBA` and Bitmap is premultiplied by default. Thanks.\nCloses https://github.com/facebook/fresco/pull/2013\n\nReviewed By: erikandre\n\nDifferential Revision: D6660577\n\nPulled By: oprisnik\n\nfbshipit-source-id: c2a1beb2478a39ff9c16fcde114c74f6d691ba6b\n", "commitDateTime": "2018-01-11 06:49:02", "authoredDateTime": "2018-01-11 06:45:51", "commitGitStats": [{"filePath": "static-webp/src/main/jni/static-webp/webp_bitmapfactory.cpp", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["705b77452f2834e67f4586fdbd3e0157bfc6e071"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["static-webp/src/main/jni/static-webp/webp_bitmapfactory.cpp"]}, {"title": "setDecodeMemoryFileEnabled(true) may cause some phone crashes", "body": "Phone model: lenovo A820t\nAndroid version: 4.1.2\nkernel version: 3.4.5\nFrseco version: 0.9.0\n\nThis phone will crash every time. This is my code\n\n```\n        ImagePipelineConfig imagePipelineConfig = ImagePipelineConfig.newBuilder(getApplicationContext())\n                .setDecodeMemoryFileEnabled(true)\n                .build();\n        Fresco.initialize(this, imagePipelineConfig);\n```\n\nWhen I write like this.\n\n```\nFresco.initialize(this);\n```\n\nIt will be fine.\n", "url": "https://github.com/facebook/fresco/issues/1260", "user": "imrunning", "labels": ["bug"], "created": "2016-05-31 07:31:06", "closed": "2018-01-18 17:30:19", "commits": {}, "ttf": 597.0002777777778, "commitsDetails": []}, {"title": "Bugs in EXIF auto-rotation for loaded images", "body": "I see that there is an API available on `ImageRequestBuilder` to enable and disable auto-rotation of images with EXIF data. I am having some issues getting it to work with my code:\n1. Auto-rotation seems to be enabled by default, although this does not seem to be mentioned in the docs at all as far as I can see.\n2. When I try to disable it with `ImageRequestBuilder.setAutoRotateEnabled(false)`, the image still gets auto-rotated. Is this a bug?\n3. When an auto-rotated image finishes loading and the listener invokes `BaseControllerListener.onFinalImageSet()`, the width and height values reported in `ImageInfo` do not reflect the rotation that has been performed. For example, a 1024x512 image with EXIF rotation 6 reports its width x height as 1024x512, not 512x1024 as I would expect.\n\nUPDATE: I found [this](http://stackoverflow.com/questions/34514161/android-how-to-rotate-image-using-fresco) post on StackOverflow. Seems my problem is because I have enabled downsampling? Is there a fix in the works for this? Also, the documentation ought to be updated to mention this caveat with downsampling to save other people from wasting time trying to fix it.\n", "url": "https://github.com/facebook/fresco/issues/1247", "user": "jmbusby", "labels": ["bug"], "created": "2016-05-26 18:41:33", "closed": "2017-10-24 17:43:38", "commits": {}, "ttf": 515.0002777777778, "commitsDetails": []}, {"title": "In some case always get  \"Problem decoding into existing bitmap\"", "body": "When i try to use SimpleDraweeView.setUri to set a local png file to view.\nThere's some probability that always get  Problem decoding into existing bitmap\nit only occurs when two SimpleDrawwView load same file;\nmy version is 0.10\n![e1578611-a9a6-4e88-85cb-1414571dfaa8](https://cloud.githubusercontent.com/assets/1409727/15202388/603a3c34-182c-11e6-8f73-925715cf5a80.png)\n", "url": "https://github.com/facebook/fresco/issues/1204", "user": "martin90s", "labels": ["bug"], "created": "2016-05-12 02:29:50", "closed": "2018-01-18 17:28:16", "commits": {}, "ttf": 616.0002777777778, "commitsDetails": []}, {"title": "v0.10.0 Fresco with OkHttp v0.10.0 is leaking connections when some fetches produce 404 errors", "body": "I have been using Fresco 0.9.0 for a while with the OkHttp 0.9.0 network fetcher and everything has been fine. However, after upgrading to v0.10.0 for both Fresco and the OkHttp backend, I am seeing errors like this on occasion:\n\n```\n05-02 12:20:53.653 13097-14210/com.appname W/OkHttpClient: A connection to <URL_REMOVED> was leaked. Did you forget to close a response body?\n```\n\nThis only happens in a certain scenario. I have some debug code that deliberately mangles some of my fetch URLs to test 404 handing, and when that code is enabled, I see the connection leaks as shown above. If I disable the mangling code, I see no leaks. If I change the debug code to mangle 100% of the URLs instead of 90%, this also works with no leaks (surprisingly).\n\nMy concern is that when I get legitimate 404 errors occurring in the wild (rather than faking them like this), they will be leaking connections which may eventually prevent images from loading.\n\n**UPDATE: These connection leaks do not happen with Fresco 0.10.0 / OkHttp 0.9.0. Seems to be OkHttp 0.10.0 that is causing the problem?**\n", "url": "https://github.com/facebook/fresco/issues/1180", "user": "jmbusby", "labels": ["bug"], "created": "2016-05-02 19:30:46", "closed": "2016-05-24 19:00:01", "commits": {}, "ttf": 21.00027777777778, "commitsDetails": []}, {"title": "After upgrading to 0.10.0 getting NullPointException in release build", "body": "I found this after turning on verbose logging:\n\n04-26 09:38:14.129 354-8610/com.bridj.rider W/unknown:RequestLoggingListener: time 2585133: onProducerFinishWithFailure: {requestId: 0, stage: DecodeProducer, elapsedTime: 5 ms, extraMap: {hasGoodQuality=true, queueTime=1, imageType=DEFAULT, isFinal=true}, throwable: java.lang.NullPointerException: Attempt to invoke interface method 'com.facebook.imagepipeline.g.c com.facebook.imagepipeline.animated.factory.f.a(com.facebook.imagepipeline.g.e, com.facebook.imagepipeline.c.a, android.graphics.Bitmap$Config)' on a null object reference}\n04-26 09:38:14.129 354-8610/com.bridj.rider W/unknown:RequestLoggingListener: time 2585133: onRequestFailure: {requestId: 0, elapsedTime: 43 ms, throwable: java.lang.NullPointerException: Attempt to invoke interface method 'com.facebook.imagepipeline.g.c com.facebook.imagepipeline.animated.factory.f.a(com.facebook.imagepipeline.g.e, com.facebook.imagepipeline.c.a, android.graphics.Bitmap$Config)' on a null object reference}\n\nI am attempting to download and display an animated gif.\nI am using the progaurd config documented here:\n\nhttp://frescolib.org/docs/proguard.html\n\nIs that still correct?\n\nEverything seems to work ok with a debug build.\n", "url": "https://github.com/facebook/fresco/issues/1160", "user": "ndurell", "labels": ["bug"], "created": "2016-04-26 13:51:38", "closed": "2016-06-21 12:56:51", "commits": {}, "ttf": 55.000277777777775, "commitsDetails": []}, {"title": "failed to update to fresco 0.9.0 with gradle(Android Studio 2.1 Preview 5,gradle-2.11)", "body": "![fresco1](https://cloud.githubusercontent.com/assets/3745303/14774914/b395555e-0aed-11e6-8acb-6dcf5a63c48b.jpg)\n![fresco2](https://cloud.githubusercontent.com/assets/3745303/14774915/b53e2610-0aed-11e6-9fbe-23f4ddf3e195.jpg)\n\nI upgrate Fresco from 0.8.1 to 0.9.0  and there are something wrong in my project(see img above)\n\nIt seems gradle failed to download some package form Jcenter\n\nor is there something change of using Supplier and ByteConstants ? \n\nIf I go back to 0.8.1 ,everything work fine again\n\nplz help \n", "url": "https://github.com/facebook/fresco/issues/1153", "user": "Wccczy", "labels": ["bug"], "created": "2016-04-25 06:03:51", "closed": "2016-04-27 16:50:23", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Execution failed for task: 'imagepipeline-test: processReleaseResources'. a library uses the same package as this project :com.facebook.imagepipelinebase.", "body": "", "url": "https://github.com/facebook/fresco/issues/1150", "user": "wgykontage", "labels": ["bug", "build"], "created": "2016-04-24 09:50:44", "closed": "2016-04-27 10:21:03", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Image not display when call notifyDataChanged()", "body": "Normal state\uff1adisplay image in RecyclerView\n![1a8da52b0c7363a16ff48b4d5bc29e8d](https://cloud.githubusercontent.com/assets/4645390/14738585/f21c4f0c-08b4-11e6-8027-1a8d7420fec6.jpg)\n\nwhen I call notifyDataChanged() to refresh the RecycleView , Sometimes can not be displayed\n![e760cae10975bf8c145b37230cc3403a](https://cloud.githubusercontent.com/assets/4645390/14738721/cfbf45da-08b5-11e6-9b56-0c29d03aafc2.jpg)\n\nThe following is my code in `onBindViewHolder`\n\n`ImageRequest request = ImageRequest.fromUri(Uri.parse(finalUrl));\n DraweeController controller = Fresco.newDraweeControllerBuilder()\n                .setImageRequest(request)\n                .setOldController(imageView.getController()).build();\n imageView.setController(controller);`\n\n`<com.facebook.drawee.view.SimpleDraweeView\n        android:id=\"@+id/publicityImg\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        fresco:backgroundImage=\"@drawable/shape_show_off_img_bg\"\n        fresco:roundedCornerRadius=\"2dp\"\n        fresco:roundingBorderWidth=\"1dp\"\n        fresco:placeholderImage=\"@drawable/default_img_small_5x4\"\n        fresco:placeholderImageScaleType=\"fitXY\"\n        fresco:roundingBorderColor=\"@color/common_divider_color\"/>`\n", "url": "https://github.com/facebook/fresco/issues/1149", "user": "howedeng", "labels": ["bug"], "created": "2016-04-22 10:18:43", "closed": "2016-04-25 10:19:47", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "java.lang.InternalError: Thread starting during runtime shutdown ", "body": "```\njava.lang.InternalError: Thread starting during runtime shutdown\n    at java.lang.Thread.nativeCreate(Thread.java)\n    at java.lang.Thread.start(Thread.java:1063)\n    at java.util.concurrent.ThreadPoolExecutor.addWorker(ThreadPoolExecutor.java:920)\n    at java.util.concurrent.ThreadPoolExecutor.processWorkerExit(ThreadPoolExecutor.java:988)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n    at com.facebook.imagepipeline.core.PriorityThreadFactory$1.run(PriorityThreadFactory.java:43)\n    at java.lang.Thread.run(Thread.java:818)\n```\n\ndoes someone has idea?\n", "url": "https://github.com/facebook/fresco/issues/1144", "user": "harinlin", "labels": ["bug"], "created": "2016-04-22 09:04:53", "closed": "2018-01-17 19:21:29", "commits": {}, "ttf": 635.0002777777778, "commitsDetails": []}, {"title": "An error occurred after upgrading to the v0.9.0", "body": "```\njava.lang.NoClassDefFoundError: com/facebook/imagepipeline/nativecode/JpegTranscoder\n    at com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer.doTransform(ResizeAndRotateProducer.java:154)\n    at com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer.access$000(ResizeAndRotateProducer.java:72)\n    at com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$1.run(ResizeAndRotateProducer.java:89)\n    at com.facebook.imagepipeline.producers.JobScheduler.doJob(JobScheduler.java:207)\n    at com.facebook.imagepipeline.producers.JobScheduler.access$000(JobScheduler.java:27)\n    at com.facebook.imagepipeline.producers.JobScheduler$1.run(JobScheduler.java:78)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)\n    at com.facebook.imagepipeline.core.PriorityThreadFactory$1.run(PriorityThreadFactory.java:43)\n    at java.lang.Thread.run(Thread.java:838)\n```\n## Error device (TOP5)\n\n![image](https://cloud.githubusercontent.com/assets/9779970/14735051/3c0ef97a-08a1-11e6-83d6-518136906d17.png)\n## System version (TOP5)\n\n![image](https://cloud.githubusercontent.com/assets/9779970/14735134/c4ab53f0-08a1-11e6-9496-d1e09b119354.png)\n\n```\njava.lang.ExceptionInInitializerError\n    at com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer.doTransform(ResizeAndRotateProducer.java:154)\n    at com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer.access$000(ResizeAndRotateProducer.java:72)\n    at com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$1.run(ResizeAndRotateProducer.java:89)\n    at com.facebook.imagepipeline.producers.JobScheduler.doJob(JobScheduler.java:207)\n    at com.facebook.imagepipeline.producers.JobScheduler.access$000(JobScheduler.java:27)\n    at com.facebook.imagepipeline.producers.JobScheduler$1.run(JobScheduler.java:78)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)\n    at com.facebook.imagepipeline.core.PriorityThreadFactory$1.run(PriorityThreadFactory.java:43)\n    at java.lang.Thread.run(Thread.java:856)\nCaused by: java.lang.UnsatisfiedLinkError: Cannot load library: soinfo_link_image(linker.cpp:1635): could not load library \"libwebp.so\" needed by \"libimagepipeline.so\"; caused by load_library(linker.cpp:745): library \"libwebp.so\" not found\n    at java.lang.Runtime.loadLibrary(Runtime.java:371)\n    at java.lang.System.loadLibrary(System.java:535)\n    at com.facebook.common.soloader.SoLoaderShim$DefaultHandler.loadLibrary(SoLoaderShim.java:32)\n    at com.facebook.common.soloader.SoLoaderShim.loadLibrary(SoLoaderShim.java:56)\n    at com.facebook.imagepipeline.nativecode.ImagePipelineNativeLoader.load(ImagePipelineNativeLoader.java:43)\n    at com.facebook.imagepipeline.nativecode.JpegTranscoder.(JpegTranscoder.java:26)\n    ... 10 more\n```\n## Error device (TOP5)\n\n![image](https://cloud.githubusercontent.com/assets/9779970/14735214/4c48214e-08a2-11e6-888c-a1338fa709d5.png)\n## System version (TOP5)\n\n![image](https://cloud.githubusercontent.com/assets/9779970/14735242/6ee3f3d6-08a2-11e6-9873-1fe980b0927b.png)\n", "url": "https://github.com/facebook/fresco/issues/1143", "user": "imliujun", "labels": ["bug"], "created": "2016-04-22 07:55:31", "closed": "2016-06-16 08:38:54", "commits": {}, "ttf": 55.000277777777775, "commitsDetails": []}, {"title": "fresco not load image when folder has \"#\",like this local url:\"file:///storage/sdcard1/test#image/text.jpg\"", "body": "fresco not load image when folder has \"#\",like this local url:\"file:///storage/sdcard1/test#image/text.jpg\"\n", "url": "https://github.com/facebook/fresco/issues/1116", "user": "Awent", "labels": ["bug"], "created": "2016-04-12 07:04:57", "closed": "2016-04-12 15:20:35", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Fresco.initialize(getApplicationContext()) leak", "body": "Initialize Fresco with the application context create a leak, according to LeakCanary.\n\n```\nIn com.artico.delivery.pedidos:2.0:25.\n\ncom.cibersons.monchis.fragments.FranchisesFragment has leaked:\nGC ROOT static com.facebook.drawee.backends.pipeline.Fresco.sDraweeControllerBuilderSupplier\nreferences com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier.mContext\nreferences com.cibersons.monchis.activities.MainActivity.adapter\nreferences com.cibersons.monchis.adapter.TabAdapter.mCurrentPrimaryItem\nreferences com.cibersons.monchis.fragments.MainFragment.mChildFragmentManager\nreferences android.support.v4.app.FragmentManagerImpl.mCreatedMenus\nreferences java.util.ArrayList.array\nreferences array java.lang.Object[].[0]\nreferences com.cibersons.monchis.fragments.CategoriaFragment.tabAdapter\nreferences com.cibersons.monchis.adapter.TabAdapter.mFragments\nreferences java.util.ArrayList.array\nreferences array java.lang.Object[].[0]\nleaks com.cibersons.monchis.fragments.FranchisesFragment instance\n\nReference Key: 369d383f-503a-40d4-9a95-26b8379fe4f0\n\nDevice: samsung samsung SM-G355M kanas3gub\nAndroid Version: 4.4.2 API: 19 LeakCanary: 1.3.1\nDurations: watch=5062ms, gc=211ms, heap dump=1588ms, analysis=43497ms\n\nDetails:\n\nClass com.facebook.drawee.backends.pipeline.Fresco | static $staticOverhead = byte[] [id=0x41c79681;length=24;size=40] | static sDraweeControllerBuilderSupplier = com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier [id=0x4210b3e0]\nInstance of com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier | mBoundControllerListeners = null | mContext = com.cibersons.monchis.activities.MainActivity [id=0x41ade3a0] | mImagePipeline = com.facebook.imagepipeline.core.ImagePipeline [id=0x4210b400] | mPipelineDraweeControllerFactory = com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory [id=0x4210c9c8]\nInstance of com.cibersons.monchis.activities.MainActivity \n```\n", "url": "https://github.com/facebook/fresco/issues/1101", "user": "votagus", "labels": ["bug"], "created": "2016-03-31 16:40:17", "closed": "2016-09-07 10:49:18", "commits": {}, "ttf": 159.00027777777777, "commitsDetails": []}, {"title": "Nexus 5X Marshmallow OOM", "body": "I use fresco lib to load images to items in recycler view. It used to work on all test devices with any os version aboard. But i have OOM on LG Nexus 5X (Marshmallow). With memory monitor I found out that memory consumption raise up proportionally to items i scroll through and after the app reach 512M it freezes for a moment and crashes with OOM. I also have tried to inspect scrolling with network monitor, and I am  persuaded the app didn't load so many data from network.\n\n```\nClamp target GC heap from 527MB to 512MB\nAlloc concurrent mark sweep GC freed 2422(131KB) AllocSpace objects, 0(0B) LOS objects, 0% free, 511MB/512MB, paused 1.425ms total 42.172ms\nWaitForGcToComplete blocked for 181.671ms for cause Alloc\nStarting a blocking GC Alloc\nUncaught exception thrown by finalizer\nWaiting for a blocking GC Alloc\nWaiting for a blocking GC Alloc\nWaiting for a blocking GC Alloc\nWaiting for a blocking GC Alloc\nWaiting for a blocking GC Alloc\nWaiting for a blocking GC Alloc\nWaiting for a blocking GC Alloc\nWaiting for a blocking GC Alloc\nWaiting for a blocking GC Alloc\njava.lang.OutOfMemoryError: Failed to allocate a 24 byte allocation with 0 free bytes and -2640B until OOM\n                                                           at com.android.internal.os.BinderInternal$GcWatcher.finalize(BinderInternal.java:53)\n                                                           at java.lang.Daemons$FinalizerDaemon.doFinalize(Daemons.java:202)\n                                                           at java.lang.Daemons$FinalizerDaemon.run(Daemons.java:185)\n                                                           at java.lang.Thread.run(Thread.java:818)\n```\n\nCurrently Nexus 5x is the only device I can reproduce the issue.\nUsage case: initialize lib in app's onCreate and setImageURI to SimpleDraweeView bound via ButterKnife.\n", "url": "https://github.com/facebook/fresco/issues/1071", "user": "Roma-Lis", "labels": ["bug"], "created": "2016-03-21 14:12:26", "closed": "2017-07-11 16:37:07", "commits": {}, "ttf": 477.0002777777778, "commitsDetails": []}, {"title": "Error removing non-existent files from disk cache", "body": "Situation:\nGetting a lot of Warnings in my log about the inability to remove a cache file.\nExample:\n`W/System.err: remove failed: ENOENT (No such file or directory) : /data/data/[APPNAME]/cache/image_cache/v2.ols100.1/78/8WswI13U1FWU5wZ277Lpoy9XJ8w.cnt\nW/System.err: remove failed: ENOENT (No such file or directory) : /data/data/[APPNAME]/cache/image_cache/v2.ols100.1/98/jzeIB0BtOx8DNuaXVQ97hRELr0Q.cnt\n`\n- Fresco (0.9.0) initialised with following code:\n\n``` java\nFresco.initialize(this);\n```\n- And the request is done as following:\n\n``` java\n// Create the Image Request\nImageRequestBuilder requestBuilder = \nImageRequestBuilder.newBuilderWithSource(uri).setProgressiveRenderingEnabled(true);\n\nDraweeController controller = Fresco.newDraweeControllerBuilder()\n    .setImageRequest(requestBuilder.build())\n    .setOldController(view.getController())\n    .build();\n\nview.setController(controller);\n```\n\nThe images load correctly, but I get an error message for every image I load.\n", "url": "https://github.com/facebook/fresco/issues/1067", "user": "Mithrandir21", "labels": ["bug"], "created": "2016-03-18 11:47:37", "closed": "2018-01-19 11:50:54", "commits": {}, "ttf": 672.0002777777778, "commitsDetails": []}, {"title": "use SimpleDraweeView in popupwindow can not display", "body": "I use SimpleDraweeView in poppupwindow and use this method 'setImageURI' before 'new PopupWindow' .however, it can not display img in phone.\nBut , the button can call back onclick method before  'new PopupWindow' .\n", "url": "https://github.com/facebook/fresco/issues/1063", "user": "qindachang", "labels": ["bug"], "created": "2016-03-17 07:27:22", "closed": "2018-01-17 17:54:23", "commits": {}, "ttf": 671.0002777777778, "commitsDetails": []}, {"title": "java.lang.NoClassDefFoundError", "body": "phone\uff1avivo X510t Android 4.2.2\n\njava.lang.NoClassDefFoundError\ncom/facebook/imagepipeline/nativecode/JpegTranscoder\n\n03-11 11:01:35.139 13373 14295 E dalvikvm: dlopen(\"/mnt/asec/xxx-2/lib/libimagepipeline.so\") failed: Cannot load library: soinfo_link_image(linker.cpp:1635): could not load library \"libwebp.so\" needed by \"libimagepipeline.so\"; caused by load_library(linker.cpp:745): library \"libwebp.so\" not found\n\n03-11 11:01:35.139 13373 14295 W dalvikvm: Exception Ljava/lang/UnsatisfiedLinkError; thrown while initializing Lcom/facebook/imagepipeline/nativecode/JpegTranscoder;\n", "url": "https://github.com/facebook/fresco/issues/1050", "user": "jyh149129", "labels": ["bug"], "created": "2016-03-11 12:32:19", "closed": "2017-07-11 16:54:32", "commits": {}, "ttf": 487.0002777777778, "commitsDetails": []}, {"title": "Image is stretched When I set fresco:roundAsCircle=\"true\"and fresco:actualImageScaleType=\"center\"", "body": "<com.facebook.drawee.view.SimpleDraweeView\n                android:id=\"@+id/ivImage\"\n                android:layout_width=\"@dimen/px120\"\n                android:layout_height=\"@dimen/px120\"\n                fresco:roundAsCircle=\"true\"\n                fresco:actualImageScaleType=\"center\"/>\nwhen I set  fresco:roundAsCircle=\"false\" and fresco:actualImageScaleType=\"center\" ,It's OK.\nand fresco:roundAsCircle=\"true\" and fresco:actualImageScaleType=\"none\", It's also OK.\nonly when I set fresco:roundAsCircle=\"true\" and fresco:actualImageScaleType=\"centerInside\" Or \"Center\",the Image is Stretched.\n", "url": "https://github.com/facebook/fresco/issues/1048", "user": "qiuqiutang", "labels": ["bug"], "created": "2016-03-10 09:59:15", "closed": "2016-05-17 20:10:00", "commits": {}, "ttf": 68.00027777777778, "commitsDetails": []}, {"title": "image flashes when GPU rendering is not enforced", "body": "i turned off the \"enforce GPU rendering\" and use fresco to load image\nthe image flashes and got black frame when loading circle image\n", "url": "https://github.com/facebook/fresco/issues/1035", "user": "AllenVork", "labels": ["bug"], "created": "2016-03-04 08:26:14", "closed": "2017-07-11 16:15:21", "commits": {}, "ttf": 494.0002777777778, "commitsDetails": []}, {"title": "Listview showing wrong image when fast scrolling", "body": "I have custom listview. In listview contain 200 items. When i am scrolling fast from top to bottom Or bottom to top listview showing wrong image. If i am scrolling slowly then its work fine.\n\n**SimpleDraweeView in XML :**\n\n``` xml\n<com.facebook.drawee.view.SimpleDraweeView\n            android:id=\"@+id/fake_image_list_group\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"@dimen/note_list_item_height\"\n            android:background=\"@android:color/transparent\"\n            android:contentDescription=\"@string/app_name\" />\n```\n\n**Set Image URI to SimpleDraweeView :**\n\n``` java\nGenericDraweeHierarchy hierarchy = setHierarchyForDraweeView(mImageView, 300);\nhierarchy.setPlaceholderImage(new AsyncColorDrawable(context.getResources()));\n\nhierarchy.setFailureImage(mContext.getResources().getDrawable(R.drawable.broken_image_black));\nImageRequest imageRequest = ImageRequestBuilder.newBuilderWithSource(Uri.fromFile(new File(mPath/*local path*/)))\n        .setResizeOptions(new ResizeOptions(width, height)) \n        .setLocalThumbnailPreviewsEnabled(true) \n        .build(); \nDraweeController draweeController = Fresco.newDraweeControllerBuilder()\n        .setImageRequest(imageRequest) \n        .setOldController(mImageView.getController()) \n        .setAutoPlayAnimations(false) \n        .build(); \nmImageView.setController(draweeController);\n```\n\n**SetHierarchyForDraweeView Function :**\n\n``` java\nprivate GenericDraweeHierarchy setHierarchyForDraweeView(SimpleDraweeView draweeView, int duration) {\n    if (draweeView != null) {\n        if (draweeView.getHierarchy() == null) {\n            GenericDraweeHierarchyBuilder builder = new GenericDraweeHierarchyBuilder(mContext.getResources());\n            GenericDraweeHierarchy hierarchy = builder\n                    .setFadeDuration(duration)\n                    .setPlaceholderImage(new AsyncColorDrawable(mContext.getResources())) \n                    .setFailureImage(mContext.getResources().getDrawable(R.drawable.broken_image_black))\n                    .build(); \n            draweeView.setHierarchy(hierarchy);\n        } else { \n            GenericDraweeHierarchy hierarchy = draweeView.getHierarchy();\n            hierarchy.setFadeDuration(duration);\n            return hierarchy;\n        } \n    } \n    return null; \n}\n```\n\n**AsyncColorDrawable Class :**\n\n``` java\nprivate class AsyncColorDrawable extends ColorDrawable {\n    public AsyncColorDrawable(Resources res) {\n        super(res.getColor(R.color.application_container_background_color));\n    } \n}\n```\n\nIf i did anything wrong please figure it out. Thanks for advance.\nI am posting in stackoverflow also please refer below link\n\nhttp://stackoverflow.com/questions/35770109/fresco-listview-showing-wrong-image-when-fast-scrolling\n", "url": "https://github.com/facebook/fresco/issues/1033", "user": "karun2189", "labels": ["bug"], "created": "2016-03-03 10:54:07", "closed": "2018-07-11 13:58:46", "commits": {}, "ttf": 860.0002777777778, "commitsDetails": []}, {"title": "roundAsCircle does not apply when if a SimpleDraweeView is contained in a extended FrameLayout such as SwipeLayout", "body": "If a com.facebook.drawee.view.SimpleDraweeView is added in a SwipeLayout container, set fresco:roundAsCircle=\"true\" won't work. What's the problem? Is it necessary to add SwipeLayout manually?\n\nhttps://cloud.githubusercontent.com/assets/1421702/6934310/6529630e-d800-11e4-9f24-ec93e398de88.png\n", "url": "https://github.com/facebook/fresco/issues/1023", "user": "redmouth", "labels": ["bug"], "created": "2016-02-26 02:09:43", "closed": "2018-01-16 13:17:18", "commits": {}, "ttf": 690.0002777777778, "commitsDetails": []}, {"title": "Setting setProgressiveRenderingEnabled false does not work.", "body": "I want to remove the progressive rendering effect of jpg image. So I set ProgressiveRenderingEnabled false. I find the effect still appears.\npublic ImageRequest buildImageRequest() {\n        ImageRequest request;\n        if (mUri != null) {\n            request = ImageRequestBuilder.newBuilderWithSource(mUri).setAutoRotateEnabled(mIsAutoRotateEnabled)\n                    .setResizeOptions(mResizeOptions).setProgressiveRenderingEnabled(false).build();\n        } else {\n            request = ImageRequestBuilder.newBuilderWithResourceId(mResourceId)\n                    .setAutoRotateEnabled(mIsAutoRotateEnabled).setResizeOptions(mResizeOptions).setProgressiveRenderingEnabled(false).build();\n        }\n        return request;\n    }\n", "url": "https://github.com/facebook/fresco/issues/1017", "user": "HildaChen", "labels": ["bug"], "created": "2016-02-25 08:50:06", "closed": "2018-07-12 14:38:53", "commits": {}, "ttf": 868.0002777777778, "commitsDetails": []}, {"title": "Cannot load library .", "body": "The exception is raised when I try to run My App on Xolo.\nI have a list and I am using the library to load images from the URL. The images are large in size and hence I am using the Image re-sizing option. This crashes the app in Xolo. Please help.\n\n java.lang.UnsatisfiedLinkError: Cannot load library: soinfo_link_image(linker.cpp:1647): could not load library \"libwebp.so\" needed by \"libimagepipeline.so\"; caused by load_library(linker.cpp:757): library \"libwebp.so\" not found\n            at java.lang.Runtime.loadLibrary(Runtime.java:372)\n            at java.lang.System.loadLibrary(System.java:514)\n            at com.facebook.common.soloader.SoLoaderShim$DefaultHandler.loadLibrary(SoLoaderShim.java:32)\n            at com.facebook.common.soloader.SoLoaderShim.loadLibrary(SoLoaderShim.java:56)\n            at com.facebook.imagepipeline.nativecode.ImagePipelineNativeLoader.load(ImagePipelineNativeLoader.java:43)\n            at com.facebook.imagepipeline.nativecode.JpegTranscoder.<clinit>(JpegTranscoder.java:26)\n            at com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer.doTransform(ResizeAndRotateProducer.java:154)\n            at com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer.access$000(ResizeAndRotateProducer.java:72)\n            at com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$1.run(ResizeAndRotateProducer.java:89)\n            at com.facebook.imagepipeline.producers.JobScheduler.doJob(JobScheduler.java:207)\n            at com.facebook.imagepipeline.producers.JobScheduler.access$000(JobScheduler.java:27)\n            at com.facebook.imagepipeline.producers.JobScheduler$1.run(JobScheduler.java:78)\n            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)\n            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)\n            at com.facebook.imagepipeline.core.PriorityThreadFactory$1.run(PriorityThreadFactory.java:43)\n            at java.lang.Thread.run(Thread.java:838)\n", "url": "https://github.com/facebook/fresco/issues/1005", "user": "sahana-tib", "labels": ["bug", "duplicate"], "created": "2016-02-19 06:50:43", "closed": "2016-02-24 15:23:34", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "draweeview Rendering layer-list drawable problem", "body": "I meet such a question,I need use a layer-list drawable as PlaceholderImage or RetryImagebut I found the drawable is not rendering in one time ,It seems fresco rendering it one layer by one layer \uff0cand I can see the rendering process\uff0cit is werid,so is any body meet this question?\n## my drawable xml is below\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\" \n\n  <item \n        <shape android:shape=\"rectangle\"\n            <solid android:color=\"#f4f4f4\"\n            <size\n                android:width=\"200dp\"\n                android:height=\"200dp\"\n            </size\n        </shape\n    </item\n    <item \n        <bitmap android:src=\"@drawable/mt_default_normal\" android:gravity=\"center\"/\n    </item\n\n</layer-list\n## It seems it rendering the shape layer first then rendering bitmap layer later,,especially when tap to retry it will be very obvious\n", "url": "https://github.com/facebook/fresco/issues/998", "user": "levianye", "labels": ["bug"], "created": "2016-02-17 08:09:25", "closed": "2018-01-18 17:31:39", "commits": {}, "ttf": 701.0002777777778, "commitsDetails": []}, {"title": "Circular reveal animation with Fresco", "body": "I need to make a circular reveal animation after the image is loaded by fresco in my android app. I listen to the download events as described here; http://frescolib.org/docs/listening-download-events.html#_ In the onFinalImageSet event I run the reveal effect as described here; http://developer.android.com/training/material/animations.html\n\nThe image is not shown. When I put a debug log to the onFinalImageSet event, I see that it's calling repeatedly. When I comment out the reveal function it's only called once, and works as expected. Somehow reveal effect triggers fresco to load the image over and over.\n", "url": "https://github.com/facebook/fresco/issues/992", "user": "shareyourlocationsite", "labels": ["bug"], "created": "2016-02-15 19:47:54", "closed": "2018-07-12 14:51:46", "commits": {}, "ttf": 877.0002777777778, "commitsDetails": []}, {"title": "CacheStats getSize() returns -1", "body": "Hello,\n\nI try to get size of cache through :`\n\n`mDiskCacheUsedSize = Fresco.getImagePipelineFactory().getMainDiskStorageCache().getSize();`\n\nafter getting files through prefetchToDiskCache().\n\nAll is OK, except value return by .getSize() is -1, thus they are writed to disk cache.\n.isEnabled() return true.\n\nAfter the display of one image using drawee, .getSize return right value.\n\nhttp://frescolib.org/javadoc/reference/com/facebook/cache/disk/DiskStorageCache.html\nhttps://github.com/facebook/fresco/commits/master/imagepipeline-base/src/main/java/com/facebook/cache/disk/DiskStorageCache.java\n\nThis bug seems to be the same as https://github.com/facebook/fresco/issues/243\n\nBuilding cache through drawee and .getSize() is always OK.\n\nGreetings,\n\nEric\n", "url": "https://github.com/facebook/fresco/issues/984", "user": "eldk", "labels": ["bug"], "created": "2016-02-10 22:23:40", "closed": "2016-08-02 20:12:17", "commits": {}, "ttf": 173.00027777777777, "commitsDetails": []}, {"title": "SimpleDraweeView flickers if set to the same uri multiple times", "body": "I want to get the uri which a SimpleDraweeView has to determine to call setImageURI or not again.\nWhen I call setImageURI with the same uri multiple times, SimpleDraweeView flickers each time.\nSo, I want to call setImageURI when the uri is changed.\nCan I get the uri already been set to the SimpleDraweeView? or is there an other way to solve this problem?\nand Can I remove uri from the SimpleDraweeView?\n\nThanks.\n", "url": "https://github.com/facebook/fresco/issues/981", "user": "nallwhy", "labels": ["bug"], "created": "2016-02-09 04:19:08", "closed": "2018-01-17 17:51:05", "commits": {}, "ttf": 708.0002777777778, "commitsDetails": []}, {"title": "Memory leak in  Fresco.initialize(this)", "body": "In Fresco.initialize(this) will Initializes SimpleDraweeView,In SimpleDraweeView,there has a  static variable sDraweeControllerBuilderSupplier\uff0cand sDraweeControllerBuilderSupplier hold a variable mContext,finally leaks my activity instance.\n", "url": "https://github.com/facebook/fresco/issues/977", "user": "hiai", "labels": ["bug"], "created": "2016-02-05 07:29:25", "closed": "2016-09-07 10:49:24", "commits": {}, "ttf": 215.00027777777777, "commitsDetails": []}, {"title": "Memory leak during animation of GIF's in android", "body": "I consistently see memory leaks while integrating Fresco for playing Gifs in my app. The xml of the images is as follows : \n\n<Framelayout\n   <RelativeLayout\n     <TextView>\n     <com.facebook.drawee.view.SimpleDraweeView>\n    </RelativeLayout>\n   <TextView>\n</FrameLayout>\n\nWith the above XML layout, I then try and play a Gif using an asset file, using the code as follows :\n\n``````\ntry {\n            f = createFileFromInputStream(AndroidContext.getContext().getAssets().open(filepath));\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        try {\n            Uri uri = Uri.fromFile(f);\n            DraweeController controller = Fresco.newDraweeControllerBuilder()\n                    .setUri(uri)\n                    .setAutoPlayAnimations(true)\n                    .build();\n            gificons.setController(controller);\n            gificons.setHierarchy(hierarchy);\n            gificons.setVisibility(View.VISIBLE);\n            //gificons.setMinimumWidth(40);\n\n            Animatable animatable = gificons.getController().getAnimatable();\n            if (animatable != null) {\n                animatable.start();\n            }\n            gificons.requestLayout();\n            gificons.refreshDrawableState();\n``\n\nThe Gif plays fine but there is a lot of memory leak almost at the rate of 1 MB/min. I added more logging to check what was happening and was getting the following error : ```\n\n\n 82: initialize\n02-04 22:13:41.226 17386-17386/? V/unknown:AbstractDraweeController: controller 42456e80 82: onDetach\n02-04 22:13:41.226 17386-17386/? V/unknown:AbstractDraweeController: controller 42456e80 82: setHierarchy: null\n02-04 22:13:41.226 17386-17386/? V/unknown:AbstractDraweeController: controller 42456e80 82: setHierarchy: com.facebook.drawee.generic.GenericDraweeHierarchy@42453d08\n02-04 22:13:41.233 17386-17386/? V/unknown:AbstractDraweeController: controller 42456e80 82: onAttach: request needs submit\n02-04 22:13:41.233 17386-17386/? V/unknown:AbstractDraweeController: controller 42456e80 82: submitRequest: dataSource: 43b4e860\n02-04 22:13:41.233 17386-17386/? V/unknown:AbstractDraweeController: controller 42456e80 82: final_failed @ onFailure: failure: java.lang.NullPointerException: No image request was specified!\n\nThe Gif animates fine but there is a lot of memory leak and it slowly builds up.\n``````\n\n``\n", "url": "https://github.com/facebook/fresco/issues/976", "user": "vaibhav-46", "labels": ["bug"], "created": "2016-02-05 06:28:35", "closed": "2017-07-17 14:05:04", "commits": {}, "ttf": 528.0002777777778, "commitsDetails": []}, {"title": "AutoRotateEnabled is ignored when Postprocessor is set with request", "body": "This is maybe expected behavior, but I can't find where this documented then, I'm trying to implement custom resizing logic for image before sending file out over network (I use Pipeline directly with `imagePipeline.fetchDecodedImage(imageRequest, ...)` and sending bitmap over on the DataSource callback), I expect image rotation happens on the Decoding step before postprocessor takes that decoded `sourceBitmap`, but it is not rotated as exif info suggest. On the other hand if I take postprocessor out and add `setResizingOptions()` instead, the bitmap is rotated correctly on the DataSource callback. Am I missing something? Is there better way to do it?\n\n``` java\n        ImageRequest imageRequest = ImageRequestBuilder.newBuilderWithSource(contentURI)\n                .setAutoRotateEnabled(true)\n                .setPostprocessor(new BasePostprocessor() {\n                    @Override\n                    public CloseableReference<Bitmap> process(Bitmap sourceBitmap, PlatformBitmapFactory bitmapFactory) {\n                        float maxPixels = 1080 * 1080;\n                        int originalWidth = sourceBitmap.getWidth();\n                        int originalHeight = sourceBitmap.getHeight();\n                        float scaleFactor = (Math.min(maxPixels / (originalWidth * originalHeight), 1));\n                        CloseableReference<Bitmap> bitmapRef = bitmapFactory.createBitmap(\n                                ((int) (originalWidth * scaleFactor)),\n                                ((int) (originalHeight * scaleFactor)));\n                        try {\n                            Bitmap destBitmap = bitmapRef.get();\n                            for (int x = 0; x < destBitmap.getWidth(); x++) {\n                                for (int y = 0; y < destBitmap.getHeight(); y++) {\n                                    destBitmap.setPixel(x, y,\n                                            sourceBitmap.getPixel((int) (x / scaleFactor), (int) (y / scaleFactor)));\n                                }\n                            }\n                            return CloseableReference.cloneOrNull(bitmapRef);\n                        } finally {\n                            CloseableReference.closeSafely(bitmapRef);\n                        }\n                    }\n                })\n                .build();\n```\n", "url": "https://github.com/facebook/fresco/issues/962", "user": "maxchursin", "labels": ["bug"], "created": "2016-01-28 08:55:37", "closed": "2016-09-14 14:15:42", "commits": {}, "ttf": 230.00027777777777, "commitsDetails": []}, {"title": "java.lang.RuntimeException: Failed to pin Bitmap", "body": "Hello,\n\nI'm currently developing a news application where article teaser images are loaded in RecyclerView.\nFor some pictures Fresco is returning an error - java.lang.RuntimeException: Failed to pin Bitmap\n(Images linked with this error can't be displayed also outside the RecyclerView, it's not widget-specific)\n\nThis happens only for few images, like - http://i.imgur.com/AekhHyC.jpg,\nOnly on Android API 16,\nOnly on some devices like - Sony LT22i or Samsung Galaxy S2 (4.1.1) Genymotion emulator\n\nI'm attaching log for Fresco and looking forward for any feedback.\n\n```\n01-27 14:51:00.781 26981-26981/xxx V/unknown:AbstractDraweeController: controller 53a1c26c 0 -> 2: initialize\n01-27 14:51:00.785 26981-26981/xxx V/unknown:AbstractDraweeController: controller 53a1c26c 2: setHierarchy: null\n01-27 14:51:00.785 26981-26981/xxx V/unknown:AbstractDraweeController: controller 53a1c26c 2: setHierarchy: com.facebook.drawee.generic.GenericDraweeHierarchy@53583b80\n01-27 14:51:00.785 26981-26981/xxx V/unknown:AbstractDraweeController: controller 53a1c26c 2: onAttach: request needs submit\n01-27 14:51:00.785 26981-26981/xxx V/unknown:PipelineDraweeController: controller 53a1c26c: getDataSource\n01-27 14:51:00.785 26981-26981/xxx V/unknown:RequestLoggingListener: time 23593778: onRequestSubmit: {requestId: 2, callerContext: null, isPrefetch: false}\n01-27 14:51:00.785 26981-26981/xxx V/unknown:RequestLoggingListener: time 23593778: onProducerStart: {requestId: 2, producer: BitmapMemoryCacheGetProducer}\n01-27 14:51:00.785 26981-26981/xxx V/unknown:RequestLoggingListener: time 23593778: onProducerFinishWithSuccess: {requestId: 2, producer: BitmapMemoryCacheGetProducer, elapsedTime: 0 ms, extraMap: {cached_value_found=false}}\n01-27 14:51:00.785 26981-26981/xxx V/unknown:RequestLoggingListener: time 23593778: onProducerStart: {requestId: 2, producer: BackgroundThreadHandoffProducer}\n01-27 14:51:00.785 26981-26981/xxx V/unknown:AbstractDraweeController: controller 53a1c26c 2: submitRequest: dataSource: 535ab5a8\n01-27 14:51:00.785 26981-27420/xxx V/unknown:RequestLoggingListener: time 23593778: onProducerFinishWithSuccess: {requestId: 2, producer: BackgroundThreadHandoffProducer, elapsedTime: 0 ms, extraMap: null}\n01-27 14:51:00.793 26981-26981/xxx V/unknown:RequestLoggingListener: time 23593784: onRequestCancellation: {requestId: 1, elapsedTime: 517 ms}\n01-27 14:51:00.797 26981-26981/xxx V/unknown:AbstractDraweeController: controller 53a1e144 1 -> 3: initialize\n01-27 14:51:00.797 26981-26981/xxx V/unknown:AbstractDraweeController: controller 53a1e144 3: setHierarchy: null\n01-27 14:51:00.797 26981-26981/xxx V/unknown:AbstractDraweeController: controller 53a1e144 3: setHierarchy: com.facebook.drawee.generic.GenericDraweeHierarchy@53591798\n01-27 14:51:00.797 26981-26981/xxx V/unknown:AbstractDraweeController: controller 53a1e144 3: onAttach: request needs submit\n01-27 14:51:00.797 26981-26981/xxx V/unknown:PipelineDraweeController: controller 53a1e144: getDataSource\n01-27 14:51:00.797 26981-26981/xxx V/unknown:RequestLoggingListener: time 23593791: onRequestSubmit: {requestId: 3, callerContext: null, isPrefetch: false}\n01-27 14:51:00.797 26981-26981/xxx V/unknown:RequestLoggingListener: time 23593791: onProducerStart: {requestId: 3, producer: BitmapMemoryCacheGetProducer}\n01-27 14:51:00.797 26981-26981/xxx V/unknown:RequestLoggingListener: time 23593791: onProducerFinishWithSuccess: {requestId: 3, producer: BitmapMemoryCacheGetProducer, elapsedTime: 0 ms, extraMap: {cached_value_found=false}}\n01-27 14:51:00.801 26981-26981/xxx V/unknown:RequestLoggingListener: time 23593793: onProducerStart: {requestId: 3, producer: BackgroundThreadHandoffProducer}\n01-27 14:51:00.801 26981-26981/xxx V/unknown:AbstractDraweeController: controller 53a1e144 3: submitRequest: dataSource: 539bd9f0\n01-27 14:51:00.801 26981-27420/xxx V/unknown:RequestLoggingListener: time 23593793: onProducerFinishWithSuccess: {requestId: 3, producer: BackgroundThreadHandoffProducer, elapsedTime: 0 ms, extraMap: null}\n01-27 14:51:00.817 26981-26981/xxx D/OpenGLRenderer: TextureCache::get: create texture(0xb7b16fe8): name, size, mSize = 158, 540, 3142440\n01-27 14:51:00.893 26981-27422/xxx D/dalvikvm: Trying to load lib /data/data/xxx/lib/libmemchunk.so 0xa6a100b0\n01-27 14:51:00.893 26981-27422/xxx D/dalvikvm: Added shared lib /data/data/xxx/lib/libmemchunk.so 0xa6a100b0\n01-27 14:51:00.897 26981-27422/xxx V/unknown:NativeMemoryChunkPool: Used = (1, 1024); Free = (0, 0)\n01-27 14:51:00.897 26981-27422/xxx V/unknown:NativeMemoryChunkPool: get (alloc) (object, size) = (5355a918, 1024)\n01-27 14:51:00.897 26981-27422/xxx V/unknown:GenericByteArrayPool: Used = (1, 16384); Free = (0, 0)\n01-27 14:51:00.897 26981-27422/xxx V/unknown:GenericByteArrayPool: get (alloc) (object, size) = (5364981c, 16384)\n01-27 14:51:00.901 26981-27422/xxx V/unknown:NativeMemoryChunkPool: Used = (2, 17408); Free = (0, 0)\n01-27 14:51:00.901 26981-27422/xxx V/unknown:NativeMemoryChunkPool: get (alloc) (object, size) = (5357f718, 16384)\n01-27 14:51:00.901 26981-27422/xxx V/unknown:NativeMemoryChunkPool: release (reuse) (object, size) = (5355a918, 1024)\n01-27 14:51:00.901 26981-27422/xxx V/unknown:NativeMemoryChunkPool: Used = (1, 16384); Free = (1, 1024)\n01-27 14:51:00.941 26981-27422/xxx V/unknown:NativeMemoryChunkPool: Used = (2, 49152); Free = (1, 1024)\n01-27 14:51:00.941 26981-27422/xxx V/unknown:NativeMemoryChunkPool: get (alloc) (object, size) = (535b4e2c, 32768)\n01-27 14:51:00.941 26981-27422/xxx V/unknown:NativeMemoryChunkPool: release (reuse) (object, size) = (5357f718, 16384)\n01-27 14:51:00.941 26981-27422/xxx V/unknown:NativeMemoryChunkPool: Used = (1, 32768); Free = (2, 17408)\n01-27 14:51:00.941 26981-27422/xxx V/unknown:NativeMemoryChunkPool: Used = (2, 98304); Free = (2, 17408)\n01-27 14:51:00.941 26981-27422/xxx V/unknown:NativeMemoryChunkPool: get (alloc) (object, size) = (53975738, 65536)\n01-27 14:51:00.941 26981-27422/xxx V/unknown:NativeMemoryChunkPool: release (reuse) (object, size) = (535b4e2c, 32768)\n01-27 14:51:00.941 26981-27422/xxx V/unknown:NativeMemoryChunkPool: Used = (1, 65536); Free = (3, 50176)\n01-27 14:51:00.977 26981-27422/xxx V/unknown:NativeMemoryChunkPool: Used = (2, 196608); Free = (3, 50176)\n01-27 14:51:00.977 26981-27422/xxx V/unknown:NativeMemoryChunkPool: get (alloc) (object, size) = (5399410c, 131072)\n01-27 14:51:00.981 26981-27422/xxx V/unknown:NativeMemoryChunkPool: release (reuse) (object, size) = (53975738, 65536)\n01-27 14:51:00.981 26981-27422/xxx V/unknown:NativeMemoryChunkPool: Used = (1, 131072); Free = (4, 115712)\n01-27 14:51:01.033 26981-27422/xxx V/unknown:NativeMemoryChunkPool: Used = (2, 393216); Free = (4, 115712)\n01-27 14:51:01.033 26981-27422/xxx V/unknown:NativeMemoryChunkPool: get (alloc) (object, size) = (5396cfc0, 262144)\n01-27 14:51:01.033 26981-27422/xxx V/unknown:NativeMemoryChunkPool: release (reuse) (object, size) = (5399410c, 131072)\n01-27 14:51:01.033 26981-27422/xxx V/unknown:NativeMemoryChunkPool: Used = (1, 262144); Free = (5, 246784)\n01-27 14:51:01.057 26981-27422/xxx V/unknown:RequestLoggingListener: time 23594051: onProducerFinishWithSuccess: {requestId: 0, producer: NetworkFetchProducer, elapsedTime: 772 ms, extraMap: null}\n01-27 14:51:01.061 26981-27422/xxx I/dalvikvm: Could not find method android.graphics.Bitmap.getAllocationByteCount, referenced from method com.facebook.imageutils.BitmapUtil.getSizeInBytes\n01-27 14:51:01.061 26981-27422/xxx W/dalvikvm: VFY: unable to resolve virtual method 626: Landroid/graphics/Bitmap;.getAllocationByteCount ()I\n01-27 14:51:01.061 26981-27422/xxx D/dalvikvm: VFY: replacing opcode 0x6e at 0x000a\n01-27 14:51:01.065 26981-27422/xxx I/unknown:TiffUtil: Unsupported orientation\n01-27 14:51:01.065 26981-27422/xxx V/unknown:StagingArea: Count = 1\n01-27 14:51:01.065 26981-27444/xxx V/unknown:BufferedDiskCache: About to write to disk-cache for key http://i.imgur.com/AekhHyC.jpg\n01-27 14:51:01.073 26981-27422/xxx V/unknown:GenericByteArrayPool: release (reuse) (object, size) = (5364981c, 16384)\n01-27 14:51:01.073 26981-27422/xxx V/unknown:GenericByteArrayPool: Used = (0, 0); Free = (1, 16384)\n01-27 14:51:01.077 26981-27445/xxx V/unknown:RequestLoggingListener: time 23594070: onProducerStart: {requestId: 0, producer: DecodeProducer}\n01-27 14:51:01.085 26981-27445/xxx V/unknown:SoftRefByteArrayPool: Used = (1, 262144); Free = (0, 0)\n01-27 14:51:01.085 26981-27445/xxx V/unknown:SoftRefByteArrayPool: get (alloc) (object, size) = (538c297c, 262144)\n01-27 14:51:01.085 26981-27445/xxx V/unknown:SoftRefByteArrayPool: release (reuse) (object, size) = (538c297c, 262144)\n01-27 14:51:01.085 26981-27445/xxx V/unknown:SoftRefByteArrayPool: Used = (0, 0); Free = (1, 262144)\n01-27 14:51:01.089 26981-27445/xxx I/dalvikvm: Could not find method android.graphics.Bitmap.getAllocationByteCount, referenced from method com.facebook.imagepipeline.nativecode.Bitmaps.reconfigureBitmap\n01-27 14:51:01.089 26981-27445/xxx W/dalvikvm: VFY: unable to resolve virtual method 626: Landroid/graphics/Bitmap;.getAllocationByteCount ()I\n01-27 14:51:01.089 26981-27445/xxx D/dalvikvm: VFY: replacing opcode 0x6e at 0x0000\n01-27 14:51:01.089 26981-27445/xxx D/dalvikvm: Trying to load lib /data/data/xxx/lib/libbitmaps.so 0xa6a100b0\n01-27 14:51:01.089 26981-27445/xxx D/dalvikvm: Added shared lib /data/data/xxx/lib/libbitmaps.so 0xa6a100b0\n01-27 14:51:01.089 26981-27445/xxx W/unknown:RequestLoggingListener: time 23594082: onProducerFinishWithFailure: {requestId: 0, stage: DecodeProducer, elapsedTime: 12 ms, extraMap: {queueTime=10, imageType=DEFAULT, isFinal=true, hasGoodQuality=true}, throwable: java.lang.RuntimeException: Failed to pin Bitmap}\n01-27 14:51:01.093 26981-27444/xxx V/unknown:GenericByteArrayPool: Used = (1, 16384); Free = (0, 0)\n01-27 14:51:01.093 26981-27445/xxx W/unknown:RequestLoggingListener: time 23594085: onRequestFailure: {requestId: 2, elapsedTime: 307 ms, throwable: java.lang.RuntimeException: Failed to pin Bitmap}\n01-27 14:51:01.093 26981-27445/xxx W/unknown:RequestLoggingListener: time 23594085: onRequestFailure: {requestId: 3, elapsedTime: 294 ms, throwable: java.lang.RuntimeException: Failed to pin Bitmap}\n01-27 14:51:01.093 26981-27444/xxx V/unknown:GenericByteArrayPool: get (reuse) (object, size) = (5364981c, 16384)\n01-27 14:51:01.093 26981-27444/xxx V/unknown:GenericByteArrayPool: release (reuse) (object, size) = (5364981c, 16384)\n01-27 14:51:01.097 26981-27444/xxx V/unknown:GenericByteArrayPool: Used = (0, 0); Free = (1, 16384)\n01-27 14:51:01.097 26981-27444/xxx V/unknown:BufferedDiskCache: Successful disk-cache write for key http://i.imgur.com/AekhHyC.jpg\n01-27 14:51:01.097 26981-27444/xxx V/unknown:StagingArea: Count = 0\n01-27 14:51:01.177 26981-26981/xxx V/unknown:AbstractDraweeController: controller 53a1c26c 2: final_failed @ onFailure: failure: java.lang.RuntimeException: Failed to pin Bitmap\n01-27 14:51:01.177 26981-26981/xxx V/unknown:AbstractDraweeController: controller 53a1e144 3: final_failed @ onFailure: failure: java.lang.RuntimeException: Failed to pin Bitmap\n```\n", "url": "https://github.com/facebook/fresco/issues/960", "user": "platech", "labels": ["bug"], "created": "2016-01-27 15:03:44", "closed": "2018-01-15 14:49:24", "commits": {}, "ttf": 718.0002777777778, "commitsDetails": []}, {"title": "NoClassDefFoundError: GenericDraweeView.inflateHierarchy", "body": "java.lang.NoClassDefFoundError: com/facebook/drawee/R$styleable\n    at com.facebook.drawee.view.GenericDraweeView.inflateHierarchy(GenericDraweeView.java:128)\n    at com.facebook.drawee.view.GenericDraweeView.<init>(GenericDraweeView.java:77)\n    at com.facebook.drawee.view.SimpleDraweeView.<init>(SimpleDraweeView.java:60)\n    at sun.reflect.GeneratedConstructorAccessor124.newInstance(Unknown Source)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:422)\n    at org.jetbrains.android.uipreview.ViewLoader.createNewInstance(ViewLoader.java:458)\n    at org.jetbrains.android.uipreview.ViewLoader.loadClass(ViewLoader.java:170)\n    at org.jetbrains.android.uipreview.ViewLoader.loadView(ViewLoader.java:103)\n    at com.android.tools.idea.rendering.LayoutlibCallbackImpl.loadView(LayoutlibCallbackImpl.java:170)\n    at android.view.BridgeInflater.loadCustomView(BridgeInflater.java:247)\n    at android.view.BridgeInflater.createViewFromTag(BridgeInflater.java:171)\n    at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:704)\n    at android.view.LayoutInflater.rInflate_Original(LayoutInflater.java:835)\n    at android.view.LayoutInflater_Delegate.rInflate(LayoutInflater_Delegate.java:70)\n    at android.view.LayoutInflater.rInflate(LayoutInflater.java:811)\n    at android.view.LayoutInflater.rInflateChildren(LayoutInflater.java:798)\n    at android.view.LayoutInflater.rInflate_Original(LayoutInflater.java:838)\n    at android.view.LayoutInflater_Delegate.rInflate(LayoutInflater_Delegate.java:70)\n    at android.view.LayoutInflater.rInflate(LayoutInflater.java:811)\n    at android.view.LayoutInflater.rInflateChildren(LayoutInflater.java:798)\n    at android.view.LayoutInflater.rInflate_Original(LayoutInflater.java:838)\n    at android.view.LayoutInflater_Delegate.rInflate(LayoutInflater_Delegate.java:70)\n    at android.view.LayoutInflater.rInflate(LayoutInflater.java:811)\n    at android.view.LayoutInflater.rInflateChildren(LayoutInflater.java:798)\n    at android.view.LayoutInflater.rInflate_Original(LayoutInflater.java:838)\n    at android.view.LayoutInflater_Delegate.rInflate(LayoutInflater_Delegate.java:70)\n    at android.view.LayoutInflater.rInflate(LayoutInflater.java:811)\n    at android.view.LayoutInflater.rInflateChildren(LayoutInflater.java:798)\n    at android.view.LayoutInflater.rInflate_Original(LayoutInflater.java:838)\n    at android.view.LayoutInflater_Delegate.rInflate(LayoutInflater_Delegate.java:70)\n    at android.view.LayoutInflater.rInflate(LayoutInflater.java:811)\n    at android.view.LayoutInflater.rInflateChildren(LayoutInflater.java:798)\n    at android.view.LayoutInflater.inflate(LayoutInflater.java:515)\n    at android.view.LayoutInflater.inflate(LayoutInflater.java:394)\n    at com.android.layoutlib.bridge.impl.RenderSessionImpl.inflate(RenderSessionImpl.java:223)\n    at com.android.layoutlib.bridge.Bridge.createSession(Bridge.java:426)\n    at com.android.ide.common.rendering.LayoutLibrary.createSession(LayoutLibrary.java:350)\n    at com.android.tools.idea.rendering.RenderTask$2.compute(RenderTask.java:510)\n    at com.android.tools.idea.rendering.RenderTask$2.compute(RenderTask.java:498)\n    at com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(ApplicationImpl.java:888)\n    at com.android.tools.idea.rendering.RenderTask.createRenderSession(RenderTask.java:498)\n    at com.android.tools.idea.rendering.RenderTask.access$600(RenderTask.java:72)\n    at com.android.tools.idea.rendering.RenderTask$3.call(RenderTask.java:610)\n    at com.android.tools.idea.rendering.RenderTask$3.call(RenderTask.java:607)\n    at com.android.tools.idea.rendering.RenderService.runRenderAction(RenderService.java:362)\n    at com.android.tools.idea.rendering.RenderTask.render(RenderTask.java:607)\n    at com.android.tools.idea.rendering.RenderTask.render(RenderTask.java:629)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager.doRender(AndroidLayoutPreviewToolWindowManager.java:652)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager.access$1700(AndroidLayoutPreviewToolWindowManager.java:80)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager$7$1.run(AndroidLayoutPreviewToolWindowManager.java:594)\n    at com.intellij.openapi.progress.impl.CoreProgressManager$2.run(CoreProgressManager.java:152)\n    at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:452)\n    at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:402)\n    at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:54)\n    at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:137)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager$7.run(AndroidLayoutPreviewToolWindowManager.java:589)\n    at com.intellij.util.ui.update.MergingUpdateQueue.execute(MergingUpdateQueue.java:320)\n    at com.intellij.util.ui.update.MergingUpdateQueue.execute(MergingUpdateQueue.java:310)\n    at com.intellij.util.ui.update.MergingUpdateQueue$2.run(MergingUpdateQueue.java:254)\n    at com.intellij.util.ui.update.MergingUpdateQueue.flush(MergingUpdateQueue.java:269)\n    at com.intellij.util.ui.update.MergingUpdateQueue.flush(MergingUpdateQueue.java:227)\n    at com.intellij.util.ui.update.MergingUpdateQueue.run(MergingUpdateQueue.java:217)\n    at com.intellij.util.concurrency.QueueProcessor.runSafely(QueueProcessor.java:238)\n    at com.intellij.util.Alarm$Request$1.run(Alarm.java:351)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n", "url": "https://github.com/facebook/fresco/issues/945", "user": "dotingcode", "labels": ["bug", "build"], "created": "2016-01-23 03:02:19", "closed": "2017-07-11 11:51:35", "commits": {}, "ttf": 535.0002777777778, "commitsDetails": []}, {"title": "java.lang.ExceptionInInitializerError after update 0.9.0", "body": "01-19 10:47:56.855: E/AndroidRuntime(30977): java.lang.ExceptionInInitializerError\n01-19 10:47:56.855: E/AndroidRuntime(30977):    at com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer.doTransform(ResizeAndRotateProducer.java:154)\n01-19 10:47:56.855: E/AndroidRuntime(30977):    at com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer.access$000(ResizeAndRotateProducer.java:72)\n01-19 10:47:56.855: E/AndroidRuntime(30977):    at com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$1.run(ResizeAndRotateProducer.java:89)\n01-19 10:47:56.855: E/AndroidRuntime(30977):    at com.facebook.imagepipeline.producers.JobScheduler.doJob(JobScheduler.java:207)\n01-19 10:47:56.855: E/AndroidRuntime(30977):    at com.facebook.imagepipeline.producers.JobScheduler.access$000(JobScheduler.java:27)\n01-19 10:47:56.855: E/AndroidRuntime(30977):    at com.facebook.imagepipeline.producers.JobScheduler$1.run(JobScheduler.java:78)\n01-19 10:47:56.855: E/AndroidRuntime(30977):    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)\n01-19 10:47:56.855: E/AndroidRuntime(30977):    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)\n01-19 10:47:56.855: E/AndroidRuntime(30977):    at com.facebook.imagepipeline.core.PriorityThreadFactory$1.run(PriorityThreadFactory.java:43)\n01-19 10:47:56.855: E/AndroidRuntime(30977):    at java.lang.Thread.run(Thread.java:856)\n01-19 10:47:56.855: E/AndroidRuntime(30977): Caused by: java.lang.UnsatisfiedLinkError: Cannot load library: link_image[1892]:  1946 could not load needed library 'libwebp.so' for 'libimagepipeline.so' (load_library[1094]: Library 'libwebp.so' not found)\n01-19 10:47:56.855: E/AndroidRuntime(30977):    at java.lang.Runtime.loadLibrary(Runtime.java:370)\n01-19 10:47:56.855: E/AndroidRuntime(30977):    at java.lang.System.loadLibrary(System.java:535)\n01-19 10:47:56.855: E/AndroidRuntime(30977):    at com.facebook.common.soloader.SoLoaderShim$DefaultHandler.loadLibrary(SoLoaderShim.java:32)\n01-19 10:47:56.855: E/AndroidRuntime(30977):    at com.facebook.common.soloader.SoLoaderShim.loadLibrary(SoLoaderShim.java:56)\n01-19 10:47:56.855: E/AndroidRuntime(30977):    at com.facebook.imagepipeline.nativecode.ImagePipelineNativeLoader.load(ImagePipelineNativeLoader.java:43)\n01-19 10:47:56.855: E/AndroidRuntime(30977):    at com.facebook.imagepipeline.nativecode.JpegTranscoder.<clinit>(JpegTranscoder.java:26)\n01-19 10:47:56.855: E/AndroidRuntime(30977):    ... 10 more\ndevice : samsung note2;dev tool: eclipse; android4.1.2\n", "url": "https://github.com/facebook/fresco/issues/933", "user": "wangmeng1989", "labels": ["bug"], "created": "2016-01-19 02:52:34", "closed": "2016-04-13 16:37:43", "commits": {}, "ttf": 85.00027777777778, "commitsDetails": []}, {"title": "Error inflating class com.facebook.drawee.view.SimpleDraweeView after restore application", "body": "Steps: \n1 - launch application with target 23 on Android 6\n2 - adb shell bmgr fullbackup PACKAGE\n3 - adb shell bmgr restore PACKAGE\n4 - launch application - crash\n\nLibrary initialized in Application class in onCreate\n\n```\n  Caused by: android.view.InflateException: Binary XML file line #79: Binary XML file line #31: Binary XML file line #7: Binary XML file line #7: Error inflating class com.facebook.drawee.view.SimpleDraweeView\n                                                       at android.view.LayoutInflater.inflate(LayoutInflater.java:539)\n                                                       at android.view.LayoutInflater.inflate(LayoutInflater.java:423)\n                                                       at android.view.LayoutInflater.inflate(LayoutInflater.java:374)\n                                                       at android.support.v7.app.AppCompatDelegateImplV7.setContentView(AppCompatDelegateImplV7.java:256)\n                                                       at android.support.v7.app.AppCompatActivity.setContentView(AppCompatActivity.java:109)\n```\n", "url": "https://github.com/facebook/fresco/issues/929", "user": "nikslushkin", "labels": ["bug", "needs-details"], "created": "2016-01-18 10:05:26", "closed": "2016-05-23 10:41:23", "commits": {}, "ttf": 126.00027777777778, "commitsDetails": []}, {"title": "Use current image as placeholder for the next image, part 2", "body": "I have the same issue as in the #236.\n\nBut the solution provided did not work - i have a FLICKER when replacing the image.\n\nFirst, I load the thumbnail. After that (on user action) I start loading the original image with low res image request set to thumbnail (that is already loaded). But I have the flicker anyway.\n\nIs there any way to just keep the existing image and set the new one when it is ready?\n\nP.S. Please note that I am also resizing the original image (replacing datasource could be tricky)\n", "url": "https://github.com/facebook/fresco/issues/908", "user": "ealymbaev", "labels": ["bug", "needs-details"], "created": "2016-01-13 05:53:12", "closed": "2016-01-31 12:03:53", "commits": {}, "ttf": 18.00027777777778, "commitsDetails": []}, {"title": "testLowDiskSpace always checks internal storage", "body": "DiskStorageCache testLowDiskSpace always pass StatFsHelper.StorageType.INTERNAL can not pass EXTERNAL\n\n``` java\n  /**\n   * Helper method that sets the cache size limit to be either a high, or a low limit.\n   * If there is not enough free space to satisfy the high limit, it is set to the low limit.\n   */\n  @GuardedBy(\"mLock\")\n  private void updateFileCacheSizeLimit() {\n    // Test if mCacheSizeLimit can be set to the high limit\n    boolean isAvailableSpaceLowerThanHighLimit =\n        mStatFsHelper.testLowDiskSpace(\n            StatFsHelper.StorageType.INTERNAL,\n            mDefaultCacheSizeLimit - mCacheStats.getSize());\n    if (isAvailableSpaceLowerThanHighLimit) {\n      mCacheSizeLimit = mLowDiskSpaceCacheSizeLimit;\n    } else {\n      mCacheSizeLimit = mDefaultCacheSizeLimit;\n    }\n  }\n```\n", "url": "https://github.com/facebook/fresco/issues/898", "user": "LiuDeng", "labels": ["bug"], "created": "2016-01-09 06:33:45", "closed": "2016-09-27 10:33:32", "commits": {}, "ttf": 262.0002777777778, "commitsDetails": []}, {"title": "Post processed images aren't properly cached", "body": "Our Android app has a dialog with a list. Each list item has the same icon in either green or gray. When the dialog is opened, we're seeing a fade-in animation for all but one icon even though the dialog has been opened before and all icons should already be in the cache.\n\nIt seems that the cache for post processed images isn't working properly. Therefore, the images are not taken from the postprocessor cache. Instead, a background process takes them from the cache with the original images, reruns the postprocessing and displays them with an animation.\n\nWe use the post processor to color the icons in either green or gray. The initial icon is downloaded as a PNG file from our remote server.\n\nOur suspicion is that the code in PostprocessedBitmapMemoryCacheProducer.java at line 134 could be the cause. This code is called when an image has been successfully postprocessed. Instead of removing an existing image with the given key and reinserting it, it removes all images of the given post processor. Does that make sense? \n\nThe relevant code in the dialog is:\n\n```\nprotected SimpleDraweeView iconView;\nprotected ColorIconPostProcessor inactiveColorProcessor;\nprotected ColorIconPostProcessor activeColorProcessor;\n\n...\n\niconView = (SimpleDraweeView) view.findViewById(R.id.icon)\nactiveColorProcessor = new ColorIconPostProcessor(this.activeColor);\ninactiveColorProcessor = new ColorIconPostProcessor(this.inactiveColor);\n\n...\n\nImageRequestBuilder builder = ImageRequestBuilder.newBuilderWithSource(uri)\n    builder.setPostprocessor(isActive ? this.activeColorProcessor : this.inactiveColorProcessor);\nImageRequest request = builder.build();\nPipelineDraweeController controller = (PipelineDraweeController)\n    Fresco.newDraweeControllerBuilder()\n        .setImageRequest(request)\n        .setOldController(iconView.getController())\n        .build();\niconView.setController(controller);\n```\n\n---\n\n```\npublic class ColorIconPostProcessor extends BasePostprocessor {\n\n    private int color;\n\n    public ColorIconPostProcessor(int color) {\n        this.color = color;\n    }\n\n    @Override\n    public String getName() {\n        return \"colorPostProcessor\";\n    }\n\n    @Override\n    public void process(Bitmap destBitmap, Bitmap sourceBitmap) {\n        destBitmap.setHasAlpha(true);\n        Canvas canvas = new Canvas(destBitmap);\n        Paint p = new Paint(Paint.ANTI_ALIAS_FLAG);\n        PorterDuffColorFilter pdf = new PorterDuffColorFilter(color, PorterDuff.Mode.SRC_ATOP);\n        p.setColorFilter(pdf);\n        canvas.drawBitmap(sourceBitmap, 0, 0, p);\n    }\n\n    @Override\n    public CacheKey getPostprocessorCacheKey() {\n        return new SimpleCacheKey(String.format(\"iconcolor-%d\", color));\n    }\n}\n```\n", "url": "https://github.com/facebook/fresco/issues/895", "user": "manuelbl", "labels": ["bug"], "created": "2016-01-08 13:10:07", "closed": "2016-03-03 15:11:43", "commits": {}, "ttf": 55.000277777777775, "commitsDetails": []}, {"title": "Incorrect cache hit when uri parameters change", "body": "as fresco developer often use setImage to show image.but the uri is chaged sometimes when uri contains session .and then the cacheKey is new .there will be a new request.but the image dose not change. \njust like \nhttps://www.XXX.com/download/5805189589510567654\nand\nhttps://www.XXX.com/download/5805189589510567654?jsession=58adasfadse589510567654\nthe same image\n", "url": "https://github.com/facebook/fresco/issues/878", "user": "devzhan", "labels": ["bug"], "created": "2016-01-05 10:07:10", "closed": "2017-09-04 09:42:58", "commits": {}, "ttf": 607.0002777777778, "commitsDetails": []}, {"title": "Setting .setDownsampleEnabled(true) prevents pictures to auto-rotate", "body": "I had trouble with auto-rotating pictures with orientation in their exif, but figured out that downsampling was causing troubles. \n", "url": "https://github.com/facebook/fresco/issues/876", "user": "aleien", "labels": ["bug"], "created": "2016-01-04 18:40:21", "closed": "2016-09-14 14:48:29", "commits": {}, "ttf": 253.00027777777777, "commitsDetails": []}, {"title": "Square image in Horizontal Listview", "body": "**I am attempting to create a XML code for a SimpleDraweeView to display a square image in different RecyclerViews**.\n\n``` java\n<com.facebook.drawee.view.SimpleDraweeView\n   android:id=\"@+id/card_item_image\"\n   android:layout_width=\"match_parent\"\n   android:layout_height=\"wrap_content\"\n   fresco:actualImageScaleType=\"centerCrop\"\n   fresco:viewAspectRatio=\"1\"/>\n```\n\nI can achieve square images in any type of **vertical** list.\nMy issue is that if I attempt to use this layout for any **horizontal** lists, the SimpleDraweeView is not present.\n\n(The image below shows 3 lists. The first is a horizontal list, while the two lists below are vertical.)\n![screenshot](https://cloud.githubusercontent.com/assets/7038451/12050325/9eb9b174-aeeb-11e5-9134-f07fde9b0065.png)\n\nI understand that Fresco has issues when it comes to not setting width and/or height.\nIf I set the Width to wrap, nothing is show, so _viewAspectRatio_ only works when it has a width.\n\nIs there a workaround for this and can this be altered to accommodate square image based on available height instead of width?\n", "url": "https://github.com/facebook/fresco/issues/873", "user": "Mithrandir21", "labels": ["bug", "help wanted"], "created": "2015-12-30 11:57:18", "closed": "2018-01-18 17:21:29", "commits": {}, "ttf": 750.0002777777778, "commitsDetails": []}, {"title": "Cant display image on HUAWEI H60-L02", "body": "the device run Android4.4.2. i am not sure what the problem cause. But it was done well on other devices.\nhere is the log I found when open the app,and the screenshot:\n![20151229115503](https://cloud.githubusercontent.com/assets/6705440/12029331/4fe26168-ae23-11e5-80de-4b8ff433b6bf.png)\n![20151229115552](https://cloud.githubusercontent.com/assets/6705440/12029332/55c5acf2-ae23-11e5-9296-7402af5ce197.png)\n", "url": "https://github.com/facebook/fresco/issues/867", "user": "DankeLuo", "labels": ["bug"], "created": "2015-12-29 03:39:27", "closed": "2017-07-11 11:58:04", "commits": {}, "ttf": 560.0002777777778, "commitsDetails": []}, {"title": "java.lang.OutOfMemoryError", "body": "java.lang.OutOfMemoryError\n\nat com.facebook.imagepipeline.memory.GenericByteArrayPool.alloc(GenericByteArrayPool.java:67)\nat com.facebook.imagepipeline.memory.GenericByteArrayPool.alloc(GenericByteArrayPool.java:29)\nat com.facebook.imagepipeline.memory.BasePool.get(BasePool.java:259)\nat com.facebook.imagepipeline.memory.FlexByteArrayPool.get(FlexByteArrayPool.java:51)\nat com.facebook.imagepipeline.platform.KitKatPurgeableDecoder.decodeJPEGByteArrayAsPurgeable(KitKatPurgeableDecoder.java:85)\nat com.facebook.imagepipeline.platform.DalvikPurgeableDecoder.decodeJPEGFromEncodedImage(DalvikPurgeableDecoder.java:89)\nat com.facebook.imagepipeline.platform.KitKatPurgeableDecoder.decodeJPEGFromEncodedImage(KitKatPurgeableDecoder.java:32)\nat com.facebook.imagepipeline.decoder.ImageDecoder.decodeJpeg(ImageDecoder.java:151)\nat com.facebook.imagepipeline.decoder.ImageDecoder.decodeImage(ImageDecoder.java:85)\nat com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder.doDecode(DecodeProducer.java:188)\nat com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder.access$200(DecodeProducer.java:96)\nat com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$1.run(DecodeProducer.java:128)\nat com.facebook.imagepipeline.producers.JobScheduler.doJob(JobScheduler.java:207)\nat com.facebook.imagepipeline.producers.JobScheduler.access$000(JobScheduler.java:27)\nat com.facebook.imagepipeline.producers.JobScheduler$1.run(JobScheduler.java:78)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)\nat com.facebook.imagepipeline.core.PriorityThreadFactory$1.run(PriorityThreadFactory.java:43)\nat java.lang.Thread.run(Thread.java:856)\n\nThe problem occurs when the list is sliding fast.\nFresco 0.8.1\n", "url": "https://github.com/facebook/fresco/issues/865", "user": "YuhuihuiYang", "labels": ["bug"], "created": "2015-12-28 01:25:26", "closed": "2017-09-04 09:58:32", "commits": {}, "ttf": 616.0002777777778, "commitsDetails": []}, {"title": "Erasing cache from android app manager make  prefetchToDiskCache() have a strange behavior", "body": "Hello,\n\nErasing cache from android app manager make  prefetchToDiskCache() have a strange behavior : some uris are not fetched thus dataSource is called and return isFinished().\n\nGoal : prefetchToDiskCache() for a list of Uris\n\n1 - On first install and first run of app : all uris are well prefetched.\n\n2 - Go to Android app manager and erase cache (not app data)\n\n3 - relaunch prefetchToDiskCache() : some uris return isFinished() threw BaseDataSubscriber and onNewResultImpl() thus nothing has been downloaded. Always 16 uris from a list of 52 uris.\n\nfor (int i = 0; i < finalListNotInCache_2.length(); i++) {\n            JSONObject json_obj = null;\n            try {\n                json_obj = finalListNotInCache_2.getJSONObject(i);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n           Uri urlImage = null;\n            try {\n                urlImage = Uri.parse(json_obj.getString(\"IMAGE\"));\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n            ImagePipeline imagePipeline = Fresco.getImagePipeline();\n            ImageRequest request = ImageRequestBuilder\n                    .newBuilderWithSource(urlImage)\n                    .setResizeOptions(new ResizeOptions(4096, 4096)\n                    .build();\n            //initiate prefetch\n            `DataSource<Void> prefetchDataSource = imagePipeline.prefetchToDiskCache(request, this);`\n        Log.d(\"TEST PREFETCH_1\", String.valueOf(prefetchDataSource) + \" url: \" + String.valueOf(urlImage));\n\n```\n        final Uri finalUrlImage = urlImage;\n\n        DataSubscriber<Void> subscriber = new BaseDataSubscriber<Void>() {\n            @Override\n            protected void onNewResultImpl(DataSource<Void> prefetchDataSource) {\n                if (!prefetchDataSource.isFinished()) {\n                    Log.d(\"TEST PROGRESS_1 : \", String.valueOf(prefetchDataSource) + \"progress :\" + String.valueOf(prefetchDataSource.getProgress()) + \" url: \" + String.valueOf(countImages) + \" - \" + finalUrlImage);\n                    return;\n                }\n                addOneMoreImage(); // ajoute 1 au compteur d'images countImages\n                Log.d(\"TEST PROGRESS_2 : \", String.valueOf(prefetchDataS`ource) + \" url: \" + String.valueOf(countImages) + \" - \" + finalUrlImage);\n                tvNombreImagesInCache.setText(String.valueOf(nombreImagesInCache + countImages));\n                tvNombreImagesNotInCache.setText(String.valueOf(nombreImagesNotInCache - countImages));\n                prefetchDataSource.close();\n                if (prefetchDataSource.isClosed()) {\n\n                    Log.d(\"TEST_IS_CLOSED_2 : \", String.valueOf(prefetchDataSource) + \" url: \" + String.valueOf(countImages) + \" - \" + finalUrlImage);\n\n                }\n\n\n            }\n\n            @Override\n            protected void onFailureImpl(DataSource<Void> dataSource) {\n                Throwable t = dataSource.getFailureCause();\n                Log.d(\"TEST FAILURE : \", \" url: \" + finalUrlImage + \"T :\" + t);\n                // handle failure\n\n            }\n\n        };\n        prefetchDataSource.subscribe(subscriber, UiThreadImmediateExecutorService.getInstance());  //CallerThreadExecutor.getInstance() utilise UI pour update compteurs - UiThreadImmediateExecutorService.getInstance()\n\n       }\n```\n\nIs there something I missed ?\n\nGreatings,\nEric\n", "url": "https://github.com/facebook/fresco/issues/862", "user": "eldk", "labels": ["bug"], "created": "2015-12-26 15:33:08", "closed": "2016-01-07 15:38:19", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "Ripple PressedStateOverlay works just once.", "body": "I make the drawable resource.\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<ripple xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:color=\"?attr/colorControlHighlight\"/>\n```\n\nand set into DraweeHierarchy.\n\n```\nDrawable drawable = getResources().getDrawable(R.drawable.ripple);\nGenericDraweeHierarchy hierarchy = GenericDraweeHierarchyBuilder.newInstance(getResources())\n                .setPressedStateOverlay(drawable)\n                .setActualImageScaleType(ScalingUtils.ScaleType.FIT_CENTER)\n                .build();\ndraweeView.setHierarchy(hierarchy);\n```\n\nand then touch the draweeview, It works just once with no ripple effect(just showing colored rect).\n\nCan I solve this problem ? \n", "url": "https://github.com/facebook/fresco/issues/858", "user": "tonyjs", "labels": ["bug"], "created": "2015-12-24 06:28:18", "closed": "2016-01-20 15:51:01", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "How can I retain the progress image until decoding has finished?", "body": "My application should be show the large size image, so I add the progress drawable into hierarchy.\nBut It has fade out before image showing up.\n\nI find the issue https://github.com/facebook/fresco/issues/797 but can't find any hint.\n\nAt least I only want to know whether the decoding image started.\n", "url": "https://github.com/facebook/fresco/issues/851", "user": "tonyjs", "labels": ["bug"], "created": "2015-12-21 10:13:50", "closed": "2015-12-21 16:35:57", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "java.lang.RuntimeException: Canvas: trying to use a recycled bitmap-BasePostprocessor", "body": "```\n12-21 11:01:14.045: E/AndroidRuntime(6819): java.lang.RuntimeException: Canvas: trying to use a recycled bitmap android.graphics.Bitmap@41801038\n12-21 11:01:14.045: E/AndroidRuntime(6819):     at android.graphics.Canvas.throwIfCannotDraw(Canvas.java:1084)\n12-21 11:01:14.045: E/AndroidRuntime(6819):     at android.view.GLES20Canvas.drawBitmap(GLES20Canvas.java:844)\n12-21 11:01:14.045: E/AndroidRuntime(6819):     at android.graphics.drawable.BitmapDrawable.draw(BitmapDrawable.java:490)\n12-21 11:01:14.045: E/AndroidRuntime(6819):     at android.widget.ImageView.onDraw(ImageView.java:1037)\n12-21 11:01:14.045: E/AndroidRuntime(6819):     at android.view.View.draw(View.java:14465)\n12-21 11:01:14.045: E/AndroidRuntime(6819):     at android.view.View.getDisplayList(View.java:13362)\n12-21 11:01:14.045: E/AndroidRuntime(6819):     at android.view.View.getDisplayList(View.java:13404)\n12-21 11:01:14.045: E/AndroidRuntime(6819):     at android.view.View.draw(View.java:14182)\n12-21 11:01:14.045: E/AndroidRuntime(6819):     at android.view.ViewGroup.drawChild(ViewGroup.java:3103)\n12-21 11:01:14.045: E/AndroidRuntime(6819):     at android.view.ViewGroup.dispatchDraw(ViewGroup.java:2940)\n12-21 11:01:14.045: E/AndroidRuntime(6819):     at android.widget.AbsListView.dispatchDraw(AbsListView.java:2458)\n```\n\nI build a new class and make it extends BasePostprocessor, I do nothing in it. But when it ran, the sample throw the above exception; I just use imagepipeline to download the image, don't use the simpledraweeview.\n\n``` java\ncom.facebook.imagepipeline.request.ImageRequestBuilder requestBuilder = com.facebook.imagepipeline.request.ImageRequestBuilder\n                .newBuilderWithSource(uri);\n\n        if (imageRequest.getTargetWidth() > 0 && imageRequest.getTargetHeight() > 0) {\n            requestBuilder.setResizeOptions(new com.facebook.imagepipeline.common.ResizeOptions(imageRequest\n                    .getTargetWidth(), imageRequest.getTargetHeight()));\n        }\n\n        requestBuilder.setAutoRotateEnabled(true);\n        requestBuilder.setPostprocessor(new FPostProcessor(getImageConfig()));\n\n\npublic class FPostProcessor extends BasePostprocessor{\n\n    private FImageConfig mImageConfig;\n\n    public FPostProcessor(FImageConfig imageConfig){\n        mImageConfig = imageConfig;\n    }\n    /*\n    @Override\n    public CloseableReference<Bitmap> process(Bitmap sourceBitmap, PlatformBitmapFactory bitmapFactory) {\n        return super.process(sourceBitmap, bitmapFactory);\n    }*/\n    }\n```\n", "url": "https://github.com/facebook/fresco/issues/850", "user": "HildaChen", "labels": ["bug"], "created": "2015-12-21 03:12:39", "closed": "2017-07-17 15:19:00", "commits": {}, "ttf": 574.0002777777778, "commitsDetails": []}, {"title": "Post-processed images with roundedCornerRadius xml attribute will lead to OOM in Android 5.0+", "body": "I am post-processing images in order to apply a blur effect. I would like these images to have a rounded corner radius as well. On Android 5.0 and up this seems to be an issue. On 4.x devices, this is a non-issue.\n\nHere is my xml:\n\n```\n<com.facebook.drawee.view.SimpleDraweeView\n        android:id=\"@+id/list_item_simpledraweeview\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"60dp\"\n        fresco:overlayImage=\"@drawable/overlay\"\n        fresco:roundedCornerRadius=\"3dp\"/>\n```\n\nI have 16 images in a RecyclerView. The following code is without post-processing and works as expected. In Android Studio's memory monitor, when scrolling through the images and back, the memory usage is constant.\n\n```\nImageRequest request = ImageRequestBuilder.newBuilderWithSource(uri)\n            .setResizeOptions(new ResizeOptions(width, height))\n            .build();\nPipelineDraweeController controller = (PipelineDraweeController) Fresco.newDraweeControllerBuilder()\n            .setOldController(simpleDraweeView.getController())\n            .setImageRequest(request)\n            .build();\nsimpleDraweeView.setController(controller);\n```\n\nThe moment I change the ImageRequest to \n\n```\nImageRequest request = ImageRequestBuilder.newBuilderWithSource(uri)\n            .setPostprocessor(new BlurPostProcessor())\n            .setResizeOptions(new ResizeOptions(width, height))\n            .build();\n```\n\n...things start to get wonky. \n\nThe first thing I notice is in the memory management tool of Android Studio - the memory is on a steady incline when scrolling through the images now. Pressing the Garbage Collection button does nothing to free up memory. If I remove the `roundedCornerRadius` attribute from the xml, the memory looks fine to me - Android Studio shows a constant horizontal line of memory usage. \n\nThe second thing I notice is that the blurred images take a second to come in to view when scrolling back through the images in the RecyclerView. I can see the overlay drawable before the blurred image for a split second. I have read the documentation on caching post-processed images, and believe I am abiding by the rules to this, using the following in my BlurPostProcessor (extends `BasePostprocessor`) : \n\n```\nprivate final SimpleCacheKey mCacheKey = new SimpleCacheKey(\"Blur\");\n@Override\npublic CacheKey getPostprocessorCacheKey() {\n    return mCacheKey;\n}\n```\n\nI have a `ImageCacheStatsTracker` and notice `onBitmapCacheMiss` gets called - shouldn't the images be in the bitmap cache when using the above? When these are not post-processed, this is the case.\n\nI am more concerned about the first issue, as increasing the memory usage will eventually lead to an OOM. Please advise on what I can do to correct both of these!\n", "url": "https://github.com/facebook/fresco/issues/844", "user": "kevinzetterstrom", "labels": ["bug"], "created": "2015-12-17 17:07:04", "closed": "2017-07-11 16:35:05", "commits": {}, "ttf": 571.0002777777778, "commitsDetails": []}, {"title": "Image size can exceeds the limit after resize, causing 'Bitmap too large to be uploaded into a texture'", "body": "I'd like to display an image as large as possible within the limit, so I decided to write code as following:\n\n``` java\nImageRequest req = ImageRequestBuilder.newBuilderWithSource(Uri.parse(NETWORK_IMAGE_URL))\n        .setResizeOptions(new ResizeOptions(2048, 2048))\n        .build();\n\nSimpleDraweeView v = (SimpleDraweeView) holder.itemView;\nv.setAspectRatio(IMAGE_ASPECT_RATIO);\n\nDraweeController ctrl = Fresco.newDraweeControllerBuilder()\n        .setOldController(v.getController())\n        .setImageRequest(req)\n        .setAutoPlayAnimations(true)\n        .build();\n\nv.setController(ctrl);\n```\n\nWhen I run above code with the image whose dimension is 720px*2478px, it is not displayed on the screen but getting following logcat message:\n\n```\nW/OpenGLRenderer: Bitmap too large to be uploaded into a texture (630x2169, max=2048x2048)\n```\n\nSo I checked the `imagepipeline` to see what is happening in the resize procedure, found something weird in generating the numerator.\n\nThe numerator is generated In the method `getScaleNumerator(ImageRequest, EncodedImage)` from `ResizeAndRotateProducer` class, which calls `roundNumerator(float)` to get numerator from the ratio generated from `determineResizeRatio(ResizeOptions, int, int).\n\nWhile getting a numerator value from `roundNumerator(float)` method, it adds extra `ROUNDUP_FRACTION` to `maxRatio * JpegTranscoder.SCALE_DENOMINATOR`, causing the numerator be more than the expected in some cases.\n\nI tracked the value from each process, and the result is as follows:\n\nIn `getScaleNumerator()`:\n- `determineResizeRatio()` returned `0.82647294`\n- `roundNumerator()` returned `7`\n\nIn `doTransform()`\n- numerator is genrated from `getScaleNumerator()`\n- With the numerator `7`, `JpegTranscoder` resizes the image into 7/8 of its original size, results resized one has a size of 630px*2169px.\n\nWhile the final image's height has larger than the limit (`BitmapUtil.MAX_BITMAP_SIZE`), it will not be shown on the screen.\n\nWhen I remove adding the `ROUNDUP_FRACTION` in method `roundNumerator(float)`, it generates a numerator of `6`, which resizes the image smaller than the limit(2048px), results final image size of 540px \\* 1859px.\n\nHere's a question:\n- Why additional `ROUNDUP_FRACTION` is required in generating the numerator?\n- If adding `ROUNDUP_FRACTION` is intended and cannot be modified, how can I avoid the above error?\n", "url": "https://github.com/facebook/fresco/issues/840", "user": "kunny", "labels": ["bug", "starter-task"], "created": "2015-12-16 08:47:30", "closed": "2016-11-02 14:40:24", "commits": {}, "ttf": 322.0002777777778, "commitsDetails": []}, {"title": "The method \"onNewResult\" will be call many times when the progress is \"1.0\"", "body": "```\nsource = Fresco.getImagePipeline().fetchEncodedImage(originalRequest, this);\nsource.subscribe(new DataSubscriberAdapter<CloseableReference<PooledByteBuffer>>() {\n    @Override\n    public void onNewResult(DataSource<CloseableReference<PooledByteBuffer>> dataSource) {\n        Logger.d(TAG, \"onNewResult:\" + dataSource.getProgress() + \"/\" + dataSource.isFinished());\n    }\n}, XRApplication.FRESCO_EXECUTOR);\n```\n\nThe output like this :\n\n```\n12-16 13:29:46.550 6380-6955onNewResult:0.0/false\n12-16 13:29:46.650 6380-6954onNewResult:0.2808174/false\n12-16 13:29:46.751 6380-6955onNewResult:0.4336596/false\n12-16 13:29:46.851 6380-6955onNewResult:0.54892427/false\n12-16 13:29:46.956 6380-6954onNewResult:0.65890694/false\n12-16 13:29:47.058 6380-6954onNewResult:0.7313968/false\n12-16 13:29:47.163 6380-6954onNewResult:0.7928102/false\n12-16 13:29:47.269 6380-6955onNewResult:0.83959925/false\n12-16 13:29:47.370 6380-6955onNewResult:0.87115175/false\n12-16 13:29:47.476 6380-6954onNewResult:0.90000546/false\n12-16 13:29:47.584 6380-6954onNewResult:0.9248448/false\n12-16 13:29:47.700 6380-6954onNewResult:0.94050366/false\n12-16 13:29:47.800 6380-6955onNewResult:0.9552829/false\n12-16 13:29:47.906 6380-6955onNewResult:0.96459985/false\n12-16 13:29:48.009 6380-6954onNewResult:0.9733935/false\n12-16 13:29:48.117 6380-6954onNewResult:0.97893703/false\n12-16 13:29:48.222 6380-6955onNewResult:0.98416924/false\n12-16 13:29:48.333 6380-6955onNewResult:0.9877888/false\n12-16 13:29:48.438 6380-6954onNewResult:0.99058074/false\n12-16 13:29:48.544 6380-6954onNewResult:0.9925433/false\n12-16 13:29:48.655 6380-6955onNewResult:0.9942482/false\n12-16 13:29:48.759 6380-6954onNewResult:0.995677/false\n12-16 13:29:48.868 6380-6954onNewResult:0.9966654/false\n12-16 13:29:48.973 6380-6954onNewResult:0.9974278/false\n12-16 13:29:49.080 6380-6954onNewResult:0.9979637/false\n12-16 13:29:49.186 6380-6955onNewResult:0.9984293/false\n12-16 13:29:49.292 6380-6954onNewResult:0.9988195/false\n12-16 13:29:49.399 6380-6954onNewResult:0.9990894/false\n12-16 13:29:49.509 6380-6954onNewResult:0.99927914/false\n12-16 13:29:49.612 6380-6955onNewResult:0.9994582/false\n12-16 13:29:49.721 6380-6955onNewResult:0.9995711/false\n12-16 13:29:49.828 6380-6955onNewResult:0.99966913/false\n12-16 13:29:49.935 6380-6954onNewResult:0.9997448/false\n12-16 13:29:50.043 6380-6954onNewResult:0.9998031/false\n12-16 13:29:50.146 6380-6955onNewResult:0.99985206/false\n12-16 13:29:50.256 6380-6955onNewResult:0.9998829/false\n12-16 13:29:51.798 6380-6954onNewResult:0.99989164/false\n12-16 13:29:51.912 6380-6955onNewResult:0.9999355/false\n12-16 13:29:52.039 6380-6955onNewResult:0.99996716/false\n12-16 13:29:52.170 6380-6954onNewResult:0.99997467/false\n12-16 13:29:52.275 6380-6955onNewResult:0.99998045/false\n12-16 13:29:52.390 6380-6955onNewResult:0.9999855/false\n12-16 13:29:52.501 6380-6954onNewResult:0.9999884/false\n12-16 13:29:52.607 6380-6955onNewResult:0.9999931/false\n12-16 13:29:52.790 6380-6954onNewResult:0.9999993/false\n12-16 13:29:52.893 6380-6954onNewResult:0.9999996/false\n12-16 13:29:53.002 6380-6955onNewResult:0.9999997/false\n12-16 13:29:53.111 6380-6955onNewResult:0.99999976/false\n12-16 13:29:53.214 6380-6954onNewResult:0.9999998/false\n12-16 13:29:53.323 6380-6954onNewResult:0.9999999/false\n12-16 13:29:53.430 6380-6954onNewResult:0.9999999/false\n12-16 13:29:53.535 6380-6954onNewResult:0.99999994/false\n12-16 13:29:53.643 6380-6954onNewResult:0.99999994/false\n12-16 13:29:53.750 6380-6954onNewResult:0.99999994/false\n12-16 13:29:53.858 6380-6954onNewResult:0.99999994/false\n12-16 13:29:53.965 6380-6954onNewResult:1.0/false\n12-16 13:29:54.071 6380-6955onNewResult:1.0/false\n12-16 13:29:54.178 6380-6954onNewResult:1.0/false\n12-16 13:29:54.281 6380-6954onNewResult:1.0/false\n12-16 13:29:54.389 6380-6954onNewResult:1.0/false\n12-16 13:29:54.500 6380-6954onNewResult:1.0/false\n12-16 13:29:54.605 6380-6955onNewResult:1.0/false\n12-16 13:29:54.710 6380-6955onNewResult:1.0/false\n12-16 13:29:54.820 6380-6955onNewResult:1.0/false\n12-16 13:29:54.926 6380-6955onNewResult:1.0/false\n12-16 13:29:55.034 6380-6955onNewResult:1.0/false\n12-16 13:29:55.137 6380-6954onNewResult:1.0/false\n12-16 13:29:55.243 6380-6954onNewResult:1.0/false\n12-16 13:29:55.354 6380-6954onNewResult:1.0/false\n12-16 13:29:55.459 6380-6955onNewResult:1.0/false\n12-16 13:29:55.559 6380-6955onNewResult:1.0/false\n12-16 13:29:55.665 6380-6954onNewResult:1.0/false\n12-16 13:29:55.775 6380-6954onNewResult:1.0/false\n12-16 13:29:55.880 6380-6955onNewResult:1.0/false\n12-16 13:29:55.989 6380-6954onNewResult:1.0/false\n12-16 13:29:58.735 6380-6955onNewResult:1.0/false\n12-16 13:29:58.835 6380-6955onNewResult:1.0/false\n12-16 13:29:58.935 6380-6955onNewResult:1.0/false\n12-16 13:29:59.036 6380-6955onNewResult:1.0/false\n12-16 13:29:59.138 6380-6954onNewResult:1.0/false\n12-16 13:29:59.236 6380-6955onNewResult:1.0/false\n12-16 13:29:59.337 6380-6954onNewResult:1.0/false\n12-16 13:29:59.440 6380-6955onNewResult:1.0/false\n12-16 13:30:00.730 6380-6954onNewResult:1.0/false\n12-16 13:30:00.841 6380-6955onNewResult:1.0/false\n12-16 13:30:00.944 6380-6955onNewResult:1.0/false\n12-16 13:30:01.045 6380-6955onNewResult:1.0/false\n12-16 13:30:01.149 6380-6954onNewResult:1.0/false\n12-16 13:30:01.249 6380-6955onNewResult:1.0/false\n12-16 13:30:01.352 6380-6955onNewResult:1.0/false\n12-16 13:30:01.460 6380-6955onNewResult:1.0/false\n12-16 13:30:01.568 6380-6955onNewResult:1.0/false\n12-16 13:30:01.669 6380-6954onNewResult:1.0/false\n12-16 13:30:01.771 6380-6955onNewResult:1.0/false\n12-16 13:30:01.873 6380-6954onNewResult:1.0/false\n12-16 13:30:01.973 6380-6955onNewResult:1.0/false\n12-16 13:30:02.081 6380-6954onNewResult:1.0/false\n12-16 13:30:02.188 6380-6954onNewResult:1.0/false\n12-16 13:30:02.288 6380-6955onNewResult:1.0/false\n12-16 13:30:02.392 6380-6955onNewResult:1.0/false\n12-16 13:30:02.501 6380-6955onNewResult:1.0/false\n12-16 13:30:02.602 6380-6955onNewResult:1.0/false\n12-16 13:30:02.702 6380-6955onNewResult:1.0/false\n12-16 13:30:02.806 6380-6954onNewResult:1.0/false\n12-16 13:30:02.916 6380-6955onNewResult:1.0/false\n12-16 13:30:03.027 6380-6955onNewResult:1.0/false\n12-16 13:30:03.131 6380-6955onNewResult:1.0/false\n12-16 13:30:03.235 6380-6955onNewResult:1.0/false\n12-16 13:30:03.342 6380-6955onNewResult:1.0/false\n12-16 13:30:03.443 6380-6954onNewResult:1.0/false\n12-16 13:30:03.548 6380-6954onNewResult:1.0/false\n12-16 13:30:03.661 6380-6954onNewResult:1.0/false\n12-16 13:30:03.760 6380-6954onNewResult:1.0/false\n12-16 13:30:03.862 6380-6955onNewResult:1.0/false\n12-16 13:30:03.964 6380-6954onNewResult:1.0/false\n12-16 13:30:04.070 6380-6955onNewResult:1.0/false\n12-16 13:30:04.178 6380-6955onNewResult:1.0/false\n12-16 13:30:04.285 6380-6954onNewResult:1.0/false\n12-16 13:30:04.391 6380-6955onNewResult:1.0/false\n12-16 13:30:04.495 6380-6954onNewResult:1.0/false\n12-16 13:30:04.602 6380-6955onNewResult:1.0/false\n12-16 13:30:04.710 6380-6955onNewResult:1.0/false\n12-16 13:30:04.820 6380-6955onNewResult:1.0/false\n12-16 13:30:04.927 6380-6954onNewResult:1.0/false\n12-16 13:30:05.033 6380-6955onNewResult:1.0/false\n12-16 13:30:05.138 6380-6954onNewResult:1.0/false\n12-16 13:30:06.044 6380-6955onNewResult:1.0/false\n12-16 13:30:06.146 6380-6954onNewResult:1.0/false\n12-16 13:30:06.245 6380-6954onNewResult:1.0/false\n12-16 13:30:06.349 6380-6955onNewResult:1.0/false\n12-16 13:30:06.459 6380-6955onNewResult:1.0/false\n12-16 13:30:06.560 6380-6955onNewResult:1.0/false\n12-16 13:30:06.678 6380-6954onNewResult:1.0/false\n12-16 13:30:06.777 6380-6955onNewResult:1.0/false\n12-16 13:30:06.881 6380-6955onNewResult:1.0/false\n12-16 13:30:06.989 6380-6954onNewResult:1.0/false\n12-16 13:30:07.094 6380-6954onNewResult:1.0/false\n12-16 13:30:07.200 6380-6955onNewResult:1.0/false\n12-16 13:30:07.306 6380-6954onNewResult:1.0/false\n12-16 13:30:07.416 6380-6954onNewResult:1.0/false\n12-16 13:30:07.523 6380-6954onNewResult:1.0/false\n12-16 13:30:07.631 6380-6954onNewResult:1.0/false\n12-16 13:30:07.734 6380-6954onNewResult:1.0/false\n12-16 13:30:07.835 6380-6955onNewResult:1.0/false\n12-16 13:30:07.937 6380-6954onNewResult:1.0/false\n12-16 13:30:08.045 6380-6955onNewResult:1.0/false\n12-16 13:30:08.148 6380-6954onNewResult:1.0/false\n12-16 13:30:08.251 6380-6954onNewResult:1.0/false\n12-16 13:30:08.357 6380-6954onNewResult:1.0/false\n12-16 13:30:09.237 6380-6955onNewResult:1.0/false\n12-16 13:30:09.340 6380-6955onNewResult:1.0/false\n12-16 13:30:09.439 6380-6954onNewResult:1.0/false\n12-16 13:30:09.541 6380-6954onNewResult:1.0/false\n12-16 13:30:09.646 6380-6954onNewResult:1.0/false\n12-16 13:30:09.746 6380-6954onNewResult:1.0/false\n12-16 13:30:09.847 6380-6954onNewResult:1.0/false\n12-16 13:30:09.951 6380-6955onNewResult:1.0/false\n12-16 13:30:10.056 6380-6954onNewResult:1.0/false\n12-16 13:30:10.168 6380-6954onNewResult:1.0/false\n12-16 13:30:10.275 6380-6954onNewResult:1.0/false\n12-16 13:30:10.379 6380-6954onNewResult:1.0/false\n12-16 13:30:10.483 6380-6954onNewResult:1.0/false\n12-16 13:30:10.594 6380-6955onNewResult:1.0/false\n12-16 13:30:10.700 6380-6954onNewResult:1.0/false\n12-16 13:30:10.802 6380-6954onNewResult:1.0/false\n12-16 13:30:10.910 6380-6954onNewResult:1.0/false\n12-16 13:30:12.149 6380-6954onNewResult:1.0/false\n12-16 13:30:12.252 6380-6955onNewResult:1.0/false\n12-16 13:30:12.358 6380-6955onNewResult:1.0/false\n12-16 13:30:12.459 6380-6954onNewResult:1.0/false\n12-16 13:30:12.561 6380-6955onNewResult:1.0/false\n12-16 13:30:13.108 6380-6955onNewResult:1.0/false\n12-16 13:30:13.565 6380-6955onNewResult:1.0/false\n12-16 13:30:13.666 6380-6954onNewResult:1.0/false\n12-16 13:30:13.775 6380-6955onNewResult:1.0/false\n12-16 13:30:13.880 6380-6955onNewResult:1.0/false\n12-16 13:30:13.985 6380-6954onNewResult:1.0/false\n12-16 13:30:14.090 6380-6955onNewResult:1.0/false\n12-16 13:30:14.195 6380-6955onNewResult:1.0/false\n12-16 13:30:14.300 6380-6955onNewResult:1.0/false\n12-16 13:30:14.409 6380-6954onNewResult:1.0/false\n12-16 13:30:14.516 6380-6954onNewResult:1.0/false\n12-16 13:30:14.616 6380-6954onNewResult:1.0/false\n12-16 13:30:14.719 6380-6954onNewResult:1.0/false\n12-16 13:30:14.827 6380-6955onNewResult:1.0/false\n12-16 13:30:14.932 6380-6955onNewResult:1.0/false\n12-16 13:30:15.031 6380-6955onNewResult:1.0/false\n12-16 13:30:15.140 6380-6955onNewResult:1.0/false\n12-16 13:30:15.246 6380-6955onNewResult:1.0/false\n12-16 13:30:15.350 6380-6955onNewResult:1.0/false\n12-16 13:30:15.455 6380-6955onNewResult:1.0/false\n12-16 13:30:15.560 6380-6954onNewResult:1.0/false\n12-16 13:30:15.672 6380-6955onNewResult:1.0/false\n12-16 13:30:15.779 6380-6954onNewResult:1.0/false\n12-16 13:30:15.887 6380-6954onNewResult:1.0/false\n12-16 13:30:15.987 6380-6955onNewResult:1.0/false\n12-16 13:30:16.088 6380-6955onNewResult:1.0/false\n12-16 13:30:16.194 6380-6954onNewResult:1.0/false\n12-16 13:30:16.305 6380-6955onNewResult:1.0/false\n12-16 13:30:16.408 6380-6954onNewResult:1.0/false\n12-16 13:30:16.512 6380-6954onNewResult:1.0/false\n12-16 13:30:16.617 6380-6954onNewResult:1.0/false\n12-16 13:30:16.720 6380-6955onNewResult:1.0/false\n12-16 13:30:16.833 6380-6955onNewResult:1.0/false\n12-16 13:30:16.945 6380-6955onNewResult:1.0/false\n12-16 13:30:17.046 6380-6955onNewResult:1.0/false\n12-16 13:30:17.148 6380-6954onNewResult:1.0/false\n12-16 13:30:17.259 6380-6954onNewResult:1.0/false\n12-16 13:30:17.361 6380-6955onNewResult:1.0/false\n12-16 13:30:17.465 6380-6955onNewResult:1.0/false\n12-16 13:30:17.568 6380-6955onNewResult:1.0/false\n12-16 13:30:17.669 6380-6954onNewResult:1.0/false\n12-16 13:30:17.775 6380-6954onNewResult:1.0/false\n12-16 13:30:17.880 6380-6955onNewResult:1.0/false\n12-16 13:30:17.980 6380-6954onNewResult:1.0/false\n12-16 13:30:18.081 6380-6954onNewResult:1.0/false\n12-16 13:30:18.189 6380-6955onNewResult:1.0/false\n12-16 13:30:18.299 6380-6954onNewResult:1.0/false\n12-16 13:30:18.399 6380-6955onNewResult:1.0/false\n12-16 13:30:18.500 6380-6955onNewResult:1.0/false\n12-16 13:30:18.601 6380-6954onNewResult:1.0/false\n12-16 13:30:18.708 6380-6954onNewResult:1.0/false\n12-16 13:30:18.808 6380-6954onNewResult:1.0/false\n12-16 13:30:18.916 6380-6954onNewResult:1.0/false\n12-16 13:30:19.024 6380-6955onNewResult:1.0/false\n12-16 13:30:19.127 6380-6955onNewResult:1.0/false\n12-16 13:30:19.228 6380-6955onNewResult:1.0/false\n12-16 13:30:19.333 6380-6955onNewResult:1.0/false\n12-16 13:30:19.438 6380-6955onNewResult:1.0/false\n12-16 13:30:19.545 6380-6955onNewResult:1.0/false\n12-16 13:30:19.648 6380-6955onNewResult:1.0/false\n12-16 13:30:19.755 6380-6954onNewResult:1.0/false\n12-16 13:30:19.859 6380-6954onNewResult:1.0/false\n12-16 13:30:19.964 6380-6955onNewResult:1.0/false\n12-16 13:30:20.071 6380-6954onNewResult:1.0/false\n12-16 13:30:20.184 6380-6955onNewResult:1.0/false\n12-16 13:30:20.284 6380-6955onNewResult:1.0/false\n12-16 13:30:20.394 6380-6954onNewResult:1.0/false\n12-16 13:30:20.500 6380-6955onNewResult:1.0/false\n12-16 13:30:20.606 6380-6955onNewResult:1.0/false\n12-16 13:30:20.723 6380-6955onNewResult:1.0/false\n12-16 13:30:20.827 6380-6955onNewResult:1.0/false\n12-16 13:30:20.928 6380-6954onNewResult:1.0/false\n12-16 13:30:21.033 6380-6955onNewResult:1.0/false\n12-16 13:30:21.069 6380-6955onNewResult:1.0/true\n```\n\nThis situation will appear when download the large picture. such as 5M+.\nSo I must wait for a time when the progress is 100%. Is this an issue?\n", "url": "https://github.com/facebook/fresco/issues/839", "user": "minetsh", "labels": ["bug"], "created": "2015-12-16 05:36:30", "closed": "2017-07-12 17:05:22", "commits": {}, "ttf": 574.0002777777778, "commitsDetails": []}, {"title": "Error when rotating the view with animated image", "body": "![jp479 tj0j _q vu3 s](https://cloud.githubusercontent.com/assets/1498653/11803725/75442126-a338-11e5-929a-72e2efd72373.png)\n\nsome android telephone will has this issue.\n1. the view was set as \"Crop\" and loading animated image(like gif).\n2. when rotate the view, it will happen to see the image out of view rect\n", "url": "https://github.com/facebook/fresco/issues/838", "user": "0kai", "labels": ["bug"], "created": "2015-12-15 06:36:25", "closed": "2017-07-17 14:44:31", "commits": {}, "ttf": 580.0002777777778, "commitsDetails": []}, {"title": " java.lang.Throwable: Explicit termination method 'close' not called", "body": "I got the exception:\n\n```\nE/StrictMode: A resource was acquired at attached stack trace but never released. See java.io.Closeable for information on avoiding resource leaks.\n                                                            java.lang.Throwable: Explicit termination method 'close' not called\n                                                                at dalvik.system.CloseGuard.open(CloseGuard.java:180)\n                                                                at android.content.ContentResolver$CursorWrapperInner.<init>(ContentResolver.java:2507)\n                                                                at android.content.ContentResolver.query(ContentResolver.java:515)\n                                                                at android.content.ContentResolver.query(ContentResolver.java:434)\n                                                                at com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(LocalExifThumbnailProducer.java:149)\n                                                                at com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getExifInterface(LocalExifThumbnailProducer.java:112)\n                                                                at com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1.getResult(LocalExifThumbnailProducer.java:81)\n                                                                at com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1.getResult(LocalExifThumbnailProducer.java:75)\n                                                                at com.facebook.common.executors.StatefulRunnable.run(StatefulRunnable.java:45)\n                                                                at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\n                                                                at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\n                                                                at java.lang.Thread.run(Thread.java:818)\n```\n", "url": "https://github.com/facebook/fresco/issues/823", "user": "atomd-zz", "labels": ["bug"], "created": "2015-12-09 09:38:57", "closed": "2017-07-11 16:23:20", "commits": {}, "ttf": 580.0002777777778, "commitsDetails": []}, {"title": "Glitches on some images on Nexus 4", "body": "![zshlo2hpx](https://cloud.githubusercontent.com/assets/1539296/11662136/e8e6befa-9ddd-11e5-910c-bbfd0323bf10.png)\nSome images have those distinctive stripes on them. I can provide original photo if needed\n", "url": "https://github.com/facebook/fresco/issues/819", "user": "defHLT", "labels": ["bug"], "created": "2015-12-08 17:01:14", "closed": "2017-09-04 09:58:49", "commits": {}, "ttf": 635.0002777777778, "commitsDetails": []}, {"title": "Attempt to decode failed or corrupted images", "body": "Fresco can not get the correct format of some images that I can open in my laptop.\nHere is the error log:\n\n```\n12-01 16:35:11.535 29714-29887/io.egg.now.alpha V/unknown:BufferedDiskCache: Successful read from disk cache for http://xxx.xxx.xxx/d/8d653663fc7d4406980a16bae1409132/151130?_upp=2&_upt=8b58d32f1449062748\n12-01 16:35:11.535 29714-29887/io.egg.now.alpha V/unknown:RequestLoggingListener: time 95579973: onProducerFinishWithSuccess: {requestId: 52, producer: DiskCacheProducer, elapsedTime: 5 ms, extraMap: {cached_value_found=true}}\n12-01 16:35:11.536 29714-29887/io.egg.now.alpha D/skia: --- SkImageDecoder::Factory returned null\n12-01 16:35:11.536 29714-29889/io.egg.now.alpha V/unknown:RequestLoggingListener: time 95579974: onProducerStart: {requestId: 52, producer: DecodeProducer}\n12-01 16:35:11.536 29714-29889/io.egg.now.alpha W/unknown:RequestLoggingListener: time 95579974: onProducerFinishWithFailure: {requestId: 52, stage: DecodeProducer, elapsedTime: 0 ms, extraMap: {hasGoodQuality=true, queueTime=0, isFinal=true}, throwable: java.lang.IllegalArgumentException: unknown image format}\n12-01 16:35:11.536 29714-29889/io.egg.now.alpha W/unknown:RequestLoggingListener: time 95579974: onRequestFailure: {requestId: 52, elapsedTime: 11 ms, throwable: java.lang.IllegalArgumentException: unknown image format}\n12-01 16:35:11.777 29714-29714/io.egg.now.alpha V/unknown:AbstractDraweeController: controller 24cccc28 38: final_failed @ onFailure: failure: java.lang.IllegalArgumentException: unknown image format\n```\n", "url": "https://github.com/facebook/fresco/issues/805", "user": "atomd-zz", "labels": ["bug"], "created": "2015-12-01 08:45:24", "closed": "2017-09-04 09:57:03", "commits": {}, "ttf": 643.0002777777778, "commitsDetails": []}, {"title": "0.8.1 is not on JCenter", "body": "Could not find any version that matches com.facebook.fresco:fresco:0.8.1+.\n           Versions that do not match:\n               0.8.0\n               0.7.0\n               0.6.1\n               0.6.0\n               0.5.3\n               + 7 more\n           Searched in the following locations:\n               https://jcenter.bintray.com/com/facebook/fresco/fresco/maven-metadata.xml\n", "url": "https://github.com/facebook/fresco/issues/792", "user": "ICECHN", "labels": ["bug"], "created": "2015-11-26 10:00:09", "closed": "2015-11-30 10:25:41", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "AnimatedDrawable ignores setDither() and setFilterBitmap()", "body": "AnimatedDrawable ignores setDither() and setFilterBitmap(), it does not override the methods and does not set it to it's mPaint.\n\nAnimatedDrawable should override\n\n```\n  @Override\n  public void setDither(final boolean dither) {\n    mPaint.setDither(dither);\n    doInvalidateSelf();\n  }\n\n  @Override\n  public void setFilterBitmap(final boolean filterBitmap) {\n    mPaint.setFilterBitmap(filterBitmap);\n    doInvalidateSelf();\n  }\n```\n\nIt is essential for my project images to disable it.\nCurrently I use very-very ugly reflection to find AniamtedDrawable in DraweeHierarchy to do this.\n", "url": "https://github.com/facebook/fresco/issues/790", "user": "Doctoror", "labels": ["bug"], "created": "2015-11-24 14:55:14", "closed": "2017-09-04 09:39:10", "commits": {}, "ttf": 649.0002777777778, "commitsDetails": []}, {"title": "FileTree: symbolic link causes infinite recursion", "body": "![image](https://cloud.githubusercontent.com/assets/2942953/11360370/fef767a0-92be-11e5-94fb-e619a925fda2.png)\n\nThis may be caused by the file is symbolic link, the `isDirectory` method returns true, then the tree traversal is endless. But I'm not sure, and I don't know why there is a symbolic link file.\n", "url": "https://github.com/facebook/fresco/issues/788", "user": "xjy2061", "labels": ["bug", "duplicate"], "created": "2015-11-24 07:42:12", "closed": "2017-07-12 17:12:34", "commits": {}, "ttf": 596.0002777777778, "commitsDetails": []}, {"title": "DraweeView draws recycled bitmap", "body": "```\njava.lang.RuntimeException: Canvas: trying to use a recycled bitmap android.graphics.Bitmap@16502a96\n                                                                       at android.graphics.Canvas.throwIfCannotDraw(Canvas.java:1282)\n                                                                       at android.view.GLES20Canvas.drawBitmap(GLES20Canvas.java:599)\n                                                                       at android.graphics.drawable.BitmapDrawable.draw(BitmapDrawable.java:538)\n                                                                       at com.facebook.drawee.drawable.ForwardingDrawable.draw(ForwardingDrawable.java:140)\n                                                                       at com.facebook.drawee.drawable.ScaleTypeDrawable.draw(ScaleTypeDrawable.java:104)\n                                                                       at com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(FadeDrawable.java:306)\n                                                                       at com.facebook.drawee.drawable.FadeDrawable.draw(FadeDrawable.java:293)\n                                                                       at com.facebook.drawee.drawable.ForwardingDrawable.draw(ForwardingDrawable.java:140)\n                                                                       at com.facebook.drawee.generic.GenericDraweeHierarchy$RootDrawable.draw(GenericDraweeHierarchy.java:133)\n                                                                       at android.widget.ImageView.onDraw(ImageView.java:1158)\n                                                                       at android.view.View.draw(View.java:15231)\n                                                                       at android.view.View.updateDisplayListIfDirty(View.java:14167)\n                                                                       at android.view.View.getDisplayList(View.java:14189)\n                                                                       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3389)\n                                                                       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3368)\n                                                                       at android.view.View.updateDisplayListIfDirty(View.java:14127)\n                                                                       at android.view.View.getDisplayList(View.java:14189)\n                                                                       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3389)\n                                                                       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3368)\n                                                                       at android.view.View.updateDisplayListIfDirty(View.java:14127)\n                                                                       at android.view.View.getDisplayList(View.java:14189)\n                                                                       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3389)\n                                                                       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3368)\n                                                                       at android.view.View.updateDisplayListIfDirty(View.java:14127)\n                                                                       at android.view.View.getDisplayList(View.java:14189)\n                                                                       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3389)\n                                                                       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3368)\n                                                                       at android.view.View.updateDisplayListIfDirty(View.java:14127)\n                                                                       at android.view.View.getDisplayList(View.java:14189)\n                                                                       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3389)\n                                                                       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3368)\n                                                                       at android.view.View.updateDisplayListIfDirty(View.java:14127)\n                                                                       at android.view.View.getDisplayList(View.java:14189)\n                                                                       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3389)\n                                                                       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3368)\n                                                                       at android.view.View.updateDisplayListIfDirty(View.java:14127)\n                                                                       at android.view.View.getDisplayList(View.java:14189)\n                                                                       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3389)\n                                                                       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3368)\n                                                                       at android.view.View.updateDisplayListIfDirty(View.java:14127)\n                                                                       at android.view.View.getDisplayList(View.java:14189)\n                                                                       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3389)\n                                                                       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3368)\n                                                                       at android.view.View.updateDisplayListIfDirty(View.java:14127)\n                                                                       at android.view.View.getDisplayList(View.java:14189)\n                                                                       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3389)\n                                                                       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3368)\n                                                                       at android.view.View.updateDisplayListIfDirty(View.java:14127)\n                                                                       at android.view.View.getDisplayList(View.java:14189)\n                                                                       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3389)\n                                                                       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3368)\n                                                                       at android.view.View.updateDisplayListIfDirty(View.java:14127)\n                                                                       at android.view.View.getDisplayList(View.java:14189)\n                                                                       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3389)\n                                                                       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3368)\n                                                                       at android.view.View.updateDisplayListIfDirty(View.java:14127)\n                                                                       at android.view.View.getDisplayList(View.java:14189)\n                                                                    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java\n```\n", "url": "https://github.com/facebook/fresco/issues/772", "user": "karun2189", "labels": ["bug"], "created": "2015-11-17 06:53:01", "closed": "2017-12-13 16:41:10", "commits": {}, "ttf": 757.0002777777778, "commitsDetails": []}, {"title": "Incorrect image drawing (local image with orientation and rounded corners)", "body": "In case of loading a local image (from sd card) with 90 or 270 deegrees orientation, with rounded corners, Fresco draws such images with artifacts (edges are repeated). Bounds of RoundedBitmapDrawable are incorrect, looks like RoundedBitmapDrawable dones't respect image orientation\nFresco version: 0.8.0+\n", "url": "https://github.com/facebook/fresco/issues/751", "user": "burzumrus", "labels": ["bug"], "created": "2015-11-11 15:46:50", "closed": "2015-11-25 18:06:55", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "Image not loading with RGB_565", "body": "when i load image list(about 20_100),fast scroll. when i scroll about 20_70. the image not load and not show, include new page load has cache image.(the memory no change)  (Fresco-0.8.1)\n\ni remove setBitmapsConfig(Bitmap.Config.RGB_565) line , every is ok.\n", "url": "https://github.com/facebook/fresco/issues/749", "user": "liujigang", "labels": ["bug"], "created": "2015-11-11 07:48:47", "closed": "2016-02-18 09:39:18", "commits": {}, "ttf": 99.00027777777778, "commitsDetails": []}, {"title": "Downsampling webp doesn't work", "body": "I'm using fresco 0.8.0 and find it can't downsample webp.\nAs in `DownsampleUtil.determineSampleSize`\n\n```\n    if (!EncodedImage.isMetaDataAvailable(encodedImage)) {\n      return DEFAULT_SAMPLE_SIZE;\n    }\n```\n\nand in `EncodedImage.parseMetaData`\n\n```\n// Dimensions decoding is not yet supported for WebP since BitmapUtil.decodeDimensions has a\n// bug where it will return 100x100 for some WebPs even though those are not its actual\n// dimensions\nif (!ImageFormat.isWebpFormat(imageFormat)) {\n    ...\n```\n\nI really need this feature. May I ask when will it be fixed?\n", "url": "https://github.com/facebook/fresco/issues/743", "user": "gelitenight", "labels": ["bug"], "created": "2015-11-10 05:06:21", "closed": "2018-07-09 11:20:08", "commits": {}, "ttf": 972.0002777777778, "commitsDetails": []}, {"title": "DraweeEventTracker queue fills up", "body": "App is crash because I dont know why??\n\n```\njava.lang.IllegalStateException: Queue full\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at java.util.AbstractQueue.add(AbstractQueue.java:69)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at java.util.concurrent.ArrayBlockingQueue.add(ArrayBlockingQueue.java:282)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at com.facebook.drawee.components.DraweeEventTracker.recordEvent(DraweeEventTracker.java:52)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at com.facebook.drawee.view.DraweeHolder.onDetach(DraweeHolder.java:127)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at com.facebook.drawee.view.DraweeView.onStartTemporaryDetach(DraweeView.java:116)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.View.dispatchStartTemporaryDetach(View.java:8335)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.ViewGroup.dispatchStartTemporaryDetach(ViewGroup.java:2663)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.ViewGroup.dispatchStartTemporaryDetach(ViewGroup.java:2663)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.ViewGroup.dispatchStartTemporaryDetach(ViewGroup.java:2663)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.widget.AbsListView$RecycleBin.addScrapView(AbsListView.java:6551)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.widget.GridView.onMeasure(GridView.java:1080)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.View.measure(View.java:17547)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.widget.RelativeLayout.measureChild(RelativeLayout.java:697)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.widget.RelativeLayout.onMeasure(RelativeLayout.java:481)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.View.measure(View.java:17547)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5535)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.widget.FrameLayout.onMeasure(FrameLayout.java:436)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.View.measure(View.java:17547)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.widget.RelativeLayout.measureChild(RelativeLayout.java:697)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.widget.RelativeLayout.onMeasure(RelativeLayout.java:481)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.View.measure(View.java:17547)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5535)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.support.design.widget.CoordinatorLayout.onMeasureChild(CoordinatorLayout.java:607)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.support.design.widget.CoordinatorLayout.onMeasure(CoordinatorLayout.java:674)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.View.measure(View.java:17547)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.widget.RelativeLayout.measureChildHorizontal(RelativeLayout.java:727)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.widget.RelativeLayout.onMeasure(RelativeLayout.java:463)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.View.measure(View.java:17547)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.support.v4.widget.DrawerLayout.onMeasure(DrawerLayout.java:940)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.View.measure(View.java:17547)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5535)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.widget.FrameLayout.onMeasure(FrameLayout.java:436)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.support.v7.internal.widget.ContentFrameLayout.onMeasure(ContentFrameLayout.java:135)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.View.measure(View.java:17547)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5535)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1436)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.widget.LinearLayout.measureVertical(LinearLayout.java:722)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.widget.LinearLayout.onMeasure(LinearLayout.java:613)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.View.measure(View.java:17547)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5535)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.widget.FrameLayout.onMeasure(FrameLayout.java:436)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.View.measure(View.java:17547)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5535)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1436)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.widget.LinearLayout.measureVertical(LinearLayout.java:722)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.widget.LinearLayout.onMeasure(LinearLayout.java:613)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.View.measure(View.java:17547)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5535)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.widget.FrameLayout.onMeasure(FrameLayout.java:436)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at com.android.internal.policy.impl.PhoneWindow$DecorView.onMeasure(PhoneWindow.java:2615)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.View.measure(View.java:17547)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.ViewRootImpl.performMeasure(ViewRootImpl.java:2015)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1781)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1061)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:5885)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.Choreographer$CallbackRecord.run(Choreographer.java:767)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.Choreographer.doCallbacks(Choreographer.java:580)\n10-21 10:31:27.699 8966-8966/com.zoho.notebook E/AndroidRuntime:     at android.view.Choreographer.doFrame(Choreographer.java:550)\n```\n", "url": "https://github.com/facebook/fresco/issues/678", "user": "karun2189", "labels": ["bug"], "created": "2015-10-21 05:03:47", "closed": "2017-09-04 09:34:48", "commits": {}, "ttf": 684.0002777777778, "commitsDetails": []}, {"title": "HTTP errors are stored in cache", "body": "When connect to a need need authenticate wifi, the response of image request is a html for login, and the html was cached to disk, after that load the image will get from disk cache, but the cache file is not a bitmap file, then the image show nothing, even connect to another wifi does not need authenticate. \n", "url": "https://github.com/facebook/fresco/issues/675", "user": "xjy2061", "labels": ["bug"], "created": "2015-10-21 03:26:26", "closed": "2018-07-09 15:59:10", "commits": {"7a874c17bda54a92755d36bce6278599cc0cecc1": {"commitGHEventType": "referenced", "commitUser": "facebook-github-bot"}, "c00e72c98e2e61990ae020e3f95b3bc0fcce6175": {"commitGHEventType": "referenced", "commitUser": "facebook-github-bot"}}, "ttf": 992.0002777777778, "commitsDetails": [{"commitHash": "7a874c17bda54a92755d36bce6278599cc0cecc1", "commitGHEventType": "referenced", "commitUser": "facebook-github-bot", "commitParents": ["98657b39efeacfbcdee50efc2c43b324ac084ba9"], "nameRev": "7a874c17bda54a92755d36bce6278599cc0cecc1 tags/v1.10.0~22", "commitMessage": "Do not cache images if they are of unknown format\n\nSummary: Fixes https://github.com/facebook/fresco/issues/1413 and https://github.com/facebook/fresco/issues/675\n\nReviewed By: oprisnik\n\nDifferential Revision: D8780521\n\nfbshipit-source-id: efec5b689ce696c2132771d70fe3533ea4597680\n", "commitDateTime": "2018-07-11 07:34:01", "authoredDateTime": "2018-07-11 07:23:52", "commitGitStats": [{"filePath": "imagepipeline/src/main/java/com/facebook/imagepipeline/producers/DiskCacheWriteProducer.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "imagepipeline/src/main/java/com/facebook/imagepipeline/producers/PartialDiskCacheProducer.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "imagepipeline/src/test/java/com/facebook/imagepipeline/producers/DiskCacheWriteProducerTest.java", "insertions": 45, "deletions": 17, "lines": 62}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DiskCacheWriteProducer.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducer.DiskCacheWriteConsumer.onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "PartialDiskCacheProducer.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.producers.PartialDiskCacheProducer.PartialDiskCacheConsumer.onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "DiskCacheWriteProducerTest.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducerTest.testDoesNotWriteResultToCacheIfNotEnabled()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducerTest.testDoesNotWriteToCacheIfPartialResult()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducerTest.testDoesNotWriteResultToCacheIfResultStatusSaysNotTo()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducerTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducerTest.testSmallImageDiskCacheInputProducerUnknownFormat()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducerTest.setupInputProducerSuccessFormatUnknown()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducerTest.setUp()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducerTest.setupInputProducerSuccess()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducerTest.setupInputProducerSuccessWithStatusFlags(int,com.facebook.imagepipeline.image.EncodedImage)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducerTest.setupInputProducerSuccessWithStatusFlags(int,com.facebook.imagepipeline.image.EncodedImage).1.answer(org.mockito.invocation.InvocationOnMock)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.DiskCacheWriteProducerTest.setupInputProducerSuccessWithStatusFlags(int).1.answer(org.mockito.invocation.InvocationOnMock)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "c00e72c98e2e61990ae020e3f95b3bc0fcce6175", "commitGHEventType": "referenced", "commitUser": "facebook-github-bot", "commitParents": ["70003824db692e797b8121299c3832d671df0396"], "nameRev": "c00e72c98e2e61990ae020e3f95b3bc0fcce6175 tags/v1.11.0~25", "commitMessage": "Do not cache unknown format images to EncodedMemoryCache (#2190)\n\nSummary:\noptimize #1413 #675\n\nBUG reproduce step\uff1a\n1. connect to a Portal WiFi, we got a HTTP 200 code and html response. fresco cache the data to EncodedMemoryCache\n2. user login the wifi or change to another connectable WIFI and enter the page again, the image still can not be load success due to the wrong memory cache hit.\n3. user must restart the app or  browse other more pictures to trim the corrupt data from memory cache, then it will restore to normal status.\n\nTo optimize the user experience, we should not cache the unknown image format data to EncodedMemoryCache. Once the network become available, the image will reload success.\nPull Request resolved: https://github.com/facebook/fresco/pull/2190\n\nReviewed By: erikandre\n\nDifferential Revision: D9423330\n\nPulled By: oprisnik\n\nfbshipit-source-id: e985458856efed27f02dd2e4a7f02711c4243179\n", "commitDateTime": "2018-09-21 09:21:12", "authoredDateTime": "2018-09-21 09:11:03", "commitGitStats": [{"filePath": "imagepipeline/src/main/java/com/facebook/imagepipeline/producers/EncodedMemoryCacheProducer.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "imagepipeline/src/test/java/com/facebook/imagepipeline/producers/EncodedMemoryCacheProducerTest.java", "insertions": 38, "deletions": 8, "lines": 46}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncodedMemoryCacheProducer.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer.EncodedMemoryCacheConsumer.onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "EncodedMemoryCacheProducerTest.java", "spoonMethods": [{"spoonMethodName": "com.facebook.imagepipeline.producers.EncodedMemoryCacheProducerTest.testInputProducerSuccessButResultNotCacheableDueToStatusFlags(int)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.EncodedMemoryCacheProducerTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.EncodedMemoryCacheProducerTest.testEncodedMemoryCacheGetNotFoundInputProducerSuccessButResultIsUnknownFormat()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.EncodedMemoryCacheProducerTest.setupInputProducerStreamingSuccessFormatUnknown()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.EncodedMemoryCacheProducerTest.setUp()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.EncodedMemoryCacheProducerTest.setupInputProducerStreamingSuccess()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.EncodedMemoryCacheProducerTest.setupInputProducerStreamingSuccessWithStatusFlags(int,com.facebook.imagepipeline.image.EncodedImage)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.facebook.imagepipeline.producers.EncodedMemoryCacheProducerTest.setupInputProducerStreamingSuccessWithStatusFlags(int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7a874c17bda54a92755d36bce6278599cc0cecc1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 3, "lines": 13, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["imagepipeline/src/main/java/com/facebook/imagepipeline/producers"], "changesInPackagesSPOON": ["com.facebook.imagepipeline.producers.PartialDiskCacheProducer.PartialDiskCacheConsumer.onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)", "com.facebook.imagepipeline.producers.DiskCacheWriteProducer.DiskCacheWriteConsumer.onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)"]}, {"title": "ImagePipelineFactory doesn't use the PlatformBitmapFactory that is set in ImagePipelineConfig.", "body": "You can set a custom `PlatformBitmapFactory` object via `ImagePipelineConfig.Builder.setPlatformBitmapFactory()` method, but `ImagePipelineFactory` seem like not using the config value, and create a new ones in `buildPlatformBitmapFactory(PoolFactory)` method.\n", "url": "https://github.com/facebook/fresco/issues/665", "user": "rey5137", "labels": ["bug", "needs-details"], "created": "2015-10-19 04:12:09", "closed": "2016-02-13 12:38:46", "commits": {}, "ttf": 117.00027777777778, "commitsDetails": []}, {"title": "wrap_conent for very thin images", "body": "Hello. I have an issue with \"wrap_conent\" height for remote thin images\nonFinalImageSet i'm doint this\n\n```\nmSimpleDraweeView.setAspectRatio((float) imageInfo.getWidth() / imageInfo.getHeight());\n```\n\nThis code code works fine for images were aspect ration is about 1 - 2\n\nI have one special case.\nI'm laoding a very thin image that should autofil his height, but for some reason it doesn't.\n\n```\nimageInfo.getWidth() = 641\nimageInfo.getHeight() = 37\n```\n\nso aspectRatio is about 17\n\nImage is resized about 3 times bigger than should be by height.\n\nHere is the layout\n\n```\n <com.facebook.drawee.view.SimpleDraweeView\n            android:id=\"@+id/thumbnail_image_view\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            fresco:actualImageScaleType=\"fitCenter\" >\n```\n\nI think it happens only for very thin images because others with ( ex: 640x290) are resized properly.\n\nDid anyone encountered this before?\n", "url": "https://github.com/facebook/fresco/issues/636", "user": "ffelini", "labels": ["bug"], "created": "2015-09-29 08:46:06", "closed": "2016-03-18 14:33:13", "commits": {}, "ttf": 171.00027777777777, "commitsDetails": []}, {"title": "IllegalStateException in closeIfOwnedBy function", "body": "Seeing this crash in logs. No idea what is causing it, or how to reproduce. Has happened to 3 people so far, on 5.1.1 and 5.0.2\n\n```\njava.lang.IllegalStateException \nat com.squareup.okhttp.Connection.closeIfOwnedBy(Connection.java:137)   \nat com.squareup.okhttp.OkHttpClient$1.closeIfOwnedBy(OkHttpClient.java:75)\nat com.squareup.okhttp.internal.http.HttpEngine.disconnect(HttpEngine.java:577)\nat com.squareup.okhttp.Call.cancel(Call.java:122)\nat com.facebook.imagepipeline.backends.okhttp.OkHttpNetworkFetcher$1$1.run(OkHttpNetworkFetcher.java:98)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\nat java.lang.Thread.run(Thread.java:818)\n```\n\nDoes anyone have any ideas on what could be causing this? Or what I can do to prevent it?\n", "url": "https://github.com/facebook/fresco/issues/629", "user": "leofirespotter", "labels": ["bug"], "created": "2015-09-24 01:16:21", "closed": "2016-06-06 13:05:21", "commits": {}, "ttf": 256.0002777777778, "commitsDetails": []}, {"title": "OOMs on Lollipop when using ViewPager for large images", "body": "java.lang.OutOfMemoryError: Failed to allocate a 2560012 byte allocation with 392548 free bytes and 383KB until OOM\n     at dalvik.system.VMRuntime.newNonMovableArray(Native Method)\n     at android.graphics.Bitmap.nativeCreate(Native Method)\n     at android.graphics.Bitmap.createBitmap(Bitmap.java:939)\n     at android.graphics.Bitmap.createBitmap(Bitmap.java:912)\n     at android.graphics.Bitmap.createBitmap(Bitmap.java:879)\n     at com.facebook.imagepipeline.memory.BitmapPool.alloc(BitmapPool.java:55)\n     at com.facebook.imagepipeline.memory.BitmapPool.alloc(BitmapPool.java:30)\n     at com.facebook.imagepipeline.memory.BasePool.get(BasePool.java:259)\n     at com.facebook.imagepipeline.bitmaps.ArtBitmapFactory.decodeStaticImageFromStream(ArtBitmapFactory.java:124)\n     at com.facebook.imagepipeline.bitmaps.ArtBitmapFactory.decodeJPEGFromEncodedImage(ArtBitmapFactory.java:116)\n     at com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.decodeJPEGFromEncodedImage(PlatformBitmapFactory.java:106)\n     at com.facebook.imagepipeline.decoder.ImageDecoder.decodeJpeg(ImageDecoder.java:148)\n     at com.facebook.imagepipeline.decoder.ImageDecoder.decodeImage(ImageDecoder.java:82)\n     at com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder.doDecode(DecodeProducer.java:188)\n     at com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder.access$200(DecodeProducer.java:96)\n     at com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$1.run(DecodeProducer.java:128)\n     at com.facebook.imagepipeline.producers.JobScheduler.doJob(JobScheduler.java:207)\n     at com.facebook.imagepipeline.producers.JobScheduler.access$000(JobScheduler.java:27)\n     at com.facebook.imagepipeline.producers.JobScheduler$1.run(JobScheduler.java:78)\n     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n     at com.facebook.imagepipeline.core.PriorityThreadFactory$1.run(PriorityThreadFactory.java:43)\n     at java.lang.Thread.run(Thread.java:818)\n", "url": "https://github.com/facebook/fresco/issues/624", "user": "xiaoluome", "labels": ["bug"], "created": "2015-09-21 14:35:37", "closed": "2018-01-18 17:22:29", "commits": {}, "ttf": 850.0002777777778, "commitsDetails": []}, {"title": "\"CloseableReference: Finalized without closing\" in SimpleDraweeView / ListView", "body": "Hi,Fresco.\nFirst of all ,thanks for this amazing Android Image Loading Framework!\nHere is the problems happened to me:\nWhen I use SimpleDraweeView in ListView,loading android SD files,normally I scroll it ,nothing weird happens,but when I fast scroll it ,log tells me : \n\"unknown:CloseableReference\ufe55 Finalized without closing: 42d7b6a8 42d7b718 (type = NativePooledByteBuffer)\"\naccording to the issue #213 ,Using SimpleDraweeView will not encountered this problem,can you help me?\n", "url": "https://github.com/facebook/fresco/issues/621", "user": "yqpan1991", "labels": ["bug"], "created": "2015-09-21 07:44:32", "closed": "2016-12-01 19:36:40", "commits": {}, "ttf": 437.0002777777778, "commitsDetails": []}, {"title": "fade in effect is gone when setProgressbarImage or setRoundingParams", "body": "in 0.7.0\nwhen I use `GenericDraweeHierarchyBuilder` to `setProgressBarImage` or `setRoundingParams`\nthe default fade in effect is gone,the image comes out directly...\n\nIf I delete `setProgressBarImage` and `setRoundingParams`, everything is normal and effect comes back\n\nsame problem also occur in older relases\n", "url": "https://github.com/facebook/fresco/issues/613", "user": "sourceyii", "labels": ["bug"], "created": "2015-09-15 08:21:15", "closed": "2017-08-31 14:06:51", "commits": {}, "ttf": 716.0002777777778, "commitsDetails": []}, {"title": "load large png images not smooth", "body": " i load the image list of sdcard and scroll fast . the listview scroll not smooth. \n", "url": "https://github.com/facebook/fresco/issues/601", "user": "limingwei234", "labels": ["bug"], "created": "2015-09-10 03:19:36", "closed": "2015-11-27 10:44:45", "commits": {}, "ttf": 78.00027777777778, "commitsDetails": []}, {"title": "Fresco does not work well on Lollipop and upper.", "body": "Fresco save bitmaps in the Android java VM heap on the Lollipop and upper. But it seems that Lollipop memory strategy dose not perform well on these devices. Facebook app runs on my Samsung Note4 would easily take almost 170M java heap memory!\nIf load the local camera images, memory usage raise up to 211M. Please refer to the following output. Since this device is not rooted, I can't provide the hprof dumps. But I can do that if we would do the future work.\n\n```\n$ adb shell dumpsys meminfo com.facebook.katana\nApplications Memory Usage (kB):\nUptime: 24045894 Realtime: 182766077\n\n** MEMINFO in pid 2941 [com.facebook.katana] **\n                   Pss  Private  Private  Swapped     Heap     Heap     Heap\n                 Total    Dirty    Clean    Dirty     Size    Alloc     Free\n                ------   ------   ------   ------   ------   ------   ------\n  Native Heap        0        0        0        0    96228    96228    51227\n  Dalvik Heap   183464   183420        4    25504   211055   201411     9644\n Dalvik Other     1388     1388        0        0\n        Stack     1532     1532        0        0\n       Cursor        2        0        0        0\n       Ashmem      128      128        0        0\n    Other dev   111553   102592       12        0\n     .so mmap    13889      604     7816     1388\n    .apk mmap     2151        0      964        0\n    .ttf mmap     3742        0     3240        0\n    .dex mmap    78828        0    78136        0\n    code mmap     4804        0     2560        0\n   image mmap     8544     2300     2828        0\n   Other mmap     1233        4      776        0\n     Graphics    49920    49920        0        0\n           GL   177804   177804        0        0\n      Unknown    80796    80624      152     2380\n        TOTAL   719778   600316    96488    29272   307283   297639    60871\n\n Objects\n               Views:     1284         ViewRootImpl:        3\n         AppContexts:       13           Activities:        9\n              Assets:        6        AssetManagers:        6\n       Local Binders:      104        Proxy Binders:       59\n    Death Recipients:        1\n     OpenSSL Sockets:        1\n\n SQL\n         MEMORY_USED:     5359\n  PAGECACHE_OVERFLOW:     4036          MALLOC_SIZE:       62\n\n DATABASES\n      pgsz     dbsz   Lookaside(b)          cache  Dbname\n         4      340            334      113/52/12  /data/data/com.facebook.katana/databases/contacts_db2\n         4       36             30        17/43/6  /data/data/com.facebook.katana/databases/composer_db\n         4      192             80        20/49/9  /data/data/com.facebook.katana/databases/notifications_db\n         4       28             33         8/43/3  /data/data/com.facebook.katana/databases/admined_pages_db\n         4       24             52         8/40/3  /data/data/com.facebook.katana/databases/minutiae_db\n         4       56             30        49/44/4  /data/data/com.facebook.katana/databases/analytics_db2\n         4      136             31    1237/1274/4  /data/data/com.facebook.katana/databases/prefs_db\n         4      224             61         9/44/4  /data/data/com.facebook.katana/databases/qe_db\n         4       28             44        16/53/7  /data/data/com.facebook.katana/databases/timeline_db\n         4      240            128     451/102/14  /data/data/com.facebook.katana/databases/newsfeed_db\n         4       44             51        12/36/5  /data/data/com.facebook.katana/databases/photos_db\n         4      148            201      397/64/10  /data/data/com.facebook.katana/databases/threads_db2\n         4     1520            196    1432/191/25  /data/data/com.facebook.katana/databases/graphql_cache\n         4       28             49        10/43/3  /data/data/com.facebook.katana/databases/offline_mode_db\n\n Asset Allocations\n    zip:/data/app/com.facebook.katana-1/base.apk:/resources.arsc: 8284K\n    zip:/data/app/com.facebook.katana-1/base.apk:/assets/fonts/Roboto-Bold.ttf:\n114K\n    zip:/data/app/com.facebook.katana-1/base.apk:/assets/fonts/Roboto-Medium.ttf: 114K\n```\n", "url": "https://github.com/facebook/fresco/issues/589", "user": "tbruceyu", "labels": ["bug", "duplicate"], "created": "2015-09-03 14:27:08", "closed": "2015-12-11 10:55:26", "commits": {}, "ttf": 98.00027777777778, "commitsDetails": []}, {"title": "Fresco requests same URI several times", "body": "Hi ,I recently encountered a problem that Fresco repeat request with same URI.For example,there is a listview, refresh it several times the problem happens, the requests of some pictures  are send repeatly.The following is the request I catch.\n![image](https://cloud.githubusercontent.com/assets/10043199/9623463/90b0e622-5173-11e5-9612-2a8d1757be3e.png)\nCan you help me?\n", "url": "https://github.com/facebook/fresco/issues/587", "user": "SandyWangWei", "labels": ["bug"], "created": "2015-09-02 05:08:56", "closed": "2017-09-04 09:46:14", "commits": {}, "ttf": 733.0002777777778, "commitsDetails": []}, {"title": "A resource was acquired at attached stack trace but never released. See java.io.Closeable for information on avoiding resource leaks.", "body": "08-28 13:04:25.102: E/StrictMode(9428): A resource was acquired at attached stack trace but never released. See java.io.Closeable for information on avoiding resource leaks.\n08-28 13:04:25.102: E/StrictMode(9428): java.lang.Throwable: Explicit termination method 'end' not called\n08-28 13:04:25.102: E/StrictMode(9428):     at dalvik.system.CloseGuard.open(CloseGuard.java:184)\n08-28 13:04:25.102: E/StrictMode(9428):     at java.util.zip.Inflater.<init>(Inflater.java:82)\n08-28 13:04:25.102: E/StrictMode(9428):     at com.android.okio.GzipSource.<init>(GzipSource.java:57)\n08-28 13:04:25.102: E/StrictMode(9428):     at com.android.okhttp.internal.http.HttpEngine.initContentStream(HttpEngine.java:490)\n08-28 13:04:25.102: E/StrictMode(9428):     at com.android.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:680)\n08-28 13:04:25.102: E/StrictMode(9428):     at com.android.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:388)\n08-28 13:04:25.102: E/StrictMode(9428):     at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:332)\n08-28 13:04:25.102: E/StrictMode(9428):     at com.android.okhttp.internal.http.HttpURLConnectionImpl.getInputStream(HttpURLConnectionImpl.java:199)\n08-28 13:04:25.102: E/StrictMode(9428):     at com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$1.run(HttpUrlConnectionNetworkFetcher.java:58)\n08-28 13:04:25.102: E/StrictMode(9428):     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\n08-28 13:04:25.102: E/StrictMode(9428):     at java.util.concurrent.FutureTask.run(FutureTask.java:237)\n08-28 13:04:25.102: E/StrictMode(9428):     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n08-28 13:04:25.102: E/StrictMode(9428):     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n08-28 13:04:25.102: E/StrictMode(9428):     at java.lang.Thread.run(Thread.java:818)\n", "url": "https://github.com/facebook/fresco/issues/582", "user": "avibhamare", "labels": ["bug"], "created": "2015-08-28 15:55:05", "closed": "2018-01-16 10:30:40", "commits": {}, "ttf": 871.0002777777778, "commitsDetails": []}, {"title": "High failure rate when Circle image with border--SimpleDraweeView", "body": "here's my code in xml\n<com.facebook.drawee.view.SimpleDraweeView\n            android:id=\"@+id/iv_userportrait_header_mine\"\n            android:layout_width=\"71dp\"\n            android:layout_height=\"71dp\"\n            fresco:placeholderImage=\"@mipmap/mine_not_logged_head\"\n            fresco:failureImage=\"@mipmap/mine_not_logged_head\"\n            fresco:roundAsCircle=\"true\"\n            fresco:roundingBorderColor=\"@color/white\"\n            fresco:roundingBorderWidth=\"2dp\"\n            android:layout_centerHorizontal=\"true\"/>\n\nwithout roundingBorder it's pretty,but with roundingBorder the failure rate are so high,just like follow:\nthe result i want\n![image](https://cloud.githubusercontent.com/assets/6419308/9538841/84e2490e-4d7b-11e5-8e32-8a1e07508e4a.png)\nbut after refresh it sometimes looks like this:\n![image](https://cloud.githubusercontent.com/assets/6419308/9538879/124bfba0-4d7c-11e5-9259-cdb642261c32.png)\n![image](https://cloud.githubusercontent.com/assets/6419308/9538884/21158926-4d7c-11e5-9177-6de5282417f8.png)\nhow to resolve this problem?thanks for your answer\n", "url": "https://github.com/facebook/fresco/issues/577", "user": "champion32", "labels": ["bug"], "created": "2015-08-28 03:59:38", "closed": "2017-08-31 14:04:08", "commits": {}, "ttf": 734.0002777777778, "commitsDetails": []}, {"title": "OutOfMemoryError", "body": "Hello,\n\nI'm using Fresco in a `RecyclerView`. I'm recycling the views properly and, of course, initializing Fresco just once in the `Application` class.\n\nI see that there are other OOM issues reported, but all of them seem to occur due to huge images trying to be loaded into the memory.\n\nIn my case, as you can see in the following screenshots, the images are small.\n\n![screen shot 2015-08-27 at 10 41 42](https://cloud.githubusercontent.com/assets/323266/9522066/e0da72e6-4ca8-11e5-9781-a3b5a376a090.png)\n\n![screen shot 2015-08-27 at 10 47 50](https://cloud.githubusercontent.com/assets/323266/9522102/17c75ee0-4ca9-11e5-9df4-6ed1382cd6f6.png)\n\nIt seems it's only happening on Android 5.0+ with ART:\n\n![screen shot 2015-08-27 at 10 48 28](https://cloud.githubusercontent.com/assets/323266/9522116/3f201d2e-4ca9-11e5-96e3-7a43bb482f77.png)\n\nAny idea how to solve this issue? I have too many occurrences of these crashes :(\n\n**EDIT 1:**\n\nI am loading 6~8 images on-screen, at most. All of them are JPEGs of ~~250~~ 25 kB max.\nHere's the [hprof file (heap dump)](https://www.dropbox.com/s/jxxgpkueo661g7h/heap.hprof?dl=0).\n\nThank you in advance,\nMartin\n", "url": "https://github.com/facebook/fresco/issues/574", "user": "mheras", "labels": ["bug", "needs-details"], "created": "2015-08-27 13:50:20", "closed": "2016-01-05 13:41:24", "commits": {}, "ttf": 130.00027777777777, "commitsDetails": []}, {"title": "Space in URL, image unable to load", "body": "Image unable to appear when using URL that content spaces , URL without any space is working ok.\n\nNot Working URL\nhttp://www.thestar.com.my/~/media/Images/TSOL/Photos-Gallery/Nation/2015/08/26/Bersih 4.ashx?crop=1&w=460&h=345&\n\nWorking URL\nhttp://www.thestar.com.my/~/media/Images/TSOL/Photos-Gallery/Nation/2015/08/26/011040853.ashx?crop=1&w=460&h=345&\n\nIt does not work even I replace the space \"Bersih 4\" to \"Bersih%204\"\n\nThanks\n", "url": "https://github.com/facebook/fresco/issues/572", "user": "jenshen312", "labels": ["bug"], "created": "2015-08-26 04:37:40", "closed": "2015-11-13 17:14:09", "commits": {}, "ttf": 79.00027777777778, "commitsDetails": []}, {"title": "Cancelled postprocessed images aren't cached", "body": "Hi guys,\n\nFirst of all, great library! Only problem I've had so far is with caching of post processed images - I'm following the documentation put up, and have looked around, but can't seem to figure out what's going wrong here.\n\nI have a FragmentStatePagerAdapter, with each fragment having a full-sized, blurred image as its background, and I have a post-processor that blurs the background image, and all of that is working fine. But when I scroll between the fragments back and forth, the blurred background image is reprocessed every time, which is really annoying. There's a section in the docs saying that post-processed images can be cached, and I'm doing everything it's saying I should, but images are still not being caches.\n\nMy post-processor:\n\n```\npublic class BlurPostprocessor extends BasePostprocessor {\n        private Context context;\n        private String url;\n\n        public BlurPostprocessor(Context context, String url) {\n            this.context = context;\n            this.url = url;\n        }\n\n        @Override\n        public String getName() {\n            return \"blurPostProcessor\";\n        }\n\n        @Override\n        public CacheKey getPostprocessorCacheKey() {\n            return new SimpleCacheKey(url);\n        }\n\n        @Override\n        public void process(Bitmap destBitmap, Bitmap sourceBitmap) {\n                // code that blurs the image into destBitmap\n        }\n    }\n```\n\nI've also tried implementing my own CacheKey before finding out about SimpleCacheKey, but that didn't work either. Any help would be appreciated!\n\nThanks!\n", "url": "https://github.com/facebook/fresco/issues/569", "user": "botondbutuza", "labels": ["bug"], "created": "2015-08-24 16:18:20", "closed": "2018-01-16 16:27:19", "commits": {}, "ttf": 876.0002777777778, "commitsDetails": []}, {"title": "Load images failed.", "body": "There are about 100 images whose size is 2048*1536 will show in my project.I had used resizing.But I found that fresco can only load several images,and then all below images would load fail.  \nBy the way, I use viewPage with FragmentStatePagerAdapter.\n\nThe code I used to load image is below   \n\n```\nSimpleDraweeView imageView=new SimpleDraweeView(getContext());\nimageView.setScaleType(ImageView.ScaleType.CENTER_CROP);\nimageView.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, this.deviceSize.y));\nUri uri = Uri.parse(this.imageUrls.get(i));\nImageRequest request = ImageRequestBuilder.newBuilderWithSource(uri)\n         .setResizeOptions(new ResizeOptions(deviceSize.x, deviceSize.y))\n         .build();\nPipelineDraweeController controller = (PipelineDraweeController) Fresco.newDraweeControllerBuilder()\n          .setOldController(imageView.getController())\n          .setControllerListener(controllerListener)\n          .setImageRequest(request)\n          .build();\nimageView.setController(controller);   \n```\n\nand the error   \n\n```\nE/unknown:\ufe55 Error loading 8\n    com.facebook.imagepipeline.memory.BasePool$PoolSizeViolationException: Pool hard cap violation? Hard cap = 50331648Used size = 48168960Free size = 0Request size = 9633792\n            at com.facebook.imagepipeline.memory.BasePool.get(BasePool.java:241)\n            at com.facebook.imagepipeline.bitmaps.ArtBitmapFactory.doDecodeStaticImage(ArtBitmapFactory.java:131)\n            at com.facebook.imagepipeline.bitmaps.ArtBitmapFactory.decodeJPEGFromPooledByteBuffer(ArtBitmapFactory.java:119)\n            at com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.decodeJPEGFromPooledByteBuffer(PlatformBitmapFactory.java:106)\n            at com.facebook.imagepipeline.decoder.ImageDecoder.decodeJpeg(ImageDecoder.java:135)\n            at com.facebook.imagepipeline.decoder.ImageDecoder.decodeImage(ImageDecoder.java:83)\n            at com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder.doDecode(DecodeProducer.java:166)\n            at com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder.access$000(DecodeProducer.java:88)\n            at com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$1.run(DecodeProducer.java:112)\n            at com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$1.run(DecodeProducer.java:109)\n            at com.facebook.imagepipeline.producers.JobScheduler.doJob(JobScheduler.java:214)\n            at com.facebook.imagepipeline.producers.JobScheduler.access$000(JobScheduler.java:30)\n            at com.facebook.imagepipeline.producers.JobScheduler$1.run(JobScheduler.java:68)\n            at com.facebook.common.executors.SerialDelegatingExecutor.executeSingleCommand(SerialDelegatingExecutor.java:76)\n            at com.facebook.common.executors.SerialDelegatingExecutor.access$000(SerialDelegatingExecutor.java:24)\n            at com.facebook.common.executors.SerialDelegatingExecutor$1.run(SerialDelegatingExecutor.java:47)\n            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n            at java.lang.Thread.run(Thread.java:818)\n```\n\nP.S. the example for the imageUrl\nhttp://www.yccy.cc/xueermian/source/03-1.jpg\n", "url": "https://github.com/facebook/fresco/issues/564", "user": "starFelix", "labels": ["bug", "needs-details"], "created": "2015-08-20 16:59:52", "closed": "2015-09-01 02:58:43", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "FetchDecodedImage resizes Uri from local file but keeps original size when Uri from Internet", "body": "I found a bug on Fresco 0.6.1. \n\nI'm trying to get a bitmap from a file saved in my sd card, but when I fetchDecodedImage from a file the Bitmap is resized and consequently loses too much quality.\nHowever, when I try to fetchDecodedImage with a URI from Internet, the Bitmap isn't resized and doesn't lose quality.\n\nUri.fromFile(file) -> Lose quality\nUri.parse(\"http://...\") -> Don't lose quality\n\nWhy? I need to fetchDecodedImage with local file without lose quality.\nMy image is .JPG and 1215x717.\nExample: http://ddragon.leagueoflegends.com/cdn/img/champion/splash/Akali_5.jpg\n\nDifference between Uri's:\n\n![t](https://cloud.githubusercontent.com/assets/7516541/9374416/0aeca136-46cc-11e5-8598-a671bdbd3ab1.jpg)\n\nCode:\n\n```\nImagePipeline imagePipeline = Fresco.getImagePipeline();\n        DataSource<CloseableReference<CloseableImage>> dataSource = imagePipeline.fetchDecodedImage(ImageRequest.fromUri(Uri.fromFile(file)), getApplicationContext());\n        dataSource.subscribe(new BaseBitmapDataSubscriber() {\n            @Override\n            protected void onNewResultImpl(@Nullable Bitmap bitmap) {\n                // update notification big picture here\n            }\n\n            @Override\n            protected void onFailureImpl(DataSource<CloseableReference<CloseableImage>> dataSource) {}\n        }, CallerThreadExecutor.getInstance());\n```\n\nThanks\n", "url": "https://github.com/facebook/fresco/issues/559", "user": "bbrazsilveira", "labels": ["bug"], "created": "2015-08-20 02:46:33", "closed": "2015-10-19 23:47:27", "commits": {}, "ttf": 60.000277777777775, "commitsDetails": []}, {"title": "java.lang.NoSuchFieldError: STROKE Bug", "body": "```\njava.lang.NoSuchFieldError: STROKE\nat com.facebook.drawee.drawable.RoundedBitmapDrawable.<init>(RoundedBitmapDrawable.java:61)\nat com.facebook.drawee.drawable.RoundedBitmapDrawable.fromBitmapDrawable(RoundedBitmapDrawable.java:73)\nat com.facebook.drawee.generic.GenericDraweeHierarchy.maybeApplyRoundingBitmapOnly(GenericDraweeHierarchy.java:353)\nat com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(GenericDraweeHierarchy.java:445)\nat com.facebook.drawee.controller.AbstractDraweeController.onNewResultInternal(AbstractDraweeController.java:467)\nat com.facebook.drawee.controller.AbstractDraweeController.access$000(AbstractDraweeController.java:47)\nat com.facebook.drawee.controller.AbstractDraweeController$1.onNewResultImpl(AbstractDraweeController.java:413)\nat com.facebook.datasource.BaseDataSubscriber.onNewResult(BaseDataSubscriber.java:43)\nat com.facebook.datasource.AbstractDataSource$1.run(AbstractDataSource.java:181)\nat com.facebook.common.executors.UiThreadImmediateExecutorService.execute(UiThreadImmediateExecutorService.java:40)\nat com.facebook.datasource.AbstractDataSource.notifyDataSubscriber(AbstractDataSource.java:172)\nat com.facebook.datasource.AbstractDataSource.subscribe(AbstractDataSource.java:155)\nat com.facebook.drawee.controller.AbstractDraweeController.submitRequest(AbstractDraweeController.java:429)\nat com.facebook.drawee.controller.AbstractDraweeController.onAttach(AbstractDraweeController.java:332)\nat com.facebook.drawee.view.DraweeHolder.attachController(DraweeHolder.java:276)\nat com.facebook.drawee.view.DraweeHolder.setController(DraweeHolder.java:222)\nat com.facebook.drawee.view.DraweeView.setController(DraweeView.java:87)\n```\n", "url": "https://github.com/facebook/fresco/issues/546", "user": "EugineKidoz", "labels": ["bug"], "created": "2015-08-16 15:00:28", "closed": "2015-12-16 13:55:22", "commits": {}, "ttf": 121.00027777777778, "commitsDetails": []}, {"title": "The image loaded from local file is small", "body": "When I trying to use SimpleDraweeView.setImageURI(Uri.parse(\"file:///storage/emulated/0/Pictures/JPEG_20150814_223226_-1110502600.jpg\"));\nThe image loaded from the photo that I took from the camera is very small, but the image loaded from the other photo(ex. screenshots) is normal.\n", "url": "https://github.com/facebook/fresco/issues/543", "user": "YuanJialiang", "labels": ["bug"], "created": "2015-08-14 14:43:24", "closed": "2015-10-19 23:47:46", "commits": {}, "ttf": 66.00027777777778, "commitsDetails": []}, {"title": "Scale bug on android 4.4.2", "body": "Hello, I've found strange bug on android 4.4.2 (see screenshot). DraweeView is placed in ViewPager with ScaleType FIT_CENTER. \n\n![screenshot](https://cloud.githubusercontent.com/assets/1586158/9274847/ba3b5c7e-42a1-11e5-8d91-815921fad100.jpg)\n\nLayout is:\n\n```\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n         android:layout_width=\"match_parent\"\n         android:layout_height=\"match_parent\"\n         android:background=\"@android:color/transparent\">\n\n    <android.support.v4.view.ViewPager\n        android:id=\"@+id/photos_pager\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:background=\"@android:color/transparent\"\n        android:visibility=\"invisible\"/>\n</FrameLayout>\n```\n\nInstantiation code:\n\n```\n@Override\npublic Object instantiateItem(ViewGroup container, int position) {\n    final ZoomableDraweeView v = new ZoomableDraweeView(container.getContext());\n    v.setVerticalDragListener(mVerticalDragListener);\n\n    GenericDraweeHierarchy hierarchy = mHotelImageHierarchyFactory.newHierarchyWithoutBackground();\n    hierarchy.setActualImageScaleType(ScalingUtils.ScaleType.FIT_CENTER);\n\n    DraweeController controller = Fresco.newDraweeControllerBuilder()\n            .setLowResImageRequest(ImageRequest.fromUri(getImageUrl(position, mPreloadImageSize)))\n            .setUri(Uri.parse(getImageUrl(position, mImageSize)))\n            .build();\n\n    v.setHierarchy(hierarchy);\n    v.setController(controller);\n    container.addView(v);\n    v.setTag(getTagForPosition(position));\n    return v;\n}\n```\n", "url": "https://github.com/facebook/fresco/issues/542", "user": "nikslushkin", "labels": ["bug"], "created": "2015-08-14 13:30:56", "closed": "2017-07-11 11:55:01", "commits": {}, "ttf": 696.0002777777778, "commitsDetails": []}, {"title": "Fresco won't recycle the memory on Lollipop .", "body": "I show some picture using viewpager. Viewpager item is Fragment. \n Even though Fregment is detroy. GC is not occur.\nKeep add Image to memory. \n\n![11](https://cloud.githubusercontent.com/assets/6457985/9247708/69a155a4-41f0-11e5-8af0-5033929813af.png)\n\n![222](https://cloud.githubusercontent.com/assets/6457985/9247792/1acb1540-41f1-11e5-95e7-01d21d49a062.png)\n\ninit Fresco\n\n```\n  ImagePipelineConfig config = OkHttpImagePipelineConfigFactory\n                .newBuilder(this, DCB_RestfulAdapter.getClient())\n                .build();\n        Fresco.initialize(this, config);\n```\n\nshowing image\n\n```\n GenericDraweeHierarchyBuilder builder = new GenericDraweeHierarchyBuilder(getResources());\n            GenericDraweeHierarchy hierarchy = builder.setFadeDuration(300)\n            .setActualImageScaleType(ScalingUtils.ScaleType.FIT_CENTER)\n            .setProgressBarImage(new CustomProgressbarDrawable(this))\n            .build();\n\n            hierarchy.setPlaceholderImage(R.drawable.ic_placeholder);\n\n\n            ImageRequest imageRequest = ImageRequestBuilder.newBuilderWithSource(Uri.parse(url))\n                .setResizeOptions(new ResizeOptions(Utils.getScreenWidth(getActivity()), Utils.getScreenHeight(getActivity())))\n//                .setResizeOptions(new ResizeOptions(300, 300))\n                .setAutoRotateEnabled(true)\n                .build();\n\n\n            DraweeController draweeController = Fresco.newDraweeControllerBuilder()\n\n                    .setImageRequest(imageRequest)\n                    .setAutoPlayAnimations(true)\n                    .setOldController(view.getController())\n\n                    .build();\n            view.setController(draweeController);\n            view.setHierarchy(hierarchy);\n            view.setAspectRatio(1.33f);\n```\n", "url": "https://github.com/facebook/fresco/issues/537", "user": "leeyc09", "labels": ["bug"], "created": "2015-08-13 10:28:56", "closed": "2018-01-19 11:47:58", "commits": {}, "ttf": 890.0002777777778, "commitsDetails": []}, {"title": "Load local image cause some problem on version 0.6.0", "body": "Usually appear at the second(or more) time, when I try to load images at same place.\nActivity crashed,  no error log printed.\nIt\u2019s ok when I use the version 0.4.0.\n", "url": "https://github.com/facebook/fresco/issues/522", "user": "taolulu", "labels": ["bug"], "created": "2015-08-07 13:11:37", "closed": "2015-08-10 14:47:04", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Resources not being closed", "body": "I'm getting lots of errors when using strict mode:\n\nA resource was acquired at attached stack trace but never released. See java.io.Closeable for information on avoiding resource leaks.\n    java.lang.Throwable: Explicit termination method 'close' not called\n            at dalvik.system.CloseGuard.open(CloseGuard.java:184)\n            at java.io.FileInputStream.<init>(FileInputStream.java:80)\n            at com.facebook.imagepipeline.producers.LocalFetchProducer$3.get(LocalFetchProducer.java:128)\n            at com.facebook.imagepipeline.producers.LocalFetchProducer$3.get(LocalFetchProducer.java:124)\n            at com.facebook.imagepipeline.image.EncodedImage.getInputStream(EncodedImage.java:145)\n            at com.facebook.imagepipeline.producers.LocalFetchProducer$1.getResult(LocalFetchProducer.java:73)\n            at com.facebook.imagepipeline.producers.LocalFetchProducer$1.getResult(LocalFetchProducer.java:56)\n            at com.facebook.common.executors.StatefulRunnable.run(StatefulRunnable.java:45)\n            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n            at java.lang.Thread.run(Thread.java:841)\n", "url": "https://github.com/facebook/fresco/issues/517", "user": "ewills", "labels": ["bug"], "created": "2015-08-05 18:17:17", "closed": "2015-08-10 14:46:14", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Can't use drawable with colorFilter as placeholder when roundAsCircle is true", "body": "I'm trying to use a drawable with a color filter. If i set the rounding params i get the placeholder without color filter, if i remove them it works correctly.\nThis is the code i'm using:\n\n```\n       SimpleDraweeView simpleDraweeView = (SimpleDraweeView) findViewById(R.id.draweeview);\n\n        Drawable drawable = getResources().getDrawable(R.drawable.placeholder);\n        drawable.setColorFilter(getResources().getColor(R.color.green), PorterDuff.Mode.SRC_IN);\n\n        GenericDraweeHierarchyBuilder builder =\n                new GenericDraweeHierarchyBuilder(getResources());\n        GenericDraweeHierarchy hierarchy = builder\n                .setPlaceholderImage(drawable)\n                .setRoundingParams(\n                        new RoundingParams()\n                                .setBorder(getResources().getColor(R.color.gray), 1)\n\n                ).build();\n\n\n        simpleDraweeView.setHierarchy(hierarchy);\n        simpleDraweeView.setImageURI(Uri.parse(\"http://png-1.findicons.com/files/icons/1072/face_avatars/300/i04.png\"));\n```\n\nThanks :)\n", "url": "https://github.com/facebook/fresco/issues/511", "user": "radon", "labels": ["bug"], "created": "2015-08-04 08:22:23", "closed": "2016-09-27 21:46:20", "commits": {}, "ttf": 420.0002777777778, "commitsDetails": []}, {"title": "Write to disk cache conditions ?", "body": "It seems like Fresco only write files with image extension (eg: .png, .jpg, .bmp) to disk cache.\nIs there any option to modify this to allow image caching for other extensions ? \n", "url": "https://github.com/facebook/fresco/issues/510", "user": "chunyong1991", "labels": ["bug"], "created": "2015-08-04 04:22:34", "closed": "2015-12-11 10:49:46", "commits": {}, "ttf": 129.00027777777777, "commitsDetails": []}, {"title": "ShapeDrawable mutation not working on Android 4.1.2", "body": "```\njava.lang.NullPointerException\n       at android.graphics.Rect.<init>(Rect.java:72)\n       at android.graphics.drawable.ShapeDrawable.mutate(ShapeDrawable.java:377)\n       at com.facebook.drawee.drawable.ForwardingDrawable.mutate(ForwardingDrawable.java:160)\n       at com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(FadeDrawable.java:304)\n       at com.facebook.drawee.drawable.FadeDrawable.draw(FadeDrawable.java:293)\n       at com.facebook.drawee.drawable.ForwardingDrawable.draw(ForwardingDrawable.java:140)\n       at com.facebook.drawee.generic.GenericDraweeHierarchy$RootDrawable.draw(GenericDraweeHierarchy.java:133)\n       at android.widget.ImageView.onDraw(ImageView.java:984)\n```\n\nAny ideas what could be causing this?\nOnly seems to be happening specifically on Android version 4.1.2, both on Samsung devices.\n", "url": "https://github.com/facebook/fresco/issues/501", "user": "emhagman", "labels": ["bug"], "created": "2015-07-28 15:28:51", "closed": "2018-07-12 14:37:12", "commits": {}, "ttf": 1079.0002777777777, "commitsDetails": []}, {"title": "SimpleDraweeView rounded inside scrollview overlaps ActionBar", "body": "When I put a rounded image inside an ScrollView or a ListView I get a weird behaviour: While scrolling to the bottom, the image overlaps the action bar and it keeps there when I go up.\n\n![hrqgv](https://cloud.githubusercontent.com/assets/6807077/8912076/ab877e5e-3466-11e5-9de7-89bf52ba23bd.png)\n\nThis issue happens on a Samsung S5, but when I run it on a Nexus 4 it works perfectly.\n", "url": "https://github.com/facebook/fresco/issues/499", "user": "SirKuryaki", "labels": ["bug"], "created": "2015-07-27 16:55:09", "closed": "2017-07-13 12:17:00", "commits": {}, "ttf": 716.0002777777778, "commitsDetails": []}, {"title": "ImageRequest setPostProcessor will cause the screen jump when recyclerview load more content", "body": "ImageRequest setPostProcessor will cause the screen jump when recyclerview load more content\n", "url": "https://github.com/facebook/fresco/issues/498", "user": "marsyu", "labels": ["bug"], "created": "2015-07-27 09:50:49", "closed": "2017-08-31 14:03:35", "commits": {}, "ttf": 766.0002777777778, "commitsDetails": []}, {"title": "Now image loading speed really fast, but not particularly smooth slide", "body": "I have a GridView,Sensory integration 0.6.0 version, when I scroll quickly to the head or tail, image loading speed really fast a lot, but found quickly scroll process, some slow is not smooth\n", "url": "https://github.com/facebook/fresco/issues/497", "user": "duanyuGit", "labels": ["bug"], "created": "2015-07-27 02:47:15", "closed": "2015-08-10 14:45:13", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "sample comparison error", "body": "07-25 03:08:37.265  28158-28518/com.facebook.samples.comparison E/unknown:JfifUtil\ufe55 2e0867cb: getDimensions\n    java.io.IOException: no more bytes\n            at com.facebook.imageutils.StreamProcessor.readPackedInt(StreamProcessor.java:34)\n            at com.facebook.imageutils.JfifUtil.moveToMarker(JfifUtil.java:129)\n            at com.facebook.imageutils.JfifUtil.getDimensions(JfifUtil.java:100)\n            at com.facebook.imagepipeline.image.EncodedImage.parseMetaData(EncodedImage.java:285)\n            at com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$AddImageTransformMetaDataConsumer.onNewResultImpl(AddImageTransformMetaDataProducer.java:46)\n            at com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$AddImageTransformMetaDataConsumer.onNewResultImpl(AddImageTransformMetaDataProducer.java:32)\n            at com.facebook.imagepipeline.producers.BaseConsumer.onNewResult(BaseConsumer.java:49)\n            at com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer.onNextResult(MultiplexProducer.java:442)\n            at com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer.onNewResultImpl(MultiplexProducer.java:499)\n            at com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer.onNewResultImpl(MultiplexProducer.java:496)\n            at com.facebook.imagepipeline.producers.BaseConsumer.onNewResult(BaseConsumer.java:49)\n            at com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer$1.onNewResultImpl(EncodedMemoryCacheProducer.java:88)\n            at com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer$1.onNewResultImpl(EncodedMemoryCacheProducer.java:83)\n            at com.facebook.imagepipeline.producers.BaseConsumer.onNewResult(BaseConsumer.java:49)\n            at com.facebook.imagepipeline.producers.DiskCacheProducer$DiskCacheConsumer.onNewResultImpl(DiskCacheProducer.java:184)\n            at com.facebook.imagepipeline.producers.DiskCacheProducer$DiskCacheConsumer.onNewResultImpl(DiskCacheProducer.java:165)\n            at com.facebook.imagepipeline.producers.BaseConsumer.onNewResult(BaseConsumer.java:49)\n            at com.facebook.imagepipeline.producers.NetworkFetchProducer.notifyConsumer(NetworkFetchProducer.java:167)\n            at com.facebook.imagepipeline.producers.NetworkFetchProducer.maybeHandleIntermediateResult(NetworkFetchProducer.java:145)\n            at com.facebook.imagepipeline.producers.NetworkFetchProducer.onResponse(NetworkFetchProducer.java:104)\n            at com.facebook.imagepipeline.producers.NetworkFetchProducer.access$000(NetworkFetchProducer.java:37)\n            at com.facebook.imagepipeline.producers.NetworkFetchProducer$1.onResponse(NetworkFetchProducer.java:72)\n            at com.facebook.imagepipeline.backends.okhttp.OkHttpNetworkFetcher$2.onResponse(OkHttpNetworkFetcher.java:117)\n            at com.squareup.okhttp.Call$AsyncCall.execute(Call.java:168)\n            at com.squareup.okhttp.internal.NamedRunnable.run(NamedRunnable.java:33)\n            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n            at java.lang.Thread.run(Thread.java:818)\n", "url": "https://github.com/facebook/fresco/issues/493", "user": "danhantao", "labels": ["bug"], "created": "2015-07-25 07:16:57", "closed": "2015-08-10 14:56:04", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "fresco:placeholderImageScaleType does not seem to have any effect (in GridView)", "body": "I've got a SimpleDraweeView in a GridView with XML:\n\n```\n<com.facebook.drawee.view.SimpleDraweeView\n    android:id=\"@+id/redacted\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    fresco:viewAspectRatio=\"0.75\"\n    fresco:placeholderImageScaleType=\"centerCrop\" />\n```\n\nI'm setting the placeholder using:\n\nhierarchy.setPlaceholderImage(new BitmapDrawable(context.getResources(), iconPlaceholder));\n\nRegardless of the value of fresco:placeholderImageScaleType, the placeholder scaling appears to be fitXY (i.e., image aspect ratio not preserved).  Scaling of the actual image is working great.\n", "url": "https://github.com/facebook/fresco/issues/487", "user": "ewills", "labels": ["bug"], "created": "2015-07-23 17:54:26", "closed": "2017-08-31 14:02:51", "commits": {}, "ttf": 769.0002777777778, "commitsDetails": []}, {"title": "SimpleDraweeView wrong scale when using rounded corners", "body": "When setting both:\n\n```\nandroid:layout_width=\"60dp\"\nandroid:layout_height=\"80dp\"\n...\nfresco:roundedCornerRadius=\"4dp\"\nfresco:actualImageScaleType=\"fitXY\"\n...\n```\n\nThe image gets rounded corners but the image drawn is not fitting the space. I can just see the top left corner of the image loaded (the image is bigger than the space).\n", "url": "https://github.com/facebook/fresco/issues/486", "user": "elikohen", "labels": ["bug"], "created": "2015-07-23 13:41:36", "closed": "2015-10-16 17:12:47", "commits": {}, "ttf": 85.00027777777778, "commitsDetails": []}, {"title": "java.util.concurrent.TimeoutException", "body": "java.util.concurrent.TimeoutException: com.facebook.common.references.CloseableReference.finalize() timed out after 10 seconds\n       at com.facebook.common.references.CloseableReference.finalize(CloseableReference.java:200)\n       at java.lang.Daemons$FinalizerDaemon.doFinalize(Daemons.java:187)\n       at java.lang.Daemons$FinalizerDaemon.run(Daemons.java:170)\n       at java.lang.Thread.run(Thread.java:841)\n", "url": "https://github.com/facebook/fresco/issues/457", "user": "obaniu2006", "labels": ["bug"], "created": "2015-07-15 03:10:58", "closed": "2015-10-16 11:02:03", "commits": {}, "ttf": 93.00027777777778, "commitsDetails": []}, {"title": "ClassCastException in memory cache", "body": "```\njava.lang.ClassCastException: com.facebook.imagepipeline.cache.CountingMemoryCache$Entry cannot be cast to com.facebook.imagepipeline.image.CloseableImage\n       at com.facebook.imagepipeline.cache.BitmapCountingMemoryCacheFactory$1.getSizeInBytes(BitmapCountingMemoryCacheFactory.java:23)\n       at com.facebook.imagepipeline.cache.CountingLruMap.getValueSizeInBytes(CountingLruMap.java:133)\n       at com.facebook.imagepipeline.cache.CountingLruMap.put(CountingLruMap.java:97)\n       at com.facebook.imagepipeline.cache.CountingMemoryCache.maybeAddToExclusives(CountingMemoryCache.java:224)\n       at com.facebook.imagepipeline.cache.CountingMemoryCache.releaseClientReference(CountingMemoryCache.java:213)\n       at com.facebook.imagepipeline.cache.CountingMemoryCache.access$000(CountingMemoryCache.java:44)\n       at com.facebook.imagepipeline.cache.CountingMemoryCache$2.release(CountingMemoryCache.java:202)\n       at com.facebook.common.references.SharedReference.deleteReference(SharedReference.java:211)\n       at com.facebook.common.references.CloseableReference.close(CloseableReference.java:146)\n       at com.facebook.common.references.CloseableReference.closeSafely(CloseableReference.java:265)\n       at com.facebook.imagepipeline.producers.JobScheduler.doJob(JobScheduler.java:217)\n       at com.facebook.imagepipeline.producers.JobScheduler.access$000(JobScheduler.java:30)\n       at com.facebook.imagepipeline.producers.JobScheduler$1.run(JobScheduler.java:68)\n       at com.facebook.common.executors.SerialDelegatingExecutor.executeSingleCommand(SerialDelegatingExecutor.java:76)\n       at com.facebook.common.executors.SerialDelegatingExecutor.access$000(SerialDelegatingExecutor.java:24)\n       at com.facebook.common.executors.SerialDelegatingExecutor$1.run(SerialDelegatingExecutor.java:47)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)\n       at java.lang.Thread.run(Thread.java:856)\n```\n", "url": "https://github.com/facebook/fresco/issues/456", "user": "obaniu2006", "labels": ["bug"], "created": "2015-07-15 03:04:11", "closed": "2017-07-11 11:53:15", "commits": {}, "ttf": 727.0002777777778, "commitsDetails": []}, {"title": "Exception in SecureHashUtil initializer when building with Maven", "body": "ANDROID VERSION4.1.1\u3001DEVICEU705T\n\n```\njava.lang.ExceptionInInitializerError\n       at com.facebook.cache.disk.DiskStorageCache.getResourceId(DiskStorageCache.java:626)\n       at com.facebook.cache.disk.DiskStorageCache.getResource(DiskStorageCache.java:197)\n       at com.facebook.imagepipeline.cache.BufferedDiskCache.readFromDiskCache(BufferedDiskCache.java:185)\n       at com.facebook.imagepipeline.cache.BufferedDiskCache.access$300(BufferedDiskCache.java:38)\n       at com.facebook.imagepipeline.cache.BufferedDiskCache$1.call(BufferedDiskCache.java:104)\n       at com.facebook.imagepipeline.cache.BufferedDiskCache$1.call(BufferedDiskCache.java:88)\n       at bolts.Task$2.run(Task.java:195)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)\n       at java.lang.Thread.run(Thread.java:856)\nCaused by: java.lang.ArrayIndexOutOfBoundsException: length=0; index=16\n       at com.facebook.common.util.SecureHashUtil.<clinit>(SecureHashUtil.java:76)\n       at com.facebook.cache.disk.DiskStorageCache.getResourceId(DiskStorageCache.java:626)\n       at com.facebook.cache.disk.DiskStorageCache.getResource(DiskStorageCache.java:197)\n       at com.facebook.imagepipeline.cache.BufferedDiskCache.readFromDiskCache(BufferedDiskCache.java:185)\n       at com.facebook.imagepipeline.cache.BufferedDiskCache.access$300(BufferedDiskCache.java:38)\n       at com.facebook.imagepipeline.cache.BufferedDiskCache$1.call(BufferedDiskCache.java:104)\n       at com.facebook.imagepipeline.cache.BufferedDiskCache$1.call(BufferedDiskCache.java:88)\n       at bolts.Task$2.run(Task.java:195)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)\n       at java.lang.Thread.run(Thread.java:856)\n```\n", "url": "https://github.com/facebook/fresco/issues/451", "user": "obaniu2006", "labels": ["bug"], "created": "2015-07-13 10:24:15", "closed": "2017-07-11 11:56:00", "commits": {}, "ttf": 729.0002777777778, "commitsDetails": []}, {"title": "java.lang.IllegalArgumentException", "body": "ANDROID VERSION4.2.2\n\njava.lang.IllegalArgumentException\n       at com.facebook.common.internal.Preconditions.checkArgument(Preconditions.java:108)\n       at com.facebook.imagepipeline.memory.BitmapCounter.decrease(BitmapCounter.java:64)\n       at com.facebook.imagepipeline.bitmaps.DalvikBitmapFactory$1.release(DalvikBitmapFactory.java:54)\n       at com.facebook.imagepipeline.bitmaps.DalvikBitmapFactory$1.release(DalvikBitmapFactory.java:50)\n       at com.facebook.common.references.SharedReference.deleteReference(SharedReference.java:211)\n       at com.facebook.common.references.CloseableReference.close(CloseableReference.java:146)\n       at com.facebook.imagepipeline.image.CloseableStaticBitmap.close(CloseableStaticBitmap.java:81)\n       at com.facebook.common.internal.Closeables.close(Closeables.java:75)\n       at com.facebook.common.references.CloseableReference$1.release(CloseableReference.java:75)\n       at com.facebook.common.references.CloseableReference$1.release(CloseableReference.java:71)\n       at com.facebook.common.references.SharedReference.deleteReference(SharedReference.java:211)\n       at com.facebook.common.references.CloseableReference.close(CloseableReference.java:146)\n       at com.facebook.common.references.CloseableReference.closeSafely(CloseableReference.java:265)\n       at com.facebook.imagepipeline.cache.CountingMemoryCache.releaseClientReference(CountingMemoryCache.java:216)\n       at com.facebook.imagepipeline.cache.CountingMemoryCache.access$000(CountingMemoryCache.java:44)\n       at com.facebook.imagepipeline.cache.CountingMemoryCache$2.release(CountingMemoryCache.java:202)\n       at com.facebook.common.references.SharedReference.deleteReference(SharedReference.java:211)\n       at com.facebook.common.references.CloseableReference.close(CloseableReference.java:146)\n       at com.facebook.common.references.CloseableReference.closeSafely(CloseableReference.java:265)\n       at com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseImage(PipelineDraweeController.java:127)\n       at com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseImage(PipelineDraweeController.java:41)\n       at com.facebook.drawee.controller.AbstractDraweeController.onNewResultInternal(AbstractDraweeController.java:482)\n       at com.facebook.drawee.controller.AbstractDraweeController.access$000(AbstractDraweeController.java:47)\n       at com.facebook.drawee.controller.AbstractDraweeController$1.onNewResultImpl(AbstractDraweeController.java:413)\n       at com.facebook.datasource.BaseDataSubscriber.onNewResult(BaseDataSubscriber.java:43)\n       at com.facebook.datasource.AbstractDataSource$1.run(AbstractDataSource.java:181)\n       at android.os.Handler.handleCallback(Handler.java:800)\n       at android.os.Handler.dispatchMessage(Handler.java:100)\n       at android.os.Looper.loop(Looper.java:194)\n       at android.app.ActivityThread.main(ActivityThread.java:5433)\n       at java.lang.reflect.Method.invokeNative(Method.java)\n       at java.lang.reflect.Method.invoke(Method.java:525)\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:853)\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:620)\n       at dalvik.system.NativeStart.main(NativeStart.java)\n", "url": "https://github.com/facebook/fresco/issues/449", "user": "obaniu2006", "labels": ["bug"], "created": "2015-07-13 10:05:28", "closed": "2015-10-30 12:11:27", "commits": {}, "ttf": 109.00027777777778, "commitsDetails": []}, {"title": "android:tint is not taking affect", "body": "Hi,\nI am simply using the following declaration. I need the tint on the image, but its not appearing at all.\n        <com.facebook.drawee.view.SimpleDraweeView\n            android:id=\"@+id/imgItemPrimary\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"200dp\"\n            android:scaleType=\"centerCrop\"\n            android:tint=\"@color/tint_background\"\n            fresco:placeholderImage=\"@drawable/img_placeholder\"\n            fresco:roundedCornerRadius=\"5dp\"\n            fresco:roundBottomLeft=\"false\"\n            fresco:roundBottomRight=\"false\"\n            fresco:roundingBorderWidth=\"1dp\"\n            />\n\nKindly advice what am I missing here.\n\nThanks,\nImran\n", "url": "https://github.com/facebook/fresco/issues/443", "user": "imraansarwar", "labels": ["bug"], "created": "2015-07-11 22:29:14", "closed": "2015-10-15 09:58:56", "commits": {}, "ttf": 95.00027777777778, "commitsDetails": []}, {"title": "Jpeg use progressive render throw exception", "body": "7940-9319/? E/unknown:JfifUtil\ufe55 2a4996f5: getDimensions\n    java.io.IOException: no more bytes\n            at com.facebook.imageutils.StreamProcessor.readPackedInt(StreamProcessor.java:34)\n            at com.facebook.imageutils.JfifUtil.moveToMarker(JfifUtil.java:129)\n            at com.facebook.imageutils.JfifUtil.getDimensions(JfifUtil.java:100)\n            at com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer.setEncodedImageMetaData(AddImageTransformMetaDataProducer.java:64)\n            at com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer.access$100(AddImageTransformMetaDataProducer.java:28)\n            at com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$AddImageTransformMetaDataConsumer.onNewResultImpl(AddImageTransformMetaDataProducer.java:53)\n            at com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$AddImageTransformMetaDataConsumer.onNewResultImpl(AddImageTransformMetaDataProducer.java:40)\n            at com.facebook.imagepipeline.producers.BaseConsumer.onNewResult(BaseConsumer.java:49)\n            at com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer.onNextResult(MultiplexProducer.java:442)\n            at com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer.onNewResultImpl(MultiplexProducer.java:499)\n            at com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer.onNewResultImpl(MultiplexProducer.java:496)\n            at com.facebook.imagepipeline.producers.BaseConsumer.onNewResult(BaseConsumer.java:49)\n            at com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer$1.onNewResultImpl(EncodedMemoryCacheProducer.java:88)\n            at com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer$1.onNewResultImpl(EncodedMemoryCacheProducer.java:83)\n            at com.facebook.imagepipeline.producers.BaseConsumer.onNewResult(BaseConsumer.java:49)\n            at com.facebook.imagepipeline.producers.DiskCacheProducer$DiskCacheConsumer.onNewResultImpl(DiskCacheProducer.java:184)\n            at com.facebook.imagepipeline.producers.DiskCacheProducer$DiskCacheConsumer.onNewResultImpl(DiskCacheProducer.java:165)\n            at com.facebook.imagepipeline.producers.BaseConsumer.onNewResult(BaseConsumer.java:49)\n            at com.facebook.imagepipeline.producers.NetworkFetchProducer.notifyConsumer(NetworkFetchProducer.java:167)\n            at com.facebook.imagepipeline.producers.NetworkFetchProducer.maybeHandleIntermediateResult(NetworkFetchProducer.java:145)\n            at com.facebook.imagepipeline.producers.NetworkFetchProducer.onResponse(NetworkFetchProducer.java:104)\n            at com.facebook.imagepipeline.producers.NetworkFetchProducer.access$000(NetworkFetchProducer.java:37)\n            at com.facebook.imagepipeline.producers.NetworkFetchProducer$1.onResponse(NetworkFetchProducer.java:72)\n            at com.koudai.weidian.buyer.image.imagefetcher.WeiDianNetworkFetcher$1.run(WeiDianNetworkFetcher.java:74)\n            at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\n            at java.util.concurrent.FutureTask.run(FutureTask.java:237)\n            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n            at java.lang.Thread.run(Thread.java:818)\n", "url": "https://github.com/facebook/fresco/issues/440", "user": "KrystalJake1989", "labels": ["bug"], "created": "2015-07-09 11:50:48", "closed": "2015-09-25 15:48:58", "commits": {}, "ttf": 78.00027777777778, "commitsDetails": []}, {"title": "NPE for application context in ProducerFactory on initialization", "body": "```\nCaused by: java.lang.NullPointerException\n       at android.app.ContextImpl.getAssets(ContextImpl.java:943)\n       at android.content.ContextWrapper.getAssets(ContextWrapper.java:83)\n       at com.facebook.imagepipeline.core.ProducerFactory.<init>(ProducerFactory.java:99)\n       at com.facebook.imagepipeline.core.ImagePipelineFactory.getProducerFactory(ImagePipelineFactory.java:189)\n```\n", "url": "https://github.com/facebook/fresco/issues/434", "user": "obaniu2006", "labels": ["bug"], "created": "2015-07-08 04:26:35", "closed": "2018-01-16 18:20:21", "commits": {}, "ttf": 923.0002777777778, "commitsDetails": []}, {"title": "Performance issue on long list and full width images", "body": "I am experiencing fresco `SimpleDraweeView` on RecyclerView: long list and full width images. It's quite laggy. I turned on GPU rendering in developer options and it jumped to the top of the screen at some points. \nI also tried `ImageView` with simple `AsyncTask Image Loader` which doesn't have cache, it's pretty fast and smooth. \n\nHere are full testing specs: \n- Nexus 5\n- Enless recyclerView list\n- Full width images (image size is quite small)\n- Flexible list (some items have text only, some other items have images and text)\n\nDo you have any idea on how to fix this issue? \n", "url": "https://github.com/facebook/fresco/issues/428", "user": "henrytao-me", "labels": ["bug"], "created": "2015-07-06 09:04:20", "closed": "2017-07-11 16:08:50", "commits": {}, "ttf": 736.0002777777778, "commitsDetails": []}, {"title": "Exif thumbnail displayed instead of original image", "body": "when try to display following image CACHED in local using Fresco with \"file://....., only thumbnail from Exif is display, full image is not displayed. \n\nhttp://blog.kasal.info/images/20150627224228_img_8702_blog.jpg\n\nImage metadata can be view using this link: (http://regex.info/exif.cgi?dummy=on&imgurl=http%3A%2F%2Fblog.kasal.info%2Fimages%2F20150627224228_img_8702_blog.jpg)\n\nHow to reproduce:\n1. Download image from http://blog.kasal.info/images/20150627224228_img_8702_blog.jpg\n2. Save image to SDcard as file name: file:///storage/emulated/0/cache/Image/0384d438b268f93f2ab1ded6b765ff33\n3. Code below:\n\nImageRequest request1 = ImageRequestBuilder.newBuilderWithSource(Uri.parse(\"file:///storage/emulated/0/cache/Image/0384d438b268f93f2ab1ded6b765ff33\"))\n        .build();\nImageRequest[] requests = {request1};\n\nDraweeController controller = Fresco.newDraweeControllerBuilder()\n        .setFirstAvailableImageRequests(requests)\n        .setAutoPlayAnimations(true)\n        .build();\nsimpleDraweeView.setController(controller);\n", "url": "https://github.com/facebook/fresco/issues/415", "user": "ghost", "labels": ["bug"], "created": "2015-06-30 14:57:24", "closed": "2015-10-19 23:48:00", "commits": {}, "ttf": 111.00027777777778, "commitsDetails": []}, {"title": "The fresco pipeline may be blocked", "body": "If use fresco to load an png with some error, like: http://img.wdjimg.com/mms/icon/v1/9/f4/e2fed53a563d696d990484de34729f49_256_256.png , the whole fresco my be blocked, any image could be loaded any more.\n", "url": "https://github.com/facebook/fresco/issues/411", "user": "duguguiyu", "labels": ["bug"], "created": "2015-06-30 03:01:16", "closed": "2017-07-11 16:05:08", "commits": {}, "ttf": 742.0002777777778, "commitsDetails": []}, {"title": "Multiple Animated GIFs plays slow", "body": "Using multiple SimpleDraweeView in a gridView, displaying GIF from res, slows animation down.\nit feels like there's a single thread managing all the frame counts, instead of having each view manage its own count.\n\nNote: when displaying about 4 GIF's simultaneous - everything seems to work great. \nAt about 8 SimpleDraweeView in same screen - all the GIFs plays with lags.\n\nhow can I bypass that?\n\nsome code:\n\n```\n    DraweeController controller = Fresco.newDraweeControllerBuilder()\n            .setUri(Uri.parse(\"res:///\" + R.drawable.a))\n            .setAutoPlayAnimations(true)\n            .build();\n    draweeView = (SimpleDraweeView) findViewById(R.id.my_image_view1);\n    draweeView.setController(controller);\n\n    controller = Fresco.newDraweeControllerBuilder()\n            .setUri(Uri.parse(\"res:///\" + R.drawable.b))\n            .setControllerListener(controllerListener)\n            .build();\n    draweeView = (SimpleDraweeView) findViewById(R.id.my_image_view2);\n    draweeView.setController(controller);\n\n    controller = Fresco.newDraweeControllerBuilder()\n            .setUri(Uri.parse(\"res:///\" + R.drawable.c))\n            .setControllerListener(controllerListener)\n            .build();\n    draweeView = (SimpleDraweeView) findViewById(R.id.my_image_view3);\n    draweeView.setController(controller);\n\n    controller = Fresco.newDraweeControllerBuilder()\n            .setUri(Uri.parse(\"res:///\" + R.drawable.d))\n            .setControllerListener(controllerListener)\n            .build();\n    draweeView = (SimpleDraweeView) findViewById(R.id.my_image_view4);\n    draweeView.setController(controller);\n\n    controller = Fresco.newDraweeControllerBuilder()\n            .setUri(Uri.parse(\"res:///\" + R.drawable.e))\n            .setControllerListener(controllerListener)\n            .build();\n    draweeView = (SimpleDraweeView) findViewById(R.id.my_image_view5);\n    draweeView.setController(controller);\n\n    controller = Fresco.newDraweeControllerBuilder()\n            .setUri(Uri.parse(\"res:///\" + R.drawable.f))\n            .setAutoPlayAnimations(true)\n            .build();\n    draweeView = (SimpleDraweeView) findViewById(R.id.my_image_view6);\n    draweeView.setController(controller);\n\n    controller = Fresco.newDraweeControllerBuilder()\n            .setUri(Uri.parse(\"res:///\" + R.drawable.g))\n            .setAutoPlayAnimations(true)\n            .build();\n    draweeView = (SimpleDraweeView) findViewById(R.id.my_image_view7);\n    draweeView.setController(controller);\n\n    controller = Fresco.newDraweeControllerBuilder()\n            .setUri(Uri.parse(\"res:///\" + R.drawable.h))\n            .setAutoPlayAnimations(true)\n            .build();\n    draweeView = (SimpleDraweeView) findViewById(R.id.my_image_view8);\n    draweeView.setController(controller);\n```\n", "url": "https://github.com/facebook/fresco/issues/398", "user": "WopKatan", "labels": ["bug"], "created": "2015-06-23 09:19:21", "closed": "2017-07-17 14:01:47", "commits": {}, "ttf": 755.0002777777778, "commitsDetails": []}, {"title": "Error inflating class com.facebook.drawee.view.SimpleDraweeView", "body": "I get the following error on around 2% of devices running my app (https://play.google.com/store/apps/details?id=com.tiikit.tiik) cant seem to sort it. Any thoughts?\n\nMy XML looks like this:\n\n``` xml\n<com.facebook.drawee.view.SimpleDraweeView\n                android:id=\"@+id/imageParseThumb\"\n                android:layout_width=\"fill_parent\"\n                android:layout_height=\"@dimen/dimImage\"\n                android:scaleType=\"centerCrop\"\n                app:placeholderImage=\"@drawable/thumbnail_image\"\n                android:layout_alignParentTop=\"true\"\n                android:layout_alignParentLeft=\"true\"/>\n```\n\nStack-trace:\n\n``` java\nandroid.view.InflateException: Binary XML file line #24: Error inflating class com.facebook.drawee.view.SimpleDraweeView\n       at android.view.LayoutInflater.createView(LayoutInflater.java:617)\n       at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:691)\n       at android.view.LayoutInflater.rInflate(LayoutInflater.java:750)\n       at android.view.LayoutInflater.rInflate(LayoutInflater.java:753)\n       at android.view.LayoutInflater.inflate(LayoutInflater.java:489)\n       at android.view.LayoutInflater.inflate(LayoutInflater.java:396)\n       at com.tiikit.tiik.posts.CardsAdapter.onCreateViewHolder(CardsAdapter.java:128)\n       at com.tiikit.tiik.posts.CardsAdapter.onCreateViewHolder(CardsAdapter.java:37)\n       at android.support.v7.widget.RecyclerView$Adapter.createViewHolder(RecyclerView.java:5062)\n       at android.support.v7.widget.RecyclerView$Recycler.getViewForPosition(RecyclerView.java:4368)\n       at android.support.v7.widget.RecyclerView$Recycler.getViewForPosition(RecyclerView.java:4278)\n       at android.support.v7.widget.LayoutState.next(LayoutState.java:86)\n       at android.support.v7.widget.StaggeredGridLayoutManager.fill(StaggeredGridLayoutManager.java:1415)\n       at android.support.v7.widget.StaggeredGridLayoutManager.onLayoutChildren(StaggeredGridLayoutManager.java:603)\n       at android.support.v7.widget.RecyclerView.dispatchLayout(RecyclerView.java:2673)\n       at android.support.v7.widget.RecyclerView.onLayout(RecyclerView.java:2971)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.support.v4.widget.SwipeRefreshLayout.onLayout(SwipeRefreshLayout.java:562)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.RelativeLayout.onLayout(RelativeLayout.java:948)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.FrameLayout.onLayout(FrameLayout.java:448)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.RelativeLayout.onLayout(RelativeLayout.java:948)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.FrameLayout.onLayout(FrameLayout.java:448)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.LinearLayout.setChildFrame(LinearLayout.java:1649)\n       at android.widget.LinearLayout.layoutVertical(LinearLayout.java:1507)\n       at android.widget.LinearLayout.onLayout(LinearLayout.java:1420)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.FrameLayout.onLayout(FrameLayout.java:448)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.LinearLayout.setChildFrame(LinearLayout.java:1649)\n       at android.widget.LinearLayout.layoutVertical(LinearLayout.java:1507)\n       at android.widget.LinearLayout.onLayout(LinearLayout.java:1420)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.FrameLayout.onLayout(FrameLayout.java:448)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.view.ViewRootImpl.performLayout(ViewRootImpl.java:1984)\n       at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1805)\n       at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1116)\n       at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:4370)\n       at android.view.Choreographer$CallbackRecord.run(Choreographer.java:725)\n       at android.view.Choreographer.doCallbacks(Choreographer.java:555)\n       at android.view.Choreographer.doFrame(Choreographer.java:525)\n       at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:711)\n       at android.os.Handler.handleCallback(Handler.java:667)\n       at android.os.Handler.dispatchMessage(Handler.java:112)\n       at android.os.Looper.loop(Looper.java:137)\n       at android.app.ActivityThread.main(ActivityThread.java:4873)\n       at java.lang.reflect.Method.invokeNative(Method.java)\n       at java.lang.reflect.Method.invoke(Method.java:528)\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:786)\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:553)\n       at dalvik.system.NativeStart.main(NativeStart.java)\nCaused by: java.lang.reflect.InvocationTargetException\n       at java.lang.reflect.Constructor.constructNative(Constructor.java)\n       at java.lang.reflect.Constructor._logged_newInstance(Constructor.java:434)\n       at android.view.LayoutInflater.createView(LayoutInflater.java:590)\n       at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:691)\n       at android.view.LayoutInflater.rInflate(LayoutInflater.java:750)\n       at android.view.LayoutInflater.rInflate(LayoutInflater.java:753)\n       at android.view.LayoutInflater.inflate(LayoutInflater.java:489)\n       at android.view.LayoutInflater.inflate(LayoutInflater.java:396)\n       at com.tiikit.tiik.posts.CardsAdapter.onCreateViewHolder(CardsAdapter.java:128)\n       at com.tiikit.tiik.posts.CardsAdapter.onCreateViewHolder(CardsAdapter.java:37)\n       at android.support.v7.widget.RecyclerView$Adapter.createViewHolder(RecyclerView.java:5062)\n       at android.support.v7.widget.RecyclerView$Recycler.getViewForPosition(RecyclerView.java:4368)\n       at android.support.v7.widget.RecyclerView$Recycler.getViewForPosition(RecyclerView.java:4278)\n       at android.support.v7.widget.LayoutState.next(LayoutState.java:86)\n       at android.support.v7.widget.StaggeredGridLayoutManager.fill(StaggeredGridLayoutManager.java:1415)\n       at android.support.v7.widget.StaggeredGridLayoutManager.onLayoutChildren(StaggeredGridLayoutManager.java:603)\n       at android.support.v7.widget.RecyclerView.dispatchLayout(RecyclerView.java:2673)\n       at android.support.v7.widget.RecyclerView.onLayout(RecyclerView.java:2971)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.support.v4.widget.SwipeRefreshLayout.onLayout(SwipeRefreshLayout.java:562)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.RelativeLayout.onLayout(RelativeLayout.java:948)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.FrameLayout.onLayout(FrameLayout.java:448)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.RelativeLayout.onLayout(RelativeLayout.java:948)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.FrameLayout.onLayout(FrameLayout.java:448)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.LinearLayout.setChildFrame(LinearLayout.java:1649)\n       at android.widget.LinearLayout.layoutVertical(LinearLayout.java:1507)\n       at android.widget.LinearLayout.onLayout(LinearLayout.java:1420)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.FrameLayout.onLayout(FrameLayout.java:448)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.LinearLayout.setChildFrame(LinearLayout.java:1649)\n       at android.widget.LinearLayout.layoutVertical(LinearLayout.java:1507)\n       at android.widget.LinearLayout.onLayout(LinearLayout.java:1420)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.FrameLayout.onLayout(FrameLayout.java:448)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.view.ViewRootImpl.performLayout(ViewRootImpl.java:1984)\n       at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1805)\n       at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1116)\n       at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:4370)\n       at android.view.Choreographer$CallbackRecord.run(Choreographer.java:725)\n       at android.view.Choreographer.doCallbacks(Choreographer.java:555)\n       at android.view.Choreographer.doFrame(Choreographer.java:525)\n       at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:711)\n       at android.os.Handler.handleCallback(Handler.java:667)\n       at android.os.Handler.dispatchMessage(Handler.java:112)\n       at android.os.Looper.loop(Looper.java:137)\n       at android.app.ActivityThread.main(ActivityThread.java:4873)\n       at java.lang.reflect.Method.invokeNative(Method.java)\n       at java.lang.reflect.Method.invoke(Method.java:528)\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:786)\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:553)\n       at dalvik.system.NativeStart.main(NativeStart.java)\nCaused by: java.lang.NullPointerException\n       at com.facebook.drawee.view.DraweeView.toString(DraweeView.java:179)\n       at java.lang.StringBuilder.append(StringBuilder.java:202)\n       at java.util.AbstractCollection.toString(AbstractCollection.java:383)\n       at java.util.Formatter.transform(Formatter.java:1419)\n       at java.util.Formatter.doFormat(Formatter.java:1079)\n       at java.util.Formatter.format(Formatter.java:1040)\n       at java.util.Formatter.format(Formatter.java:1009)\n       at java.lang.String.format(String.java:2050)\n       at java.lang.String.format(String.java:2024)\n       at android.droidblaze.ViewPool.findViewsByIdPair(ViewPool.java:88)\n       at android.droidblaze.ViewPool.updateView(ViewPool.java:75)\n       at android.view.View.onIDChanged(View.java:11779)\n       at android.view.View.<init>(View.java:3590)\n       at android.widget.ImageView.<init>(ImageView.java:114)\n       at android.widget.ImageView.<init>(ImageView.java:110)\n       at com.facebook.drawee.view.DraweeView.<init>(DraweeView.java:51)\n       at com.facebook.drawee.view.GenericDraweeView.<init>(GenericDraweeView.java:74)\n       at com.facebook.drawee.view.SimpleDraweeView.<init>(SimpleDraweeView.java:58)\n       at java.lang.reflect.Constructor.constructNative(Constructor.java)\n       at java.lang.reflect.Constructor._logged_newInstance(Constructor.java:434)\n       at android.view.LayoutInflater.createView(LayoutInflater.java:590)\n       at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:691)\n       at android.view.LayoutInflater.rInflate(LayoutInflater.java:750)\n       at android.view.LayoutInflater.rInflate(LayoutInflater.java:753)\n       at android.view.LayoutInflater.inflate(LayoutInflater.java:489)\n       at android.view.LayoutInflater.inflate(LayoutInflater.java:396)\n       at com.tiikit.tiik.posts.CardsAdapter.onCreateViewHolder(CardsAdapter.java:128)\n       at com.tiikit.tiik.posts.CardsAdapter.onCreateViewHolder(CardsAdapter.java:37)\n       at android.support.v7.widget.RecyclerView$Adapter.createViewHolder(RecyclerView.java:5062)\n       at android.support.v7.widget.RecyclerView$Recycler.getViewForPosition(RecyclerView.java:4368)\n       at android.support.v7.widget.RecyclerView$Recycler.getViewForPosition(RecyclerView.java:4278)\n       at android.support.v7.widget.LayoutState.next(LayoutState.java:86)\n       at android.support.v7.widget.StaggeredGridLayoutManager.fill(StaggeredGridLayoutManager.java:1415)\n       at android.support.v7.widget.StaggeredGridLayoutManager.onLayoutChildren(StaggeredGridLayoutManager.java:603)\n       at android.support.v7.widget.RecyclerView.dispatchLayout(RecyclerView.java:2673)\n       at android.support.v7.widget.RecyclerView.onLayout(RecyclerView.java:2971)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.support.v4.widget.SwipeRefreshLayout.onLayout(SwipeRefreshLayout.java:562)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.RelativeLayout.onLayout(RelativeLayout.java:948)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.FrameLayout.onLayout(FrameLayout.java:448)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.RelativeLayout.onLayout(RelativeLayout.java:948)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.FrameLayout.onLayout(FrameLayout.java:448)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.LinearLayout.setChildFrame(LinearLayout.java:1649)\n       at android.widget.LinearLayout.layoutVertical(LinearLayout.java:1507)\n       at android.widget.LinearLayout.onLayout(LinearLayout.java:1420)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.FrameLayout.onLayout(FrameLayout.java:448)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.LinearLayout.setChildFrame(LinearLayout.java:1649)\n       at android.widget.LinearLayout.layoutVertical(LinearLayout.java:1507)\n       at android.widget.LinearLayout.onLayout(LinearLayout.java:1420)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.widget.FrameLayout.onLayout(FrameLayout.java:448)\n       at android.view.View.layout(View.java:14085)\n       at android.view.ViewGroup.layout(ViewGroup.java:4395)\n       at android.view.ViewRootImpl.performLayout(ViewRootImpl.java:1984)\n       at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1805)\n       at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1116)\n       at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:4370)\n       at android.view.Choreographer$CallbackRecord.run(Choreographer.java:725)\n       at android.view.Choreographer.doCallbacks(Choreographer.java:555)\n       at android.view.Choreographer.doFrame(Choreographer.java:525)\n       at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:711)\n       at android.os.Handler.handleCallback(Handler.java:667)\n       at android.os.Handler.dispatchMessage(Handler.java:112)\n       at android.os.Looper.loop(Looper.java:137)\n       at android.app.ActivityThread.main(ActivityThread.java:4873)\n       at java.lang.reflect.Method.invokeNative(Method.java)\n       at java.lang.reflect.Method.invoke(Method.java:528)\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:786)\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:553)\n       at dalvik.system.NativeStart.main(NativeStart.java)\n```\n", "url": "https://github.com/facebook/fresco/issues/395", "user": "MojRoid", "labels": ["bug"], "created": "2015-06-20 12:42:15", "closed": "2015-10-05 08:54:30", "commits": {}, "ttf": 106.00027777777778, "commitsDetails": []}, {"title": "Google Map marker image display not working", "body": "Ok dudes I don't know how to fix this one. I have a Google map with markers using info windows consisting of an image and a title. \n\nAs the images are downloaded/retrieved from cache when a marker is clicked, I used to use the image download callback in UIL to call `adapter.getInfoContents(marker);`. This called a refresh of the image and it would draw correctly.\n\nNow however, I am using the code outlined [in the docs](http://frescolib.org/docs/listening-download-events.html). This works **everywhere but a Google Map**:\n\n```\npublic void loadImageForInfoWindow(final MyInfoWindowAdapter adapter, final Marker marker, final SimpleDraweeView draweeView, Uri imageURI, final TextView progressMessage, int imageOnFailID) {\n        ControllerListener controllerListener = new BaseControllerListener<ImageInfo>() {\n            @Override\n            public void onFinalImageSet(\n                    String id,\n                    @Nullable ImageInfo imageInfo,\n                    @Nullable Animatable anim) {\n                if (imageInfo == null) {\n                    return;\n                }\n                QualityInfo qualityInfo = imageInfo.getQualityInfo();\n                FLog.d(\"Final image received! \" +\n                                \"Size %d x %d\",\n                        \"Quality level %d, good enough: %s, full quality: %s\",\n                        imageInfo.getWidth(),\n                        imageInfo.getHeight(),\n                        qualityInfo.getQuality(),\n                        qualityInfo.isOfGoodEnoughQuality(),\n                        qualityInfo.isOfFullQuality());\n\n                //progressMessage.setVisibility(View.GONE);\n                //adapter.getInfoContents(marker);\n            }\n\n            @Override\n            public void onIntermediateImageSet(String id, @Nullable ImageInfo imageInfo) {\n                FLog.d(\"Intermediate image received\", \"\");\n            }\n\n            @Override\n            public void onFailure(String id, Throwable throwable) {\n                FLog.e(getClass(), throwable, \"Error loading %s\", id);\n                //progressMessage.setVisibility(View.GONE);\n            }\n        };\n\n        DraweeController controller = Fresco.newDraweeControllerBuilder()\n                .setControllerListener(controllerListener)\n                .setUri(imageURI)\n        // other setters\n        .build();\n        draweeView.setController(controller);\n    }\n```\n\nWhere getInfoContents() is:\n\n```\n@Override\n    public View getInfoContents(Marker marker) {\n        if (marker != null\n                && marker.isInfoWindowShown()) {\n            marker.hideInfoWindow();\n            marker.showInfoWindow();\n        }\n        return null;\n    }\n```\n\nNone of those callbacks trigger when implemented on a Google map. Is there anything I can do?\n", "url": "https://github.com/facebook/fresco/issues/393", "user": "danielwilson1702", "labels": ["bug"], "created": "2015-06-19 12:44:54", "closed": "2016-05-01 19:59:43", "commits": {}, "ttf": 317.0002777777778, "commitsDetails": []}, {"title": "How to Keep Session in Fresco with OKHTTP or Add Cookie Before Image URI call?", "body": "I login my server use retrofit with okhttp \nI login using the Retrofit with okhttp to the server .\nand I save Cookie at Preferences.\n\n``` java\nclient = new OkHttpClient();\nclient.interceptors().add(new AddCookiesInterceptor());\nclient.interceptors().add(new ReceivedCookiesInterceptor());\n```\n#### AddCookiesInterceptor.java\n\n``` java\npublic class AddCookiesInterceptor implements Interceptor {\n\n    @Override\n    public Response intercept(Chain chain) throws IOException {\n        Request.Builder builder = chain.request().newBuilder();\n        HashSet<String> preferences = (HashSet) PreferenceHelper.getDefaultPreferences().getStringSet(PreferenceHelper.PREF_COOKIES, new HashSet<String>());\n        for (String cookie : preferences) {\n            builder.addHeader(\"Cookie\", cookie);\n            Log.v(\"OkHttp\", \"Adding Header: \" + cookie); // This is done so I know which headers are being added; this interceptor is used after the normal logging of OkHttp\n        }\n\n        return chain.proceed(builder.build());\n    }\n}\n```\n#### ReceivedCookiesInterceptor.java\n\n``` java\npublic class ReceivedCookiesInterceptor implements Interceptor {\n    @Override\n    public Response intercept(Interceptor.Chain chain) throws IOException {\n        Response originalResponse = chain.proceed(chain.request());\n\n        if (!originalResponse.headers(\"Set-Cookie\").isEmpty()) {\n            HashSet<String> cookies = new HashSet<>();\n\n            for (String header : originalResponse.headers(\"Set-Cookie\")) {\n                cookies.add(header);\n            }\n\n\n            PreferenceHelper.getDefaultPreferences().edit()\n                    .putStringSet(PreferenceHelper.PREF_COOKIES, cookies)\n                    .apply();\n\n        }\n\n        return originalResponse;\n    }\n}\n```\n\nAnd then I initialize Fresco.\n\n``` java\nImagePipelineConfig config = OkHttpImagePipelineConfigFactory\n    .newBuilder(this, CustomRestAdapter.getClient())\n    .build();\n Fresco.initialize(this , config);\n\n...\n\npublic static DirectFoldertInterface getInstance() {\n    if (DirectFoldertInterface == null) {\n        client = new OkHttpClient();\n        client.setConnectTimeout(1500, TimeUnit.MILLISECONDS);\n        client.setWriteTimeout(1500, TimeUnit.MILLISECONDS);\n        client.setReadTimeout(1500, TimeUnit.MILLISECONDS);\n        client.interceptors().add(new AddCookiesInterceptor());\n        client.interceptors().add(new ReceivedCookiesInterceptor());\n}\n```\n\nBut Fresco can't load Image.\nI Think The Problem is cookie.\nHow to Keep Session in Fresco with OKHTTP or Add Cookie Before Image URI call?\n", "url": "https://github.com/facebook/fresco/issues/385", "user": "leeyc09", "labels": ["bug"], "created": "2015-06-17 07:20:39", "closed": "2015-12-11 12:34:44", "commits": {}, "ttf": 177.00027777777777, "commitsDetails": []}, {"title": "Unable to render SimpleDraweeView in AndroidStudio UI Builder", "body": "The following classes could not be instantiated:\n-\u00a0com.facebook.drawee.view.SimpleDraweeView (Open Class, Show Exception, Clear Cache)\n Tip: Use View.isInEditMode() in your custom views to skip code or show sample data when shown in the IDE\n\nStacktrace:\njava.lang.NullPointerException\n    at com.facebook.drawee.view.DraweeView.setImageDrawable(DraweeView.java:140)\n    at android.widget.ImageView.<init>(ImageView.java:148)\n    at android.widget.ImageView.<init>(ImageView.java:135)\n    at android.widget.ImageView.<init>(ImageView.java:131)\n    at com.facebook.drawee.view.DraweeView.<init>(DraweeView.java:51)\n    at com.facebook.drawee.view.GenericDraweeView.<init>(GenericDraweeView.java:74)\n    at com.facebook.drawee.view.SimpleDraweeView.<init>(SimpleDraweeView.java:58)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:513)\n    at org.jetbrains.android.uipreview.ViewLoader.createNewInstance(ViewLoader.java:438)\n    at org.jetbrains.android.uipreview.ViewLoader.loadClass(ViewLoader.java:155)\n    at org.jetbrains.android.uipreview.ViewLoader.loadView(ViewLoader.java:94)\n    at com.android.tools.idea.rendering.LayoutlibCallbackImpl.loadView(LayoutlibCallbackImpl.java:190)\n    at android.view.BridgeInflater.loadCustomView(BridgeInflater.java:214)\n    at android.view.BridgeInflater.createViewFromTag(BridgeInflater.java:142)\n    at android.view.LayoutInflater.rInflate_Original(LayoutInflater.java:806)\n    at android.view.LayoutInflater_Delegate.rInflate(LayoutInflater_Delegate.java:64)\n    at android.view.LayoutInflater.rInflate(LayoutInflater.java:782)\n    at android.view.LayoutInflater_Delegate.parseInclude(LayoutInflater_Delegate.java:154)\n    at android.view.LayoutInflater.parseInclude(LayoutInflater.java:858)\n    at android.view.LayoutInflater.rInflate_Original(LayoutInflater.java:802)\n    at android.view.LayoutInflater_Delegate.rInflate(LayoutInflater_Delegate.java:64)\n    at android.view.LayoutInflater.rInflate(LayoutInflater.java:782)\n    at android.view.LayoutInflater_Delegate.parseInclude(LayoutInflater_Delegate.java:154)\n    at android.view.LayoutInflater.parseInclude(LayoutInflater.java:858)\n    at android.view.LayoutInflater.rInflate_Original(LayoutInflater.java:802)\n    at android.view.LayoutInflater_Delegate.rInflate(LayoutInflater_Delegate.java:64)\n    at android.view.LayoutInflater.rInflate(LayoutInflater.java:782)\n    at android.view.LayoutInflater.rInflate_Original(LayoutInflater.java:809)\n    at android.view.LayoutInflater_Delegate.rInflate(LayoutInflater_Delegate.java:64)\n    at android.view.LayoutInflater.rInflate(LayoutInflater.java:782)\n    at android.view.LayoutInflater.inflate(LayoutInflater.java:504)\n    at android.view.LayoutInflater.inflate(LayoutInflater.java:385)\n    at com.android.layoutlib.bridge.impl.RenderSessionImpl.inflate(RenderSessionImpl.java:413)\n    at com.android.layoutlib.bridge.Bridge.createSession(Bridge.java:321)\n    at com.android.ide.common.rendering.LayoutLibrary.createSession(LayoutLibrary.java:350)\n    at com.android.tools.idea.rendering.RenderTask$2.compute(RenderTask.java:511)\n    at com.android.tools.idea.rendering.RenderTask$2.compute(RenderTask.java:499)\n    at com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(ApplicationImpl.java:888)\n    at com.android.tools.idea.rendering.RenderTask.createRenderSession(RenderTask.java:499)\n    at com.android.tools.idea.rendering.RenderTask.access$600(RenderTask.java:72)\n    at com.android.tools.idea.rendering.RenderTask$3.call(RenderTask.java:611)\n    at com.android.tools.idea.rendering.RenderTask$3.call(RenderTask.java:608)\n    at com.android.tools.idea.rendering.RenderService.runRenderAction(RenderService.java:363)\n    at com.android.tools.idea.rendering.RenderTask.render(RenderTask.java:608)\n    at com.android.tools.idea.rendering.RenderTask.render(RenderTask.java:630)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager.doRender(AndroidLayoutPreviewToolWindowManager.java:645)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager.access$1700(AndroidLayoutPreviewToolWindowManager.java:80)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager$7$1.run(AndroidLayoutPreviewToolWindowManager.java:587)\n    at com.intellij.openapi.progress.impl.CoreProgressManager$2.run(CoreProgressManager.java:152)\n    at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:452)\n    at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:402)\n    at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:54)\n    at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:137)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager$7.run(AndroidLayoutPreviewToolWindowManager.java:582)\n    at com.intellij.util.ui.update.MergingUpdateQueue.execute(MergingUpdateQueue.java:320)\n    at com.intellij.util.ui.update.MergingUpdateQueue.execute(MergingUpdateQueue.java:310)\n    at com.intellij.util.ui.update.MergingUpdateQueue$2.run(MergingUpdateQueue.java:254)\n    at com.intellij.util.ui.update.MergingUpdateQueue.flush(MergingUpdateQueue.java:269)\n    at com.intellij.util.ui.update.MergingUpdateQueue.flush(MergingUpdateQueue.java:227)\n    at com.intellij.util.ui.update.MergingUpdateQueue.run(MergingUpdateQueue.java:217)\n    at com.intellij.util.concurrency.QueueProcessor.runSafely(QueueProcessor.java:238)\n    at com.intellij.util.Alarm$Request$1.run(Alarm.java:351)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:439)\n    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:138)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)\n    at java.lang.Thread.run(Thread.java:695)\n", "url": "https://github.com/facebook/fresco/issues/374", "user": "ikravchenko", "labels": ["bug"], "created": "2015-06-15 09:46:18", "closed": "2015-11-01 22:11:09", "commits": {}, "ttf": 139.00027777777777, "commitsDetails": []}, {"title": "Animated-GIF loading slower than 0.4.0", "body": "In 0.5.1\nAnimated GIF's animation begining is delayed noticeably than before(compare with 0.4.0)\n", "url": "https://github.com/facebook/fresco/issues/365", "user": "b22n", "labels": ["bug"], "created": "2015-06-11 01:55:13", "closed": "2017-03-07 11:10:34", "commits": {}, "ttf": 635.0002777777778, "commitsDetails": []}, {"title": "FileNotFoundException - too many open files", "body": "After scrolling for a while, I always get this exception.\n\njava.io.FileNotFoundException: /data/data/com.facebook.samples.comparison/cache/imagepipeline_cache/v2.ols100.1/7/KGXrHIjGegCtOt_4ZX4DzPgJnBg.cnt: open failed: EMFILE (Too many open files)\n            at libcore.io.IoBridge.open(IoBridge.java:409)\n            at java.io.FileInputStream.<init>(FileInputStream.java:78)\n            at com.facebook.binaryresource.FileBinaryResource.openStream(FileBinaryResource.java:36)\n            at com.facebook.imagepipeline.cache.BufferedDiskCache.readFromDiskCache(BufferedDiskCache.java:196)\n            at com.facebook.imagepipeline.cache.BufferedDiskCache.access$300(BufferedDiskCache.java:38)\n            at com.facebook.imagepipeline.cache.BufferedDiskCache$1.call(BufferedDiskCache.java:104)\n            at com.facebook.imagepipeline.cache.BufferedDiskCache$1.call(BufferedDiskCache.java:88)\n            at bolts.Task$2.run(Task.java:195)\n            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)\n            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)\n            at java.lang.Thread.run(Thread.java:841)\n     Caused by: libcore.io.ErrnoException: open failed: EMFILE (Too many open files)\n            at libcore.io.Posix.open(Native Method)\n            at libcore.io.BlockGuardOs.open(BlockGuardOs.java:110)\n            at libcore.io.IoBridge.open(IoBridge.java:393)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.io.FileInputStream.<init>(FileInputStream.java:78)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at com.facebook.binaryresource.FileBinaryResource.openStream(FileBinaryResource.java:36)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at com.facebook.imagepipeline.cache.BufferedDiskCache.readFromDiskCache(BufferedDiskCache.java:196)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at com.facebook.imagepipeline.cache.BufferedDiskCache.access$300(BufferedDiskCache.java:38)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at com.facebook.imagepipeline.cache.BufferedDiskCache$1.call(BufferedDiskCache.java:104)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at com.facebook.imagepipeline.cache.BufferedDiskCache$1.call(BufferedDiskCache.java:88)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at bolts.Task$2.run(Task.java:195)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.lang.Thread.run(Thread.java:841)\n", "url": "https://github.com/facebook/fresco/issues/358", "user": "nguyentando", "labels": ["bug"], "created": "2015-06-09 07:58:14", "closed": "2017-07-11 16:10:33", "commits": {}, "ttf": 763.0002777777778, "commitsDetails": []}, {"title": "SipleDraweeView setImageURI is not working for native resource", "body": "my code:\n\n```\nfinal SimpleDraweeView imageView = (SimpleDraweeView) findViewById(R.id.backdrop);\n    Resources resources = getResources();\n    final int resId = Cheeses.getRandomCheeseDrawable();\n    final Uri uri = Uri.parse(ContentResolver.SCHEME_ANDROID_RESOURCE + \"://\" +\n            resources.getResourcePackageName(resId) + '/' +\n            resources.getResourceTypeName(resId) + '/' +\n            resources.getResourceEntryName(resId));\n    imageView.setImageURI(uri);\n```\n\nif I use ImageView, it can work, but when i used SimpleDraweeView, it does not work.\n\nWhy? Can someone help me?\n", "url": "https://github.com/facebook/fresco/issues/357", "user": "xu6148152", "labels": ["bug"], "created": "2015-06-09 06:49:13", "closed": "2015-06-10 08:51:08", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Q: animated gif decoding still uses DVM heap and causes OOM issue?", "body": "Hi,\nWe use fresco to download and display many animated gifs in our app(tens of gifs in one scrolled page and many pages can be switched).  We are seeing a lot of gif decoding OOM issue reported from bug reporter like this,\n\njava.lang.OutOfMemoryError\n    at android.graphics.Bitmap.nativeCreate(Native Method)\n    at android.graphics.Bitmap.createBitmap(Bitmap.java:718)\n    at android.graphics.Bitmap.createBitmap(Bitmap.java:695)\n    at android.graphics.Bitmap.createBitmap(Bitmap.java:662)\n    at com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImpl.createNewBitmap(AnimatedDrawableCachingBackendImpl.java:147)\n    at com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImpl.obtainBitmapInternal(AnimatedDrawableCachingBackendImpl.java:340)\n    at com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImpl.runPrefetch(AnimatedDrawableCachingBackendImpl.java:450)\n    at com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImpl.access$200(AnimatedDrawableCachingBackendImpl.java:52)\n    at com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImpl$3.call(AnimatedDrawableCachingBackendImpl.java:410)\n    at bolts.Task$2.run(Task.java:195)\n    at com.facebook.common.executors.ConstrainedExecutorService$Worker.run(ConstrainedExecutorService.java:178)\n    at com.facebook.common.executors.SerialDelegatingExecutor.executeSingleCommand(SerialDelegatingExecutor.java:76)\n    at com.facebook.common.executors.SerialDelegatingExecutor.access$000(SerialDelegatingExecutor.java:24)\n    at com.facebook.common.executors.SerialDelegatingExecutor$1.run(SerialDelegatingExecutor.java:47)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)\n    at java.lang.Thread.run(Thread.java:856)\n\nSo our questions is that gif decoding still is done on DVM heap, not native heap? Is there any plan to support on native heap just like png decoding?\n\nHere is some info about how we use fresco in this case,\nWe includes fresco as following,\ndependencies {\n    compile 'com.facebook.fresco:fresco:0.4.0+'\n}\nfinal Uri gifUri = Uri.parse(gifUrl);\n                DraweeController controller = Fresco.newDraweeControllerBuilder().setUri(gifUri).setAutoPlayAnimations(true).build();\n                cache.gifImage.setController(controller);\n\nPlease help. Thank you.\n", "url": "https://github.com/facebook/fresco/issues/344", "user": "BHsueh", "labels": ["bug", "duplicate"], "created": "2015-06-04 02:07:13", "closed": "2015-06-04 11:30:42", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Slow loading image from cache during scrolling in recyclerview", "body": "I have a gallery of images using recyclerview with different size of images. At first draw, it will load and fade-in image (as it should be) but when I scroll back to the top the image is displayed like first time and it takes a little time to be displayed and fade-in (I want it to be instantly there and not fade-in)\n", "url": "https://github.com/facebook/fresco/issues/335", "user": "anthony1111", "labels": ["bug"], "created": "2015-06-02 02:26:05", "closed": "2015-06-22 08:40:42", "commits": {}, "ttf": 20.00027777777778, "commitsDetails": []}, {"title": "[Question] Sample on github doesn't use option inBitmap in Android 5.0", "body": "I made some research in Fresco lib's open source.I see that Fresco lib doesn't use option inBitmap like you tell it.\nIn the class DefaultBitmapPoolParams, MAX_SIZE_SOFT_CAP = 0. So there's no bucket in BitmapPool. Geting bitmap from BitmapPool always return null, then has to allocate bitmap manually.\nAre there any differences between official vesion and opensource?\n", "url": "https://github.com/facebook/fresco/issues/334", "user": "huyduongtu", "labels": ["bug"], "created": "2015-06-01 04:19:33", "closed": "2017-08-31 13:30:38", "commits": {}, "ttf": 822.0002777777778, "commitsDetails": []}, {"title": "Gif Images are not rounded", "body": "I have used below code to make GIF rounded\nRoundingParams roundingParams = imageView.getHierarchy().getRoundingParams();\nroundingParams.setRoundAsCircle(true);\nimageView.getHierarchy().setRoundingParams(roundingParams);\nRoundingParams.asCircle().setRoundingMethod(RoundingMethod.OVERLAY_COLOR).setOverlayColor(getResources().getColor(R.color.white));\n\nStill, it's not working. I have taken reference from these two links: \nhttps://github.com/facebook/fresco/issues/229\nhttps://github.com/facebook/fresco/issues/188\n", "url": "https://github.com/facebook/fresco/issues/330", "user": "swatigoel", "labels": ["bug", "needs-details"], "created": "2015-05-29 09:28:00", "closed": "2015-05-29 13:21:51", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Can't load multiple images in ListView when using ResizeOptions on 0.5.0", "body": "Hi Fresco,\nThis library is so cool for loading image. But I have an issue when upgrading to 0.5.0 (It's not happen on 0.4.0).\nI have a ListView which contains items that using Fresco to load Image (like the sample code),the issue is some images can't be loaded on the list. If I removed `ResizeOptions`, it works fine. It also work fine on 0.4.0. \nHere's my code:\n\n```\nImageRequestBuilder builder = ImageRequestBuilder.newBuilderWithSource(uri)\n        .setLowestPermittedRequestLevel(ImageRequest.RequestLevel.FULL_FETCH)\n        .setAutoRotateEnabled(true);\n    if (width != 0 && height != 0) {\n      builder.setResizeOptions(new ResizeOptions(width, height));\n    }\n    DraweeController controller = Fresco.newDraweeControllerBuilder().setImageRequest(builder.build())\n        .setAutoPlayAnimations(true)\n        .setOldController(draweeView.getController()).build();\n    draweeView.setController(controller);\n```\n\nPlease help me to troubleshoot the issue. Thanks\n", "url": "https://github.com/facebook/fresco/issues/325", "user": "mrlongtt", "labels": ["bug"], "created": "2015-05-28 05:19:45", "closed": "2015-08-10 14:43:42", "commits": {}, "ttf": 74.00027777777778, "commitsDetails": []}, {"title": "java.lang.IllegalArgumentException: unknown image format", "body": "url=\"http://ktvme.com//getshareimage.php?id=1528511&s=1\";\nFresco load fail, but Glide, Picasso and Volley  load success.\n![qq 20150528100334](https://cloud.githubusercontent.com/assets/11832023/7851366/221b28e2-0521-11e5-9f21-a7ca376ccc31.jpg)\n", "url": "https://github.com/facebook/fresco/issues/321", "user": "ICECHN", "labels": ["bug"], "created": "2015-05-28 02:06:21", "closed": "2015-10-14 17:20:04", "commits": {}, "ttf": 139.00027777777777, "commitsDetails": []}, {"title": "When i Slide GridView back and forth quickly, the local image not display.fresco version is 0.5.0", "body": " I used GridView to show photos,and v0.4.0 is normal.\n\nmy code:\nImgBean item = getItem(position);\n            if (item != null && !TextUtils.isEmpty(item.filePath)) {\n                ImageRequest request = ImageRequestBuilder.newBuilderWithSource(UriParseUtil.parseFile(item.filePath))\n                        .setResizeOptions(new ResizeOptions(itemWidth, itemWidth))\n                        .build();\n                DraweeController controller = Fresco.newDraweeControllerBuilder()\n                        .setOldController(((SimpleDraweeView) convertView).getController())\n                        .setImageRequest(request)\n                        .build();\n                ((SimpleDraweeView) convertView).setController(controller);\n            } else {\n                ((SimpleDraweeView) convertView).setImageURI(null);\n            }\n", "url": "https://github.com/facebook/fresco/issues/320", "user": "somatezyc", "labels": ["bug"], "created": "2015-05-28 02:00:13", "closed": "2015-08-10 14:48:29", "commits": {}, "ttf": 74.00027777777778, "commitsDetails": []}, {"title": "Image does not load on genymotion", "body": "``` java\npublic class BaseApp extends Application {\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        Fresco.initialize(this);\n    }\n}\n```\n\n``` xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.lengking.king\" >\n    <uses-permission android:name=\"ANDROID.PERMISSION.INTERNET\"/>\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\n    <application\n        android:name=\".app.BaseApp\"\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:theme=\"@style/AppTheme\" >\n        <activity\n            android:name=\".activity.LoadingActivity\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n        <activity android:name=\".MainActivity\"/>\n        <activity android:name=\".activity.FileSelectActivity\"/>\n        <activity android:name=\".activity.FacebookActivity\"/>\n    </application>\n</manifest>\n```\n\n``` java\npublic class FacebookActivity extends BaseActivity{\n    private ListView listView;\n    private SimpleDraweeView simpleDraweeView;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_facebook);\n        init();\n    }\n    private void init(){\n       // listView= (ListView) findViewById(R.id.listview);\n        simpleDraweeView=(SimpleDraweeView)findViewById(R.id.my_image_view);\n        simpleDraweeView.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Uri uri = Uri.parse(\"http://fresco-cn.org/static/fresco-logo.png\");\n                simpleDraweeView.setImageURI(uri);\n                Log.e(\"loading\",\"\"+uri);\n            }\n        });\n    }\n}\n```\n\n``` xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:fresco=\"http://schemas.android.com/apk/res-auto\"\n    android:orientation=\"vertical\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n    <com.facebook.drawee.view.SimpleDraweeView\n        android:id=\"@+id/my_image_view\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:background=\"#55ff0000\"/>\n</LinearLayout>\n```\n\nLogcat:\n    05-22 01:34:24.531    3239-3239/com.lengking.king E/loading\ufe55 http://fresco-cn.org/static/fresco-logo.png\n\nNo error and no change\n", "url": "https://github.com/facebook/fresco/issues/298", "user": "turingking", "labels": ["bug"], "created": "2015-05-22 05:35:19", "closed": "2016-09-24 16:04:27", "commits": {}, "ttf": 491.0002777777778, "commitsDetails": []}, {"title": "When Change Border Color, the image not display", "body": "``` java\nGenericDraweeHierarchy hierarchy = viewHolder.mIvAvatar.getHierarchy();\nRoundingParams roundingParams = hierarchy.getRoundingParams();\nroundingParams.setBorder(getResources().getColor(R.color.orange), width);\nhierarchy.setRoundingParams(roundingParams);\nviewHolder.mIvAvatar.setHierarchy(hierarchy);`\n```\n\n![qq 20150519142602](https://cloud.githubusercontent.com/assets/9455805/7696796/67481bf4-fe33-11e4-950e-9c81183a0bd1.png)\n\nHow should i do?\n", "url": "https://github.com/facebook/fresco/issues/285", "user": "zhangtengchao", "labels": ["bug", "needs-details"], "created": "2015-05-19 06:30:22", "closed": "2015-12-11 13:27:39", "commits": {}, "ttf": 206.00027777777777, "commitsDetails": []}, {"title": "image not rounded", "body": "Like this one  http://q.qlogo.cn/qqapp/1103532285/9E2AD2EE76A75E5DCFF50B2DB2403982/100 \uff0cwhen  I  set    fresco:roundAsCircle=\"true\"  ,it does not work\n", "url": "https://github.com/facebook/fresco/issues/283", "user": "yassinia", "labels": ["bug"], "created": "2015-05-18 10:50:51", "closed": "2015-06-12 15:17:24", "commits": {}, "ttf": 25.00027777777778, "commitsDetails": []}, {"title": "not found cache file", "body": "```\nint MAX_MEMORY_CACHE_SIZE = 5*1024*1024;\nprivate void initFresco(){\n\n    int maxHeapSize = (int) Runtime.getRuntime().maxMemory();\n    int use = ((maxHeapSize/4)/1024/1024);\n    android.util.Log.d(TAG,\"use M:\"+use);\n\n    String diskCachePath = Environment.getExternalStorageDirectory() + \"/haha/\";\n    File diskCacheDir = new File(diskCachePath);\n\n    ImagePipelineConfig.Builder builder = ImagePipelineConfig.newBuilder(this);\n    final MemoryCacheParams bitmapCacheParams = new MemoryCacheParams(\n            MAX_MEMORY_CACHE_SIZE, // Max total size of elements in the cache\n            Integer.MAX_VALUE,                     // Max entries in the cache\n            MAX_MEMORY_CACHE_SIZE, // Max total size of elements in eviction queue\n            Integer.MAX_VALUE,                     // Max length of eviction queue\n            Integer.MAX_VALUE);                    // Max cache entry size\n    builder.setBitmapMemoryCacheParamsSupplier(\n                new Supplier<MemoryCacheParams>() {\n                  public MemoryCacheParams get() {\n                    return bitmapCacheParams;\n                  }\n                })\n            .setMainDiskCacheConfig(\n                DiskCacheConfig.newBuilder()\n                    .setBaseDirectoryPath(diskCacheDir)\n                    .setBaseDirectoryName(\"tqtest\")\n                    .setMaxCacheSize(40 * ByteConstants.MB)\n                    .build());\n    ImagePipelineConfig config = builder.build();\n    Fresco.initialize(this,config);\n```\n\nat \"Environment.getExternalStorageDirectory() + \"/haha/tqtest\" \uff0c not found cache file ??\n", "url": "https://github.com/facebook/fresco/issues/280", "user": "zzlytq", "labels": ["bug"], "created": "2015-05-18 02:20:11", "closed": "2015-05-20 08:22:34", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "hierarchy.setRoundingParams and hierarchy.setActualImageColorFilter conflict", "body": "i want to set colorFilter to some round corner image,\nbut after i use hierarchy.setRoundingParams, the corner shows.\n", "url": "https://github.com/facebook/fresco/issues/277", "user": "xingxp", "labels": ["bug"], "created": "2015-05-15 12:26:04", "closed": "2017-07-11 15:38:45", "commits": {}, "ttf": 788.0002777777778, "commitsDetails": []}, {"title": " fresco\uff1ammap failed for imageref_ashmem size=", "body": "I use listview to load image from url .But when i fast slide listview ,after a few, most image can't display only one or three  image can display. \n\nwhen I slide the listview android log show \n D/skia\ufe55 ---------- mmap failed for imageref_ashmem size=7970816 \nthere is my Screenshot\n![image Screenshot ](http://i1.tietuku.com/392f3cf306ad4549.png)\n![image Screenshot ](http://i1.tietuku.com/8093abc10cd3fbe8.png)\n\nthere is my adapter  code \uff1a\n\n``` java\n @Override\n        public View getView(int position, View view, ViewGroup parent) {\n            ViewHolder holder;\n            if (view != null) {\n                holder = (ViewHolder) view.getTag();\n            } else {\n                view = getLayoutInflater().inflate(R.layout.adapt_refresh_item, parent, false);\n                holder = new ViewHolder(view);\n                view.setTag(holder);\n            }\n            setImage(holder.simpView, Uri.parse(getItem(position)));\n            return view;\n        }\n\nprivate void setImage(SimpleDraweeView draweeView, Uri uri) {\n        DraweeController controller = Fresco.newDraweeControllerBuilder()\n                .setUri(uri)\n                .setTapToRetryEnabled(true)\n                .setOldController(draweeView.getController())\n                .build();\n\n        draweeView.setController(controller);\n    }\n```\n", "url": "https://github.com/facebook/fresco/issues/269", "user": "appdev", "labels": ["bug"], "created": "2015-05-15 03:12:46", "closed": "2017-07-14 12:10:08", "commits": {}, "ttf": 791.0002777777778, "commitsDetails": []}, {"title": "Fresco deletes other native libraries in apk", "body": "Hi,\nWe have one app which includes two native libraries and works well. We put these two native libraries under app/src/main/jniLibs/armeabi/ and build the app with Gradle.\n\nBut after we integrated Fresco, there is always one error on Nexus(Android 5.0.1) which said these two libraries couldn't be found. Then we checked the path on device, /data/app/our_app_package_name/lib/arm, where these two libraries are supposed to be. Both of theme are gone and only some new libraries are there,  like libbitmaps.so, libgifimage.so and etc.\n\nWould you please help to have a check on this issue?\n\nThank you\n", "url": "https://github.com/facebook/fresco/issues/264", "user": "BHsueh", "labels": ["bug"], "created": "2015-05-14 02:10:17", "closed": "2015-05-15 08:20:46", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": ".Preconditions.checkState  IllegalStateException", "body": "Process: com.facebook.fresco.sample, PID: 6495\n    java.lang.IllegalStateException\n            at com.facebook.common.internal.Preconditions.checkState(Preconditions.java:158)\n", "url": "https://github.com/facebook/fresco/issues/263", "user": "ayyb1988", "labels": ["bug", "needs-details"], "created": "2015-05-13 13:59:01", "closed": "2015-06-23 08:41:19", "commits": {}, "ttf": 40.000277777777775, "commitsDetails": []}, {"title": "Always cannot show the images when loading lots of bitmaps on screen", "body": "I use girdview to load around 30 bitmaps from sdcard on screen each time.But it only display 11 bitmaps on screen.\n![device-2015-05-12-193017](https://cloud.githubusercontent.com/assets/9667669/7586229/5c0df750-f8dd-11e4-9762-1530fb6297a0.png)\n", "url": "https://github.com/facebook/fresco/issues/256", "user": "KrystalJake1989", "labels": ["bug"], "created": "2015-05-12 11:30:42", "closed": "2015-07-20 21:25:27", "commits": {}, "ttf": 69.00027777777778, "commitsDetails": []}, {"title": "Rounded not worked for placeholder image", "body": "After i use SimpleDraweeView with roundAsCircle configuration with true.\n\nI notice that the round not worked for place holder image but i read doc it said it default support the actual image and place holder. Please fixed it. I used the 0.4.0 fresco\n\n```\n`<com.facebook.drawee.view.SimpleDraweeView\n        android:id=\"@+id/header\"\n        android:layout_width=\"97dp\"\n        android:layout_height=\"97dp\"\n        android:layout_centerHorizontal=\"true\"\n        android:layout_marginTop=\"79dp\"\n        fit:placeholderImage=\"@drawable/place_holder\"\n        fit:roundAsCircle=\"true\" />`\n```\n", "url": "https://github.com/facebook/fresco/issues/246", "user": "flzyup", "labels": ["bug"], "created": "2015-05-09 10:19:58", "closed": "2015-05-11 14:00:55", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Always throw the error \u201cDraw requested for a non-attached controller\u201d", "body": "When the log \"Draw requested for a non-attached controller ...\" show, the app can't show any image via fresco (any image view, any images).\n\nKill app and restart IT IS only temp solution.\n\nThe log like:\n\n> Draw requested for a non-attached controller 2ccc3dce. DraweeHolder{controllerAttached=false, holderAttached=true, drawableVisible=false, activityStarted=true, events=[ON_DETACH_CONTROLLER, ON_CLEAR_OLD_CONTROLLER, ON_SET_CONTROLLER, ON_ATTACH_CONTROLLER, ON_DRAWABLE_HIDE, ON_DETACH_CONTROLLER, ON_ATTACH_CONTROLLER, ON_DETACH_CONTROLLER, ON_CLEAR_OLD_CONTROLLER, ON_SET_CONTROLLER, ON_ATTACH_CONTROLLER, ON_DRAWABLE_HIDE, ON_DETACH_CONTROLLER, ON_ATTACH_CONTROLLER, ON_DETACH_CONTROLLER, ON_CLEAR_OLD_CONTROLLER, ON_SET_CONTROLLER, ON_ATTACH_CONTROLLER, ON_DRAWABLE_HIDE, ON_DETACH_CONTROLLER]}\n", "url": "https://github.com/facebook/fresco/issues/245", "user": "duguguiyu", "labels": ["bug"], "created": "2015-05-08 14:53:31", "closed": "2017-08-31 14:01:27", "commits": {}, "ttf": 845.0002777777778, "commitsDetails": []}, {"title": "The comment in ImagePipelineConfig showing how-to-use is out-of-date.", "body": "```\n/**\n * Master configuration class for the image pipeline library.\n *\n * To use:\n * <code>\n *   ImagePipelineConfig config = ImagePipelineConfig.newBuilder()\n *       .setXXX(xxx)\n *       .setYYY(yyy)\n *       .build();\n *   ImagePipelineFactory factory = new ImagePipelineFactory(config);\n *   ImagePipeline pipeline = factory.newPipeline();\n * </code>\n *\n * <p>This should only be done once per process.\n */\npublic class ImagePipelineConfig {\n```\n\nI cannot find `newPipeline()` in `ImagePipelineFactory`.\n", "url": "https://github.com/facebook/fresco/issues/226", "user": "liangfeidotme", "labels": ["bug"], "created": "2015-05-01 15:53:46", "closed": "2015-05-06 16:26:06", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "TooManyBitmapsException cause no display", "body": "how to clear memory cache or how to fix it?\n", "url": "https://github.com/facebook/fresco/issues/213", "user": "lindow2009", "labels": ["bug"], "created": "2015-04-29 02:45:50", "closed": "2015-07-20 21:29:01", "commits": {}, "ttf": 82.00027777777778, "commitsDetails": []}, {"title": "Load gif lib error", "body": "I build fresco 4.0 like this: compile 'com.facebook.fresco:fresco:0.4.0+'\n\nWhen I load a gif image into fresco image view, the app crash, the error info like:\n\n> E/AndroidRuntime( 5755): java.lang.UnsatisfiedLinkError: JNI_ERR returned from JNI_OnLoad in \"/data/app/com.wandoujia.ripple-2/lib/arm/libgifimage.so\"\n> E/AndroidRuntime( 5755):    at java.lang.Runtime.loadLibrary(Runtime.java:371)\n> E/AndroidRuntime( 5755):    at java.lang.System.loadLibrary(System.java:988)\n> E/AndroidRuntime( 5755):    at com.facebook.common.soloader.SoLoaderShim$DefaultHandler.loadLibrary(SoLoaderShim.java:34)\n> E/AndroidRuntime( 5755):    at com.facebook.common.soloader.SoLoaderShim.loadLibrary(SoLoaderShim.java:56)\n> E/AndroidRuntime( 5755):    at com.facebook.imagepipeline.gif.GifImage.ensure(GifImage.java:40)\n> E/AndroidRuntime( 5755):    at com.facebook.imagepipeline.gif.GifImage.create(GifImage.java:62)\n> E/AndroidRuntime( 5755):    at com.facebook.imagepipeline.animated.factory.AnimatedImageFactory.decodeGif(AnimatedImageFactory.java:62)\n> E/AndroidRuntime( 5755):    at com.facebook.imagepipeline.decoder.ImageDecoder.decodeAnimatedGif(ImageDecoder.java:105)\n> E/AndroidRuntime( 5755):    at com.facebook.imagepipeline.decoder.ImageDecoder.decodeImage(ImageDecoder.java:86)\n> E/AndroidRuntime( 5755):    at com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder.doDecode(DecodeProducer.java:231)\n> E/AndroidRuntime( 5755):    at com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder.access$200(DecodeProducer.java:92)\n> E/AndroidRuntime( 5755):    at com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$3.run(DecodeProducer.java:202)\n> E/AndroidRuntime( 5755):    at com.facebook.common.executors.SerialDelegatingExecutor.executeSingleCommand(SerialDelegatingExecutor.java:76)\n> E/AndroidRuntime( 5755):    at com.facebook.common.executors.SerialDelegatingExecutor.access$000(SerialDelegatingExecutor.java:24)\n> E/AndroidRuntime( 5755):    at com.facebook.common.executors.SerialDelegatingExecutor$1.run(SerialDelegatingExecutor.java:47)\n> E/AndroidRuntime( 5755):    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n> E/AndroidRuntime( 5755):    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n> E/AndroidRuntime( 5755):    at java.lang.Thread.run(Thread.java:818)\n\nThe device is nexus6.\n", "url": "https://github.com/facebook/fresco/issues/209", "user": "duguguiyu", "labels": ["bug"], "created": "2015-04-28 03:53:24", "closed": "2015-04-30 16:35:09", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "BMP support?", "body": "During a first test, we found Fresco will not load .BMP images, like this one https://www.dropbox.com/s/dnye6rnxjftebq8/2girl-facebook-fresco.bmp?dl=0 > Is this a known / wanted limitation?\n", "url": "https://github.com/facebook/fresco/issues/206", "user": "ened", "labels": ["bug"], "created": "2015-04-27 08:24:08", "closed": "2015-06-04 10:10:14", "commits": {}, "ttf": 38.000277777777775, "commitsDetails": []}, {"title": "Apparently bogus asset log error (E/JHEAD\ufe55 can't open)", "body": "I have tried to load an image from assets and I got this error log:\n<code>E/JHEAD\ufe55 can't open '/asset/flags/CN.png'</code>\n\nAlthough ImageView was loaded successfully, that log always appears.\n\nURI in my code:\n<code>asset:///flags/CN.png</code>\n\nUpdate:\nI have tested setImageURI and imagePipeline and both load the asset image, but with error log.\n", "url": "https://github.com/facebook/fresco/issues/198", "user": "bbrazsilveira", "labels": ["bug"], "created": "2015-04-24 22:34:11", "closed": "2015-10-19 23:48:52", "commits": {}, "ttf": 178.00027777777777, "commitsDetails": []}, {"title": "Gif will not load in Google Map infowindow", "body": "Images of type gif will not load in Google Map info windows. I've tested other image types and they are working fine, but there seems to be an issue with gifs.\n", "url": "https://github.com/facebook/fresco/issues/196", "user": "REWKyleB", "labels": ["bug"], "created": "2015-04-24 18:32:52", "closed": "2015-06-04 10:09:36", "commits": {}, "ttf": 40.000277777777775, "commitsDetails": []}, {"title": "GIFs are always decoded as animated GIFs, so static GIFs cannot be rounded using BITMAP_ONLY rounding method. ", "body": "Hi!\nI got a problem when roounding this image  http://bbs.bagdax.cn/uc_server/data/avatar/000/01/13/26_avatar_middle.jpg\n\nThanks\n", "url": "https://github.com/facebook/fresco/issues/188", "user": "EzimetYusup", "labels": ["bug"], "created": "2015-04-23 09:12:01", "closed": "2015-06-04 10:10:00", "commits": {}, "ttf": 42.000277777777775, "commitsDetails": []}, {"title": "how to change load picture sequence", "body": "like in GridView , I load a lot of picture,when i scroll to bottom, it's  take long time to display the bottom picture. How to let fresco load the visible DraweeView  primary.\n", "url": "https://github.com/facebook/fresco/issues/182", "user": "liujigang", "labels": ["bug", "needs-details"], "created": "2015-04-22 09:16:42", "closed": "2015-04-27 09:51:25", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "WebP animations don't respect loop count", "body": "I created animation:\n\n``` sh\n$ webpmux -frame smile_xhdpi_01.webp +41+0+0+1 \\\n-frame smile_xhdpi_02.webp +41+0+0+1 \\\n-frame smile_xhdpi_03.webp +41+0+0+1 \\\n-frame smile_xhdpi_04.webp +41+0+0+1 \\\n-frame smile_xhdpi_05.webp +41+0+0+1 \\\n-loop 2 -bgcolor 0,0,0,0 -o anim_container.webp\n```\n\nAnd how set loop count in code? I not found parameter\n", "url": "https://github.com/facebook/fresco/issues/180", "user": "eresid", "labels": ["bug"], "created": "2015-04-22 07:05:12", "closed": "2015-11-01 22:11:35", "commits": {}, "ttf": 193.00027777777777, "commitsDetails": []}, {"title": "NPE on disk cache miss", "body": "when i try to request a bitmap  from diskcache ,i got this exception:\n\n```\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493): java.lang.NullPointerException\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$AddImageTransformMetaDataConsumer.onNewResultImpl(AddImageTransformMetaDataProducer.java:58)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$AddImageTransformMetaDataConsumer.onNewResultImpl(AddImageTransformMetaDataProducer.java:44)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.BaseConsumer.onNewResult(BaseConsumer.java:49)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer.onNextResult(MultiplexProducer.java:443)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer.onNewResultImpl(MultiplexProducer.java:490)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer.onNewResultImpl(MultiplexProducer.java:487)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.BaseConsumer.onNewResult(BaseConsumer.java:49)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.MemoryCacheProducer$1.onNewResultImpl(MemoryCacheProducer.java:101)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.MemoryCacheProducer$1.onNewResultImpl(MemoryCacheProducer.java:89)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.BaseConsumer.onNewResult(BaseConsumer.java:49)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.DiskCacheProducer.maybeStartNextProducer(DiskCacheProducer.java:129)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.DiskCacheProducer.produceResults(DiskCacheProducer.java:63)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.MemoryCacheProducer.produceResults(MemoryCacheProducer.java:114)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer.startNextProducerIfHasAttachedConsumers(MultiplexProducer.java:362)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer.access$000(MultiplexProducer.java:121)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.MultiplexProducer.produceResults(MultiplexProducer.java:85)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer.produceResults(AddImageTransformMetaDataProducer.java:41)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.ImageTransformProducer.produceResults(ImageTransformProducer.java:53)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.ThrottlingProducer.produceResultsInternal(ThrottlingProducer.java:68)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.ThrottlingProducer.produceResults(ThrottlingProducer.java:61)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer.onNewResultImpl(BranchOnSeparateImagesProducer.java:70)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer.onNewResultImpl(BranchOnSeparateImagesProducer.java:47)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.BaseConsumer.onNewResult(BaseConsumer.java:49)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.ImageTransformProducer$TransformingConsumer.onNewResultImpl(ImageTransformProducer.java:85)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.BaseConsumer.onNewResult(BaseConsumer.java:49)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.imagepipeline.producers.StatefulProducerRunnable.onSuccess(StatefulProducerRunnable.java:49)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at com.facebook.common.executors.StatefulRunnable.run(StatefulRunnable.java:54)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n04-22 14:19:01.601: E/unknown:AddImageTransformMetaDataConsumer(29493):     at java.lang.Thread.run(Thread.java:841)\n```\n\nhere is my code : \n\n```\n\n            Uri uri = Uri.parse(\"file:///storage/emulated/0/DCIM/camera/cache/1429681400334.jpg\");\n\n        ImageRequest request = ImageRequestBuilder\n                                    .newBuilderWithSource(uri)\n                                    .setAutoRotateEnabled(true)\n                                    .setLowestPermittedRequestLevel(RequestLevel.DISK_CACHE)\n                                    .setResizeOptions(new ResizeOptions(width, height))\n                                    .build();\n\n    DataSource<CloseableReference<CloseableImage>> dataSource = imagePipeline.fetchDecodedImage(request, context);\n        DataSubscriber dataSubscriber = new BaseDataSubscriber<CloseableReference<CloseableImage>>() {\n\n            @Override\n            public void onNewResultImpl(DataSource<CloseableReference<CloseableImage>> dataSource) {\n\n                if (!dataSource.isFinished()) {\n                    return;\n                }\n                if (listener != null) {\n                    if (!listener.onFullResult(context, uri, dataSource)) {\n                        CloseableReference<CloseableImage> closeableImageRef = dataSource.getResult();\n                        Bitmap bitmap = null;\n                        if (closeableImageRef != null && closeableImageRef.get() instanceof CloseableBitmap) {\n                            bitmap = ((CloseableBitmap) closeableImageRef.get()).getUnderlyingBitmap();\n                        }\n\n                        try {\n                            listener.onResult(context, uri, bitmap);\n                        } finally {\n                            CloseableReference.closeSafely(closeableImageRef);\n                        }\n                    }\n                }\n            }\n\n            @Override\n            public void onFailureImpl(DataSource dataSource) {\n                Throwable throwable = dataSource.getFailureCause();\n                if (listener != null)\n                    listener.onFailure(context, uri, throwable);\n            }\n        };\n\n        dataSource.subscribe(dataSubscriber, mExecutorService);\n\n```\n\nwhat's wrong with my code? thank you\n", "url": "https://github.com/facebook/fresco/issues/179", "user": "lushan1314", "labels": ["bug"], "created": "2015-04-22 06:40:13", "closed": "2015-05-14 22:25:07", "commits": {}, "ttf": 22.00027777777778, "commitsDetails": []}, {"title": "JPEGs in content provider don't display", "body": "when I use Content provider for SimpleDraweeView,some folder's uri can display success,but some failed.\n![314c f7p398og v9q e c](https://cloud.githubusercontent.com/assets/8259919/7228762/17e8561a-e78f-11e4-9393-ff4167e1130a.png)\n![24e79a4d469e066867a76b4feffb2bf5](https://cloud.githubusercontent.com/assets/8259919/7228767/1f0922b2-e78f-11e4-8bd2-28eb405b4a18.jpg)\n\nthe first folder's image uri always fail ,but second folder's image uri all success. \n", "url": "https://github.com/facebook/fresco/issues/169", "user": "aliang5820", "labels": ["bug"], "created": "2015-04-20 10:57:03", "closed": "2017-06-09 13:25:06", "commits": {}, "ttf": 781.0002777777778, "commitsDetails": []}, {"title": "Error : Failed to slurp image 0", "body": "When I loaded some gif images, some gif was occured Failed to slurp image 0\n\nWhat happens?\n\njava.lang.IllegalStateException: Failed to slurp image 0\n    at com.facebook.imagepipeline.gif.GifImage.nativeCreateFromNativeMemory(Native Method)\n    at com.facebook.imagepipeline.gif.GifImage.create(GifImage.java:65)\n    at com.facebook.imagepipeline.animated.factory.AnimatedImageFactory.decodeGif(AnimatedImageFactory.java:62)\n    at com.facebook.imagepipeline.decoder.ImageDecoder.decodeAnimatedGif(ImageDecoder.java:105)\n    at com.facebook.imagepipeline.decoder.ImageDecoder.decodeImage(ImageDecoder.java:86)\n    at com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder.doDecode(DecodeProducer.java:231)\n    at com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder.access$200(DecodeProducer.java:92)\n    at com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$3.run(DecodeProducer.java:202)\n    at com.facebook.common.executors.SerialDelegatingExecutor.executeSingleCommand(SerialDelegatingExecutor.java:76)\n    at com.facebook.common.executors.SerialDelegatingExecutor.access$000(SerialDelegatingExecutor.java:24)\n    at com.facebook.common.executors.SerialDelegatingExecutor$1.run(SerialDelegatingExecutor.java:47)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n    at java.lang.Thread.run(Thread.java:841)\n", "url": "https://github.com/facebook/fresco/issues/167", "user": "bigstark", "labels": ["bug"], "created": "2015-04-19 14:45:16", "closed": "2017-06-09 13:23:09", "commits": {}, "ttf": 781.0002777777778, "commitsDetails": []}, {"title": "Facebook profile pictures", "body": "Is there an obvious reason why my Facebook profile url:\n\"http://graph.facebook.com/1790785454/picture?type=normal\" \ndoes not display with Fresco? It works in UIL, I am using the code from the getting started page (http://frescolib.org/docs/getting-started.html), and the sample URL \"http://frescolib.org/static/fresco-logo.png\" is fine so I know the issue is to do with the URL. \n\nUri uri = Uri.parse(\"http://graph.facebook.com/1790785454/picture?type=normal\");\n        SimpleDraweeView draweeView = (SimpleDraweeView) rootView.findViewById(R.id.details_profile_drawee);\n        draweeView.setImageURI(uri);\n\nMy guess is the path redirects somewhere crazy so Fresco doesn't know what to do.\n", "url": "https://github.com/facebook/fresco/issues/165", "user": "danielwilson1702", "labels": ["bug"], "created": "2015-04-19 01:00:55", "closed": "2015-06-04 11:30:17", "commits": {}, "ttf": 46.000277777777775, "commitsDetails": []}, {"title": "Animations crash so frequently on 5.0+ because of OOM", "body": "Crash log:\n java.lang.OutOfMemoryError: Failed to allocate a 192804 byte allocation with 164734 free bytes and 160KB until OOM\n    at dalvik.system.VMRuntime.newNonMovableArray(Native Method)\n    at android.graphics.Bitmap.nativeCreate(Native Method)\n    at android.graphics.Bitmap.createBitmap(Bitmap.java:939)\n    at android.graphics.Bitmap.createBitmap(Bitmap.java:912)\n    at android.graphics.Bitmap.createBitmap(Bitmap.java:879)\n    at com.facebook.imagepipeline.a.c.c.p(AnimatedDrawableCachingBackendImpl.java:147)\n    at com.facebook.imagepipeline.a.c.c.q(AnimatedDrawableCachingBackendImpl.java:340)\n    at com.facebook.imagepipeline.a.c.c.i(AnimatedDrawableCachingBackendImpl.java:450)\n    at com.facebook.imagepipeline.a.c.c.b(AnimatedDrawableCachingBackendImpl.java:52)\n    at com.facebook.imagepipeline.a.c.f.call(AnimatedDrawableCachingBackendImpl.java:410)\n    at a.q.run(Task.java:195)\n    at com.facebook.c.c.b$a.run(ConstrainedExecutorService.java:178)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n    at java.lang.Thread.run(Thread.java:818)\n\nSo far this has only happened on android 5.0+\n", "url": "https://github.com/facebook/fresco/issues/159", "user": "ivfuricks", "labels": ["bug"], "created": "2015-04-17 06:42:31", "closed": "2017-06-09 13:21:15", "commits": {}, "ttf": 784.0002777777778, "commitsDetails": []}, {"title": "Slow loading from MediaStore ContentProvider", "body": "I have changed th ListView to GridView  and the network image to local,in the demo.\n\n![1](https://cloud.githubusercontent.com/assets/7322048/7179465/ac58a0fc-e46a-11e4-91e9-a8fe0d978c48.png)\n![2](https://cloud.githubusercontent.com/assets/7322048/7179464/ac572f9c-e46a-11e4-8f4d-bc97b16f793b.png)\n![screenshot_2015-04-16-18-50-06](https://cloud.githubusercontent.com/assets/7322048/7179462/ac560f90-e46a-11e4-8b8d-7fc7295f3873.png)\n![screenshot_2015-04-16-18-51-49](https://cloud.githubusercontent.com/assets/7322048/7179463/ac56a1da-e46a-11e4-90f2-5b24b566f1f7.png)\n\nIt is not smooth-scrolling while using fresco,and the memory footprint is  larger than others, I think I must have done something wrong. \n", "url": "https://github.com/facebook/fresco/issues/155", "user": "cannocan", "labels": ["bug"], "created": "2015-04-16 11:14:48", "closed": "2015-07-20 21:24:13", "commits": {}, "ttf": 95.00027777777778, "commitsDetails": []}, {"title": "RoundedCorner + fitCenter deforms final image", "body": "I have stumbled upon an issue while using rounded corners with images, that doesn't take whole space.\nIn my layout I have:\n\n```\n<com.facebook.drawee.view.SimpleDraweeView\n            android:id=\"@+id/cell_thumb\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            fresco:actualImageScaleType=\"fitCenter\"\n            fresco:placeholderImage=\"@drawable/logo\"\n            fresco:roundedCornerRadius=\"3dp\"\n            fresco:roundBottomLeft=\"false\"\n            fresco:roundBottomRight=\"false\" />\n```\n\nWhen image has exact same aspect ratio as container - top corners get rounded perfectly and the result looks like this:\n![Correct corners](http://i.imgur.com/ikUueRA.png)\n\nBut when image doesn't take full space and gets fitted inside (because I'm using fitCenter), instead of seeing layout background color I see image getting \"expanded\" with extra rows of pixels to take the remaining place, and then rounded corners getting applied.\n\n![Weird behavior](http://i.imgur.com/8IwNfjy.png)\n\nIs that a correct behavior of image processing? I wish it could just ignore rounded corners if image doesn't take the full space. In that case I will just additionally set up rounded corners on my layout, so when image is not taking whole space - layout will draw rounded corners.\n", "url": "https://github.com/facebook/fresco/issues/153", "user": "Armaxis", "labels": ["bug"], "created": "2015-04-16 05:37:28", "closed": "2015-04-16 23:51:16", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Slow reads from disk cache", "body": "Does anybody test the different Adapter in the real environment?Why the fresco is slower than UIL?\n\nHere is my data on Nexus 6 with sample in WIFI:\n\nFirst run after install:UIL used 1225ms per pic,  Fresco 516ms.\n\nFirst in after reboot:UILused 50ms per piv,fresco 103ms\n\nReEnter after press back from app:UIL used 0ms, fresco 45ms.\n\nAnd So on...\n\nSO, in most user case,the fresco is not best in the groups.Do anybody know the reason?\nIs it release the cache memory when the app going background immediately,and others not?\n", "url": "https://github.com/facebook/fresco/issues/152", "user": "qiaodi", "labels": ["bug"], "created": "2015-04-16 04:32:53", "closed": "2015-05-06 15:29:16", "commits": {}, "ttf": 20.00027777777778, "commitsDetails": []}, {"title": "Crash sometimes in skia webp decoder", "body": "CrashAnrDetector\ufe55 Build: samsung/hlltezm/hllte:4.3/JLS36C/N7508VZMUAND3:user/release-keys\n    Hardware: MSM8928\n    Revision: 6\n    Bootloader: N7508VZMUAND3\n    Radio: unknown\n    Kernel: Linux version 3.4.0-2645628 (se.infra@R0301-09) (gcc version 4.7 (GCC) ) #1 SMP PREEMPT Tue Apr 15 16:57:48 KST 2014\n    **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* ***\n    Build fingerprint: 'samsung/hlltezm/hllte:4.3/JLS36C/N7508VZMUAND3:user/release-keys'\n    Revision: '6'\n    pid: 17313, tid: 17396, name: thread-3  >>> com.test.fresco<<<\n    signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr deadbaad\n    Abort message: '@@@ ABORTING: invalid address or address of corrupt block 0x64bc6000 passed to dlfree'\n    r0 00000027  r1 00000000  r2 00000008  r3 deadbaad\n    r4 00000000  r5 64eb542c  r6 40063000  r7 64bc6008\n    r8 6364de20  r9 00000000  sl 6364dd28  fp 00000006\n    ip 00000001  sp 64eb5428  lr 40088497  pc 400859b8  cpsr 60000030\n    d0  524f424120404040  d1  6e69203a474e4954\n    d2  64612064696c6176  d3  726f207373657264\n    d4  0300030003000300  d5  0300030003000300\n    d6  0300030003000300  d7  0300030003000300\n    d8  410000003f800000  d9  4008000041000000\n    d10 4008000000000000  d11 0000000000000000\n    d12 0000000000000000  d13 0000000000000000\n    d14 0000000000000000  d15 0000000000000000\n    d16 7373657264646120  d17 72726f6320666f20\n    d18 0400040004000400  d19 8080808080808080\n    d20 0100010001000100  d21 0100010001000100\n    d22 8080808080808080  d23 8080808080808080\n    d24 8080808080808080  d25 8080808080808080\n    d26 0100010001000100  d27 0100010001000100\n    d28 0100010001000100  d29 0100010001000100\n    d30 0400040004000400  d31 0400040004000400\n    scr 28000012\n    backtrace:\n    #00  pc 0001e9b8  /system/lib/libc.so\n    #01  pc 0001c914  /system/lib/libc.so (abort+4)\n    #02  pc 00012495  /system/lib/libc.so\n    #03  pc 00011145  /system/lib/libc.so (dlfree+1184)\n    #04  pc 0000dc67  /system/lib/libc.so (free+10)\n    #05  pc 00119a68  /system/lib/libskia.so\n    #06  pc 00119e48  /system/lib/libskia.so (SkWEBPImageDecoder::onDecode(SkStream_, SkBitmap_, SkImageDecoder::Mode)+256)\n    #07  pc 00113f10  /system/lib/libskia.so (SkImageDecoder::decode(SkStream_, SkBitmap_, SkBitmap::Config, SkImageDecoder::Mode, bool)+168)\n    #08  pc 0007cd81  /system/lib/libandroid_runtime.so\n    #09  pc 0007d43b  /system/lib/libandroid_runtime.so\n    #10  pc 00020b8c  /system/lib/libdvm.so (dvmPlatformInvoke+112)\n    #11  pc 000516eb  /system/lib/libdvm.so (dvmCallJNIMethod(unsigned int const_, JValue_, Method const_, Thread_)+398)\n    #12  pc 0002a020  /system/lib/libdvm.so\n    #13  pc 0002e9e4  /system/lib/libdvm.so (dvmInterpret(Thread_, Method const_, JValue_)+184)\n    #14  pc 0006387d  /system/lib/libdvm.so (dvmCallMethodV(Thread_, Method const_, Object_, bool, JValue_, std::__va_list)+292)\n    #15  pc 000638a7  /system/lib/libdvm.so (dvmCallMethod(Thread_, Method const_, Object_, JValue*, ...)+20)\n    #16  pc 000585fb  /system/lib/libdvm.so\n    #17  pc 0000cc60  /system/lib/libc.so (__thread_entry+72)\n    #18  pc 0000cddc  /system/lib/libc.so (pthread_create+208)\n    stack:\n    64eb53e8  64eb5528  [stack:17396]\n    64eb53ec  00000000\n    64eb53f0  400af170  /system/lib/libc.so\n    64eb53f4  5d69e060\n    64eb53f8  00000015\n    64eb53fc  40087445  /system/lib/libc.so (__sflush+56)\n    64eb5400  400af264  /system/lib/libc.so\n    64eb5404  400af1c4  /system/lib/libc.so\n    64eb5408  00000000\n    64eb540c  40088497  /system/lib/libc.so (_fwalk+34)\n    64eb5410  40087741  /system/lib/libc.so (_cleanup)\n    64eb5414  64eb542c  [stack:17396]\n    64eb5418  40063000\n    64eb541c  64bc6008\n    64eb5420  df0027ad\n    64eb5424  00000000\n    #00  64eb5428  400b2218\n    64eb542c  fffffbdf\n    64eb5430  6295f000\n    64eb5434  0000005a\n    64eb5438  ffffffff\n    64eb543c  00000000\n    64eb5440  00000003\n    64eb5444  64eb546c  [stack:17396]\n    64eb5448  400b2008\n\nhow to fix it?ths\n", "url": "https://github.com/facebook/fresco/issues/141", "user": "lindow2009", "labels": ["bug"], "created": "2015-04-13 11:38:29", "closed": "2017-07-14 12:12:00", "commits": {}, "ttf": 823.0002777777778, "commitsDetails": []}, {"title": "Memory error sometimes with WebP", "body": "04-13 19:33:39.306  10343-10343/? I/DEBUG\ufe55 signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 74d1dd96\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 r0 00000001  r1 4010e0a0  r2 74d1dd8a  r3 400bf000\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 r4 00000038  r5 00000000  r6 61385400  r7 0000000e\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 r8 00000010  r9 5d350630  sl 41604870  fp be9613a4\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 ip 0000000c  sp be9612d8  lr 400d2941  pc 400d2a40  cpsr 20000030\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 d0  0000000000000000  d1  0000000000000000\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 d2  0000000000000000  d3  0000000000000000\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 d4  ffffffff3f800000  d5  0000000000000000\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 d6  bf80000000000000  d7  000000003f800000\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 d8  40584ae147ae147b  d9  4307000042040000\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 d10 3f80000042d20000  d11 0000000000000000\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 d12 0000000000000000  d13 0000000000000000\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 d14 0000000000000000  d15 0000000000000000\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 d16 006c006f0068005f  d17 0069006c005f006f\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 d18 0077006100720064  d19 0065006c00620061\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 d20 007200630073002f  d21 0062006c006c006f\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 d22 0068005f00720061  d23 006c0064006e0061\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 d24 0008000700060004  d25 000a0008000a0009\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 d26 0000000000000000  d27 0000000000000000\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 d28 3ff0000000000000  d29 0000000000000000\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 d30 408f400000000000  d31 4024000000000000\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 scr 68000013\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 backtrace:\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 #00  pc 0000fa40  /system/lib/libc.so (dlmalloc+307)\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 #01  pc 000113a7  /system/lib/libc.so (dlrealloc+130)\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 #02  pc 0000dd8f  /system/lib/libc.so (realloc+10)\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 #03  pc 0000fa2b  /system/lib/libutils.so (android::SharedBuffer::editResize(unsigned int) const+22)\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 #04  pc 00010937  /system/lib/libutils.so (android::String16::append(unsigned short const_, unsigned int)+52)\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 #05  pc 00072adb  /system/lib/libandroid_runtime.so\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 #06  pc 0002054c  /system/lib/libdvm.so (dvmPlatformInvoke+112)\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 #07  pc 00050eef  /system/lib/libdvm.so (dvmCallJNIMethod(unsigned int const_, JValue_, Method const_, Thread_)+398)\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 #08  pc 000009e0  /dev/ashmem/dalvik-jit-code-cache (deleted)\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 stack:\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be961298  5cacd970\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be96129c  40285b45  /system/lib/libandroidfw.so (android::ResTable_config::copyFromDtoH(android::ResTable_config const&)+8)\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612a0  ffffffff\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612a4  4028795d  /system/lib/libandroidfw.so (android::ResTable::getEntry(android::ResTable::Package const_, int, int, android::ResTable_config const_, android::ResTable_type const__, android::ResTable_entry const__, android::ResTable::Type const_*) const+96)\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612a8  00000000\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612ac  4c465bfe  /dev/ashmem/dalvik-heap (deleted)\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612b0  41604bcc\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612b4  00000017\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612b8  00000028\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612bc  00000000\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612c0  00000032\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612c4  00000000\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612c8  00000000\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612cc  61f4d700\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612d0  df0027ad\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612d4  00000000\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 #00  be9612d8  00000020\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612dc  00000010\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612e0  00000028\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612e4  43df400c  /dev/ashmem/dalvik-heap (deleted)\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612e8  61f4d708\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612ec  00000032\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612f0  00000000\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612f4  61f4d708\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612f8  61f4d700\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be9612fc  00000010\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be961300  5d350630\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be961304  41604870\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be961308  be9613a4  [stack]\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be96130c  400d43ab  /system/lib/libc.so (dlrealloc+134)\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 #01  be961310  400d4325  /system/lib/libc.so (dlrealloc)\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be961314  61f4d708\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be961318  00000022\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be96131c  be961364  [stack]\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be961320  57567490\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be961324  400d0d91  /system/lib/libc.so (realloc+12)\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 #02  be961328  00000001\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 be96132c  4015aa2f  /system/lib/libutils.so (android::SharedBuffer::editResize(unsigned int) const+26)\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 memory near r1:\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 4010e080 613eb538 613eb538 6349ac70 6349ac70\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 4010e090 620cda50 620cda50 60bee138 60bee138\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 4010e0a0 64a4c270 64a4c270 61385400 61385400\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 4010e0b0 62098f18 62098f18 60bee488 60bee488\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 4010e0c0 621a6268 6608a360 63945c20 6209f098\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 4010e0d0 62815848 6397b068 611dc248 611dc248\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 4010e0e0 613861e8 613861e8 613f50b8 64a4a498\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 4010e0f0 620ceb40 620ceb40 64d673e8 636078f8\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 4010e100 639b9b18 639b9b18 64a59878 64a59878\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 4010e110 6137e110 6137e110 621b1ec0 621b1ec0\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 4010e120 628157f8 628157f8 65a997a8 65a997a8\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 4010e130 621b1b98 621b1b98 60bef908 6608a988\n04-13 19:33:39.476  10343-10343/? I/DEBUG\ufe55 4010e140 6137ec70 60c10ab8 63940090 620bcc28\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 4010e150 6398e0a8 6492d008 61304008 61f50bf8\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 4010e160 61f2a000 63497000 646b9980 65843368\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 4010e170 6131a010 00000000 00000000 00000000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 memory near r2:\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 74d1dd68 ffffffff ffffffff ffffffff ffffffff\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 74d1dd78 ffffffff ffffffff ffffffff ffffffff\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 74d1dd88 ffffffff ffffffff ffffffff ffffffff\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 74d1dd98 ffffffff ffffffff ffffffff ffffffff\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 74d1dda8 ffffffff ffffffff ffffffff ffffffff\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 74d1ddb8 ffffffff ffffffff ffffffff ffffffff\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 74d1ddc8 ffffffff ffffffff ffffffff ffffffff\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 74d1ddd8 ffffffff ffffffff ffffffff ffffffff\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 74d1dde8 ffffffff ffffffff ffffffff ffffffff\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 74d1ddf8 ffffffff ffffffff ffffffff ffffffff\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 74d1de08 ffffffff ffffffff ffffffff ffffffff\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 74d1de18 ffffffff ffffffff ffffffff ffffffff\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 74d1de28 ffffffff ffffffff ffffffff ffffffff\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 74d1de38 ffffffff ffffffff ffffffff ffffffff\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 74d1de48 ffffffff ffffffff ffffffff ffffffff\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 74d1de58 ffffffff ffffffff ffffffff ffffffff\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 memory near r3:\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400befe0 400beed8 4029ca80 404d7a28 404d7108\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400beff0 00000001 4026a000 00000100 00000000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400bf000 00000000 0000001b 4010b064 4010b064\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400bf010 400d1c75 400d272d 400d1c85 0000001b\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400bf020 0000001d 00000001 00000000 00000000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400bf030 00000000 0000001b 0000000d 00000002\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400bf040 00000000 00000000 00000000 0000002b\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400bf050 00000001 00000010 00000000 00000000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400bf060 ffffffff ffffffff ffffffff 00000000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400bf070 00000000 0000002b 401644c8 400bf0a0\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400bf080 00000000 00000000 00000000 00000000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400bf090 00000001 00000000 00000000 0000001b\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400bf0a0 00000001 00000001 400bf078 00000000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400bf0b0 00000000 0000002b 401644c8 400bf0e0\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400bf0c0 00000001 00000000 00000000 00000000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400bf0d0 00000001 00000000 00000000 0000001b\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 memory near r6:\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 613853e0 6038b5a0 8810bda4 536f4491 91b440f3\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 613853f0 188945ac d75a6ded a7283776 eceee979\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 61385400 4db4b0db c2727a8f 74d1dd8a 1f33f1cf\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 61385410 08891991 c1fa1c73 9e7838fe ef7b81f4\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 61385420 69d95f39 432e00cf b808529f 68c89965\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 61385430 b4b46971 d39f8fe1 6a2b2d87 b9d00617\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 61385440 bada490a b48006fe 13904d3c 885bf8a5\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 61385450 107a5f64 22242a02 f143ef20 67ade147\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 61385460 a5b71b27 9389fa9c d2dfb5c3 a96d329e\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 61385470 9e0a35c7 6cf89793 413676ac ca3241a2\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 61385480 83b3da9e c9c9829a 2ca2f252 c575254d\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 61385490 5bf47da4 397d7a02 9cd3c5cd 7855cf97\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 613854a0 cdeb19d1 2b1cbfa1 7894a95e 65bbcdc7\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 613854b0 454b9ef6 fdf88dd4 2789a288 2330ee58\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 613854c0 dc74c281 933a258b df3bb823 61c60781\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 613854d0 63b617b7 3e64df68 524a8fb5 422d357d\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 memory near r9:\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 5d350610 7473616f 0000001b 41623798 4010e050\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 5d350620 67646977 542e7465 7473616f 0000001b\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 5d350630 00720064 00770061 00620061 0065006c\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 5d350640 64690000 00000033 00740062 005f006e\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 5d350650 00740073 00720061 0068005f 006c006f\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 5d350660 005f006f 00610064 006b0072 00040000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 5d350670 00000030 00000043 00740062 005f006e\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 5d350680 00740073 00720061 006f005f 005f006e\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 5d350690 006f006e 006d0072 006c0061 0068005f\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 5d3506a0 006c006f 005f006f 0069006c 00680067\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 5d3506b0 00000074 0000004b 00610066 00740073\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 5d3506c0 00630073 006f0072 006c006c 006c005f\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 5d3506d0 00620061 006c0065 0072005f 00670069\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 5d3506e0 00740068 0068005f 006c006f 005f006f\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 5d3506f0 00610064 006b0072 6d610000 00000033\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 5d350700 00640065 00740069 0074005f 00780065\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 memory near sl:\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 41604850 00000000 00000800 5755f008 00000453\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 41604860 58e6900c 57567484 576ce7f8 596a5000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 41604870 4212a740 409d8b60 be9614c0 00000000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 41604880 be9614f4 00000001 00000000 409356c0\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 41604890 00000000 00000000 56b31f70 57562300\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 416048a0 00000000 00000000 00000001 00006000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 416048b0 00000000 400bbffc 409356c0 4093a600\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 416048c0 00000000 4093e6fc 4093e770 4093e620\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 416048d0 4093e640 4093e69c 00000000 00000000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 416048e0 60e38178 00000028 61c67e05 be961618\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 416048f0 58fb2ae8 00000006 000002eb 409d73ac\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 41604900 416fb3d8 576d5a30 00000008 5aed1798\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 41604910 00000001 00000100 00000200 00000000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 41604920 00000001 58e6a948 58e6a948 00000002\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 41604930 58e6a960 576d0118 5db568c6 5de7648e\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 41604940 5d96b428 5def86a0 5d782783 5db3afa0\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 memory near fp:\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be961384 575bbc80 41604860 40935550 57567484\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be961394 00000001 00000000 419d5230 00000010\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be9613a4 40965ef3 57567484 5922e29b 40226a83\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be9613b4 41604870 409d6c80 575674f4 00000000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be9613c4 00000000 006fe9f8 4010e208 00000000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be9613d4 00000018 00000018 41938008 00000001\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be9613e4 00000018 409d6c80 588f3404 00001038\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be9613f4 4212a720 006fe9f8 4212a720 41604770\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be961404 4098a951 409d0c48 409d0c48 4010e208\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be961414 00000018 409d6c80 4010e208 00000018\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be961424 40941a9c 00000000 00000000 00000000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be961434 00000000 00000000 00000000 00000000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be961444 00000000 00000000 00000000 00000000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be961454 00000000 00000000 00000000 00000000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be961464 4c465bfe 00000000 41852734 41852730\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be961474 41604860 00000001 00000008 1dcd64ff\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 memory near sp:\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be9612b8 00000028 00000000 00000032 00000000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be9612c8 00000000 61f4d700 df0027ad 00000000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be9612d8 00000020 00000010 00000028 43df400c\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be9612e8 61f4d708 00000032 00000000 61f4d708\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be9612f8 61f4d700 00000010 5d350630 41604870\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be961308 be9613a4 400d43ab 400d4325 61f4d708\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be961318 00000022 be961364 57567490 400d0d91\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be961328 00000001 4015aa2f 00000008 00000008\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be961338 be961364 4015b93b 5d350630 41604398\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be961348 010804db 00000004 57567490 be961390\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be961358 57567488 40226adf 003a0000 61f4d718\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be961368 5cacd088 00000007 5d350630 00000008\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be961378 5aed2478 0000001b 409d0c48 575bbc80\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be961388 41604860 40935550 57567484 00000001\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be961398 00000000 419d5230 00000010 40965ef3\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 be9613a8 57567484 5922e29b 40226a83 41604870\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 code around pc:\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2a20 312801c7 68b2688e d1064291 fa009903\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2a30 ea21f207 60180002 691be007 d3b0429a\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2a40 42b068d0 60d1d1ad 00fb608a 0103f044\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2a50 19341b1a f0426071 50a20001 b1d56060\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2a60 3a64f8df f04f08ed 447b0c01 00c5eb03\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2a70 f505fa0c 3028681f 423d6959 433dd103\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2a80 4605601d 6885e003 429d691b 6081d389\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2a90 608d60e9 f8df60c8 44791a34 614c608a\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2aa0 bf80f000 8004f8d3 0f00f1b8 82c2f000\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2ab0 0700f1c8 0608ea07 0b0a1e71 0010f002\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2ac0 f600fa21 f0070977 fa260a08 eb0af10a\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2ad0 088a0c00 0004f002 f100fa21 0700eb0c\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2ae0 f006084e fa210202 18bff002 0640f3c0\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2af0 fa06fa20 0c06eb07 010aeb0c f853314c\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2b00 684b1021 f023460e 1b120207 6841e00a\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2b10 0307f021 ebc44601 45920a03 4692bf2c\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 code around lr:\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2920 f8dfff07 44791b94 21bcf8d1 d4020793\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2930 d9092cf4 f501e1a6 260070e0 ed32f7fe\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2940 f0412800 e7f3807c d9032c0a f024340b\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2950 e0000407 f8df2410 08e23b68 6818447b\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2960 f102fa20 078e9003 f001d021 f0840401\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2970 18b10601 04c1eb03 68a63428 429468b2\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2980 2201d106 fc01fa02 000cea20 e00c6018\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d2990 42826918 68d3d305 d10242b3 60a260d4\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d29a0 f8dfe003 44780b20 00c8e0df 689de358\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d29b0 f24042ac 2900833f f04fd074 fa000001\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d29c0 fa01f602 fa06f202 4277f600 0c06ea47\n04-13 19:33:39.486  10343-10343/? I/DEBUG\ufe55 400d29d0 0602ea0c ea014271 1e7a0706 f0060b16\n04-13 19:33:39.496  10343-10343/? I/DEBUG\ufe55 400d29e0 fa220110 0957f201 0c08f007 f60cfa22\n04-13 19:33:39.496  10343-10343/? I/DEBUG\ufe55 400d29f0 08b24461 0c04f002 f60cfa26 070ceb01\n04-13 19:33:39.496  10343-10343/? I/DEBUG\ufe55 400d2a00 f100fa26 0202f001 f602fa26 0c02eb07\n04-13 19:33:39.496  10343-10343/? I/DEBUG\ufe55 400d2a10 0140f3c6 f201fa26 0701eb0c eb0318bf\n04-13 19:33:39.496  10343-10343/? I/DEBUG\ufe55 memory map around fault addr 74d1dd96:\n04-13 19:33:39.496  10343-10343/? I/DEBUG\ufe55 69115000-69117000 rw- /dev/kgsl-3d0\n04-13 19:33:39.496  10343-10343/? I/DEBUG\ufe55 (no map for address)\n04-13 19:33:39.496  10343-10343/? I/DEBUG\ufe55 be941000-be962000 rw- [stack]\n", "url": "https://github.com/facebook/fresco/issues/140", "user": "msilemsile", "labels": ["bug"], "created": "2015-04-13 11:37:03", "closed": "2017-07-11 16:01:50", "commits": {}, "ttf": 820.0002777777778, "commitsDetails": []}, {"title": "Streaming Progressive JPEGs didn't work", "body": "  @Override\n    public NewsEventHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        SimpleProgressiveJpegConfig jpegConfig = new SimpleProgressiveJpegConfig();\n        jpegConfig.getNextScanNumberToDecode(1);\n        jpegConfig.getQualityInfo(1);\n\n```\n    ImagePipelineConfig config = ImagePipelineConfig.newBuilder(context)\n            .setProgressiveJpegConfig(jpegConfig)\n            .build();\n\n    Fresco.initialize(context,config);\n    View v = LayoutInflater.from(context).inflate(R.layout.item_news_event, parent, false);\n    return new NewsEventHolder(v);\n}\n```\n\n @Override\n    public void onBindViewHolder(NewsEventHolder holder, int position) {\n        holder.txtTitle.setText(itemNewsEvents.get(position).getTitle());\n        holder.txtDate.setText(itemNewsEvents.get(position).getDate());\n\n```\n    Uri myUri = Uri.parse(itemNewsEvents.get(position).getImg());\n\n    ImageRequest request = ImageRequestBuilder.newBuilderWithSource(myUri)\n            .setProgressiveRenderingEnabled(true)\n            .build();\n    DraweeController controller = Fresco.newDraweeControllerBuilder()\n            .setImageRequest(request)\n            .setOldController(holder.draweeView.getController())\n            .build();\n    holder.draweeView.setController(controller);\n}\n```\n", "url": "https://github.com/facebook/fresco/issues/138", "user": "johnnypramadya", "labels": ["bug"], "created": "2015-04-13 08:52:59", "closed": "2015-05-15 13:25:30", "commits": {}, "ttf": 32.000277777777775, "commitsDetails": []}, {"title": "java.lang.IllegalStateException: Byte-array currently in use", "body": "Hi,\n\nWhile using Facebook app v30.0.0.19.17 none of the picture displayed so I had a look in the logs and I see some Fresco error : `java.lang.IllegalStateException: Byte-array currently in use`\n\n```\nW/fb4a(:<default>):RequestLoggingListener( 2614): time 104750537: onRequestFailure: {requestId: 840, elapsedTime: -1 ms, throwable: java.lang.IllegalStateException: Byte-array currently in use}\nW/fb4a(:<default>):RequestLoggingListener( 2614): time 104750609: onProducerFinishWithFailure: {requestId: 842, stage: DecodeProducer, elapsedTime: -1 ms, extraMap: null, throwable: java.lang.IllegalStateException: Byte-array currently in use}\nW/fb4a(:<default>):RequestLoggingListener( 2614): time 104750609: onRequestFailure: {requestId: 842, elapsedTime: -1 ms, throwable: java.lang.IllegalStateException: Byte-array currently in use}\nW/fb4a(:<default>):RequestLoggingListener( 2614): time 104750614: onProducerFinishWithFailure: {requestId: 843, stage: DecodeProducer, elapsedTime: -1 ms, extraMap: null, throwable: java.lang.IllegalStateException: Byte-array currently in use}\nW/fb4a(:<default>):RequestLoggingListener( 2614): time 104750614: onRequestFailure: {requestId: 843, elapsedTime: -1 ms, throwable: java.lang.IllegalStateException: Byte-array currently in use}\nW/fb4a(:<default>):RequestLoggingListener( 2614): time 104750616: onProducerFinishWithFailure: {requestId: 844, stage: DecodeProducer, elapsedTime: -1 ms, extraMap: null, throwable: java.lang.IllegalStateException: Byte-array currently in use}\nW/fb4a(:<default>):RequestLoggingListener( 2614): time 104750616: onRequestFailure: {requestId: 844, elapsedTime: -1 ms, throwable: java.lang.IllegalStateException: Byte-array currently in use}\nW/fb4a(:<default>):RequestLoggingListener( 2614): time 104750839: onProducerFinishWithFailure: {requestId: 845, stage: DecodeProducer, elapsedTime: -1 ms, extraMap: null, throwable: java.lang.IllegalStateException: Byte-array currently in use}\nW/fb4a(:<default>):RequestLoggingListener( 2614): time 104750839: onRequestFailure: {requestId: 845, elapsedTime: -1 ms, throwable: java.lang.IllegalStateException: Byte-array currently in use}\nW/fb4a(:<default>):RequestLoggingListener( 2614): time 104750890: onProducerFinishWithFailure: {requestId: 846, stage: DecodeProducer, elapsedTime: -1 ms, extraMap: null, throwable: java.lang.IllegalStateException: Byte-array currently in use}\nW/fb4a(:<default>):RequestLoggingListener( 2614): time 104750890: onRequestFailure: {requestId: 846, elapsedTime: -1 ms, throwable: java.lang.IllegalStateException: Byte-array currently in use}\nW/fb4a(:<default>):RequestLoggingListener( 2614): time 104751111: onProducerFinishWithFailure: {requestId: 848, stage: DecodeProducer, elapsedTime: -1 ms, extraMap: null, throwable: java.lang.IllegalStateException: Byte-array currently in use}\nW/fb4a(:<default>):RequestLoggingListener( 2614): time 104751111: onRequestFailure: {requestId: 848, elapsedTime: -1 ms, throwable: java.lang.IllegalStateException: Byte-array currently in use}\nW/fb4a(:<default>):RequestLoggingListener( 2614): time 104751235: onProducerFinishWithFailure: {requestId: 849, stage: DecodeProducer, elapsedTime: -1 ms, extraMap: null, throwable: java.lang.IllegalStateException: Byte-array currently in use}\nW/fb4a(:<default>):RequestLoggingListener( 2614): time 104751235: onRequestFailure: {requestId: 849, elapsedTime: -1 ms, throwable: java.lang.IllegalStateException: Byte-array currently in use}\nW/fb4a(:<default>):RequestLoggingListener( 2614): time 104751304: onProducerFinishWithFailure: {requestId: 847, stage: DecodeProducer, elapsedTime: -1 ms, extraMap: null, throwable: java.lang.IllegalStateException: Byte-array currently in use}\nW/fb4a(:<default>):RequestLoggingListener( 2614): time 104751304: onRequestFailure: {requestId: 847, elapsedTime: -1 ms, throwable: java.lang.IllegalStateException: Byte-array currently in use}\nW/fb4a(:<default>):RequestLoggingListener( 2614): time 104751360: onProducerFinishWithFailure: {requestId: 850, stage: DecodeProducer, elapsedTime: -1 ms, extraMap: null, throwable: java.lang.IllegalStateException: Byte-array currently in use}\nW/fb4a(:<default>):RequestLoggingListener( 2614): time 104751360: onRequestFailure: {requestId: 850, elapsedTime: -1 ms, throwable: java.lang.IllegalStateException: Byte-array currently in use}\nW/fb4a(:<default>):RequestLoggingListener( 2614): time 104751398: onProducerFinishWithFailure: {requestId: 851, stage: DecodeProducer, elapsedTime: -1 ms, extraMap: null, throwable: java.lang.IllegalStateException: Byte-array currently in use}\nW/fb4a(:<default>):RequestLoggingListener( 2614): time 104751399: onRequestFailure: {requestId: 851, elapsedTime: -1 ms, throwable: java.lang.IllegalStateException: Byte-array currently in use}\n```\n\nForce stop / restart the app fix it.\nI was on an good WIFI connection using a Nexus 6.\n\nThanks\n", "url": "https://github.com/facebook/fresco/issues/113", "user": "eboudrant", "labels": ["bug"], "created": "2015-04-08 21:29:25", "closed": "2015-04-17 00:30:45", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "SimpleDrawee does not work with android:transitionName", "body": "Hi,\n\nWith fresco 0.1.0, the image is not displayed when SimpleDrawee is used together with 'android:transitionName'.\n\nSay in layout xml:\n\n```\n            <com.facebook.drawee.view.SimpleDraweeView\n                android:id=\"@+id/article_photo\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:transitionName=\"app_tag:photo\"\n                fresco:placeholderImage=\"@android:color/darker_gray\" />\n```\n\nAnd in code:\n\n```\n        //Proper lifecycle\n        Context context = getActivity().getApplicationContext();\n        Fresco.initialize(context);\n        ...\n        //Proper lifecycle\n        mPhoto = (SimpleDraweeView) root.findViewById(R.id.article_photo);\n        mPhoto.setAspectRatio(PHOTO_ASPECT_RATIO);\n        if (mImageUrl != null)\n            mPhoto.setImageURI(Uri.parse(mImageUrl));\n```\n\nThe image is never displayed. However, removing the 'android:transitionName' tag will fix it, but I am losing the desired activity transition effect.\n\nWould you please indicate a work around or i am using it wrong? Many thanks.\n\nRegards,\nXiang\n", "url": "https://github.com/facebook/fresco/issues/99", "user": "xiangdev", "labels": ["bug", "duplicate"], "created": "2015-04-07 06:14:48", "closed": "2015-04-16 18:31:40", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "LocalContentUriFetchProducer \"contacts/42/photo\" not loading", "body": "can't open '/contacts/42/photo'\n", "url": "https://github.com/facebook/fresco/issues/88", "user": "chonamdoo", "labels": ["bug"], "created": "2015-04-04 05:47:31", "closed": "2015-10-19 23:48:18", "commits": {}, "ttf": 198.00027777777777, "commitsDetails": []}, {"title": "The application may be doing too much work on its main thread.", "body": "I used SimpleDraweeView in adapter, but my app runs slowly, and I saw the log below:\n\n`I/Choreographer(1378): Skipped 55 frames!  The application may be doing too much work on its main thread.`\n\nso I comment the code `mSimpleDraw.setImageUri`, the app runs fluently. I think the SimpleDraw blocks the main thread when fetching image from network.\n", "url": "https://github.com/facebook/fresco/issues/84", "user": "ultimaters", "labels": ["bug"], "created": "2015-04-03 12:46:06", "closed": "2015-10-14 16:21:15", "commits": {}, "ttf": 194.00027777777777, "commitsDetails": []}, {"title": "fresco can't be built by Gradle after imported into Android Studio", "body": "I have posted my question in [StackOverFlow](http://stackoverflow.com/questions/29386772/fresco-cant-be-built-by-gradle-after-imported-into-android-studio). Could anybody have a look and help me?\n", "url": "https://github.com/facebook/fresco/issues/67", "user": "bytebeats", "labels": ["bug"], "created": "2015-04-01 09:44:48", "closed": "2015-04-06 15:41:20", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Cannot load urls with redirect", "body": "I am currently migrating our app to fresco but I encountered a problem. Whenever I try loading a url that redirects to another url to the SimpleDraweeView, the image does not load at all. How can I fix this?\n", "url": "https://github.com/facebook/fresco/issues/61", "user": "kssilvoza", "labels": ["bug"], "created": "2015-04-01 07:11:21", "closed": "2015-04-17 00:17:39", "commits": {}, "ttf": 15.000277777777777, "commitsDetails": []}, {"title": "crash in Nexus5 ", "body": "F/libc    ( 7134): heap corruption detected by dlmalloc\nF/libc    ( 7134): Fatal signal 6 (SIGABRT) at 0x00001bde (code=-6), thread 7134 (esco.frescotest)\n\nF/libc    ( 7267): Fatal signal 6 (SIGABRT) at 0x00001c63 (code=-6), thread 7276 (FinalizerDaemon)\n\nF/libc    ( 7433): Fatal signal 7 (SIGBUS) at 0x0000000d (code=1), thread 7442 (FinalizerDaemon)\n", "url": "https://github.com/facebook/fresco/issues/45", "user": "guomin0999", "labels": ["bug"], "created": "2015-03-31 02:25:52", "closed": "2015-04-02 13:26:46", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Setting fresco:pressedStateOverlayImage to a color in layout XML causes crash", "body": "Using the following XML\n\n```\n<com.facebook.drawee.view.SimpleDraweeView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:id=\"@+id/image_view\"\n        fresco:placeholderImage=\"@drawable/download_photo\"\n        fresco:failureImage=\"@drawable/photo_error\"\n        fresco:actualImageScaleType=\"centerCrop\"\n        fresco:placeholderImageScaleType=\"centerInside\"\n        fresco:failureImageScaleType=\"centerInside\"\n        fresco:pressedStateOverlayImage=\"@color/black_overlay\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_alignParentLeft=\"true\"\n        android:layout_alignParentStart=\"true\"\n        android:contentDescription=\"@string/accessibility_photo\"\n        android:layout_alignParentRight=\"true\"\n        android:layout_alignParentBottom=\"true\"\n        android:layout_alignParentEnd=\"true\"/>\n```\n\ncauses a crash in Jellybean, API level 18, and Lollipop, API 22,  when inflating the view\n\n```\nFATAL EXCEPTION: main\nandroid.view.InflateException: Binary XML file line #10: Error inflating class com.facebook.drawee.view.SimpleDraweeView\n        at android.view.LayoutInflater.createView(LayoutInflater.java:620)\n        at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:696)\n        at android.view.LayoutInflater.rInflate(LayoutInflater.java:755)\n        at android.view.LayoutInflater.inflate(LayoutInflater.java:492)\n        at android.view.LayoutInflater.inflate(LayoutInflater.java:397) \n```\n\nWhen I remove the fresco:pressedStateOverlayImage=\"@color/black_overlay\" then the Inflater works and the app behaves as expected without a crash.  Using any color also results in a crash so that is not the problem.  Perhaps the documentation is incorrect and a color cannot be used?\n", "url": "https://github.com/facebook/fresco/issues/33", "user": "shanus", "labels": ["bug"], "created": "2015-03-30 04:31:36", "closed": "2015-04-01 17:15:55", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Windows os How to build?", "body": "## My Environment\n- os : WIndows 7 Ultimake\n- SET ANDROID_HOME=C:\\android-sdk-windows\n- SET PATH=C:\\android-ndk-r10d;%PATH%\n## Run\n- gradlew build\n## Result\n\nFAILURE: Build failed with an exception.\n\n\\* What went wrong:\nExecution failed for task ':imagepipeline:ndk_build_gifimage'.\n> A problem occurred starting process 'command 'ndk-build''\n\n\\* Try:\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\n\nBUILD FAILED\n\n....... \u315c.\u3161\n## Retry\n- gradlew build -- stacktrace\n## Result\n\n\\* What went wrong:\nExecution failed for task ':imagepipeline:ndk_build_gifimage'.\n> A problem occurred starting process 'command 'ndk-build''\n\n\\* Try:\nRun with --info or --debug option to get more log output.\n\n\\* Exception is:\norg.gradle.api.tasks.TaskExecutionException: Execution failed for task ':imagepipeline:ndk_build_gifimage'.\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:69)\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:46)\n        at org.gradle.api.internal.tasks.execution.PostExecutionAnalysisTaskExecuter.execute(PostExecutionAnalysisTaskExecuter.java:35)\n        at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:64)\n        at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:58)\n        at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:42)\n        at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:52)\n...\n", "url": "https://github.com/facebook/fresco/issues/24", "user": "PmtPrt", "labels": ["bug"], "created": "2015-03-28 15:10:36", "closed": "2015-04-07 11:34:56", "commits": {"1b86b49f60861b56d7bd89550e16f7f8e5b69383": {"commitGHEventType": "referenced", "commitUser": "facebook-github-bot"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "1b86b49f60861b56d7bd89550e16f7f8e5b69383", "commitGHEventType": "referenced", "commitUser": "facebook-github-bot", "commitParents": ["5f35a1d111d7e8361fb87610f61bceee35c104db"], "nameRev": "1b86b49f60861b56d7bd89550e16f7f8e5b69383 tags/v1.10.0~46", "commitMessage": "Fix NDK settings (#2134)\n\nSummary:\nThanks for submitting a PR! Please read these instructions carefully:\n\n- [x] Explain the **motivation** for making this change.\n- [x] Provide a **test plan** demonstrating that the code is solid.\n- [x] Match the **code formatting** of the rest of the codebase.\n- [x] Target the `master` branch\n\nWhat existing problem does the pull request solve?\n\nFix build failed occurred by ndk settings ([Application.mk](https://developer.android.com/ndk/guides/application_mk))\nRemove armeabi support (Remove from NDK r17)\n\n```\n> Task :imagepipeline:ndk_build_bitmaps FAILED\nA problem was found with the configuration of task ':imagepipeline:ndk_build_bitmaps'. Registering invalid inputs and outputs via TaskInputs and TaskOutputs methods has been deprecated and is scheduled to be removed in Gradle 5.0.\n - File '.../fresco/imagepipeline/src/main/jni/bitmaps' specified for property '$1' is not a file.\nAndroid NDK: APP_PLATFORM not set. Defaulting to minimum supported version android-14.\nAndroid NDK: WARNING: APP_STL gnustl_static is deprecated and will be removed in the next release. Please switch to either c++_static or c++_shared. See https://developer.android.com/ndk/guides/cpp-support.html for more information.\nAndroid NDK: The armeabi ABI is no longer supported. Use armeabi-v7a.\n.../Android/sdk/ndk-bundle/build/core/setup-app.mk:79: *** Android NDK: Aborting    Android NDK: NDK Application 'local' targets unknown ABI(s): armeabi\n.  Stop.\nAndroid NDK: Please fix the APP_ABI definition in ../Application.mk\nmake: Entering directory `.../fresco/imagepipeline/src/main/jni/bitmaps'\nmake: Leaving directory `.../fresco/imagepipeline/src/main/jni/bitmaps'\n```\n\nRelative issue: #24 #163 #286 #513 #591 #618 #938 #989 #1114 #1205 #1226 #1427 #1945\n\nA good test plan has the exact commands you ran and their output, provides screenshots or videos if the pull request changes UI or updates the website. See [What is a Test Plan?][1] to learn more.\n\nIf you have added code that should be tested, add tests.\n\nBuild with NDK r17b\n<img width=\"677\" alt=\"2018-06-15 11 00 00\" src=\"https://user-images.githubusercontent.com/5742579/41448216-de9ac710-708b-11e8-865c-70ac85459d5c.png\">\n\nSign the [CLA][2], if you haven't already.\n\nSmall pull requests are much easier to review and more likely to get merged. Make sure the PR does only one thing, otherwise please split it.\n\nMake sure all **tests pass** on [Circle CI][4]. PRs that break tests are unlikely to be merged.\n\nFor more info, see the [Contributing guide][4].\n\n[1]: https://medium.com/martinkonicek/what-is-a-test-plan-8bfc840ec171#.y9lcuqqi9\n[2]: https://code.facebook.com/cla\n[3]: http://circleci.com/gh/facebook/fresco\n[4]: https://github.com/facebook/fresco/blob/master/CONTRIBUTING.md\nCloses https://github.com/facebook/fresco/pull/2134\n\nReviewed By: erikandre\n\nDifferential Revision: D8441064\n\nPulled By: oprisnik\n\nfbshipit-source-id: 6484f7714d738c9984c273a3e0513e31f730ff30\n", "commitDateTime": "2018-06-21 03:04:41", "authoredDateTime": "2018-06-21 02:58:16", "commitGitStats": [{"filePath": "animated-gif/src/main/jni/Application.mk", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "circle.yml", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "docs/_docs/proguard.md", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "gradle.properties", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "imagepipeline/src/main/jni/Application.mk", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "run_comparison.py", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "samples/animation2/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/comparison/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/kotlin/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/showcase/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/zoomableapp/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "static-webp/src/main/jni/Application.mk", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "SimpleDraweeView doesn't work in edit mode", "body": "```\nThe following classes could not be instantiated:\n-\u00a0com.facebook.drawee.view.SimpleDraweeView (Open Class, Show Exception)\n Tip: Use View.isInEditMode() in your custom views to skip code or show sample data when shown in the IDE  Exception Details java.lang.NullPointerException: SimpleDraweeView was not initialized! \u00a0\u00a0at \ncom.facebook.common.internal.Preconditions.checkNotNull(Preconditions.java:226) \u00a0\u00a0at \ncom.facebook.drawee.view.SimpleDraweeView.init(SimpleDraweeView.java:68) \u00a0\u00a0at \ncom.facebook.drawee.view.SimpleDraweeView.<init>(SimpleDraweeView.java:59) \u00a0\u00a0at \njava.lang.reflect.Constructor.newInstance(Constructor.java:422) \u00a0\u00a0at \nandroid.view.LayoutInflater.rInflate_Original(LayoutInflater.java:806) \u00a0\u00a0at \nandroid.view.LayoutInflater_Delegate.rInflate(LayoutInflater_Delegate.java:64) \u00a0\u00a0at \nandroid.view.LayoutInflater.rInflate(LayoutInflater.java:782) \u00a0\u00a0at \nandroid.view.LayoutInflater.rInflate_Original(LayoutInflater.java:809) \u00a0\u00a0at \nandroid.view.LayoutInflater_Delegate.rInflate(LayoutInflater_Delegate.java:64) \u00a0\u00a0at \nandroid.view.LayoutInflater.rInflate(LayoutInflater.java:782) \u00a0\u00a0at \nandroid.view.LayoutInflater.rInflate_Original(LayoutInflater.java:809) \u00a0\u00a0at \nandroid.view.LayoutInflater_Delegate.rInflate(LayoutInflater_Delegate.java:64) \u00a0\u00a0at \nandroid.view.LayoutInflater.rInflate(LayoutInflater.java:782) \u00a0\u00a0at \nandroid.view.LayoutInflater.rInflate_Original(LayoutInflater.java:809) \u00a0\u00a0at \nandroid.view.LayoutInflater_Delegate.rInflate(LayoutInflater_Delegate.java:64) \u00a0\u00a0at \nandroid.view.LayoutInflater.rInflate(LayoutInflater.java:782) \u00a0\u00a0at \nandroid.view.LayoutInflater.rInflate_Original(LayoutInflater.java:809) \u00a0\u00a0at \nandroid.view.LayoutInflater_Delegate.rInflate(LayoutInflater_Delegate.java:64) \u00a0\u00a0at \nandroid.view.LayoutInflater.rInflate(LayoutInflater.java:782) \u00a0\u00a0at \nandroid.view.LayoutInflater.rInflate_Original(LayoutInflater.java:809) \u00a0\u00a0at \nandroid.view.LayoutInflater_Delegate.rInflate(LayoutInflater_Delegate.java:64) \u00a0\u00a0at \nandroid.view.LayoutInflater.rInflate(LayoutInflater.java:782) \u00a0\u00a0at \nandroid.view.LayoutInflater.inflate(LayoutInflater.java:504) \u00a0\u00a0at \nandroid.view.LayoutInflater.inflate(LayoutInflater.java:385)\n```\n", "url": "https://github.com/facebook/fresco/issues/23", "user": "jorgemf", "labels": ["bug"], "created": "2015-03-28 13:04:07", "closed": "2015-04-01 17:16:11", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}]}