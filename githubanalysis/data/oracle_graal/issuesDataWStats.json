{"projectName": "oracle/graal", "bugLabels": ["bug"], "captureTime": "Sat Jul  4 20:42:26 2020", "issues": [{"title": "[JDK11] master branch fails to build with OpenJDK 11.0.8-ea+8", "body": "**Describe the issue**\r\nmaster branch fails to build with OpenJDK 11.0.8-ea+8\r\n\r\n**Steps to reproduce the issue**\r\n1. `git clone --depth 1 git@github.com:oracle/graal.git`\r\n2. `git clone --depth 1 git@github.com:graalvm/mx.git`\r\n3. `curl -L https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/download/jdk-11.0.8%2B8/OpenJDK11U-jdk_x64_linux_11.0.8_8_ea.tar.gz | tar xz`\r\n4. `curl -L https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/download/jdk-11.0.8%2B8/OpenJDK11U-static-libs_x64_linux_11.0.8_8_ea.tar.gz | tar xz`\r\n3. `export JAVA_HOME=$PWD/openjdk-11.0.8_8`\r\n4. `cd graal`\r\n5. `./mx/mx --primary-suite-path graal/substratevm --components=\"Native Image\" build`\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM version: **master branch (e0b32200103b6d3a6f286a1f3f7f71614ea3f1e4)**\r\n - JDK major version: **11**\r\n - OS: **Linux Fedora 32**\r\n - Architecture: **AMD64**\r\n\r\n\r\n**More details**\r\n```\r\nCompiling com.oracle.graal.pointsto with javac-daemon(JDK 11)... [/tmp/graal/substratevm/mxbuild/src/com.oracle.graal.pointsto/bin/com/oracle/graal/pointsto/HeapScanningPolicy.class does not exist]\r\nCompiling com.oracle.svm.core.graal.amd64 with javac-daemon(JDK 11)... [/tmp/graal/substratevm/mxbuild/src/com.oracle.svm.core.graal.amd64/bin/com/oracle/svm/core/graal/amd64/SubstrateAMD64SuitesCreatorProvider.class does not exist]\r\nCompiling com.oracle.svm.core.jdk11 with javac-daemon(JDK 11)... [/tmp/graal/substratevm/mxbuild/src/com.oracle.svm.core.jdk11/bin/com/oracle/svm/core/jdk11/Target_sun_util_resources_Bundles.class does not exist]\r\nCompiling com.oracle.svm.thirdparty with javac-daemon(JDK 11)... [/tmp/graal/substratevm/mxbuild/src/com.oracle.svm.thirdparty/bin/com/oracle/svm/thirdparty/jline/JLineFeature.class does not exist]\r\nCompiling com.oracle.svm.bench with javac-daemon(JDK 11)... [/tmp/graal/substratevm/mxbuild/src/com.oracle.svm.bench/bin/com/oracle/svm/bench/scaladacapo/Target_org_dacapo_harness_CommandLineArgs.class does not exist]\r\nCompiling com.oracle.svm.core.genscavenge with javac-daemon(JDK 11)... [/tmp/graal/substratevm/mxbuild/src/com.oracle.svm.core.genscavenge/bin/com/oracle/svm/core/genscavenge/YoungGeneration.class does not exist]\r\nCompiling com.oracle.svm.core.graal.aarch64 with javac-daemon(JDK 11)... [/tmp/graal/substratevm/mxbuild/src/com.oracle.svm.core.graal.aarch64/bin/com/oracle/svm/core/graal/aarch64/SubstrateAArch64SuitesCreatorProvider.class does not exist]\r\nCompiling com.oracle.svm.configure with javac-daemon(JDK 11)... [/tmp/graal/substratevm/mxbuild/src/com.oracle.svm.configure/bin/com/oracle/svm/configure/ConfigurationTool.class does not exist]\r\nCompiling com.oracle.svm.tutorial with javac-daemon(JDK 11)... [/tmp/graal/substratevm/mxbuild/src/com.oracle.svm.tutorial/bin/com/oracle/svm/tutorial/CInterfaceTutorial.class does not exist]\r\nCompiling com.oracle.svm.core.posix with javac-daemon(JDK 11)... [dependency com.oracle.svm.core.graal.amd64 updated]\r\nCompiling com.oracle.svm.core.windows with javac-daemon(JDK 11)... [dependency com.oracle.svm.core.graal.amd64 updated]\r\nCompiling com.oracle.svm.configure.jdk11 with javac-daemon(JDK 11)... [dependency com.oracle.svm.configure updated]\r\n/tmp/graal/substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisType.java:1014: error: method does not override or implement a method from a supertype\r\n    @Override\r\n    ^\r\n/tmp/graal/substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisType.java:1016: error: cannot find symbol\r\n        wrapped.link();\r\n               ^\r\n  symbol:   method link()\r\n  location: variable wrapped of type ResolvedJavaType\r\n/tmp/graal/substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisType.java:1019: error: method does not override or implement a method from a supertype\r\n    @Override\r\n    ^\r\n/tmp/graal/substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisType.java:1021: error: cannot find symbol\r\n        return wrapped.hasDefaultMethods();\r\n                      ^\r\n  symbol:   method hasDefaultMethods()\r\n  location: variable wrapped of type ResolvedJavaType\r\n/tmp/graal/substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisType.java:1024: error: method does not override or implement a method from a supertype\r\n    @Override\r\n    ^\r\n/tmp/graal/substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisType.java:1026: error: cannot find symbol\r\n        return wrapped.declaresDefaultMethods();\r\n                      ^\r\n  symbol:   method declaresDefaultMethods()\r\n  location: variable wrapped of type ResolvedJavaType\r\n6 errors\r\n\r\nCompiling com.oracle.graal.pointsto with javac-daemon(JDK 11) failed\r\n1 build tasks failed\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2628", "user": "zakkak", "labels": ["bug"], "created": "2020-06-29 21:30:38", "closed": "2020-06-29 21:52:08", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Maven graal plugins add test dependencies", "body": "Good day. I create my native-image using mvn plugin\r\nThis is my [pom](https://github.com/strogiyotec/jfillin/blob/master/pom.xml). It has the following plugin declaration to build native image\r\n```\r\n <plugin>\r\n                <groupId>org.graalvm.nativeimage</groupId>\r\n                <artifactId>native-image-maven-plugin</artifactId>\r\n                <version>20.0.0</version>\r\n                <executions>\r\n                    <execution>\r\n                        <goals>\r\n                            <goal>native-image</goal>\r\n                        </goals>\r\n                        <phase>package</phase>\r\n                    </execution>\r\n                </executions>\r\n                <configuration>\r\n                    <imageName>jfill</imageName>\r\n                    <mainClass>jfill.Main</mainClass>\r\n                    <buildArgs>\r\n                        -H:+ReportExceptionStackTraces\r\n                    </buildArgs>\r\n                </configuration>\r\n            </plugin>\r\n```\r\nAccording to [documentation](https://www.graalvm.org/docs/reference-manual/native-image/#image-generation-options)\r\n```\r\nThe native-image command line needs to provide the class path for all classes using the familiar option from the java launcher: -cp is followed by a list of directories or .jar files\r\n```\r\nThis is the output when I buld image using `mvn package`\r\n```\r\n[INFO] Executing: ~/.sdkman/candidates/java/20.0.0.r11-grl/bin/native-image -cp ~/.m2/repository/org/jline/jline-terminal/3.15.0/jline-terminal-3.15.0.jar:~/.m2/repository/org/jline/jline-reader/3.15.0/jline-reader-3.15.0.jar:~/.m2/repository/org/sharegov/mjson/1.4.1/mjson-1.4.1.jar:~/.m2/repository/junit/junit/4.12/junit-4.12.jar:~/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:~/IdeaProjects/jfillin/jfillin/target/jfill-1.jar -H:+ReportExceptionStackTraces -H:Class=jfill.Main -H:Name=jfill\r\n```\r\nAs you can see test dependencies such as junit and hamcrest are added to native image using -cp option. Why does it happen? How could I exclude test dependencies from image ? \r\nGraal info\r\n```\r\n\u25b6 gu list\r\nComponentId              Version             Component name      Origin \r\n--------------------------------------------------------------------------------\r\ngraalvm                  20.0.0              GraalVM Core        \r\nnative-image             20.0.0              Native Image        github.com\r\n```\r\nJava version\r\n```\r\nopenjdk version \"11.0.6\" 2020-01-14\r\nOpenJDK Runtime Environment GraalVM CE 20.0.0 (build 11.0.6+9-jvmci-20.0-b02)\r\nOpenJDK 64-Bit Server VM GraalVM CE 20.0.0 (build 11.0.6+9-jvmci-20.0-b02, mixed mode, sharing)\r\n```", "url": "https://github.com/oracle/graal/issues/2621", "user": "strogiyotec", "labels": ["bug", "native-image"], "created": "2020-06-27 19:55:10", "closed": "2020-06-29 01:06:43", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Issue with execute native image for Spring-boot app", "body": "When I send request to my Spring-boot application then I get stacktrace shown below\r\n\r\nMy steps to build an image \r\n1. mkdir -p src/main/resources/META-INF/native-image\r\n2. mvn clean package\r\n3. java -agentlib:native-image-agent=config-output-dir=src/main/resources/META-INF/native-image \\\r\n  -jar target/rest-service.jar\r\n4. mvn -Pgraal clean package\r\n\r\n**Environment:**\r\n-  Spring boot 2.3.1\r\n- openjdk version \"1.8.0_252\"\r\n- OpenJDK Runtime Environment (build 1.8.0_252-b09)\r\n- OpenJDK 64-Bit Server VM GraalVM CE 20.1.0 (build 25.252-b09-jvmci-20.1-b02, mixed mode)\r\n - Windows 10\r\n - AMD64\r\n\r\nAlso I disable CGLIB in my app\r\n@SpringBootApplication(proxyBeanMethods = false)\r\n```\r\n    ERROR 8688 --- [nio-8080-exec-6] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: java.lang.IllegalStateException: org.springframework.cglib.core.CodeGenerationException: com.oracle.svm.core.jdk.UnsupportedFeatureError-->Unsupported method java.lang.ClassLoader.defineClass1(String, byte[], int, int, ProtectionDomain, String) is reachable] with root cause\r\n\r\ncom.oracle.svm.core.jdk.UnsupportedFeatureError: Unsupported method java.lang.ClassLoader.defineClass1(String, byte[], int, int, ProtectionDomain, String) is reachable\r\n        at com.oracle.svm.core.util.VMError.unsupportedFeature(VMError.java:86) ~[na:na]\r\n        at java.lang.ClassLoader.defineClass1(ClassLoader.java) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at java.lang.ClassLoader.defineClass(ClassLoader.java:756) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at java.lang.reflect.Method.invoke(Method.java:498) ~[na:na]\r\n        at org.springframework.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:535) ~[na:na]\r\n        at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory$PropertyAccessorClassGenerator.generateCustomAccessorClass(ClassGeneratingPropertyAccessorFactory.java:337) ~[na:na]\r\n        at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.createAccessorClass(ClassGeneratingPropertyAccessorFactory.java:199) ~[na:na]\r\n        at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.potentiallyCreateAndRegisterPersistentPropertyAccessorClass(ClassGeneratingPropertyAccessorFactory.java:185) ~[na:na]\r\n        at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.getPropertyAccessor(ClassGeneratingPropertyAccessorFactory.java:93) ~[na:na]\r\n        at org.springframework.data.mapping.model.InstantiationAwarePropertyAccessorFactory.getPropertyAccessor(InstantiationAwarePropertyAccessorFactory.java:42) ~[na:na]\r\n        at org.springframework.data.mapping.model.BasicPersistentEntity.getPropertyAccessor(BasicPersistentEntity.java:453) ~[na:na]\r\n        at org.springframework.data.mongodb.core.convert.MappingMongoConverter.populateProperties(MappingMongoConverter.java:356) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:347) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:317) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:250) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:246) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:98) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.data.mongodb.core.MongoTemplate$ReadDocumentCallback.doWith(MongoTemplate.java:3130) ~[na:na]\r\n        at org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:2777) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2507) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2489) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:856) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:380) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:204) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:54) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at java.lang.reflect.Method.invoke(Method.java:498) ~[na:na]\r\n        at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72) ~[na:na]\r\n        at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205) ~[na:na]\r\n        at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549) ~[na:na]\r\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[na:na]\r\n        at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155) ~[na:na]\r\n        at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130) ~[na:na]\r\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[na:na]\r\n        at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:37) ~[na:na]\r\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[na:na]\r\n        at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[na:na]\r\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[na:na]\r\n        at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[na:na]\r\n        at com.sun.proxy.$Proxy216.findAll(Unknown Source) ~[na:na]\r\n        at java.lang.reflect.Method.invoke(Method.java:498) ~[na:na]\r\n        at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[na:na]\r\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[na:na]\r\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[na:na]\r\n        at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[na:na]\r\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[na:na]\r\n        at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[na:na]\r\n        at com.sun.proxy.$Proxy216.findAll(Unknown Source) ~[na:na]\r\n        at blockingapp.demo.controllers.TraineeController.findAll(TraineeController.java:25) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at java.lang.reflect.Method.invoke(Method.java:498) ~[na:na]\r\n        at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[na:na]\r\n        at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[na:na]\r\n        at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105) ~[na:na]\r\n        at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[na:na]\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[na:na]\r\n        at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[na:na]\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[na:na]\r\n        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[na:na]\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[na:na]\r\n        at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[na:na]\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[na:na]\r\n        at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[blockingapp.demo.demoapplication.exe:na]\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[na:na]\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[na:na]\r\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[na:na]\r\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) ~[na:na]\r\n        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[na:na]\r\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [blockingapp.demo.demoapplication.exe:na]\r\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [blockingapp.demo.demoapplication.exe:na]\r\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [blockingapp.demo.demoapplication.exe:na]\r\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [blockingapp.demo.demoapplication.exe:na]\r\n        at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [blockingapp.demo.demoapplication.exe:na]\r\n        at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [blockingapp.demo.demoapplication.exe:na]\r\n        at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [blockingapp.demo.demoapplication.exe:na]\r\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) [blockingapp.demo.demoapplication.exe:na]\r\n        at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [blockingapp.demo.demoapplication.exe:na]\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [blockingapp.demo.demoapplication.exe:na]\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [blockingapp.demo.demoapplication.exe:na]\r\n        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [blockingapp.demo.demoapplication.exe:na]\r\n        at java.lang.Thread.run(Thread.java:748) [blockingapp.demo.demoapplication.exe:na]\r\n        at com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:517) [blockingapp.demo.demoapplication.exe:na]\r\n        at com.oracle.svm.core.windows.WindowsJavaThreads.osThreadStartRoutine(WindowsJavaThreads.java:138) [blockingapp.demo.demoapplication.exe:na]\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2613", "user": "openbeck", "labels": ["bug", "native-image"], "created": "2020-06-25 10:12:25", "closed": "2020-06-25 21:22:35", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "jdk/jdk compiling error after updategraalinopenjdk", "body": "**Describe the issue**\r\nAfter updating the latest graal in jdk/jdk master by running \"mx updategraalinopenjdk\", building jdk reports the error:\r\n```\r\njdk_build/support/gensrc/jdk.internal.vm.compiler/module-info.java:86: error: cannot find symbol\r\n\r\n    uses org.graalvm.compiler.nodes.graphbuilderconf.NodeIntrinsicPluginFactory;\r\n\r\n                                                    ^\r\n\r\n  symbol:   class NodeIntrinsicPluginFactory\r\n\r\n  location: package org.graalvm.compiler.nodes.graphbuilderconf\r\n```\r\n\r\nI checked the codes and found that ` \"org.graalvm.compiler.nodes.graphbuilderconf.NodeIntrinsicPluginFactory.java\"` has been renamed to ` \"org.graalvm.compiler.nodes.graphbuilderconf.GeneratedNodeIntrinsicInvocationPlugin.java\"`. And the `module-info.java` in ` jdk/jdk` should be updated when updating graal in openjdk either. \r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\n1.  cd graal/compiler & mx updategraalinopenjdk jdk_src 16\r\n2.  cd jdk_src & ./configure [options] & make images\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM version : **[master]**\r\n - JDK major version: **[16]**\r\n - OS: **[Linux]**\r\n - Architecture: **[AMD64, AArch64]**\r\n\r\n\r\n**More details**\r\nAdd any other information about the problem here. Especially important are stack traces or log output. Feel free to link to gists or to screenshots if necessary.\r\n```\r\n    PASTE YOUR LOG/STACK TRACE HERE\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2605", "user": "XiaohongGong", "labels": ["bug"], "created": "2020-06-24 03:55:36", "closed": "2020-06-30 02:03:56", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "[native-image] Native image does not seem to work with Netty SSL", "body": "[OpenSsl.java](https://github.com/netty/netty/blob/b3fb2eb27f71de20cb53d64ab2281eb2d8d31aae/handler/src/main/java/io/netty/handler/ssl/OpenSsl.java) in the Netty libraries does not appear to be compatible with Graal native image builds.\r\n\r\nWhen running the native image I get this error:\r\n\r\n```\r\nException in thread \"main\" java.lang.UnsatisfiedLinkError: io.grpc.netty.shaded.io.netty.internal.tcnative.NativeStaticallyReferencedJniMethods.sslOpCipherServerPreference()I [symbol: Java_io_grpc_netty_shaded_io_netty_internal_tcnative_NativeStaticallyReferencedJniMethods_sslOpCipherServerPreference or Java_io_grpc_netty_shaded_io_netty_internal_tcnative_NativeStaticallyReferencedJniMethods_sslOpCipherServerPreference__]\r\n\tat com.oracle.svm.jni.access.JNINativeLinkage.getOrFindEntryPoint(JNINativeLinkage.java:145)\r\n\tat com.oracle.svm.jni.JNIGeneratedMethodSupport.nativeCallAddress(JNIGeneratedMethodSupport.java:57)\r\n\tat io.grpc.netty.shaded.io.netty.internal.tcnative.NativeStaticallyReferencedJniMethods.sslOpCipherServerPreference(NativeStaticallyReferencedJniMethods.java)\r\n\tat io.grpc.netty.shaded.io.netty.internal.tcnative.SSL.<clinit>(SSL.java:67)\r\n\tat com.oracle.svm.core.hub.ClassInitializationInfo.invokeClassInitializer(ClassInitializationInfo.java:350)\r\n\tat com.oracle.svm.core.hub.ClassInitializationInfo.initialize(ClassInitializationInfo.java:270)\r\n\tat java.lang.Class.ensureInitialized(DynamicHub.java:499)\r\n\tat io.grpc.netty.shaded.io.netty.handler.ssl.OpenSsl.<clinit>(OpenSsl.java:121)\r\n\tat com.oracle.svm.core.hub.ClassInitializationInfo.invokeClassInitializer(ClassInitializationInfo.java:350)\r\n\tat com.oracle.svm.core.hub.ClassInitializationInfo.initialize(ClassInitializationInfo.java:270)\r\n\tat java.lang.Class.ensureInitialized(DynamicHub.java:499)\r\n\r\n```\r\n\r\n### Minimal yet complete reproducer code (or URL to code)\r\n\r\nhttps://github.com/dzou/graal-gcp-experiments/tree/basic-main\r\n\r\n### Netty version\r\n\r\nLatest\r\nI am using Netty through `grpc-netty-shaded` [provided by Google](https://github.com/grpc/grpc-java/tree/master/netty/shaded).\r\n\r\n#### GraalVM version\r\n\r\nJava GraalVM version 20.1.0.r11-grl\r\n_____________________\r\n\r\nMy theories:\r\n\r\nI think the root issue is that [OpenSsl attempts to load Ssl.java on this line](https://github.com/netty/netty/blob/master/handler/src/main/java/io/netty/handler/ssl/OpenSsl.java#L120). However this doesn't work because Ssl.java makes a static call to [sslOpCipherServerPreference()](https://github.com/netty/netty-tcnative/blob/5d39363563bd8aa8ce3b6c2e7ee4155bd126e305/openssl-dynamic/src/main/java/io/netty/internal/tcnative/SSL.java#L67) which is a native function. And at this point in the code, we have not yet loaded the native library `netty_tcnative.so` to call that method. And I guess this works in non-native image code because we wouldn't trigger the native call with the `Class.forName(...)` normally?\r\n\r\nI am willing to debug this more on my own, mainly coming to seek guidance. Some questions are:\r\n- Does this assessment make sense?\r\n- I am interested in using Substitutions to try to resolve the problem - is it possible to use substitutions to replace code in a static block? I want to substitute the code in [this static block](https://github.com/netty/netty/blob/master/handler/src/main/java/io/netty/handler/ssl/OpenSsl.java#L107).\r\n", "url": "https://github.com/oracle/graal/issues/2604", "user": "dzou", "labels": ["bug", "native-image"], "created": "2020-06-24 03:40:31", "closed": "2020-06-26 20:03:50", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Static methods do not allow code removal while static fields do", "body": "**Describe the issue**\r\nStatic `boolean` fields of classes initialized at build time are effective for code removal when used in `if` statements while static methods returning the very same field are not.\r\n\r\n**Steps to reproduce the issue**\r\nConsider this simple class (initialized at build time) used to detect if the code is running as a native image or not:\r\n```java\r\npublic abstract class NativeImageDetector {\r\n\r\n\tpublic static final boolean IN_NATIVE_IMAGE = (System.getProperty(\"org.graalvm.nativeimage.imagecode\") != null);\r\n\r\n\tpublic static boolean inNativeImage() {\r\n\t\treturn IN_NATIVE_IMAGE;\r\n\t}\r\n}\r\n```\r\nIf the static field is used in an `if` statement:\r\n```java\r\npublic class AppWithStaticField {\r\n\r\n    public static void main(String[] args) {\r\n        if (!NativeImageDetector.IN_NATIVE_IMAGE) {\r\n            System.out.println(\"Should not be printed in native images\" + new Foo().foo());\r\n        }\r\n    }\r\n}\r\n```\r\nAs expected the message is not printed on the console and `com.sample.Foo` is not referenced in the used classes visible in the report generated via `-H:+PrintAnalysisCallTree`.\r\n\r\nBut if we do the same with the static method:\r\n```java\r\npublic class AppWithStaticMethod {\r\n\r\n    public static void main(String[] args) {\r\n        if (!NativeImageDetector.inNativeImage()) {\r\n            System.out.println(\"Should not be printed in native images\" + new Foo().foo());\r\n        }\r\n    }\r\n}\r\n```\r\nAs expected the message is not printed on the console.\r\nBut `com.sample.Foo` is referenced in the used classes visible in the report generated via `-H:+PrintAnalysisCallTree. Such class should be not be referenced here nor part of the static image, the static method and static field variants should be equivalent for such trivial level of indirection.\r\n\r\nCheck https://github.com/sdeleuze/graalvm-native-issues/tree/master/static-method-code-removal-regression and run `./build.sh` to reproduce the issue.\r\n\r\n**Describe GraalVM and your environment:**\r\n - Tested with GraalVM 20.1.0 and 20.0.0 (Java 8 variant)", "url": "https://github.com/oracle/graal/issues/2594", "user": "sdeleuze", "labels": ["bug", "native-image", "spring"], "created": "2020-06-20 09:09:33", "closed": "2020-06-22 21:04:34", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "[gu] does not seem to use the default truststore", "body": "**Describe the issue**\r\nI need `gu` to download artifacts from internal caching proxy, that has a certificate issued by the company CA and not traceable to any public CA. Even when I specify the custom trust store, GY complains with:\r\n\r\n```\r\nI/O error occurred: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target\r\n```\r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\n1. Set the following environment variables: \r\n    ```\r\n    export JAVA_TOOL_OPTIONS=\"-Djavax.net.ssl.trustStore=~/acme-cacerts\"\r\n    export GRAALVM_CATALOG=\"file://$(readlink -e acme-graal-updater-component-catalog-java8.properties)\"\r\n    export GRAAVLM_CATALOG=\"$GRAALVM_CATALOG\" # see  https://github.com/oracle/graal/issues/2576\r\n    ```\r\n2. Run Gradle, under OpenJDK Java 8 using the Palantir GraalVM plugin \r\n3. Gradle downloads `graalvm-ce-java8-20.1.0-amd64.tar.gz` from Nexus\r\n4. When Gradle tries to run `gu install native-image` it fails with cert error\r\n\r\nRunning this reproduces the error:\r\n\r\n```\r\n$GRADLE_USER_HOME/caches/com.palantir.graal/20.1.0/8/graalvm-ce-java8-20.1.0/bin/gu install native-image\r\n```\r\n\r\nIt also appears that `gu` does not pick the `JAVA_TOOL_OPTIONS`. \r\n\r\nI have tried to copy the `cacerts` in `$GRADLE_USER_HOME/caches/com.palantir.graal/20.1.0/8/graalvm-ce-java8-20.1.0/jre/lib/security/`, but nothing changes.\r\n\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM version 20.1.0\r\n - JDK major version: 8\r\n - OS: RHEL6\r\n - Architecture: AMD64\r\n", "url": "https://github.com/oracle/graal/issues/2585", "user": "ddimtirov", "labels": ["bug"], "created": "2020-06-18 11:47:56", "closed": "2020-06-18 14:05:55", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[gu] Cannot debug Graal Updater", "body": "Adding the usual `--vm.Xrunjdwp:transport=dt_socket,server=y,address=8000,suspend=y` does not seem to work for the `gu` tool. It fails, wrongly insisting that `--vm.Xrunjdwp:transport=dt_socket,server=y,address=8000,suspend=y` does not start with `--vm.X`:\r\n\r\n```\r\n$ bin/gu --vm.Xrunjdwp:transport=dt_socket,server=y,address=8000,suspend=y available\r\nUnrecognized vm option: '--vm.Xrunjdwp:transport=dt_socket,server=y,address=8000,suspend=y'. Such arguments should start with '--vm.D', '--vm.XX:', or '--vm.X'\r\n[1]    45732 exit 1     bin/gu --vm.Xrunjdwp:transport=dt_socket,server=y,address=8000,suspend=y\r\n```\r\n\r\n*Tested with GraalVM CE 20.1.0 on macOS.*", "url": "https://github.com/oracle/graal/issues/2582", "user": "fniephaus", "labels": ["bug"], "created": "2020-06-18 08:05:26", "closed": "2020-06-23 14:02:53", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "GraalVM 20.1.0 CE catalog seems to only have native-image available.", "body": "Describe the issue\r\nI wanted to experiment with graalpython, so I downloaded GraalVM 20.1.0 (see #2295). When I open a windows command prompt and run:\r\n\r\ngu install python\r\n\r\nI get the following output:\r\n\r\nDownloading: Component catalog from www.graalvm.org\r\nError: Unknown component: python\r\n\r\nIf I run:\r\n\r\ngu available\r\n\r\nI get the following output:\r\n\r\nDownloading: Component catalog from www.graalvm.org\r\nComponentId Version Component name Origin\r\nnative-image 20.1.0 Native Image github.com\r\n\r\nGraalVM 20.1.0\r\nJDK major version: 11\r\nOS: Windows 10", "url": "https://github.com/oracle/graal/issues/2565", "user": "miloslavskacel", "labels": ["bug"], "created": "2020-06-12 18:44:03", "closed": "2020-06-15 11:08:58", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Graal compiler uses too much CPU and never ends", "body": "**Describe the issue**\r\n`org.springframework.security.crypto.bcrypt.BCrypt` can never be compiled\r\n\r\n**Steps to reproduce the issue**\r\n1. environment:\r\n\r\n    ```\r\n    cat73@test:~$ lsb_release -a\r\n    No LSB modules are available.\r\n    Distributor ID:\tUbuntu\r\n    Description:\tUbuntu 20.04 LTS\r\n    Release:\t20.04\r\n    Codename:\tfocal\r\n    cat73@test:~$ uname -a\r\n    Linux saas-test 5.4.0-1010-azure #10-Ubuntu SMP Fri Apr 10 17:51:04 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux\r\n    cat73@test:~$ java -version\r\n    java version \"11.0.7\" 2020-04-14 LTS\r\n    Java(TM) SE Runtime Environment GraalVM EE 20.1.0 (build 11.0.7+8-LTS-jvmci-20.1-b02)\r\n    Java HotSpot(TM) 64-Bit Server VM GraalVM EE 20.1.0 (build 11.0.7+8-LTS-jvmci-20.1-b02, mixed mode, sharing)\r\n    ```\r\n2. download the code: https://github.com/Cat7373/demo-code\r\n3. Compile and run:\r\n\r\n    ```sh\r\n    ./gradlew clean bootJar\r\n    mv build/libs/graal-demo-1.0.0-SNAPSHOT.jar ./graal-demo.jar\r\n    java -jar graal-demo.jar\r\n    ```\r\n4. View the Graal compilation thread (i.e. `JVMCI-native CompilerThread0`) in the new shell:\r\n\r\n    ```\r\n    cat73@test:~$ jps\r\n    1234 graal-demo.jar\r\n    cat73@test:~$ jstack 1234\r\n    2020-06-08 15:03:13\r\n    Full thread dump Java HotSpot(TM) 64-Bit Server VM (11.0.7+8-LTS-jvmci-20.1-b02 mixed mode, sharing):\r\n\r\n    Threads class SMR info:\r\n    _java_thread_list=0x00007f1240001f00, length=11, elements={\r\n    0x00007f128c023800, 0x00007f128c1f2800, 0x00007f128c1f4800, 0x00007f128c1fd000,\r\n    0x00007f128c1ff800, 0x00007f128c201800, 0x00007f128c203800, 0x00007f128c235800,\r\n    0x00007f128c28c800, 0x00007f12440cb000, 0x00007f1240001000\r\n    }\r\n\r\n    \"main\" #1 prio=5 os_prio=0 cpu=49007.11ms elapsed=550.99s tid=0x00007f128c023800 nid=0x14da2a waiting on condition  [0x00007f1293bf8000]\r\n    java.lang.Thread.State: TIMED_WAITING (sleeping)\r\n        at java.lang.Thread.sleep(java.base@11.0.7/Native Method)\r\n        at org.cat73.demo.Main.main(Main.java:26)\r\n        at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(java.base@11.0.7/Native Method)\r\n        at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(java.base@11.0.7/NativeMethodAccessorImpl.java:62)\r\n        at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(java.base@11.0.7/DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(java.base@11.0.7/Method.java:566)\r\n        at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)\r\n        at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)\r\n        at org.springframework.boot.loader.Launcher.launch(Launcher.java:51)\r\n        at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:52)\r\n\r\n    \"Reference Handler\" #2 daemon prio=10 os_prio=0 cpu=0.35ms elapsed=550.97s tid=0x00007f128c1f2800 nid=0x14da31 waiting on condition  [0x00007f12904ae000]\r\n    java.lang.Thread.State: RUNNABLE\r\n        at java.lang.ref.Reference.waitForReferencePendingList(java.base@11.0.7/Native Method)\r\n        at java.lang.ref.Reference.processPendingReferences(java.base@11.0.7/Reference.java:241)\r\n        at java.lang.ref.Reference$ReferenceHandler.run(java.base@11.0.7/Reference.java:213)\r\n\r\n    \"Finalizer\" #3 daemon prio=8 os_prio=0 cpu=0.37ms elapsed=550.97s tid=0x00007f128c1f4800 nid=0x14da32 in Object.wait()  [0x00007f12903ad000]\r\n    java.lang.Thread.State: WAITING (on object monitor)\r\n        at java.lang.Object.wait(java.base@11.0.7/Native Method)\r\n        - waiting on <0x000000072b132f50> (a java.lang.ref.ReferenceQueue$Lock)\r\n        at java.lang.ref.ReferenceQueue.remove(java.base@11.0.7/ReferenceQueue.java:155)\r\n        - waiting to re-lock in wait() <0x000000072b132f50> (a java.lang.ref.ReferenceQueue$Lock)\r\n        at java.lang.ref.ReferenceQueue.remove(java.base@11.0.7/ReferenceQueue.java:176)\r\n        at java.lang.ref.Finalizer$FinalizerThread.run(java.base@11.0.7/Finalizer.java:170)\r\n\r\n    \"Signal Dispatcher\" #4 daemon prio=9 os_prio=0 cpu=0.28ms elapsed=550.97s tid=0x00007f128c1fd000 nid=0x14da33 runnable  [0x0000000000000000]\r\n    java.lang.Thread.State: RUNNABLE\r\n\r\n    \"JVMCI-native CompilerThread0\" #5 daemon prio=9 os_prio=0 cpu=550758.06ms elapsed=550.97s tid=0x00007f128c1ff800 nid=0x14da34 runnable  [0x0000000000000000]\r\n    java.lang.Thread.State: RUNNABLE\r\n    Compiling:  551 %     4       org.springframework.security.crypto.bcrypt.BCrypt::key @ 151 (196 bytes)\r\n\r\n    \"C1 CompilerThread0\" #6 daemon prio=9 os_prio=0 cpu=178.05ms elapsed=550.97s tid=0x00007f128c201800 nid=0x14da35 waiting on condition  [0x0000000000000000]\r\n    java.lang.Thread.State: RUNNABLE\r\n    No compile task\r\n\r\n    \"Sweeper thread\" #7 daemon prio=9 os_prio=0 cpu=5.73ms elapsed=550.97s tid=0x00007f128c203800 nid=0x14da36 runnable  [0x0000000000000000]\r\n    java.lang.Thread.State: RUNNABLE\r\n\r\n    \"Common-Cleaner\" #8 daemon prio=8 os_prio=0 cpu=0.83ms elapsed=550.95s tid=0x00007f128c235800 nid=0x14da37 in Object.wait()  [0x00007f1268dcb000]\r\n    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\n        at java.lang.Object.wait(java.base@11.0.7/Native Method)\r\n        - waiting on <0x000000072b133a60> (a java.lang.ref.ReferenceQueue$Lock)\r\n        at java.lang.ref.ReferenceQueue.remove(java.base@11.0.7/ReferenceQueue.java:155)\r\n        - waiting to re-lock in wait() <0x000000072b133a60> (a java.lang.ref.ReferenceQueue$Lock)\r\n        at jdk.internal.ref.CleanerImpl.run(java.base@11.0.7/CleanerImpl.java:148)\r\n        at java.lang.Thread.run(java.base@11.0.7/Thread.java:834)\r\n        at jdk.internal.misc.InnocuousThread.run(java.base@11.0.7/InnocuousThread.java:134)\r\n\r\n    \"Service Thread\" #9 daemon prio=9 os_prio=0 cpu=0.08ms elapsed=550.92s tid=0x00007f128c28c800 nid=0x14da38 runnable  [0x0000000000000000]\r\n    java.lang.Thread.State: RUNNABLE\r\n\r\n    \"Libgraal MBean Registration\" #10 daemon prio=1 os_prio=4 cpu=15.05ms elapsed=550.86s tid=0x00007f12440cb000 nid=0x14da3a waiting on condition  [0x00007f126869e000]\r\n    java.lang.Thread.State: TIMED_WAITING (sleeping)\r\n        at java.lang.Thread.sleep(java.base@11.0.7/Native Method)\r\n        at org.graalvm.compiler.hotspot.management.SVMMBean$Factory.run(jdk.internal.vm.compiler.management/SVMMBean.java:569)\r\n\r\n    \"Attach Listener\" #12 daemon prio=9 os_prio=0 cpu=0.76ms elapsed=539.52s tid=0x00007f1240001000 nid=0x14da87 waiting on condition  [0x0000000000000000]\r\n    java.lang.Thread.State: RUNNABLE\r\n\r\n    \"VM Thread\" os_prio=0 cpu=55.67ms elapsed=550.98s tid=0x00007f128c1ef800 nid=0x14da30 runnable  \r\n\r\n    \"GC Thread#0\" os_prio=0 cpu=32.85ms elapsed=550.99s tid=0x00007f128c038000 nid=0x14da2b runnable  \r\n\r\n    \"GC Thread#1\" os_prio=0 cpu=28.65ms elapsed=547.40s tid=0x00007f1254001000 nid=0x14da47 runnable  \r\n\r\n    \"GC Thread#2\" os_prio=0 cpu=36.18ms elapsed=547.40s tid=0x00007f1254002800 nid=0x14da48 runnable  \r\n\r\n    \"GC Thread#3\" os_prio=0 cpu=23.12ms elapsed=547.40s tid=0x00007f1254004000 nid=0x14da49 runnable  \r\n\r\n    \"G1 Main Marker\" os_prio=0 cpu=0.51ms elapsed=550.99s tid=0x00007f128c08b000 nid=0x14da2c runnable  \r\n\r\n    \"G1 Conc#0\" os_prio=0 cpu=0.07ms elapsed=550.99s tid=0x00007f128c08d000 nid=0x14da2d runnable  \r\n\r\n    \"G1 Refine#0\" os_prio=0 cpu=0.36ms elapsed=550.99s tid=0x00007f128c15e000 nid=0x14da2e runnable  \r\n\r\n    \"G1 Young RemSet Sampling\" os_prio=0 cpu=115.23ms elapsed=550.99s tid=0x00007f128c160000 nid=0x14da2f runnable  \r\n    \"VM Periodic Task Thread\" os_prio=0 cpu=267.68ms elapsed=550.92s tid=0x00007f128c28f800 nid=0x14da39 waiting on condition  \r\n\r\n    JNI global refs: 12, weak refs: 0\r\n    ```\r\n\r\n    Part of the Graal compiler:\r\n\r\n    ```\r\n    \"JVMCI-native CompilerThread0\" #5 daemon prio=9 os_prio=0 cpu=550758.06ms elapsed=550.97s tid=0x00007f128c1ff800 nid=0x14da34 runnable  [0x0000000000000000]\r\n    java.lang.Thread.State: RUNNABLE\r\n    Compiling:  551 %     4       org.springframework.security.crypto.bcrypt.BCrypt::key @ 151 (196 bytes)\r\n    ```\r\n\r\n    It will always get stuck on this class.\r\n\r\n    And the CPU usage of this thread is always 100%.\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM version: GraalVM EE 20.1.0 (build 11.0.7+8-LTS-jvmci-20.1-b02)\r\n - JDK major version: 11\r\n - OS: Ubuntu 20.04 LTS\r\n - Architecture: AMD64\r\n", "url": "https://github.com/oracle/graal/issues/2548", "user": "Cat7373", "labels": ["bug"], "created": "2020-06-08 07:09:40", "closed": "2020-06-09 16:40:28", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "VM bug in EE: failed bzip2 decompression", "body": "Using Apache commons-compress to read BZip2 file causes this error:\r\n```\r\n09:43:05.054 [main] ERROR STDERR - Exception in thread \"main\" java.io.IOException: BZip2 CRC error\r\n09:43:05.055 [main] ERROR STDERR - \tat org.apache.commons.compress@1.20/org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.endBlock(BZip2CompressorInputStream.java:349)\r\n09:43:05.055 [main] ERROR STDERR - \tat org.apache.commons.compress@1.20/org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.setupNoRandPartA(BZip2CompressorInputStream.java:828)\r\n09:43:05.055 [main] ERROR STDERR - \tat org.apache.commons.compress@1.20/org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.setupNoRandPartB(BZip2CompressorInputStream.java:877)\r\n09:43:05.055 [main] ERROR STDERR - \tat org.apache.commons.compress@1.20/org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.read0(BZip2CompressorInputStream.java:229)\r\n09:43:05.055 [main] ERROR STDERR - \tat org.apache.commons.compress@1.20/org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.read(BZip2CompressorInputStream.java:177)\r\n09:43:05.055 [main] ERROR STDERR - \tat java.base/java.io.InputStream.read(InputStream.java:205)\r\n```\r\n```kotlin\r\nval input = BZip2CompressorInputStream(Files.newInputStream(Paths.get(filePath)))\r\nval buf = ByteArray(0x4000)\r\nwhile (true) {\r\n    input.read(buf)\r\n}\r\n```\r\nJust create `BZip2CompressorInputStream` and read everything from it on any big bz2 file (mine is several GB, but it occurs on reading some first ~100MB). Decompressed data integrity also looks suspicious (I did not check, but I see parsing errors in my app before the error which are not present on other VMs), probably some test with checksum verification should be created.\r\nIt is only enterprise edition bug, community edition as well as OpenJDK do not have this bug.\r\nReproduced on EE 19.3.1 and EE 20.0.1 on Ubuntu 18.04.4 AMD64.\r\nOther evidence found: https://i.reddit.com/r/admincraft/comments/fwhvu7/anyone_having_problems_starting_a_fresh_papermc/\r\n", "url": "https://github.com/oracle/graal/issues/2534", "user": "arlebedev", "labels": ["bug", "compiler"], "created": "2020-06-03 06:59:59", "closed": "2020-06-08 15:02:29", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "svm.jar declares wrong module-info", "body": "The svm-20.1.0.jar declares the wrong module-info metadata.\r\n\r\n```java\r\nopen module org.objectweb.asm {\r\n    exports org.objectweb.asm;\r\n    exports org.objectweb.asm.signature;\r\n}\r\n```\r\n\r\nThis means that annotations `com.oracle.svm.core.annotate.*` cannot be used via JPMS.\r\n\r\nIt looks like there are a couple problems with this:\r\n\r\n1.) If objectweb is included (uberjar) into the `svm` jar it should be shaded into a sub-package (ideally just included as a transitive dependency instead)\r\n2.) The annotations could be pulled out into a separate jar (#1005)\r\n3.) The current module-info _should_ be replaced with the correct one for this project. `com.oracle.svm`?\r\n4.) The Maven groupId and root package are a little miss leading `org.graalvm.nativeimage` vs `com.oracle.svm` (obviously, this is not a requirement)\r\n\r\n\r\nNOTE: I browsed the decompiled module-info.java from Intellij, so this information may not be perfect.\r\n\r\n\r\n## History\r\n\r\nAfter upgrading from 20.0.0 to 20.1.0 (JDK 11) I ran into an issue:\r\n```txt\r\nError: com.oracle.svm.hosted.substitute.DeletedElementException: Unsupported type jdk.internal.reflect.MethodAccessorGenerator is reachable\r\n```\r\n\r\nAfter seeing a similar error:\r\nhttps://github.com/quarkusio/quarkus/issues/9633/\r\n\r\nI attempted to use the same solution:\r\nhttps://github.com/quarkusio/quarkus/pull/9686/files#diff-53f95f6cd460a468fc1204e2e102d09eR8-R25\r\n\r\nThis resulted in the JPMS problems above.\r\n\r\n\r\n## Workaround\r\n\r\nAlong with adding the `Target_java_io_ObjectStreamClass` workaround above, I had to remove my project's module-info.\r\n\r\n\r\n## Version\r\n\r\nOpenJDK Runtime Environment GraalVM CE 20.1.0 (build 11.0.7+10-jvmci-20.1-b02)\r\n\r\nOS name: \"mac os x\", version: \"10.15.4\", arch: \"x86_64\", family: \"mac\"", "url": "https://github.com/oracle/graal/issues/2528", "user": "bdemers", "labels": ["bug"], "created": "2020-06-01 19:44:20", "closed": "2020-06-05 11:16:51", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Unable to detect supported WINDOWS native software development toolchain on GraalVM 20.1.0 Java 11", "body": "Hello,\r\n\r\nI try to create a native image from a jar on Windows 10 64 but I get the following error : com.oracle.svm.core.util.UserError$UserException: Unable to detect supported WINDOWS native software development toolchain.\r\n\r\n1. I have installed Visual Studio 2019 and the x64 Native Tools Command Prompt for VS 2019 is available from the start menu.\r\n2. From the x64 Native Tools Command Prompt, the cl command seems to work :\r\nCompilateur d'optimisation Microsoft (R) C/C++ version\u00a019.26.28805 pour x64\r\nCopyright (C) Microsoft Corporation. Tous droits r\u00e9serv\u00e9s.\r\n\r\nutilisation\u00a0: cl [ option... ] nom de fichier... [ /link linkoption... ]\r\n3. I use the following command to create the native image : C:\\dev\\graalvm-ce-java11-20.1.0\\bin>native-image.cmd --verbose --static --no-fallback -H:+ReportExceptionStackTraces -jar c:\\dev\\Intellij-ws\\perf\\target\\perf-1.0-SNAPSHOT.jar\r\n\r\nI tried with graalvm-ce-java11-20.1.0 and graalvm-ee-java11-20.1.0.\r\n\r\nHere is the whole stack trace :\r\n\r\nC:\\dev\\graalvm-ce-java11-20.1.0\\bin>native-image.cmd --verbose --static --no-fallback -H:+ReportExceptionStackTraces -jar c:\\dev\\Intellij-ws\\perf\\target\\perf-1.0-SNAPSHOT.jar\r\nExecuting [\r\n'C:\\dev\\graalvm-ce-java11-20.1.0\\bin\\java.exe' \\\r\n-XX:+UseParallelGC \\\r\n-XX:+UnlockExperimentalVMOptions \\\r\n-XX:+EnableJVMCI \\\r\n-Dtruffle.TrustAllTruffleRuntimeProviders=true \\\r\n-Dtruffle.TruffleRuntime=com.oracle.truffle.api.impl.DefaultTruffleRuntime \\\r\n-Dgraalvm.ForcePolyglotInvalid=true \\\r\n-Dgraalvm.locatorDisabled=true \\\r\n-Dsubstratevm.IgnoreGraalVersionCheck=true \\\r\n-Djava.lang.invoke.stringConcat=BC_SB \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.runtime=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.code=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.aarch64=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.amd64=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.meta=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.hotspot=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.services=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.common=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.code.site=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.code.stack=ALL-UNNAMED \\\r\n--add-opens \\\r\njdk.internal.vm.compiler/org.graalvm.compiler.debug=ALL-UNNAMED \\\r\n--add-opens \\\r\njdk.internal.vm.compiler/org.graalvm.compiler.nodes=ALL-UNNAMED \\\r\n--add-opens \\\r\njdk.unsupported/sun.reflect=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.module=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.ref=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.reflect=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.io=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang.reflect=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang.invoke=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang.ref=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.net=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.nio=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.nio.file=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.security=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/javax.crypto=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.util=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.util.concurrent.atomic=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/sun.security.x509=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.logger=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.sdk/org.graalvm.nativeimage.impl=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.sdk/org.graalvm.polyglot=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.truffle/com.oracle.truffle.polyglot=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.truffle/com.oracle.truffle.api.impl=ALL-UNNAMED \\\r\n-XX:+UseJVMCINativeLibrary \\\r\n-Xss10m \\\r\n-Xms1g \\\r\n-Xmx13703200768 \\\r\n-Duser.country=US \\\r\n-Duser.language=en \\\r\n-Djava.awt.headless=true \\\r\n-Dorg.graalvm.version=20.1.0 \\\r\n-Dorg.graalvm.config= \\\r\n-Dcom.oracle.graalvm.isaot=true \\\r\n-Djava.system.class.loader=com.oracle.svm.hosted.NativeImageSystemClassLoader \\\r\n-Xshare:off \\\r\n--module-path \\\r\n'C:\\dev\\graalvm-ce-java11-20.1.0\\lib\\truffle\\truffle-api.jar' \\\r\n'-javaagent:C:\\dev\\graalvm-ce-java11-20.1.0\\lib\\svm\\builder\\svm.jar' \\\r\n-Djdk.internal.lambda.disableEagerInitialization=true \\\r\n-Djdk.internal.lambda.eagerlyInitialize=false \\\r\n-Djava.lang.invoke.InnerClassLambdaMetafactory.initializeLambdas=false \\\r\n-cp \\\r\n'C:\\dev\\graalvm-ce-java11-20.1.0\\lib\\svm\\builder\\objectfile.jar;C:\\dev\\graalvm-ce-java11-20.1.0\\lib\\svm\\builder\\pointsto.jar;C:\\dev\\graalvm-ce-java11-20.1.0\\lib\\svm\\builder\\svm.jar' \\\r\n'com.oracle.svm.hosted.NativeImageGeneratorRunner$JDK9Plus' \\\r\n-imagecp \\\r\n'C:\\dev\\graalvm-ce-java11-20.1.0\\lib\\svm\\builder\\objectfile.jar;C:\\dev\\graalvm-ce-java11-20.1.0\\lib\\svm\\builder\\pointsto.jar;C:\\dev\\graalvm-ce-java11-20.1.0\\lib\\svm\\builder\\svm.jar;C:\\dev\\graalvm-ce-java11-20.1.0\\lib\\svm\\library-support.jar;C:\\dev\\Intellij-ws\\perf\\target\\perf-1.0-SNAPSHOT.jar' \\\r\n'-H:Path=C:\\dev\\graalvm-ce-java11-20.1.0\\bin' \\\r\n-H:+StaticExecutable \\\r\n-H:FallbackThreshold=0 \\\r\n-H:+ReportExceptionStackTraces \\\r\n-H:Class=FloatFFT2048 \\\r\n-H:Name=perf-1.0-SNAPSHOT \\\r\n'-H:CLibraryPath=C:\\dev\\graalvm-ce-java11-20.1.0\\lib\\svm\\clibraries\\windows-amd64' \\\r\n\r\n]\r\n[perf-1.0-SNAPSHOT:6084]    classlist:   1,129.82 ms,  0.96 GB\r\n[perf-1.0-SNAPSHOT:6084]        setup:     662.50 ms,  0.96 GB\r\nError: Unable to detect supported WINDOWS native software development toolchain.\r\ncom.oracle.svm.core.util.UserError$UserException: Unable to detect supported WINDOWS native software development toolchain.\r\n        at com.oracle.svm.core.util.UserError.abort(UserError.java:68)\r\n        at com.oracle.svm.hosted.c.codegen.CCompilerInvoker.<init>(CCompilerInvoker.java:72)\r\n        at com.oracle.svm.hosted.c.codegen.CCompilerInvoker$WindowsCCompilerInvoker.<init>(CCompilerInvoker.java:93)\r\n        at com.oracle.svm.hosted.c.codegen.CCompilerInvoker.create(CCompilerInvoker.java:84)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.setupNativeImage(NativeImageGenerator.java:851)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:536)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:451)\r\n        at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1407)\r\n        at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n        at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n        at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n        at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n        at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nError: Image build request failed with exit status 1\r\ncom.oracle.svm.driver.NativeImage$NativeImageError: Image build request failed with exit status 1\r\n        at com.oracle.svm.driver.NativeImage.showError(NativeImage.java:1541)\r\n        at com.oracle.svm.driver.NativeImage.build(NativeImage.java:1299)\r\n        at com.oracle.svm.driver.NativeImage.performBuild(NativeImage.java:1260)\r\n        at com.oracle.svm.driver.NativeImage.main(NativeImage.java:1219)\r\n        at com.oracle.svm.driver.NativeImage$JDK9Plus.main(NativeImage.java:1722)", "url": "https://github.com/oracle/graal/issues/2522", "user": "downfall85", "labels": ["bug", "native-image"], "created": "2020-05-30 09:53:37", "closed": "2020-06-08 08:21:21", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "java.lang.NullPointerException in native-image building", "body": "**Describe the issue**\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM version: 20.1.0-java11\r\n - JDK major version: *11\r\n - OS: macos Catalina 10.15.4 (19E287)\r\n - Architecture: amd64\r\n\r\n\r\n**More details**\r\nMy native image args Args=--no-server \\\r\n  --no-fallback \\\r\n  --static \\\r\n  --enable-http \\\r\n  --enable-https \\\r\n  --enable-all-security-services \\\r\n  --report-unsupported-elements-at-runtime \\\r\n  --allow-incomplete-classpath \\\r\n  --install-exit-handlers \\\r\n  --initialize-at-build-time \\\r\n  --verbose \\\r\n  -H:EnableURLProtocols=http,https \\\r\n  -H:+TraceClassInitialization \\\r\n  -H:+RemoveSaturatedTypeFlows \\\r\n  -H:+ReportUnsupportedElementsAtRuntime \\\r\n  -H:+ReportExceptionStackTraces \\\r\n  -H:UseMuslC=/opt/graalvm/stage/resources/musl/bundle \\\r\n  --initialize-at-run-time=ch.qos.logback.classic.AsyncAppender \\\r\n  --initialize-at-run-time=ch.qos.logback.core.AsyncAppenderBase \r\n\r\nStacktrace:\r\n```\r\n[error] Fatal error:java.lang.NullPointerException\r\n[error] \tat com.oracle.graal.pointsto.flow.MethodTypeFlow.getParsingContext(MethodTypeFlow.java:99)\r\n[error] \tat com.oracle.graal.pointsto.util.AnalysisError.parsingContext(AnalysisError.java:122)\r\n[error] \tat com.oracle.graal.pointsto.util.AnalysisError.access$000(AnalysisError.java:37)\r\n[error] \tat com.oracle.graal.pointsto.util.AnalysisError$ParsingError.message(AnalysisError.java:97)\r\n[error] \tat com.oracle.graal.pointsto.util.AnalysisError$ParsingError.<init>(AnalysisError.java:87)\r\n[error] \tat com.oracle.graal.pointsto.util.AnalysisError.parsingError(AnalysisError.java:138)\r\n[error] \tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:336)\r\n[error] \tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n[error] \tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n[error] \tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:228)\r\n[error] \tat com.oracle.graal.pointsto.flow.TypeFlow$1.run(TypeFlow.java:433)\r\n[error] \tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n[error] \tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n[error] \tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n[error] \tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n[error] \tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n[error] \tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n[error] \tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n[error] Fatal error:java.lang.NullPointerException\r\n[error] \tat com.oracle.graal.pointsto.flow.MethodTypeFlow.getParsingContext(MethodTypeFlow.java:99)\r\n[error] \tat com.oracle.graal.pointsto.util.AnalysisError.parsingContext(AnalysisError.java:122)\r\n[error] \tat com.oracle.graal.pointsto.util.AnalysisError.access$000(AnalysisError.java:37)\r\n[error] \tat com.oracle.graal.pointsto.util.AnalysisError$ParsingError.message(AnalysisError.java:97)\r\n[error] \tat com.oracle.graal.pointsto.util.AnalysisError$ParsingError.<init>(AnalysisError.java:87)\r\n[error] \tat com.oracle.graal.pointsto.util.AnalysisError.parsingError(AnalysisError.java:138)\r\n[error] \tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:336)\r\n[error] \tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n[error] \tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n[error] \tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:228)\r\n[error] \tat com.oracle.graal.pointsto.flow.TypeFlow$1.run(TypeFlow.java:433)\r\n[error] \tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n[error] \tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n[error] \tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n[error] \tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n[error] \tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n[error] \tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n[error] \tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n[error] Fatal error:java.lang.NullPointerException\r\n[error] \tat com.oracle.graal.pointsto.flow.MethodTypeFlow.getParsingContext(MethodTypeFlow.java:99)\r\n[error] \tat com.oracle.graal.pointsto.util.AnalysisError.parsingContext(AnalysisError.java:122)\r\n[error] \tat com.oracle.graal.pointsto.util.AnalysisError.access$000(AnalysisError.java:37)\r\n[error] \tat com.oracle.graal.pointsto.util.AnalysisError$ParsingError.message(AnalysisError.java:97)\r\n[error] \tat com.oracle.graal.pointsto.util.AnalysisError$ParsingError.<init>(AnalysisError.java:87)\r\n[error] \tat com.oracle.graal.pointsto.util.AnalysisError.parsingError(AnalysisError.java:138)\r\n[error] \tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:336)\r\n[error] \tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n[error] \tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n[error] \tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:228)\r\n[error] \tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\r\n[error] \tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\r\n[error] \tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n[error] \tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n[error] \tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n[error] \tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n[error] \tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n[error] \tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n[error] \tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n[error] \tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2518", "user": "gurinderu", "labels": ["bug", "native-image"], "created": "2020-05-29 08:46:47", "closed": "2020-05-30 04:39:27", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Native image builds fail with latest Graal and OpenJDK11u sources", "body": "A graal VM built from OpenJDK 11u (upcoming 11.0.8) will hit an assertion on generating native images. A simple HelloWorld will do.  A test in Graal assumes features which are not yet in OpenJDK 11u.\r\n\r\nThe JDK commit adding these functions was https://hg.openjdk.java.net/jdk/jdk/rev/d6aa9ea2405d\r\nThis has not been backported to OpenJDK11 (at a minimum).\r\nThe Graal version check was added 3 days ago: https://github.com/oracle/graal/commit/ecf0290e6f984be9a8dff836bf7b0e1a90a376d9\r\n\r\nHere is the stack trace:\r\n...\r\nException in thread \"main\" jdk.vm.ci.common.JVMCIError: VM config values missing that should be present in JDK 11 windows-amd64 (java.home=C:\\tmp\\graal-11\\graal\\sdk\\mxbuild\\windows-amd64\\GRAALVM_132C5E3B79_JAVA11\\graalvm-132c5e3b79-java11-20.2.0-dev, java.vm.name=OpenJDK 64-Bit Server VM, java.vm.version=11.0.8-ea+4):\r\n    JVMCIRuntime::dynamic_new_instance_or_null at jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.GraalHotSpotVMConfig.<init>(GraalHotSpotVMConfig.java:797)\r\n    JVMCIRuntime::new_array_or_null at jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.GraalHotSpotVMConfig.<init>(GraalHotSpotVMConfig.java:795)\r\n    JVMCIRuntime::new_instance_or_null at jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.GraalHotSpotVMConfig.<init>(GraalHotSpotVMConfig.java:794)\r\n    JVMCIRuntime::new_multi_array_or_null at jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.GraalHotSpotVMConfig.<init>(GraalHotSpotVMConfig.java:796)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.GraalHotSpotVMConfigAccess.reportErrors(GraalHotSpotVMConfigAccess.java:226)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.GraalHotSpotVMConfig.<init>(GraalHotSpotVMConfig.java:67)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.HotSpotGraalRuntime.<init>(HotSpotGraalRuntime.java:163)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.HotSpotGraalCompilerFactory.createCompiler(HotSpotGraalCompilerFactory.java:156)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.HotSpotGraalCompilerFactory.createCompiler(HotSpotGraalCompilerFactory.java:134)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.HotSpotGraalCompilerFactory.createCompiler(HotSpotGraalCompilerFactory.java:52)\r\n        at jdk.internal.vm.ci/jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.getCompiler(HotSpotJVMCIRuntime.java:425)\r\n        at com.oracle.svm.hosted.c.GraalAccess.getGraalCapability(GraalAccess.java:50)\r\n        at com.oracle.svm.hosted.c.GraalAccess.getOriginalTarget(GraalAccess.java:38)\r\n        at com.oracle.svm.hosted.NativeImageGeneratorRunner.isValidArchitecture(NativeImageGeneratorRunner.java:208)\r\n        at com.oracle.svm.hosted.NativeImageGeneratorRunner.verifyValidJavaVersionAndPlatform(NativeImageGeneratorRunner.java:413)\r\n        at com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:219)\r\n        at com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:505)\r\n        at com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:114)\r\n        at com.oracle.svm.hosted.NativeImageGeneratorRunner$JDK9Plus.main(NativeImageGeneratorRunner.java:533)\r\nError: Image build request failed with exit status 1\r\ncom.oracle.svm.driver.NativeImage$NativeImageError: Image build request failed with exit status 1\r\n        at com.oracle.svm.driver.NativeImage.showError(NativeImage.java:1558)\r\n        at com.oracle.svm.driver.NativeImage.build(NativeImage.java:1308)\r\n        at com.oracle.svm.driver.NativeImage.performBuild(NativeImage.java:1269)\r\n        at com.oracle.svm.driver.NativeImage.main(NativeImage.java:1228)\r\n        at com.oracle.svm.driver.NativeImage$JDK9Plus.main(NativeImage.java:1739)\r\n...", "url": "https://github.com/oracle/graal/issues/2515", "user": "stooke", "labels": ["bug", "native-image"], "created": "2020-05-28 16:00:49", "closed": "2020-06-02 08:02:16", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Using upstream fdlibm", "body": "Hello all,\r\n\r\nAs discussed in https://oss.oracle.com/pipermail/graalvm-dev/2020-May/000059.html\r\n\r\nSince `fdlibm` is part of the OpenJDK and can be built as a separate static library (already shipped with labsJDK) there is no apparent reason for GraalVM to keep using an older clone of `fdlibm`.\r\n\r\nCould you please provide details on how to properly achieve this?\r\n\r\nA _proof of concept_ patch can be seen in https://github.com/zakkak/mandrel/commit/91922abe1cd8ef81fb8a5292644fee521c541bfc \r\nBased on my experience we will need to annotate `Target_java_lang_StrictMath` with more than one `@CLibrary` to include `fdlibm` which is now part of `strictmath`.\r\n\r\nEdit: Replaced discussion link to point to the latest email in the thread.", "url": "https://github.com/oracle/graal/issues/2514", "user": "zakkak", "labels": ["bug", "native-image"], "created": "2020-05-28 14:56:30", "closed": "2020-06-01 19:41:20", "commits": {"aeaca0f98a1328acdb8d793e043c6839d2ef8c91": {"commitGHEventType": "closed", "commitUser": "graalvmbot"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "aeaca0f98a1328acdb8d793e043c6839d2ef8c91", "commitGHEventType": "closed", "commitUser": "graalvmbot", "commitParents": ["f89843e35dac61db22daf5fc50f1c58eb3e29c83"], "nameRev": "aeaca0f98a1328acdb8d793e043c6839d2ef8c91 tags/JDK-8243380~24^2", "commitMessage": "Removes cloned fdlibm and uses openJDK's fdlibm instead\n\nAs discussed in\nhttps://oss.oracle.com/pipermail/graalvm-dev/2020-May/000059.html\n\nSince fdlibm is part of the OpenJDK and can be built as a separate\nstatic library (already shipped with labsJDK) there is no apparent\nreason for GraalVM to keep using an older clone of fdlibm.\n\nCloses #2514\n", "commitDateTime": "2020-06-01 13:29:20", "authoredDateTime": "2020-05-28 20:08:19", "commitGitStats": [{"filePath": "substratevm/mx.substratevm/suite.py", "insertions": 0, "deletions": 26, "lines": 26}, {"filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/JavaLangSubstitutions.java", "insertions": 133, "deletions": 42, "lines": 175}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/StrictMath.c", "insertions": 0, "deletions": 163, "lines": 163}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/include/fdlibm.h", "insertions": 0, "deletions": 239, "lines": 239}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/include/jfdlibm.h", "insertions": 0, "deletions": 100, "lines": 100}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_acos.c", "insertions": 0, "deletions": 118, "lines": 118}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_acosh.c", "insertions": 0, "deletions": 77, "lines": 77}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_asin.c", "insertions": 0, "deletions": 127, "lines": 127}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_atan2.c", "insertions": 0, "deletions": 135, "lines": 135}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_atanh.c", "insertions": 0, "deletions": 80, "lines": 80}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_cosh.c", "insertions": 0, "deletions": 102, "lines": 102}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_exp.c", "insertions": 0, "deletions": 170, "lines": 170}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_fmod.c", "insertions": 0, "deletions": 153, "lines": 153}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_gamma.c", "insertions": 0, "deletions": 45, "lines": 45}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_gamma_r.c", "insertions": 0, "deletions": 44, "lines": 44}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_hypot.c", "insertions": 0, "deletions": 128, "lines": 128}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_j0.c", "insertions": 0, "deletions": 491, "lines": 491}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_j1.c", "insertions": 0, "deletions": 490, "lines": 490}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_jn.c", "insertions": 0, "deletions": 285, "lines": 285}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_lgamma.c", "insertions": 0, "deletions": 45, "lines": 45}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_lgamma_r.c", "insertions": 0, "deletions": 316, "lines": 316}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_log.c", "insertions": 0, "deletions": 154, "lines": 154}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_log10.c", "insertions": 0, "deletions": 104, "lines": 104}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_pow.c", "insertions": 0, "deletions": 320, "lines": 320}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_rem_pio2.c", "insertions": 0, "deletions": 187, "lines": 187}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_remainder.c", "insertions": 0, "deletions": 90, "lines": 90}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_scalb.c", "insertions": 0, "deletions": 64, "lines": 64}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_sinh.c", "insertions": 0, "deletions": 95, "lines": 95}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_sqrt.c", "insertions": 0, "deletions": 462, "lines": 462}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/k_cos.c", "insertions": 0, "deletions": 105, "lines": 105}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/k_rem_pio2.c", "insertions": 0, "deletions": 329, "lines": 329}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/k_sin.c", "insertions": 0, "deletions": 87, "lines": 87}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/k_standard.c", "insertions": 0, "deletions": 745, "lines": 745}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/k_tan.c", "insertions": 0, "deletions": 153, "lines": 153}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_asinh.c", "insertions": 0, "deletions": 74, "lines": 74}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_atan.c", "insertions": 0, "deletions": 146, "lines": 146}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_cbrt.c", "insertions": 0, "deletions": 99, "lines": 99}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_ceil.c", "insertions": 0, "deletions": 91, "lines": 91}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_copysign.c", "insertions": 0, "deletions": 44, "lines": 44}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_cos.c", "insertions": 0, "deletions": 91, "lines": 91}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_erf.c", "insertions": 0, "deletions": 323, "lines": 323}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_expm1.c", "insertions": 0, "deletions": 230, "lines": 230}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_fabs.c", "insertions": 0, "deletions": 42, "lines": 42}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_finite.c", "insertions": 0, "deletions": 44, "lines": 44}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_floor.c", "insertions": 0, "deletions": 92, "lines": 92}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_frexp.c", "insertions": 0, "deletions": 69, "lines": 69}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_ilogb.c", "insertions": 0, "deletions": 59, "lines": 59}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_isnan.c", "insertions": 0, "deletions": 47, "lines": 47}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_ldexp.c", "insertions": 0, "deletions": 41, "lines": 41}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_lib_version.c", "insertions": 0, "deletions": 48, "lines": 48}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_log1p.c", "insertions": 0, "deletions": 184, "lines": 184}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_logb.c", "insertions": 0, "deletions": 51, "lines": 51}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_matherr.c", "insertions": 0, "deletions": 39, "lines": 39}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_modf.c", "insertions": 0, "deletions": 93, "lines": 93}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_nextafter.c", "insertions": 0, "deletions": 91, "lines": 91}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_rint.c", "insertions": 0, "deletions": 97, "lines": 97}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_scalbn.c", "insertions": 0, "deletions": 77, "lines": 77}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_signgam.c", "insertions": 0, "deletions": 27, "lines": 27}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_significand.c", "insertions": 0, "deletions": 43, "lines": 43}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_sin.c", "insertions": 0, "deletions": 91, "lines": 91}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_tan.c", "insertions": 0, "deletions": 85, "lines": 85}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_tanh.c", "insertions": 0, "deletions": 95, "lines": 95}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_acos.c", "insertions": 0, "deletions": 52, "lines": 52}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_acosh.c", "insertions": 0, "deletions": 51, "lines": 51}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_asin.c", "insertions": 0, "deletions": 53, "lines": 53}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_atan2.c", "insertions": 0, "deletions": 52, "lines": 52}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_atanh.c", "insertions": 0, "deletions": 55, "lines": 55}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_cosh.c", "insertions": 0, "deletions": 51, "lines": 51}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_exp.c", "insertions": 0, "deletions": 62, "lines": 62}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_fmod.c", "insertions": 0, "deletions": 52, "lines": 52}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_gamma.c", "insertions": 0, "deletions": 58, "lines": 58}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_gamma_r.c", "insertions": 0, "deletions": 55, "lines": 55}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_hypot.c", "insertions": 0, "deletions": 52, "lines": 52}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_j0.c", "insertions": 0, "deletions": 78, "lines": 78}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_j1.c", "insertions": 0, "deletions": 79, "lines": 79}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_jn.c", "insertions": 0, "deletions": 101, "lines": 101}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_lgamma.c", "insertions": 0, "deletions": 58, "lines": 58}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_lgamma_r.c", "insertions": 0, "deletions": 55, "lines": 55}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_log.c", "insertions": 0, "deletions": 52, "lines": 52}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_log10.c", "insertions": 0, "deletions": 55, "lines": 55}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_pow.c", "insertions": 0, "deletions": 73, "lines": 73}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_remainder.c", "insertions": 0, "deletions": 51, "lines": 51}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_scalb.c", "insertions": 0, "deletions": 69, "lines": 69}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_sinh.c", "insertions": 0, "deletions": 51, "lines": 51}, {"filePath": "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_sqrt.c", "insertions": 0, "deletions": 51, "lines": 51}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JavaLangSubstitutions.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["aeaca0f98a1328acdb8d793e043c6839d2ef8c91"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 133, "deletions": 10150, "lines": 10283, "gitFilesChange": 85}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_j1.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_remainder.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_pow.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_logb.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_fmod.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_nextafter.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_floor.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_rem_pio2.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_matherr.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_atanh.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_jn.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_atan.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_lib_version.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_scalb.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_lgamma.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/k_standard.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_lgamma.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/k_tan.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_cosh.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/k_rem_pio2.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_lgamma_r.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_exp.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_fmod.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_acosh.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_expm1.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_gamma.c", "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_cosh.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_atanh.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_exp.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_acos.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/k_sin.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_sinh.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_erf.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_asin.c", "substratevm/mx.substratevm/suite.py", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/include/jfdlibm.h", "substratevm/src/com.oracle.svm.native.strictmath/src/StrictMath.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_gamma.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_signgam.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/k_cos.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_log1p.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_modf.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_scalbn.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_j0.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_hypot.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_significand.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_atan2.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_cos.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_sqrt.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_asinh.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_acos.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_log10.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_gamma_r.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_gamma_r.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_cbrt.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_log.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_log.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_scalb.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_ilogb.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_atan2.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_log10.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_ldexp.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/include/fdlibm.h", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_copysign.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_asin.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_hypot.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_j0.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_sin.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_sqrt.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_remainder.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_tan.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_finite.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_lgamma_r.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_acosh.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/e_pow.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_fabs.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_jn.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_ceil.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_j1.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_rint.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_frexp.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/w_sinh.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_isnan.c", "substratevm/src/com.oracle.svm.native.strictmath/src/fdlibm/src/s_tanh.c"]}, {"title": "ObjectInputStream / ObjectOutputStream are not supported", "body": "Hi \r\nObjectInputStream / ObjectOutputStream are not supported thus it is not able to do serialize/deserialize.\r\n\r\n**environment:**\r\n [ GRAALVM CE 20.2.0-dev]**\r\n - JDK major version: **[e.g.:11]**\r\n - OS: **[Windows]**\r\n - Architecture: **[e.g.: AMD64]**\r\n\r\nCaused by: com.oracle.svm.core.jdk.UnsupportedFeatureError: ObjectInputStream.readObject()\r\n        at com.oracle.svm.core.util.VMError.unsupportedFeature(VMError.java:86)\r\n        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:53)\r\n\r\n", "url": "https://github.com/oracle/graal/issues/2507", "user": "phamvanthanh", "labels": ["bug", "native-image"], "created": "2020-05-27 05:14:36", "closed": "2020-05-29 18:21:45", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "jdk/internal/jimage/JImageOpenTest.java fails: java.lang.IllegalAccessError: superinterface check failed: class org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime$FrameVisitor (in module jdk.internal.vm.compiler) cannot access class jdk.vm.ci.code.stack.InspectedFrameVisitor (in module jdk.internal.vm.ci) because module jdk.internal.vm.ci does not export jdk.vm.ci.code.stack to module jdk.internal.vm.compiler", "body": "e0ab2b6e2 added a dependency to `jdk.vm.ci.code.stack` which is not exported to `jdk.internal.vm.compiler` in `module-info.java`. The `jdk/internal/jimage/JImageOpenTest.java` JDK regression test fails because of this:\r\n\r\n```\r\njava.lang.IllegalAccessError: superinterface check failed: class org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime$FrameVisitor (in module jdk.internal.vm.compiler) cannot access class jdk.vm.ci.code.stack.InspectedFrameVisitor (in module jdk.internal.vm.ci) because module jdk.internal.vm.ci does not export jdk.vm.ci.code.stack to module jdk.internal.vm.compiler\r\n\tat java.base/java.lang.ClassLoader.defineClass2(Native Method)\r\n\tat java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1109)\r\n\tat java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:206)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:759)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.findClassInModuleOrNull(BuiltinClassLoader.java:680)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:605)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:640)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:609)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:579)\r\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\r\n\tat java.base/java.lang.Class.forName0(Native Method)\r\n\tat java.base/java.lang.Class.forName(Class.java:398)\r\n\tat JImageOpenTest$1.lambda$run$0(JImageOpenTest.java:60)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1540)\r\n\tat JImageOpenTest$1.run(JImageOpenTest.java:57)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n```\r\n\r\nI don't see that export in `labs-openjdk-11` either so I have no idea how this works for you:\r\n\r\nhttps://github.com/graalvm/labs-openjdk-11/blob/master/src/jdk.internal.vm.ci/share/classes/module-info.java\r\n\r\nHere is the missing export:\r\n\r\n```\r\ndiff --git a/src/jdk.internal.vm.ci/share/classes/module-info.java b/src/jdk.internal.vm.ci/share/classes/module-info.java\r\nindex fed310d..2ee7ec9 100644\r\n--- a/src/jdk.internal.vm.ci/share/classes/module-info.java\r\n+++ b/src/jdk.internal.vm.ci/share/classes/module-info.java\r\n@@ -30,6 +30,7 @@ module jdk.internal.vm.ci {\r\n         jdk.internal.vm.compiler.management;\r\n     exports jdk.vm.ci.meta to jdk.internal.vm.compiler;\r\n     exports jdk.vm.ci.code to jdk.internal.vm.compiler;\r\n+    exports jdk.vm.ci.code.stack to jdk.internal.vm.compiler;\r\n     exports jdk.vm.ci.hotspot to jdk.internal.vm.compiler;\r\n \r\n     uses jdk.vm.ci.services.JVMCIServiceLocator;\r\n```\r\n\r\nAfter adding the missing export `jdk/modules/etc/JdkQualifiedExportTest.java` will start failing but that can be fixed by adding a known-exception:\r\n\r\n```\r\ndiff --git a/test/jdk/jdk/modules/etc/JdkQualifiedExportTest.java b/test/jdk/jdk/modules/etc/JdkQualifiedExportTest.java\r\nindex e9bb664..6b2fdb5 100644\r\n--- a/test/jdk/jdk/modules/etc/JdkQualifiedExportTest.java\r\n+++ b/test/jdk/jdk/modules/etc/JdkQualifiedExportTest.java\r\n@@ -74,6 +74,7 @@ public class JdkQualifiedExportTest {\r\n                \"jdk.internal.vm.ci/jdk.vm.ci.hotspot\",\r\n                \"jdk.internal.vm.ci/jdk.vm.ci.meta\",\r\n                \"jdk.internal.vm.ci/jdk.vm.ci.code\",\r\n+               \"jdk.internal.vm.ci/jdk.vm.ci.code.stack\",\r\n                \"jdk.jsobject/jdk.internal.netscape.javascript.spi\");\r\n \r\n     static void checkExports(ModuleDescriptor md) {\r\n```", "url": "https://github.com/oracle/graal/issues/2506", "user": "christhalinger", "labels": ["bug"], "created": "2020-05-26 19:47:07", "closed": "2020-05-26 21:30:22", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "JDK build error with \"mx updategraalinopenjdk\" due to \"SPARC\" jvmci is missing", "body": "**Describe the issue**\r\nUpdating the graal master in jdk/jdk master by running \"mx updategraalinopenjdk\", and building jdk fails with error, due to:\r\n```\r\npackage jdk.vm.ci.sparc does not exist\r\n```\r\n\r\nSince jdk/jdk has removed the SPARC ports (See https://bugs.openjdk.java.net/browse/JDK-8244224), is there any plan for \"SPARC\" in Graal compiler to make it compatible with jdk/jdk? At least, the sparc packages/modules should be excluded from the update list?\r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\n```\r\n1.  cd graal/compiler & mx updategraalinopenjdk jdk_src 15\r\n2.  cd jdk_src & ./configure [options] & make images\r\n```\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM commit id if built from source: **master**\r\n - JDK major version: **[e.g.:11]**\r\n - OS: **[linux]**\r\n - Architecture: **[all]**\r\n\r\n\r\n**More details**\r\nAdd any other information about the problem here. Especially important are stack traces or log output. Feel free to link to gists or to screenshots if necessary.\r\n```\r\n    PASTE YOUR LOG/STACK TRACE HERE\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2498", "user": "XiaohongGong", "labels": ["bug"], "created": "2020-05-25 06:01:46", "closed": "2020-05-29 03:32:37", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "TypeError: invokeMember ", "body": "I'm trying create a native-image with GraalVM, my code:\r\n```\r\nimport org.graalvm.polyglot.HostAccess;\r\n\r\npublic class Console {\r\n\r\n    @HostAccess.Export\r\n    public void print(String msg){\r\n        System.out.println(msg);\r\n    }\r\n}\r\n```\r\nThen I call the code itself like this one:\r\n```\r\npublic void callMethod(CommonRequest request) throws ScriptException, IOException, NoSuchMethodException {\r\n        StringBuilder s = new StringBuilder();\r\n\r\n        s.append(new PluginJS().load(request.getMethodPath(), true));\r\n\r\n        Context context = null;\r\n        try {\r\n            context = Context.newBuilder()\r\n                    .allowHostAccess(HostAccess.ALL)\r\n                    .allowPolyglotAccess(PolyglotAccess.ALL)               \r\n                    .allowAllAccess(true)\r\n                    .allowCreateThread(true)\r\n                    .allowHostClassLoading(true)\r\n                    .allowIO(true)\r\n                    .allowNativeAccess(true)\r\n                    .allowCreateProcess(true).build();\r\n\r\n            putMembers(context.getBindings(\"js\"));\r\n\r\n            context.eval(\"js\", s.toString());\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n\r\n        } finally {\r\n            context.close();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private void putMembers(Value value) { \r\n        value.putMember(\"Console\", new Console());\r\n    }\r\n```\r\nIt's work fine when I run through IDE or java -jar, but When I try compile to native-image throws an error. Bellow the error follow by the command-line used to compile native-image.\r\n\r\n**Error**:\r\n\r\nTypeError: invokeMember (print) on JavaObject[com.compiler.commons.log.Console@113a2d320 (com.compiler.commons.log.Console)] failed due to: Unknown identifier: print\r\n\r\n**Command-line**\r\n```\r\ngraalvm-ce-java8-20.0.0/Contents/Home/bin/java -jar -agentlib:native-image-agent=config-merge-dir=/Users/ze/Documents/java/tool/config compiler-1.0-SNAPSHOT-jar-with-dependencies.jar\r\n\r\ngraalvm-ce-java8-20.0.0/Contents/Home/bin/native-image --language:js --initialize-at-build-time nomeApp -jar compiler-1.0-SNAPSHOT-jar-with-dependencies.jar\r\n\r\n```\r\nPlease could someone help me? thanks a lot\r\n\r\n\r\n", "url": "https://github.com/oracle/graal/issues/2496", "user": "apedrina", "labels": ["bug", "native-image"], "created": "2020-05-23 12:37:20", "closed": "2020-05-24 09:35:34", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "GraalVM generates wrong result due to speculative optimization", "body": "**Describe the issue**\r\nGraalVM generates wrong result due to speculative optimization. \r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\n1. Run this code\r\nIf you cannot reproduce it, you can simply increase the `int size = 1000000` to a lager value in `main()` function to make the repro work.\r\n```\r\nimport java.util.HashMap;\r\n\r\nclass InputRow {\r\n  public long[] row;\r\n  public int len;\r\n\r\n  public InputRow(int size, long initValue) {\r\n    len = size;\r\n    row = new long[size];\r\n    for (int i = 0; i < size; i++) {\r\n      row[i] = initValue;\r\n    }\r\n  }\r\n\r\n  public long getLong(int idx) {\r\n    assert (idx < len);\r\n    return row[idx];\r\n  }\r\n}\r\n\r\nclass SimpleInput {\r\n  public InputRow[] rows;\r\n  public int len;\r\n  public int idx;\r\n\r\n  public SimpleInput(int size) {\r\n    len = size;\r\n    rows = new InputRow[size];\r\n    idx = 0;\r\n    for (int i = 0; i < size - 3; i = i + 3) {\r\n      rows[i] = new InputRow(10, 50);\r\n      rows[i + 1] = new InputRow(10, -1);\r\n      rows[i + 2] = new InputRow(10, 100);\r\n    }\r\n    rows[size - 1] = new InputRow(10, 10);\r\n  }\r\n\r\n  public boolean hasNext() {\r\n    return idx < len;\r\n  }\r\n\r\n  public InputRow next() {\r\n    InputRow ret = rows[idx];\r\n    idx++;\r\n    return ret;\r\n  }\r\n}\r\n\r\nclass OutputElement {\r\n  public long value1;\r\n  public String value2;\r\n\r\n  public OutputElement() {\r\n    value1 = 0;\r\n    value2 = \"init\";\r\n  }\r\n\r\n  public void write(int idx, long value) {\r\n    assert (idx == 0);\r\n    value1 = value;\r\n  }\r\n\r\n  public void write(int idx, String value) {\r\n    assert (idx == 1);\r\n    value2 = value;\r\n  }\r\n}\r\n\r\nclass SimpleOutput {\r\n  public OutputElement[] output;\r\n  public int len;\r\n  public int idx;\r\n\r\n  public SimpleOutput(int size) {\r\n    output = new OutputElement[size];\r\n    len = size;\r\n    idx = 0;\r\n  }\r\n\r\n  public void append(OutputElement element) {\r\n    assert (idx < len);\r\n    output[idx] = element;\r\n    idx++;\r\n  }\r\n\r\n  public void print() {\r\n    HashMap<String, Integer> map = new HashMap<String, Integer>();\r\n    for (int i = 0; i < len; i++) {\r\n      long v1 = output[i].value1;\r\n      String v2 = output[i].value2;\r\n      if (map.containsKey(v2)) {\r\n        int tmp = map.get(v2);\r\n        map.put(v2, (tmp + 1));\r\n      } else {\r\n        map.put(v2, 1);\r\n      }\r\n    }\r\n    System.out.print(map);\r\n  }\r\n}\r\n\r\npublic class Main {\r\n  static void processNext(SimpleInput input, SimpleOutput output) {\r\n    while (input.hasNext()) {\r\n      InputRow orc_scan_row = (InputRow) input.next();\r\n      long orc_scan_value = orc_scan_row.getLong(0);\r\n      String project_value1 = null;\r\n      boolean project_value2 = false;\r\n      if (orc_scan_value >= 0L) {\r\n        project_value2 = orc_scan_value <= 35L;\r\n      }\r\n      if (project_value2) {\r\n        project_value1 = \"35\";\r\n      } else {\r\n        if (orc_scan_value > 35L) {\r\n          project_value1 = \"90\";\r\n        } else {\r\n          project_value1 = \"Unknown\";\r\n        }\r\n      }\r\n      OutputElement element = new OutputElement();\r\n      element.write(0, orc_scan_value);\r\n      element.write(1, project_value1);\r\n      output.append(element);\r\n    }\r\n  }\r\n\r\n  public static void main(String[] args) {\r\n    System.out.println(\"Hello World!\");\r\n    int size = 1000000;\r\n    SimpleInput input = new SimpleInput(size);\r\n    SimpleOutput output = new SimpleOutput(size);\r\n    processNext(input, output);\r\n    output.print();\r\n  }\r\n}\r\n```\r\n2. Output of GraalVM\r\n```\r\nHello World!\r\n{Unknown=333334, 90=666666}\r\n```\r\n3. Output of OpenJDK\r\n```\r\nHello World!\r\n{35=1, Unknown=333333, 90=666666}\r\n```\r\n**Describe GraalVM and your environment:**\r\n - GraalVM version (latest snapshot builds can be found [here](https://github.com/graalvm/graalvm-ce-dev-builds/releases)), or commit id if built from source: **graalvm-ce-java8-19.3.1**\r\n - JDK major version: **[8]**\r\n - OS: **[macOS Catalina]**\r\n - Architecture: **[AMD64]**\r\n\r\n\r\n**More details**\r\n-Dgraal.RemoveNeverExecutedCode=false could generate the correct result.\r\n", "url": "https://github.com/oracle/graal/issues/2493", "user": "helloguo", "labels": ["bug"], "created": "2020-05-22 19:42:45", "closed": "2020-05-29 18:26:59", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "java.lang.UnsatisfiedLinkError:  java.lang.UnsatisfiedLinkError: sun.security.smartcardio.PCSC.SCardListReaders", "body": "**Describe the issue**\r\n\r\n\r\n\r\n```\r\nException in thread \"main\" java.lang.UnsatisfiedLinkError: sun.security.smartcardio.PCSC.SCardListReaders(J)[Ljava/lang/String; [symbol: Java_sun_security_smartcardio_PCSC_SCardListReaders or Java_sun_security_smartcardio_PCSC_SCardListReaders__J]\r\n        at com.oracle.svm.jni.access.JNINativeLinkage.getOrFindEntryPoint(JNINativeLinkage.java:145)\r\n        at com.oracle.svm.jni.JNIGeneratedMethodSupport.nativeCallAddress(JNIGeneratedMethodSupport.java:57)\r\n        at sun.security.smartcardio.PCSC.SCardListReaders(PCSC.java)\r\n        at sun.security.smartcardio.PCSCTerminals.list(PCSCTerminals.java:80)\r\n        at javax.smartcardio.CardTerminals.list(CardTerminals.java:72)\r\n\r\n```\r\n\r\n**Just a simple code with access to smartcard.io** \r\n\r\nimport javax.smartcardio.CardTerminal;\r\nimport javax.smartcardio.CardTerminals;\r\nimport javax.smartcardio.TerminalFactory;\r\n\r\n\r\npublic class SmartCardSample {\r\n\r\n\tpublic static void getReaders() throws Exception {\r\n        try {\r\n            TerminalFactory fac = TerminalFactory.getDefault();\r\n            CardTerminals terminals = fac.terminals();\r\n            List<CardTerminal> list = terminals.list();\r\n            if (list != null) {\r\n                System.out.println(\"Number of terminals: \" + list.size());\r\n            } else {\r\n                System.out.println(\"List is null.\");\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\t\t\t\t\r\n\tpublic static void main(String[] args) {\r\n        try {\r\n            while (true) {\r\n                getReaders();\r\n                BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\r\n                System.out.println(\"Press enter to continue.\");\r\n                reader.readLine(); //wait until user press entesr\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\t\r\n}\r\n\r\n**Describe GraalVM and your environment:**\r\n -**GraalVM version** \r\n\r\n-  openjdk version \"1.8.0_242\"\r\n- OpenJDK Runtime Environment (build 1.8.0_242-b06)\r\n- OpenJDK 64-Bit Server VM GraalVM CE 20.0.0 (build 25.242-b06-jvmci-20.0-b02, mixed mode)\r\n\r\n - JDK major version: *** :  8\r\n - OS: ****    Windows\r\n - Architecture: **** AMD64.\r\n\r\n\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2488", "user": "Azimuts", "labels": ["bug", "native-image"], "created": "2020-05-22 04:45:17", "closed": "2020-07-01 11:47:38", "commits": {}, "ttf": 40.000277777777775, "commitsDetails": []}, {"title": "Xmx limit is ignored by Isolates", "body": "**Xmx limit is ignored by Isolates**\r\n\"Xmx\" argument provided to the native image as described [here](https://www.graalvm.org/docs/reference-manual/native-image/#memory-management-configuration) is ignored by Isolates.\r\n\r\n**Steps to reproduce the issue**\r\nExample Source:\r\n\r\n```java\r\nimport java.lang.management.ManagementFactory;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\n\r\nimport org.graalvm.nativeimage.IsolateThread;\r\nimport org.graalvm.nativeimage.Isolates;\r\nimport org.graalvm.nativeimage.Isolates.CreateIsolateParameters;\r\nimport org.graalvm.nativeimage.c.function.CEntryPoint;\r\n\r\npublic class OOMGenerator {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\t//Works as expected\r\n\t\tgenerateOOMOutsideIsolate();\r\n\r\n\t\t//Ignores Xmx\r\n\t\tgenerateOOMInsideIsolate();\r\n\t}\r\n\r\n\tpublic static void generateOOMOutsideIsolate() {\r\n\t\tSystem.out.println(\"------------ Generating OOM ------------\");\r\n\t\ttry {\r\n\t\t\tgenerateOOM();\r\n\t\t} catch (Throwable t) {\r\n\t\t\tt.printStackTrace();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static void generateOOMInsideIsolate() {\r\n\t\tvar context = Isolates.createIsolate(CreateIsolateParameters.getDefault());\r\n\t\tnativeWrapper(context);\r\n\t\tIsolates.tearDownIsolate(context);\r\n\t}\r\n\r\n\t@CEntryPoint\r\n\tpublic static void nativeWrapper(@CEntryPoint.IsolateThreadContext IsolateThread context) {\r\n\t\tSystem.out.println(\"------------ Generating OOM Inside Isolate------------\");\r\n\t\ttry {\r\n\t\t\tgenerateOOM();\r\n\t\t} catch (Exception e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static void generateOOM() throws Exception {\r\n\t\tvar hugeMap = new HashMap<Integer, List<Integer>>();\r\n\t\tvar iterations = 5;\r\n\t\tvar size = 1048576;\r\n\t\twhile (iterations > 0) {\r\n\t\t\tSystem.out.println(\"Iteration: \" + (6 - iterations--));\r\n\t\t\tSystem.out.println(\"Memory used before: \" + ManagementFactory.getMemoryMXBean().getHeapMemoryUsage().getUsed());\r\n\t\t\tvar lst = new ArrayList<Integer>();\r\n\t\t\tfor (var i = 0; i < size; i++) {\r\n\t\t\t\tlst.add(i);\r\n\t\t\t}\r\n\t\t\thugeMap.put(iterations, lst);\r\n\t\t\tsize *= 2;\r\n\t\t\tSystem.out.println(\"Memory used after: \" + ManagementFactory.getMemoryMXBean().getHeapMemoryUsage().getUsed());\r\n\t\t\tSystem.out.println();\r\n\t\t\tThread.sleep(1000);\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nBuild:\r\n```\r\necho \"Main-Class: OOMGenerator\" > manifest.txt && javac OOMGenerator.java &&  jar -cvfm OOMGenerator.jar manifest.txt OOMGenerator.class && native-image -jar OOMGenerator.jar\r\n```\r\n\r\nRun: \r\n```\r\n./OOMGenerator -Xmx16m\r\n```\r\n\r\nExpected Result:\r\n\r\n```\r\n------------ Generating OOM ------------\r\nIteration: 1\r\nMemory used before: 3723232\r\njava.lang.OutOfMemoryError: Garbage-collected heap size exceeded.\r\n------------ Generating OOM Inside Isolate------------\r\nIteration: 1\r\nMemory used before: 3721624\r\njava.lang.OutOfMemoryError: Garbage-collected heap size exceeded.\r\n```\r\n\r\nActual Result:\r\n```\r\n------------ Generating OOM ------------\r\nIteration: 1\r\nMemory used before: 3723232\r\njava.lang.OutOfMemoryError: Garbage-collected heap size exceeded.\r\n------------ Generating OOM Inside Isolate------------\r\nIteration: 1\r\nMemory used before: 3721624\r\nMemory used after: 49669584\r\n\r\nIteration: 2\r\nMemory used before: 49670384\r\nMemory used after: 148860048\r\n\r\nIteration: 3\r\nMemory used before: 148860768\r\nMemory used after: 234802304\r\n\r\nIteration: 4\r\nMemory used before: 234803024\r\nMemory used after: 459268032\r\n\r\nIteration: 5\r\nMemory used before: 459268752\r\nMemory used after: 844616112\r\n```\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM Version 20.0.0 CE\r\n - OpenJDK 64-Bit Server VM GraalVM CE 20.0.0 (build 11.0.6+9-jvmci-20.0-b02, mixed mode, sharing)\r\n - OS: macOs Catalina 10.15.4\r\n - Architecture: x86\r\n", "url": "https://github.com/oracle/graal/issues/2485", "user": "alexfedorenchik", "labels": ["bug", "native-image"], "created": "2020-05-20 20:07:15", "closed": "2020-05-20 21:47:53", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "cross-compilation on Darwin from AMD64 to AARCH64 fails", "body": "**Describe the issue**\r\n\r\nWhen cross-compiling on Darwin to AARCH64 and using the LLVM backend, compilation works fine.\r\n\r\nWithouth the LLVM backend, compilation fails with the exception below.\r\nThe following parameters are passed to native-image:\r\n```\r\n-Dsvm.targetArch=arm64\r\n-Dsvm.targetName=ios\r\n\r\n```\r\n\r\n```\r\nCaused by: java.lang.IllegalArgumentException: can only truncate to powers-of-two <= 8\r\n        at com.oracle.objectfile.io.AssemblyBuffer.readTruncatedLong(AssemblyBuffer.java:400)\r\n        at com.oracle.objectfile.macho.MachOUserDefinedSection.markRelocationSite(MachOUserDefinedSection.java:173)\r\n        at com.oracle.objectfile.BasicProgbitsSectionImpl.markRelocationSite(BasicProgbitsSectionImpl.java:118)\r\n        at com.oracle.svm.hosted.image.NativeBootImage.markDataRelocationSiteFromText(NativeBootImage.java:652)\r\n        at com.oracle.svm.hosted.image.NativeBootImage.markRelocationSitesFromMaps(NativeBootImage.java:588)\r\n        at com.oracle.svm.hosted.image.NativeBootImage.build(NativeBootImage.java:513)\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2482", "user": "johanvos", "labels": ["bug", "native-image"], "created": "2020-05-20 09:37:09", "closed": "2020-06-08 09:45:00", "commits": {}, "ttf": 19.00027777777778, "commitsDetails": []}, {"title": "[native-image] Invalid or corrupt jarfile truffle-nfi-native-linux-amd64-20.1.0.tar.gz", "body": "**Describe the issue**\r\n\r\nWhen running native-image on a Mac, and including `org.graalvm.nativeimage/svm` in the classpath for my project, compilation fails with this error:\r\n\r\n```text\r\nError: Invalid or corrupt jarfile /Users/runner/.m2/repository/org/graalvm/truffle/truffle-nfi-native-linux-amd64/20.1.0/truffle-nfi-native-linux-amd64-20.1.0.tar.gz\r\nCaused by: java.util.zip.ZipException: zip END header not found\r\ncom.oracle.svm.driver.NativeImage$NativeImageError: Invalid or corrupt jarfile /Users/runner/.m2/repository/org/graalvm/truffle/truffle-nfi-native-linux-amd64/20.1.0/truffle-nfi-native-linux-amd64-20.1.0.tar.gz\r\n\tat com.oracle.svm.driver.NativeImage.showError(NativeImage.java:1537)\r\n\tat com.oracle.svm.driver.NativeImage.processJarManifestMainAttributes(NativeImage.java:986)\r\n\tat com.oracle.svm.driver.NativeImage.processManifestMainAttributes(NativeImage.java:973)\r\n\tat com.oracle.svm.driver.NativeImage.addImageClasspathEntry(NativeImage.java:1446)\r\n\u2026\r\n```\r\n\r\n**Steps to reproduce the issue**\r\n\r\nI hope you don\u2019t mind, I\u2019ve reproduced the error in [this repo](https://github.com/FundingCircle/repro-graalvm-mac-issue/) and I\u2019ve included a GitHub Actions job that runs on MacOS and  triggers the error consistently. For example [this run](https://github.com/FundingCircle/repro-graalvm-mac-issue/runs/690756479) is on a branch switching to 20.1.0 and it failed the same way. I\u2019ve reproduced this now with 19.3.2 and 19.3.0.\r\n\r\n**Describe GraalVM and your environment:**\r\n\r\n - CE 20.1.0 (and also 19.3.2)\r\n - JDK major version: 11\r\n - OS: MacOS 10.15\r\n - Architecture: AMD64\r\n\r\n**More details**\r\n\r\nThe _full_ logs are available via [this Actions job run](https://github.com/FundingCircle/repro-graalvm-mac-issue/runs/690756479) but I\u2019ve pasted what seems to be the most important bits here:\r\n\r\n```\r\n2020-05-19T22:04:46.3518550Z ##[group]Run bin/build-native-image\r\n2020-05-19T22:04:46.3518800Z \u001b[36;1mbin/build-native-image\u001b[0m\r\n2020-05-19T22:04:46.3673250Z shell: /bin/bash -e {0}\r\n2020-05-19T22:04:46.3673430Z env:\r\n2020-05-19T22:04:46.3673540Z   JAVA_HOME: /Users/runner/hostedtoolcache/GraalVM/20.1.0-java11/x64\r\n2020-05-19T22:04:46.3673680Z   JAVA_HOME_20.1.0.java11: /Users/runner/hostedtoolcache/GraalVM/20.1.0-java11/x64\r\n2020-05-19T22:04:46.3673820Z   CLOJURE_INSTALL_DIR: /Users/runner/hostedtoolcache/ClojureToolsDeps/1.10.1-536/x64/lib/clojure\r\n2020-05-19T22:04:46.3673960Z ##[endgroup]\r\n2020-05-19T22:04:46.4724680Z + rm -Rf classes\r\n2020-05-19T22:04:46.4725030Z Clojure dependency tree:\r\n2020-05-19T22:04:46.4731140Z + mkdir classes\r\n2020-05-19T22:04:46.4779500Z + echo 'Clojure dependency tree:'\r\n2020-05-19T22:04:46.4870040Z + clojure -Stree\r\n2020-05-19T22:04:53.2032420Z Downloading: org/clojure/clojure/1.10.2-alpha1/clojure-1.10.2-alpha1.pom from central\r\n2020-05-19T22:04:53.3921740Z Downloading: org/clojure/spec.alpha/0.2.187/spec.alpha-0.2.187.pom from central\r\n2020-05-19T22:04:53.3957390Z Downloading: org/clojure/core.specs.alpha/0.2.44/core.specs.alpha-0.2.44.pom from central\r\n2020-05-19T22:04:53.4469620Z Downloading: org/clojure/pom.contrib/0.3.0/pom.contrib-0.3.0.pom from central\r\n2020-05-19T22:04:53.4536220Z Downloading: org/clojure/pom.contrib/0.2.2/pom.contrib-0.2.2.pom from central\r\n2020-05-19T22:04:53.4653440Z Downloading: borkdude/clj-reflector-graal-java11-fix/0.0.1-graalvm-20.1.0/clj-reflector-graal-java11-fix-0.0.1-graalvm-20.1.0.pom from clojars\r\n2020-05-19T22:04:53.6661510Z Downloading: org/graalvm/nativeimage/svm/20.1.0/svm-20.1.0.pom from central\r\n2020-05-19T22:04:53.7483150Z Downloading: org/graalvm/nativeimage/svm-hosted-native-windows-amd64/20.1.0/svm-hosted-native-windows-amd64-20.1.0.pom from central\r\n2020-05-19T22:04:53.7586610Z Downloading: org/graalvm/nativeimage/svm-hosted-native-linux-amd64/20.1.0/svm-hosted-native-linux-amd64-20.1.0.pom from central\r\n2020-05-19T22:04:53.7690360Z Downloading: org/graalvm/nativeimage/svm-hosted-native-darwin-amd64/20.1.0/svm-hosted-native-darwin-amd64-20.1.0.pom from central\r\n2020-05-19T22:04:53.7793430Z Downloading: org/graalvm/sdk/graal-sdk/20.1.0/graal-sdk-20.1.0.pom from central\r\n2020-05-19T22:04:53.8136640Z Downloading: org/graalvm/truffle/truffle-nfi/20.1.0/truffle-nfi-20.1.0.pom from central\r\n2020-05-19T22:04:53.8190790Z Downloading: org/graalvm/nativeimage/objectfile/20.1.0/objectfile-20.1.0.pom from central\r\n2020-05-19T22:04:53.8294550Z Downloading: org/graalvm/nativeimage/pointsto/20.1.0/pointsto-20.1.0.pom from central\r\n2020-05-19T22:04:53.8364150Z Downloading: org/graalvm/compiler/compiler/20.1.0/compiler-20.1.0.pom from central\r\n2020-05-19T22:04:53.9117410Z Downloading: org/graalvm/truffle/truffle-api/20.1.0/truffle-api-20.1.0.pom from central\r\n2020-05-19T22:04:53.9174040Z Downloading: org/graalvm/truffle/truffle-nfi-native-linux-aarch64/20.1.0/truffle-nfi-native-linux-aarch64-20.1.0.pom from central\r\n2020-05-19T22:04:53.9183360Z Downloading: org/graalvm/truffle/truffle-nfi-native-linux-amd64/20.1.0/truffle-nfi-native-linux-amd64-20.1.0.pom from central\r\n2020-05-19T22:04:53.9870310Z Downloading: org/graalvm/truffle/truffle-nfi-native-darwin-amd64/20.1.0/truffle-nfi-native-darwin-amd64-20.1.0.pom from central\r\n2020-05-19T22:04:54.0477410Z Downloading: org/clojure/core.specs.alpha/0.2.44/core.specs.alpha-0.2.44.jar from central\r\n2020-05-19T22:04:54.0555480Z Downloading: org/clojure/clojure/1.10.2-alpha1/clojure-1.10.2-alpha1.jar from central\r\n2020-05-19T22:04:54.0663980Z Downloading: org/clojure/spec.alpha/0.2.187/spec.alpha-0.2.187.jar from central\r\n2020-05-19T22:04:54.1012620Z Downloading: org/graalvm/truffle/truffle-nfi-native-linux-amd64/20.1.0/truffle-nfi-native-linux-amd64-20.1.0.tar.gz from central\r\n2020-05-19T22:04:54.1988100Z Downloading: org/graalvm/nativeimage/svm-hosted-native-linux-amd64/20.1.0/svm-hosted-native-linux-amd64-20.1.0.tar.gz from central\r\n2020-05-19T22:04:54.2198080Z Downloading: borkdude/clj-reflector-graal-java11-fix/0.0.1-graalvm-20.1.0/clj-reflector-graal-java11-fix-0.0.1-graalvm-20.1.0.jar from clojars\r\n2020-05-19T22:04:54.2952520Z Downloading: org/graalvm/truffle/truffle-nfi-native-linux-aarch64/20.1.0/truffle-nfi-native-linux-aarch64-20.1.0.tar.gz from central\r\n2020-05-19T22:04:54.3353560Z Downloading: org/graalvm/nativeimage/pointsto/20.1.0/pointsto-20.1.0.jar from central\r\n2020-05-19T22:04:54.4322600Z Downloading: org/graalvm/sdk/graal-sdk/20.1.0/graal-sdk-20.1.0.jar from central\r\n2020-05-19T22:04:54.5707390Z Downloading: org/graalvm/truffle/truffle-nfi/20.1.0/truffle-nfi-20.1.0.jar from central\r\n2020-05-19T22:04:54.5965290Z Downloading: org/graalvm/nativeimage/svm/20.1.0/svm-20.1.0.jar from central\r\n2020-05-19T22:04:54.6046610Z Downloading: org/graalvm/nativeimage/svm-hosted-native-windows-amd64/20.1.0/svm-hosted-native-windows-amd64-20.1.0.tar.gz from central\r\n2020-05-19T22:04:54.6798920Z Downloading: org/graalvm/nativeimage/svm-hosted-native-darwin-amd64/20.1.0/svm-hosted-native-darwin-amd64-20.1.0.tar.gz from central\r\n2020-05-19T22:04:54.7550490Z Downloading: org/graalvm/nativeimage/objectfile/20.1.0/objectfile-20.1.0.jar from central\r\n2020-05-19T22:04:54.8495710Z Downloading: org/graalvm/truffle/truffle-api/20.1.0/truffle-api-20.1.0.jar from central\r\n2020-05-19T22:04:54.8729590Z Downloading: org/graalvm/truffle/truffle-nfi-native-darwin-amd64/20.1.0/truffle-nfi-native-darwin-amd64-20.1.0.tar.gz from central\r\n2020-05-19T22:04:55.0740860Z Downloading: org/graalvm/compiler/compiler/20.1.0/compiler-20.1.0.jar from central\r\n2020-05-19T22:05:00.3080680Z org.clojure/clojure 1.10.2-alpha1\r\n2020-05-19T22:05:00.3128340Z   org.clojure/core.specs.alpha 0.2.44\r\n2020-05-19T22:05:00.3129880Z   org.clojure/spec.alpha 0.2.187\r\n2020-05-19T22:05:00.3131690Z borkdude/clj-reflector-graal-java11-fix 0.0.1-graalvm-20.1.0\r\n2020-05-19T22:05:00.3133840Z   org.graalvm.nativeimage/svm 20.1.0\r\n2020-05-19T22:05:00.3135130Z     org.graalvm.nativeimage/svm-hosted-native-linux-amd64 20.1.0\r\n2020-05-19T22:05:00.3135630Z     org.graalvm.nativeimage/pointsto 20.1.0\r\n2020-05-19T22:05:00.3137510Z     org.graalvm.sdk/graal-sdk 20.1.0\r\n2020-05-19T22:05:00.3139270Z     org.graalvm.truffle/truffle-nfi 20.1.0\r\n2020-05-19T22:05:00.3140100Z       org.graalvm.truffle/truffle-nfi-native-linux-amd64 20.1.0\r\n2020-05-19T22:05:00.3151970Z       org.graalvm.truffle/truffle-nfi-native-linux-aarch64 20.1.0\r\n2020-05-19T22:05:00.3153810Z       org.graalvm.truffle/truffle-api 20.1.0\r\n2020-05-19T22:05:00.3181630Z       org.graalvm.truffle/truffle-nfi-native-darwin-amd64 20.1.0\r\n2020-05-19T22:05:00.3182940Z     org.graalvm.nativeimage/svm-hosted-native-windows-amd64 20.1.0\r\n2020-05-19T22:05:00.3184100Z     org.graalvm.nativeimage/svm-hosted-native-darwin-amd64 20.1.0\r\n2020-05-19T22:05:00.3185710Z     org.graalvm.nativeimage/objectfile 20.1.0\r\n2020-05-19T22:05:00.3190310Z     org.graalvm.compiler/compiler 20.1.0\r\n2020-05-19T22:05:00.3426070Z + echo 'Compiling Clojure code to Java class files:'\r\n2020-05-19T22:05:00.3426250Z Compiling Clojure code to Java class files:\r\n2020-05-19T22:05:00.3429610Z + clojure -e '(compile '\\''repro.core)'\r\n2020-05-19T22:05:02.3670810Z repro.core\r\n2020-05-19T22:05:02.3878290Z + echo 'Compiling class files to native image:'\r\n2020-05-19T22:05:02.3878470Z Compiling class files to native image:\r\n2020-05-19T22:05:02.3891790Z ++ clojure -Spath\r\n2020-05-19T22:05:02.4109270Z + native-image -cp src:/Users/runner/.m2/repository/org/clojure/clojure/1.10.2-alpha1/clojure-1.10.2-alpha1.jar:/Users/runner/.m2/repository/borkdude/clj-reflector-graal-java11-fix/0.0.1-graalvm-20.1.0/clj-reflector-graal-java11-fix-0.0.1-graalvm-20.1.0.jar:/Users/runner/.m2/repository/org/clojure/core.specs.alpha/0.2.44/core.specs.alpha-0.2.44.jar:/Users/runner/.m2/repository/org/clojure/spec.alpha/0.2.187/spec.alpha-0.2.187.jar:/Users/runner/.m2/repository/org/graalvm/truffle/truffle-nfi-native-linux-amd64/20.1.0/truffle-nfi-native-linux-amd64-20.1.0.tar.gz:/Users/runner/.m2/repository/org/graalvm/nativeimage/svm-hosted-native-linux-amd64/20.1.0/svm-hosted-native-linux-amd64-20.1.0.tar.gz:/Users/runner/.m2/repository/org/graalvm/truffle/truffle-nfi-native-linux-aarch64/20.1.0/truffle-nfi-native-linux-aarch64-20.1.0.tar.gz:/Users/runner/.m2/repository/org/graalvm/nativeimage/pointsto/20.1.0/pointsto-20.1.0.jar:/Users/runner/.m2/repository/org/graalvm/sdk/graal-sdk/20.1.0/graal-sdk-20.1.0.jar:/Users/runner/.m2/repository/org/graalvm/nativeimage/svm/20.1.0/svm-20.1.0.jar:/Users/runner/.m2/repository/org/graalvm/truffle/truffle-nfi/20.1.0/truffle-nfi-20.1.0.jar:/Users/runner/.m2/repository/org/graalvm/nativeimage/svm-hosted-native-windows-amd64/20.1.0/svm-hosted-native-windows-amd64-20.1.0.tar.gz:/Users/runner/.m2/repository/org/graalvm/nativeimage/svm-hosted-native-darwin-amd64/20.1.0/svm-hosted-native-darwin-amd64-20.1.0.tar.gz:/Users/runner/.m2/repository/org/graalvm/nativeimage/objectfile/20.1.0/objectfile-20.1.0.jar:/Users/runner/.m2/repository/org/graalvm/truffle/truffle-api/20.1.0/truffle-api-20.1.0.jar:/Users/runner/.m2/repository/org/graalvm/truffle/truffle-nfi-native-darwin-amd64/20.1.0/truffle-nfi-native-darwin-amd64-20.1.0.tar.gz:/Users/runner/.m2/repository/org/graalvm/compiler/compiler/20.1.0/compiler-20.1.0.jar:classes -H:Name=repro -H:+ReportExceptionStackTraces --initialize-at-build-time --verbose --no-fallback --no-server -J-Xms6g -J-Xmx6g repro.core\r\n2020-05-19T22:05:02.7384020Z Error: Invalid or corrupt jarfile /Users/runner/.m2/repository/org/graalvm/truffle/truffle-nfi-native-linux-amd64/20.1.0/truffle-nfi-native-linux-amd64-20.1.0.tar.gz\r\n2020-05-19T22:05:02.7386190Z Caused by: java.util.zip.ZipException: zip END header not found\r\n2020-05-19T22:05:02.7390380Z com.oracle.svm.driver.NativeImage$NativeImageError: Invalid or corrupt jarfile /Users/runner/.m2/repository/org/graalvm/truffle/truffle-nfi-native-linux-amd64/20.1.0/truffle-nfi-native-linux-amd64-20.1.0.tar.gz\r\n2020-05-19T22:05:02.7391470Z \tat com.oracle.svm.driver.NativeImage.showError(NativeImage.java:1537)\r\n2020-05-19T22:05:02.7391730Z \tat com.oracle.svm.driver.NativeImage.processJarManifestMainAttributes(NativeImage.java:986)\r\n2020-05-19T22:05:02.7392010Z \tat com.oracle.svm.driver.NativeImage.processManifestMainAttributes(NativeImage.java:973)\r\n2020-05-19T22:05:02.7392250Z \tat com.oracle.svm.driver.NativeImage.addImageClasspathEntry(NativeImage.java:1446)\r\n2020-05-19T22:05:02.7392490Z \tat com.oracle.svm.driver.NativeImage.addCustomImageClasspath(NativeImage.java:1416)\r\n2020-05-19T22:05:02.7392680Z \tat com.oracle.svm.driver.DefaultOptionHandler.processClasspathArgs(DefaultOptionHandler.java:233)\r\n2020-05-19T22:05:02.7393010Z \tat com.oracle.svm.driver.DefaultOptionHandler.consume(DefaultOptionHandler.java:104)\r\n2020-05-19T22:05:02.7393280Z \tat com.oracle.svm.driver.NativeImage$NativeImageArgsProcessor.apply(NativeImage.java:1365)\r\n2020-05-19T22:05:02.7393540Z \tat com.oracle.svm.driver.NativeImage.processNativeImageArgs(NativeImage.java:1581)\r\n2020-05-19T22:05:02.7393770Z \tat com.oracle.svm.driver.NativeImage.completeImageBuild(NativeImage.java:1026)\r\n2020-05-19T22:05:02.7393960Z \tat com.oracle.svm.driver.NativeImage.build(NativeImage.java:1290)\r\n2020-05-19T22:05:02.7394210Z \tat com.oracle.svm.driver.NativeImage.performBuild(NativeImage.java:1260)\r\n2020-05-19T22:05:02.7394450Z \tat com.oracle.svm.driver.NativeImage.main(NativeImage.java:1219)\r\n2020-05-19T22:05:02.7394670Z \tat com.oracle.svm.driver.NativeImage$JDK9Plus.main(NativeImage.java:1722)\r\n2020-05-19T22:05:02.7394850Z Caused by: java.util.zip.ZipException: zip END header not found\r\n2020-05-19T22:05:02.7395070Z \tat java.util.zip.ZipFile$Source.zerror(ZipFile.java:1535)\r\n2020-05-19T22:05:02.7395280Z \tat java.util.zip.ZipFile$Source.findEND(ZipFile.java:1436)\r\n2020-05-19T22:05:02.7395510Z \tat java.util.zip.ZipFile$Source.initCEN(ZipFile.java:1443)\r\n2020-05-19T22:05:02.7396300Z \tat java.util.zip.ZipFile$Source.<init>(ZipFile.java:1274)\r\n2020-05-19T22:05:02.7396500Z \tat java.util.zip.ZipFile$Source.get(ZipFile.java:1237)\r\n2020-05-19T22:05:02.7396740Z \tat java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)\r\n2020-05-19T22:05:02.7397130Z \tat java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:55)\r\n2020-05-19T22:05:02.7398730Z \tat java.util.zip.ZipFile.<init>(ZipFile.java:247)\r\n2020-05-19T22:05:02.7398870Z \tat java.util.zip.ZipFile.<init>(ZipFile.java:177)\r\n2020-05-19T22:05:02.7399020Z \tat java.util.jar.JarFile.<init>(JarFile.java:348)\r\n2020-05-19T22:05:02.7399300Z \tat java.util.jar.JarFile.<init>(JarFile.java:319)\r\n2020-05-19T22:05:02.7399670Z \tat java.util.jar.JarFile.<init>(JarFile.java:285)\r\n2020-05-19T22:05:02.7399810Z \tat com.oracle.svm.driver.NativeImage.processJarManifestMainAttributes(NativeImage.java:978)\r\n2020-05-19T22:05:02.7399900Z \t... 12 more\r\n2020-05-19T22:05:02.7403510Z ##[error]Process completed with exit code 1.\r\n2020-05-19T22:05:02.7492510Z Post job cleanup.\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2481", "user": "aviflax", "labels": ["bug", "native-image"], "created": "2020-05-19 22:16:18", "closed": "2020-05-26 17:30:10", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "20.1.0 native-image-maven-plugin: Error: Unable to detect supported WINDOWS native software development toolchain.", "body": "With version 20.0.0 everything worked well with windows, but now:\r\n```\r\nError: Unable to detect supported WINDOWS native software development toolchain.\r\ncom.oracle.svm.core.util.UserError$UserException: Unable to detect supported WINDOWS native software development toolchain.\r\n        at com.oracle.svm.core.util.UserError.abort(UserError.java:68)\r\n        at com.oracle.svm.hosted.c.codegen.CCompilerInvoker.<init>(CCompilerInvoker.java:72)\r\n        at com.oracle.svm.hosted.c.codegen.CCompilerInvoker$WindowsCCompilerInvoker.<init>(CCompilerInvoker.java:93)\r\n        at com.oracle.svm.hosted.c.codegen.CCompilerInvoker.create(CCompilerInvoker.java:84)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.setupNativeImage(NativeImageGenerator.java:851)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:536)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:451)\r\n        at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1407)\r\n        at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n        at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n        at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n        at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n        at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nError: Image build request failed with exit status 1\r\n```\r\n\r\nAnd yes, i use \"x64 Native Tools Command Prompt for VS 2017\" ...", "url": "https://github.com/oracle/graal/issues/2480", "user": "mbbee", "labels": ["bug", "native-image"], "created": "2020-05-19 19:18:05", "closed": "2020-05-26 10:08:37", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "cross-compilation not possible unless using LLVM backend", "body": "There is currently a hard check on using the LLVM backend in order to be able to do cross compilation (e.g. from Linux AMD64 to Android Aarch64).\r\n\r\nA check in NativeImageGenerator will verify if the host compiler is suitable for the target unless all following conditions are satisfied\r\n* the backend is LLVM\r\n* NativeImageOptions.ExitAfterRelocatableImageWrite is set\r\n* A CAP cache is used\r\n\r\nThe last 2 checks are probably sufficient for not doing the compiler check.", "url": "https://github.com/oracle/graal/issues/2476", "user": "johanvos", "labels": ["bug", "native-image"], "created": "2020-05-19 15:02:22", "closed": "2020-05-21 08:08:45", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Reference objects can be cleared without being enqueued", "body": "`java.lang.ref.Reference` instances, such as a `WeakReference`, are discovered by the garbage collector during collection and put on a list. If a reference's referent object is collected, the reference is cleared and put on another list to later be enqueued in a `ReferenceQueue`, if it was registered with one. Due to a a problem with re-discovering the same reference, the list of to-be-enqueued objects can become corrupted and lead to objects which are never enqueued although they should have been.", "url": "https://github.com/oracle/graal/issues/2474", "user": "peter-hofer", "labels": ["bug", "native-image", "oracle-emp"], "created": "2020-05-18 20:29:49", "closed": "2020-05-19 09:52:19", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[20.1] SEGV in StubRoutines::counterMode_AESCrypt", "body": "This one is failing for a long time in our nightly testing but I wasn't able to reproduce it locally. Finally I realized that we need to run the while `com/sun/crypto/provider/Cipher` suite with concurrency set to 1. Very likely because that uses the same agent process and triggers the compilation.\r\n\r\nIt fails with `release` and `fastdebug` builds on both Linux and macOS:\r\n\r\n```\r\nmake run-test-only JTREG=\"VM_OPTIONS=-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -XX:+UseG1GC; JOBS=1\" TEST=\"com/sun/crypto/provider/Cipher/\" CONF=release\r\n```\r\n\r\n```\r\n[2020-05-18 10:47:34,200] Agent[1]: stdout: #\r\n[2020-05-18 10:47:34,201] Agent[1]: stdout: # A fatal error has been detected by the Java Runtime Environment:\r\n[2020-05-18 10:47:34,201] Agent[1]: stdout: #\r\n[2020-05-18 10:47:34,201] Agent[1]: stdout: #  SIGSEGV (0xb) at pc=0x00000001134f4180, pid=88478, tid=37923\r\n[2020-05-18 10:47:34,201] Agent[1]: stdout: #\r\n[2020-05-18 10:47:34,201] Agent[1]: stdout: # JRE version: OpenJDK Runtime Environment (11.0.6) (build 11.0.6.0.4-internal+0-TwitterJDK)\r\n[2020-05-18 10:47:34,201] Agent[1]: stdout: # Java VM: OpenJDK 64-Bit Server VM (11.0.6.0.4-internal+0-TwitterJDK, mixed mode, tiered, jvmci, jvmci compiler, compressed oops, g1 gc, bsd-amd64)\r\n[2020-05-18 10:47:34,201] Agent[1]: stdout: # Problematic frame:\r\n[2020-05-18 10:47:34,201] Agent[1]: stdout: # v  ~StubRoutines::counterMode_AESCrypt\r\n[2020-05-18 10:47:34,201] Agent[1]: stdout: #\r\n[2020-05-18 10:47:34,201] Agent[1]: stdout: # No core dump will be written. Core dumps have been disabled. To enable core dumping, try \"ulimit -c unlimited\" before starting Java again\r\n[2020-05-18 10:47:34,201] Agent[1]: stdout: #\r\n[2020-05-18 10:47:34,201] Agent[1]: stdout: # An error report file with more information is saved as:\r\n[2020-05-18 10:47:34,201] Agent[1]: stdout: # /Users/cthalinger/twitter-11-upstream-graal/build/macosx-x86_64-normal-server-release/test-support/jtreg_test_jdk_com_sun_crypto_provider_Cipher/scratch/hs_err_pid88478.log\r\n[2020-05-18 10:47:34,218] Agent[1]: stdout: Could not load hsdis-amd64.dylib; library not loadable; PrintAssembly is disabled\r\n[2020-05-18 10:47:34,240] Agent[1]: stdout: #\r\n[2020-05-18 10:47:34,240] Agent[1]: stdout: # If you would like to submit a bug report, please visit:\r\n[2020-05-18 10:47:34,240] Agent[1]: stdout: #   https://jira.twitter.biz/browse/VM\r\n[2020-05-18 10:47:34,240] Agent[1]: stdout: #\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2473", "user": "christhalinger", "labels": ["bug"], "created": "2020-05-18 17:50:19", "closed": "2020-05-23 02:20:39", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "[OpenJDK15] JDK-8241072 - Reimplement DatagramSocket API breaks native-image", "body": "**Describe the issue**\r\n\r\nThis enhancement in JDK 15 breaks native-image\r\nhttps://bugs.openjdk.java.net/browse/JDK-8241072\r\n\r\nFatal error:com.oracle.svm.util.ReflectionUtil$ReflectionUtilError: java.lang.NoSuchMethodException: java.net.DatagramSocket.checkOldImpl(java.net.DatagramSocketImpl)\r\n\tat com.oracle.svm.util.ReflectionUtil.lookupMethod(ReflectionUtil.java:63)\r\n\tat com.oracle.svm.core.jdk.JNIRegistrationUtil.method(JNIRegistrationUtil.java:83)\r\n\tat com.oracle.svm.hosted.jdk.JNIRegistrationJavaNet.beforeAnalysis(JNIRegistrationJavaNet.java:120)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$runPointsToAnalysis$7(NativeImageGenerator.java:680)\r\n\tat com.oracle.svm.hosted.FeatureHandler.forEachFeature(FeatureHandler.java:70)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:680)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:539)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:452)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1409)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nCaused by: java.lang.NoSuchMethodException: java.net.DatagramSocket.checkOldImpl(java.net.DatagramSocketImpl)\r\n\tat java.base/java.lang.Class.getDeclaredMethod(Class.java:2631)\r\n\tat com.oracle.svm.util.ReflectionUtil.lookupMethod(ReflectionUtil.java:58)\r\n\r\n**Steps to reproduce the issue**\r\nUse the latest JDK15 sources to build GraalVM and run native-image.\r\n\r\n**Suggested Fix**\r\n\r\ndiff --git a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/jdk/JNIRegistrationJavaNet.java b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/jdk/JNIRegistrationJavaNet.java\r\nindex 27d0fd3..7e5b133 100644\r\n--- a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/jdk/JNIRegistrationJavaNet.java\r\n+++ b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/jdk/JNIRegistrationJavaNet.java\r\n@@ -24,7 +24,6 @@\r\n  */\r\n package com.oracle.svm.hosted.jdk;\r\n \r\n-import java.net.DatagramPacket;\r\n import java.net.InetAddress;\r\n \r\n import org.graalvm.compiler.serviceprovider.JavaVersionUtil;\r\n@@ -115,14 +114,6 @@ class JNIRegistrationJavaNet extends JNIRegistrationUtil implements Feature {\r\n         a.registerReachabilityHandler(JNIRegistrationJavaNet::registerDatagramPacketInit,\r\n                         method(a, \"java.net.DatagramPacket\", \"init\"));\r\n \r\n-        if (JavaVersionUtil.JAVA_SPEC >= 15) {\r\n-            a.registerReachabilityHandler(JNIRegistrationJavaNet::registerDatagramSocketCheckOldImpl,\r\n-                            method(a, \"java.net.DatagramSocket\", \"checkOldImpl\", java.net.DatagramSocketImpl.class));\r\n-        } else {\r\n-            a.registerReachabilityHandler(JNIRegistrationJavaNet::registerDatagramSocketCheckOldImpl,\r\n-                            method(a, \"java.net.DatagramSocket\", \"checkOldImpl\"));\r\n-        }\r\n-\r\n         String plainDatagramSocketImpl = isWindows() ? \"TwoStacksPlainDatagramSocketImpl\" : \"PlainDatagramSocketImpl\";\r\n         a.registerReachabilityHandler(JNIRegistrationJavaNet::registerPlainDatagramSocketImplInit,\r\n                         method(a, \"java.net.\" + plainDatagramSocketImpl, \"init\"));\r\n@@ -208,16 +199,6 @@ class JNIRegistrationJavaNet extends JNIRegistrationUtil implements Feature {\r\n         JNIRuntimeAccess.register(fields(a, \"java.net.DatagramPacket\", \"address\", \"port\", \"buf\", \"offset\", \"length\", \"bufLength\"));\r\n     }\r\n \r\n-    private static void registerDatagramSocketCheckOldImpl(DuringAnalysisAccess a) {\r\n-        a.registerSubtypeReachabilityHandler((access, clazz) -> {\r\n-            // Checkstyle: stop\r\n-            if (!java.lang.reflect.Modifier.isAbstract(clazz.getModifiers())) {\r\n-                // Checkstyle: resume\r\n-                RuntimeReflection.register(method(access, clazz.getName(), \"peekData\", DatagramPacket.class));\r\n-            }\r\n-        }, clazz(a, \"java.net.DatagramSocketImpl\"));\r\n-    }\r\n-\r\n     private static void registerPlainDatagramSocketImplInit(DuringAnalysisAccess a) {\r\n         JNIRuntimeAccess.register(fields(a, \"java.net.DatagramSocketImpl\", \"fd\", \"localPort\"));\r\n         JNIRuntimeAccess.register(fields(a, \"java.net.AbstractPlainDatagramSocketImpl\", \"timeout\", \"trafficClass\", \"connected\"));", "url": "https://github.com/oracle/graal/issues/2468", "user": "bobvandette", "labels": ["bug", "native-image"], "created": "2020-05-15 20:00:35", "closed": "2020-05-28 02:14:47", "commits": {"56851772a74bae8e53cb0a6219e5be0c8c9552df": {"commitGHEventType": "closed", "commitUser": "graalvmbot"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "56851772a74bae8e53cb0a6219e5be0c8c9552df", "commitGHEventType": "closed", "commitUser": "graalvmbot", "commitParents": ["a79a7e42fc0a7bfb8c932cb4bb97d3e0c085d7d0"], "nameRev": "56851772a74bae8e53cb0a6219e5be0c8c9552df tags/JDK-8243380~44^2~8^2", "commitMessage": "Fix #2468 Datagram socket in JDK 15 breaks native-image\n", "commitDateTime": "2020-05-19 10:40:04", "authoredDateTime": "2020-05-19 10:40:04", "commitGitStats": [{"filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/jdk/JNIRegistrationJavaNet.java", "insertions": 0, "deletions": 19, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JNIRegistrationJavaNet.java", "spoonMethods": [{"spoonMethodName": "com.oracle.svm.hosted.jdk.JNIRegistrationJavaNet.beforeAnalysis(com.oracle.svm.hosted.jdk.BeforeAnalysisAccess)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.oracle.svm.hosted.jdk.JNIRegistrationJavaNet.registerDatagramSocketCheckOldImpl(com.oracle.svm.hosted.jdk.DuringAnalysisAccess)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["56851772a74bae8e53cb0a6219e5be0c8c9552df"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0, "deletions": 19, "lines": 19, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/jdk"], "changesInPackagesSPOON": ["com.oracle.svm.hosted.jdk.JNIRegistrationJavaNet.registerDatagramSocketCheckOldImpl(com.oracle.svm.hosted.jdk.DuringAnalysisAccess)", "com.oracle.svm.hosted.jdk.JNIRegistrationJavaNet.beforeAnalysis(com.oracle.svm.hosted.jdk.BeforeAnalysisAccess)"]}, {"title": "Error when building jdk \"test-image-hotspot-jtreg-graal\"after \"mx updategraalinopenjdk\".", "body": "**Describe the issue**\r\nBuilding jdk image `test-image-hotspot-jtreg-graal` reports error after updating the latest `graal/compiler` by running `mx updategraalinopenjdk`. \r\n\r\nHere is the error log: \r\n \r\n```\r\njdk_src/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.hotspot.test/src/org/graalvm/compiler/hotspot/test/VerifyJNILibGraalScope.java:35: error: package jdk.internal.vm.compiler.libgraal.jni does not exist\r\nimport jdk.internal.vm.compiler.libgraal.jni.JNILibGraalScope;\r\n                                                ^\r\n```\r\n\r\nPackage `jdk.internal.vm.compiler.libgraal.jni` is not generated in JDK code, but it is used in the package `org.graalvm.compiler.hotspot.test` which will be updated in JDK. \r\n\r\nSo could test `VerifyJNILibGraalScope.java` be removed to other module that is in the excluded list when updating graal in openjdk?\r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\n\r\n    1.  cd graal/compiler & mx updategraalinopenjdk jdk_src 15\r\n    2.  cd jdk_src & ./configure [options] & make images & make test-image-hotspot-jtreg-graal\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM commit id if built from source: **master**\r\n - JDK major version: **[15]**\r\n - OS: **[linux]**\r\n - Architecture: **[AMD64, AArch64]**\r\n\r\n\r\n**More details**\r\nCodes created by:\r\n```\r\n    commit 34e0ba1fd63caefd9551b67be58bfea143df42e7\r\n    support libgraal with multiple JVMCI runtimes\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2463", "user": "XiaohongGong", "labels": ["bug"], "created": "2020-05-15 06:13:53", "closed": "2020-05-15 14:30:46", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Undefined reference to JVM_GetSystemPackage, JVM_FillInStackTrace and JVM_LatestUserDefinedLoader", "body": "Our `spring-graal-native` build is broken when compiled against GraalVM `master` (and green with 20.1 branch) with following errors:\r\n\r\n```\r\n/opt/java/jre/lib/libjava.a(Package.o): In function `Java_java_lang_Package_getSystemPackage0':\r\n/opt/jprt/T/P1/164053.buildslave/s/jdk/src/share/native/java/lang/Package.c:34: undefined reference to `JVM_GetSystemPackage'\r\n/opt/java/jre/lib/libjava.a(Throwable.o): In function `Java_java_lang_Throwable_fillInStackTrace':\r\n/opt/jprt/T/P1/164053.buildslave/s/jdk/src/share/native/java/lang/Throwable.c:49: undefined reference to `JVM_FillInStackTrace'\r\n/opt/java/jre/lib/libjava.a(VM.o): In function `Java_sun_misc_VM_latestUserDefinedLoader0':\r\n/opt/jprt/T/P1/164053.buildslave/s/jdk/src/share/native/sun/misc/VM.c:116: undefined reference to `JVM_LatestUserDefinedLoader'\r\n\r\ncollect2: error: ld returned 1 exit status\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat java.util.concurrent.ForkJoinTask.getThrowableException(ForkJoinTask.java:593)\r\n\tat java.util.concurrent.ForkJoinTask.get(ForkJoinTask.java:1005)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:463)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:346)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:505)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:114)\r\nCaused by: java.lang.RuntimeException: There was an error linking the native image: Linker command exited with 1\r\n```\r\nFull error message is available at https://ci.spring.io/teams/spring-graal-native/pipelines/spring-graal-native/jobs/master-java8-samples-build/builds/10 (click on \"build\" tab to see the logs).\r\n\r\nTo reproduce, follow [those instructions](https://github.com/spring-projects-experimental/spring-graal-native#use-docker-based-build-environment), use `docker/run-master-java8.sh` to run the Docker container and run `build.sh` then `build-samples.sh`.\r\n\r\nCould be linked to https://github.com/oracle/graal/issues/2448.\r\n\r\nPlease tag this issue with `spring` label.", "url": "https://github.com/oracle/graal/issues/2451", "user": "sdeleuze", "labels": ["bug", "native-image", "spring"], "created": "2020-05-12 15:29:49", "closed": "2020-05-15 20:39:56", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "JDK build error with \"mx updategraalinopenjdk\" due to \"nativeimage\" package is used.", "body": "**Describe the issue**\r\nUpdating the graal master in jdk/jdk master by running \"mx updategraalinopenjdk\", and building jdk will report the following error:\r\n\r\n    jdk_src/src/jdk.internal.vm.compiler/share/classes/jdk.internal.vm.compiler.libgraal/src/jdk/internal/vm/compiler/libgraal/LibGraalScope.java:30: error: package org.graalvm.nativeimage does not exist\r\n    import org.graalvm.nativeimage.IsolateThread;\r\n\r\n                              ^\r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\n\r\n    1.  cd graal/compiler & mx updategraalinopenjdk jdk_src 15\r\n    2.  cd jdk_src & ./configure [options] & make images\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM commit id: **master**\r\n - JDK major version: **15**\r\n - OS: **linux**\r\n - Architecture: **AArch64**\r\n\r\n\r\n**More details**\r\nCaused by:\r\n```\r\n    commit 124765b23fce51db6f5b86f3b4f1334664a3ab16\r\n    replace use of SVMMBean.IsolateThreadScope with LibGraalScope\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2450", "user": "XiaohongGong", "labels": ["bug"], "created": "2020-05-12 02:37:48", "closed": "2020-05-13 08:51:59", "commits": {"78a7a8256283486cad997e060a0305a30cf8c188": {"commitGHEventType": "referenced", "commitUser": "graalvmbot"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "78a7a8256283486cad997e060a0305a30cf8c188", "commitGHEventType": "referenced", "commitUser": "graalvmbot", "commitParents": ["35db29c0f133933e876c4ba5b8fdf79173140ae9"], "nameRev": "78a7a8256283486cad997e060a0305a30cf8c188 tags/JDK-8243380~141^2~2", "commitMessage": "removed reference to org.graalvm.nativeimage package (#2450)\n", "commitDateTime": "2020-05-12 12:03:02", "authoredDateTime": "2020-05-12 11:53:29", "commitGitStats": [{"filePath": "compiler/src/org.graalvm.libgraal/src/org/graalvm/libgraal/LibGraalScope.java", "insertions": 1, "deletions": 3, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LibGraalScope.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["78a7a8256283486cad997e060a0305a30cf8c188"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 3, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["compiler/src/org.graalvm.libgraal/src/org/graalvm/libgraal"]}, {"title": "[Regression] Linking failed with undefined reference to `JVM_TraceMethodCalls' and `JVM_TraceInstructions' with JDK8", "body": "**Describe the issue**\r\n\r\nOur CI pipeline has detected a regression while building a native-image for a Micronaut application using Freemarker. This is only happening in this test application (the rest in the pipeline pass) and only for JDK8. With JDK11 it works properly.\r\n\r\nIt started happening in our 1.3.x branch after this commit: https://github.com/oracle/graal/commit/8ca1b396e3c69794320b9992e93082606845c75e. It also happened in our master branch after this one, which follows the previous one: https://github.com/oracle/graal/commit/73061b348a33e21cc955a7d03e48ec47d4a98d42\r\n\r\nThe full output is here: https://gitlab.com/micronaut-projects/micronaut-graal-tests/-/jobs/544845176\r\n\r\nI'm not able to reproduce it locally on my Linux laptop and I'm not really sure if this has anything to do with some missing library, but I'm able to reproduce it always in Docker.\r\nI've also tried in our CI with the following Docker images: `ruby:2.6`, `ubuntu:20.04` and  `ubuntu:18.04`. It fails with all of them.\r\n\r\nI've also tried removing the `--static` flag when building the native image and it fails. The error is the same but the stacktrace is a little bit different, though: https://gitlab.com/micronaut-projects/micronaut-graal-tests/-/jobs/546240186\r\n\r\n\r\n**Steps to reproduce the issue**\r\n- `git clone https://github.com/micronaut-graal-tests/micronaut-views-graal`\r\n- `cd micronaut-views-graal`\r\n- `git checkout 1.3.x_freemarker`\r\n- Use GraalVM build from master branch\r\n- `./build-native-image.sh`\r\n\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM version: **8ca1b396e3c69794320b9992e93082606845c75e**. Also tried with latest commit from master branch.\r\n - JDK major version: **1.8**\r\n - OS: **Linux**. The CI runs with docker image **ruby:2.5**\r\n - Architecture: **AMD64**\r\n\r\n\r\n**More details**\r\n\r\n```\r\nExecuting [\r\n /builds/micronaut-projects/micronaut-graal-tests/graal_dist/jre/bin/java \\\r\n -XX:+UseParallelGC \\\r\n -XX:+UnlockExperimentalVMOptions \\\r\n -XX:+EnableJVMCI \\\r\n -Dtruffle.TrustAllTruffleRuntimeProviders=true \\\r\n -Dtruffle.TruffleRuntime=com.oracle.truffle.api.impl.DefaultTruffleRuntime \\\r\n -Dgraalvm.ForcePolyglotInvalid=true \\\r\n -Dgraalvm.locatorDisabled=true \\\r\n -d64 \\\r\n -XX:-UseJVMCIClassLoader \\\r\n -XX:-UseJVMCICompiler \\\r\n -Xss10m \\\r\n -Xms1g \\\r\n -Xmx6401949696 \\\r\n -Duser.country=US \\\r\n -Duser.language=en \\\r\n -Djava.awt.headless=true \\\r\n -Dorg.graalvm.version=20.2.0-dev \\\r\n -Dorg.graalvm.config= \\\r\n -Dcom.oracle.graalvm.isaot=true \\\r\n -Djava.system.class.loader=com.oracle.svm.hosted.NativeImageSystemClassLoader \\\r\n -Xshare:off \\\r\n -Djvmci.class.path.append=/builds/micronaut-projects/micronaut-graal-tests/graal_dist/jre/lib/jvmci/graal.jar \\\r\n -javaagent:/builds/micronaut-projects/micronaut-graal-tests/graal_dist/jre/lib/svm/builder/svm.jar \\\r\n -Djdk.internal.lambda.disableEagerInitialization=true \\\r\n -Djdk.internal.lambda.eagerlyInitialize=false \\\r\n -Djava.lang.invoke.InnerClassLambdaMetafactory.initializeLambdas=false \\\r\n -Xbootclasspath/a:/builds/micronaut-projects/micronaut-graal-tests/graal_dist/jre/lib/boot/graal-sdk.jar \\\r\n -cp \\\r\n /builds/micronaut-projects/micronaut-graal-tests/graal_dist/jre/lib/svm/builder/objectfile.jar:/builds/micronaut-projects/micronaut-graal-tests/graal_dist/jre/lib/svm/builder/javacpp-shadowed.jar:/builds/micronaut-projects/micronaut-graal-tests/graal_dist/jre/lib/svm/builder/llvm-platform-specific-shadowed.jar:/builds/micronaut-projects/micronaut-graal-tests/graal_dist/jre/lib/svm/builder/svm-llvm.jar:/builds/micronaut-projects/micronaut-graal-tests/graal_dist/jre/lib/svm/builder/llvm-wrapper-shadowed.jar:/builds/micronaut-projects/micronaut-graal-tests/graal_dist/jre/lib/svm/builder/pointsto.jar:/builds/micronaut-projects/micronaut-graal-tests/graal_dist/jre/lib/svm/builder/svm.jar:/builds/micronaut-projects/micronaut-graal-tests/graal_dist/jre/lib/jvmci/graal.jar:/builds/micronaut-projects/micronaut-graal-tests/graal_dist/jre/lib/jvmci/jvmci-hotspot.jar:/builds/micronaut-projects/micronaut-graal-tests/graal_dist/jre/lib/jvmci/jvmci-api.jar:/builds/micronaut-projects/micronaut-graal-tests/graal_dist/jre/lib/jvmci/graal-management.jar:/builds/micronaut-projects/micronaut-graal-tests/graal_dist/jre/lib/jvmci/graal-truffle-jfr-impl.jar:/builds/micronaut-projects/micronaut-graal-tests/graal_dist/jre/lib/resources.jar \\\r\n com.oracle.svm.hosted.NativeImageGeneratorRunner \\\r\n -watchpid \\\r\n 394 \\\r\n -imagecp \\\r\n /builds/micronaut-projects/micronaut-graal-tests/graal_dist/jre/lib/boot/graal-sdk.jar:/builds/micronaut-projects/micronaut-graal-tests/graal_dist/jre/lib/svm/library-support.jar:/builds/micronaut-projects/micronaut-graal-tests/micronaut-views-graal/build/libs/views-graal-0.1-all.jar \\\r\n -H:Path=/builds/micronaut-projects/micronaut-graal-tests/micronaut-views-graal \\\r\n -H:FallbackThreshold=0 \\\r\n -H:+StaticExecutable \\\r\n -H:ClassInitialization=io.netty.util.AbstractReferenceCounted:run_time,io.netty.util.concurrent.GlobalEventExecutor:run_time,io.netty.util.concurrent.ImmediateEventExecutor:run_time,io.netty.util.concurrent.ScheduledFutureTask:run_time,io.netty.util.internal.ThreadLocalRandom:run_time \\\r\n -H:ClassInitialization=io.netty.buffer.PooledByteBufAllocator:run_time,io.netty.buffer.ByteBufAllocator:run_time,io.netty.buffer.ByteBufUtil:run_time,io.netty.buffer.AbstractReferenceCountedByteBuf:run_time \\\r\n -H:ReflectionConfigurationResources=META-INF/native-image/io.netty/transport/reflection-config.json \\\r\n -H:ClassInitialization=io.netty.handler.ssl.util.ThreadLocalInsecureRandom:run_time \\\r\n -H:ClassInitialization=io.netty:build_time \\\r\n -H:ClassInitialization=io.netty.handler.codec.http.HttpObjectEncoder:run_time,io.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder:run_time,io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder:run_time \\\r\n -H:IncludeResources=META-INF/http/mime.types \\\r\n -H:+AllowIncompleteClasspath \\\r\n -H:EnableURLProtocols=http,https \\\r\n -H:ReflectionConfigurationResources=META-INF/native-image/io.micronaut/http/reflection-config.json \\\r\n '-H:ClassInitialization=com.sun.jndi.dns.DnsClient:run_time,io.netty.handler.ssl.ConscryptAlpnSslEngine:run_time,io.netty.handler.ssl.JettyNpnSslEngine:run_time,io.netty.handler.ssl.ReferenceCountedOpenSslEngine:run_time,io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator:run_time,io.netty.handler.ssl.ReferenceCountedOpenSslServerContext:run_time,io.netty.handler.ssl.ReferenceCountedOpenSslClientContext:run_time,io.netty.handler.ssl.util.BouncyCastleSelfSignedCertGenerator:run_time,io.netty.handler.ssl.ReferenceCountedOpenSslContext:run_time,io.micronaut.buffer.netty.NettyByteBufferFactory:run_time,io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine:run_time,io.netty.handler.ssl.JettyAlpnSslEngine$ServerEngine:run_time' \\\r\n -H:ReflectionConfigurationResources=META-INF/native-image/io.micronaut/http-netty/reflection-config.json \\\r\n -H:ClassInitialization=io.micronaut.reactive.reactor.ReactorInstrumentation:run_time \\\r\n -H:ClassInitialization=ch.qos.logback:build_time,com.fasterxml.jackson:build_time,io.micronaut:build_time,io.reactivex:build_time,org.reactivestreams:build_time,org.slf4j:build_time,org.yaml.snakeyaml:build_time,javax:build_time \\\r\n -H:ReflectionConfigurationResources=META-INF/native-image/io.micronaut/health/reflection-config.json \\\r\n -H:IncludeResources=freemarker/version.properties \\\r\n -H:ClassInitialization=freemarker:build_time \\\r\n -H:ClassInitialization=freemarker.ext.jython.JythonWrapper:run_time,freemarker.ext.jython.JythonModel:run_time \\\r\n '-H:IncludeResources=logback.xml|application.yml|public/.*|views/.*' \\\r\n -H:Name=views-graal-freemarker \\\r\n -H:Class=example.micronaut.Application \\\r\n -H:ReflectionConfigurationResources=META-INF/native-image/example/micronaut/reflection-config.json \\\r\n -H:+DumpTargetInfo \\\r\n -H:CLibraryPath=/builds/micronaut-projects/micronaut-graal-tests/graal_dist/jre/lib/svm/clibraries/linux-amd64 \\\r\n ]\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2448", "user": "ilopmar", "labels": ["bug", "native-image"], "created": "2020-05-11 07:38:31", "closed": "2020-05-15 20:39:56", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "[Regression+", "body": "**Describe the issue**\r\n\r\nOur CI pipeline has \r\n\r\n\r\n\r\nhttps://github.com/oracle/graal/commit/8ca1b396e3c69794320b9992e93082606845c75e\r\n\r\n\r\nA clear and concise description of the issue. We recommend using the [latest snapshot builds](https://github.com/graalvm/graalvm-ce-dev-builds/releases) to replicate the issue as  bugs are constantly being fixed in the master branch\r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\n1. **[e.g.: git clone --depth 1 https://git.myrepo.com/projectone ]**\r\n2. **[e.g.: mvn clean package]**\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM version (latest snapshot builds can be found [here](https://github.com/graalvm/graalvm-ce-dev-builds/releases)), or commit id if built from source: **[e.g. EE 19.3, CE 20.0, CE 20.1.0-dev-20200304_0848]**\r\n - JDK major version: **[e.g.:8]**\r\n - OS: **[e.g. macOS Catalina]**\r\n - Architecture: **[e.g.: AMD64]**\r\n\r\n\r\n**More details**\r\nConsider adding the `--native-image-info` and  `--verbose` flags when building your native image and paste output below.\r\n\r\nAdd any other information about the problem here. Especially important are stack traces or log output. Feel free to link to gists or to screenshots if necessary.\r\n```\r\n    PASTE YOUR LOG/STACK TRACE HERE\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2447", "user": "ilopmar", "labels": ["bug", "native-image"], "created": "2020-05-11 07:14:34", "closed": "2020-05-11 07:14:59", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "javac crash on fastdebug graalvm with libgraal", "body": "**Describe the issue**\r\nI build graalvm with libgraal and fastdebug jvmci jdk. But the javac command will crash by assertion\r\n\"assert(value != badJNIHandle) failed: Pointing to zapped jni handle area\"\r\n\r\n**Steps to reproduce the issue**\r\n1 Download jvmci-20.1-b02-fastdebug from https://github.com/graalvm/graal-jvmci-8/releases/download/jvmci-20.1-b02/openjdk-8u252+09-jvmci-20.1-b02-fastdebug-linux-amd64.tar.gz\r\n2 clone graalvm and mx repository\r\n   checkout to release/graal-vm/20.1  ,this error will also crash in latest code.\r\n3 build with libgraal\r\n   cd graalvm/vm\r\n   JAVA_HOME=<jdk_fastdebug> mx --env libgraal build\r\n4 run javac in result graalvm\r\n  cd latest_graalvm/graalvm-libgraal-java8-20.1.0-dev/bin\r\n  ./javac\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM version [built from 20.1.0]\r\n - JDK major version: [8]\r\n - OS: [Linux CentOS 7]\r\n - Architecture: [AMD64]\r\n\r\n\r\n**More details**\r\n```\r\n#\r\n# A fatal error has been detected by the Java Runtime Environment:\r\n#\r\n#  Internal Error (/b/b/e/main/graal-jvmci-8/src/share/vm/runtime/jniHandles.hpp:220), pid=119184, tid=0x00007f65dd233700\r\n#  assert(value != badJNIHandle) failed: Pointing to zapped jni handle area\r\n#\r\n# JRE version: OpenJDK Runtime Environment (8.0_252-b09) (build 1.8.0_252-b09)\r\n# Java VM: OpenJDK 64-Bit Server VM GraalVM LIBGRAAL 20.1.0-dev (25.252-b09-jvmci-20.1-b02-fastdebug mixed mode linux-amd64 compressed oops)\r\n# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try \"ulimit -c unlimited\" before starting Java again\r\n#\r\n# If you would like to submit a bug report, please visit:\r\n#   https://github.com/oracle/graal/issues\r\n#\r\n\r\n---------------  T H R E A D  ---------------\r\n\r\nCurrent thread (0x00007f6740213000):  JavaThread \"JVMCI-native CompilerThread11\" daemon [_thread_in_vm, id=119266, stack(0x00007f65dd034000,0x00007f65dd234000)]\r\n\r\nStack: [0x00007f65dd034000,0x00007f65dd234000],  sp=0x00007f65dd231b00,  free space=2038k\r\nNative frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\r\nV  [libjvm.so+0x12094cf]  VMError::report_and_die()+0x2bf\r\nV  [libjvm.so+0x7977b1]  report_vm_error(char const*, int, char const*, char const*)+0x61\r\nV  [libjvm.so+0xa8ecb9]  SignatureChekker::do_object(int, int)+0x689\r\nV  [libjvm.so+0x10a1be3]  SignatureIterator::iterate_parameters()+0x3f3\r\nV  [libjvm.so+0xa8987b]  JavaCallArguments::verify(methodHandle, BasicType)+0x1eb\r\nV  [libjvm.so+0xa8a565]  JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*)+0xb15\r\nV  [libjvm.so+0xaad9ae]  jni_invoke_static(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .isra.98] [clone .constprop.109]+0x43e\r\nV  [libjvm.so+0xacfa09]  jni_CallStaticVoidMethodA+0x179\r\nC  [libjvmcicompiler.so+0x74362b]\r\n\r\n\r\nCurrent CompileTask:\r\nJVMCI-native:    440   32       4       java.lang.Object::<init> (1 bytes)\r\n\r\n\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2439", "user": "kuaiwei", "labels": ["bug"], "created": "2020-05-07 04:08:58", "closed": "2020-06-29 02:43:03", "commits": {}, "ttf": 52.000277777777775, "commitsDetails": []}, {"title": "Static field changed error that wasn't there before in earlier 20.1 builds", "body": "**Describe the issue**\r\nWe have a Spring webflux-r2dbc sample. It was working fine with Graal 20.1 dev release 20200419 but it fails with 20200506. The failure looks like this:\r\n```\r\n[webflux-r2dbc:36675]        image:   3,045.46 ms,  7.54 GB\r\nFatal error:com.oracle.svm.core.util.VMError$HostedError: com.oracle.svm.core.util.UserError$UserException: Static field or an object referenced from a static field changed during native image generation?\r\n  object:[Ljava.lang.reflect.TypeVariable;@59ca0b26  of class: java.lang.reflect.TypeVariable[]\r\n  reachable through:\r\n    object: sun.reflect.generics.repository.MethodRepository@76d3e68c  of class: sun.reflect.generics.repository.MethodRepository\r\n    object: public abstract reactor.core.publisher.Mono org.springframework.data.repository.reactive.ReactiveCrudRepository.deleteAll(org.reactivestreams.Publisher)  of class: java.lang.reflect.Method\r\n    root: HostedField<$Proxy221.m6 location: 3632   AnalysisField<$Proxy221.m6 accessed: false reads: true written: true>>\r\n\r\n\tat com.oracle.svm.core.util.VMError.shouldNotReachHere(VMError.java:72)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:647)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:451)\r\n\tat java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1386)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: com.oracle.svm.core.util.UserError$UserException: Static field or an object referenced from a static field changed during native image generation?\r\n  object:[Ljava.lang.reflect.TypeVariable;@59ca0b26  of class: java.lang.reflect.TypeVariable[]\r\n  reachable through:\r\n    object: sun.reflect.generics.repository.MethodRepository@76d3e68c  of class: sun.reflect.generics.repository.MethodRepository\r\n    object: public abstract reactor.core.publisher.Mono org.springframework.data.repository.reactive.ReactiveCrudRepository.deleteAll(org.reactivestreams.Publisher)  of class: java.lang.reflect.Method\r\n    root: HostedField<$Proxy221.m6 location: 3632   AnalysisField<$Proxy221.m6 accessed: false reads: true written: true>>\r\n\r\n\tat com.oracle.svm.core.util.UserError.abort(UserError.java:68)\r\n\tat com.oracle.svm.hosted.image.NativeImageHeapWriter.verifyTargetDidNotChange(NativeImageHeapWriter.java:130)\r\n\tat com.oracle.svm.hosted.image.NativeImageHeapWriter.writeReference(NativeImageHeapWriter.java:158)\r\n\tat com.oracle.svm.hosted.image.NativeImageHeapWriter.write(NativeImageHeapWriter.java:147)\r\n\tat com.oracle.svm.hosted.image.NativeImageHeapWriter.writeField(NativeImageHeapWriter.java:141)\r\n\tat com.oracle.svm.hosted.image.NativeImageHeapWriter.writeObject(NativeImageHeapWriter.java:344)\r\n\tat com.oracle.svm.hosted.image.NativeImageHeapWriter.writeHeap(NativeImageHeapWriter.java:89)\r\n\tat com.oracle.svm.hosted.image.NativeBootImage.build(NativeBootImage.java:483)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:636)\r\n\t... 6 more\r\n```\r\nI can't tell if it is an app problem or a graalvm problem.  The `shouldNotReachHere` in the stack trace perhaps suggests something graalvm really didn't think it would encounter? I half wondered if related to the changes that have gone in around proxy interfaces and initialization?  Can it just be an app issue about specifying the right run/build time initialization? (If so, can the message be a bit clearer?)\r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\n1. git clone https://github.com/spring-projects-experimental/spring-graal-native\r\n2. cd spring-graal-native\r\n3. ./build.sh\r\n4. cd spring-graal-native-samples/webflux-r2dbc\r\n5. mvn -Pgraal clean package\r\n\r\n**Describe GraalVM and your environment:**\r\n - Works on 20.1 (Java8):  20200419. Fails on 20.1 (Java8) 20200506\r\n - JDK major version: 8\r\n - OS: MacOS Catalina (and seen on Linux)\r\n\r\n\r\n**More details**\r\nConsider adding the `--native-image-info` and  `--verbose` flags when building your native image and paste output below.\r\n\r\nAdd any other information about the problem here. Especially important are stack traces or log output. Feel free to link to gists or to screenshots if necessary.\r\n```\r\n\r\n[webflux-r2dbc:36675]        image:   3,045.46 ms,  7.54 GB\r\nFatal error:com.oracle.svm.core.util.VMError$HostedError: com.oracle.svm.core.util.UserError$UserException: Static field or an object referenced from a static field changed during native image generation?\r\n  object:[Ljava.lang.reflect.TypeVariable;@59ca0b26  of class: java.lang.reflect.TypeVariable[]\r\n  reachable through:\r\n    object: sun.reflect.generics.repository.MethodRepository@76d3e68c  of class: sun.reflect.generics.repository.MethodRepository\r\n    object: public abstract reactor.core.publisher.Mono org.springframework.data.repository.reactive.ReactiveCrudRepository.deleteAll(org.reactivestreams.Publisher)  of class: java.lang.reflect.Method\r\n    root: HostedField<$Proxy221.m6 location: 3632   AnalysisField<$Proxy221.m6 accessed: false reads: true written: true>>\r\n\r\n\tat com.oracle.svm.core.util.VMError.shouldNotReachHere(VMError.java:72)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:647)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:451)\r\n\tat java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1386)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: com.oracle.svm.core.util.UserError$UserException: Static field or an object referenced from a static field changed during native image generation?\r\n  object:[Ljava.lang.reflect.TypeVariable;@59ca0b26  of class: java.lang.reflect.TypeVariable[]\r\n  reachable through:\r\n    object: sun.reflect.generics.repository.MethodRepository@76d3e68c  of class: sun.reflect.generics.repository.MethodRepository\r\n    object: public abstract reactor.core.publisher.Mono org.springframework.data.repository.reactive.ReactiveCrudRepository.deleteAll(org.reactivestreams.Publisher)  of class: java.lang.reflect.Method\r\n    root: HostedField<$Proxy221.m6 location: 3632   AnalysisField<$Proxy221.m6 accessed: false reads: true written: true>>\r\n\r\n\tat com.oracle.svm.core.util.UserError.abort(UserError.java:68)\r\n\tat com.oracle.svm.hosted.image.NativeImageHeapWriter.verifyTargetDidNotChange(NativeImageHeapWriter.java:130)\r\n\tat com.oracle.svm.hosted.image.NativeImageHeapWriter.writeReference(NativeImageHeapWriter.java:158)\r\n\tat com.oracle.svm.hosted.image.NativeImageHeapWriter.write(NativeImageHeapWriter.java:147)\r\n\tat com.oracle.svm.hosted.image.NativeImageHeapWriter.writeField(NativeImageHeapWriter.java:141)\r\n\tat com.oracle.svm.hosted.image.NativeImageHeapWriter.writeObject(NativeImageHeapWriter.java:344)\r\n\tat com.oracle.svm.hosted.image.NativeImageHeapWriter.writeHeap(NativeImageHeapWriter.java:89)\r\n\tat com.oracle.svm.hosted.image.NativeBootImage.build(NativeBootImage.java:483)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:636)\r\n\t... 6 more\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2438", "user": "aclement", "labels": ["bug", "native-image", "spring"], "created": "2020-05-06 19:17:18", "closed": "2020-05-08 16:53:03", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "object files can't be inspected with nm/otool/objdump", "body": "**Describe the issue**\r\nobject files generated by native-image for Darwin can not be inspected with tools like nm, otool or objdump, since the headers are not set correctly:\r\n\r\nnm: error: hello.helloworld.o truncated or malformed object (load command 0 filesize field in LC_SEGMENT_64 greater than vmsize field)\r\n\r\n\r\n**Steps to reproduce the issue**\r\n`native-image -H:+ExitAfterRelocatableImageWrite -H:+SharedLibrary hello.HelloWorld` generates the object file that can't be inspected with `nm`\r\n\r\n**Describe GraalVM and your environment:**\r\nmaster", "url": "https://github.com/oracle/graal/issues/2435", "user": "johanvos", "labels": ["bug", "native-image"], "created": "2020-05-05 07:33:48", "closed": "2020-05-15 13:13:49", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "Despite delaying missing classes issues to runtime, Spring sample causes native-image failure at build time", "body": "**Describe the issue**\r\nThe spring feature is setting `--allow-incomplete-classpath --report-unsupported-elements-at-runtime` however, at image build time it is producing this error:\r\n\r\n```\r\nCaused by: java.lang.NoClassDefFoundError: org/apache/catalina/Manager\r\n\tat java.lang.Class.getDeclaredMethods0(Native Method)\r\n\tat java.lang.Class.privateGetDeclaredMethods(Class.java:2701)\r\n\tat java.lang.Class.getDeclaredMethod(Class.java:2128)\r\n\tat com.oracle.svm.hosted.substitute.AnnotationSubstitutionProcessor.findOriginalMethod(AnnotationSubstitutionProcessor.java:624)\r\n\tat com.oracle.svm.hosted.substitute.AnnotationSubstitutionProcessor.handleMethodInAliasClass(AnnotationSubstitutionProcessor.java:330)\r\n\tat com.oracle.svm.hosted.substitute.AnnotationSubstitutionProcessor.handleAliasClass(AnnotationSubstitutionProcessor.java:302)\r\n\tat com.oracle.svm.hosted.substitute.AnnotationSubstitutionProcessor.handleClass(AnnotationSubstitutionProcessor.java:274)\r\n\tat com.oracle.svm.hosted.substitute.AnnotationSubstitutionProcessor.init(AnnotationSubstitutionProcessor.java:230)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.createDeclarativeSubstitutionProcessor(NativeImageGenerator.java:908)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.setupNativeImage(NativeImageGenerator.java:838)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:536)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:451)\r\n\tat java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1386)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\n```\r\n\r\nThe `Manager` class is not on the classpath. Looks like `com.oracle.svm.hosted.substitute.AnnotationSubstitutionProcessor.findOriginalMethod(AnnotationSubstitutionProcessor.java:624)` can't cope with that.\r\n\r\n**Steps to reproduce the issue**\r\n1. git clone git@github.com:spring-projects-experimental/spring-graal-native.git\r\n2. cd spring-graal-native\r\n3. git checkout actuator\r\n4. ./build.sh\r\n5. cd spring-graal-native-samples/actuator\r\n6. ./build.sh\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM version from 20.1 branch, commit today 4-May # 9c4a37042d7a4296\r\n - JDK major version: 8\r\n - OS: macOS Catalina\r\n\r\n**More details**\r\nConsider adding the `--native-image-info` and  `--verbose` flags when building your native image and paste output below.\r\n\r\nAdd any other information about the problem here. Especially important are stack traces or log output. Feel free to link to gists or to screenshots if necessary.\r\n```\r\n[actuator:29850]        setup:     455.15 ms,  1.92 GB\r\nFatal error:java.lang.NoClassDefFoundError\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat java.util.concurrent.ForkJoinTask.getThrowableException(ForkJoinTask.java:598)\r\n\tat java.util.concurrent.ForkJoinTask.get(ForkJoinTask.java:1005)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:463)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:359)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:518)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:117)\r\nCaused by: java.lang.NoClassDefFoundError: org/apache/catalina/Manager\r\n\tat java.lang.Class.getDeclaredMethods0(Native Method)\r\n\tat java.lang.Class.privateGetDeclaredMethods(Class.java:2701)\r\n\tat java.lang.Class.getDeclaredMethod(Class.java:2128)\r\n\tat com.oracle.svm.hosted.substitute.AnnotationSubstitutionProcessor.findOriginalMethod(AnnotationSubstitutionProcessor.java:624)\r\n\tat com.oracle.svm.hosted.substitute.AnnotationSubstitutionProcessor.handleMethodInAliasClass(AnnotationSubstitutionProcessor.java:330)\r\n\tat com.oracle.svm.hosted.substitute.AnnotationSubstitutionProcessor.handleAliasClass(AnnotationSubstitutionProcessor.java:302)\r\n\tat com.oracle.svm.hosted.substitute.AnnotationSubstitutionProcessor.handleClass(AnnotationSubstitutionProcessor.java:274)\r\n\tat com.oracle.svm.hosted.substitute.AnnotationSubstitutionProcessor.init(AnnotationSubstitutionProcessor.java:230)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.createDeclarativeSubstitutionProcessor(NativeImageGenerator.java:908)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.setupNativeImage(NativeImageGenerator.java:838)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:536)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:451)\r\n\tat java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1386)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: java.lang.ClassNotFoundException: org.apache.catalina.Manager\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:382)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:418)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:351)\r\n\t... 17 more\r\nError: Image build request failed with exit status 1\r\ncom.oracle.svm.driver.NativeImage$NativeImageError: Image build request failed with exit status 1\r\n\tat com.oracle.svm.driver.NativeImage.showError(NativeImage.java:1541)\r\n\tat com.oracle.svm.driver.NativeImage.build(NativeImage.java:1299)\r\n\tat com.oracle.svm.driver.NativeImage.performBuild(NativeImage.java:1260)\r\n\tat com.oracle.svm.driver.NativeImage.main(NativeImage.java:1219)\r\n\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2434", "user": "aclement", "labels": ["bug", "native-image", "spring"], "created": "2020-05-04 17:56:51", "closed": "2020-05-13 15:03:24", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Native image debug line info wrongly attributed when using gdb 9.1", "body": "gdb 9.1 appears to be associating method code addresses with the wrong line numbers when presented with a native image containing debug info. An objdump of the binary indicates that the debug_lineinfo DWARF data has the correct line numbers. Also, the mismatch does not occur when debugging the same generated image with gdb 8.3. So, this may be a bug in gdb.\r\n\r\n\r\n1. Clone latest graalvm repo and mx build\r\n2. Write a simple Hello World program in Hello.java\r\n3. Compile it `javac Hello.java`\r\n4. Generate a native image with debug info  `mx native-image -J-ea -J-esa  -H:GenerateDebugInfo=1 Hello`\r\n5. Start the debugger `gdb hello`\r\n6. Set up the directories path `(gdb) set directories=sources/src:sources/graal:sources/jdk`\r\n7. Break main `(gdb) break Hello::main` Note that a breakpoint address is printed but the breakpoint file or line is omitted (whereas it is correctly printed using gdb 8.3)\r\n8. Run to breakpoint `(gdb) run` Note that when the breakpoint is it the breakpoint file and line are printed but the line number is incorrect and the listed line is incorrect (the line is correctly printed using gdb 8.3)\r\n\r\nGraalVM version: latest head\r\ncommit 7062562ab88e167aecf647b3f36cbf5407952b26 (HEAD -> master, upstream/master, origin/master, origin/HEAD)\r\nMerge: 1a74b765c01 366f8294fd0\r\nAuthor: Andreas Woess <andreas.woess@oracle.com>\r\nDate:   Tue Apr 28 12:41:16 2020 +0000\r\n\r\n    [GR-22978] Intrinsify MethodHandleImpl.isCompileConstant.\r\n    \r\n    PullRequest: graal/6087\r\n\r\nJDK version:\r\nopenjdk version \"11.0.7\" 2020-04-14\r\nOpenJDK Runtime Environment (build 11.0.7+10-jvmci-20.1-b02)\r\nOpenJDK 64-Bit Server VM (build 11.0.7+10-jvmci-20.1-b02, mixed mode)\r\n\r\ngdb version:\r\nGNU gdb (GDB) Fedora 9.1-3.fc32\r\n\r\n", "url": "https://github.com/oracle/graal/issues/2431", "user": "adinn", "labels": ["bug", "native-image"], "created": "2020-05-04 10:19:46", "closed": "2020-06-16 16:05:06", "commits": {}, "ttf": 43.000277777777775, "commitsDetails": []}, {"title": "Linux CCompilerInvoker not working if locale is not english", "body": "**Describe the issue**\r\nA clear and concise description of the issue. We recommend using the [latest snapshot builds](https://github.com/graalvm/graalvm-ce-dev-builds/releases) to replicate the issue as  bugs are constantly being fixed in the master branch\r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\n1. Set locale to not English or C, German for example\r\n2. Try to run native-image\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM version or commit id if built from source:\r\n```\r\nopenjdk version \"11.0.5\" 2019-10-15\r\nOpenJDK Runtime Environment (build 11.0.5+10-jvmci-19.3-b05-LTS)\r\nOpenJDK 64-Bit Server VM GraalVM 20.1.0-dev (build 11.0.5+10-jvmci-19.3-b05-LTS, mixed mode, sharing)\r\n```\r\nhttps://download2.gluonhq.com/substrate/graalvm/graalvm-svm-linux-20.1.0-ea+26.zip\r\n - JDK major version: 11\r\n - OS: Arch Linux\r\n - Architecture: AMD64\r\n\r\n\r\n**More details**\r\nNative image fails to find C compiler because `gcc -v` returns localized output.\r\nFix: add env. variable `LC_ALL=C` before executing command\r\nhttps://github.com/oracle/graal/blob/master/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/codegen/CCompilerInvoker.java#L320", "url": "https://github.com/oracle/graal/issues/2416", "user": "XakepSDK", "labels": ["bug", "native-image"], "created": "2020-04-29 17:15:35", "closed": "2020-05-04 14:18:34", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Several AOT jtreg tests fail both on x86_64 and aarch64.", "body": "**Describe the issue**\r\nFollowing six AOT jtreg tests fail recently:\r\n\r\n    hotspot/jtreg/compiler/aot/calls/fromAot/AotInvokeSpecial2AotTest.java\r\n    hotspot/jtreg/compiler/aot/calls/fromAot/AotInvokeSpecial2InterpretedTest.java\r\n    hotspot/jtreg/compiler/aot/calls/fromAot/AotInvokeSpecial2NativeTest.java\r\n    hotspot/jtreg/compiler/aot/calls/fromAot/AotInvokeStatic2AotTest.java\r\n    hotspot/jtreg/compiler/aot/calls/fromAot/AotInvokeStatic2InterpretedTest.java\r\n    hotspot/jtreg/compiler/aot/calls/fromAot/AotInvokeStatic2NativeTest.java\r\n\r\nThe error happens when compiler a class with `jaotc`:\r\n\r\n    Compiling AotInvokeSpecial2AotTest.so...\r\n    1 classes found (219 ms)\r\n    8 methods total, 6 methods to compile (158 ms)\r\n    Compiling with 16 threads\r\n    .Error: Failed compilation: compiler.calls.common.InvokeSpecial.caller()V: org.graalvm.compiler.debug.GraalError: Unsupported object constant type: HotSpotType<Ljava/lang/Class;, resolved>\r\n\r\nCommand line:\r\n\r\n     $(jdk_home)/bin/jaotc -J-ea -J-esa -J-Xmx768m -J-server -J-Dgraalunit.libs=$(jdk_build_path)/images/jdk/../test/hotspot/jtreg/graal -J-XX:+UnlockExperimentalVMOptions -J-XX:+EnableJVMCI -J-XX:+UseJVMCICompiler -J-Djvmci.Compiler=graal -J-Djdk.test.docker.image.name=ubuntu -J-Djdk.test.docker.image.version=18.04 -J-Djava.net.preferIPv4Stack=true -J-XX:+UnlockDiagnosticVMOptions -J-XX:+WhiteBoxAPI -J-Xbootclasspath/a:. -J-classpath -J$(jtwork_path)/classes/8/compiler/aot/calls/fromAot/AotInvokeSpecial2AotTest.d:$(jtwork_path)/classes/8/test/lib:$(jtwork_path)/classes/8/testlibrary:$(jtwork_path)/classes/8:$(jdk_src_path)/test/hotspot/jtreg/compiler/aot/calls/fromAot --compile-with-assertions --info --output AotInvokeSpecial2AotTest.so --class-name compiler.calls.common.InvokeSpecial -J-ea -J-esa -J-Xmixed]\r\n\r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\n1. hg clone https://hg.openjdk.java.net/jdk/jdk/\r\n2. mx --java-home=$jdk_home  updategraalinopenjdk  $jdk_src 15\r\n3. configure & make images & make test-image-hotspot-jtreg-native & make test-image-hotspot-gtest & make test-image-hotspot-jtreg-graal\r\n4. install jtreg and run\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM version: graal master\r\n - JDK major version: **15**\r\n - OS: **[linux]**\r\n - Architecture: **[aarch64/x86_64]**\r\n\r\n\r\n**More details**\r\nIt seems the issue is caused by this commit:\r\n```\r\n    commit ba46378680dd177214b9446b82e085d707e942c3\r\n    [GR-19575] [GR-21626] [GR-21627] Tighten framestate invariants in the compiler. \r\n    PullRequest: graal/5639\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2410", "user": "XiaohongGong", "labels": ["bug"], "created": "2020-04-28 10:39:29", "closed": "2020-05-26 03:25:20", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "float values are always 0.0f when passed down as a variable from JNI to Java", "body": "**Describe the issue**\r\nWhen passing down a float variable from a native JNI method to the JVM layer, the value in JVM will always be 0.0f instead of the actual float value in JNI. The linked project uses `env->NewObject()` to construct a new instance of a Java class while passing a float value to the constructor. The value of this float in the Java-side is always 0.0f instead of 1.0f.\r\n\r\n**Steps to reproduce the issue**\r\n1. git clone https://github.com/tiainen/graalvm-native-float-issue.git\r\n2. follow instructions in README.me\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM version: CE 20.2.0-dev-20200426_0411 (master commit [a64f618](https://github.com/graalvm/graalvm-ce-dev-builds/commit/a64f61897596074220f8d462f9d20168fc14d053))\r\n - JDK major version: 11 (using OpenJDK 11.0.6)\r\n - OS: Windows 10\r\n - Architecture: x64\r\n\r\n**More details**\r\nThere are no other issues or stack traces. We can only see that the value of the floats are always 0.0f. When running the program directly via `java`, the float values are passed down correctly.\r\n", "url": "https://github.com/oracle/graal/issues/2406", "user": "tiainen", "labels": ["bug", "native-image"], "created": "2020-04-27 20:37:52", "closed": "2020-05-07 19:21:54", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "Results of AnnotatedElement.getDeclaredAnnotations() can be an array with null entries", "body": "**Describe the issue**\r\nWith either the recent 20.1 graal dev release build or master (commit 78f22e7892) some of the Spring samples have started failing (notably webflux-netty). This appears to be due to a call to `AnnotatedElement.getDeclaredAnnotations()` made on a spring `RestController` annotation type returning an array with null entries:\r\n```\r\nannotation number 0 is @java.lang.annotation.Retention\r\nannotation number 1 is null\r\nannotation number 2 is null\r\nannotation number 3 is @java.lang.annotation.Target\r\n```\r\nwhen it previously returned:\r\n```\r\nannotation number 0 is @java.lang.annotation.Target\r\nannotation number 1 is @java.lang.annotation.Retention\r\nannotation number 2 is @org.springframework.stereotype.Controller\r\nannotation number 3 is @org.springframework.web.bind.annotation.ResponseBody\r\n```\r\n\r\nEsteban thought it might be related to fix for #2243\r\n\r\nCode is tripping up over the null entries.\r\n\r\n**Steps to reproduce the issue**\r\n```\r\ngit clone git@github.com:spring-projects-experimental/spring-graal-native.git\r\ncd spring-graal-native\r\n./build.sh\r\ncd spring-graal-native-samples/webflux-netty\r\n./build.sh\r\n```\r\n**Describe GraalVM and your environment:**\r\n- Graal 20.1 dev build (20200419) or master ( commit 78f22e7892)\r\n- JDK8\r\n- MacOS Catalina\r\n\r\n**More details**\r\nThe spring app will fail with messages like this:\r\n```\r\n2020-04-27 08:25:16.496  INFO 56025 --- [ctor-http-nio-2] o.s.core.annotation.MergedAnnotation     : Failed to introspect annotations on class com.example.demo.DemoApplication$Foo: java.lang.NullPointerException\r\n```\r\nBut the NPE is caused by tripping over the nulls in the array shown above. ", "url": "https://github.com/oracle/graal/issues/2405", "user": "aclement", "labels": ["bug", "native-image", "spring"], "created": "2020-04-27 15:26:52", "closed": "2020-04-28 18:14:45", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "[OpenJDK 11u] HelloWorld native-image generation fails with enabled assertions", "body": "A graal VM built from OpenJDK 11u (upcoming 11.0.8) will hit an assertion on generating native images. A simple `HelloWorld` will do. I'm setting `java.vm.version` to a version which looks like a released version of OpenJDK so as to actually enable assertions at runtime. Developer builds won't show this issue.\r\n\r\nReproducer:\r\n```\r\n$ ./substratevm/svmbuild/vm/bin/native-image -J-Djava.vm.version=11.0.8+1 -J-ea -cp substratevm HelloWorld foo-bar\r\nException in thread \"main\" jdk.vm.ci.common.JVMCIError: VM config values not expected to be present in JDK 11 linux-amd64 (java.home=/disk/graal/upstream-sources/graal/sdk/mxbuild/linux-amd64/GRAALVM_E6EC3842EE_JAVA11/graalvm-e6ec3842ee-java11-20.2.0-dev, java.vm.name=OpenJDK 64-Bit Server VM, java.vm.version=11.0.8+1):\r\n    AVX3Threshold at jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.GraalHotSpotVMConfig.<init>(GraalHotSpotVMConfig.java:157) [value: 4096]\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.GraalHotSpotVMConfigAccess.reportErrors(GraalHotSpotVMConfigAccess.java:224)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.GraalHotSpotVMConfig.<init>(GraalHotSpotVMConfig.java:67)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.HotSpotGraalRuntime.<init>(HotSpotGraalRuntime.java:161)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.HotSpotGraalCompilerFactory.createCompiler(HotSpotGraalCompilerFactory.java:156)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.HotSpotGraalCompilerFactory.createCompiler(HotSpotGraalCompilerFactory.java:134)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.HotSpotGraalCompilerFactory.createCompiler(HotSpotGraalCompilerFactory.java:52)\r\n\tat jdk.internal.vm.ci/jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.getCompiler(HotSpotJVMCIRuntime.java:425)\r\n\tat com.oracle.svm.hosted.c.GraalAccess.getGraalCapability(GraalAccess.java:50)\r\n\tat com.oracle.svm.hosted.c.GraalAccess.getOriginalTarget(GraalAccess.java:38)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.isValidArchitecture(NativeImageGeneratorRunner.java:221)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.verifyValidJavaVersionAndPlatform(NativeImageGeneratorRunner.java:426)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:232)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:518)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:117)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner$JDK9Plus.main(NativeImageGeneratorRunner.java:546)\r\nError: Image build request failed with exit status 1\r\n```\r\n\r\nNote that [JDK-8221092](https://bugs.openjdk.java.net/browse/JDK-8221092) got backported to OpenJDK 11.0.6 which introduced this flag.", "url": "https://github.com/oracle/graal/issues/2402", "user": "jerboaa", "labels": ["bug", "native-image"], "created": "2020-04-27 12:01:28", "closed": "2020-04-28 18:26:38", "commits": {"d6f415f48b6cc8c12182e1dd1025099b5bcf253a": {"commitGHEventType": "closed", "commitUser": "graalvmbot"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "d6f415f48b6cc8c12182e1dd1025099b5bcf253a", "commitGHEventType": "closed", "commitUser": "graalvmbot", "commitParents": ["854e3956a955f9773b168bcf254c02e6b9c8bdfc"], "nameRev": "d6f415f48b6cc8c12182e1dd1025099b5bcf253a tags/JDK-8243380~208^2^2", "commitMessage": "Expect AVX3Threshold on all JDKs >= 11.0.6 or JDK >= 14\n\nInstead of conditionalizing flag AVX3Threshold on a JVMCI-versioned\nJDK 11, expect it for any JDK 11 >= 11.0.6\n\nCloses #2402\n", "commitDateTime": "2020-04-28 17:05:49", "authoredDateTime": "2020-04-27 14:03:41", "commitGitStats": [{"filePath": "compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/GraalHotSpotVMConfig.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/GraalHotSpotVMConfigAccess.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "compiler/src/org.graalvm.compiler.serviceprovider.jdk11/src/org/graalvm/compiler/serviceprovider/GraalServices.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "compiler/src/org.graalvm.compiler.serviceprovider.jdk13/src/org/graalvm/compiler/serviceprovider/GraalServices.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "compiler/src/org.graalvm.compiler.serviceprovider.jdk8/src/org/graalvm/compiler/serviceprovider/GraalServices.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "compiler/src/org.graalvm.compiler.serviceprovider/src/org/graalvm/compiler/serviceprovider/GraalServices.java", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraalHotSpotVMConfig.java", "spoonMethods": [{"spoonMethodName": "org.graalvm.compiler.hotspot.GraalHotSpotVMConfig", "TOT": 8, "UPD": 2, "INS": 1, "MOV": 4, "DEL": 1}]}, {"spoonFilePath": "GraalHotSpotVMConfigAccess.java", "spoonMethods": [{"spoonMethodName": "org.graalvm.compiler.hotspot.GraalHotSpotVMConfigAccess", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraalServices.java", "spoonMethods": [{"spoonMethodName": "org.graalvm.compiler.serviceprovider.GraalServices.getJavaUpdateVersion()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d6f415f48b6cc8c12182e1dd1025099b5bcf253a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 35, "deletions": 1, "lines": 36, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 10, "UPD": 2, "INS": 3, "MOV": 4, "DEL": 1, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot", "compiler/src/org.graalvm.compiler.serviceprovider.jdk11/src/org/graalvm/compiler/serviceprovider", "compiler/src/org.graalvm.compiler.serviceprovider.jdk13/src/org/graalvm/compiler/serviceprovider", "compiler/src/org.graalvm.compiler.serviceprovider/src/org/graalvm/compiler/serviceprovider", "compiler/src/org.graalvm.compiler.serviceprovider.jdk8/src/org/graalvm/compiler/serviceprovider"], "changesInPackagesSPOON": ["org.graalvm.compiler.hotspot.GraalHotSpotVMConfigAccess", "org.graalvm.compiler.hotspot.GraalHotSpotVMConfig", "org.graalvm.compiler.serviceprovider.GraalServices.getJavaUpdateVersion()"]}, {"title": "[native-image] \"Static field or an object referenced from a static field changed during native image generation\" (involving java.lang.ref.SoftReference@)", "body": "**Describe the issue**\r\nTrying to generate a native image from a jar file. An external library I use may cause the problem but I cannot figure out what is wrong.\r\n\r\nThe error may be related to this line.\r\nhttps://github.com/hiroga-cc/excel/blob/e797739c0ebb9d61ba0327c0735ea78cba3c7fb5/src/main/kotlin/cc/hiroga/excel/Commands.kt#L21\r\n\r\nThis is the stacktrace\r\n\r\n```\r\nnative-image --report-unsupported-elements-at-runtime -jar build/libs/excel-1.0-SNAPSHOT-all.jar excel --no-server\r\n[excel:60258]    classlist:  21,088.55 ms,  2.31 GB\r\n[excel:60258]        (cap):   3,838.12 ms,  2.31 GB\r\n[excel:60258]        setup:   9,984.70 ms,  2.31 GB\r\n[excel:60258]   (typeflow): 122,211.32 ms,  2.80 GB\r\n[excel:60258]    (objects):  17,201.16 ms,  2.80 GB\r\n[excel:60258]   (features):     952.64 ms,  2.80 GB\r\n[excel:60258]     analysis: 141,092.80 ms,  2.80 GB\r\n[excel:60258]     (clinit):   1,013.39 ms,  2.80 GB\r\n[excel:60258]     universe:   2,396.48 ms,  2.80 GB\r\n[excel:60258]      (parse):  91,949.93 ms,  3.14 GB\r\n[excel:60258]     (inline):   4,115.45 ms,  3.20 GB\r\n[excel:60258]    (compile):  40,709.89 ms,  3.61 GB\r\n[excel:60258]      compile: 138,845.04 ms,  3.61 GB\r\n[excel:60258]        image:   2,638.55 ms,  3.61 GB\r\nFatal error: com.oracle.svm.core.util.VMError$HostedError: com.oracle.svm.core.util.UserError$UserException: Static field or an object referenced from a static field changed during native image generation?\r\n  object:java.lang.ref.SoftReference@7fe86eab  of class: java.lang.ref.SoftReference\r\n  reachable through:\r\n    object: [Ljava.lang.ref.SoftReference;@78f96a49  of class: java.lang.ref.SoftReference[]\r\n    object: Form(Object,Object,int,Object)void  of class: java.lang.invoke.MethodTypeForm\r\n    object: (MethodHandle,Object,int,Object)void  of class: java.lang.invoke.MethodType\r\n    object: MethodHandle(MethodHandle,Object,int,Object)void  of class: java.lang.invoke.DirectMethodHandle\r\n    object: MethodHandle.invokeBasic  of class: java.lang.invoke.LambdaForm$NamedFunction\r\n    object: t5:V  of class: java.lang.invoke.LambdaForm$Name\r\n    object: [Ljava.lang.invoke.LambdaForm$Name;@1a88b58c  of class: java.lang.invoke.LambdaForm$Name[]\r\n    object: MH.delegate=Lambda(a0:L/DelegatingMethodHandle,a1:L,a2:I,a3:L)=>{\r\n    t4:L=DelegatingMethodHandle.getTarget(a0:L);\r\n    t5:V=MethodHandle.invokeBasic(t4:L,a1:L,a2:I,a3:L);void}  of class: java.lang.invoke.LambdaForm\r\n    object: java.lang.ref.SoftReference@280df4a6  of class: java.lang.ref.SoftReference\r\n    object: [Ljava.lang.ref.SoftReference;@3ee645b9  of class: java.lang.ref.SoftReference[]\r\n    object: Form(Object,int,Object)void  of class: java.lang.invoke.MethodTypeForm\r\n    object: (Object[],int,Object)void  of class: java.lang.invoke.MethodType\r\n    object: MethodHandle(Object[],int,Object)void  of class: java.lang.invoke.DirectMethodHandle\r\n    object: MethodHandle(Object[],int,Object)void  of class: java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle\r\n    root: java.lang.invoke.MethodHandleImpl.makeArrayElementAccessor(Class, boolean)\r\n\r\n        at com.oracle.svm.core.util.VMError.shouldNotReachHere(VMError.java:70)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:641)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:445)\r\n        at java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1386)\r\n        at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n        at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n        at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n        at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: com.oracle.svm.core.util.UserError$UserException: Static field or an object referenced from a static field changed during native image generation?\r\n  object:java.lang.ref.SoftReference@7fe86eab  of class: java.lang.ref.SoftReference\r\n  reachable through:\r\n    object: [Ljava.lang.ref.SoftReference;@78f96a49  of class: java.lang.ref.SoftReference[]\r\n    object: Form(Object,Object,int,Object)void  of class: java.lang.invoke.MethodTypeForm\r\n    object: (MethodHandle,Object,int,Object)void  of class: java.lang.invoke.MethodType\r\n    object: MethodHandle(MethodHandle,Object,int,Object)void  of class: java.lang.invoke.DirectMethodHandle\r\n    object: MethodHandle.invokeBasic  of class: java.lang.invoke.LambdaForm$NamedFunction\r\n    object: t5:V  of class: java.lang.invoke.LambdaForm$Name\r\n    object: [Ljava.lang.invoke.LambdaForm$Name;@1a88b58c  of class: java.lang.invoke.LambdaForm$Name[]\r\n    object: MH.delegate=Lambda(a0:L/DelegatingMethodHandle,a1:L,a2:I,a3:L)=>{\r\n    t4:L=DelegatingMethodHandle.getTarget(a0:L);\r\n    t5:V=MethodHandle.invokeBasic(t4:L,a1:L,a2:I,a3:L);void}  of class: java.lang.invoke.LambdaForm\r\n    object: java.lang.ref.SoftReference@280df4a6  of class: java.lang.ref.SoftReference\r\n    object: [Ljava.lang.ref.SoftReference;@3ee645b9  of class: java.lang.ref.SoftReference[]\r\n    object: Form(Object,int,Object)void  of class: java.lang.invoke.MethodTypeForm\r\n    object: (Object[],int,Object)void  of class: java.lang.invoke.MethodType\r\n    object: MethodHandle(Object[],int,Object)void  of class: java.lang.invoke.DirectMethodHandle\r\n    object: MethodHandle(Object[],int,Object)void  of class: java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle\r\n    root: java.lang.invoke.MethodHandleImpl.makeArrayElementAccessor(Class, boolean)\r\n\r\n        at com.oracle.svm.core.util.UserError.abort(UserError.java:68)\r\n        at com.oracle.svm.hosted.image.NativeImageHeapWriter.verifyTargetDidNotChange(NativeImageHeapWriter.java:129)\r\n        at com.oracle.svm.hosted.image.NativeImageHeapWriter.writeReference(NativeImageHeapWriter.java:157)\r\n        at com.oracle.svm.hosted.image.NativeImageHeapWriter.write(NativeImageHeapWriter.java:146)\r\n        at com.oracle.svm.hosted.image.NativeImageHeapWriter.writeConstant(NativeImageHeapWriter.java:183)\r\n        at com.oracle.svm.hosted.image.NativeImageHeapWriter.writeObject(NativeImageHeapWriter.java:375)\r\n        at com.oracle.svm.hosted.image.NativeImageHeapWriter.writeHeap(NativeImageHeapWriter.java:88)\r\n        at com.oracle.svm.hosted.image.NativeBootImage.build(NativeBootImage.java:472)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:630)\r\n        ... 6 more\r\nError: Image build request failed with exit status 1\r\nmake: *** [excel] Error 1\r\n```\r\n\r\n**Steps to reproduce the issue**\r\nPlease run below steps.\r\n1. git clone https://github.com/hiroga-cc/excel\r\n2. make\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM version: graalvm-ce-java8\r\n - JDK major version: openjdk version \"1.8.0_222\"\r\n - OS: macOS 10.15.3\r\n", "url": "https://github.com/oracle/graal/issues/2399", "user": "hiroga-cc", "labels": ["bug", "native-image"], "created": "2020-04-26 23:44:28", "closed": "2020-04-28 05:20:39", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "java.util.Random stops working after a while", "body": "**Describe the issue**\r\nI have a Noise random generator but when it runs under Graal's JVM it stops working after a while.  Not sure if this is a problem in java.lang.Random or some other possible computational error.\r\nThis is NOT related to native-image, just the java that ships with Graal.\r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\n1.Compile program below (javac Noise.java)\r\n2. Run this program (java Noise)\r\n3. Half way thru the output it just outputs zeros.\r\n\r\n```\r\nimport java.util.*;\r\n\r\npublic class Noise {\r\n  // The gradients are the midpoints of the vertices of a cube.\r\n  private static final int grad3[][] = {\r\n    {1,1,0}, {-1,1,0}, {1,-1,0}, {-1,-1,0},\r\n    {1,0,1}, {-1,0,1}, {1,0,-1}, {-1,0,-1},\r\n    {0,1,1}, {0,-1,1}, {0,1,-1}, {0,-1,-1}\r\n  };\r\n  // The gradients are the midpoints of the vertices of a hypercube.\r\n  private static final int grad4[][]= {\r\n    {0,1,1,1},  {0,1,1,-1},  {0,1,-1,1},  {0,1,-1,-1},\r\n    {0,-1,1,1}, {0,-1,1,-1}, {0,-1,-1,1}, {0,-1,-1,-1},\r\n    {1,0,1,1},  {1,0,1,-1},  {1,0,-1,1},  {1,0,-1,-1},\r\n    {-1,0,1,1}, {-1,0,1,-1}, {-1,0,-1,1}, {-1,0,-1,-1},\r\n    {1,1,0,1},  {1,1,0,-1},  {1,-1,0,1},  {1,-1,0,-1},\r\n    {-1,1,0,1}, {-1,1,0,-1}, {-1,-1,0,1}, {-1,-1,0,-1},\r\n    {1,1,1,0},  {1,1,-1,0},  {1,-1,1,0},  {1,-1,-1,0},\r\n    {-1,1,1,0}, {-1,1,-1,0}, {-1,-1,1,0}, {-1,-1,-1,0}\r\n  };\r\n\r\n  // A lookup table to traverse the simplex around a given point in 4D.\r\n  private static final int simplex[][] = {\r\n    {0,1,2,3},{0,1,3,2},{0,0,0,0},{0,2,3,1},{0,0,0,0},{0,0,0,0},{0,0,0,0},{1,2,3,0},\r\n    {0,2,1,3},{0,0,0,0},{0,3,1,2},{0,3,2,1},{0,0,0,0},{0,0,0,0},{0,0,0,0},{1,3,2,0},\r\n    {0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},\r\n    {1,2,0,3},{0,0,0,0},{1,3,0,2},{0,0,0,0},{0,0,0,0},{0,0,0,0},{2,3,0,1},{2,3,1,0},\r\n    {1,0,2,3},{1,0,3,2},{0,0,0,0},{0,0,0,0},{0,0,0,0},{2,0,3,1},{0,0,0,0},{2,1,3,0},\r\n    {0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},\r\n    {2,0,1,3},{0,0,0,0},{0,0,0,0},{0,0,0,0},{3,0,1,2},{3,0,2,1},{0,0,0,0},{3,1,2,0},\r\n    {2,1,0,3},{0,0,0,0},{0,0,0,0},{0,0,0,0},{3,1,0,2},{0,0,0,0},{3,2,0,1},{3,2,1,0}\r\n  };\r\n\r\n  private float dot( int g[], float x, float y ) { return g[0]*x + g[1]*y; }\r\n  private float dot( int g[], float x, float y, float z ) { return g[0]*x + g[1]*y + g[2]*z; }\r\n  private float dot( int g[], float x, float y, float z, float w ) { return g[0]*x + g[1]*y + g[2]*z + g[3]*w; }\r\n\r\n  private static final float F2, G2;\r\n\r\n  private float raw_noise_2d( float x, float y ) {\r\n    // Noise contributions from the three corners\r\n    float n0, n1, n2;\r\n\r\n    // Skew the input space to determine which simplex cell we're in\r\n    // Hairy factor for 2D\r\n    float s = (x + y) * F2;\r\n    int i = (int)Math.floor( x + s );\r\n    int j = (int)Math.floor( y + s );\r\n\r\n    float t = (i + j) * G2;\r\n    // Unskew the cell origin back to (x,y) space\r\n    float X0 = i-t;\r\n    float Y0 = j-t;\r\n    // The x,y distances from the cell origin\r\n    float x0 = x-X0;\r\n    float y0 = y-Y0;\r\n\r\n    // For the 2D case, the simplex shape is an equilateral triangle.\r\n    // Determine which simplex we are in.\r\n    int i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\r\n    if(x0>y0) {i1=1; j1=0;} // lower triangle, XY order: (0,0)->(1,0)->(1,1)\r\n    else {i1=0; j1=1;} // upper triangle, YX order: (0,0)->(0,1)->(1,1)\r\n\r\n    // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\r\n    // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\r\n    // c = (3-sqrt(3))/6\r\n    float x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\r\n    float y1 = y0 - j1 + G2;\r\n    float x2 = x0 - 1.0f + 2.0f * G2; // Offsets for last corner in (x,y) unskewed coords\r\n    float y2 = y0 - 1.0f + 2.0f * G2;\r\n\r\n    // Work out the hashed gradient indices of the three simplex corners\r\n    int ii = i & 255;\r\n    int jj = j & 255;\r\n    int gi0 = perm[ii+perm[jj]] % 12;\r\n    int gi1 = perm[ii+i1+perm[jj+j1]] % 12;\r\n    int gi2 = perm[ii+1+perm[jj+1]] % 12;\r\n\r\n    // Calculate the contribution from the three corners\r\n    float t0 = 0.5f - x0*x0-y0*y0;\r\n    if (t0<0) {\r\n      n0 = 0.0f;\r\n    } else {\r\n      t0 *= t0;\r\n      n0 = t0 * t0 * dot(grad3[gi0], x0, y0); // (x,y) of grad3 used for 2D gradient\r\n    }\r\n\r\n    float t1 = 0.5f - x1*x1-y1*y1;\r\n    if (t1<0) {\r\n      n1 = 0.0f;\r\n    } else {\r\n      t1 *= t1;\r\n      n1 = t1 * t1 * dot(grad3[gi1], x1, y1);\r\n    }\r\n\r\n    float t2 = 0.5f - x2*x2-y2*y2;\r\n    if (t2<0) {\r\n      n2 = 0.0f;\r\n    } else {\r\n      t2 *= t2;\r\n      n2 = t2 * t2 * dot(grad3[gi2], x2, y2);\r\n    }\r\n\r\n    // Add contributions from each corner to get the final noise value.\r\n    // The result is scaled to return values in the interval [-1,1].\r\n    return 70.0f * (n0 + n1 + n2);\r\n  }\r\n\r\n  static {\r\n    F2 = (float)(0.5f * (Math.sqrt(3.0f) - 1.0f));\r\n    G2 = (float)(3.0f - Math.sqrt(3.0f)) / 6.0f;\r\n  }\r\n\r\n  public float noise_2d( float x, float y ) {\r\n    float total = 0;\r\n    float frequency = scale;\r\n    float amplitude = 1;\r\n\r\n    float maxAmplitude = 0;\r\n\r\n    for( int i=0; i < octaves; i++ ) {\r\n      total += raw_noise_2d( x * frequency, y * frequency ) * amplitude;\r\n\r\n      frequency *= 2;\r\n      maxAmplitude += amplitude;\r\n      amplitude *= persistence;\r\n    }\r\n\r\n    return total / maxAmplitude;\r\n  }\r\n\r\n\r\n  private int perm[] = new int[512];\r\n  private int octaves;\r\n  private float persistence, scale;\r\n\r\n  public void init(Random r, int octaves, float persistence, float scale) {\r\n    this.octaves = octaves;\r\n    this.persistence = persistence;\r\n    this.scale = scale;\r\n    for(int a=0;a<256;a++) {\r\n      int val = r.nextInt() & 0xff;\r\n      perm[a] = val;\r\n      perm[a+256] = val;\r\n    }\r\n  }\r\n\r\n\r\n  public static void main(String args[]) {\r\n    Random r = new Random();\r\n    r.setSeed(0);\r\n    Noise n = new Noise();\r\n    n.init(r, 2, 0.5f, 0.01f);\r\n    for(int x=0;x<256;x++) {\r\n      for(int y=0;y<256;y++) {\r\n        float v = n.noise_2d(x,y);\r\n        if (x % 64 == 0) {\r\n          System.out.print(\",\" + v);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM version CE 20.0\r\n - JDK major version: 11\r\n - OS: Win10\r\n - Architecture: AMD64\r\n\r\n**More details**\r\nProgram works fine in stock JDK11 or any other version.\r\nI've tried latest Graal 20.2-dev, no change.", "url": "https://github.com/oracle/graal/issues/2397", "user": "pquiring", "labels": ["bug"], "created": "2020-04-25 01:43:26", "closed": "2020-04-30 16:13:14", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "CNFE failure during native-image build for type not necessary to run the app", "body": "**Describe the issue**\r\nThis is a bit like issue #2355  in that native-image fails with a CNFE for a type that the app doesn't need when running - it is being compiled with `--allow-incomplete-classpath` and `--report-unsupported-elements-at-runtime`. However it seems to be a different codepath leading to the problem related to method handles and possibly invokedynamic. It may be a real issue that needs addressing with a substitution on our side perhaps but if so I'm finding the error message not super helpful. When run in the mode below the feature is definiitely adding more types for reflection/etc than an agent would but I'm surprised if adding one of those should cause native-image to fail in quite such a cryptic way.\r\n\r\n**Steps to reproduce the issue**\r\n1. git clone git@github.com:spring-projects-experimental/spring-graal-native.git\r\n2. with GRAAL on your classpath run `./build.sh` in the project root\r\n3. cd spring-graal-native-samples/commandlinerunner\r\n4. if you run `./build.sh` as is, it will work.\r\n5. Edit compile.sh and in the native-image call delete the line `-Dspring.graal.remove-unused-autoconfig=true \\`\r\n6. This causes the feature to do less trimming of spring config. It is still a valid way to run - it will add more targets for reflection to satisfy these extra configs.\r\n7. Run `./build.sh` again. Get the errors below.\r\n\r\n**Describe GraalVM and your environment:**\r\n- I've tried Graal 20.0 release,  20.1 released dev builds, and my own master build from graal this morning (commit  268c16f23cd52)\r\n- These are Java8\r\n- On MAC\r\n\r\n**More details**\r\nConsider adding the `--native-image-info` and  `--verbose` flags when building your native image and paste output below.\r\n\r\nAdd any other information about the problem here. Especially important are stack traces or log output. Feel free to link to gists or to screenshots if necessary.\r\n```\r\n/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/bin/java \\\r\n-XX:+UseParallelGC \\\r\n-XX:+UnlockExperimentalVMOptions \\\r\n-XX:+EnableJVMCI \\\r\n-Dtruffle.TrustAllTruffleRuntimeProviders=true \\\r\n-Dtruffle.TruffleRuntime=com.oracle.truffle.api.impl.DefaultTruffleRuntime \\\r\n-Dgraalvm.ForcePolyglotInvalid=true \\\r\n-Dgraalvm.locatorDisabled=true \\\r\n-d64 \\\r\n-XX:-UseJVMCIClassLoader \\\r\n-XX:+UseJVMCINativeLibrary \\\r\n-Xss10m \\\r\n-Xms1g \\\r\n-Xmx14g \\\r\n-Duser.country=US \\\r\n-Duser.language=en \\\r\n-Djava.awt.headless=true \\\r\n-Dorg.graalvm.version=20.1.0-dev \\\r\n-Dorg.graalvm.config= \\\r\n-Dcom.oracle.graalvm.isaot=true \\\r\n-Djava.system.class.loader=com.oracle.svm.hosted.NativeImageSystemClassLoader \\\r\n-Xshare:off \\\r\n-Djvmci.class.path.append=/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/jvmci/graal.jar \\\r\n-javaagent:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/svm/builder/svm.jar \\\r\n-Djdk.internal.lambda.disableEagerInitialization=true \\\r\n-Djdk.internal.lambda.eagerlyInitialize=false \\\r\n-Djava.lang.invoke.InnerClassLambdaMetafactory.initializeLambdas=false \\\r\n-Xbootclasspath/a:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/boot/graaljs-scriptengine.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/boot/graal-sdk.jar \\\r\n-cp \\\r\n/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/svm/builder/llvm-wrapper-shadowed.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/svm/builder/svm.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/svm/builder/objectfile.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/svm/builder/llvm-platform-specific-shadowed.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/svm/builder/javacpp-shadowed.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/svm/builder/svm-llvm.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/svm/builder/pointsto.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/jvmci/graal.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/jvmci/graal-management.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/jvmci/jvmci-api.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/jvmci/graal-truffle-jfr-impl.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/jvmci/jvmci-hotspot.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/resources.jar \\\r\ncom.oracle.svm.hosted.NativeImageGeneratorRunner \\\r\n-imagecp \\\r\n/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/boot/graaljs-scriptengine.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/boot/graal-sdk.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/svm/builder/llvm-wrapper-shadowed.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/svm/builder/svm.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/svm/builder/objectfile.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/svm/builder/llvm-platform-specific-shadowed.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/svm/builder/javacpp-shadowed.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/svm/builder/svm-llvm.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/svm/builder/pointsto.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/jvmci/graal.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/jvmci/graal-management.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/jvmci/jvmci-api.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/jvmci/graal-truffle-jfr-impl.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/jvmci/jvmci-hotspot.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/resources.jar:/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/svm/library-support.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/classes:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/spring-boot-autoconfigure-2.3.0.M4.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/spring-aop-5.2.6.BUILD-SNAPSHOT.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/log4j-api-2.13.1.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/spring-context-5.2.6.BUILD-SNAPSHOT.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/spring-beans-5.2.6.BUILD-SNAPSHOT.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/slf4j-api-1.7.30.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/spring-boot-2.3.0.M4.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/logback-classic-1.2.3.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/log4j-to-slf4j-2.13.1.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/snakeyaml-1.26.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/spring-boot-starter-2.3.0.M4.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/jul-to-slf4j-1.7.30.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/spring-jcl-5.2.6.BUILD-SNAPSHOT.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/logback-core-1.2.3.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/jakarta.annotation-api-1.3.5.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/spring-boot-starter-logging-2.3.0.M4.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/spring-core-5.2.6.BUILD-SNAPSHOT.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/spring-context-indexer-5.2.6.BUILD-SNAPSHOT.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/spring-expression-5.2.6.BUILD-SNAPSHOT.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image:/Users/aclement/gits6/spring-graal-native/spring-graal-native/target/spring-graal-native-0.7.0.BUILD-SNAPSHOT.jar \\\r\n-H:Path=/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image \\\r\n-H:+DumpTargetInfo \\\r\n-H:FallbackThreshold=0 \\\r\n-H:Name=commandlinerunner \\\r\n-H:+ReportExceptionStackTraces \\\r\n-H:+AllowIncompleteClasspath \\\r\n-H:+ReportUnsupportedElementsAtRuntime \\\r\n-H:CLibraryPath=/Users/aclement/installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/svm/clibraries/darwin-amd64 \\\r\n-H:Class=com.example.commandlinerunner.CommandlinerunnerApplication \\\r\n\r\n]\r\n[commandlinerunner:18130]    classlist:   3,928.93 ms,  1.38 GB\r\n ____             _               _____          _                  \r\n/ ___| _ __  _ __(_)_ __   __ _  |  ___|__  __ _| |_ _   _ _ __ ___ \r\n\\___ \\| '_ \\| '__| | '_ \\ / _` | | |_ / _ \\/ _` | __| | | | '__/ _ \\\r\n ___) | |_) | |  | | | | | (_| | |  _|  __/ (_| | |_| |_| | | |  __/\r\n|____/| .__/|_|  |_|_| |_|\\__, | |_|  \\___|\\__,_|\\__|\\__,_|_|  \\___|\r\n      |_|                 |___/                                     \r\n\r\nUse -Dspring.graal.verbose=true on native-image call to see more detailed information from the feature\r\n[commandlinerunner:18130]        (cap):   1,208.06 ms,  1.38 GB\r\nFound #5 types in static reflection list to register\r\nSkipping #5 types not on the classpath\r\nAttempting proxy registration of #19 proxies\r\nSkipped registration of #16 proxies - relevant types not on classpath\r\n[commandlinerunner:18130]        setup:   2,524.81 ms,  1.38 GB\r\nRegistering resources - #34 patterns\r\nRegistering resources - #2 bundles\r\nProcessing META-INF/spring.factories files...\r\nspring.factories processing, problem adding access for key org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer: org/springframework/jdbc/CannotGetJdbcConnectionException\r\nProcessing spring.factories - EnableAutoConfiguration lists #126 configurations\r\nannotation extractTypesFromAttributes=[value, type](class java.util.ArrayList)\r\nannotation extractTypesFromAttributes=[value, name](class java.util.ArrayList)\r\nannotation extractTypesFromAttributes=[value, name](class java.util.ArrayList)\r\nannotation extractTypesFromAttributes=[value](class java.util.ArrayList)\r\nspring.factories processing, problem adding access for key org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer: javax/validation/ValidationException\r\nProcessing spring.factories - PropertySourceLoader lists #2 property source loaders\r\nProcessing META-INF/spring.components files...\r\nRegistered 2 entries\r\nRegistered 2 entries\r\nConfiguring initialization time for specific types and packages:\r\n#68 buildtime-init-classes   #23 buildtime-init-packages   #33 runtime-init-classes    #0 runtime-init-packages\r\n\r\nWarning: class initialization of class org.springframework.boot.validation.MessageInterpolatorFactory failed with exception java.lang.NoClassDefFoundError: javax/validation/ValidationException. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=org.springframework.boot.validation.MessageInterpolatorFactory to explicitly request delayed initialization of this class.\r\nNumber of types dynamically registered for reflective access: #4248\r\n# Building image for target platform: org.graalvm.nativeimage.Platform$DARWIN_AMD64\r\n# Using native toolchain:\r\n#   Name: LLVM (clang)\r\n#   Vendor: apple\r\n#   Version: 11.0.0\r\n#   Target architecture: x86_64\r\n#   Path: /usr/bin/cc\r\n# Using CLibrary: com.oracle.svm.core.c.libc.GLibc\r\n[commandlinerunner:18130]     (clinit):     789.16 ms,  4.11 GB\r\n# Static libraries:\r\n#   ../../../../../../../installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/svm/clibraries/darwin-amd64/liblibchelper.a\r\n#   ../../../../../../../installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/libnet.a\r\n#   ../../../../../../../installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/svm/clibraries/darwin-amd64/libstrictmath.a\r\n#   ../../../../../../../installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/svm/clibraries/darwin-amd64/libffi.a\r\n#   ../../../../../../../installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/svm/clibraries/darwin-amd64/libdarwin.a\r\n#   ../../../../../../../installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/libnio.a\r\n#   ../../../../../../../installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/libjava.a\r\n#   ../../../../../../../installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/svm/clibraries/darwin-amd64/libjvm.a\r\n#   ../../../../../../../installs/graalvm-ce-java8-20.1.0-dev/Contents/Home/jre/lib/libzip.a\r\n# Other libraries: -framework Foundation,pthread,dl,z\r\n[commandlinerunner:18130]   (typeflow):  12,094.77 ms,  4.11 GB\r\n[commandlinerunner:18130]    (objects):  17,446.32 ms,  4.11 GB\r\n[commandlinerunner:18130]   (features):   8,660.13 ms,  4.11 GB\r\n[commandlinerunner:18130]     analysis:  40,558.58 ms,  4.11 GB\r\nError: Error loading a referenced type: java.lang.IllegalAccessError: no such method: org.springframework.core.io.buffer.DataBufferUtils.release(DataBuffer)boolean/invokeStatic\r\nDetailed message:\r\nTrace: \r\n\tat parsing org.springframework.core.io.buffer.DefaultDataBufferFactory.join(DefaultDataBufferFactory.java:114)\r\nCall path from entry point to org.springframework.core.io.buffer.DefaultDataBufferFactory.join(List): \r\n\tat org.springframework.core.io.buffer.DefaultDataBufferFactory.join(DefaultDataBufferFactory.java:110)\r\n\tat com.oracle.svm.reflect.DefaultDataBufferFactory_join_ecee51af1a1cc88e99d26bc1d893f116c08a0408_1290.invoke(Unknown Source)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.boot.context.properties.bind.JavaBeanBinder$BeanProperty.lambda$getValue$0(JavaBeanBinder.java:333)\r\n\tat org.springframework.boot.context.properties.bind.JavaBeanBinder$BeanProperty$$Lambda$402/1306916650.get(Unknown Source)\r\n\tat com.oracle.svm.core.jdk.SystemPropertiesSupport.initializeLazyValue(SystemPropertiesSupport.java:190)\r\n\tat com.oracle.svm.core.jdk.SystemPropertiesSupport.getProperty(SystemPropertiesSupport.java:143)\r\n\tat com.oracle.svm.core.jdk.Target_java_lang_System.getProperty(JavaLangSubstitutions.java:345)\r\n\tat com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VARARGS:Ljava_lang_System_2_0002egetProperty_00028Ljava_lang_String_2_00029Ljava_lang_String_2(generated:0)\r\n\r\ncom.oracle.svm.core.util.UserError$UserException: Error loading a referenced type: java.lang.IllegalAccessError: no such method: org.springframework.core.io.buffer.DataBufferUtils.release(DataBuffer)boolean/invokeStatic\r\nDetailed message:\r\nTrace: \r\n\tat parsing org.springframework.core.io.buffer.DefaultDataBufferFactory.join(DefaultDataBufferFactory.java:114)\r\nCall path from entry point to org.springframework.core.io.buffer.DefaultDataBufferFactory.join(List): \r\n\tat org.springframework.core.io.buffer.DefaultDataBufferFactory.join(DefaultDataBufferFactory.java:110)\r\n\tat com.oracle.svm.reflect.DefaultDataBufferFactory_join_ecee51af1a1cc88e99d26bc1d893f116c08a0408_1290.invoke(Unknown Source)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.boot.context.properties.bind.JavaBeanBinder$BeanProperty.lambda$getValue$0(JavaBeanBinder.java:333)\r\n\tat org.springframework.boot.context.properties.bind.JavaBeanBinder$BeanProperty$$Lambda$402/1306916650.get(Unknown Source)\r\n\tat com.oracle.svm.core.jdk.SystemPropertiesSupport.initializeLazyValue(SystemPropertiesSupport.java:190)\r\n\tat com.oracle.svm.core.jdk.SystemPropertiesSupport.getProperty(SystemPropertiesSupport.java:143)\r\n\tat com.oracle.svm.core.jdk.Target_java_lang_System.getProperty(JavaLangSubstitutions.java:345)\r\n\tat com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VARARGS:Ljava_lang_System_2_0002egetProperty_00028Ljava_lang_String_2_00029Ljava_lang_String_2(generated:0)\r\n\r\n\tat com.oracle.svm.core.util.UserError.abort(UserError.java:79)\r\n\tat com.oracle.svm.hosted.FallbackFeature.reportAsFallback(FallbackFeature.java:217)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:753)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:538)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:451)\r\n\tat java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1386)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: com.oracle.graal.pointsto.constraints.UnsupportedFeatureException: Error loading a referenced type: java.lang.IllegalAccessError: no such method: org.springframework.core.io.buffer.DataBufferUtils.release(DataBuffer)boolean/invokeStatic\r\nDetailed message:\r\nTrace: \r\n\tat parsing org.springframework.core.io.buffer.DefaultDataBufferFactory.join(DefaultDataBufferFactory.java:114)\r\nCall path from entry point to org.springframework.core.io.buffer.DefaultDataBufferFactory.join(List): \r\n\tat org.springframework.core.io.buffer.DefaultDataBufferFactory.join(DefaultDataBufferFactory.java:110)\r\n\tat com.oracle.svm.reflect.DefaultDataBufferFactory_join_ecee51af1a1cc88e99d26bc1d893f116c08a0408_1290.invoke(Unknown Source)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.boot.context.properties.bind.JavaBeanBinder$BeanProperty.lambda$getValue$0(JavaBeanBinder.java:333)\r\n\tat org.springframework.boot.context.properties.bind.JavaBeanBinder$BeanProperty$$Lambda$402/1306916650.get(Unknown Source)\r\n\tat com.oracle.svm.core.jdk.SystemPropertiesSupport.initializeLazyValue(SystemPropertiesSupport.java:190)\r\n\tat com.oracle.svm.core.jdk.SystemPropertiesSupport.getProperty(SystemPropertiesSupport.java:143)\r\n\tat com.oracle.svm.core.jdk.Target_java_lang_System.getProperty(JavaLangSubstitutions.java:345)\r\n\tat com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VARARGS:Ljava_lang_System_2_0002egetProperty_00028Ljava_lang_String_2_00029Ljava_lang_String_2(generated:0)\r\n\r\n\tat com.oracle.graal.pointsto.constraints.UnsupportedFeatures.report(UnsupportedFeatures.java:126)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:750)\r\n\t... 7 more\r\nCaused by: java.lang.IllegalAccessError: no such method: org.springframework.core.io.buffer.DataBufferUtils.release(DataBuffer)boolean/invokeStatic\r\n\tat java.lang.invoke.MethodHandleNatives.linkMethodHandleConstant(MethodHandleNatives.java:483)\r\n\tat jdk.vm.ci.hotspot.CompilerToVM.resolveInvokeDynamicInPool(Native Method)\r\n\tat jdk.vm.ci.hotspot.HotSpotConstantPool.loadReferencedType(HotSpotConstantPool.java:743)\r\n\tat sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.oracle.graal.pointsto.infrastructure.WrappedConstantPool.loadReferencedType(WrappedConstantPool.java:88)\r\n\tat com.oracle.graal.pointsto.infrastructure.WrappedConstantPool.loadReferencedType(WrappedConstantPool.java:105)\r\n\tat com.oracle.svm.hosted.phases.SubstrateClassInitializationPlugin.loadReferencedType(SubstrateClassInitializationPlugin.java:71)\r\n\tat org.graalvm.compiler.java.BytecodeParser.loadReferenceType(BytecodeParser.java:4384)\r\n\tat org.graalvm.compiler.java.BytecodeParser.maybeEagerlyResolve(BytecodeParser.java:4366)\r\n\tat com.oracle.svm.hosted.phases.SharedGraphBuilderPhase$SharedBytecodeParser.maybeEagerlyResolve(SharedGraphBuilderPhase.java:127)\r\n\tat org.graalvm.compiler.java.BytecodeParser.lookupMethod(BytecodeParser.java:4316)\r\n\tat org.graalvm.compiler.java.BytecodeParser.genInvokeDynamic(BytecodeParser.java:1713)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:5342)\r\n\tat org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3423)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3230)\r\n\tat org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1088)\r\n\tat org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:982)\r\n\tat org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:214)\r\n\tat org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:224)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:351)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:322)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n\tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:228)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n\tat java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)\r\n\t... 4 more\r\nCaused by: java.lang.NoClassDefFoundError: org/reactivestreams/Publisher\r\n\tat java.lang.invoke.MethodHandleNatives.resolve(Native Method)\r\n\tat java.lang.invoke.MemberName$Factory.resolve(MemberName.java:975)\r\n\tat java.lang.invoke.MemberName$Factory.resolveOrFail(MemberName.java:1000)\r\n\tat java.lang.invoke.MethodHandles$Lookup.resolveOrFail(MethodHandles.java:1394)\r\n\tat java.lang.invoke.MethodHandles$Lookup.linkMethodHandleConstant(MethodHandles.java:1750)\r\n\tat java.lang.invoke.MethodHandleNatives.linkMethodHandleConstant(MethodHandleNatives.java:477)\r\n\t... 38 more\r\nCaused by: java.lang.ClassNotFoundException: org.reactivestreams.Publisher\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:382)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:419)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:352)\r\n\t... 44 more\r\nError: Image build request failed with exit status 1\r\ncom.oracle.svm.driver.NativeImage$NativeImageError: Image build request failed with exit status 1\r\n\tat com.oracle.svm.driver.NativeImage.showError(NativeImage.java:1541)\r\n\tat com.oracle.svm.driver.NativeImage.build(NativeImage.java:1299)\r\n\tat com.oracle.svm.driver.NativeImage.performBuild(NativeImage.java:1260)\r\n\tat com.oracle.svm.driver.NativeImage.main(NativeImage.java:1219)\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2391", "user": "aclement", "labels": ["bug", "native-image", "spring"], "created": "2020-04-24 15:51:19", "closed": "2020-04-28 18:16:16", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "[native-image] sun.security.provider.X509Factory - Static field or an object referenced from a static field changed during native image generation", "body": "**Describe issue**\r\nError during native image build.\r\nVery simple vertx-pg-client project - https://github.com/dimasukr/graalvm-vertx-repro/blob/master/src/main/java/App.java\r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\n1. `git clone --depth 1 https://github.com/dimasukr/graalvm-vertx-repro.git`\r\n2. `sh docker_build.sh`\r\nOr if no docker then:  \r\n```\r\nmvn package\r\nmkdir build\r\ncp ./target/bootstrap.jar ./build/\r\ncp ./docker/native-config/*.json ./build/\r\ncp ./docker/build_native.sh ./build/\r\ncd ./build\r\nsh ./build_native.sh\r\n```\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM version CE 20.1.0 and 20.0.0\r\n - JDK major version: 11\r\n - OS: Ubuntu 18.04\r\n - Docker:  19.03.8\r\n - Architecture: AMD64\r\n\r\n**More details**\r\n```\r\nFatal error: com.oracle.svm.core.util.VMError$HostedError: com.oracle.svm.core.util.UserError$UserException: Image heap writing found an object whose class was not seen as instantiated during static analysis. Did a static field or an object referenced from a static field change during native image generation? For example, a lazily initialized cache could have been initialized during image generation, in which case you need to force eager initialization of the cache before static analysis or reset the cache using a field value recomputation.\r\n   object: sun.security.provider.X509Factory@2ad0dba6 of class: sun.security.provider.X509Factory\r\n   reachable through:\r\n     object: java.security.cert.CertificateFactory@6074f49f  of class: java.security.cert.CertificateFactory\r\n     root: HostedField<SslContext.X509_CERT_FACTORY location: 4152   AnalysisField<SslContext.X509_CERT_FACTORY accessed: false reads: false written: true>>\r\n       at com.oracle.svm.core.util.VMError.shouldNotReachHere(VMError.java:70)\r\n       at com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:641)\r\n       at com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:445)\r\n       at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1407)\r\n       at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n       at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n       at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n       at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n       at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nCaused by: com.oracle.svm.core.util.UserError$UserException: Image heap writing found an object whose class was not seen as instantiated during static analysis. Did a static field or an object referenced from a static field change during native image generation? For example, a lazily initialized cache could have been initialized during image generation, in which case you need to force eager initialization of the cache before static analysis or reset the cache using a field value recomputation.\r\n   object: sun.security.provider.X509Factory@2ad0dba6 of class: sun.security.provider.X509Factory\r\n   reachable through:\r\n     object: java.security.cert.CertificateFactory@6074f49f  of class: java.security.cert.CertificateFactory\r\n     root: HostedField<SslContext.X509_CERT_FACTORY location: 4152   AnalysisField<SslContext.X509_CERT_FACTORY accessed: false reads: false written: true>>\r\n       at com.oracle.svm.core.util.UserError.abort(UserError.java:68)\r\n       at com.oracle.svm.hosted.image.NativeImageHeap.requireType(NativeImageHeap.java:473)\r\n       at com.oracle.svm.hosted.image.NativeImageHeap.addObjectToBootImageHeap(NativeImageHeap.java:363)\r\n       at com.oracle.svm.hosted.image.NativeImageHeap.addObject(NativeImageHeap.java:312)\r\n       at com.oracle.svm.hosted.image.NativeImageHeap.processAddObjectWorklist(NativeImageHeap.java:565)\r\n       at com.oracle.svm.hosted.image.NativeImageHeap.addTrailingObjects(NativeImageHeap.java:200)\r\n       at com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:620)\r\n       ... 7 more\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2389", "user": "dimasukr", "labels": ["bug", "native-image"], "created": "2020-04-24 13:57:18", "closed": "2020-05-28 23:07:55", "commits": {}, "ttf": 34.000277777777775, "commitsDetails": []}, {"title": "[OpenJDK15] The addition of Hidden Classes breaks native-image", "body": "**Describe the issue**\r\n\r\nThe addition of Hidden Classes in JDK15 is causing native-image to fail with several UnsupportedFeatureExceptions.\r\n\r\nhttps://bugs.openjdk.java.net/browse/JDK-8238358\r\nhttps://hg.openjdk.java.net/jdk/jdk/rev/30ec85283758\r\n\r\n\r\n**Steps to reproduce the issue**\r\n\r\nBuild GraalVM with binaries built from the latest JDK15 and run native-image on Hello World.\r\n\r\n**More details**\r\n\r\nHere is one example of the error:\r\n\r\nFatal error: FallbackImageRequest while building fallback image.com.oracle.svm.hosted.FallbackFeature$FallbackImageRequest: Aborting stand-alone image build. Unsupported features in 58 methods\r\nDetailed message:\r\nError: com.oracle.graal.pointsto.constraints.UnsupportedFeatureException: Invoke with MethodHandle argument could not be reduced to at most a single call or single field access. The method handle must be a compile time constant, e.g., be loaded from a `static final` field. Method that contains the method handle invocation: java.lang.invoke.Invokers$Holder.linkToTargetMethod(Object)\r\n\r\nA build of JDK15 before and after the Hidden Classes changeset proves that this change is the cause of the UnsupportedFeatureException.\r\n\r\nThe failure occurs when native-image is trying to process an\r\nInvoke with a Method Handle but the invocation plugin doesn\u2019t handle DynamicNewInstanceNode.\r\n\r\nThe methodHandleMethod is ...\r\n\r\nAnalysisMethod<java.lang.invoke.Invokers$Holder.linkToTargetMethod -> HotSpotMethod<Invokers$Holder.linkToTargetMethod(Object)>>\r\n\r\nIn IntrinsifyMethodHandlesInvocationPlugin.java\r\n\r\nnode is 12|DynamicNewInstance\r\n\r\n```\r\nNode singleFunctionality = null;\r\nReturnNode singleReturn = null;\r\nfor (Node node : graph.getNodes()) {\r\n    if (node == graph.start() || node instanceof ParameterNode || node instanceof ConstantNode || node instanceof FrameState) {\r\n        /* Ignore the allowed framework around the nodes we care about. */\r\n    } else if (node instanceof MethodCallTargetNode) {\r\n        /* We check the Invoke, so we can ignore the call target. */\r\n    } else if ((node instanceof Invoke || node instanceof LoadFieldNode || node instanceof StoreFieldNode) && singleFunctionality == null) {\r\n        singleFunctionality = node;\r\n    } else if (node instanceof ReturnNode && singleReturn == null) {\r\n        singleReturn = (ReturnNode) node;\r\n    } else {\r\n        reportUnsupportedFeature(b, methodHandleMethod);  <<<---------\r\n        return;\r\n    }\r\n}\r\n```", "url": "https://github.com/oracle/graal/issues/2382", "user": "bobvandette", "labels": ["bug", "native-image"], "created": "2020-04-23 14:26:49", "closed": "2020-05-28 02:14:48", "commits": {"8fb8fc502411b3c84308ff5cda4d6c1f775f3920": {"commitGHEventType": "referenced", "commitUser": "bobvandette"}}, "ttf": 34.000277777777775, "commitsDetails": [{"commitHash": "8fb8fc502411b3c84308ff5cda4d6c1f775f3920", "commitGHEventType": "referenced", "commitUser": "bobvandette", "commitParents": ["f417316c69b76e75459b9498a4ea7afb1fae6fb9", "5659104ce37251886ab8138532a002a867d2c633"], "nameRev": "8fb8fc502411b3c84308ff5cda4d6c1f775f3920 tags/JDK-8243380~190", "commitMessage": "[GR-20704] Extended static libs list with JNI_OnLoad_ func.\n\nPullRequest: graal/6074\n", "commitDateTime": "2020-04-30 22:18:35", "authoredDateTime": "2020-04-30 22:18:35", "commitGitStats": [{"filePath": "substratevm/src/com.oracle.svm.jni/src/com/oracle/svm/jni/JNILibraryInitializer.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JNILibraryInitializer.java", "spoonMethods": [{"spoonMethodName": "com.oracle.svm.jni.JNILibraryInitializer.fillCGlobalDataMap(java.util.Collection)", "TOT": 9, "UPD": 0, "INS": 9, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Recent caching additions in javax.naming will break code", "body": "[JDK-8223260](https://bugs.openjdk.java.net/browse/JDK-8223260) has been recently been fixed in jdk 11. When using a JDK that includes this fix, code relying on `javax.naming` will encounter exceptions like this:\r\n\r\n```\r\n2020-04-17 15:21:30,378 ERROR [io.qua.ver.htt.run.QuarkusErrorHandler] (executor-thread-1) HTTP Request to /api/requiresStandardRole failed, error id: 4af2a4af-1daf-448c-8336-69ab4abec3c2-1: com.oracle.svm.core.jdk.UnsupportedFeatureError: JDK11OrLater: Target_java_lang_ClassLoader.createOrGetClassLoaderValueMap()\r\n\tat com.oracle.svm.core.util.VMError.unsupportedFeature(VMError.java:86)\r\n\tat java.lang.ClassLoader.createOrGetClassLoaderValueMap(ClassLoader.java:254)\r\n\tat java.lang.System$2.createOrGetClassLoaderValueMap(System.java:2125)\r\n\tat jdk.internal.loader.AbstractClassLoaderValue.map(AbstractClassLoaderValue.java:266)\r\n\tat jdk.internal.loader.AbstractClassLoaderValue.computeIfAbsent(AbstractClassLoaderValue.java:189)\r\n\tat javax.naming.spi.NamingManager.getInitialContext(NamingManager.java:711)\r\n\tat javax.naming.InitialContext.getDefaultInitCtx(InitialContext.java:305)\r\n\tat javax.naming.InitialContext.init(InitialContext.java:236)\r\n\tat javax.naming.ldap.InitialLdapContext.<init>(InitialLdapContext.java:154)\r\n```\r\n\r\nThis is due to a cache introduced in the JDK.\r\n\r\nI've found a workaround for Quarkus (see PR associated with https://github.com/quarkusio/quarkus/issues/8651), but others are likely to encounter similar issues. So, we should probably have a general solution for all.\r\n\r\nUnfortunately the caching code (see [here](https://github.com/openjdk/jdk11u-dev/blob/master/src/java.naming/share/classes/javax/naming/spi/NamingManager.java#L709-L714)) is embedded right into the `getInitialContext` method which makes does not make it easy to substitute for.\r\n\r\nAt first glance, I can't see a right substitution that could be made. I wonder if the prohibition of `createOrGetClassLoaderValueMap` is too harsh? What's the issue with it? Creating a CHM of ClassLoaders? Or the reflection call inside `createOrGetClassLoaderValueMap`?", "url": "https://github.com/oracle/graal/issues/2367", "user": "galderz", "labels": ["bug", "native-image"], "created": "2020-04-20 14:55:45", "closed": "2020-04-29 16:30:37", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "[OpenJDK 15] Removal of nashorn javascript engine breaks build", "body": "In jdk/jdk the nashorn javascript has been removed:\r\nhttps://openjdk.java.net/jeps/372\r\nhttps://bugs.openjdk.java.net/browse/JDK-8241749\r\n\r\nThis breaks the graal VM native image build like this:\r\n\r\n```\r\n/home/jenkins/workspace/jdk-15-gaovm-x86-64_linux/src/graal/graal-ce/substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_jdk_nashorn_api_scripting_NashornScriptEngineFactory.java:33: error: package jdk.nashorn.api.scripting does not exist\r\nimport jdk.nashorn.api.scripting.ClassFilter;\r\n                                ^\r\n/home/jenkins/workspace/jdk-15-gaovm-x86-64_linux/src/graal/graal-ce/substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_jdk_nashorn_api_scripting_NashornScriptEngineFactory.java:45: error: cannot find symbol\r\n    private ScriptEngine newEngine(String[] args, ClassLoader appLoader, ClassFilter classFilter) {\r\n                                                                         ^\r\n  symbol:   class ClassFilter\r\n  location: class Target_jdk_nashorn_api_scripting_NashornScriptEngineFactory\r\n/home/jenkins/workspace/jdk-15-gaovm-x86-64_linux/src/graal/graal-ce/substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_jdk_nashorn_api_scripting_NashornScriptEngineFactory.java:35: error: package jdk.nashorn.api.scripting does not exist\r\n@TargetClass(jdk.nashorn.api.scripting.NashornScriptEngineFactory.class)\r\n                                      ^\r\n3 errors\r\n\r\nWARNING: Using incubator modules: jdk.incubator.foreign, jdk.incubator.jpackage\r\nCompiling com.oracle.svm.core with javac-daemon(JDK 15) failed\r\n1 build tasks failed\r\n```\r\n\r\nSubstrate VM needs to get updated to account for this. I hope to get a fix in for this later in the week.\r\n\r\n/cc @bobvandette ", "url": "https://github.com/oracle/graal/issues/2365", "user": "jerboaa", "labels": ["bug", "native-image"], "created": "2020-04-20 12:30:38", "closed": "2020-05-28 02:14:47", "commits": {"dd04ac9426361c0b5c194e3b9ff0aa64ee604a6a": {"commitGHEventType": "closed", "commitUser": "graalvmbot"}}, "ttf": 37.000277777777775, "commitsDetails": [{"commitHash": "dd04ac9426361c0b5c194e3b9ff0aa64ee604a6a", "commitGHEventType": "closed", "commitUser": "graalvmbot", "commitParents": ["07b198de9e22dd6915d443f62a7ee4ba3e694222"], "nameRev": "dd04ac9426361c0b5c194e3b9ff0aa64ee604a6a tags/JDK-8243380~44^2~17^2", "commitMessage": "Only add nashorn check on JDK 14 or earlier\n\nJDK 15 removed nashorn with:\nhttps://bugs.openjdk.java.net/browse/JDK-8241749\n\nCloses #2365\n", "commitDateTime": "2020-04-23 19:06:20", "authoredDateTime": "2020-04-23 15:38:12", "commitGitStats": [{"filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_jdk_nashorn_api_scripting_ClassFilter.java", "insertions": 31, "deletions": 0, "lines": 31}, {"filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_jdk_nashorn_api_scripting_NashornScriptEngineFactory.java", "insertions": 2, "deletions": 4, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Target_jdk_nashorn_api_scripting_ClassFilter.java", "spoonMethods": [{"spoonMethodName": "com.oracle.svm.core.jdk.Target_jdk_nashorn_api_scripting_ClassFilter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Target_jdk_nashorn_api_scripting_NashornScriptEngineFactory.java", "spoonMethods": [{"spoonMethodName": "com.oracle.svm.core.jdk.Target_jdk_nashorn_api_scripting_NashornScriptEngineFactory", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.svm.core.jdk.Target_jdk_nashorn_api_scripting_NashornScriptEngineFactory.newEngine(java.lang.String[],java.lang.ClassLoader,jdk.nashorn.api.scripting.ClassFilter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dd04ac9426361c0b5c194e3b9ff0aa64ee604a6a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 33, "deletions": 4, "lines": 37, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 4, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk"], "changesInPackagesSPOON": ["com.oracle.svm.core.jdk.Target_jdk_nashorn_api_scripting_ClassFilter", "com.oracle.svm.core.jdk.Target_jdk_nashorn_api_scripting_NashornScriptEngineFactory", "com.oracle.svm.core.jdk.Target_jdk_nashorn_api_scripting_NashornScriptEngineFactory.newEngine(java.lang.String[],java.lang.ClassLoader,jdk.nashorn.api.scripting.ClassFilter)"]}, {"title": "javadoc throws exception, OpenJDK javadoc does not", "body": "**Describe the issue**\r\n`javadoc` crashes on my codebase. It does not crash on regular JDK.\r\n\r\n**Steps to reproduce the issue**\r\n1. `git clone --depth 1 https://github.com/hiddenswitch/Spellsource`\r\n2. `./gradlew game:javadoc`\r\n\r\nObserve the following exception:\r\n\r\n```\r\njavadoc: error - An internal exception has occurred. \r\n        (java.lang.ClassCastException: class com.sun.tools.javac.code.Symtab$6 cannot be cast to class com.sun.tools.javac.code.Symbol$ClassSymbol (com.sun.tools.javac.code.Symtab$6 and com.sun.tools.javac.code.Symbol$ClassSymbol are in module jdk.compiler of loader 'app'))\r\nPlease file a bug against the javadoc tool via the Java bug reporting page\r\n(http://bugreport.java.com) after checking the Bug Database (http://bugs.java.com)\r\nfor duplicates. Include error messages and the following diagnostic in your report. Thank you.\r\njava.lang.ClassCastException: class com.sun.tools.javac.code.Symtab$6 cannot be cast to class com.sun.tools.javac.code.Symbol$ClassSymbol (com.sun.tools.javac.code.Symtab$6 and com.sun.tools.javac.code.Symbol$ClassSymbol are in module jdk.compiler of loader 'app')\r\n        at jdk.compiler/com.sun.tools.javac.code.Symbol.outermostClass(Symbol.java:490)\r\n        at jdk.javadoc/jdk.javadoc.internal.tool.ToolEnvironment.getFileKind(ToolEnvironment.java:196)\r\n        at jdk.javadoc/jdk.javadoc.internal.tool.ElementsTable.isTypeElementSelected(ElementsTable.java:985)\r\n        at jdk.javadoc/jdk.javadoc.internal.tool.ElementsTable$IncludedVisitor.visitType(ElementsTable.java:1062)\r\n        at jdk.javadoc/jdk.javadoc.internal.tool.ElementsTable$IncludedVisitor.visitType(ElementsTable.java:1038)\r\n        at jdk.compiler/com.sun.tools.javac.code.Symbol$ClassSymbol.accept(Symbol.java:1447)\r\n        at java.compiler@11.0.6/javax.lang.model.util.AbstractElementVisitor6.visit(AbstractElementVisitor6.java:106)\r\n        at jdk.javadoc/jdk.javadoc.internal.tool.ElementsTable.isIncluded(ElementsTable.java:334)\r\n        at jdk.javadoc/jdk.javadoc.internal.tool.DocEnvImpl.isIncluded(DocEnvImpl.java:85)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.toolkit.util.Utils.isIncluded(Utils.java:2685)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.formats.html.LinkFactoryImpl.getClassLink(LinkFactoryImpl.java:95)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.toolkit.util.links.LinkFactory.getLink(LinkFactory.java:194)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.formats.html.HtmlDocletWriter.getLink(HtmlDocletWriter.java:679)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.formats.html.HtmlDocletWriter.seeTagToContent(HtmlDocletWriter.java:1051)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.formats.html.HtmlDocletWriter$2.visitLink(HtmlDocletWriter.java:1454)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.formats.html.HtmlDocletWriter$2.visitLink(HtmlDocletWriter.java:1315)\r\n        at jdk.compiler/com.sun.tools.javac.tree.DCTree$DCLink.accept(DCTree.java:538)\r\n        at jdk.compiler/com.sun.source.util.SimpleDocTreeVisitor.visit(SimpleDocTreeVisitor.java:79)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.formats.html.HtmlDocletWriter.commentTagsToContent(HtmlDocletWriter.java:1530)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.formats.html.HtmlDocletWriter.addCommentTags(HtmlDocletWriter.java:1220)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.formats.html.HtmlDocletWriter.addCommentTags(HtmlDocletWriter.java:1201)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.formats.html.HtmlDocletWriter.addInlineComment(HtmlDocletWriter.java:1187)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.formats.html.AbstractMemberWriter.addComment(AbstractMemberWriter.java:370)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.formats.html.EnumConstantWriterImpl.addComments(EnumConstantWriterImpl.java:152)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.toolkit.builders.EnumConstantBuilder.buildEnumConstantComments(EnumConstantBuilder.java:173)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.toolkit.builders.EnumConstantBuilder.buildEnumConstant(EnumConstantBuilder.java:136)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.toolkit.builders.EnumConstantBuilder.build(EnumConstantBuilder.java:112)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.toolkit.builders.ClassBuilder.buildEnumConstantsDetails(ClassBuilder.java:353)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.toolkit.builders.ClassBuilder.buildMemberDetails(ClassBuilder.java:337)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.toolkit.builders.ClassBuilder.buildClassDoc(ClassBuilder.java:145)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.toolkit.builders.ClassBuilder.build(ClassBuilder.java:120)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.formats.html.HtmlDoclet.generateClassFiles(HtmlDoclet.java:264)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.toolkit.AbstractDoclet.generateClassFiles(AbstractDoclet.java:286)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.toolkit.AbstractDoclet.generateClassFiles(AbstractDoclet.java:268)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.toolkit.AbstractDoclet.startGeneration(AbstractDoclet.java:207)\r\n        at jdk.javadoc/jdk.javadoc.internal.doclets.toolkit.AbstractDoclet.run(AbstractDoclet.java:114)\r\n        at jdk.javadoc/jdk.javadoc.doclet.StandardDoclet.run(StandardDoclet.java:72)\r\n        at jdk.javadoc/jdk.javadoc.internal.tool.Start.parseAndExecute(Start.java:588)\r\n        at jdk.javadoc/jdk.javadoc.internal.tool.Start.begin(Start.java:432)\r\n        at jdk.javadoc/jdk.javadoc.internal.tool.Start.begin(Start.java:345)\r\n        at jdk.javadoc/jdk.javadoc.internal.tool.Main.execute(Main.java:63)\r\n        at jdk.javadoc/jdk.javadoc.internal.tool.Main.main(Main.java:52)\r\n```\r\n\r\n**Describe GraalVM and your environment:**\r\n\r\n```\r\n$ java -version\r\nopenjdk version \"11.0.6\" 2020-01-14\r\nOpenJDK Runtime Environment GraalVM CE 20.0.0 (build 11.0.6+9-jvmci-20.0-b02)\r\nOpenJDK 64-Bit Server VM GraalVM CE 20.0.0 (build 11.0.6+9-jvmci-20.0-b02, mixed mode, sharing)\r\n$ uname -a\r\nDarwin XXX 18.7.0 Darwin Kernel Version 18.7.0: Tue Aug 20 16:57:14 PDT 2019; root:xnu-4903.271.2~2/RELEASE_X86_64 x86_64\r\n```\r\n\r\nmacOS 10.14.6\r\n", "url": "https://github.com/oracle/graal/issues/2361", "user": "doctorpangloss", "labels": ["bug"], "created": "2020-04-18 06:21:50", "closed": "2020-04-23 03:36:02", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "New snapshot builds of CE 20.1.0-dev fail native-image with java.lang.NullPointerException", "body": "**Describe the issue**\r\nUberjars that successfully native-image with older 20.1.0-dev snapshot images fail with the latest snapshots. Fail with version 20200407_0218. Fails with different error on 20200414_0225. (But succeed with version 20200324_0554)\r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\n1. git clone git@github.com:epiccastle/spire.git\r\n2. make all GRAALVM=/path/to/graalvm/home\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM version (latest snapshot builds can be found [here](https://github.com/graalvm/graalvm-ce-dev-builds/releases)), or commit id if built from source: **20.1.0-dev-20200407_0218**\r\n - JDK major version: **11**\r\n - OS: **macOS 10.13.6 17G65 (Circle CI build machines)**\r\n - Architecture: **AMD64**\r\n\r\n**More details**\r\nConsider adding the `--native-image-info` and  `--verbose` flags when building your native image and paste output below.\r\n\r\nAdd any other information about the problem here. Especially important are stack traces or log output. Feel free to link to gists or to screenshots if necessary.\r\n\r\n### Build output with 20.1.0-dev-20200407_0218\r\nBuild output with 20.1.0-dev-20200407_0218 here: https://circleci.com/gh/epiccastle/spire/819\r\n\r\n```\r\n/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/bin/native-image \\\r\n\t\t-jar target/uberjar/spire-0.1.0-alpha.4-standalone.jar \\\r\n\t\t-H:Name=build/spire \\\r\n\t\t-H:+ReportExceptionStackTraces \\\r\n\t\t-J-Dclojure.spec.skip-macros=true \\\r\n\t\t-J-Dclojure.compiler.direct-linking=true \\\r\n\t\t-H:ConfigurationFileDirectories=graal-configs/ \\\r\n\t\t--initialize-at-build-time \\\r\n\t\t--initialize-at-run-time=com.jcraft.jsch.PortWatcher \\\r\n\t\t-H:Log=registerResource: \\\r\n\t\t-H:EnableURLProtocols=http,https \\\r\n\t\t--enable-all-security-services \\\r\n\t\t-H:+JNI \\\r\n\t\t--report-unsupported-elements-at-runtime \\\r\n\t\t--verbose \\\r\n\t\t--allow-incomplete-classpath \\\r\n\t\t--no-fallback \\\r\n\t\t--no-server \\\r\n\t\t\"-J-Xmx6g\"\r\nExecuting [\r\n/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/bin/java \\\r\n-XX:+UseParallelGC \\\r\n-XX:+UnlockExperimentalVMOptions \\\r\n-XX:+EnableJVMCI \\\r\n-Dtruffle.TrustAllTruffleRuntimeProviders=true \\\r\n-Dtruffle.TruffleRuntime=com.oracle.truffle.api.impl.DefaultTruffleRuntime \\\r\n-Dgraalvm.ForcePolyglotInvalid=true \\\r\n-Dgraalvm.locatorDisabled=true \\\r\n-Dsubstratevm.IgnoreGraalVersionCheck=true \\\r\n-Djava.lang.invoke.stringConcat=BC_SB \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.runtime=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.code=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.aarch64=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.amd64=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.meta=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.hotspot=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.services=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.common=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.code.site=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.code.stack=ALL-UNNAMED \\\r\n--add-opens \\\r\njdk.internal.vm.compiler/org.graalvm.compiler.debug=ALL-UNNAMED \\\r\n--add-opens \\\r\njdk.internal.vm.compiler/org.graalvm.compiler.nodes=ALL-UNNAMED \\\r\n--add-opens \\\r\njdk.unsupported/sun.reflect=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.module=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.ref=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.reflect=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.io=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang.reflect=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang.invoke=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang.ref=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.net=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.nio=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.nio.file=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.security=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/javax.crypto=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.util=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.util.concurrent.atomic=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/sun.security.x509=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.logger=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.sdk/org.graalvm.nativeimage.impl=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.sdk/org.graalvm.polyglot=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.truffle/com.oracle.truffle.polyglot=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.truffle/com.oracle.truffle.api.impl=ALL-UNNAMED \\\r\n-XX:+UseJVMCINativeLibrary \\\r\n-Xss10m \\\r\n-Xms1g \\\r\n-Xmx6871947672 \\\r\n-Duser.country=US \\\r\n-Duser.language=en \\\r\n-Djava.awt.headless=true \\\r\n-Dorg.graalvm.version=20.1.0-dev \\\r\n-Dorg.graalvm.config= \\\r\n-Dcom.oracle.graalvm.isaot=true \\\r\n-Djava.system.class.loader=com.oracle.svm.hosted.NativeImageSystemClassLoader \\\r\n-Xshare:off \\\r\n--module-path \\\r\n/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/truffle/truffle-api.jar \\\r\n-javaagent:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/svm.jar \\\r\n-Djdk.internal.lambda.disableEagerInitialization=true \\\r\n-Djdk.internal.lambda.eagerlyInitialize=false \\\r\n-Djava.lang.invoke.InnerClassLambdaMetafactory.initializeLambdas=false \\\r\n-Dclojure.spec.skip-macros=true \\\r\n-Dclojure.compiler.direct-linking=true \\\r\n-Xmx6g \\\r\n-cp \\\r\n/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/javacpp-shadowed.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/llvm-platform-specific-shadowed.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/llvm-wrapper-shadowed.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/objectfile.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/pointsto.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/svm-llvm.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/svm.jar \\\r\n'com.oracle.svm.hosted.NativeImageGeneratorRunner$JDK9Plus' \\\r\n-imagecp \\\r\n/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/javacpp-shadowed.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/llvm-platform-specific-shadowed.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/llvm-wrapper-shadowed.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/objectfile.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/pointsto.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/svm-llvm.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/svm.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/library-support.jar:/Users/distiller/project/target/uberjar/spire-0.1.0-alpha.4-standalone.jar \\\r\n-H:Path=/Users/distiller/project \\\r\n-H:Class=spire.core \\\r\n-H:+ReportExceptionStackTraces \\\r\n-H:ConfigurationFileDirectories=graal-configs/ \\\r\n-H:ClassInitialization=:build_time \\\r\n-H:ClassInitialization=com.jcraft.jsch.PortWatcher:run_time \\\r\n-H:Log=registerResource: \\\r\n-H:EnableURLProtocols=http,https \\\r\n-H:+EnableAllSecurityServices \\\r\n-H:+JNI \\\r\n-H:+ReportUnsupportedElementsAtRuntime \\\r\n-H:+AllowIncompleteClasspath \\\r\n-H:FallbackThreshold=0 \\\r\n-H:CLibraryPath=/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/clibraries/darwin-amd64 \\\r\n-H:Name=build/spire \\\r\n\r\n]\r\n[build/spire:7938]    classlist:   5,877.11 ms,  0.96 GB\r\n[build/spire:7938]        (cap):   2,108.64 ms,  0.96 GB\r\n[build/spire:7938]        setup:   4,058.01 ms,  0.96 GB\r\n[Use -Dgraal.LogFile=<path> to redirect Graal log output to a file.]\r\n[thread:19] scope: ForkJoinPool-4-worker-3\r\n  [thread:19] scope: ForkJoinPool-4-worker-3.registerResource\r\n  ServiceLoaderFeature: registerResource: META-INF/services/java.nio.file.spi.FileSystemProvider\r\n  [thread:19] scope: ForkJoinPool-4-worker-3.registerResource\r\n  ServiceLoaderFeature: registerResource: META-INF/services/com.fasterxml.jackson.core.JsonFactory\r\n  [thread:19] scope: ForkJoinPool-4-worker-3.registerResource\r\n  Resources have been added by ServiceLoaderFeature. Automatic registration can be disabled with -H:-UseServiceLoaderFeature\r\n[build/spire:7938]     (clinit):   1,136.40 ms,  5.63 GB\r\n[build/spire:7938]   (typeflow): 228,032.12 ms,  5.63 GB\r\n[build/spire:7938]    (objects): 964,345.25 ms,  5.63 GB\r\n[build/spire:7938]   (features):   2,112.16 ms,  5.63 GB\r\n[build/spire:7938]     analysis: 1,197,815.36 ms,  5.63 GB\r\n[build/spire:7938]     universe:   1,568.56 ms,  5.63 GB\r\n[build/spire:7938]      (parse):  10,114.75 ms,  3.49 GB\r\n[build/spire:7938]     (inline):   7,163.69 ms,  3.27 GB\r\n[thread:33] scope: ForkJoinPool-3-worker-7\r\n    [thread:33] scope: ForkJoinPool-3-worker-7.Operation.Compiling\r\n    Context: StructuredGraph:279129{HostedMethod<System_arraycopy_a9ed920b146f3548a61a6cb9d53eb46b3daf396b.invoke -> AnalysisMethod<com.oracle.svm.reflect.System_arraycopy_a9ed920b146f3548a61a6cb9d53eb46b3daf396b.invoke -> com.oracle.svm.reflect.hosted.ReflectionSubstitutionType$ReflectiveInvokeMethod@3b17e695>>}\r\n    Context: HostedMethod<System_arraycopy_a9ed920b146f3548a61a6cb9d53eb46b3daf396b.invoke -> AnalysisMethod<com.oracle.svm.reflect.System_arraycopy_a9ed920b146f3548a61a6cb9d53eb46b3daf396b.invoke -> com.oracle.svm.reflect.hosted.ReflectionSubstitutionType$ReflectiveInvokeMethod@3b17e695>>\r\n      [thread:33] scope: ForkJoinPool-3-worker-7.Operation.Compiling.GraalCompiler\r\n      Context: StructuredGraph:279129{HostedMethod<System_arraycopy_a9ed920b146f3548a61a6cb9d53eb46b3daf396b.invoke -> AnalysisMethod<com.oracle.svm.reflect.System_arraycopy_a9ed920b146f3548a61a6cb9d53eb46b3daf396b.invoke -> com.oracle.svm.reflect.hosted.ReflectionSubstitutionType$ReflectiveInvokeMethod@3b17e695>>}\r\n              [thread:33] scope: ForkJoinPool-3-worker-7.Operation.Compiling.GraalCompiler.FrontEnd.HighTier.IterativeConditionalEliminationPhase.ConditionalEliminationPhase\r\n              Exception raised in scope ForkJoinPool-3-worker-7.Operation.Compiling.GraalCompiler.FrontEnd.HighTier.IterativeConditionalEliminationPhase.ConditionalEliminationPhase: java.lang.NullPointerException\r\n              \tat jdk.internal.vm.compiler/org.graalvm.compiler.core.common.cfg.AbstractBlockBase.setDominator(AbstractBlockBase.java:131)\r\n              \tat jdk.internal.vm.compiler/org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeDominators(ControlFlowGraph.java:326)\r\n              \tat jdk.internal.vm.compiler/org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:89)\r\n              \tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:134)\r\n              \tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)\r\n              \tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)\r\n              \tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)\r\n              \tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.common.IterativeConditionalEliminationPhase.run(IterativeConditionalEliminationPhase.java:61)\r\n              \tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.common.IterativeConditionalEliminationPhase.run(IterativeConditionalEliminationPhase.java:38)\r\n              \tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)\r\n              \tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)\r\n              \tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.PhaseSuite.run(PhaseSuite.java:209)\r\n              \tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)\r\n              \tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)\r\n              \tat jdk.internal.vm.compiler/org.graalvm.compiler.core.GraalCompiler.emitFrontEnd(GraalCompiler.java:218)\r\n              \tat jdk.internal.vm.compiler/org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:144)\r\n              \tat jdk.internal.vm.compiler/org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:129)\r\n              \tat com.oracle.svm.hosted.code.CompileQueue.defaultCompileFunction(CompileQueue.java:978)\r\n              \tat com.oracle.svm.hosted.code.CompileQueue.doCompile(CompileQueue.java:940)\r\n              \tat com.oracle.svm.hosted.code.CompileQueue$CompileTask.run(CompileQueue.java:262)\r\n              \tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:175)\r\n              \tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n              \tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n              \tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n              \tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n              \tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n              \tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n              \r\n              Context obj org.graalvm.compiler.phases.common.ConditionalEliminationPhase@56c3b74\r\n              Context obj org.graalvm.compiler.phases.common.IterativeConditionalEliminationPhase@70fc8e77\r\n              Context obj org.graalvm.compiler.core.phases.HighTier@6d5a9f46\r\n              Context obj StructuredGraph:279129{HostedMethod<System_arraycopy_a9ed920b146f3548a61a6cb9d53eb46b3daf396b.invoke -> AnalysisMethod<com.oracle.svm.reflect.System_arraycopy_a9ed920b146f3548a61a6cb9d53eb46b3daf396b.invoke -> com.oracle.svm.reflect.hosted.ReflectionSubstitutionType$ReflectiveInvokeMethod@3b17e695>>}\r\n              Context obj com.oracle.svm.hosted.code.HostedCodeCacheProvider@7476abb8\r\n              Context obj HostedMethod<System_arraycopy_a9ed920b146f3548a61a6cb9d53eb46b3daf396b.invoke -> AnalysisMethod<com.oracle.svm.reflect.System_arraycopy_a9ed920b146f3548a61a6cb9d53eb46b3daf396b.invoke -> com.oracle.svm.reflect.hosted.ReflectionSubstitutionType$ReflectiveInvokeMethod@3b17e695>>\r\n              Context obj com.oracle.svm.hosted.code.CompileQueue@59f40f93\r\n[build/spire:7938]    (compile):  25,580.11 ms,  3.23 GB\r\n[build/spire:7938]      compile:  43,224.32 ms,  3.23 GB\r\nFatal error:org.graalvm.compiler.debug.GraalError: java.lang.NullPointerException\r\n\tat method: Object com.oracle.svm.reflect.System_arraycopy_a9ed920b146f3548a61a6cb9d53eb46b3daf396b.invoke(Object, Object[])  [Virtual call from DateFormatSymbols DateTimeUtils.getDateFormatSymbols(Locale), callTarget Object MethodAccessor.invoke(Object, Object[])]\r\n\tat com.oracle.svm.hosted.code.CompileQueue.defaultCompileFunction(CompileQueue.java:1009)\r\n\tat com.oracle.svm.hosted.code.CompileQueue.doCompile(CompileQueue.java:940)\r\n\tat com.oracle.svm.hosted.code.CompileQueue$CompileTask.run(CompileQueue.java:262)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:175)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nCaused by: java.lang.NullPointerException\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.core.common.cfg.AbstractBlockBase.setDominator(AbstractBlockBase.java:131)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeDominators(ControlFlowGraph.java:326)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:89)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:134)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.common.IterativeConditionalEliminationPhase.run(IterativeConditionalEliminationPhase.java:61)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.common.IterativeConditionalEliminationPhase.run(IterativeConditionalEliminationPhase.java:38)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.PhaseSuite.run(PhaseSuite.java:209)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.core.GraalCompiler.emitFrontEnd(GraalCompiler.java:218)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:144)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:129)\r\n\tat com.oracle.svm.hosted.code.CompileQueue.defaultCompileFunction(CompileQueue.java:978)\r\n\t... 9 more\r\nError: Image build request failed with exit status 1\r\ncom.oracle.svm.driver.NativeImage$NativeImageError: Image build request failed with exit status 1\r\n\tat com.oracle.svm.driver.NativeImage.showError(NativeImage.java:1541)\r\n\tat com.oracle.svm.driver.NativeImage.build(NativeImage.java:1299)\r\n\tat com.oracle.svm.driver.NativeImage.performBuild(NativeImage.java:1260)\r\n\tat com.oracle.svm.driver.NativeImage.main(NativeImage.java:1219)\r\n\tat com.oracle.svm.driver.NativeImage$JDK9Plus.main(NativeImage.java:1722)\r\nmake: *** [build/spire] Error 1\r\n\r\nExited with code exit status 2\r\n```\r\n\r\n### Build output with 20.1.0-dev-20200414_0225\r\nBuild output with 20.1.0-dev-20200414_0225 here: https://circleci.com/gh/epiccastle/spire/821\r\n\r\n```\r\n/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/bin/native-image \\\r\n\t\t-jar target/uberjar/spire-0.1.0-alpha.4-standalone.jar \\\r\n\t\t-H:Name=build/spire \\\r\n\t\t-H:+ReportExceptionStackTraces \\\r\n\t\t-J-Dclojure.spec.skip-macros=true \\\r\n\t\t-J-Dclojure.compiler.direct-linking=true \\\r\n\t\t-H:ConfigurationFileDirectories=graal-configs/ \\\r\n\t\t--initialize-at-build-time \\\r\n\t\t--initialize-at-run-time=com.jcraft.jsch.PortWatcher \\\r\n\t\t-H:Log=registerResource: \\\r\n\t\t-H:EnableURLProtocols=http,https \\\r\n\t\t--enable-all-security-services \\\r\n\t\t-H:+JNI \\\r\n\t\t--report-unsupported-elements-at-runtime \\\r\n\t\t--verbose \\\r\n\t\t--allow-incomplete-classpath \\\r\n\t\t--no-fallback \\\r\n\t\t--no-server \\\r\n\t\t\"-J-Xmx6g\"\r\nExecuting [\r\n/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/bin/java \\\r\n-XX:+UseParallelGC \\\r\n-XX:+UnlockExperimentalVMOptions \\\r\n-XX:+EnableJVMCI \\\r\n-Dtruffle.TrustAllTruffleRuntimeProviders=true \\\r\n-Dtruffle.TruffleRuntime=com.oracle.truffle.api.impl.DefaultTruffleRuntime \\\r\n-Dgraalvm.ForcePolyglotInvalid=true \\\r\n-Dgraalvm.locatorDisabled=true \\\r\n-Dsubstratevm.IgnoreGraalVersionCheck=true \\\r\n-Djava.lang.invoke.stringConcat=BC_SB \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.runtime=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.code=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.aarch64=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.amd64=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.meta=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.hotspot=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.services=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.common=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.code.site=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.code.stack=ALL-UNNAMED \\\r\n--add-opens \\\r\njdk.internal.vm.compiler/org.graalvm.compiler.debug=ALL-UNNAMED \\\r\n--add-opens \\\r\njdk.internal.vm.compiler/org.graalvm.compiler.nodes=ALL-UNNAMED \\\r\n--add-opens \\\r\njdk.unsupported/sun.reflect=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.module=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.ref=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.reflect=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.io=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang.reflect=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang.invoke=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang.ref=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.net=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.nio=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.nio.file=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.security=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/javax.crypto=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.util=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.util.concurrent.atomic=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/sun.security.x509=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.logger=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.sdk/org.graalvm.nativeimage.impl=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.sdk/org.graalvm.polyglot=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.truffle/com.oracle.truffle.polyglot=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.truffle/com.oracle.truffle.api.impl=ALL-UNNAMED \\\r\n-XX:+UseJVMCINativeLibrary \\\r\n-Xss10m \\\r\n-Xms1g \\\r\n-Xmx6871947672 \\\r\n-Duser.country=US \\\r\n-Duser.language=en \\\r\n-Djava.awt.headless=true \\\r\n-Dorg.graalvm.version=20.1.0-dev \\\r\n-Dorg.graalvm.config= \\\r\n-Dcom.oracle.graalvm.isaot=true \\\r\n-Djava.system.class.loader=com.oracle.svm.hosted.NativeImageSystemClassLoader \\\r\n-Xshare:off \\\r\n--module-path \\\r\n/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/truffle/truffle-api.jar \\\r\n-javaagent:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/svm.jar \\\r\n-Djdk.internal.lambda.disableEagerInitialization=true \\\r\n-Djdk.internal.lambda.eagerlyInitialize=false \\\r\n-Djava.lang.invoke.InnerClassLambdaMetafactory.initializeLambdas=false \\\r\n-Dclojure.spec.skip-macros=true \\\r\n-Dclojure.compiler.direct-linking=true \\\r\n-Xmx6g \\\r\n-cp \\\r\n/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/javacpp-shadowed.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/llvm-platform-specific-shadowed.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/llvm-wrapper-shadowed.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/objectfile.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/pointsto.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/svm-llvm.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/svm.jar \\\r\n'com.oracle.svm.hosted.NativeImageGeneratorRunner$JDK9Plus' \\\r\n-imagecp \\\r\n/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/javacpp-shadowed.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/llvm-platform-specific-shadowed.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/llvm-wrapper-shadowed.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/objectfile.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/pointsto.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/svm-llvm.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/svm.jar:/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/library-support.jar:/Users/distiller/project/target/uberjar/spire-0.1.0-alpha.4-standalone.jar \\\r\n-H:Path=/Users/distiller/project \\\r\n-H:Class=spire.core \\\r\n-H:+ReportExceptionStackTraces \\\r\n-H:ConfigurationFileDirectories=graal-configs/ \\\r\n-H:ClassInitialization=:build_time \\\r\n-H:ClassInitialization=com.jcraft.jsch.PortWatcher:run_time \\\r\n-H:Log=registerResource: \\\r\n-H:EnableURLProtocols=http,https \\\r\n-H:+EnableAllSecurityServices \\\r\n-H:+JNI \\\r\n-H:+ReportUnsupportedElementsAtRuntime \\\r\n-H:+AllowIncompleteClasspath \\\r\n-H:FallbackThreshold=0 \\\r\n-H:CLibraryPath=/Users/distiller/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/clibraries/darwin-amd64 \\\r\n-H:Name=build/spire \\\r\n\r\n]\r\n[build/spire:7956]    classlist:   5,690.66 ms,  0.93 GB\r\n[build/spire:7956]        (cap):   2,027.96 ms,  0.93 GB\r\n[build/spire:7956]        setup:   3,984.11 ms,  0.93 GB\r\n[Use -Dgraal.LogFile=<path> to redirect Graal log output to a file.]\r\n[thread:19] scope: ForkJoinPool-4-worker-3\r\n  [thread:19] scope: ForkJoinPool-4-worker-3.registerResource\r\n  ServiceLoaderFeature: registerResource: META-INF/services/java.nio.file.spi.FileSystemProvider\r\n  [thread:19] scope: ForkJoinPool-4-worker-3.registerResource\r\n  ServiceLoaderFeature: registerResource: META-INF/services/com.fasterxml.jackson.core.JsonFactory\r\n  [thread:19] scope: ForkJoinPool-4-worker-3.registerResource\r\n  Resources have been added by ServiceLoaderFeature. Automatic registration can be disabled with -H:-UseServiceLoaderFeature\r\n[build/spire:7956]     (clinit):     913.39 ms,  5.67 GB\r\n[build/spire:7956]   (typeflow): 108,848.02 ms,  5.67 GB\r\n[build/spire:7956]    (objects): 106,316.09 ms,  5.67 GB\r\n[build/spire:7956]   (features):   2,070.85 ms,  5.67 GB\r\n[build/spire:7956]     analysis: 221,471.47 ms,  5.67 GB\r\nError: Unsupported features in 7 methods\r\nDetailed message:\r\nError: Frame states being merged are incompatible: unbalanced monitors - locked objects do not match\r\n This frame state: [locals: [1,2,3,1,_,_] stack: [7] locks: [] rethrowException]\r\nOther frame state: [locals: [1,2,3,1,_,_] stack: [20] locks: [14 / 5] rethrowException]\r\nParser context: sci.impl.vars$alter_var_root.invokeStatic(vars.cljc:434) [bci: 11, intrinsic: false]\r\n  11: getstatic     #2          // __cached_class__0:java.lang.Class\r\n  14: if_acmpeq     31\r\n  17: dup           \r\n  18: instanceof    #23         // sci.impl.vars.IVar\r\n  21: ifne          83\r\n\r\nCall path from entry point to sci.impl.vars$alter_var_root.invokeStatic(Object, Object, ISeq): \r\n\tat sci.impl.vars$alter_var_root.invokeStatic(vars.cljc:432)\r\n\tat sci.impl.vars$alter_var_root.doInvoke(vars.cljc:432)\r\n\tat clojure.lang.RestFn.applyTo(RestFn.java:142)\r\n\tat spire.core.main(Unknown Source)\r\n\tat com.oracle.svm.core.JavaMainWrapper.runCore(JavaMainWrapper.java:149)\r\n\tat com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:184)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)\r\nOriginal exception that caused the problem: org.graalvm.compiler.core.common.PermanentBailoutException: Frame states being merged are incompatible: unbalanced monitors - locked objects do not match\r\n This frame state: [locals: [1,2,3,1,_,_] stack: [7] locks: [] rethrowException]\r\nOther frame state: [locals: [1,2,3,1,_,_] stack: [20] locks: [14 / 5] rethrowException]\r\nParser context: sci.impl.vars$alter_var_root.invokeStatic(vars.cljc:434) [bci: 11, intrinsic: false]\r\n  11: getstatic     #2          // __cached_class__0:java.lang.Class\r\n  14: if_acmpeq     31\r\n  17: dup           \r\n  18: instanceof    #23         // sci.impl.vars.IVar\r\n  21: ifne          83\r\n\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.FrameStateBuilder.checkCompatibleWith(FrameStateBuilder.java:420)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.FrameStateBuilder.merge(FrameStateBuilder.java:433)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.createTarget(BytecodeParser.java:3172)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.appendGoto(BytecodeParser.java:3345)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.createExceptionDispatch(BytecodeParser.java:3295)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3228)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1088)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:982)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:214)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:224)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:351)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:322)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n\tat com.oracle.graal.pointsto.flow.StaticInvokeTypeFlow.update(InvokeTypeFlow.java:437)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nError: Frame states being merged are incompatible: unbalanced monitors - locked objects do not match\r\n This frame state: [locals: [1,3,_,_,_,_,_] stack: [6] locks: [] rethrowException]\r\nOther frame state: [locals: [1,3,_,_,_,_,_] stack: [21] locks: [13 / 4] rethrowException]\r\nParser context: clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.next(rrbt.clj:199) [bci: 16, intrinsic: false]\r\n  16: getfield      #8          // clojure.lang.Box.val:java.lang.Object\r\n  19: astore_2      \r\n  20: aload_2       \r\n  21: dup           \r\n  22: ifnull        89\r\n  25: getstatic     #11         // java.lang.Boolean.FALSE:java.lang.Boolean\r\n\r\nCall path from entry point to clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.next(): \r\n\tat clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.next(rrbt.clj:196)\r\n\tat java.util.concurrent.CopyOnWriteArrayList.equals(CopyOnWriteArrayList.java:984)\r\n\tat java.util.HashMap.getNode(HashMap.java:574)\r\n\tat java.util.HashMap.get(HashMap.java:552)\r\n\tat com.oracle.svm.jni.access.JNIReflectionDictionary.getFieldNameByID(JNIReflectionDictionary.java:278)\r\n\tat com.oracle.svm.jni.functions.JNIFunctions.ToReflectedField(JNIFunctions.java:856)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.JNIFunctions_ToReflectedField_80d8233579d5215df0227b770e5c01228a0de9b9(generated:0)\r\nOriginal exception that caused the problem: org.graalvm.compiler.core.common.PermanentBailoutException: Frame states being merged are incompatible: unbalanced monitors - locked objects do not match\r\n This frame state: [locals: [1,3,_,_,_,_,_] stack: [6] locks: [] rethrowException]\r\nOther frame state: [locals: [1,3,_,_,_,_,_] stack: [21] locks: [13 / 4] rethrowException]\r\nParser context: clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.next(rrbt.clj:199) [bci: 16, intrinsic: false]\r\n  16: getfield      #8          // clojure.lang.Box.val:java.lang.Object\r\n  19: astore_2      \r\n  20: aload_2       \r\n  21: dup           \r\n  22: ifnull        89\r\n  25: getstatic     #11         // java.lang.Boolean.FALSE:java.lang.Boolean\r\n\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.FrameStateBuilder.checkCompatibleWith(FrameStateBuilder.java:420)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.FrameStateBuilder.merge(FrameStateBuilder.java:433)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.createTarget(BytecodeParser.java:3172)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.appendGoto(BytecodeParser.java:3345)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.createExceptionDispatch(BytecodeParser.java:3295)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3228)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1088)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:982)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:214)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:224)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:351)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:322)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n\tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:228)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nError: Frame states being merged are incompatible: unbalanced monitors - locked objects do not match\r\n This frame state: [locals: [1,3,_,_] stack: [6] locks: [] rethrowException]\r\nOther frame state: [locals: [1,3,_,_] stack: [20] locks: [13 / 4] rethrowException]\r\nParser context: clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.hasNext(rrbt.clj:208) [bci: 15, intrinsic: false]\r\n  15: checkcast     #42         // clojure.lang.IFn\r\n  18: aload_0       \r\n  19: getfield      #2          // xs:java.lang.Object\r\n  22: checkcast     #54         // clojure.lang.Box\r\n  25: getfield      #8          // clojure.lang.Box.val:java.lang.Object\r\n\r\nCall path from entry point to clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.hasNext(): \r\n\tat clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.hasNext(rrbt.clj:196)\r\n\tat java.util.concurrent.CopyOnWriteArrayList.equals(CopyOnWriteArrayList.java:986)\r\n\tat java.util.HashMap.getNode(HashMap.java:574)\r\n\tat java.util.HashMap.get(HashMap.java:552)\r\n\tat com.oracle.svm.jni.access.JNIReflectionDictionary.getFieldNameByID(JNIReflectionDictionary.java:278)\r\n\tat com.oracle.svm.jni.functions.JNIFunctions.ToReflectedField(JNIFunctions.java:856)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.JNIFunctions_ToReflectedField_80d8233579d5215df0227b770e5c01228a0de9b9(generated:0)\r\nOriginal exception that caused the problem: org.graalvm.compiler.core.common.PermanentBailoutException: Frame states being merged are incompatible: unbalanced monitors - locked objects do not match\r\n This frame state: [locals: [1,3,_,_] stack: [6] locks: [] rethrowException]\r\nOther frame state: [locals: [1,3,_,_] stack: [20] locks: [13 / 4] rethrowException]\r\nParser context: clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.hasNext(rrbt.clj:208) [bci: 15, intrinsic: false]\r\n  15: checkcast     #42         // clojure.lang.IFn\r\n  18: aload_0       \r\n  19: getfield      #2          // xs:java.lang.Object\r\n  22: checkcast     #54         // clojure.lang.Box\r\n  25: getfield      #8          // clojure.lang.Box.val:java.lang.Object\r\n\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.FrameStateBuilder.checkCompatibleWith(FrameStateBuilder.java:420)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.FrameStateBuilder.merge(FrameStateBuilder.java:433)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.createTarget(BytecodeParser.java:3172)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.appendGoto(BytecodeParser.java:3345)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.createExceptionDispatch(BytecodeParser.java:3295)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3228)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1088)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:982)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:214)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:224)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:351)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:322)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n\tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:228)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nError: unbalanced monitors: too many exits\r\nCall path from entry point to sci.impl.vars.SciNamespace.alterMeta(IFn, ISeq): \r\n\tat sci.impl.vars.SciNamespace.alterMeta(vars.cljc:35)\r\n\tat clojure.core$alter_meta_BANG_.invokeStatic(core.clj:2414)\r\n\tat clojure.core$alter_meta_BANG_.doInvoke(core.clj:2406)\r\n\tat clojure.lang.RestFn.applyTo(RestFn.java:142)\r\n\tat spire.core.main(Unknown Source)\r\n\tat com.oracle.svm.core.JavaMainWrapper.runCore(JavaMainWrapper.java:149)\r\n\tat com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:184)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)\r\nOriginal exception that caused the problem: org.graalvm.compiler.code.SourceStackTraceBailoutException$1: unbalanced monitors: too many exits\r\n\tat sci.impl.vars.SciNamespace.alterMeta(vars.cljc:47)\r\nCaused by: org.graalvm.compiler.core.common.PermanentBailoutException: unbalanced monitors: too many exits\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.bailout(BytecodeParser.java:3937)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.genMonitorExit(BytecodeParser.java:2824)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:5351)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3423)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3230)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1088)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:982)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:214)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:224)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:351)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:322)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n\tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:228)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nError: unbalanced monitors: too many exits\r\nCall path from entry point to sci.impl.vars.SciNamespace.resetMeta(IPersistentMap): \r\n\tat sci.impl.vars.SciNamespace.resetMeta(vars.cljc:35)\r\n\tat clojure.lang.EdnReader$MetaReader.invoke(EdnReader.java:585)\r\n\tat clojure.tools.cli$validate$fn__7656.invoke(cli.cljc:386)\r\n\tat clojure.lang.AFn.run(AFn.java:22)\r\n\tat java.lang.Thread.run(Thread.java:834)\r\n\tat com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:515)\r\n\tat com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:193)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.PosixJavaThreads_pthreadStartRoutine_e1f4a8c0039f8337338252cd8734f63a79b5e3df(generated:0)\r\nOriginal exception that caused the problem: org.graalvm.compiler.code.SourceStackTraceBailoutException$1: unbalanced monitors: too many exits\r\n\tat sci.impl.vars.SciNamespace.resetMeta(vars.cljc:49)\r\nCaused by: org.graalvm.compiler.core.common.PermanentBailoutException: unbalanced monitors: too many exits\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.bailout(BytecodeParser.java:3937)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.genMonitorExit(BytecodeParser.java:2824)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:5351)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3423)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3230)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1088)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:982)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:214)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:224)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:351)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:322)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n\tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:228)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nError: unbalanced monitors: too many exits\r\nCall path from entry point to sci.impl.vars.SciVar.alterMeta(IFn, ISeq): \r\n\tat sci.impl.vars.SciVar.alterMeta(vars.cljc:240)\r\n\tat clojure.core$alter_meta_BANG_.invokeStatic(core.clj:2414)\r\n\tat clojure.core$alter_meta_BANG_.doInvoke(core.clj:2406)\r\n\tat clojure.lang.RestFn.applyTo(RestFn.java:142)\r\n\tat spire.core.main(Unknown Source)\r\n\tat com.oracle.svm.core.JavaMainWrapper.runCore(JavaMainWrapper.java:149)\r\n\tat com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:184)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)\r\nOriginal exception that caused the problem: org.graalvm.compiler.code.SourceStackTraceBailoutException$1: unbalanced monitors: too many exits\r\n\tat sci.impl.vars.SciVar.alterMeta(vars.cljc:305)\r\nCaused by: org.graalvm.compiler.core.common.PermanentBailoutException: unbalanced monitors: too many exits\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.bailout(BytecodeParser.java:3937)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.genMonitorExit(BytecodeParser.java:2824)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:5351)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3423)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3230)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1088)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:982)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:214)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:224)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:351)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:322)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n\tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:228)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nError: unbalanced monitors: too many exits\r\nCall path from entry point to sci.impl.vars.SciVar.resetMeta(IPersistentMap): \r\n\tat sci.impl.vars.SciVar.resetMeta(vars.cljc:240)\r\n\tat clojure.lang.EdnReader$MetaReader.invoke(EdnReader.java:585)\r\n\tat clojure.tools.cli$validate$fn__7656.invoke(cli.cljc:386)\r\n\tat clojure.lang.AFn.run(AFn.java:22)\r\n\tat java.lang.Thread.run(Thread.java:834)\r\n\tat com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:515)\r\n\tat com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:193)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.PosixJavaThreads_pthreadStartRoutine_e1f4a8c0039f8337338252cd8734f63a79b5e3df(generated:0)\r\nOriginal exception that caused the problem: org.graalvm.compiler.code.SourceStackTraceBailoutException$1: unbalanced monitors: too many exits\r\n\tat sci.impl.vars.SciVar.resetMeta(vars.cljc:307)\r\nCaused by: org.graalvm.compiler.core.common.PermanentBailoutException: unbalanced monitors: too many exits\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.bailout(BytecodeParser.java:3937)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.genMonitorExit(BytecodeParser.java:2824)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:5351)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3423)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3230)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1088)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:982)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:214)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:224)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:351)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:322)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n\tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:228)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n\r\ncom.oracle.svm.core.util.UserError$UserException: Unsupported features in 7 methods\r\nDetailed message:\r\nError: Frame states being merged are incompatible: unbalanced monitors - locked objects do not match\r\n This frame state: [locals: [1,2,3,1,_,_] stack: [7] locks: [] rethrowException]\r\nOther frame state: [locals: [1,2,3,1,_,_] stack: [20] locks: [14 / 5] rethrowException]\r\nParser context: sci.impl.vars$alter_var_root.invokeStatic(vars.cljc:434) [bci: 11, intrinsic: false]\r\n  11: getstatic     #2          // __cached_class__0:java.lang.Class\r\n  14: if_acmpeq     31\r\n  17: dup           \r\n  18: instanceof    #23         // sci.impl.vars.IVar\r\n  21: ifne          83\r\n\r\nCall path from entry point to sci.impl.vars$alter_var_root.invokeStatic(Object, Object, ISeq): \r\n\tat sci.impl.vars$alter_var_root.invokeStatic(vars.cljc:432)\r\n\tat sci.impl.vars$alter_var_root.doInvoke(vars.cljc:432)\r\n\tat clojure.lang.RestFn.applyTo(RestFn.java:142)\r\n\tat spire.core.main(Unknown Source)\r\n\tat com.oracle.svm.core.JavaMainWrapper.runCore(JavaMainWrapper.java:149)\r\n\tat com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:184)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)\r\nOriginal exception that caused the problem: org.graalvm.compiler.core.common.PermanentBailoutException: Frame states being merged are incompatible: unbalanced monitors - locked objects do not match\r\n This frame state: [locals: [1,2,3,1,_,_] stack: [7] locks: [] rethrowException]\r\nOther frame state: [locals: [1,2,3,1,_,_] stack: [20] locks: [14 / 5] rethrowException]\r\nParser context: sci.impl.vars$alter_var_root.invokeStatic(vars.cljc:434) [bci: 11, intrinsic: false]\r\n  11: getstatic     #2          // __cached_class__0:java.lang.Class\r\n  14: if_acmpeq     31\r\n  17: dup           \r\n  18: instanceof    #23         // sci.impl.vars.IVar\r\n  21: ifne          83\r\n\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.FrameStateBuilder.checkCompatibleWith(FrameStateBuilder.java:420)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.FrameStateBuilder.merge(FrameStateBuilder.java:433)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.createTarget(BytecodeParser.java:3172)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.appendGoto(BytecodeParser.java:3345)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.createExceptionDispatch(BytecodeParser.java:3295)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3228)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1088)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:982)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:214)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:224)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:351)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:322)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n\tat com.oracle.graal.pointsto.flow.StaticInvokeTypeFlow.update(InvokeTypeFlow.java:437)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nError: Frame states being merged are incompatible: unbalanced monitors - locked objects do not match\r\n This frame state: [locals: [1,3,_,_,_,_,_] stack: [6] locks: [] rethrowException]\r\nOther frame state: [locals: [1,3,_,_,_,_,_] stack: [21] locks: [13 / 4] rethrowException]\r\nParser context: clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.next(rrbt.clj:199) [bci: 16, intrinsic: false]\r\n  16: getfield      #8          // clojure.lang.Box.val:java.lang.Object\r\n  19: astore_2      \r\n  20: aload_2       \r\n  21: dup           \r\n  22: ifnull        89\r\n  25: getstatic     #11         // java.lang.Boolean.FALSE:java.lang.Boolean\r\n\r\nCall path from entry point to clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.next(): \r\n\tat clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.next(rrbt.clj:196)\r\n\tat java.util.concurrent.CopyOnWriteArrayList.equals(CopyOnWriteArrayList.java:984)\r\n\tat java.util.HashMap.getNode(HashMap.java:574)\r\n\tat java.util.HashMap.get(HashMap.java:552)\r\n\tat com.oracle.svm.jni.access.JNIReflectionDictionary.getFieldNameByID(JNIReflectionDictionary.java:278)\r\n\tat com.oracle.svm.jni.functions.JNIFunctions.ToReflectedField(JNIFunctions.java:856)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.JNIFunctions_ToReflectedField_80d8233579d5215df0227b770e5c01228a0de9b9(generated:0)\r\nOriginal exception that caused the problem: org.graalvm.compiler.core.common.PermanentBailoutException: Frame states being merged are incompatible: unbalanced monitors - locked objects do not match\r\n This frame state: [locals: [1,3,_,_,_,_,_] stack: [6] locks: [] rethrowException]\r\nOther frame state: [locals: [1,3,_,_,_,_,_] stack: [21] locks: [13 / 4] rethrowException]\r\nParser context: clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.next(rrbt.clj:199) [bci: 16, intrinsic: false]\r\n  16: getfield      #8          // clojure.lang.Box.val:java.lang.Object\r\n  19: astore_2      \r\n  20: aload_2       \r\n  21: dup           \r\n  22: ifnull        89\r\n  25: getstatic     #11         // java.lang.Boolean.FALSE:java.lang.Boolean\r\n\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.FrameStateBuilder.checkCompatibleWith(FrameStateBuilder.java:420)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.FrameStateBuilder.merge(FrameStateBuilder.java:433)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.createTarget(BytecodeParser.java:3172)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.appendGoto(BytecodeParser.java:3345)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.createExceptionDispatch(BytecodeParser.java:3295)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3228)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1088)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:982)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:214)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:224)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:351)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:322)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n\tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:228)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nError: Frame states being merged are incompatible: unbalanced monitors - locked objects do not match\r\n This frame state: [locals: [1,3,_,_] stack: [6] locks: [] rethrowException]\r\nOther frame state: [locals: [1,3,_,_] stack: [20] locks: [13 / 4] rethrowException]\r\nParser context: clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.hasNext(rrbt.clj:208) [bci: 15, intrinsic: false]\r\n  15: checkcast     #42         // clojure.lang.IFn\r\n  18: aload_0       \r\n  19: getfield      #2          // xs:java.lang.Object\r\n  22: checkcast     #54         // clojure.lang.Box\r\n  25: getfield      #8          // clojure.lang.Box.val:java.lang.Object\r\n\r\nCall path from entry point to clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.hasNext(): \r\n\tat clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.hasNext(rrbt.clj:196)\r\n\tat java.util.concurrent.CopyOnWriteArrayList.equals(CopyOnWriteArrayList.java:986)\r\n\tat java.util.HashMap.getNode(HashMap.java:574)\r\n\tat java.util.HashMap.get(HashMap.java:552)\r\n\tat com.oracle.svm.jni.access.JNIReflectionDictionary.getFieldNameByID(JNIReflectionDictionary.java:278)\r\n\tat com.oracle.svm.jni.functions.JNIFunctions.ToReflectedField(JNIFunctions.java:856)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.JNIFunctions_ToReflectedField_80d8233579d5215df0227b770e5c01228a0de9b9(generated:0)\r\nOriginal exception that caused the problem: org.graalvm.compiler.core.common.PermanentBailoutException: Frame states being merged are incompatible: unbalanced monitors - locked objects do not match\r\n This frame state: [locals: [1,3,_,_] stack: [6] locks: [] rethrowException]\r\nOther frame state: [locals: [1,3,_,_] stack: [20] locks: [13 / 4] rethrowException]\r\nParser context: clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.hasNext(rrbt.clj:208) [bci: 15, intrinsic: false]\r\n  15: checkcast     #42         // clojure.lang.IFn\r\n  18: aload_0       \r\n  19: getfield      #2          // xs:java.lang.Object\r\n  22: checkcast     #54         // clojure.lang.Box\r\n  25: getfield      #8          // clojure.lang.Box.val:java.lang.Object\r\n\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.FrameStateBuilder.checkCompatibleWith(FrameStateBuilder.java:420)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.FrameStateBuilder.merge(FrameStateBuilder.java:433)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.createTarget(BytecodeParser.java:3172)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.appendGoto(BytecodeParser.java:3345)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.createExceptionDispatch(BytecodeParser.java:3295)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3228)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1088)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:982)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:214)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:224)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:351)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:322)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n\tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:228)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nError: unbalanced monitors: too many exits\r\nCall path from entry point to sci.impl.vars.SciNamespace.alterMeta(IFn, ISeq): \r\n\tat sci.impl.vars.SciNamespace.alterMeta(vars.cljc:35)\r\n\tat clojure.core$alter_meta_BANG_.invokeStatic(core.clj:2414)\r\n\tat clojure.core$alter_meta_BANG_.doInvoke(core.clj:2406)\r\n\r\n\tat clojure.lang.RestFn.applyTo(RestFn.java:142)\r\n\tat spire.core.main(Unknown Source)\r\n\tat com.oracle.svm.core.JavaMainWrapper.runCore(JavaMainWrapper.java:149)\r\n\tat com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:184)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)\r\nOriginal exception that caused the problem: org.graalvm.compiler.code.SourceStackTraceBailoutException$1: unbalanced monitors: too many exits\r\n\tat sci.impl.vars.SciNamespace.alterMeta(vars.cljc:47)\r\nCaused by: org.graalvm.compiler.core.common.PermanentBailoutException: unbalanced monitors: too many exits\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.bailout(BytecodeParser.java:3937)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.genMonitorExit(BytecodeParser.java:2824)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:5351)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3423)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3230)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1088)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:982)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:214)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:224)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:351)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:322)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n\tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:228)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nError: unbalanced monitors: too many exits\r\nCall path from entry point to sci.impl.vars.SciNamespace.resetMeta(IPersistentMap): \r\n\tat sci.impl.vars.SciNamespace.resetMeta(vars.cljc:35)\r\n\tat clojure.lang.EdnReader$MetaReader.invoke(EdnReader.java:585)\r\n\tat clojure.tools.cli$validate$fn__7656.invoke(cli.cljc:386)\r\n\tat clojure.lang.AFn.run(AFn.java:22)\r\n\tat java.lang.Thread.run(Thread.java:834)\r\n\tat com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:515)\r\n\tat com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:193)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.PosixJavaThreads_pthreadStartRoutine_e1f4a8c0039f8337338252cd8734f63a79b5e3df(generated:0)\r\nOriginal exception that caused the problem: org.graalvm.compiler.code.SourceStackTraceBailoutException$1: unbalanced monitors: too many exits\r\n\tat sci.impl.vars.SciNamespace.resetMeta(vars.cljc:49)\r\nCaused by: org.graalvm.compiler.core.common.PermanentBailoutException: unbalanced monitors: too many exits\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.bailout(BytecodeParser.java:3937)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.genMonitorExit(BytecodeParser.java:2824)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:5351)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3423)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3230)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1088)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:982)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:214)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:224)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:351)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:322)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n\tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:228)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nError: unbalanced monitors: too many exits\r\nCall path from entry point to sci.impl.vars.SciVar.alterMeta(IFn, ISeq): \r\n\tat sci.impl.vars.SciVar.alterMeta(vars.cljc:240)\r\n\tat clojure.core$alter_meta_BANG_.invokeStatic(core.clj:2414)\r\n\tat clojure.core$alter_meta_BANG_.doInvoke(core.clj:2406)\r\n\tat clojure.lang.RestFn.applyTo(RestFn.java:142)\r\n\tat spire.core.main(Unknown Source)\r\n\tat com.oracle.svm.core.JavaMainWrapper.runCore(JavaMainWrapper.java:149)\r\n\tat com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:184)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)\r\nOriginal exception that caused the problem: org.graalvm.compiler.code.SourceStackTraceBailoutException$1: unbalanced monitors: too many exits\r\n\tat sci.impl.vars.SciVar.alterMeta(vars.cljc:305)\r\nCaused by: org.graalvm.compiler.core.common.PermanentBailoutException: unbalanced monitors: too many exits\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.bailout(BytecodeParser.java:3937)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.genMonitorExit(BytecodeParser.java:2824)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:5351)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3423)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3230)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1088)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:982)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:214)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:224)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:351)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:322)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n\tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:228)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nError: unbalanced monitors: too many exits\r\nCall path from entry point to sci.impl.vars.SciVar.resetMeta(IPersistentMap): \r\n\tat sci.impl.vars.SciVar.resetMeta(vars.cljc:240)\r\n\tat clojure.lang.EdnReader$MetaReader.invoke(EdnReader.java:585)\r\n\tat clojure.tools.cli$validate$fn__7656.invoke(cli.cljc:386)\r\n\tat clojure.lang.AFn.run(AFn.java:22)\r\n\tat java.lang.Thread.run(Thread.java:834)\r\n\tat com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:515)\r\n\tat com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:193)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.PosixJavaThreads_pthreadStartRoutine_e1f4a8c0039f8337338252cd8734f63a79b5e3df(generated:0)\r\nOriginal exception that caused the problem: org.graalvm.compiler.code.SourceStackTraceBailoutException$1: unbalanced monitors: too many exits\r\n\tat sci.impl.vars.SciVar.resetMeta(vars.cljc:307)\r\nCaused by: org.graalvm.compiler.core.common.PermanentBailoutException: unbalanced monitors: too many exits\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.bailout(BytecodeParser.java:3937)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.genMonitorExit(BytecodeParser.java:2824)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:5351)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3423)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3230)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1088)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:982)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:214)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:224)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:351)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:322)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n\tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:228)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n\r\n\tat com.oracle.svm.core.util.UserError.abort(UserError.java:79)\r\n\tat com.oracle.svm.hosted.FallbackFeature.reportAsFallback(FallbackFeature.java:217)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:753)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:538)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:451)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1407)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nCaused by: com.oracle.graal.pointsto.constraints.UnsupportedFeatureException: Unsupported features in 7 methods\r\nDetailed message:\r\nError: Frame states being merged are incompatible: unbalanced monitors - locked objects do not match\r\n This frame state: [locals: [1,2,3,1,_,_] stack: [7] locks: [] rethrowException]\r\nOther frame state: [locals: [1,2,3,1,_,_] stack: [20] locks: [14 / 5] rethrowException]\r\nParser context: sci.impl.vars$alter_var_root.invokeStatic(vars.cljc:434) [bci: 11, intrinsic: false]\r\n  11: getstatic     #2          // __cached_class__0:java.lang.Class\r\n  14: if_acmpeq     31\r\n  17: dup           \r\n  18: instanceof    #23         // sci.impl.vars.IVar\r\n  21: ifne          83\r\n\r\nCall path from entry point to sci.impl.vars$alter_var_root.invokeStatic(Object, Object, ISeq): \r\n\tat sci.impl.vars$alter_var_root.invokeStatic(vars.cljc:432)\r\n\tat sci.impl.vars$alter_var_root.doInvoke(vars.cljc:432)\r\n\tat clojure.lang.RestFn.applyTo(RestFn.java:142)\r\n\tat spire.core.main(Unknown Source)\r\n\tat com.oracle.svm.core.JavaMainWrapper.runCore(JavaMainWrapper.java:149)\r\n\tat com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:184)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)\r\nOriginal exception that caused the problem: org.graalvm.compiler.core.common.PermanentBailoutException: Frame states being merged are incompatible: unbalanced monitors - locked objects do not match\r\n This frame state: [locals: [1,2,3,1,_,_] stack: [7] locks: [] rethrowException]\r\nOther frame state: [locals: [1,2,3,1,_,_] stack: [20] locks: [14 / 5] rethrowException]\r\nParser context: sci.impl.vars$alter_var_root.invokeStatic(vars.cljc:434) [bci: 11, intrinsic: false]\r\n  11: getstatic     #2          // __cached_class__0:java.lang.Class\r\n  14: if_acmpeq     31\r\n  17: dup           \r\n  18: instanceof    #23         // sci.impl.vars.IVar\r\n  21: ifne          83\r\n\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.FrameStateBuilder.checkCompatibleWith(FrameStateBuilder.java:420)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.FrameStateBuilder.merge(FrameStateBuilder.java:433)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.createTarget(BytecodeParser.java:3172)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.appendGoto(BytecodeParser.java:3345)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.createExceptionDispatch(BytecodeParser.java:3295)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3228)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1088)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:982)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:214)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:224)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:351)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:322)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n\tat com.oracle.graal.pointsto.flow.StaticInvokeTypeFlow.update(InvokeTypeFlow.java:437)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nError: Frame states being merged are incompatible: unbalanced monitors - locked objects do not match\r\n This frame state: [locals: [1,3,_,_,_,_,_] stack: [6] locks: [] rethrowException]\r\nOther frame state: [locals: [1,3,_,_,_,_,_] stack: [21] locks: [13 / 4] rethrowException]\r\nParser context: clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.next(rrbt.clj:199) [bci: 16, intrinsic: false]\r\n  16: getfield      #8          // clojure.lang.Box.val:java.lang.Object\r\n  19: astore_2      \r\n  20: aload_2       \r\n  21: dup           \r\n  22: ifnull        89\r\n  25: getstatic     #11         // java.lang.Boolean.FALSE:java.lang.Boolean\r\n\r\nCall path from entry point to clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.next(): \r\n\tat clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.next(rrbt.clj:196)\r\n\tat java.util.concurrent.CopyOnWriteArrayList.equals(CopyOnWriteArrayList.java:984)\r\n\tat java.util.HashMap.getNode(HashMap.java:574)\r\n\tat java.util.HashMap.get(HashMap.java:552)\r\n\tat com.oracle.svm.jni.access.JNIReflectionDictionary.getFieldNameByID(JNIReflectionDictionary.java:278)\r\n\tat com.oracle.svm.jni.functions.JNIFunctions.ToReflectedField(JNIFunctions.java:856)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.JNIFunctions_ToReflectedField_80d8233579d5215df0227b770e5c01228a0de9b9(generated:0)\r\nOriginal exception that caused the problem: org.graalvm.compiler.core.common.PermanentBailoutException: Frame states being merged are incompatible: unbalanced monitors - locked objects do not match\r\n This frame state: [locals: [1,3,_,_,_,_,_] stack: [6] locks: [] rethrowException]\r\nOther frame state: [locals: [1,3,_,_,_,_,_] stack: [21] locks: [13 / 4] rethrowException]\r\nParser context: clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.next(rrbt.clj:199) [bci: 16, intrinsic: false]\r\n  16: getfield      #8          // clojure.lang.Box.val:java.lang.Object\r\n  19: astore_2      \r\n  20: aload_2       \r\n  21: dup           \r\n  22: ifnull        89\r\n  25: getstatic     #11         // java.lang.Boolean.FALSE:java.lang.Boolean\r\n\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.FrameStateBuilder.checkCompatibleWith(FrameStateBuilder.java:420)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.FrameStateBuilder.merge(FrameStateBuilder.java:433)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.createTarget(BytecodeParser.java:3172)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.appendGoto(BytecodeParser.java:3345)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.createExceptionDispatch(BytecodeParser.java:3295)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3228)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1088)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:982)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:214)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:224)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:351)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:322)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n\tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:228)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nError: Frame states being merged are incompatible: unbalanced monitors - locked objects do not match\r\n This frame state: [locals: [1,3,_,_] stack: [6] locks: [] rethrowException]\r\nOther frame state: [locals: [1,3,_,_] stack: [20] locks: [13 / 4] rethrowException]\r\nParser context: clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.hasNext(rrbt.clj:208) [bci: 15, intrinsic: false]\r\n  15: checkcast     #42         // clojure.lang.IFn\r\n  18: aload_0       \r\n  19: getfield      #2          // xs:java.lang.Object\r\n  22: checkcast     #54         // clojure.lang.Box\r\n  25: getfield      #8          // clojure.lang.Box.val:java.lang.Object\r\n\r\nCall path from entry point to clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.hasNext(): \r\n\tat clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.hasNext(rrbt.clj:196)\r\n\tat java.util.concurrent.CopyOnWriteArrayList.equals(CopyOnWriteArrayList.java:986)\r\n\tat java.util.HashMap.getNode(HashMap.java:574)\r\n\tat java.util.HashMap.get(HashMap.java:552)\r\n\tat com.oracle.svm.jni.access.JNIReflectionDictionary.getFieldNameByID(JNIReflectionDictionary.java:278)\r\n\tat com.oracle.svm.jni.functions.JNIFunctions.ToReflectedField(JNIFunctions.java:856)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.JNIFunctions_ToReflectedField_80d8233579d5215df0227b770e5c01228a0de9b9(generated:0)\r\nOriginal exception that caused the problem: org.graalvm.compiler.core.common.PermanentBailoutException: Frame states being merged are incompatible: unbalanced monitors - locked objects do not match\r\n This frame state: [locals: [1,3,_,_] stack: [6] locks: [] rethrowException]\r\nOther frame state: [locals: [1,3,_,_] stack: [20] locks: [13 / 4] rethrowException]\r\nParser context: clojure.core.rrb_vector.rrbt.VecSeq$reify__5024.hasNext(rrbt.clj:208) [bci: 15, intrinsic: false]\r\n  15: checkcast     #42         // clojure.lang.IFn\r\n  18: aload_0       \r\n  19: getfield      #2          // xs:java.lang.Object\r\n  22: checkcast     #54         // clojure.lang.Box\r\n  25: getfield      #8          // clojure.lang.Box.val:java.lang.Object\r\n\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.FrameStateBuilder.checkCompatibleWith(FrameStateBuilder.java:420)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.FrameStateBuilder.merge(FrameStateBuilder.java:433)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.createTarget(BytecodeParser.java:3172)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.appendGoto(BytecodeParser.java:3345)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.createExceptionDispatch(BytecodeParser.java:3295)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3228)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1088)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:982)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:214)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:224)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:351)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:322)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n\tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:228)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nError: unbalanced monitors: too many exits\r\nCall path from entry point to sci.impl.vars.SciNamespace.alterMeta(IFn, ISeq): \r\n\tat sci.impl.vars.SciNamespace.alterMeta(vars.cljc:35)\r\n\tat clojure.core$alter_meta_BANG_.invokeStatic(core.clj:2414)\r\n\tat clojure.core$alter_meta_BANG_.doInvoke(core.clj:2406)\r\n\tat clojure.lang.RestFn.applyTo(RestFn.java:142)\r\n\tat spire.core.main(Unknown Source)\r\n\tat com.oracle.svm.core.JavaMainWrapper.runCore(JavaMainWrapper.java:149)\r\n\tat com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:184)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)\r\nOriginal exception that caused the problem: org.graalvm.compiler.code.SourceStackTraceBailoutException$1: unbalanced monitors: too many exits\r\n\tat sci.impl.vars.SciNamespace.alterMeta(vars.cljc:47)\r\nCaused by: org.graalvm.compiler.core.common.PermanentBailoutException: unbalanced monitors: too many exits\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.bailout(BytecodeParser.java:3937)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.genMonitorExit(BytecodeParser.java:2824)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:5351)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3423)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3230)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1088)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:982)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:214)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:224)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:351)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:322)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n\tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:228)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nError: unbalanced monitors: too many exits\r\nCall path from entry point to sci.impl.vars.SciNamespace.resetMeta(IPersistentMap): \r\n\tat sci.impl.vars.SciNamespace.resetMeta(vars.cljc:35)\r\n\tat clojure.lang.EdnReader$MetaReader.invoke(EdnReader.java:585)\r\n\tat clojure.tools.cli$validate$fn__7656.invoke(cli.cljc:386)\r\n\tat clojure.lang.AFn.run(AFn.java:22)\r\n\tat java.lang.Thread.run(Thread.java:834)\r\n\tat com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:515)\r\n\tat com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:193)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.PosixJavaThreads_pthreadStartRoutine_e1f4a8c0039f8337338252cd8734f63a79b5e3df(generated:0)\r\nOriginal exception that caused the problem: org.graalvm.compiler.code.SourceStackTraceBailoutException$1: unbalanced monitors: too many exits\r\n\tat sci.impl.vars.SciNamespace.resetMeta(vars.cljc:49)\r\nCaused by: org.graalvm.compiler.core.common.PermanentBailoutException: unbalanced monitors: too many exits\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.bailout(BytecodeParser.java:3937)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.genMonitorExit(BytecodeParser.java:2824)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:5351)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3423)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3230)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1088)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:982)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:214)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:224)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:351)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:322)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n\tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:228)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nError: unbalanced monitors: too many exits\r\nCall path from entry point to sci.impl.vars.SciVar.alterMeta(IFn, ISeq): \r\n\tat sci.impl.vars.SciVar.alterMeta(vars.cljc:240)\r\n\tat clojure.core$alter_meta_BANG_.invokeStatic(core.clj:2414)\r\n\tat clojure.core$alter_meta_BANG_.doInvoke(core.clj:2406)\r\n\tat clojure.lang.RestFn.applyTo(RestFn.java:142)\r\n\tat spire.core.main(Unknown Source)\r\n\tat com.oracle.svm.core.JavaMainWrapper.runCore(JavaMainWrapper.java:149)\r\n\tat com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:184)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)\r\nOriginal exception that caused the problem: org.graalvm.compiler.code.SourceStackTraceBailoutException$1: unbalanced monitors: too many exits\r\n\tat sci.impl.vars.SciVar.alterMeta(vars.cljc:305)\r\nCaused by: org.graalvm.compiler.core.common.PermanentBailoutException: unbalanced monitors: too many exits\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.bailout(BytecodeParser.java:3937)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.genMonitorExit(BytecodeParser.java:2824)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:5351)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3423)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3230)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1088)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:982)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:214)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:224)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:351)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:322)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n\tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:228)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nError: unbalanced monitors: too many exits\r\nCall path from entry point to sci.impl.vars.SciVar.resetMeta(IPersistentMap): \r\n\tat sci.impl.vars.SciVar.resetMeta(vars.cljc:240)\r\n\tat clojure.lang.EdnReader$MetaReader.invoke(EdnReader.java:585)\r\n\tat clojure.tools.cli$validate$fn__7656.invoke(cli.cljc:386)\r\n\tat clojure.lang.AFn.run(AFn.java:22)\r\n\tat java.lang.Thread.run(Thread.java:834)\r\n\tat com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:515)\r\n\tat com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:193)\r\n\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.PosixJavaThreads_pthreadStartRoutine_e1f4a8c0039f8337338252cd8734f63a79b5e3df(generated:0)\r\nOriginal exception that caused the problem: org.graalvm.compiler.code.SourceStackTraceBailoutException$1: unbalanced monitors: too many exits\r\n\tat sci.impl.vars.SciVar.resetMeta(vars.cljc:307)\r\nCaused by: org.graalvm.compiler.core.common.PermanentBailoutException: unbalanced monitors: too many exits\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.bailout(BytecodeParser.java:3937)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.genMonitorExit(BytecodeParser.java:2824)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:5351)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3423)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3230)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1088)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:982)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:214)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:224)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:351)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:322)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:311)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:112)\r\n\tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:228)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:530)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n\r\n\tat com.oracle.graal.pointsto.constraints.UnsupportedFeatures.report(UnsupportedFeatures.java:129)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:750)\r\n\t... 8 more\r\nError: Image build request failed with exit status 1\r\ncom.oracle.svm.driver.NativeImage$NativeImageError: Image build request failed with exit status 1\r\n\tat com.oracle.svm.driver.NativeImage.showError(NativeImage.java:1541)\r\n\tat com.oracle.svm.driver.NativeImage.build(NativeImage.java:1299)\r\n\tat com.oracle.svm.driver.NativeImage.performBuild(NativeImage.java:1260)\r\n\tat com.oracle.svm.driver.NativeImage.main(NativeImage.java:1219)\r\n\tat com.oracle.svm.driver.NativeImage$JDK9Plus.main(NativeImage.java:1722)\r\nmake: *** [build/spire] Error 1\r\n\r\nExited with code exit status 2\r\n```\r\n\r\n## Jar file for testing\r\nhttps://822-221739364-gh.circle-artifacts.com/0/target/uberjar/spire-0.1.0-alpha.4-standalone.jar\r\navailable from here under tab *Artifacts*:\r\nhttps://circleci.com/gh/epiccastle/spire/821", "url": "https://github.com/oracle/graal/issues/2358", "user": "retrogradeorbit", "labels": ["bug", "native-image"], "created": "2020-04-17 16:31:57", "closed": "2020-04-19 23:25:56", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Make it possible to initialized proxified interfaces at runtime", "body": "In an application that is using runtime initialization by default, it seems that proxified interfaces must  be initialized at build time. It is expected that proxies are created at build time, but I don't think this limitation about initialization makes sense.\r\n\r\nThis behavior can be reproduced with our `vanilla-tx` sample from [`spring-graal-native`](https://github.com/spring-projects-experimental/spring-graal-native):\r\n - `git clone https://github.com/spring-projects-experimental/spring-graal-native.git`\r\n - `./build.sh`\r\n - `cd spring-graal-native-samples/vanilla-tx`\r\n - Open `compile.sh` and remove the `--initialize-at-build-time=app.main.Finder \\` line\r\n - `./build.sh`\r\n\r\nYou should see this error:\r\n```\r\ncom.oracle.svm.core.util.UserError$UserException: Classes that should be initialized at run time got initialized during image building:\r\n app.main.Finder was unintentionally initialized at build time. com.sun.proxy.$Proxy208 caused initialization of this class with the following trace:\r\n\tat app.main.Finder.<clinit>(Finder.java)\r\n\tat java.lang.Class.forName0(Native Method)\r\n\tat java.lang.Class.forName(Class.java:264)\r\n\tat com.sun.proxy.$Proxy208.<clinit>(Unknown Source)\r\n```", "url": "https://github.com/oracle/graal/issues/2357", "user": "sdeleuze", "labels": ["bug", "native-image", "spring"], "created": "2020-04-17 13:29:41", "closed": "2020-04-23 17:11:39", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "SpringBoot classloaders initialization at build time leads to image heap polution", "body": "The `native-image` by default burns the set of classloaders: `sun.misc.Launcher$ExtClassLoader`, `sun.misc.Launcher$AppClassLoader`, ....\r\nIf `ClassLoader.registerAsParallelCapable()` is enabled, classloaders uses `ClassLoader#parallelLockMap` during parallel classes registration.\r\nAs a result, the `ClassLoader#parallelLockMap` contains several thousand of String->Object entries and all these entries from the map automatically burned into the image heap.\r\n\r\nIf Spring Boot classloaders (`org.springframework.core.DecoratingClassLoader`, `org.springframework.context.support.ContextTypeMatchClassLoader`,\r\n`org.springframework.core.OverridingClassLoader`, ...) are initialized during the built time they perform `ClassLoader.registerAsParallelCapable()` calls and enables `ClassLoader#parallelLockMap` usage.\r\nAs a result, the image increases in a ~8-9Mb and also it can lead to an error during the image build (for example _\"Static field or an object referenced from a static field changed during native image generation\"_)", "url": "https://github.com/oracle/graal/issues/2356", "user": "arodionov", "labels": ["bug", "native-image", "spring"], "created": "2020-04-17 11:04:13", "closed": "2020-04-21 23:32:23", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "native-image failing with unexpected CNFE when analyzing default methods", "body": "**Describe the issue**\r\nWe are compiling our app with `--allow-incomplete-classpath --report-unsupported-elements-at-runtime`. However it still reports CNFE at image build time like this:\r\n```\r\nCaused by: java.lang.NoClassDefFoundError: org/reactivestreams/Publisher\r\n\tat jdk.vm.ci.hotspot.CompilerToVM.getDeclaredMethods(Native Method)\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getDeclaredMethods(HotSpotResolvedObjectTypeImpl.java:952)\r\n\tat com.oracle.svm.hosted.classinitialization.ClassInitializationFeature.declaresDefaultMethods(ClassInitializationFeature.java:375)\r\n\tat com.oracle.svm.hosted.classinitialization.ClassInitializationFeature.hasDefaultMethods(ClassInitializationFeature.java:363)\r\n\tat com.oracle.svm.hosted.classinitialization.ClassInitializationFeature.buildClassInitializationInfo(ClassInitializationFeature.java:351)\r\n\tat com.oracle.svm.hosted.classinitialization.ClassInitializationFeature.duringAnalysis(ClassInitializationFeature.java:193)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$runPointsToAnalysis$8(NativeImageGenerator.java:715)\r\n\tat com.oracle.svm.hosted.FeatureHandler.forEachFeature(FeatureHandler.java:63)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:715)\r\n```\r\n\r\nThe default method can be found in https://github.com/spring-projects/spring-framework/blob/master/spring-tx/src/main/java/org/springframework/transaction/reactive/TransactionalOperator.java - it is the one involving Mono, since that extends CorePublisher which extends org.reactivestreams.Publisher.\r\n\r\nLooking at the code in https://github.com/oracle/graal/blob/69794db183e49551cc31b7c5aa122cd332c863f0/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/classinitialization/ClassInitializationFeature.java. \r\n\r\nI see within the buildClassInitializationInfo method that we catch problems accessing getDeclaredMethods() (line 330) and record what went wrong and continue. However the call to hasDefaultMethods() from the stack trace is made outside of the try catch  (line 358) that would cope with this problem, and so the CNFE flies out of the method. Should the default method  call happen inside that try catch in some way so we cope with this type not being around? \r\n\r\nI have tried Graal 20.0 and master branch built today (16-Apr). \r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\nClone the spring-graal-native project, https://github.com/spring-projects-experimental/spring-graal-native - run `build.sh` at the root, then go into the samples/vanilla-tx folder in the pom there is the reactive-streams dependency. As cloned build.sh will run OK, remove the dependency and you will see the error above (compile.sh output is kept in target/native-image/output.txt)\r\n\r\n**Describe GraalVM and your environment:**\r\n GraalVM 20 (or master) on Java8 base, catalina.\r\n\r\n\r\n**More details**\r\nConsider adding the `--native-image-info` and  `--verbose` flags when building your native image and paste output below.\r\n\r\nAdd any other information about the problem here. Especially important are stack traces or log output. Feel free to link to gists or to screenshots if necessary.\r\n```\r\n    PASTE YOUR LOG/STACK TRACE HERE\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2355", "user": "aclement", "labels": ["bug", "native-image", "spring"], "created": "2020-04-16 21:05:38", "closed": "2020-04-16 22:14:12", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Musl-based static native-images no longer compile on master.", "body": "Due to changes on the master branch, musl-based static native-images no longer compile on master.\r\n\r\nThere are currently two known issues:\r\n - The specified compiler options are now also passed to the query code compiler. This results in the duplication of some options passed over to GCC.\r\n - A GNU specific optimization that has been added to the `PosixTruffleNFIFeature`.", "url": "https://github.com/oracle/graal/issues/2353", "user": "gradinac", "labels": ["bug", "native-image"], "created": "2020-04-16 14:28:39", "closed": "2020-04-24 11:00:48", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "windows 10 visual studio 2019 pro builds nothing [graalvm-ce-java11-windows-amd64-20.0.0]", "body": "Situation: installed \r\ngraalvm-ce-java11-windows-amd64-20.0.0\r\nnative-image-installable-svm-java11-windows-amd64-20.0.0.jar\r\nWindows 10 Prof, Visual Studio 2019 Pro.\r\nno other jdk/jre installed.\r\n\r\nBuild using\r\nx64 Native Tools Command Prompt for VS 2019\r\na build of a helloWorld-Style .class builds nothing...\r\nnative-image helloWorld michi2.exe\r\noutput... \r\n\r\n[michi2.exe:9240]    classlist:   2,810.18 ms,  1.00 GB\r\n[michi2.exe:9240]        (cap):  29,293.81 ms,  1.20 GB\r\n[michi2.exe:9240]        setup:  32,289.95 ms,  1.20 GB\r\n[michi2.exe:9240]   (typeflow):   9,422.58 ms,  1.20 GB\r\n[michi2.exe:9240]    (objects):   7,045.92 ms,  1.20 GB\r\n[michi2.exe:9240]   (features):     651.98 ms,  1.20 GB\r\n[michi2.exe:9240]     analysis:  17,510.72 ms,  1.20 GB\r\n[michi2.exe:9240]     (clinit):     286.10 ms,  1.20 GB\r\n[michi2.exe:9240]     universe:     963.36 ms,  1.20 GB\r\n[michi2.exe:9240]      (parse):   2,953.73 ms,  1.20 GB\r\n[michi2.exe:9240]     (inline):   2,388.20 ms,  1.20 GB\r\n[michi2.exe:9240]    (compile):  15,101.78 ms,  1.20 GB\r\n[michi2.exe:9240]      compile:  21,127.21 ms,  1.20 GB\r\n[michi2.exe:9240]        image:   1,437.71 ms,  1.20 GB\r\n[michi2.exe:9240]        write:   1,195.89 ms,  1.20 GB\r\n[michi2.exe:9240]      [total]:  77,806.69 ms,  1.20 GB\r\n\r\nno more lines. \r\nimage is not build at all.\r\nif you play around withe --force options / parameters \r\nyou will receive a .exe but it fails to function \r\nesp. popup with \r\n\r\nUnsupported 16-Bit Application\r\n....cannot start or run due to incompatibility with 64-bit versions of Windows. ...\r\nand so on....\r\n\r\n(assuming this is regarding it could not find any jre/jdk linked)\r\n\r\nMaybe there is a problem with the VC 2019 Pro install? Any suggestions, please? known and solved bug? will try other builds in the meanwhile\r\nThank you!\r\n", "url": "https://github.com/oracle/graal/issues/2350", "user": "bavarianpumukel", "labels": ["bug", "native-image"], "created": "2020-04-16 13:06:10", "closed": "2020-04-17 10:59:04", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[native-image] java.lang.ref.SoftReference - Static field or an object referenced from a static field changed during native image generation", "body": "**Describe the issue**\r\nI don't know how to describe this issue. So here is the stack trace and code.\r\n\r\n```\r\n> Fatal error:com.oracle.svm.core.util.VMError$HostedError: com.oracle.svm.core.util.UserError$UserException: Static field or an object referenced from a static field changed during native image generation?\r\n>   object:java.lang.ref.SoftReference@2a534cf9  of class: java.lang.ref.SoftReference\r\n>   reachable through:\r\n>     object: [Ljava.lang.ref.SoftReference;@24b7339  of class: java.lang.ref.SoftReference[]\r\n>     object: Form(Object,Object,int,Object)void  of class: java.lang.invoke.MethodTypeForm\r\n>     object: (MethodHandle,Object,int,Object)void  of class: java.lang.invoke.MethodType\r\n>     object: MethodHandle(MethodHandle,Object,int,Object)void  of class: java.lang.invoke.DirectMethodHandle\r\n>     object: [Ljava.lang.invoke.MethodHandle;@6bfa6a8e  of class: java.lang.invoke.MethodHandle[]\r\n>     object: Invokers(Object,int,Object)void  of class: java.lang.invoke.Invokers\r\n>     object: (Object,int,Object)void  of class: java.lang.invoke.MethodType\r\n>     root: java.lang.invoke.MethodHandleImpl$AsVarargsCollector.invokeWithArguments(Object[])\r\n> \r\n> \tat com.oracle.svm.core.util.VMError.shouldNotReachHere(VMError.java:72)\r\n> \tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:649)\r\n> \tat com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:452)\r\n> \tat java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1407)\r\n> \tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n> \tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n> \tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n> \tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n> \tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n> Caused by: com.oracle.svm.core.util.UserError$UserException: Static field or an object referenced from a static field changed during native image generation?\r\n>   object:java.lang.ref.SoftReference@2a534cf9  of class: java.lang.ref.SoftReference\r\n>   reachable through:\r\n>     object: [Ljava.lang.ref.SoftReference;@24b7339  of class: java.lang.ref.SoftReference[]\r\n>     object: Form(Object,Object,int,Object)void  of class: java.lang.invoke.MethodTypeForm\r\n>     object: (MethodHandle,Object,int,Object)void  of class: java.lang.invoke.MethodType\r\n>     object: MethodHandle(MethodHandle,Object,int,Object)void  of class: java.lang.invoke.DirectMethodHandle\r\n>     object: [Ljava.lang.invoke.MethodHandle;@6bfa6a8e  of class: java.lang.invoke.MethodHandle[]\r\n>     object: Invokers(Object,int,Object)void  of class: java.lang.invoke.Invokers\r\n>     object: (Object,int,Object)void  of class: java.lang.invoke.MethodType\r\n>     root: java.lang.invoke.MethodHandleImpl$AsVarargsCollector.invokeWithArguments(Object[])\r\n> \r\n> \tat com.oracle.svm.core.util.UserError.abort(UserError.java:68)\r\n> \tat com.oracle.svm.hosted.image.NativeImageHeapWriter.verifyTargetDidNotChange(NativeImageHeapWriter.java:130)\r\n> \tat com.oracle.svm.hosted.image.NativeImageHeapWriter.writeReference(NativeImageHeapWriter.java:158)\r\n> \tat com.oracle.svm.hosted.image.NativeImageHeapWriter.write(NativeImageHeapWriter.java:147)\r\n> \tat com.oracle.svm.hosted.image.NativeImageHeapWriter.writeConstant(NativeImageHeapWriter.java:184)\r\n> \tat com.oracle.svm.hosted.image.NativeImageHeapWriter.writeObject(NativeImageHeapWriter.java:377)\r\n> \tat com.oracle.svm.hosted.image.NativeImageHeapWriter.writeHeap(NativeImageHeapWriter.java:89)\r\n> \tat com.oracle.svm.hosted.image.NativeBootImage.build(NativeBootImage.java:483)\r\n> \tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:638)\r\n> \t... 7 more\r\n> Error: Image build request failed with exit status 1\r\n```\r\n\r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\ngit clone https://github.com/warrenc5/jain-slee-js.git\r\n./test.sh will run mvn -Pgraal clean install\r\nmvn -Prun  builds and runs the program with the graal agent\r\n\r\ngo.sh is the command as output from the plugin to run native-image directly.\r\nit generates the binary target/jslee-js\r\n\r\n**Describe GraalVM and your environment:**\r\nUsing https://github.com/graalvm/graalvm-ce-dev-builds/releases/tag/20.1.0-dev-20200411_0336\r\nLinux leet 5.5.0-1-amd64 #1 SMP Debian 5.5.13-2 (2020-03-30) x86_64 GNU/Linux\r\n\r\n```\r\nwozza@leet:~/work/code/jslee-js$ ./go.sh\r\nApply jar:file:///home/wozza/work/code/jslee-js/target/jslee-js-1.0.0-SNAPSHOT.jar!/META-INF/native-image/jni-config.json\r\nApply jar:file:///home/wozza/work/code/jslee-js/target/jslee-js-1.0.0-SNAPSHOT.jar!/META-INF/native-image/reflect-config.json\r\nApply jar:file:///home/wozza/work/code/jslee-js/target/jslee-js-1.0.0-SNAPSHOT.jar!/META-INF/native-image/resource-config.json\r\nApply jar:file:///home/wozza/work/code/jslee-js/target/jslee-js-1.0.0-SNAPSHOT.jar!/META-INF/native-image/proxy-config.json\r\nBuild on Server(pid: 168995, port: 36155)\r\nSendBuildRequest [\r\n-task=com.oracle.svm.hosted.NativeImageGeneratorRunner\r\n-imagecp\r\n/usr/local/java/graalvm-ce-java11-20.1.0-dev/lib/svm/builder/llvm-wrapper-shadowed.jar:/usr/local/java/graalvm-ce-java11-20.1.0-dev/lib/svm/builder/javacpp-shadowed.jar:/usr/local/java/graalvm-ce-java11-20.1.0-dev/lib/svm/builder/svm.jar:/usr/local/java/graalvm-ce-java11-20.1.0-dev/lib/svm/builder/pointsto.jar:/usr/local/java/graalvm-ce-java11-20.1.0-dev/lib/svm/builder/llvm-platform-specific-shadowed.jar:/usr/local/java/graalvm-ce-java11-20.1.0-dev/lib/svm/builder/objectfile.jar:/usr/local/java/graalvm-ce-java11-20.1.0-dev/lib/svm/builder/svm-llvm.jar:/usr/local/java/graalvm-ce-java11-20.1.0-dev/lib/svm/library-support.jar:/usr/local/java/graalvm-ce-java11-20.1.0-dev/languages/regex/tregex.jar:/usr/local/java/graalvm-ce-java11-20.1.0-dev/languages/js/asm-7.1.jar:/usr/local/java/graalvm-ce-java11-20.1.0-dev/languages/js/asm-analysis-7.1.jar:/usr/local/java/graalvm-ce-java11-20.1.0-dev/languages/js/asm-commons-7.1.jar:/usr/local/java/graalvm-ce-java11-20.1.0-dev/languages/js/asm-tree-7.1.jar:/usr/local/java/graalvm-ce-java11-20.1.0-dev/languages/js/trufflenode.jar:/usr/local/java/graalvm-ce-java11-20.1.0-dev/languages/js/asm-util-7.1.jar:/usr/local/java/graalvm-ce-java11-20.1.0-dev/languages/js/icu4j.jar:/usr/local/java/graalvm-ce-java11-20.1.0-dev/languages/js/graaljs.jar:/home/wozza/.m2/repository/javax/slee/jainslee-api/1.1/jainslee-api-1.1.jar:/home/wozza/.m2/repository/org/jboss/remotingjmx/remoting-jmx/3.0.4.Final/remoting-jmx-3.0.4.Final.jar:/home/wozza/.m2/repository/org/jboss/xnio/xnio-api/3.5.1.Final/xnio-api-3.5.1.Final.jar:/home/wozza/.m2/repository/org/jboss/xnio/xnio-nio/3.5.1.Final/xnio-nio-3.5.1.Final.jar:/home/wozza/.m2/repository/org/wildfly/client/wildfly-client-config/1.0.0.Final/wildfly-client-config-1.0.0.Final.jar:/home/wozza/.m2/repository/org/wildfly/common/wildfly-common/1.2.0.Final/wildfly-common-1.2.0.Final.jar:/home/wozza/.m2/repository/org/wildfly/security/wildfly-elytron/1.1.0.Final/wildfly-elytron-1.1.0.Final.jar:/home/wozza/.m2/repository/org/jboss/remoting/jboss-remoting/5.0.18.Final/jboss-remoting-5.0.18.Final.jar:/home/wozza/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/wozza/.m2/repository/org/jboss/marshalling/jboss-marshalling-river/2.0.9.Final/jboss-marshalling-river-2.0.9.Final.jar:/home/wozza/.m2/repository/org/jboss/marshalling/jboss-marshalling/2.0.9.Final/jboss-marshalling-2.0.9.Final.jar:/home/wozza/.m2/repository/javax/javaee-api/7.0/javaee-api-7.0.jar:/home/wozza/.m2/repository/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/home/wozza/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/home/wozza/work/code/jslee-js/target/jslee-js-1.0.0-SNAPSHOT.jar\r\n-H:Path=/home/wozza/work/code/jslee-js\r\n-H:+DumpTargetInfo\r\n-H:JNIConfigurationResources=META-INF/native-image/jni-config.json\r\n-H:ReflectionConfigurationResources=META-INF/native-image/reflect-config.json\r\n-H:ResourceConfigurationResources=META-INF/native-image/resource-config.json\r\n-H:DynamicProxyConfigurationResources=META-INF/native-image/proxy-config.json\r\n-H:+ReportUnsupportedElementsAtRuntime\r\n-H:+ReportExceptionStackTraces\r\n-H:Features=com.oracle.svm.truffle.TruffleFeature,org.graalvm.home.HomeFinderFeature\r\n-H:MaxRuntimeCompileMethods=1400\r\n-H:ClassInitialization=org.graalvm.launcher:build_time,com.oracle.truffle:build_time\r\n-H:MaxRuntimeCompileMethods=9000\r\n-H:ClassInitialization=com.oracle.truffle.js:build_time,com.oracle.js.parser:build_time,com.oracle.truffle.trufflenode:build_time,com.oracle.truffle.regex:build_time\r\n-H:ClassInitialization=com.ibm.icu:run_time\r\n-H:ReflectionConfigurationResources=com/oracle/truffle/js/runtime/resources/reflect-config.json\r\n-H:ResourceConfigurationResources=com/oracle/truffle/js/runtime/resources/resource-config.json\r\n-H:Log=registerResource:basic\r\n-H:+PrintClassInitialization\r\n-H:+TraceClassInitialization\r\n-H:+AllowIncompleteClasspath\r\n-H:ClassInitialization=org.jboss.logging.JDKLevel:build_time\r\n-H:ClassInitialization=Proxy.newProxyInstance:run_time\r\n-H:ClassInitialization=org.wildfly.security.ssl.DelegatingSSLContext:run_time\r\n-H:Class=RunScript\r\n-H:Name=jslee-js\r\n-H:FallbackThreshold=0\r\n-H:CLibraryPath=/usr/local/java/graalvm-ce-java11-20.1.0-dev/lib/svm/clibraries/linux-amd64\r\n]\r\n[jslee-js:168995]    classlist:   1,934.82 ms,  5.92 GB\r\n[jslee-js:168995]        (cap):     225.04 ms,  5.92 GB\r\n[jslee-js:168995]        setup:     388.29 ms,  5.92 GB\r\n# Building image for target platform: org.graalvm.nativeimage.Platform$LINUX_AMD64\r\n# Using native toolchain:\r\n#   Name: GNU project C and C++ compiler (gcc)\r\n#   Vendor: linux\r\n#   Version: 9.3.0\r\n#   Target architecture: x86_64\r\n#   Path: /usr/bin/gcc\r\n# Using CLibrary: com.oracle.svm.core.c.libc.GLibc\r\nPrinting initializer configuration to /home/wozza/work/code/jslee-js/reports/initializer_configuration_20200415_055845.txt\r\n[thread:224] scope: ForkJoinPool-29-worker-19\r\n  [thread:224] scope: ForkJoinPool-29-worker-19.registerResource\r\n  ServiceLoaderFeature: registerResource: META-INF/services/java.security.Provider\r\n  [thread:224] scope: ForkJoinPool-29-worker-19.registerResource\r\n  ServiceLoaderFeature: registerResource: META-INF/services/java.nio.file.spi.FileSystemProvider\r\n  [thread:224] scope: ForkJoinPool-29-worker-19.registerResource\r\n  ServiceLoaderFeature: registerResource: META-INF/services/com.oracle.truffle.api.TruffleLanguage$Provider\r\n  [thread:224] scope: ForkJoinPool-29-worker-19.registerResource\r\n  ServiceLoaderFeature: registerResource: META-INF/services/com.oracle.truffle.js.runtime.Evaluator\r\n  [thread:224] scope: ForkJoinPool-29-worker-19.registerResource\r\n  Resources have been added by ServiceLoaderFeature. Automatic registration can be disabled with -H:-UseServiceLoaderFeature\r\nPrinting initializer configuration to /home/wozza/work/code/jslee-js/reports/initializer_configuration_20200415_055940.txt\r\n  [thread:224] scope: ForkJoinPool-29-worker-19.registerResource\r\n  ServiceLoaderFeature: registerResource: META-INF/services/java.lang.SecurityManager\r\n  [thread:224] scope: ForkJoinPool-29-worker-19.registerResource\r\n  ServiceLoaderFeature: registerResource: META-INF/services/javax.security.sasl.SaslServerFactory\r\n  [thread:224] scope: ForkJoinPool-29-worker-19.registerResource\r\n  ServiceLoaderFeature: registerResource: META-INF/services/javax.management.remote.JMXConnectorProvider\r\n  [thread:224] scope: ForkJoinPool-29-worker-19.registerResource\r\n  ServiceLoaderFeature: registerResource: META-INF/services/javax.security.sasl.SaslClientFactory\r\n  [thread:224] scope: ForkJoinPool-29-worker-19.registerResource\r\n  ServiceLoaderFeature: registerResource: META-INF/services/org.wildfly.security.http.HttpServerAuthenticationMechanismFactory\r\n  [thread:224] scope: ForkJoinPool-29-worker-19.registerResource\r\n  ServiceLoaderFeature: registerResource: META-INF/services/org.jboss.marshalling.ProviderDescriptor\r\n  [thread:224] scope: ForkJoinPool-29-worker-19.registerResource\r\n  Resources have been added by ServiceLoaderFeature. Automatic registration can be disabled with -H:-UseServiceLoaderFeature\r\n  [thread:224] scope: ForkJoinPool-29-worker-19.registerResource\r\n  ServiceLoaderFeature: registerResource: META-INF/services/org.xnio.XnioProvider\r\n  [thread:224] scope: ForkJoinPool-29-worker-19.registerResource\r\n  Resources have been added by ServiceLoaderFeature. Automatic registration can be disabled with -H:-UseServiceLoaderFeature\r\nPrinting initializer dependencies to /home/wozza/work/code/jslee-js/reports/initializer_dependencies_20200415_061226.dot\r\nPrinting 1011 classes that are considered as safe for build-time initialization to /home/wozza/work/code/jslee-js/reports/safe_classes_20200415_061226.txt\r\nPrinting 18090 classes of type BUILD_TIME to /home/wozza/work/code/jslee-js/reports/build_time_classes_20200415_061226.txt\r\nPrinting 62 classes of type RERUN to /home/wozza/work/code/jslee-js/reports/rerun_classes_20200415_061226.txt\r\nPrinting 1128 classes of type RUN_TIME to /home/wozza/work/code/jslee-js/reports/run_time_classes_20200415_061226.txt\r\n[jslee-js:168995]     (clinit):   1,314.19 ms,  5.69 GB\r\n# Static libraries:\r\n#   ../../../../../../usr/local/java/graalvm-ce-java11-20.1.0-dev/lib/svm/clibraries/linux-amd64/liblibchelper.a\r\n#   ../../../../../../usr/local/java/graalvm-ce-java11-20.1.0-dev/lib/libnet.a\r\n#   ../../../../../../usr/local/java/graalvm-ce-java11-20.1.0-dev/lib/svm/clibraries/linux-amd64/libstrictmath.a\r\n#   ../../../../../../usr/local/java/graalvm-ce-java11-20.1.0-dev/lib/svm/clibraries/linux-amd64/libffi.a\r\n#   ../../../../../../usr/local/java/graalvm-ce-java11-20.1.0-dev/lib/libextnet.a\r\n#   ../../../../../../usr/local/java/graalvm-ce-java11-20.1.0-dev/lib/libnio.a\r\n#   ../../../../../../usr/local/java/graalvm-ce-java11-20.1.0-dev/lib/libjava.a\r\n#   ../../../../../../usr/local/java/graalvm-ce-java11-20.1.0-dev/lib/libsunec.a\r\n#   ../../../../../../usr/local/java/graalvm-ce-java11-20.1.0-dev/lib/svm/clibraries/linux-amd64/libjvm.a\r\n#   ../../../../../../usr/local/java/graalvm-ce-java11-20.1.0-dev/lib/libzip.a\r\n# Other libraries: stdc++,pthread,dl,z,rt\r\n[jslee-js:168995]   (typeflow): 249,510.04 ms,  5.69 GB\r\n[jslee-js:168995]    (objects): 553,727.02 ms,  5.69 GB\r\n[jslee-js:168995]   (features):  12,868.80 ms,  5.69 GB\r\n[jslee-js:168995]     analysis: 822,494.67 ms,  5.69 GB\r\n[jslee-js:168995]     universe:   8,177.17 ms,  5.70 GB\r\n9798 method(s) included for runtime compilation\r\n[jslee-js:168995]      (parse):   6,871.60 ms,  4.25 GB\r\n[jslee-js:168995]     (inline):   9,208.09 ms,  4.90 GB\r\n[jslee-js:168995]    (compile):  34,743.58 ms,  5.85 GB\r\n[jslee-js:168995]      compile:  54,299.08 ms,  5.86 GB\r\n[jslee-js:168995]        image:   6,157.06 ms,  5.61 GB\r\nFatal error:com.oracle.svm.core.util.VMError$HostedError: com.oracle.svm.core.util.UserError$UserException: Static field or an object referenced from a static field changed during native image generation?\r\n  object:java.lang.ref.SoftReference@770a56bb  of class: java.lang.ref.SoftReference\r\n  reachable through:\r\n    object: [Ljava.lang.ref.SoftReference;@5824362b  of class: java.lang.ref.SoftReference[]\r\n    object: Form(Object,Object,int,Object)void  of class: java.lang.invoke.MethodTypeForm\r\n    object: (MethodHandle,Object,int,Object)void  of class: java.lang.invoke.MethodType\r\n    object: MethodHandle(MethodHandle,Object,int,Object)void  of class: java.lang.invoke.DirectMethodHandle\r\n    object: [Ljava.lang.invoke.MethodHandle;@6d62a12d  of class: java.lang.invoke.MethodHandle[]\r\n    object: Invokers(Object,int,Object)void  of class: java.lang.invoke.Invokers\r\n    object: (Object,int,Object)void  of class: java.lang.invoke.MethodType\r\n    root: java.lang.invoke.MethodHandleImpl$AsVarargsCollector.invokeWithArguments(Object[])\r\n\r\n\tat com.oracle.svm.core.util.VMError.shouldNotReachHere(VMError.java:72)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:649)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:452)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1407)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nCaused by: com.oracle.svm.core.util.UserError$UserException: Static field or an object referenced from a static field changed during native image generation?\r\n  object:java.lang.ref.SoftReference@770a56bb  of class: java.lang.ref.SoftReference\r\n  reachable through:\r\n    object: [Ljava.lang.ref.SoftReference;@5824362b  of class: java.lang.ref.SoftReference[]\r\n    object: Form(Object,Object,int,Object)void  of class: java.lang.invoke.MethodTypeForm\r\n    object: (MethodHandle,Object,int,Object)void  of class: java.lang.invoke.MethodType\r\n    object: MethodHandle(MethodHandle,Object,int,Object)void  of class: java.lang.invoke.DirectMethodHandle\r\n    object: [Ljava.lang.invoke.MethodHandle;@6d62a12d  of class: java.lang.invoke.MethodHandle[]\r\n    object: Invokers(Object,int,Object)void  of class: java.lang.invoke.Invokers\r\n    object: (Object,int,Object)void  of class: java.lang.invoke.MethodType\r\n    root: java.lang.invoke.MethodHandleImpl$AsVarargsCollector.invokeWithArguments(Object[])\r\n\r\n\tat com.oracle.svm.core.util.UserError.abort(UserError.java:68)\r\n\tat com.oracle.svm.hosted.image.NativeImageHeapWriter.verifyTargetDidNotChange(NativeImageHeapWriter.java:130)\r\n\tat com.oracle.svm.hosted.image.NativeImageHeapWriter.writeReference(NativeImageHeapWriter.java:158)\r\n\tat com.oracle.svm.hosted.image.NativeImageHeapWriter.write(NativeImageHeapWriter.java:147)\r\n\tat com.oracle.svm.hosted.image.NativeImageHeapWriter.writeConstant(NativeImageHeapWriter.java:184)\r\n\tat com.oracle.svm.hosted.image.NativeImageHeapWriter.writeObject(NativeImageHeapWriter.java:377)\r\n\tat com.oracle.svm.hosted.image.NativeImageHeapWriter.writeHeap(NativeImageHeapWriter.java:89)\r\n\tat com.oracle.svm.hosted.image.NativeBootImage.build(NativeBootImage.java:483)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:638)\r\n\t... 7 more\r\nError: Image build request failed with exit status 1\r\ncom.oracle.svm.driver.NativeImage$NativeImageError: Image build request failed with exit status 1\r\n\tat com.oracle.svm.driver.NativeImage.showError(NativeImage.java:1541)\r\n\tat com.oracle.svm.driver.NativeImage.build(NativeImage.java:1299)\r\n\tat com.oracle.svm.driver.NativeImage.performBuild(NativeImage.java:1260)\r\n\tat com.oracle.svm.driver.NativeImage.main(NativeImage.java:1219)\r\n\tat com.oracle.svm.driver.NativeImage$JDK9Plus.main(NativeImage.java:1722)\r\n```\r\n\r\n", "url": "https://github.com/oracle/graal/issues/2345", "user": "warrenc5", "labels": ["bug", "native-image"], "created": "2020-04-14 20:27:43", "closed": "2020-04-28 05:20:39", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "Regression: native image agent adds SVMToHotSpotEntryPoints to jni-config.json", "body": "# Overview\r\n\r\nAs mentioned in the discussion following https://github.com/oracle/graal/issues/2234#issuecomment-610938442, the native image JVM agent now produces an entry for `org.graalvm.compiler.hotspot.management.SVMToHotSpotEntryPoints` in `jni-config.json`, resulting in the following during the native image build.\r\n\r\n```\r\n[/build/native-image-tests.bin:9963]    classlist:  15,245.21 ms,  3.10 GB\r\n[/build/native-image-tests.bin:9963]        (cap):   2,510.49 ms,  3.26 GB\r\n[/build/native-image-tests.bin:9963]        setup:   5,897.09 ms,  3.26 GB\r\n[/build/native-image-tests.bin:9963]     analysis:   6,419.58 ms,  3.26 GB\r\nError: type is not available in this platform: org.graalvm.compiler.hotspot.management.SVMToHotSpotEntryPoints\r\ncom.oracle.svm.core.util.UserError$UserException: type is not available in this platform: org.graalvm.compiler.hotspot.management.SVMToHotSpotEntryPoints\r\n        at com.oracle.svm.core.util.UserError.abort(UserError.java:79)\r\n        at com.oracle.svm.hosted.FallbackFeature.reportAsFallback(FallbackFeature.java:221)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:754)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:538)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:451)\r\n        at java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1386)\r\n        at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n        at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n        at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n        at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: com.oracle.graal.pointsto.constraints.UnsupportedFeatureException: type is not available in this platform: org.graalvm.compiler.hotspot.management.SVMToHotSpotEntryPoints\r\n        at com.oracle.graal.pointsto.meta.AnalysisUniverse.createType(AnalysisUniverse.java:214)\r\n        at com.oracle.graal.pointsto.meta.AnalysisUniverse.lookupAllowUnresolved(AnalysisUniverse.java:205)\r\n        at com.oracle.graal.pointsto.meta.AnalysisUniverse.lookup(AnalysisUniverse.java:182)\r\n        at com.oracle.graal.pointsto.meta.AnalysisUniverse.lookup(AnalysisUniverse.java:75)\r\n        at com.oracle.graal.pointsto.infrastructure.UniverseMetaAccess$1.apply(UniverseMetaAccess.java:52)\r\n        at com.oracle.graal.pointsto.infrastructure.UniverseMetaAccess$1.apply(UniverseMetaAccess.java:49)\r\n        at java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1688)\r\n        at com.oracle.graal.pointsto.infrastructure.UniverseMetaAccess.lookupJavaType(UniverseMetaAccess.java:84)\r\n        at com.oracle.graal.pointsto.meta.AnalysisMetaAccess.lookupJavaType(AnalysisMetaAccess.java:47)\r\n        at com.oracle.svm.hosted.substitute.SubstitutionReflectivityFilter.shouldExclude(SubstitutionReflectivityFilter.java:46)\r\n        at com.oracle.svm.jni.access.JNIAccessFeature.addClass(JNIAccessFeature.java:243)\r\n        at com.oracle.svm.jni.access.JNIAccessFeature.duringAnalysis(JNIAccessFeature.java:222)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.lambda$runPointsToAnalysis$8(NativeImageGenerator.java:721)\r\n        at com.oracle.svm.hosted.FeatureHandler.forEachFeature(FeatureHandler.java:63)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:721)\r\n        ... 7 more\r\nError: Image build request failed with exit status 1\r\n```\r\n\r\nI unfortunately do not have a simplified example to reproduce this regression, but I can tell you how I encountered it.\r\n\r\n1. `git clone git@github.com:sbrannen/spring-framework.git`\r\n2. Check out the `graalvm-testing` feature branch from that clone.\r\n3. Follow the instructions in the `GraalVM_Testing.md` in the root of the repository, but using GraalVM CE 20.1.0-dev-20200411_0336 instead of GraalVM CE 20.0.0.\r\n4. Specifically, the issue occurs when executing the native image build for tests in the `spring-core` project. You should be able to reproduce it via the following command.\r\n\r\n```shell\r\n./gradlew --no-build-cache -DnativeImageTesting=true :spring-core:clean :spring-core:testInNativeImage\r\n```\r\n\r\n# Environment\r\n\r\n- GraalVM version: GraalVM CE 20.1.0-dev-20200411_0336\r\n- JDK major version: 8\r\n- OS: macOS 10.14.6\r\n- Architecture: i386 / x86_64\r\n", "url": "https://github.com/oracle/graal/issues/2341", "user": "sbrannen", "labels": ["agent", "bug", "native-image", "spring"], "created": "2020-04-13 18:09:36", "closed": "2020-04-22 09:07:33", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Agent missed reflections in clinit ", "body": "**Describe the issue**\r\nAgent intercepts java.lang.Class.forName method and executes _forName(className, **true**, classloader)_ inside Agent. If there are other reflection, resource, proxy or jni calls in the target class' static initializer, Agent will miss them and lead to native-image runtime failure.\r\nThis issue can be fixed by this proposed PR https://github.com/oracle/graal/pull/2334\r\n**Steps to reproduce the issue**\r\nThis test can easily reproduce the issue:\r\n```\r\n/*\r\n * Copyright (c) 2020 Alibaba Group Holding Limited. All Rights Reserved.\r\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\r\n *\r\n * This code is free software; you can redistribute it and/or modify it\r\n * under the terms of the GNU General Public License version 2 only, as\r\n * published by the Free Software Foundation. Alibaba designates this\r\n * particular file as subject to the \"Classpath\" exception as provided\r\n * by Oracle in the LICENSE file that accompanied this code.\r\n *\r\n * This code is distributed in the hope that it will be useful, but WITHOUT\r\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\r\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\r\n * version 2 for more details (a copy is included in the LICENSE file that\r\n * accompanied this code).\r\n *\r\n * You should have received a copy of the GNU General Public License version\r\n * 2 along with this work; if not, write to the Free Software Foundation,\r\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\r\n *\r\n */\r\npackage test.reflect;\r\n\r\nimport java.lang.reflect.InvocationTargetException;\r\n\r\n/**\r\n * $GRAALVM_HOME/bin/java -cp bin -agentlib:native-image-agent=config-output-dir=config-complexCL/META-INF/native-image test.reflect.TestComplexClassInitializer\r\n * $GRAALVM_HOME/bin/native-image -cp out/production/staticmodel:config-complexCL test.reflect.TestComplexClassInitializer\r\n * ./test.reflect.testcomplexclassinitializer\r\n */\r\npublic class TestComplexClassInitializer {\r\n\r\n    static String name = \"test.reflect.ComplexCL\";\r\n\r\n    public static void main(String[] args) throws NoSuchMethodException, ClassNotFoundException {\r\n        Class<?> cl = Class.forName(name);\r\n        System.out.println(ComplexCL.obj.toString());\r\n    }\r\n\r\n    public static String getRefName(){\r\n        return \"test.reflect.TestA\";\r\n    }\r\n}\r\n\r\nclass ComplexCL{\r\n    static Object obj;\r\n    static {\r\n        try {\r\n            Class clazz = Class.forName(TestComplexClassInitializer.getRefName());\r\n            obj=clazz.getConstructor().newInstance();\r\n        } catch (ClassNotFoundException | NoSuchMethodException | InstantiationException | IllegalAccessException | InvocationTargetException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n\r\nclass TestA{\r\n\r\n    public  TestA(){}\r\n\r\n    @Override\r\n    public String toString(){\r\n        return \"This is TestA\";\r\n    }\r\n}\r\n\r\n```\r\nA more realistic example is from SPECjvm2008's derby benchmark, the above test is simplified from this case:\r\n```\r\nXBM01.D :\r\nERROR XBM01: XBM01.D :\r\n        at org.apache.derby.iapi.services.monitor.Monitor.exceptionStartingModule(Monitor.java:669)\r\n        at org.apache.derby.impl.services.monitor.ProtocolKey.create(ProtocolKey.java:70)\r\n        at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:542)\r\n        at org.apache.derby.iapi.services.monitor.Monitor.startSystemModule(Monitor.java:366)\r\n        at org.apache.derby.impl.services.monitor.BaseMonitor.runWithState(BaseMonitor.java:364)\r\n        at org.apache.derby.impl.services.monitor.FileMonitor.<init>(FileMonitor.java:60)\r\n        at org.apache.derby.iapi.services.monitor.Monitor.startMonitor(Monitor.java:289)\r\n        at org.apache.derby.iapi.jdbc.JDBCBoot.boot(JDBCBoot.java:69)\r\n        at org.apache.derby.jdbc.EmbeddedDriver.boot(EmbeddedDriver.java:201)\r\n        at org.apache.derby.jdbc.EmbeddedDriver.<clinit>(EmbeddedDriver.java:96)\r\n        at com.oracle.svm.core.hub.ClassInitializationInfo.invokeClassInitializer(ClassInitializationInfo.java:350)\r\n        at com.oracle.svm.core.hub.ClassInitializationInfo.initialize(ClassInitializationInfo.java:270)\r\n        at java.lang.Class.ensureInitialized(DynamicHub.java:504)\r\n        at spec.benchmarks.derby.DerbyHarness.initDatabases(DerbyHarness.java:232)\r\n        at spec.benchmarks.derby.Main.setupBenchmark(Main.java:99)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at spec.harness.SpecJVMBenchmarkBase.runSimple(SpecJVMBenchmarkBase.java:124)\r\n        at spec.benchmarks.derby.Main.main(Main.java:134)\r\nCaused by: java.lang.ClassNotFoundException: org.apache.derby.iapi.services.stream.InfoStreams\r\n        at com.oracle.svm.core.hub.ClassForNameSupport.forName(ClassForNameSupport.java:60)\r\n        at java.lang.Class.forName(DynamicHub.java:1237)\r\n        at org.apache.derby.impl.services.monitor.ProtocolKey.create(ProtocolKey.java:64)\r\n        ... 16 more\r\n============= begin nested exception, level (1) ===========\r\njava.lang.ClassNotFoundException: org.apache.derby.iapi.services.stream.InfoStreams\r\n        at com.oracle.svm.core.hub.ClassForNameSupport.forName(ClassForNameSupport.java:60)\r\n        at java.lang.Class.forName(DynamicHub.java:1237)\r\n        at org.apache.derby.impl.services.monitor.ProtocolKey.create(ProtocolKey.java:64)\r\n        at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:542)\r\n        at org.apache.derby.iapi.services.monitor.Monitor.startSystemModule(Monitor.java:366)\r\n        at org.apache.derby.impl.services.monitor.BaseMonitor.runWithState(BaseMonitor.java:364)\r\n        at org.apache.derby.impl.services.monitor.FileMonitor.<init>(FileMonitor.java:60)\r\n        at org.apache.derby.iapi.services.monitor.Monitor.startMonitor(Monitor.java:289)\r\n        at org.apache.derby.iapi.jdbc.JDBCBoot.boot(JDBCBoot.java:69)\r\n        at org.apache.derby.jdbc.EmbeddedDriver.boot(EmbeddedDriver.java:201)\r\n        at org.apache.derby.jdbc.EmbeddedDriver.<clinit>(EmbeddedDriver.java:96)\r\n        at com.oracle.svm.core.hub.ClassInitializationInfo.invokeClassInitializer(ClassInitializationInfo.java:350)\r\n        at com.oracle.svm.core.hub.ClassInitializationInfo.initialize(ClassInitializationInfo.java:270)\r\n        at java.lang.Class.ensureInitialized(DynamicHub.java:504)\r\n        at spec.benchmarks.derby.DerbyHarness.initDatabases(DerbyHarness.java:232)\r\n        at spec.benchmarks.derby.Main.setupBenchmark(Main.java:99)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at spec.harness.SpecJVMBenchmarkBase.runSimple(SpecJVMBenchmarkBase.java:124)\r\n        at spec.benchmarks.derby.Main.main(Main.java:134)\r\n============= end nested exception, level (1) ===========\r\n\r\n```\r\n**Describe GraalVM and your environment:**\r\n - GraalVM version (latest snapshot builds can be found [here](https://github.com/graalvm/graalvm-ce-dev-builds/releases)), or commit id if built from source: **[e.g. EE 19.3, CE 20.0, CE 20.1.0-dev-20200304_0848]**\r\n - JDK major version: **[e.g.:8]**\r\n - OS: **[e.g. macOS Catalina]**\r\n - Architecture: **[e.g.: AMD64]**\r\n\r\n\r\n**More details**\r\nConsider adding the `--native-image-info` and  `--verbose` flags when building your native image and paste output below.\r\n\r\nAdd any other information about the problem here. Especially important are stack traces or log output. Feel free to link to gists or to screenshots if necessary.\r\n```\r\n    PASTE YOUR LOG/STACK TRACE HERE\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2335", "user": "ziyilin", "labels": ["bug", "native-image"], "created": "2020-04-10 07:36:22", "closed": "2020-04-22 09:09:43", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "nativ-image java 8 graalvm 20.0.0 win64 static compile error", "body": "bin\\nativ-image --static -jar c:\\myjar.jar\r\n\r\n`Error: com.oracle.svm.hosted.substitute.DeletedElementException: Unsupported field java.net.URL.handlers is reachable\r\nTo diagnose the issue, you can add the option --report-unsupported-elements-at-runtime. The unsupported element is then reported at run time when it is accessed the first time.\r\nDetailed message:\r\nTrace:\r\n        at parsing java.net.URL.setURLStreamHandlerFactory(URL.java:1140)\r\nCall path from entry point to java.net.URL.setURLStreamHandlerFactory(URLStreamHandlerFactory):\r\n        at java.net.URL.setURLStreamHandlerFactory(URL.java:1132)\r\n        at org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader.main(JarRsrcLoader.java:48)\r\n        at com.oracle.svm.core.JavaMainWrapper.runCore(JavaMainWrapper.java:151)\r\n        at com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:186)\r\n        at com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)\r\n\r\nError: Use -H:+ReportExceptionStackTraces to print stacktrace of underlying exception\r\nError: Image build request failed with exit status 1`\r\n", "url": "https://github.com/oracle/graal/issues/2332", "user": "DoctorW00", "labels": ["bug", "native-image"], "created": "2020-04-10 00:00:58", "closed": "2020-04-17 07:25:10", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "Code removal regression", "body": "It seems there is a big regression at code removal level between 19.3.1 and 20.0.0. The reports mentioned are available in https://github.com/sdeleuze/graal-issues/tree/master/code-removal-regression.\r\n\r\nThe very same [jafu](https://github.com/spring-projects-experimental/spring-graal-native/tree/master/spring-graal-native-samples/jafu) example:\r\n\r\nWith GraalVM 19.3.1:\r\n\r\n- Image build time: 36.2s\r\n- RSS memory: 14.7M\r\n- Image size: 15.0M\r\n\r\nWith GraalVM 20.0.0:\r\n\r\n- Image build time: 43.2s\r\n- RSS memory: 17.9M\r\n- Image size: 21.8M\r\n\r\nA diff between packages reports available in the `jafu-sample-19.3.1-reports` and `jafu-sample-20.0.0-reports` shows that GraaVM 20.0.0 is unable to detect that following packages and related classes are not used:\r\n\r\n - `com.sun.org.apache.xalan`\r\n - `com.sun.org.apache.xerces`\r\n - `com.sun.xml.internal.stream`\r\n - `javax.xml.datatype`\r\n - `javax.xml.namespace`\r\n - `javax.xml.stream`\r\n - `javax.xml.transform`\r\n - `jdk.xml.internal`\r\n - `org.w3c.dom`\r\n - `org.xml.sax.helpers`\r\n\r\nSame problem with the [jafu-webmvc](https://github.com/spring-projects-experimental/spring-graal-native/tree/master/spring-graal-native-samples/jafu-webmvc) one:\r\n\r\nWith GraalVM 19.3.1:\r\n\r\n - Image build time: 78.8s\r\n - RSS memory: 38.3M\r\n - Image size: 37.8M\r\n\r\nWith GraalVM 20.0.0:\r\n\r\n- Image build time: 87.6s\r\n- RSS memory: 50.6M\r\n- Image size: 55.8M\r\n\r\nSimilar diff with a lot of XML related classed can be observed between packages reports available in the `jafu-webmvc-sample-19.3.1-reports` and `jafu-webmvc-sample-20.0.0-reports`.\r\n", "url": "https://github.com/oracle/graal/issues/2327", "user": "sdeleuze", "labels": ["bug", "native-image", "spring"], "created": "2020-04-09 12:58:54", "closed": "2020-05-02 17:14:53", "commits": {}, "ttf": 23.00027777777778, "commitsDetails": []}, {"title": "Spring Boot on GraalVM - Disabling Forks During test Phase Displays Classpath Error", "body": "**Preface**\r\n\r\nGiven that it requires Spring Boot in the mix, I cannot say for certain if this is an issue with Spring Boot, or an issue with GraalVM.  It was suggested on Slack by @chumer to go ahead and submit this issue just in case.\r\n\r\n**Repo with example project**\r\n\r\nhttps://github.com/justinnichols/graalvm-mvn-test-bug\r\n\r\n**Issue**\r\n\r\nIn order to breakpoint debug the test phase of a maven project in IntelliJ IDEA, we have to disable forks during the test phase.  When doing so, for a Spring Boot application on GraalVM, this causes truffle-api.jar to not be found on the classpath.  However, when simply running `mvn test`, the test works perfectly fine, but makes it so that the IDE cannot breakpoint debug the test.\r\n\r\n**Prerequisites**\r\n1. GraalVM must be installed\r\n2. GraalVM must be set as `JAVA_HOME`\r\n3. GraalVM must have `$JAVA_HOME/bin` on the `PATH`\r\n4. Maven must be installed\r\n\r\n**Steps to reproduce the issue**\r\n1. `git clone https://github.com/justinnichols/graalvm-mvn-test-bug.git`\r\n2. `mvn clean compile`\r\n3. `mvn -DforkCount=0 -DreuseForks=false test`\r\n\r\n**Describe GraalVM and your environment:**\r\n```\r\nopenjdk version \"11.0.6\" 2020-01-14\r\nOpenJDK Runtime Environment GraalVM CE 20.0.0 (build 11.0.6+9-jvmci-20.0-b02)\r\nOpenJDK 64-Bit Server VM GraalVM CE 20.0.0 (build 11.0.6+9-jvmci-20.0-b02, mixed mode, sharing)\r\n```\r\n - OS: macOS Catalina (10.15.4)\r\n - Architecture: 64-bit\r\n\r\n\r\n**More details**\r\nError output:\r\n```\r\n  .   ____          _            __ _ _\r\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\r\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\r\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\r\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\r\n =========|_|==============|___/=/_/_/_/\r\n :: Spring Boot ::        (v2.2.6.RELEASE)\r\n\r\n2020-04-08 11:51:02.128  INFO 3322 --- [           main] o.e.g.m.t.b.components.MavenTestBugTest  : Starting MavenTestBugTest on spock with PID 3322\r\n2020-04-08 11:51:02.130  INFO 3322 --- [           main] o.e.g.m.t.b.components.MavenTestBugTest  : No active profile set, falling back to default profiles: default\r\n2020-04-08 11:51:02.426  INFO 3322 --- [           main] o.e.g.m.t.b.components.MavenTestBugTest  : Started MavenTestBugTest in 0.465 seconds (JVM running for 3.446)\r\n[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.807 s <<< FAILURE! - in org.example.graalvm.mvn.test.bug.components.MavenTestBugTest\r\n[ERROR] runTest  Time elapsed: 0.222 s  <<< ERROR!\r\njava.lang.IllegalStateException: No language and polyglot implementation was found on the classpath. Make sure the truffle-api.jar is on the classpath.\r\n\tat org.example.graalvm.mvn.test.bug.components.MavenTestBugTest.runTest(MavenTestBugTest.java:16)\r\n\r\n[INFO]\r\n[INFO] Results:\r\n[INFO]\r\n[ERROR] Errors:\r\n[ERROR]   MavenTestBugTest.runTest:16 \u00bb IllegalState No language and polyglot implementa...\r\n[INFO]\r\n[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0\r\n[INFO]\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2325", "user": "justinnichols", "labels": ["bug"], "created": "2020-04-08 15:56:14", "closed": "2020-04-17 12:16:45", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Compiled image crashes at runtime with UnsatisfiedLinkError when using the JFR API", "body": "Calling certain native methods from within the Java 11 JDK's JFR libraries causes an UnsatisfiedLinkError at runtime.\r\n\r\n1. git clone https://github.com/kittylyst/jfr-parser_repro_case_graalvm_linkage_bug-bevans.git\r\n2. mvn clean compile assembly:single\r\n3. java -jar target/jfr-graal-repro-0.1.0-jar-with-dependencies.jar <JFR file containing TLAB allocs>\r\n4. native-image --verbose --native-image-info -H:+JNI -jar target/jfr-graal-repro-0.1.0-jar-with-dependencies.jar\r\n5. ./jfr-graal-repro-0.1.0-jar-with-dependencies <JFR file containing TLAB allocs>\r\n6. BOOM!\r\n\r\n - GraalVM version - 20.0 release & latest snapshot \r\n - JDK major version: 11\r\n - OS: macOS Catalina\r\n - Architecture: AMD64\r\n\r\n```\r\n$ native-image --verbose --native-image-info -H:+JNI -jar target/jfr-graal-repro-0.1.0-jar-with-dependencies.jar\r\nShutdown Server(pid: 43797, port: 56296)\r\nStartServer [\r\n/Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/bin/java \\\r\n-cp \\\r\n/Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/llvm-wrapper-shadowed.jar:/Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/svm.jar:/Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/objectfile.jar:/Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/llvm-platform-specific-shadowed.jar:/Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/javacpp-shadowed.jar:/Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/svm-llvm.jar:/Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/pointsto.jar \\\r\n-XX:+UseParallelGC \\\r\n-XX:+UnlockExperimentalVMOptions \\\r\n-XX:+EnableJVMCI \\\r\n-Dtruffle.TrustAllTruffleRuntimeProviders=true \\\r\n-Dtruffle.TruffleRuntime=com.oracle.truffle.api.impl.DefaultTruffleRuntime \\\r\n-Dgraalvm.ForcePolyglotInvalid=true \\\r\n-Dgraalvm.locatorDisabled=true \\\r\n-Dsubstratevm.IgnoreGraalVersionCheck=true \\\r\n-Djava.lang.invoke.stringConcat=BC_SB \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.runtime=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.code=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.aarch64=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.amd64=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.meta=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.hotspot=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.services=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.common=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.code.site=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.code.stack=ALL-UNNAMED \\\r\n--add-opens \\\r\njdk.internal.vm.compiler/org.graalvm.compiler.debug=ALL-UNNAMED \\\r\n--add-opens \\\r\njdk.internal.vm.compiler/org.graalvm.compiler.nodes=ALL-UNNAMED \\\r\n--add-opens \\\r\njdk.unsupported/sun.reflect=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.module=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.ref=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.reflect=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.io=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang.reflect=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang.invoke=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang.ref=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.net=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.nio=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.nio.file=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.security=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/javax.crypto=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.util=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.util.concurrent.atomic=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/sun.security.x509=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.logger=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.sdk/org.graalvm.nativeimage.impl=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.sdk/org.graalvm.polyglot=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.truffle/com.oracle.truffle.polyglot=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.truffle/com.oracle.truffle.api.impl=ALL-UNNAMED \\\r\n-XX:+UseJVMCINativeLibrary \\\r\n-Xss10m \\\r\n-Duser.country=US \\\r\n-Duser.language=en \\\r\n-Djava.awt.headless=true \\\r\n-Dorg.graalvm.version=20.1.0-dev \\\r\n-Dorg.graalvm.config= \\\r\n-Dcom.oracle.graalvm.isaot=true \\\r\n-Djava.system.class.loader=com.oracle.svm.hosted.NativeImageSystemClassLoader \\\r\n-Xshare:off \\\r\n--module-path \\\r\n/Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/truffle/truffle-api.jar \\\r\n-javaagent:/Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/svm.jar \\\r\n-Djdk.internal.lambda.disableEagerInitialization=true \\\r\n-Djdk.internal.lambda.eagerlyInitialize=false \\\r\n-Djava.lang.invoke.InnerClassLambdaMetafactory.initializeLambdas=false \\\r\n-Xmx6871947672 \\\r\n-Xms1g \\\r\n-Dgraal.LogFile=%e \\\r\ncom.oracle.svm.hosted.server.NativeImageBuildServer \\\r\n-port=0 \\\r\n-logFile=/Users/bevans/.native-image/machine-id-hostid-0/session-id-caf/server-id-3952be546c6ea5b131d6ba8cdb05d70fc9cce7b6acd2ba53535e533330bcaa2c55d8318a5ac86efdd1a6b66c6d72438b9989a9f85362c4ed2508229b1ce19573/server.log \\\r\n\r\n]\r\nBuild on Server(pid: 58435, port: 57642)*\r\nSendBuildRequest [\r\n-task=com.oracle.svm.hosted.NativeImageGeneratorRunner\r\n-imagecp\r\n/Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/llvm-wrapper-shadowed.jar:/Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/svm.jar:/Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/objectfile.jar:/Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/llvm-platform-specific-shadowed.jar:/Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/javacpp-shadowed.jar:/Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/svm-llvm.jar:/Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/builder/pointsto.jar:/Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/library-support.jar:/Users/bevans/external-gh/jfr-parser_repro_case_graalvm_linkage_bug-bevans/target/jfr-graal-repro-0.1.0-jar-with-dependencies.jar\r\n-H:Path=/Users/bevans/external-gh/jfr-parser_repro_case_graalvm_linkage_bug-bevans\r\n-H:+DumpTargetInfo\r\n-H:+JNI\r\n-H:Class=com.newrelic.JFRFileParser\r\n-H:Name=jfr-graal-repro-0.1.0-jar-with-dependencies\r\n-H:CLibraryPath=/Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/clibraries/darwin-amd64\r\n]\r\n[jfr-graal-repro-0.1.0-jar-with-dependencies:58435]    classlist:   1,145.68 ms,  0.96 GB\r\n[jfr-graal-repro-0.1.0-jar-with-dependencies:58435]        (cap):   5,194.60 ms,  0.96 GB\r\n[jfr-graal-repro-0.1.0-jar-with-dependencies:58435]        setup:   6,747.14 ms,  0.96 GB\r\n# Building image for target platform: org.graalvm.nativeimage.Platform$DARWIN_AMD64\r\n# Using native toolchain:\r\n#   Name: LLVM (clang)\r\n#   Vendor: apple\r\n#   Version: 10.0.1\r\n#   Target architecture: x86_64\r\n#   Path: /usr/bin/cc\r\n# Using CLibrary: com.oracle.svm.core.c.libc.GLibc\r\n[jfr-graal-repro-0.1.0-jar-with-dependencies:58435]     (clinit):     307.26 ms,  1.24 GB\r\n# Static libraries:\r\n#   ../../../../../../Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/libnet.a\r\n#   ../../../../../../Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/libjava.a\r\n#   ../../../../../../Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/libzip.a\r\n#   ../../../../../../Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/libnio.a\r\n#   ../../../../../../Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/clibraries/darwin-amd64/libffi.a\r\n#   ../../../../../../Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/clibraries/darwin-amd64/libdarwin.a\r\n#   ../../../../../../Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/clibraries/darwin-amd64/liblibchelper.a\r\n#   ../../../../../../Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/clibraries/darwin-amd64/libjvm.a\r\n#   ../../../../../../Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.1.0-dev/Contents/Home/lib/svm/clibraries/darwin-amd64/libstrictmath.a\r\n# Other libraries: pthread,-framework Foundation,dl,z\r\n[jfr-graal-repro-0.1.0-jar-with-dependencies:58435]   (typeflow):   4,293.18 ms,  1.24 GB\r\n[jfr-graal-repro-0.1.0-jar-with-dependencies:58435]    (objects):   3,461.46 ms,  1.24 GB\r\n[jfr-graal-repro-0.1.0-jar-with-dependencies:58435]   (features):     169.49 ms,  1.24 GB\r\n[jfr-graal-repro-0.1.0-jar-with-dependencies:58435]     analysis:   8,443.81 ms,  1.24 GB\r\n[jfr-graal-repro-0.1.0-jar-with-dependencies:58435]     universe:     315.61 ms,  1.24 GB\r\n[jfr-graal-repro-0.1.0-jar-with-dependencies:58435]      (parse):     754.65 ms,  1.24 GB\r\n[jfr-graal-repro-0.1.0-jar-with-dependencies:58435]     (inline):   1,057.48 ms,  1.69 GB\r\n[jfr-graal-repro-0.1.0-jar-with-dependencies:58435]    (compile):   5,465.35 ms,  2.29 GB\r\n[jfr-graal-repro-0.1.0-jar-with-dependencies:58435]      compile:   7,740.20 ms,  2.29 GB\r\n[jfr-graal-repro-0.1.0-jar-with-dependencies:58435]        image:   1,044.58 ms,  2.29 GB\r\n[jfr-graal-repro-0.1.0-jar-with-dependencies:58435]        write:     304.68 ms,  2.29 GB\r\n[jfr-graal-repro-0.1.0-jar-with-dependencies:58435]      [total]:  25,966.63 ms,  2.29 GB\r\n```\r\n\r\nAdd any other information about the problem here. Especially important are stack traces or log output. Feel free to link to gists or to screenshots if necessary.\r\n\r\n```\r\n$ ./jfr-graal-repro-0.1.0-jar-with-dependencies bmds-pid-213-2020_04_03_15_18_41.jfr \r\nException in thread \"main\" java.lang.UnsatisfiedLinkError: jdk.jfr.internal.JVM.getTypeId(Ljava/lang/Class;)J [symbol: Java_jdk_jfr_internal_JVM_getTypeId or Java_jdk_jfr_internal_JVM_getTypeId__Ljava_lang_Class_2]\r\n\tat com.oracle.svm.jni.access.JNINativeLinkage.getOrFindEntryPoint(JNINativeLinkage.java:145)\r\n\tat com.oracle.svm.jni.JNIGeneratedMethodSupport.nativeCallAddress(JNIGeneratedMethodSupport.java:57)\r\n\tat jdk.jfr.internal.JVM.getTypeId(JVM.java)\r\n\tat jdk.jfr.internal.Type.getTypeId(Type.java:115)\r\n\tat jdk.jfr.internal.AnnotationConstruct.getAnnotationElement(AnnotationConstruct.java:112)\r\n\tat jdk.jfr.internal.AnnotationConstruct.getAnnotation(AnnotationConstruct.java:92)\r\n\tat jdk.jfr.internal.AnnotationConstruct.hasUnsigned(AnnotationConstruct.java:131)\r\n\tat jdk.jfr.ValueDescriptor.isUnsigned(ValueDescriptor.java:319)\r\n\tat jdk.jfr.FlightRecorderPermission$InternalAccess.isUnsigned(FlightRecorderPermission.java:187)\r\n\tat jdk.jfr.consumer.RecordedObject.getValue(RecordedObject.java:183)\r\n\tat jdk.jfr.consumer.RecordedObject.getLong(RecordedObject.java:568)\r\n\tat com.newrelic.jfr.summarizers.PerThreadObjectAllocationInNewTLABSummarizer.apply(PerThreadObjectAllocationInNewTLABSummarizer.java:37)\r\n\tat com.newrelic.jfr.summarizers.ObjectAllocationInNewTLABSummarizer.lambda$apply$0(ObjectAllocationInNewTLABSummarizer.java:34)\r\n\tat java.util.Optional.ifPresent(Optional.java:183)\r\n\tat com.newrelic.jfr.summarizers.ObjectAllocationInNewTLABSummarizer.apply(ObjectAllocationInNewTLABSummarizer.java:29)\r\n\tat com.newrelic.JFRFileParser.run(JFRFileParser.java:50)\r\n\tat com.newrelic.JFRFileParser.main(JFRFileParser.java:70)\r\n```\r\n\r\nLet me know if you need more details (or to try something) - will retry on Linux when I get near a dev machine. Thanks!", "url": "https://github.com/oracle/graal/issues/2318", "user": "kittylyst", "labels": ["bug", "native-image"], "created": "2020-04-05 14:25:01", "closed": "2020-04-16 13:55:58", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "[native-image] relative paths are based on compile time and not run-time working folder", "body": "Relative paths created are based on the working folder at compile time and not during run-time.\r\nUsing graal 20.0 JDK 11 (Windows).\r\n\r\ntest.java\r\n```\r\nclass test {\r\n  public static void main(String[] args) throws java.io.IOException {\r\n    System.out.println(new java.io.File(\"canonical\").getCanonicalPath());\r\n    System.out.println(new java.io.File(\"absolute\").getAbsolutePath());\r\n  }\r\n}\r\n```\r\n\r\nSample Output:\r\n\r\n```\r\nc:\\bug>cd\r\nc:\\bug\r\n\r\nc:\\bug>javac test.java\r\n\r\nc:\\bug>java test\r\nC:\\bug\\canonical\r\nc:\\bug\\absolute\r\n\r\nc:\\bug>cd folder\r\n\r\nc:\\bug\\folder>java -cp .. test\r\nC:\\bug\\folder\\canonical\r\nc:\\bug\\folder\\absolute\r\n\r\nc:\\bug\\folder>cd ..\r\n\r\nc:\\bug>native-image test\r\n\r\nc:\\bug>test\r\nC:\\bug\\canonical\r\nc:\\bug\\absolute\r\n\r\nc:\\bug>cd folder\r\n\r\nc:\\bug\\folder>..\\test\r\nC:\\bug\\canonical\r\nc:\\bug\\absolute\r\n\r\nc:\\bug\\folder>\r\n\r\n```\r\n\r\nThe output from the native test.exe that is executed from \\bug\\folder creates paths based on the directory that native image was created (\\bug), even if the exe is copied to another PC causing file not found exceptions.\r\n\r\nThis is similar to bug #1859 ", "url": "https://github.com/oracle/graal/issues/2316", "user": "pquiring", "labels": ["bug", "native-image", "platform-windows"], "created": "2020-04-02 23:11:18", "closed": "2020-04-16 19:28:14", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "substratevm project compilation fails on JDK15", "body": "Building the latest GraalVM against JDK 15 runs into compilation error:\r\n```\r\ngraal/substratevm/src/com.oracle.svm.core.jdk14/src/com/oracle/svm/core/jdk14/Target_java_nio_DirectByteBuffer_JDK14OrLater.java:32: error: cannot find symbol\r\nimport com.oracle.svm.core.jdk.Target_jdk_internal_ref_Cleaner;\r\n                              ^\r\n  symbol:   class Target_jdk_internal_ref_Cleaner\r\n  location: package com.oracle.svm.core.jdk\r\ngraal/substratevm/src/com.oracle.svm.core.jdk14/src/com/oracle/svm/core/jdk14/Target_java_nio_DirectByteBuffer_JDK14OrLater.java:53: error: cannot find symbol\r\n    Target_jdk_internal_ref_Cleaner cleaner;\r\n    ^\r\n  symbol:   class Target_jdk_internal_ref_Cleaner\r\n  location: class Target_java_nio_DirectByteBuffer_JDK14OrLater\r\n2 errors\r\n```", "url": "https://github.com/oracle/graal/issues/2312", "user": "jaikiran", "labels": ["bug"], "created": "2020-04-02 04:58:56", "closed": "2020-04-06 22:21:56", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": " java.lang.NoClassDefFoundError: jdk/internal/misc/JavaBeansAccess", "body": "graalvm  version graalvm-ee-java11-20.0.0 cannot be used with jdk.internal.misc.JavaBeansAccess class, even  with --add-exports options.  Same code that works in openjdk 11.0.6 and graalvm ce, fails in graalvm ee version graalvm-ee-java11-20.0.0\r\n\r\nRepro:\r\n```\r\n// Test program JBA.java\r\nimport jdk.internal.misc.JavaBeansAccess;\r\nimport jdk.internal.misc.SharedSecrets;\r\nimport java.lang.reflect.Constructor;\r\nimport java.lang.reflect.Method;\r\nclass JBA {\r\n    public static void main(String [] args) {\r\n         SharedSecrets.setJavaBeansAccess(new JavaBeansAccess() {\r\n            @Override\r\n            public Method getReadMethod(Class<?> clazz, String property) throws Exception {\r\n                return null;\r\n            }\r\n            @Override\r\n            public String[] getConstructorPropertiesValue(Constructor<?> ctr) {\r\n                return null;\r\n            }\r\n        });\r\n    }\r\n}\r\n// -- End test program\r\n\r\n```\r\nThis can be compiled like this, works both in graalvm and jdk 11.0.6:\r\n**javac --add-exports java.base/jdk.internal.misc=ALL-UNNAMED JBA.java**\r\n\r\nIt can be run with this command:\r\n**java --add-exports java.base/jdk.internal.misc=ALL-UNNAMED JBA**\r\n\r\nRunning it works in java 11.0.6 but **FAILS** in graalvm(version graalvm-ee-java11-20.0.0) with:\r\n**Error: Unable to initialize main class JBA\r\nCaused by: java.lang.NoClassDefFoundError: jdk/internal/misc/JavaBeansAccess**\r\n\r\n", "url": "https://github.com/oracle/graal/issues/2311", "user": "ltlgobearssf", "labels": ["bug"], "created": "2020-04-01 18:46:53", "closed": "2020-04-01 22:17:38", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Native-image fails on JDK 15 due to ClassLoader changes", "body": "**Describe the issue**\r\nBuilding and running native-image from the latest Graal and OpenJDK sources no longer works\r\ndue to native library loading changes that have been made to the ClassLoader in JDK 15.\r\n\r\n**Steps to reproduce the issue**\r\n1. Build the latest GraalVM using JDK binaries built from the latest OpenJDK 15 sources.\r\n2. Run mx native-image Hello\r\n\r\nnative-image will fail due to missing substituted methods.\r\n\r\n**Describe GraalVM and your environment:**\r\n\r\n- This fails on all platforms\r\n\r\n**More details**\r\n\r\nHere is the change in OpenJDK responsible for this problem:\r\n\r\n    http://hg.openjdk.java.net/jdk/jdk/rev/1ca940d73efc\r\n\r\nThis change was integrated under this RFE: \r\n\r\n    8228336: Refactor native library loading implementation\r\n    https://bugs.openjdk.java.net/browse/JDK-8228336\r\n", "url": "https://github.com/oracle/graal/issues/2310", "user": "bobvandette", "labels": ["bug", "native-image"], "created": "2020-04-01 14:32:56", "closed": "2020-04-10 15:00:53", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "Native image app crashes during runtime with `--static` build option in http4s scala application in linux environment", "body": "**Describe the issue**\r\n\r\nWhen building a native image using the --static argument, the application crashes during runtime. I think it might be happening specifically when a SSL POST request is made within the application\r\n\r\n**Steps to reproduce the issue**\r\n\r\ngit clone https://github.com/drocsid/https_example\r\n\r\nthen to reproduce:\r\n\r\nRun `native-image-build-cmd.sh` to build the image. Execute the `native-image` binary `./weatherdemo` after creation. Finally run `425.sh` to make a request trigger the application code. Assuming that the last client request execution gives a segfault.\r\n\r\nhttps://github.com/drocsid/https_example/blob/fc2203815f1f5f03547971048bef929b6634cff0/src/main/scala/com/example/weatherdemo/WeatherdemoRoutes.scala#L75\r\n\r\nFrom the logs:\r\n\r\n```\r\n[scala-execution-context-global-11] INFO  c.e.w.WeatherdemoRoutes - request IO(Request(method=POST, uri=https://api.flowroute.com/v2/messages, headers=Headers(Content-Type: application/json, Content-Length: 95))) \r\n[ioapp-compute-0] DEBUG o.h.c.PoolManager - Requesting connection: curAllocated=1 idleQueues.size=1 waitQueue.size=0 maxWaitQueueLimit=256 closed=false \r\n[ioapp-compute-0] DEBUG o.h.c.PoolManager - Active connection not found. Creating new one. curAllocated=1 idleQueues.size=1 waitQueue.size=0 maxWaitQueueLimit=256 closed=false\r\n\r\nSegmentation Fault\r\n```\r\n\r\n**Describe GraalVM and your environment:**\r\n\r\njava --version\r\nopenjdk 11.0.6 2020-01-14\r\nOpenJDK Runtime Environment GraalVM CE 20.0.0 (build 11.0.6+9-jvmci-20.0-b02)\r\nOpenJDK 64-Bit Server VM GraalVM CE 20.0.0 (build 11.0.6+9-jvmci-20.0-b02, mixed mode, sharing)\r\n\r\n - OS: Debian 4.19.0-4-amd64 bullseye \r\n - Architecture: AMD64", "url": "https://github.com/oracle/graal/issues/2309", "user": "drocsid", "labels": ["bug", "native-image"], "created": "2020-04-01 06:04:57", "closed": "2020-04-03 17:37:17", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Failure when using kotlin-reflect with native images", "body": "**Describe the issue**\r\nIt seems non trivial to make Kotlin reflection working with GraalVM native images, and this is an problem for Spring Boot applications. I have isolated the first blocking point I hit with a focused repro using only `kotlin-reflect.jar` with both runtime and build time variants since the errors are different.\r\n\r\n**Steps to reproduce the issue**\r\n1. ` git clone https://github.com/sdeleuze/graal-issues.git`\r\n2. `cd graal-issues/kotlin-reflect`\r\n3. `./build.sh`\r\n\r\n**More details**\r\n\r\nWith this Java code that invoke Kotlin reflection API:\r\n```\r\n// Make sure that @Metadata from KotlinVersion is included in the native-image (not sure if there is a better way)\r\nClass<?> annotation = KotlinVersion.class.getAnnotation(Metadata.class).annotationType();\r\nSystem.out.println(annotation);\r\n\r\nMethod method = KotlinVersion.class.getMethods()[0];\r\nKFunction<?> function = ReflectJvmMapping.getKotlinFunction(method);\r\nSystem.out.println(function);\r\n```\r\n\r\nWe get the following output for the 3 variants:\r\n\r\n```\r\nIn regular JVM\r\ninterface kotlin.Metadata\r\nfun kotlin.KotlinVersion.isAtLeast(kotlin.Int, kotlin.Int, kotlin.Int): kotlin.Boolean\r\n\r\nAs GraalVM native image with runtime initialization by default\r\ninterface kotlin.Metadata\r\nException in thread \"main\" kotlin.jvm.KotlinReflectionNotSupportedError: Kotlin reflection implementation is not found at runtime. Make sure you have kotlin-reflect.jar in the classpath\r\n\tat kotlin.jvm.internal.ClassReference.error(ClassReference.kt:80)\r\n\tat kotlin.jvm.internal.ClassReference.getMembers(ClassReference.kt:18)\r\n\tat kotlin.reflect.full.KClasses.getFunctions(KClasses.kt:90)\r\n\tat kotlin.reflect.jvm.ReflectJvmMapping.getKotlinFunction(ReflectJvmMapping.kt:134)\r\n\tat com.sample.App.main(App.java:16)\r\n\r\nAs GraalVM native image with build time initialization by default\r\ninterface kotlin.Metadata\r\nException in thread \"main\" java.lang.IllegalStateException: @NotNull method kotlin/reflect/jvm/internal/impl/builtins/KotlinBuiltIns.getBuiltInClassByFqName must not return null\r\n\tat kotlin.reflect.jvm.internal.impl.builtins.KotlinBuiltIns.$$$reportNull$$$0(KotlinBuiltIns.java)\r\n\tat kotlin.reflect.jvm.internal.impl.builtins.KotlinBuiltIns.getBuiltInClassByFqName(KotlinBuiltIns.java:357)\r\n\tat kotlin.reflect.jvm.internal.impl.builtins.jvm.JavaToKotlinClassMap.mapJavaToKotlin(JavaToKotlinClassMap.kt:130)\r\n\tat kotlin.reflect.jvm.internal.impl.builtins.jvm.JavaToKotlinClassMap.mapJavaToKotlin$default(JavaToKotlinClassMap.kt:126)\r\n\tat kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeResolver.mapKotlinClass(JavaTypeResolver.kt:161)\r\n\tat kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeResolver.computeTypeConstructor(JavaTypeResolver.kt:135)\r\n\tat kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeResolver.computeSimpleJavaClassifierType(JavaTypeResolver.kt:117)\r\n\tat kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeResolver.transformJavaClassifierType(JavaTypeResolver.kt:93)\r\n\tat kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeResolver.transformJavaType(JavaTypeResolver.kt:52)\r\n\tat kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaClassDescriptor$LazyJavaClassTypeConstructor.computeSupertypes(LazyJavaClassDescriptor.kt:191)\r\n\tat kotlin.reflect.jvm.internal.impl.types.AbstractTypeConstructor$supertypes$1.invoke(AbstractTypeConstructor.kt:80)\r\n\tat kotlin.reflect.jvm.internal.impl.types.AbstractTypeConstructor$supertypes$1.invoke(AbstractTypeConstructor.kt:26)\r\n\tat kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:355)\r\n\tat kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$LockBasedLazyValueWithPostCompute.invoke(LockBasedStorageManager.java:428)\r\n\tat kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$LockBasedNotNullLazyValueWithPostCompute.invoke(LockBasedStorageManager.java:459)\r\n\tat kotlin.reflect.jvm.internal.impl.types.AbstractTypeConstructor.getSupertypes(AbstractTypeConstructor.kt:27)\r\n\tat kotlin.reflect.jvm.internal.impl.types.AbstractTypeConstructor.getSupertypes(AbstractTypeConstructor.kt:26)\r\n\tat kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaClassMemberScope.computeFunctionNames(LazyJavaClassMemberScope.kt:78)\r\n\tat kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaClassMemberScope.computeFunctionNames(LazyJavaClassMemberScope.kt:67)\r\n\tat kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaScope.computeDescriptors(LazyJavaScope.kt:361)\r\n\tat kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaScope$allDescriptors$1.invoke(LazyJavaScope.kt:68)\r\n\tat kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaScope$allDescriptors$1.invoke(LazyJavaScope.kt:59)\r\n\tat kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:355)\r\n\tat kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke(LockBasedStorageManager.java:474)\r\n\tat kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaScope.getContributedDescriptors(LazyJavaScope.kt:342)\r\n\tat kotlin.reflect.jvm.internal.impl.resolve.scopes.ResolutionScope$DefaultImpls.getContributedDescriptors$default(ResolutionScope.kt:52)\r\n\tat kotlin.reflect.jvm.internal.KDeclarationContainerImpl.getMembers(KDeclarationContainerImpl.kt:65)\r\n\tat kotlin.reflect.jvm.internal.KClassImpl$Data$declaredNonStaticMembers$2.invoke(KClassImpl.kt:159)\r\n\tat kotlin.reflect.jvm.internal.KClassImpl$Data$declaredNonStaticMembers$2.invoke(KClassImpl.kt:44)\r\n\tat kotlin.reflect.jvm.internal.ReflectProperties$LazySoftVal.invoke(ReflectProperties.java:92)\r\n\tat kotlin.reflect.jvm.internal.ReflectProperties$Val.getValue(ReflectProperties.java:31)\r\n\tat kotlin.reflect.jvm.internal.KClassImpl$Data.getDeclaredNonStaticMembers(KClassImpl.kt)\r\n\tat kotlin.reflect.jvm.internal.KClassImpl$Data$allNonStaticMembers$2.invoke(KClassImpl.kt:168)\r\n\tat kotlin.reflect.jvm.internal.KClassImpl$Data$allNonStaticMembers$2.invoke(KClassImpl.kt:44)\r\n\tat kotlin.reflect.jvm.internal.ReflectProperties$LazySoftVal.invoke(ReflectProperties.java:92)\r\n\tat kotlin.reflect.jvm.internal.ReflectProperties$Val.getValue(ReflectProperties.java:31)\r\n\tat kotlin.reflect.jvm.internal.KClassImpl$Data.getAllNonStaticMembers(KClassImpl.kt)\r\n\tat kotlin.reflect.jvm.internal.KClassImpl$Data$allMembers$2.invoke(KClassImpl.kt:174)\r\n\tat kotlin.reflect.jvm.internal.KClassImpl$Data$allMembers$2.invoke(KClassImpl.kt:44)\r\n\tat kotlin.reflect.jvm.internal.ReflectProperties$LazySoftVal.invoke(ReflectProperties.java:92)\r\n\tat kotlin.reflect.jvm.internal.ReflectProperties$Val.getValue(ReflectProperties.java:31)\r\n\tat kotlin.reflect.jvm.internal.KClassImpl$Data.getAllMembers(KClassImpl.kt)\r\n\tat kotlin.reflect.jvm.internal.KClassImpl.getMembers(KClassImpl.kt:192)\r\n\tat kotlin.reflect.full.KClasses.getFunctions(KClasses.kt:90)\r\n\tat kotlin.reflect.jvm.ReflectJvmMapping.getKotlinFunction(ReflectJvmMapping.kt:134)\r\n\tat com.sample.App.main(App.java:16)\r\n```\r\n\r\nThe repro project is available on https://github.com/sdeleuze/graal-issues/tree/master/kotlin-reflect.", "url": "https://github.com/oracle/graal/issues/2306", "user": "sdeleuze", "labels": ["bug", "native-image", "spring"], "created": "2020-03-31 13:18:38", "closed": "2020-04-24 09:28:05", "commits": {}, "ttf": 23.00027777777778, "commitsDetails": []}, {"title": "JDK build error after \"mx updategraalinopenjdk\".", "body": "**Describe the issue**\r\nUpdating graal compiler in openjdk, and then building the updated jdk will report the error:\r\n\r\n    jdk_src/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/SymbolicSnippetEncoder.java:107:\r\n    error: package org.graalvm.nativeimage does not exist\r\n    import org.graalvm.nativeimage.Platform;\r\n                              ^\r\n\r\nThe package defined in native image is used and it does not exist in jdk src. \r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\n\r\n    1.  cd graal/compiler & mx updategraalinopenjdk jdk_src 15\r\n    2.  cd jdk_src & ./configure [options] & make images\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM version (latest snapshot builds can be found [here](https://github.com/graalvm/graalvm-ce-dev-builds/releases)), or commit id if built from source: **master**\r\n - JDK major version: **15**\r\n - OS: **linux**\r\n - Architecture: **AArch64**\r\n\r\n\r\n**More details**\r\nAdd any other information about the problem here. Especially important are stack traces or log output. Feel free to link to gists or to screenshots if necessary.\r\n```\r\n   This is caused by this patch:\r\n   commit a859e4e45fee739c54bdaad645b71548bc409a1d\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2304", "user": "XiaohongGong", "labels": ["bug"], "created": "2020-03-31 10:03:57", "closed": "2020-03-31 15:38:19", "commits": {"6ff944afe045276f0437cb1484e2422c5da60370": {"commitGHEventType": "referenced", "commitUser": "graalvmbot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "6ff944afe045276f0437cb1484e2422c5da60370", "commitGHEventType": "referenced", "commitUser": "graalvmbot", "commitParents": ["6fe68785c8a20ebd905e922d42e6ed22a431702b", "2971ed17b1897f0beeb9d5e98784a6e48302ead4"], "nameRev": "6ff944afe045276f0437cb1484e2422c5da60370 tags/vm-20.1.0~176", "commitMessage": "[GR-22097] Remove native image annotation from SymbolicSnippetEncoder (#2304).\n\nPullRequest: graal/5820\n", "commitDateTime": "2020-03-31 11:10:03", "authoredDateTime": "2020-03-31 11:10:03", "commitGitStats": [{"filePath": "compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/SymbolicSnippetEncoder.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "substratevm/src/com.oracle.svm.graal.hotspot.libgraal/src/com/oracle/svm/graal/hotspot/libgraal/LibGraalFeature.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SymbolicSnippetEncoder.java", "spoonMethods": [{"spoonMethodName": "org.graalvm.compiler.hotspot.SymbolicSnippetEncoder", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "LibGraalFeature.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Can't run mx gate in graal/compiler anymore", "body": "**Describe the issue**\r\n\r\nmx gate fails in graal/compiler\r\n\r\n**Steps to reproduce the issue**\r\n\r\nmx gate fails with:\r\n\r\nRunning: mx --java-home /home/roland/openjdk1.8.0_242-jvmci-20.0-b02 pylint --primary\r\nDetected pylint version: 2.4.4\r\nRunning pylint on /mnt/ssd/rwestrel/graal-repos/graal/compiler/mx.compiler/mx_compiler.py...\r\n************* Module mx_compiler\r\nmx.compiler/mx_compiler.py:163:12: R1720: Unnecessary \"else\" after \"raise\" (no-else-raise)\r\nmx.compiler/mx_compiler.py:433:37: E1135: Value 'Task.tags' doesn't support membership test (unsupported-membership-test)\r\nmx.compiler/mx_compiler.py:935:0: R1721: Unnecessary use of a comprehension (unnecessary-comprehension)\r\n\r\ngate: 31 Mar 2020 11:26:16(+00:10) END:   Pylint [0:00:09.240178] [disk (free/total): 166.3GB/234.7GB]\r\nTraceback (most recent call last):\r\n  File \"/mnt/ssd/rwestrel/graal-repos/mx/mx_gate.py\", line 422, in gate\r\n    _run_gate(cleanArgs, args, tasks)\r\n  File \"/mnt/ssd/rwestrel/graal-repos/mx/mx_gate.py\", line 542, in _run_gate\r\n    if mx.command_function('pylint')(['--primary']) != 0:\r\n  File \"/mnt/ssd/rwestrel/graal-repos/mx/mx_commands.py\", line 147, in __call__\r\n    return self.command_function(*args, **kwargs)\r\n  File \"/mnt/ssd/rwestrel/graal-repos/mx/mx.py\", line 14142, in pylint\r\n    run([pylint_exe, '--reports=n', '--rcfile=' + rcfile, pyfile] + additional_options, env=env)\r\n  File \"/mnt/ssd/rwestrel/graal-repos/mx/mx.py\", line 12575, in run\r\n    abort(retcode)\r\n  File \"/mnt/ssd/rwestrel/graal-repos/mx/mx.py\", line 3815, in abort\r\n    raise SystemExit(error_code)\r\nSystemExit: 10\r\n\r\nmx gate -t Pylint -x fails with:\r\n\r\nunning: mx --java-home /home/roland/openjdk1.8.0_242-jvmci-20.0-b02 verifylibraryurls \r\ngate: 31 Mar 2020 11:31:48(+02:44) END:   VerifyLibraryURLs [0:00:08.503940] [disk (free/total): 166.3GB/234.7GB]\r\ngate: 31 Mar 2020 11:31:48(+02:44) BEGIN: UnitTests: hosted-product compiler\r\ngate: 31 Mar 2020 11:31:48(+02:44) END:   UnitTests: hosted-product compiler [0:00:00.000093] [disk (free/total): 166.3GB/234.7GB]\r\nTraceback (most recent call last):\r\n  File \"/mnt/ssd/rwestrel/graal-repos/mx/mx_gate.py\", line 422, in gate\r\n    _run_gate(cleanArgs, args, tasks)\r\n  File \"/mnt/ssd/rwestrel/graal-repos/mx/mx_gate.py\", line 625, in _run_gate\r\n    runner(args, tasks)\r\n  File \"/mnt/ssd/rwestrel/graal-repos/graal/compiler/mx.compiler/mx_compiler.py\", line 730, in _graal_gate_runner\r\n    compiler_gate_runner(['compiler', 'truffle'], graal_unit_test_runs, graal_bootstrap_tests, tasks, args.extra_vm_argument)\r\n  File \"/mnt/ssd/rwestrel/graal-repos/graal/compiler/mx.compiler/mx_compiler.py\", line 546, in compiler_gate_runner\r\n    r.run(suites, tasks, ['-XX:-UseJVMCICompiler'] + _remove_empty_entries(extraVMarguments))\r\n  File \"/mnt/ssd/rwestrel/graal-repos/graal/compiler/mx.compiler/mx_compiler.py\", line 433, in run\r\n    if 'coverage' not in Task.tags:\r\nTypeError: argument of type 'NoneType' is not iterable\r\n\r\n**Describe GraalVM and your environment:**\r\n\r\nLatest mx and graal github repo on fedora 31\r\n\r\n", "url": "https://github.com/oracle/graal/issues/2303", "user": "rwestrel", "labels": ["bug"], "created": "2020-03-31 09:33:42", "closed": "2020-04-01 08:56:02", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "GraalVM 20.0.0 CE catalog seems to only have native-image available.", "body": "**Describe the issue**\r\nI wanted to experiment with graalpython, so I downloaded GraalVM 2.0.0.  When I open a windows command prompt and run:\r\n\r\ngu install python\r\n\r\nI get the following output:\r\n\r\nDownloading: Component catalog from www.graalvm.org\r\nError: Unknown component: python\r\n\r\nIf I run:\r\n\r\ngu available\r\n\r\nI get  the following output:\r\n\r\nDownloading: Component catalog from www.graalvm.org\r\nComponentId              Version             Component name      Origin\r\n--------------------------------------------------------------------------------\r\nnative-image             20.0.0              Native Image        github.com\r\n\r\nI thought I was able to install more extensions with the community edition than just native-image?\r\n\r\n**Steps to reproduce the issue**\r\n\r\n1. Run cmd.exe\r\n2. Run gu install python\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM 20.0.0\r\n - JDK major version: 11\r\n - OS: Windows 10\r\n - Architecture: AMD64\r\n\r\n**More details**\r\n", "url": "https://github.com/oracle/graal/issues/2295", "user": "rmoquin", "labels": ["bug"], "created": "2020-03-26 19:39:23", "closed": "2020-04-08 12:16:07", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "ImageClassLoader holds on to large number of irrelevant Method(s) and Field(s)", "body": "The `ImageClassLoader` seems to be responsible for initializing all classes on the classpath during native image generation (during classlist phase). During this process, it loads the class (through `Class.forName` with `initialize` param as `false`) and then for each such loaded class, it goes on to check if annotations can be loaded from that class (i.e. `AnnotatedElement.getAnnotations` doesn't throw any error). If it can't load the annotations on that class, for whatever reason, it skips this class and moves on to the next. \r\n\r\nFor classes that can successfully load the annotations, it does further checks to see if there are certain Graal specific annotations that classify it as a \"hosted only\" class or an \"application class\". Based on this check, it stores that class in a relevant `Set` (called `applicationClasses` or `hostedOnlyClasses`). All this seems fine.\r\n\r\nFor each such identified class, it then goes on to \"find system elements\". This involves checking each method and field on the class to see if any annotations are available on them. If there are any annotations available on them, then the `ImageClassLoader` stores that Method/Field into a `Set` called `systemMethods`, `systemFields` respectively. These `Set`s are (only) used whenever there's a call on the `ImageClassLoader` to find and return any method/field that may have certain specific annotations (for example, the `CEntryPoint`, `CConstant`, `CFunction`, `NativeImageReinitialize` and such). The problem in this code is the current `annotationsAvailable` method which returns `true` even if there may be 0 annotations on the method/field:\r\n\r\n```\r\nprivate static boolean annotationsAvailable(AnnotatedElement element) {\r\n        try {\r\n            element.getAnnotations();\r\n            return true;\r\n        } catch (Throwable t) {\r\n            handleClassLoadingError(t);\r\n            return false;\r\n        }\r\n    }\r\n\r\n```\r\nThis causes the `ImageClassLoader` to unnecessarily hold on to a large number of unnecessary `Method` and `Field` instances that aren't really relevant and thus cause both unnecessary additional memory usage as well as unnecessary time spent on iterating over these additional methods/fields whenever a call is made on the `ImageClassLoader` to find any specific annotation.", "url": "https://github.com/oracle/graal/issues/2287", "user": "jaikiran", "labels": ["bug", "native-image"], "created": "2020-03-25 04:43:13", "closed": "2020-05-01 06:55:55", "commits": {"4ca6fc64e64d6207414fe5c5c6723cfc1c4aa1a6": {"commitGHEventType": "referenced", "commitUser": "graalvmbot"}}, "ttf": 37.000277777777775, "commitsDetails": [{"commitHash": "4ca6fc64e64d6207414fe5c5c6723cfc1c4aa1a6", "commitGHEventType": "referenced", "commitUser": "graalvmbot", "commitParents": ["ba46378680dd177214b9446b82e085d707e942c3", "044a7ac3ff5d92c629847d4f6402ae8eefb94fb0"], "nameRev": "4ca6fc64e64d6207414fe5c5c6723cfc1c4aa1a6 tags/vm-20.1.0~135", "commitMessage": "[GR-22240] ImageClassLoader doesn't need to hold on to Methods and Fields which do not have annotations #2287.\n\nPullRequest: graal/5885\n", "commitDateTime": "2020-04-07 06:35:26", "authoredDateTime": "2020-04-07 06:35:26", "commitGitStats": [{"filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/ImageClassLoader.java", "insertions": 23, "deletions": 2, "lines": 25}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ImageClassLoader.java", "spoonMethods": [{"spoonMethodName": "com.oracle.svm.hosted.ImageClassLoader.annotationsAvailable(java.lang.reflect.AnnotatedElement)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.svm.hosted.ImageClassLoader.handleClass(java.lang.Class)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Watchdog detects no activity and kills the process", "body": "**Describe the issue**\r\nWhen using native-image to compile medium-sized projects, the native-image process halts with \r\n\r\n=== Image generator watchdog detected no activity. This can be a sign of a deadlock during image building. Dumping all stack traces. \r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM master, LLVM backend\r\n\r\n\r\n```\r\n[Tue Mar 24 12:05:36 CET 2020][INFO] [SUB] [hellofx.hellofx:29596]    classlist:   5,805.89 ms,  0.96 GB\r\n[Tue Mar 24 12:05:37 CET 2020][INFO] [SUB] [hellofx.hellofx:29596]        (cap):     287.23 ms,  0.96 GB\r\n[Tue Mar 24 12:05:38 CET 2020][INFO] [SUB] [hellofx.hellofx:29596]        setup:   2,732.33 ms,  0.96 GB\r\n[Tue Mar 24 12:06:20 CET 2020][INFO] [SUB] [hellofx.hellofx:29596]     (clinit):   1,033.13 ms,  3.78 GB\r\n[Tue Mar 24 12:06:20 CET 2020][INFO] [SUB] [hellofx.hellofx:29596]   (typeflow):  20,663.97 ms,  3.78 GB\r\n[Tue Mar 24 12:06:20 CET 2020][INFO] [SUB] [hellofx.hellofx:29596]    (objects):  15,490.66 ms,  3.78 GB\r\n[Tue Mar 24 12:06:20 CET 2020][INFO] [SUB] [hellofx.hellofx:29596]   (features):   3,038.32 ms,  3.78 GB\r\n[Tue Mar 24 12:06:20 CET 2020][INFO] [SUB] [hellofx.hellofx:29596]     analysis:  41,445.32 ms,  3.78 GB\r\n[Tue Mar 24 12:06:21 CET 2020][INFO] [SUB] [hellofx.hellofx:29596]     universe:   1,427.25 ms,  3.82 GB\r\n[Tue Mar 24 12:06:25 CET 2020][INFO] [SUB] [hellofx.hellofx:29596]      (parse):   3,779.63 ms,  3.82 GB\r\n[Tue Mar 24 12:06:31 CET 2020][INFO] [SUB] [hellofx.hellofx:29596]     (inline):   4,971.04 ms,  4.38 GB\r\n[Tue Mar 24 12:07:00 CET 2020][INFO] [SUB] [hellofx.hellofx:29596]    (compile):  29,329.06 ms,  4.37 GB\r\n[Tue Mar 24 12:07:02 CET 2020][INFO] [SUB] [hellofx.hellofx:29596]    (bitcode):   1,517.38 ms,  4.37 GB\r\n[Tue Mar 24 12:07:13 CET 2020][INFO] [SUB] [hellofx.hellofx:29596]    (prelink):  11,026.25 ms,  4.37 GB\r\n[Tue Mar 24 12:18:18 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:19:01 CET 2020][INFO] [SUB] === Image generator watchdog detected no activity. This can be a sign of a deadlock during image building. Dumping all stack traces. Current time: Tue Mar 24 12:17:51 CET 2020\r\n[Tue Mar 24 12:19:03 CET 2020][INFO] [SUB] [hellofx.hellofx:29596]       (llvm): 685,738.69 ms,  4.38 GB\r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB] \"main\" Id=1 in WAITING on lock=java.util.concurrent.ForkJoinTask$AdaptedRunnableAction@75080d64\r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.lang.Object.wait(Native Method)\r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinTask.externalInterruptibleAwaitDone(ForkJoinTask.java:356)\r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinTask.get(ForkJoinTask.java:1004)\r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB]     at app//com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:463)\r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB]     at app//com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:358)\r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB]     at app//com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:517)\r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB]     at app//com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:116)\r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB]     at app//com.oracle.svm.hosted.NativeImageGeneratorRunner$JDK9Plus.main(NativeImageGeneratorRunner.java:544)\r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB] \"Reference Handler\" Id=2 in RUNNABLE\r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.lang.ref.Reference.waitForReferencePendingList(Native Method)\r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.lang.ref.Reference.processPendingReferences(Reference.java:241)\r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.lang.ref.Reference$ReferenceHandler.run(Reference.java:213)\r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB] \"Finalizer\" Id=3 in WAITING on lock=java.lang.ref.ReferenceQueue$Lock@4b0ecda3\r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.lang.Object.wait(Native Method)\r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)\r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:176)\r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:170)\r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB] \"Signal Dispatcher\" Id=4 in RUNNABLE\r\n[Tue Mar 24 12:20:58 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:20:59 CET 2020][INFO] [SUB] \"JVMCI-native CompilerThread0\" Id=5 in RUNNABLE\r\n[Tue Mar 24 12:20:59 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:20:59 CET 2020][INFO] [SUB] \"Common-Cleaner\" Id=10 in TIMED_WAITING on lock=java.lang.ref.ReferenceQueue$Lock@7f11a321\r\n[Tue Mar 24 12:20:59 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.lang.Object.wait(Native Method)\r\n[Tue Mar 24 12:20:59 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)\r\n[Tue Mar 24 12:20:59 CET 2020][INFO] [SUB]     at java.base@11.0.5/jdk.internal.ref.CleanerImpl.run(CleanerImpl.java:148)\r\n[Tue Mar 24 12:20:59 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.lang.Thread.run(Thread.java:834)\r\n[Tue Mar 24 12:20:59 CET 2020][INFO] [SUB]     at java.base@11.0.5/jdk.internal.misc.InnocuousThread.run(InnocuousThread.java:134)\r\n[Tue Mar 24 12:20:59 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:20:59 CET 2020][INFO] [SUB] \"native-image pid watcher\" Id=12 in TIMED_WAITING on lock=java.util.TaskQueue@4a47f28a\r\n[Tue Mar 24 12:20:59 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.lang.Object.wait(Native Method)\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.TimerThread.mainLoop(Timer.java:553)\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.TimerThread.run(Timer.java:506)\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB] \"ForkJoinPool-1-worker-7\" Id=15 in WAITING on lock=java.util.concurrent.ForkJoinPool@3b83dfad\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB]     at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1628)\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB] \"ForkJoinPool.commonPool-worker-15\" Id=27 in WAITING on lock=java.util.concurrent.ForkJoinPool@4d594234\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB]     at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1628)\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB] \"ForkJoinPool-4-worker-3\" Id=28 in RUNNABLE\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.io.FileInputStream.readBytes(Native Method)\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.io.FileInputStream.read(FileInputStream.java:279)\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.io.BufferedInputStream.read1(BufferedInputStream.java:292)\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.io.BufferedInputStream.read(BufferedInputStream.java:351)\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB]       - locked java.lang.ProcessImpl$ProcessPipeInputStream@65d6eab\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.io.FilterInputStream.read(FilterInputStream.java:107)\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB]     at app//com.oracle.svm.hosted.c.util.FileUtils.drainInputStream(FileUtils.java:43)\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB]     at app//com.oracle.svm.core.graal.llvm.util.LLVMToolchain.runCommand(LLVMToolchain.java:65)\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB]     at app//com.oracle.svm.core.graal.llvm.LLVMNativeImageCodeCache.nativeLink(LLVMNativeImageCodeCache.java:299)\r\n[Tue Mar 24 12:21:00 CET 2020][INFO] [SUB]     at app//com.oracle.svm.core.graal.llvm.LLVMNativeImageCodeCache.linkCompiledBatches(LLVMNativeImageCodeCache.java:194)\r\n[Tue Mar 24 12:21:01 CET 2020][INFO] [SUB]     at app//com.oracle.svm.core.graal.llvm.LLVMNativeImageCodeCache.layoutMethods(LLVMNativeImageCodeCache.java:129)\r\n[Tue Mar 24 12:21:01 CET 2020][INFO] [SUB]     at app//com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:612)\r\n[Tue Mar 24 12:21:02 CET 2020][INFO] [SUB]     at app//com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:451)\r\n[Tue Mar 24 12:21:02 CET 2020][INFO] [SUB]     at app//com.oracle.svm.hosted.NativeImageGenerator$$Lambda$91/0x00000007c0c96040.run(Unknown Source)\r\n[Tue Mar 24 12:21:02 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1407)\r\n[Tue Mar 24 12:21:02 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n[Tue Mar 24 12:21:02 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n[Tue Mar 24 12:21:02 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n[Tue Mar 24 12:21:02 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n[Tue Mar 24 12:21:02 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n[Tue Mar 24 12:21:02 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:02 CET 2020][INFO] [SUB] \"Thread-1\" Id=29 in RUNNABLE\r\n[Tue Mar 24 12:21:02 CET 2020][INFO] [SUB]     at java.management@11.0.5/sun.management.ThreadImpl.dumpThreads0(Native Method)\r\n[Tue Mar 24 12:21:02 CET 2020][INFO] [SUB]     at java.management@11.0.5/sun.management.ThreadImpl.dumpAllThreads(ThreadImpl.java:502)\r\n[Tue Mar 24 12:21:02 CET 2020][INFO] [SUB]     at java.management@11.0.5/sun.management.ThreadImpl.dumpAllThreads(ThreadImpl.java:490)\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB]     at app//com.oracle.svm.hosted.DeadlockWatchdog.threadDump(DeadlockWatchdog.java:118)\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB]     at app//com.oracle.svm.hosted.DeadlockWatchdog.watchdogThread(DeadlockWatchdog.java:91)\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB]     at app//com.oracle.svm.hosted.DeadlockWatchdog$$Lambda$92/0x00000007c0c95440.run(Unknown Source)\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.lang.Thread.run(Thread.java:834)\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB] \"ForkJoinPool-2-worker-13\" Id=37 in WAITING on lock=java.util.concurrent.ForkJoinPool@101b246\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB]     at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1628)\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB] \"ForkJoinPool-4-worker-5\" Id=40 in WAITING on lock=java.util.concurrent.ForkJoinPool@245a7b7c\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB]     at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1628)\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB] \"ForkJoinPool-4-worker-7\" Id=41 in WAITING on lock=java.util.concurrent.ForkJoinPool@245a7b7c\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB]     at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1628)\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB] \"ForkJoinPool-4-worker-9\" Id=42 in WAITING on lock=java.util.concurrent.ForkJoinPool@245a7b7c\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB]     at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1628)\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB] \"ForkJoinPool-4-worker-11\" Id=43 in WAITING on lock=java.util.concurrent.ForkJoinPool@245a7b7c\r\n[Tue Mar 24 12:21:03 CET 2020][INFO] [SUB]     at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)\r\n[Tue Mar 24 12:21:04 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)\r\n[Tue Mar 24 12:21:04 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1628)\r\n[Tue Mar 24 12:21:04 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n[Tue Mar 24 12:21:04 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:04 CET 2020][INFO] [SUB] \"ForkJoinPool-4-worker-15\" Id=45 in WAITING on lock=java.util.concurrent.ForkJoinPool@245a7b7c\r\n[Tue Mar 24 12:21:04 CET 2020][INFO] [SUB]     at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)\r\n[Tue Mar 24 12:21:04 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)\r\n[Tue Mar 24 12:21:04 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1628)\r\n[Tue Mar 24 12:21:04 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n[Tue Mar 24 12:21:04 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB] \"ForkJoinPool-4-worker-13\" Id=44 in WAITING on lock=java.util.concurrent.ForkJoinPool@245a7b7c\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1628)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB] \"ForkJoinPool-4-worker-1\" Id=46 in WAITING on lock=java.util.concurrent.ForkJoinPool@245a7b7c\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1628)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB] \"ForkJoinPool-3-worker-3\" Id=47 in WAITING on lock=java.util.concurrent.ForkJoinPool@491f616a\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1628)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB] \"ForkJoinPool-3-worker-5\" Id=48 in WAITING on lock=java.util.concurrent.ForkJoinPool@491f616a\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1628)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB] \"ForkJoinPool-3-worker-7\" Id=50 in TIMED_WAITING on lock=java.util.concurrent.ForkJoinPool@491f616a\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.locks.LockSupport.parkUntil(LockSupport.java:275)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1619)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB] \"ForkJoinPool-3-worker-9\" Id=49 in WAITING on lock=java.util.concurrent.ForkJoinPool@491f616a\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1628)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB] \"ForkJoinPool-3-worker-13\" Id=52 in WAITING on lock=java.util.concurrent.ForkJoinPool@491f616a\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1628)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB] \"ForkJoinPool-3-worker-11\" Id=51 in WAITING on lock=java.util.concurrent.ForkJoinPool@491f616a\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1628)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB] \"ForkJoinPool-3-worker-1\" Id=54 in WAITING on lock=java.util.concurrent.ForkJoinPool@491f616a\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1628)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB] \"ForkJoinPool-3-worker-15\" Id=53 in WAITING on lock=java.util.concurrent.ForkJoinPool@491f616a\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1628)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:05 CET 2020][INFO] [SUB] \"JavaCPP Deallocator\" Id=55 in WAITING on lock=java.lang.ref.ReferenceQueue$Lock@7aae3aa6\r\n[Tue Mar 24 12:21:06 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.lang.Object.wait(Native Method)\r\n[Tue Mar 24 12:21:06 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)\r\n[Tue Mar 24 12:21:06 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:176)\r\n[Tue Mar 24 12:21:06 CET 2020][INFO] [SUB]     at app//com.oracle.svm.shadowed.org.bytedeco.javacpp.Pointer$DeallocatorThread.run(Pointer.java:375)\r\n[Tue Mar 24 12:21:06 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:06 CET 2020][INFO] [SUB] \"process reaper\" Id=64 in RUNNABLE\r\n[Tue Mar 24 12:21:06 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.lang.ProcessHandleImpl.waitForProcessExit0(Native Method)\r\n[Tue Mar 24 12:21:06 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.lang.ProcessHandleImpl$1.run(ProcessHandleImpl.java:138)\r\n[Tue Mar 24 12:21:06 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n[Tue Mar 24 12:21:06 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n[Tue Mar 24 12:21:06 CET 2020][INFO] [SUB]     at java.base@11.0.5/java.lang.Thread.run(Thread.java:834)\r\n[Tue Mar 24 12:21:06 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:06 CET 2020][INFO] [SUB]     Locked synchronizers: count = 1\r\n[Tue Mar 24 12:21:06 CET 2020][INFO] [SUB]       - java.util.concurrent.ThreadPoolExecutor$Worker@2dfb36c6\r\n[Tue Mar 24 12:21:06 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:06 CET 2020][INFO] [SUB] \r\n[Tue Mar 24 12:21:06 CET 2020][INFO] [SUB] === Image generator watchdog is aborting image generation. To configure the watchdog, use the options -H:DeadlockWatchdogInterval=10 and -H:+DeadlockWatchdogExitOnTimeout\r\n[Tue Mar 24 12:22:21 CET 2020][INFO] [SUB] Error: Image build request failed with exit status 1\r\n[Tue Mar 24 12:22:28 CET 2020][SEVERE] Process compile failed with result: 1\r\nCheck the log files under /home/johan/gluon/code/client/client-samples/Maven/HelloFX/target/client/aarch64-android/gvm/log\r\nAnd please check https://docs.gluonhq.com/client/ for more information.\r\n[Tue Mar 24 12:22:35 CET 2020][INFO] Logging process [compile] to file: /home/johan/gluon/code/client/client-samples/Maven/HelloFX/target/client/log/process-compile-1585048950751.log\r\n[Tue Mar 24 12:22:37 CET 2020][SEVERE] Compiling failed.\r\nCheck the log files under /home/johan/gluon/code/client/client-samples/Maven/HelloFX/target/client/aarch64-android/gvm/log\r\nAnd please check https://docs.gluonhq.com/client/ for more information.\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time: 17:18 min\r\n[INFO] Finished at: 2020-03-24T12:22:41+01:00\r\n[INFO] Final Memory: 13M/50M\r\n[INFO] ------------------------------------------------------------------------\r\n[ERROR] Failed to execute goal com.gluonhq:client-maven-plugin:0.1.19-SNAPSHOT:compile (default-cli) on project hellofx: Compiling failed -> [Help 1]\r\n[ERROR] \r\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\r\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\r\n[ERROR] \r\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\r\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException\r\n```", "url": "https://github.com/oracle/graal/issues/2283", "user": "johanvos", "labels": ["bug", "native-image"], "created": "2020-03-24 11:30:04", "closed": "2020-03-31 07:55:35", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "native-image tool does not read reflection-config.json from META-INF/native-image", "body": "I use the code from the netty demo repository https://github.com/cstancu/netty-native-demo:\r\n\r\n**Steps to reproduce the issue**\r\n\r\n1. `git clone https://github.com/cstancu/netty-native-demo`\r\n2.  `cd netty-native-demo`\r\n3. Configure maven-compiler-plugin (I would like to use Java 11):\r\n```\r\n      <pluginManagement>\r\n            <plugins>\r\n                <plugin>\r\n                    <artifactId>maven-compiler-plugin</artifactId>\r\n                    <version>3.8.1</version>\r\n                    <configuration>\r\n                        <release>11</release>\r\n                    </configuration>\r\n                </plugin>\r\n            </plugins>\r\n        </pluginManagement>\r\n```\r\n4. `mvn package`\r\n5. `native-image --verbose -jar target/netty-svm-httpserver-full.jar`\r\n\r\nResult is:\r\n```\r\nApply jar:file:///home/nedis/_temp/test/netty-native-demo/target/netty-svm-httpserver-full.jar!/META-INF/native-image/netty.svm.httpserver/native-image.properties\r\nApply jar:file:///home/nedis/_temp/test/netty-native-demo/target/netty-svm-httpserver-full.jar!/META-INF/native-image/io.netty/transport/native-image.properties\r\nApply jar:file:///home/nedis/_temp/test/netty-native-demo/target/netty-svm-httpserver-full.jar!/META-INF/native-image/io.netty/codec-http/native-image.properties\r\nBuild on Server(pid: 24516, port: 40293)\r\nSendBuildRequest [\r\n-task=com.oracle.svm.hosted.NativeImageGeneratorRunner\r\n-imagecp\r\n/home/nedis/Apps/graalvm-ce-java11-20.0.0/lib/svm/builder/llvm-platform-specific-shadowed.jar:/home/nedis/Apps/graalvm-ce-java11-20.0.0/lib/svm/builder/objectfile.jar:/home/nedis/Apps/graalvm-ce-java11-20.0.0/lib/svm/builder/svm.jar:/home/nedis/Apps/graalvm-ce-java11-20.0.0/lib/svm/builder/svm-llvm.jar:/home/nedis/Apps/graalvm-ce-java11-20.0.0/lib/svm/builder/graal-llvm.jar:/home/nedis/Apps/graalvm-ce-java11-20.0.0/lib/svm/builder/pointsto.jar:/home/nedis/Apps/graalvm-ce-java11-20.0.0/lib/svm/builder/llvm-wrapper-shadowed.jar:/home/nedis/Apps/graalvm-ce-java11-20.0.0/lib/svm/builder/javacpp-shadowed.jar:/home/nedis/Apps/graalvm-ce-java11-20.0.0/lib/svm/library-support.jar:/home/nedis/_temp/test/netty-native-demo/target/netty-svm-httpserver-full.jar\r\n-H:Path=/home/nedis/_temp/test/netty-native-demo\r\n-H:Class=netty.svm.httpserver.HttpHelloWorldServer\r\n-H:Name=netty-svm-httpserver-full\r\n-H:FallbackThreshold=0\r\n-H:+AllowIncompleteClasspath\r\n-H:ClassInitialization=io.netty.handler.ssl.util.ThreadLocalInsecureRandom:run_time\r\n-H:ReflectionConfigurationResources=META-INF/native-image/io.netty/transport/reflection-config.json\r\n-H:ClassInitialization=io.netty:build_time\r\n-H:ClassInitialization=io.netty.handler.codec.http.HttpObjectEncoder:run_time,io.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder:run_time\r\n-H:CLibraryPath=/home/nedis/Apps/graalvm-ce-java11-20.0.0/lib/svm/clibraries/linux-amd64\r\n]\r\n[netty-svm-httpserver-full:24516]    classlist:   1,035.54 ms,  1.00 GB\r\n[netty-svm-httpserver-full:24516]        (cap):     886.05 ms,  1.00 GB\r\n[netty-svm-httpserver-full:24516]        setup:   1,658.48 ms,  1.00 GB\r\nWarning: class initialization of class io.netty.handler.ssl.ReferenceCountedOpenSslContext failed with exception java.lang.NoClassDefFoundError: io/netty/internal/tcnative/SSLPrivateKeyMethod. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=io.netty.handler.ssl.ReferenceCountedOpenSslContext to explicitly request delayed initialization of this class.\r\nWarning: class initialization of class io.netty.handler.ssl.util.BouncyCastleSelfSignedCertGenerator failed with exception java.lang.NoClassDefFoundError: org/bouncycastle/jce/provider/BouncyCastleProvider. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=io.netty.handler.ssl.util.BouncyCastleSelfSignedCertGenerator to explicitly request delayed initialization of this class.\r\nWarning: class initialization of class io.netty.util.internal.logging.Log4JLogger failed with exception java.lang.NoClassDefFoundError: org/apache/log4j/Priority. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=io.netty.util.internal.logging.Log4JLogger to explicitly request delayed initialization of this class.\r\nWarning: class initialization of class io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator failed with exception java.lang.NoClassDefFoundError: org/eclipse/jetty/npn/NextProtoNego$Provider. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator to explicitly request delayed initialization of this class.\r\nWarning: class initialization of class io.netty.handler.ssl.JettyNpnSslEngine failed with exception java.lang.NoClassDefFoundError: org/eclipse/jetty/npn/NextProtoNego$Provider. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=io.netty.handler.ssl.JettyNpnSslEngine to explicitly request delayed initialization of this class.\r\nWarning: class initialization of class io.netty.handler.ssl.ConscryptAlpnSslEngine failed with exception java.lang.NoClassDefFoundError: org/conscrypt/BufferAllocator. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=io.netty.handler.ssl.ConscryptAlpnSslEngine to explicitly request delayed initialization of this class.\r\nWarning: class initialization of class io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine failed with exception java.lang.NoClassDefFoundError: org/eclipse/jetty/alpn/ALPN$Provider. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine to explicitly request delayed initialization of this class.\r\nWarning: class initialization of class io.netty.handler.ssl.JettyAlpnSslEngine$ServerEngine failed with exception java.lang.NoClassDefFoundError: org/eclipse/jetty/alpn/ALPN$Provider. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=io.netty.handler.ssl.JettyAlpnSslEngine$ServerEngine to explicitly request delayed initialization of this class.\r\nWarning: class initialization of class io.netty.handler.ssl.ReferenceCountedOpenSslEngine failed with exception java.lang.NoClassDefFoundError: io/netty/internal/tcnative/SSL. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=io.netty.handler.ssl.ReferenceCountedOpenSslEngine to explicitly request delayed initialization of this class.\r\n[netty-svm-httpserver-full:24516]   (typeflow):   7,015.67 ms,  1.00 GB\r\n[netty-svm-httpserver-full:24516]    (objects):   7,413.43 ms,  1.00 GB\r\n[netty-svm-httpserver-full:24516]   (features):     455.83 ms,  1.00 GB\r\n[netty-svm-httpserver-full:24516]     analysis:  15,885.01 ms,  1.00 GB\r\n[netty-svm-httpserver-full:24516]     (clinit):     583.56 ms,  1.00 GB\r\n[netty-svm-httpserver-full:24516]     universe:   1,192.90 ms,  1.00 GB\r\n[netty-svm-httpserver-full:24516]      (parse):   1,321.89 ms,  1.20 GB\r\n[netty-svm-httpserver-full:24516]     (inline):   1,212.15 ms,  1.20 GB\r\n[netty-svm-httpserver-full:24516]    (compile):   5,541.86 ms,  2.27 GB\r\n[netty-svm-httpserver-full:24516]      compile:   9,560.89 ms,  2.27 GB\r\n[netty-svm-httpserver-full:24516]        image:   3,924.29 ms,  2.27 GB\r\n[netty-svm-httpserver-full:24516]        write:     588.79 ms,  2.27 GB\r\n[netty-svm-httpserver-full:24516]      [total]:  34,020.19 ms,  2.27 GB\r\n\r\n```\r\n\r\n**Verbose output shows only one line:**\r\n\r\n`-H:ReflectionConfigurationResources=META-INF/native-image/io.netty/transport/reflection-config.json`\r\n\r\ni.e. this resource \r\n**https://github.com/cstancu/netty-native-demo/blob/master/src/main/resources/META-INF/native-image/netty.svm.httpserver/reflection-config.json**\r\n\r\n**is ignored!!!**\r\n\r\nI used this command as workaround:\r\n\r\n`native-image --verbose -H:ReflectionConfigurationResources=META-INF/native-image/netty.svm.httpserver/reflection-config.json -jar target/netty-svm-httpserver-full.jar`\r\n\r\nAnd the issue was solved.\r\n\r\n**Expected behavior**\r\n\r\nnative-image tool must read **ALL** reflection-config.json from META-INF/native-image\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM version: \r\nhttps://github.com/graalvm/graalvm-ce-builds/releases/tag/vm-20.0.0 (graalvm-ce-java11-linux-amd64-20.0.0.tar.gz)\r\n - JDK major version: \r\nopenjdk version **\"11.0.6\"** 2020-01-14\r\nOpenJDK Runtime Environment (build 11.0.6+10-post-Ubuntu-1ubuntu118.04.1)\r\nOpenJDK 64-Bit Server VM (build 11.0.6+10-post-Ubuntu-1ubuntu118.04.1, mixed mode, sharing)\r\n\r\n - OS: \r\n  **Ubuntu 18.04.4 LTS** (Kernel: Linux 5.3.0-42-generic)\r\n\r\n - Architecture: \r\n  **x86-64**\r\n", "url": "https://github.com/oracle/graal/issues/2277", "user": "nedis-ua", "labels": ["bug", "native-image"], "created": "2020-03-20 19:21:30", "closed": "2020-03-21 07:58:45", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[Critical] GC breaks direct Int and Long buffers", "body": "**Describe the issue**\r\nData of direct IntBuffer and LongBuffer mutated after GC (some address writes into first four bytes of non-heap mem). Also memory page becomes partially invalid (access rules changes)\r\nAs a result Native Image application random crash on Int(Long)Buffer interaction after GC (Young/Full)\r\n\r\n**Steps to reproduce the issue**\r\n1. Allocate direct LongBuffer\r\n`LongBuffer buf = ByteBuffer.allocateDirect(8).order(ByteOrder.nativeOrder()).asLongBuffer();`\r\n2. Print Value\r\n`System.out.println(buf.get(0));`\r\n3. Perform GC\r\n`System.gc();`\r\n4. Print Value\r\n`System.out.println(buf.get(0));`\r\n5. Build Native Image created of test code\r\n6. Launch!\r\n\r\n**Output**\r\n0\r\n16673504\r\n\r\n16673504 - some address, writed after GC\r\nSubstrateVM reassigned non-heap Memory of LongBuffer and changed access rules\r\n\r\n**Describe GraalVM and your environment:**\r\n - GraalVM CE 20.0.0\r\n - JDK 8\r\n - OS: Windows 10\r\n - Architecture: x64", "url": "https://github.com/oracle/graal/issues/2272", "user": "Konstantin773", "labels": ["bug", "native-image"], "created": "2020-03-19 10:10:39", "closed": "2020-03-19 17:56:45", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "BufferOverflowException ", "body": "I've found a native image bug for Windows version. \r\nThe bug is in  [PECoffSymtabStruct](https://github.com/oracle/graal/blob/bc8b8424f1b45ec97912c7409d9f9c8d88ec3cc2/substratevm/src/com.oracle.objectfile/src/com/oracle/objectfile/pecoff/PECoffSymtabStruct.java)\r\n[Line87](https://github.com/oracle/graal/blob/bc8b8424f1b45ec97912c7409d9f9c8d88ec3cc2/substratevm/src/com.oracle.objectfile/src/com/oracle/objectfile/pecoff/PECoffSymtabStruct.java#L87) used String.getBytes() and cached it's length for allocate memory.\r\n` int nameSize = name.getBytes().length;`\r\nBut [Line139](https://github.com/oracle/graal/blob/bc8b8424f1b45ec97912c7409d9f9c8d88ec3cc2/substratevm/src/com.oracle.objectfile/src/com/oracle/objectfile/pecoff/PECoffSymtabStruct.java#L139) actually write String.getBytes(StandardCharset.UTF_8) to the buffer.\r\n`byte[] strs = strTabContent.toString().getBytes(StandardCharsets.UTF_8);`\r\n\r\nThis can cause a BufferOverflowException when native image building (See #2134 ). If the default charset is GBK or other Chinese language encoding, for a Chinese characters, `String.getBytes().length != String.getBytes(StandardCharset.UTF_8).length`. Under GBK, every Chinese character is encoded to 2 bytes, but under UTF_8 it is encoded to 3 bytes. So the allocated buffer's length is not enough and a BufferOverflowException will throw.\r\n\r\nFor current version, change the default charset by set -Dfile.encoding=UTF8 when building image can avoid this bug, But I hope this can be fix in next release.", "url": "https://github.com/oracle/graal/issues/2268", "user": "kangzq0530", "labels": ["bug", "native-image"], "created": "2020-03-18 08:42:58", "closed": "2020-04-24 05:26:00", "commits": {}, "ttf": 36.000277777777775, "commitsDetails": []}, {"title": "[Native Image] Non-heap memory of DirectByteBuffer in SubstrateVM caused to free only by GC", "body": "In common JVM native memory freed up regardless of the amount used heap. Perhaps a different thread checks references to DirectByteBuffers in \"Cleaner\" object pool and clean non-heap memory early\r\nIn native image APPCRASH happens( PhantomReference problem\r\n\r\nExample:\r\n`for(int i = 0;i<100000;i++) {\r\n\tByteBuffer.allocateDirect(128*1024*1024);\r\n}`\r\n\r\n\r\nAre there any solutions?\r\n\r\n", "url": "https://github.com/oracle/graal/issues/2267", "user": "Konstantin773", "labels": ["bug"], "created": "2020-03-17 22:33:17", "closed": "2020-03-19 18:24:46", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Windows - native-image - UUID.randomUUID() returns always the same uuid", "body": "On Windows, native-image based binary always returns the same uuid when calling `UUID.randomUUID().toString()`. On macOS and Linux with native-image based binary, the returned value is always different.\r\n\r\nUsing GraalVM Version 20.0.0 CE JDK11 on all the systems\r\n\r\nHelloWorld.java\r\n```java\r\nimport java.util.UUID;\r\npublic class HelloWorld {\r\n    public static void main(String[] args) {\r\n      System.out.println(\"Hello, World!\");\r\n      System.out.println(UUID.randomUUID().toString());\r\n    }\r\n  }\r\n```\r\n\r\n```\r\njavac HelloWorld.java && native-image HelloWorld\r\nhelloworld\r\nhelloworld\r\nhelloworld\r\n```\r\nWindows (always the same UUID)\r\n![Screenshot 2020-03-17 07 07 28](https://user-images.githubusercontent.com/925259/76827811-f3190700-681f-11ea-8d10-a369ce3983fd.png)\r\n\r\nmacOS (different UUIDs)\r\n<img width=\"1306\" alt=\"Screenshot 2020-03-17 at 07 11 03\" src=\"https://user-images.githubusercontent.com/925259/76827835-fc09d880-681f-11ea-8077-2c25f59558cf.png\">\r\n\r\n", "url": "https://github.com/oracle/graal/issues/2265", "user": "rsvoboda", "labels": ["bug", "native-image", "platform-windows"], "created": "2020-03-17 06:24:46", "closed": "2020-04-25 18:08:39", "commits": {}, "ttf": 39.000277777777775, "commitsDetails": []}, {"title": "JNA fails to load with GraalVM throwing JNA: Problems loading core IDs: java.lang.Object", "body": "I know JNA is not supported out of the box on GraalVM and there are some issues closed with that conclusion but still, I tried to see if I can find a workaround. When JNA initializes during build time it never works during the runtime. I differed it to initialize at runtime and had all the resources and I started feeling there is a light at the end of the tunnel but unfortunately JNA failed when it's booting up and loading the libjnidispatch.so library it fails with: JNA: Problems loading core IDs: java.lang.Object (It's basically ClassNotFoundException) \r\nThis is the line throwing this error: https://github.com/java-native-access/jna/blob/e6ab3ecdfa5482b41230fc28888df22da4d15bd4/native/dispatch.c#L3267.\r\nNot sure why it's not able to load Java.Lang.Object why it's not available at that time within the SubstrateVM image. I opened a similar ticket on JNA side https://github.com/java-native-access/jna/issues/1172 and I am trying to connect the dots to see what we can do to help as a community to contribute to get JNA working it's very crucial for so many existing Java native libraries.\r\n\r\nSteps to reproduce:\r\n- Version of JNA : **5.3.1**\r\n- Version and vendor of the java virtual machine:\r\n**openjdk version \"1.8.0_242\"\r\nOpenJDK Runtime Environment (build 1.8.0_242-b06)\r\nOpenJDK 64-Bit Server VM GraalVM CE 20.0.0 (build 25.242-b06-jvmci-20.0-b02, mixed mode)**\r\n- Operating system: **Oracle Linux 7 and Centos 7** \r\n\r\nRepo: https://github.com/amahfouz1/clj-pcap-native\r\n- Build docker image:\r\nI have a Dockerfile handy in the repo to help to build the image.\r\n```\r\ncd clj-pcap-native\r\ndocker build -t clj-pcap .\r\n```\r\n- Run docker image mounting the project:\r\n```\r\ndocker run -it -v `pwd`:/clj-pcap clj-pcap /bin/sh\r\n```\r\n- Generate native executable:\r\n```\r\ncd /clj-pcap\r\nlein native-image\r\n```\r\n- Run the executable:\r\n```\r\n/clj-pcap/target/default+uberjar/cljpcap -Djna.debug_load=true\r\n```\r\n```\r\nsh-4.2# /clj-pcap/target/default+uberjar/cljpcap -Djna.debug_load=true\r\nMar 15, 2020 8:13:53 PM com.sun.jna.Native extractFromResourcePath\r\nINFO: Looking in classpath from sun.misc.Launcher$AppClassLoader@16c0128 for /com/sun/jna/linux-x86-64/libjnidispatch.so\r\nMar 15, 2020 8:13:53 PM com.sun.jna.Native extractFromResourcePath\r\nINFO: Found library resource at resourcew:com/sun/jna/linux-x86-64/libjnidispatch.so\r\nMar 15, 2020 8:13:53 PM com.sun.jna.Native extractFromResourcePath\r\nINFO: Extracting library to /root/.cache/JNA/temp/jna2847104491610838225.tmp\r\nJNA: Problems loading core IDs: java.lang.Object\r\n```\r\nThe libjndispatch.so is found and the C code is now started executing but it fails :(\r\n\r\nJNA it seems like it's not able to run the basic JVM classes within the SubstrateVM image.", "url": "https://github.com/oracle/graal/issues/2261", "user": "amahfouz1", "labels": ["bug", "native-image"], "created": "2020-03-16 15:38:15", "closed": "2020-03-23 03:01:21", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "Error in compilation when crosscompiling using LLVM", "body": "**Describe the issue**\r\n\r\nWhen using the LLVM backend, with cached CAP files (and no CCompiler) VMFeature fails with this error:\r\n\r\nError: ImageSingletons do not contain key com.oracle.svm.hosted.c.codegen.CCompilerInvoker\r\ncom.oracle.svm.core.util.UserError$UserException: ImageSingletons do not contain key com.oracle.svm.hosted.c.codegen.CCompilerInvoker\r\n", "url": "https://github.com/oracle/graal/issues/2259", "user": "johanvos", "labels": ["bug", "native-image"], "created": "2020-03-16 13:51:38", "closed": "2020-03-18 08:07:06", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Locally declared @Inherited annotations are not present in native image", "body": "# Overview\r\n\r\nGiven an `@Inherited` annotation that is declared on a superclass and again on a subclass, the annotation is not _present_ as a \"locally declared\" annotation on the subclass within a native image.\r\n\r\nThis breaks code that relies on the actual location of the declaration of the annotation.\r\n\r\nFor example, given the `InheritedAnnotations` test case below, the output when using a standard JDK results in the following.\r\n\r\n```diff\r\n+ SUCCESS: @InheritedAnnotation was found as an annotation on Superclass.\r\n+ SUCCESS: @InheritedAnnotation was found as a declared annotation on Superclass.\r\n+ SUCCESS: @InheritedAnnotation was found as an annotation on Subclass.\r\n+ SUCCESS: @InheritedAnnotation was found as a declared annotation on Subclass.\r\n```\r\n\r\nWhereas, if you compile the test case into a native image, the output is the following.\r\n\r\n```diff\r\n+ SUCCESS: @InheritedAnnotation was found as an annotation on Superclass.\r\n+ SUCCESS: @InheritedAnnotation was found as a declared annotation on Superclass.\r\n+ SUCCESS: @InheritedAnnotation was found as an annotation on Subclass.\r\n- FAILURE: @InheritedAnnotation was NOT found as a declared annotation on Subclass.\r\n```\r\n\r\nThe above **FAILURE** points out the bug within a native image.\r\n\r\nSee https://github.com/sbrannen/graalvm-playground/tree/master/inherited_annotations for full details.\r\n\r\n\r\n```java\r\nimport java.lang.annotation.Annotation;\r\nimport java.lang.annotation.Inherited;\r\nimport java.lang.annotation.Retention;\r\nimport java.lang.annotation.RetentionPolicy;\r\n\r\npublic class InheritedAnnotations {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tfindAnnotation(Superclass.class);\r\n\t\tfindAnnotation(Subclass.class);\r\n\t}\r\n\r\n\tprivate static void findAnnotation(Class<?> clazz) {\r\n\t\tAnnotation[] annotations = clazz.getAnnotations();\r\n\t\tif (annotations.length == 1 && annotations[0].annotationType().equals(InheritedAnnotation.class)) {\r\n\t\t\tSystem.out.format(\"SUCCESS: @InheritedAnnotation was found as an annotation on %s.%n\",\r\n\t\t\t\tclazz.getSimpleName());\r\n\t\t}\r\n\t\telse {\r\n\t\t\tSystem.out.format(\"FAILURE: @InheritedAnnotation was NOT found as an annotation on %s.%n\",\r\n\t\t\t\tclazz.getSimpleName());\r\n\t\t}\r\n\t\tAnnotation[] declaredAnnotations = clazz.getDeclaredAnnotations();\r\n\t\tif (declaredAnnotations.length == 1\r\n\t\t\t\t&& declaredAnnotations[0].annotationType().equals(InheritedAnnotation.class)) {\r\n\t\t\tSystem.out.format(\"SUCCESS: @InheritedAnnotation was found as a declared annotation on %s.%n\",\r\n\t\t\t\tclazz.getSimpleName());\r\n\t\t}\r\n\t\telse {\r\n\t\t\tSystem.out.format(\"FAILURE: @InheritedAnnotation was NOT found as a declared annotation on %s.%n\",\r\n\t\t\t\tclazz.getSimpleName());\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\n```java\r\n@Retention(RetentionPolicy.RUNTIME)\r\n@Inherited\r\n@interface InheritedAnnotation {\r\n}\r\n```\r\n\r\n```java\r\n@InheritedAnnotation\r\nclass Superclass {\r\n}\r\n```\r\n\r\n```java\r\n@InheritedAnnotation\r\nclass Subclass extends Superclass {\r\n}\r\n```\r\n\r\n# Environment\r\n\r\n- GraalVM version: CE 20.0\r\n- JDK major version: 8\r\n- OS: macOS 10.14.6\r\n- Architecture: i386 / x86_64\r\n", "url": "https://github.com/oracle/graal/issues/2243", "user": "sbrannen", "labels": ["bug", "native-image", "spring"], "created": "2020-03-10 13:01:26", "closed": "2020-04-22 21:29:13", "commits": {}, "ttf": 43.000277777777775, "commitsDetails": []}, {"title": "Improve native-image flag help output.", "body": "**Describe the issue**\r\nThe native-image help flag (PrintFlags) does not output extended help for options that have extended help available. Example output:\r\n```\r\n$ native-image --expert-options-all\r\n...\r\n-H:MethodFilter=...                          Pattern for matching methods. The syntax for a pattern is:. Default: None\r\n...\r\n```\r\nThe help of this method is contained in the following file: `/compiler/src/org.graalvm.compiler.debug/src/org/graalvm/compiler/debug/doc-files/MethodFilterHelp.txt`\r\nThis file contains additional help for the option.", "url": "https://github.com/oracle/graal/issues/2238", "user": "gradinac", "labels": ["bug", "native-image"], "created": "2020-03-09 15:55:25", "closed": "2020-05-18 19:29:49", "commits": {}, "ttf": 70.00027777777778, "commitsDetails": []}, {"title": "High lock contention in BytecodeParser.maybeEagerlyResolve during building of native image", "body": "I've been trying to narrow down issues that contribute to slow native-image build times when using Java 11. One such thing appears to be the `synchronized` block in `org.graalvm.compiler.java.BytecodeParser.maybeEagerlyResolve` [1]. Multiple `jstack` thread dumps during the native-image builds show various occasions where some thread has locked the `BytecodeParser.class` object monitor while some other thread is waiting for that lock. One such `jstack` output looks like below:\r\n```\r\n2020-03-08 05:02:19\r\nFull thread dump OpenJDK 64-Bit Server VM (11.0.6+9-jvmci-19.3-b07 mixed mode, sharing):\r\n\r\nThreads class SMR info:\r\n_java_thread_list=0x00007f0288001eb0, length=18, elements={\r\n0x00007f02d002f000, 0x00007f02d0459800, 0x00007f02d045b800, 0x00007f02d0460800,\r\n0x00007f02d0462800, 0x00007f02d0464800, 0x00007f02d0466800, 0x00007f02d04a6800,\r\n0x00007f02d0511000, 0x00007f02d0547000, 0x00007f02d071c000, 0x00007f02d04ad800,\r\n0x00007f02d0dda800, 0x00007f0210202000, 0x00007f0210204000, 0x00007f0210079800,\r\n0x00007f0224015800, 0x00007f0288001000\r\n}\r\n\r\n\"main\" #1 prio=5 os_prio=0 cpu=13824.71ms elapsed=1153.21s tid=0x00007f02d002f000 nid=0x19 in Object.wait()  [0x00007f02d7ac7000]\r\n   java.lang.Thread.State: WAITING (on object monitor)\r\n\tat java.lang.Object.wait(java.base@11.0.6/Native Method)\r\n\t- waiting on <0x000000009dc1e148> (a java.util.concurrent.ForkJoinTask$AdaptedRunnableAction)\r\n\tat java.util.concurrent.ForkJoinTask.externalInterruptibleAwaitDone(java.base@11.0.6/ForkJoinTask.java:356)\r\n\t- waiting to re-lock in wait() <0x000000009dc1e148> (a java.util.concurrent.ForkJoinTask$AdaptedRunnableAction)\r\n\tat java.util.concurrent.ForkJoinTask.get(java.base@11.0.6/ForkJoinTask.java:1004)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:462)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:315)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:454)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:115)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner$JDK9Plus.main(NativeImageGeneratorRunner.java:479)\r\n\r\n\"Reference Handler\" #2 daemon prio=10 os_prio=0 cpu=168.47ms elapsed=1152.67s tid=0x00007f02d0459800 nid=0x20 waiting on condition  [0x00007f02b0e3e000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\tat java.lang.ref.Reference.waitForReferencePendingList(java.base@11.0.6/Native Method)\r\n\tat java.lang.ref.Reference.processPendingReferences(java.base@11.0.6/Reference.java:241)\r\n\tat java.lang.ref.Reference$ReferenceHandler.run(java.base@11.0.6/Reference.java:213)\r\n\r\n\"Finalizer\" #3 daemon prio=8 os_prio=0 cpu=12.21ms elapsed=1152.67s tid=0x00007f02d045b800 nid=0x21 in Object.wait()  [0x00007f02a9ffe000]\r\n   java.lang.Thread.State: WAITING (on object monitor)\r\n\tat java.lang.Object.wait(java.base@11.0.6/Native Method)\r\n\t- waiting on <no object reference available>\r\n\tat java.lang.ref.ReferenceQueue.remove(java.base@11.0.6/ReferenceQueue.java:155)\r\n\t- waiting to re-lock in wait() <0x000000009cb1f688> (a java.lang.ref.ReferenceQueue$Lock)\r\n\tat java.lang.ref.ReferenceQueue.remove(java.base@11.0.6/ReferenceQueue.java:176)\r\n\tat java.lang.ref.Finalizer$FinalizerThread.run(java.base@11.0.6/Finalizer.java:170)\r\n\r\n\"Signal Dispatcher\" #4 daemon prio=9 os_prio=0 cpu=10.63ms elapsed=1152.64s tid=0x00007f02d0460800 nid=0x22 runnable  [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\r\n\"JVMCI-native CompilerThread0\" #5 daemon prio=9 os_prio=0 cpu=92560.38ms elapsed=1152.63s tid=0x00007f02d0462800 nid=0x23 waiting on condition  [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n   No compile task\r\n\r\n\"C1 CompilerThread0\" #7 daemon prio=9 os_prio=0 cpu=15726.88ms elapsed=1152.63s tid=0x00007f02d0464800 nid=0x24 waiting on condition  [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n   No compile task\r\n\r\n\"Sweeper thread\" #8 daemon prio=9 os_prio=0 cpu=1010.62ms elapsed=1152.63s tid=0x00007f02d0466800 nid=0x25 runnable  [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\r\n\"Common-Cleaner\" #9 daemon prio=8 os_prio=0 cpu=100.32ms elapsed=1152.34s tid=0x00007f02d04a6800 nid=0x26 in Object.wait()  [0x00007f027fffe000]\r\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\n\tat java.lang.Object.wait(java.base@11.0.6/Native Method)\r\n\t- waiting on <no object reference available>\r\n\tat java.lang.ref.ReferenceQueue.remove(java.base@11.0.6/ReferenceQueue.java:155)\r\n\t- waiting to re-lock in wait() <0x000000009cb1fe78> (a java.lang.ref.ReferenceQueue$Lock)\r\n\tat jdk.internal.ref.CleanerImpl.run(java.base@11.0.6/CleanerImpl.java:148)\r\n\tat java.lang.Thread.run(java.base@11.0.6/Thread.java:834)\r\n\tat jdk.internal.misc.InnocuousThread.run(java.base@11.0.6/InnocuousThread.java:134)\r\n\r\n\"Service Thread\" #10 daemon prio=9 os_prio=0 cpu=85.43ms elapsed=1151.70s tid=0x00007f02d0511000 nid=0x27 runnable  [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\r\n\"native-image pid watcher\" #11 prio=5 os_prio=0 cpu=2985.81ms elapsed=1151.50s tid=0x00007f02d0547000 nid=0x29 runnable  [0x00007f026fffe000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\tat java.lang.Object.<init>(java.base@11.0.6/Object.java:50)\r\n\tat java.nio.charset.CharsetEncoder.<init>(java.base@11.0.6/CharsetEncoder.java:190)\r\n\tat java.nio.charset.CharsetEncoder.<init>(java.base@11.0.6/CharsetEncoder.java:231)\r\n\tat sun.nio.cs.US_ASCII$Encoder.<init>(java.base@11.0.6/US_ASCII.java:135)\r\n\tat sun.nio.cs.US_ASCII.newEncoder(java.base@11.0.6/US_ASCII.java:58)\r\n\tat sun.nio.fs.UnixPath.encode(java.base@11.0.6/UnixPath.java:121)\r\n\tat sun.nio.fs.UnixPath.<init>(java.base@11.0.6/UnixPath.java:69)\r\n\tat sun.nio.fs.UnixFileSystem.getPath(java.base@11.0.6/UnixFileSystem.java:279)\r\n\tat java.nio.file.Path.of(java.base@11.0.6/Path.java:147)\r\n\tat java.nio.file.Paths.get(java.base@11.0.6/Paths.java:69)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner$1.run(NativeImageGeneratorRunner.java:98)\r\n\tat java.util.TimerThread.mainLoop(java.base@11.0.6/Timer.java:556)\r\n\tat java.util.TimerThread.run(java.base@11.0.6/Timer.java:506)\r\n\r\n\"ForkJoinPool-1-worker-3\" #12 daemon prio=5 os_prio=0 cpu=11107.02ms elapsed=1147.09s tid=0x00007f02d071c000 nid=0x2a waiting on condition  [0x00007f0260dfe000]\r\n   java.lang.Thread.State: WAITING (parking)\r\n\tat jdk.internal.misc.Unsafe.park(java.base@11.0.6/Native Method)\r\n\t- parking to wait for  <0x000000009cb206b8> (a java.util.concurrent.ForkJoinPool)\r\n\tat java.util.concurrent.locks.LockSupport.park(java.base@11.0.6/LockSupport.java:194)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(java.base@11.0.6/ForkJoinPool.java:1628)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(java.base@11.0.6/ForkJoinWorkerThread.java:177)\r\n\r\n\"ForkJoinPool.commonPool-worker-3\" #16 daemon prio=5 os_prio=0 cpu=391.46ms elapsed=1142.37s tid=0x00007f02d04ad800 nid=0x33 waiting on condition  [0x00007f022fffe000]\r\n   java.lang.Thread.State: WAITING (parking)\r\n\tat jdk.internal.misc.Unsafe.park(java.base@11.0.6/Native Method)\r\n\t- parking to wait for  <0x000000009cfd1568> (a java.util.concurrent.ForkJoinPool)\r\n\tat java.util.concurrent.locks.LockSupport.park(java.base@11.0.6/LockSupport.java:194)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(java.base@11.0.6/ForkJoinPool.java:1628)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(java.base@11.0.6/ForkJoinWorkerThread.java:177)\r\n\r\n\"ForkJoinPool-4-worker-3\" #19 daemon prio=5 os_prio=0 cpu=24804.01ms elapsed=1037.73s tid=0x00007f02d0dda800 nid=0x3b runnable  [0x00007f022ebfb000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.complete(CompletionExecutor.java:226)\r\n\tat com.oracle.graal.pointsto.BigBang.checkObjectGraph(BigBang.java:604)\r\n\tat com.oracle.graal.pointsto.BigBang.finish(BigBang.java:559)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:687)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:530)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:445)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator$$Lambda$86/0x0000000840a2a840.run(Unknown Source)\r\n\tat java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(java.base@11.0.6/ForkJoinTask.java:1407)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(java.base@11.0.6/ForkJoinTask.java:290)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(java.base@11.0.6/ForkJoinPool.java:1020)\r\n\tat java.util.concurrent.ForkJoinPool.scan(java.base@11.0.6/ForkJoinPool.java:1656)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(java.base@11.0.6/ForkJoinPool.java:1594)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(java.base@11.0.6/ForkJoinWorkerThread.java:177)\r\n\r\n\"ForkJoinPool-2-worker-3\" #23 daemon prio=5 os_prio=0 cpu=69288.29ms elapsed=1032.12s tid=0x00007f0210202000 nid=0x68 waiting for monitor entry  [0x00007f0215bfd000]\r\n   java.lang.Thread.State: BLOCKED (on object monitor)\r\n\tat org.graalvm.compiler.java.BytecodeParser.maybeEagerlyResolve(jdk.internal.vm.compiler/BytecodeParser.java:4213)\r\n\t- waiting to lock <0x000000009d868ec8> (a java.lang.Class for org.graalvm.compiler.java.BytecodeParser)\r\n\tat com.oracle.svm.hosted.phases.SharedGraphBuilderPhase$SharedBytecodeParser.maybeEagerlyResolve(SharedGraphBuilderPhase.java:107)\r\n\tat org.graalvm.compiler.java.BytecodeParser.lookupField(jdk.internal.vm.compiler/BytecodeParser.java:4174)\r\n\tat org.graalvm.compiler.java.BytecodeParser.genGetStatic(jdk.internal.vm.compiler/BytecodeParser.java:4678)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBytecode(jdk.internal.vm.compiler/BytecodeParser.java:5164)\r\n\tat org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(jdk.internal.vm.compiler/BytecodeParser.java:3286)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBlock(jdk.internal.vm.compiler/BytecodeParser.java:3093)\r\n\tat org.graalvm.compiler.java.BytecodeParser.build(jdk.internal.vm.compiler/BytecodeParser.java:977)\r\n\tat org.graalvm.compiler.java.BytecodeParser.parseAndInlineCallee(jdk.internal.vm.compiler/BytecodeParser.java:2497)\r\n\tat org.graalvm.compiler.java.BytecodeParser.inline(jdk.internal.vm.compiler/BytecodeParser.java:2396)\r\n\tat org.graalvm.compiler.java.BytecodeParser.tryInline(jdk.internal.vm.compiler/BytecodeParser.java:2142)\r\n\tat org.graalvm.compiler.java.BytecodeParser.appendInvoke(jdk.internal.vm.compiler/BytecodeParser.java:1814)\r\n\tat org.graalvm.compiler.java.BytecodeParser.genInvokeStatic(jdk.internal.vm.compiler/BytecodeParser.java:1571)\r\n\tat org.graalvm.compiler.java.BytecodeParser.genInvokeStatic(jdk.internal.vm.compiler/BytecodeParser.java:1551)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBytecode(jdk.internal.vm.compiler/BytecodeParser.java:5170)\r\n\tat org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(jdk.internal.vm.compiler/BytecodeParser.java:3286)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBlock(jdk.internal.vm.compiler/BytecodeParser.java:3093)\r\n\tat org.graalvm.compiler.java.BytecodeParser.build(jdk.internal.vm.compiler/BytecodeParser.java:977)\r\n\tat org.graalvm.compiler.java.BytecodeParser.parseAndInlineCallee(jdk.internal.vm.compiler/BytecodeParser.java:2497)\r\n\tat org.graalvm.compiler.java.BytecodeParser.inline(jdk.internal.vm.compiler/BytecodeParser.java:2396)\r\n\tat org.graalvm.compiler.java.BytecodeParser.tryInline(jdk.internal.vm.compiler/BytecodeParser.java:2142)\r\n\tat org.graalvm.compiler.java.BytecodeParser.appendInvoke(jdk.internal.vm.compiler/BytecodeParser.java:1814)\r\n\tat org.graalvm.compiler.java.BytecodeParser.genDynamicInvokeHelper(jdk.internal.vm.compiler/BytecodeParser.java:1680)\r\n\tat org.graalvm.compiler.java.BytecodeParser.genInvokeVirtual(jdk.internal.vm.compiler/BytecodeParser.java:1630)\r\n\tat org.graalvm.compiler.java.BytecodeParser.genInvokeVirtual(jdk.internal.vm.compiler/BytecodeParser.java:1615)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBytecode(jdk.internal.vm.compiler/BytecodeParser.java:5168)\r\n\tat org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(jdk.internal.vm.compiler/BytecodeParser.java:3286)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBlock(jdk.internal.vm.compiler/BytecodeParser.java:3093)\r\n\tat org.graalvm.compiler.java.BytecodeParser.build(jdk.internal.vm.compiler/BytecodeParser.java:977)\r\n\tat org.graalvm.compiler.java.BytecodeParser.buildRootMethod(jdk.internal.vm.compiler/BytecodeParser.java:871)\r\n\tat org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(jdk.internal.vm.compiler/GraphBuilderPhase.java:84)\r\n\tat org.graalvm.compiler.phases.Phase.run(jdk.internal.vm.compiler/Phase.java:49)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(jdk.internal.vm.compiler/BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(jdk.internal.vm.compiler/BasePhase.java:139)\r\n\tat com.oracle.svm.hosted.substitute.UnsafeAutomaticSubstitutionProcessor.getStaticInitializerGraph(UnsafeAutomaticSubstitutionProcessor.java:933)\r\n\tat com.oracle.svm.hosted.substitute.UnsafeAutomaticSubstitutionProcessor.computeSubstitutions(UnsafeAutomaticSubstitutionProcessor.java:349)\r\n\tat com.oracle.svm.hosted.SVMHost.registerType(SVMHost.java:207)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.createType(AnalysisUniverse.java:264)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookupAllowUnresolved(AnalysisUniverse.java:205)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookup(AnalysisUniverse.java:182)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookup(AnalysisUniverse.java:75)\r\n\tat com.oracle.graal.pointsto.infrastructure.UniverseMetaAccess$1.apply(UniverseMetaAccess.java:52)\r\n\tat com.oracle.graal.pointsto.infrastructure.UniverseMetaAccess$1.apply(UniverseMetaAccess.java:49)\r\n\tat java.util.concurrent.ConcurrentHashMap.computeIfAbsent(java.base@11.0.6/ConcurrentHashMap.java:1737)\r\n\t- locked <0x00000000ae86d580> (a java.util.concurrent.ConcurrentHashMap$Node)\r\n\tat com.oracle.graal.pointsto.infrastructure.UniverseMetaAccess.lookupJavaType(UniverseMetaAccess.java:84)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisMetaAccess.lookupJavaType(AnalysisMetaAccess.java:47)\r\n\tat com.oracle.graal.pointsto.AnalysisObjectScanner.forScannedConstant(AnalysisObjectScanner.java:135)\r\n\tat com.oracle.graal.pointsto.ObjectScanner.scanConstant(ObjectScanner.java:289)\r\n\tat com.oracle.graal.pointsto.ObjectScanner.scanField(ObjectScanner.java:197)\r\n\tat com.oracle.graal.pointsto.ObjectScanner.doScan(ObjectScanner.java:344)\r\n\tat com.oracle.graal.pointsto.ObjectScanner.access$400(ObjectScanner.java:62)\r\n\tat com.oracle.graal.pointsto.ObjectScanner$3$1.run(ObjectScanner.java:414)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:171)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor$$Lambda$328/0x000000084191c840.run(Unknown Source)\r\n\tat java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(java.base@11.0.6/ForkJoinTask.java:1426)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(java.base@11.0.6/ForkJoinTask.java:290)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(java.base@11.0.6/ForkJoinPool.java:1020)\r\n\tat java.util.concurrent.ForkJoinPool.scan(java.base@11.0.6/ForkJoinPool.java:1656)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(java.base@11.0.6/ForkJoinPool.java:1594)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(java.base@11.0.6/ForkJoinWorkerThread.java:177)\r\n\r\n\"ForkJoinPool-2-worker-5\" #24 daemon prio=5 os_prio=0 cpu=71079.56ms elapsed=1032.12s tid=0x00007f0210204000 nid=0x69 runnable  [0x00007f02151fb000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\tat org.graalvm.compiler.nodes.FrameState.<init>(jdk.internal.vm.compiler/FrameState.java:200)\r\n\tat org.graalvm.compiler.java.FrameStateBuilder.create(jdk.internal.vm.compiler/FrameStateBuilder.java:351)\r\n\tat org.graalvm.compiler.java.FrameStateBuilder.create(jdk.internal.vm.compiler/FrameStateBuilder.java:328)\r\n\tat org.graalvm.compiler.java.FrameStateBuilder.create(jdk.internal.vm.compiler/FrameStateBuilder.java:318)\r\n\tat org.graalvm.compiler.java.BytecodeParser.handleException(jdk.internal.vm.compiler/BytecodeParser.java:1219)\r\n\tat org.graalvm.compiler.java.BytecodeParser.createInvokeWithException(jdk.internal.vm.compiler/BytecodeParser.java:2587)\r\n\tat org.graalvm.compiler.java.BytecodeParser.createNonInlinedInvoke(jdk.internal.vm.compiler/BytecodeParser.java:1969)\r\n\tat org.graalvm.compiler.java.BytecodeParser.createNonInlinedInvoke(jdk.internal.vm.compiler/BytecodeParser.java:1956)\r\n\tat org.graalvm.compiler.java.BytecodeParser.appendInvoke(jdk.internal.vm.compiler/BytecodeParser.java:1862)\r\n\tat org.graalvm.compiler.java.BytecodeParser.genDynamicInvokeHelper(jdk.internal.vm.compiler/BytecodeParser.java:1680)\r\n\tat org.graalvm.compiler.java.BytecodeParser.genInvokeVirtual(jdk.internal.vm.compiler/BytecodeParser.java:1630)\r\n\tat org.graalvm.compiler.java.BytecodeParser.genInvokeVirtual(jdk.internal.vm.compiler/BytecodeParser.java:1615)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBytecode(jdk.internal.vm.compiler/BytecodeParser.java:5168)\r\n\tat org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(jdk.internal.vm.compiler/BytecodeParser.java:3286)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBlock(jdk.internal.vm.compiler/BytecodeParser.java:3093)\r\n\tat org.graalvm.compiler.java.BytecodeParser.build(jdk.internal.vm.compiler/BytecodeParser.java:977)\r\n\tat org.graalvm.compiler.java.BytecodeParser.parseAndInlineCallee(jdk.internal.vm.compiler/BytecodeParser.java:2497)\r\n\tat org.graalvm.compiler.java.BytecodeParser.inline(jdk.internal.vm.compiler/BytecodeParser.java:2396)\r\n\tat org.graalvm.compiler.java.BytecodeParser.tryInline(jdk.internal.vm.compiler/BytecodeParser.java:2142)\r\n\tat org.graalvm.compiler.java.BytecodeParser.appendInvoke(jdk.internal.vm.compiler/BytecodeParser.java:1814)\r\n\tat org.graalvm.compiler.java.BytecodeParser.genDynamicInvokeHelper(jdk.internal.vm.compiler/BytecodeParser.java:1680)\r\n\tat org.graalvm.compiler.java.BytecodeParser.genInvokeVirtual(jdk.internal.vm.compiler/BytecodeParser.java:1630)\r\n\tat org.graalvm.compiler.java.BytecodeParser.genInvokeVirtual(jdk.internal.vm.compiler/BytecodeParser.java:1615)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBytecode(jdk.internal.vm.compiler/BytecodeParser.java:5168)\r\n\tat org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(jdk.internal.vm.compiler/BytecodeParser.java:3286)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBlock(jdk.internal.vm.compiler/BytecodeParser.java:3093)\r\n\tat org.graalvm.compiler.java.BytecodeParser.build(jdk.internal.vm.compiler/BytecodeParser.java:977)\r\n\tat org.graalvm.compiler.java.BytecodeParser.parseAndInlineCallee(jdk.internal.vm.compiler/BytecodeParser.java:2497)\r\n\tat org.graalvm.compiler.java.BytecodeParser.inline(jdk.internal.vm.compiler/BytecodeParser.java:2396)\r\n\tat org.graalvm.compiler.java.BytecodeParser.tryInline(jdk.internal.vm.compiler/BytecodeParser.java:2142)\r\n\tat org.graalvm.compiler.java.BytecodeParser.appendInvoke(jdk.internal.vm.compiler/BytecodeParser.java:1814)\r\n\tat org.graalvm.compiler.java.BytecodeParser.genDynamicInvokeHelper(jdk.internal.vm.compiler/BytecodeParser.java:1680)\r\n\tat org.graalvm.compiler.java.BytecodeParser.genInvokeVirtual(jdk.internal.vm.compiler/BytecodeParser.java:1630)\r\n\tat org.graalvm.compiler.java.BytecodeParser.genInvokeVirtual(jdk.internal.vm.compiler/BytecodeParser.java:1615)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBytecode(jdk.internal.vm.compiler/BytecodeParser.java:5168)\r\n\tat org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(jdk.internal.vm.compiler/BytecodeParser.java:3286)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBlock(jdk.internal.vm.compiler/BytecodeParser.java:3093)\r\n\tat org.graalvm.compiler.java.BytecodeParser.build(jdk.internal.vm.compiler/BytecodeParser.java:977)\r\n\tat org.graalvm.compiler.java.BytecodeParser.buildRootMethod(jdk.internal.vm.compiler/BytecodeParser.java:871)\r\n\tat org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(jdk.internal.vm.compiler/GraphBuilderPhase.java:84)\r\n\tat org.graalvm.compiler.phases.Phase.run(jdk.internal.vm.compiler/Phase.java:49)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(jdk.internal.vm.compiler/BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(jdk.internal.vm.compiler/BasePhase.java:139)\r\n\tat com.oracle.svm.hosted.substitute.UnsafeAutomaticSubstitutionProcessor.getStaticInitializerGraph(UnsafeAutomaticSubstitutionProcessor.java:933)\r\n\tat com.oracle.svm.hosted.substitute.UnsafeAutomaticSubstitutionProcessor.computeSubstitutions(UnsafeAutomaticSubstitutionProcessor.java:349)\r\n\tat com.oracle.svm.hosted.SVMHost.registerType(SVMHost.java:207)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.createType(AnalysisUniverse.java:264)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookupAllowUnresolved(AnalysisUniverse.java:205)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookup(AnalysisUniverse.java:182)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookup(AnalysisUniverse.java:75)\r\n\tat com.oracle.graal.pointsto.infrastructure.UniverseMetaAccess$1.apply(UniverseMetaAccess.java:52)\r\n\tat com.oracle.graal.pointsto.infrastructure.UniverseMetaAccess$1.apply(UniverseMetaAccess.java:49)\r\n\tat java.util.concurrent.ConcurrentHashMap.computeIfAbsent(java.base@11.0.6/ConcurrentHashMap.java:1705)\r\n\t- locked <0x00000000ff440e40> (a java.util.concurrent.ConcurrentHashMap$ReservationNode)\r\n\tat com.oracle.graal.pointsto.infrastructure.UniverseMetaAccess.lookupJavaType(UniverseMetaAccess.java:84)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisMetaAccess.lookupJavaType(AnalysisMetaAccess.java:47)\r\n\tat com.oracle.graal.pointsto.AnalysisObjectScanner.forScannedConstant(AnalysisObjectScanner.java:135)\r\n\tat com.oracle.graal.pointsto.ObjectScanner.scanConstant(ObjectScanner.java:289)\r\n\tat com.oracle.graal.pointsto.ObjectScanner.scanField(ObjectScanner.java:197)\r\n\tat com.oracle.graal.pointsto.ObjectScanner.doScan(ObjectScanner.java:344)\r\n\tat com.oracle.graal.pointsto.ObjectScanner.access$400(ObjectScanner.java:62)\r\n\tat com.oracle.graal.pointsto.ObjectScanner$3$1.run(ObjectScanner.java:414)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:171)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor$$Lambda$328/0x000000084191c840.run(Unknown Source)\r\n\tat java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(java.base@11.0.6/ForkJoinTask.java:1426)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(java.base@11.0.6/ForkJoinTask.java:290)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(java.base@11.0.6/ForkJoinPool.java:1020)\r\n\tat java.util.concurrent.ForkJoinPool.scan(java.base@11.0.6/ForkJoinPool.java:1656)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(java.base@11.0.6/ForkJoinPool.java:1594)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(java.base@11.0.6/ForkJoinWorkerThread.java:177)\r\n\r\n\"ForkJoinPool-2-worker-7\" #25 daemon prio=5 os_prio=0 cpu=69484.04ms elapsed=1032.12s tid=0x00007f0210079800 nid=0x6a runnable  [0x00007f020fffc000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\tat jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(jdk.internal.vm.ci@11.0.6/Native Method)\r\n\tat jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(jdk.internal.vm.ci@11.0.6/HotSpotConstantPool.java:614)\r\n\tat jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(jdk.internal.vm.ci@11.0.6/HotSpotConstantPool.java:632)\r\n\tat org.graalvm.compiler.java.BytecodeParser.lookupField(jdk.internal.vm.compiler/BytecodeParser.java:4175)\r\n\tat org.graalvm.compiler.java.BytecodeParser.genPutStatic(jdk.internal.vm.compiler/BytecodeParser.java:4770)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBytecode(jdk.internal.vm.compiler/BytecodeParser.java:5165)\r\n\tat org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(jdk.internal.vm.compiler/BytecodeParser.java:3286)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBlock(jdk.internal.vm.compiler/BytecodeParser.java:3093)\r\n\tat org.graalvm.compiler.java.BytecodeParser.build(jdk.internal.vm.compiler/BytecodeParser.java:977)\r\n\tat org.graalvm.compiler.java.BytecodeParser.buildRootMethod(jdk.internal.vm.compiler/BytecodeParser.java:871)\r\n\tat org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(jdk.internal.vm.compiler/GraphBuilderPhase.java:84)\r\n\tat org.graalvm.compiler.phases.Phase.run(jdk.internal.vm.compiler/Phase.java:49)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(jdk.internal.vm.compiler/BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(jdk.internal.vm.compiler/BasePhase.java:139)\r\n\tat com.oracle.svm.hosted.substitute.UnsafeAutomaticSubstitutionProcessor.getStaticInitializerGraph(UnsafeAutomaticSubstitutionProcessor.java:933)\r\n\tat com.oracle.svm.hosted.substitute.UnsafeAutomaticSubstitutionProcessor.computeSubstitutions(UnsafeAutomaticSubstitutionProcessor.java:349)\r\n\tat com.oracle.svm.hosted.SVMHost.registerType(SVMHost.java:207)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.createType(AnalysisUniverse.java:264)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookupAllowUnresolved(AnalysisUniverse.java:205)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookup(AnalysisUniverse.java:182)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookup(AnalysisUniverse.java:75)\r\n\tat com.oracle.graal.pointsto.infrastructure.UniverseMetaAccess$1.apply(UniverseMetaAccess.java:52)\r\n\tat com.oracle.graal.pointsto.infrastructure.UniverseMetaAccess$1.apply(UniverseMetaAccess.java:49)\r\n\tat java.util.concurrent.ConcurrentHashMap.computeIfAbsent(java.base@11.0.6/ConcurrentHashMap.java:1705)\r\n\t- locked <0x00000000ff3b74a8> (a java.util.concurrent.ConcurrentHashMap$ReservationNode)\r\n\tat com.oracle.graal.pointsto.infrastructure.UniverseMetaAccess.lookupJavaType(UniverseMetaAccess.java:84)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisMetaAccess.lookupJavaType(AnalysisMetaAccess.java:47)\r\n\tat com.oracle.graal.pointsto.AnalysisObjectScanner.forScannedConstant(AnalysisObjectScanner.java:135)\r\n\tat com.oracle.graal.pointsto.ObjectScanner.scanConstant(ObjectScanner.java:289)\r\n\tat com.oracle.graal.pointsto.ObjectScanner.scanField(ObjectScanner.java:197)\r\n\tat com.oracle.graal.pointsto.ObjectScanner.doScan(ObjectScanner.java:344)\r\n\tat com.oracle.graal.pointsto.ObjectScanner.access$400(ObjectScanner.java:62)\r\n\tat com.oracle.graal.pointsto.ObjectScanner$3$1.run(ObjectScanner.java:414)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:171)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor$$Lambda$328/0x000000084191c840.run(Unknown Source)\r\n\tat java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(java.base@11.0.6/ForkJoinTask.java:1426)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(java.base@11.0.6/ForkJoinTask.java:290)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(java.base@11.0.6/ForkJoinPool.java:1020)\r\n\tat java.util.concurrent.ForkJoinPool.scan(java.base@11.0.6/ForkJoinPool.java:1656)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(java.base@11.0.6/ForkJoinPool.java:1594)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(java.base@11.0.6/ForkJoinWorkerThread.java:177)\r\n\r\n\"ForkJoinPool-2-worker-1\" #26 daemon prio=5 os_prio=0 cpu=73696.46ms elapsed=1032.12s tid=0x00007f0224015800 nid=0x6b waiting for monitor entry  [0x00007f020f5fc000]\r\n   java.lang.Thread.State: BLOCKED (on object monitor)\r\n\tat jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromMetaspace(jdk.internal.vm.ci@11.0.6/HotSpotJVMCIRuntime.java:548)\r\n\t- locked <0x000000009cb45068> (a jdk.vm.ci.hotspot.HotSpotJVMCIRuntime)\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.fromMetaspace(jdk.internal.vm.ci@11.0.6/HotSpotResolvedObjectTypeImpl.java:98)\r\n\tat jdk.vm.ci.hotspot.CompilerToVM.resolveTypeInPool(jdk.internal.vm.ci@11.0.6/Native Method)\r\n\tat jdk.vm.ci.hotspot.HotSpotConstantPool.loadReferencedType(jdk.internal.vm.ci@11.0.6/HotSpotConstantPool.java:736)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor1.invoke(java.base@11.0.6/Unknown Source)\r\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(java.base@11.0.6/DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(java.base@11.0.6/Method.java:566)\r\n\tat com.oracle.graal.pointsto.infrastructure.WrappedConstantPool.loadReferencedType(WrappedConstantPool.java:88)\r\n\tat com.oracle.svm.hosted.phases.NoClassInitializationPlugin.loadReferencedType(NoClassInitializationPlugin.java:55)\r\n\tat org.graalvm.compiler.java.BytecodeParser.maybeEagerlyResolve(jdk.internal.vm.compiler/BytecodeParser.java:4215)\r\n\t- locked <0x000000009d868ec8> (a java.lang.Class for org.graalvm.compiler.java.BytecodeParser)\r\n\tat com.oracle.svm.hosted.phases.SharedGraphBuilderPhase$SharedBytecodeParser.maybeEagerlyResolve(SharedGraphBuilderPhase.java:107)\r\n\tat org.graalvm.compiler.java.BytecodeParser.lookupMethod(jdk.internal.vm.compiler/BytecodeParser.java:4167)\r\n\tat org.graalvm.compiler.java.BytecodeParser.genInvokeStatic(jdk.internal.vm.compiler/BytecodeParser.java:1548)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBytecode(jdk.internal.vm.compiler/BytecodeParser.java:5170)\r\n\tat org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(jdk.internal.vm.compiler/BytecodeParser.java:3286)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBlock(jdk.internal.vm.compiler/BytecodeParser.java:3093)\r\n\tat org.graalvm.compiler.java.BytecodeParser.build(jdk.internal.vm.compiler/BytecodeParser.java:977)\r\n\tat org.graalvm.compiler.java.BytecodeParser.buildRootMethod(jdk.internal.vm.compiler/BytecodeParser.java:871)\r\n\tat org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(jdk.internal.vm.compiler/GraphBuilderPhase.java:84)\r\n\tat org.graalvm.compiler.phases.Phase.run(jdk.internal.vm.compiler/Phase.java:49)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(jdk.internal.vm.compiler/BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(jdk.internal.vm.compiler/BasePhase.java:139)\r\n\tat com.oracle.svm.hosted.substitute.UnsafeAutomaticSubstitutionProcessor.getStaticInitializerGraph(UnsafeAutomaticSubstitutionProcessor.java:933)\r\n\tat com.oracle.svm.hosted.substitute.UnsafeAutomaticSubstitutionProcessor.computeSubstitutions(UnsafeAutomaticSubstitutionProcessor.java:349)\r\n\tat com.oracle.svm.hosted.SVMHost.registerType(SVMHost.java:207)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.createType(AnalysisUniverse.java:264)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookupAllowUnresolved(AnalysisUniverse.java:205)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookup(AnalysisUniverse.java:182)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookup(AnalysisUniverse.java:75)\r\n\tat com.oracle.graal.pointsto.infrastructure.UniverseMetaAccess$1.apply(UniverseMetaAccess.java:52)\r\n\tat com.oracle.graal.pointsto.infrastructure.UniverseMetaAccess$1.apply(UniverseMetaAccess.java:49)\r\n\tat java.util.concurrent.ConcurrentHashMap.computeIfAbsent(java.base@11.0.6/ConcurrentHashMap.java:1705)\r\n\t- locked <0x00000000ff827740> (a java.util.concurrent.ConcurrentHashMap$ReservationNode)\r\n\tat com.oracle.graal.pointsto.infrastructure.UniverseMetaAccess.lookupJavaType(UniverseMetaAccess.java:84)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisMetaAccess.lookupJavaType(AnalysisMetaAccess.java:47)\r\n\tat com.oracle.graal.pointsto.AnalysisObjectScanner.forScannedConstant(AnalysisObjectScanner.java:135)\r\n\tat com.oracle.graal.pointsto.ObjectScanner.scanConstant(ObjectScanner.java:289)\r\n\tat com.oracle.graal.pointsto.ObjectScanner.scanField(ObjectScanner.java:197)\r\n\tat com.oracle.graal.pointsto.ObjectScanner.doScan(ObjectScanner.java:344)\r\n\tat com.oracle.graal.pointsto.ObjectScanner.access$400(ObjectScanner.java:62)\r\n\tat com.oracle.graal.pointsto.ObjectScanner$3$1.run(ObjectScanner.java:414)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:171)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor$$Lambda$328/0x000000084191c840.run(Unknown Source)\r\n\tat java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(java.base@11.0.6/ForkJoinTask.java:1426)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(java.base@11.0.6/ForkJoinTask.java:290)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(java.base@11.0.6/ForkJoinPool.java:1020)\r\n\tat java.util.concurrent.ForkJoinPool.scan(java.base@11.0.6/ForkJoinPool.java:1656)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(java.base@11.0.6/ForkJoinPool.java:1594)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(java.base@11.0.6/ForkJoinWorkerThread.java:177)\r\n\r\n\"Attach Listener\" #27 daemon prio=9 os_prio=0 cpu=20.12ms elapsed=482.37s tid=0x00007f0288001000 nid=0xa0 waiting on condition  [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\r\n\"VM Thread\" os_prio=0 cpu=10435.07ms elapsed=1152.72s tid=0x00007f02d0457000 nid=0x1f runnable  \r\n\r\n\"GC Thread#0\" os_prio=0 cpu=532446.30ms elapsed=1153.13s tid=0x00007f02d0046000 nid=0x1a runnable  \r\n\r\n\"GC Thread#1\" os_prio=0 cpu=524933.20ms elapsed=1145.52s tid=0x00007f029c021000 nid=0x2e runnable  \r\n\r\n\"GC Thread#2\" os_prio=0 cpu=532231.01ms elapsed=1145.52s tid=0x00007f029c022800 nid=0x2f runnable  \r\n\r\n\"GC Thread#3\" os_prio=0 cpu=533236.36ms elapsed=1145.52s tid=0x00007f029c024000 nid=0x30 runnable  \r\n\r\n\"G1 Main Marker\" os_prio=0 cpu=139.23ms elapsed=1153.13s tid=0x00007f02d006e800 nid=0x1b runnable  \r\n\r\n\"G1 Conc#0\" os_prio=0 cpu=53311.42ms elapsed=1153.13s tid=0x00007f02d0070800 nid=0x1c runnable  \r\n\r\n\"G1 Refine#0\" os_prio=0 cpu=10547.06ms elapsed=1152.97s tid=0x00007f02d03be800 nid=0x1d runnable  \r\n\r\n\"G1 Refine#1\" os_prio=0 cpu=2690.58ms elapsed=1145.45s tid=0x00007f02a0001000 nid=0x31 runnable  \r\n\r\n\"G1 Refine#2\" os_prio=0 cpu=1797.48ms elapsed=1145.44s tid=0x00007f0230001000 nid=0x32 runnable  \r\n\r\n\"G1 Refine#3\" os_prio=0 cpu=1438.99ms elapsed=1135.93s tid=0x00007f0234001000 nid=0x36 runnable  \r\n\r\n\"G1 Young RemSet Sampling\" os_prio=0 cpu=1165.49ms elapsed=1152.97s tid=0x00007f02d03c0800 nid=0x1e runnable  \r\n\"VM Periodic Task Thread\" os_prio=0 cpu=2906.69ms elapsed=1151.70s tid=0x00007f02d0522800 nid=0x28 waiting on condition  \r\n\r\nJNI global refs: 41, weak refs: 0\r\n\r\n```\r\n(there are many other such thread dumps having similar lock contention on that class).\r\n\r\nGraal VM version that's in use here is 19.3.1 CE Java 11 variant. \r\nIs there anyway this part of the code can be improved? I haven't had a chance to try this out against Java 8 variant of Graal VM 19.3.1, so I don't know if this shows up only in Java 11 or is even applicable for Java 8.\r\n\r\n[1] https://github.com/oracle/graal/blob/master/compiler/src/org.graalvm.compiler.java/src/org/graalvm/compiler/java/BytecodeParser.java#L4339\r\n\r\nP.S: The link noted in the code comment above the `synchronized` block in `BytecodeParser` gives me a 404 so I couldn't fully understand the history behind that code.", "url": "https://github.com/oracle/graal/issues/2235", "user": "jaikiran", "labels": ["bug", "native-image"], "created": "2020-03-08 14:04:59", "closed": "2020-03-28 11:56:28", "commits": {}, "ttf": 19.00027777777778, "commitsDetails": []}, {"title": "TimeZone ID parsing loses offset in native image", "body": "# Overview\r\n\r\nWhen parsing a time zone ID with `java.util.TimeZone.getTimeZone(String)`, if the supplied ID contains an offset (e.g., `\"GMT+2\"`), the ID in the parsed `TimeZone` loses the offset.\r\n\r\nFor example, given the following test case...\r\n\r\n```java\r\nimport java.util.TimeZone;\r\n\r\npublic class TimeZoneIdParsing {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tString input = \"GMT+2\";\r\n\t\tString expected = \"GMT+02:00\";\r\n\t\tTimeZone timeZone = TimeZone.getTimeZone(input);\r\n\t\tString parsed = timeZone.getID();\r\n\t\tif (!parsed.equals(expected)) {\r\n\t\t\tSystem.err.format(\"FAILURE: expected '%s' to be parsed into '%s' but got '%s'.%n\", input, expected, parsed);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tSystem.out.format(\"SUCCESS: '%s' was correctly parsed into '%s'.%n\", input, parsed);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n```\r\n\r\nThe output when using a standard JDK results in the following.\r\n\r\n```\r\nSUCCESS: 'GMT+2' was correctly parsed into 'GMT+02:00'.\r\n```\r\n\r\nWhereas, if you compile the test case into a native image, the output is the following.\r\n\r\n```\r\nFAILURE: expected 'GMT+2' to be parsed into 'GMT+02:00' but got 'GMT'.\r\n```\r\n\r\nSpecifying `-H:+IncludeAllTimeZones` results in the same failure.\r\n\r\nSee https://github.com/sbrannen/graalvm-playground/tree/master/timezone for the full example.\r\n\r\n# Environment\r\n\r\n- GraalVM version: CE 20.0\r\n- JDK major version: 8\r\n- OS: macOS 10.14.6\r\n- Architecture: i386 / x86_64\r\n", "url": "https://github.com/oracle/graal/issues/2234", "user": "sbrannen", "labels": ["bug", "native-image", "spring"], "created": "2020-03-07 13:15:12", "closed": "2020-04-07 19:29:45", "commits": {}, "ttf": 31.00027777777778, "commitsDetails": []}, {"title": "Graal Updater (gu)  \"Error: The GraalVM directory ... is invalid\"", "body": "**Describe GraalVM and your environment :**\r\n - GraalVM version or commit id if built from source: **[20.0]**\r\n - CE or EE: **[CE]**\r\n - JDK version: **[JDK8]**\r\n - OS and OS Version: **macOS Mojave**\r\n - Architecture: **[amd64]**\r\n\r\nInstalled graalvm. Java and all the commands works fine.\r\n\r\nHowever when I run any gu command other than help I get\r\n```\r\n$ gu info\r\nError: The GraalVM directory [ommited directory] is invalid\r\n```\r\nI tried turning on logging and debug but it fails to quickly for any logging.\r\n\r\n\r\n", "url": "https://github.com/oracle/graal/issues/2231", "user": "agentgt", "labels": ["bug"], "created": "2020-03-06 20:26:11", "closed": "2020-03-09 13:35:20", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Remove unnecessary class initialization in methods", "body": "**Describe GraalVM and your environment:**\r\n - GraalVM version or commit id if built from source: **20.0.0**\r\n - CE or EE: **CE and EE**\r\n - Build time or run time failure: **build time**\r\n - JDK version: **All**\r\n - OS and OS Version: **All**\r\n - Architecture: **All**\r\n**Describe the issue**\r\nCurrently, every field access for classes delayed to runtime will be guarded by a conditional for class initialization and an invoke behind the guard.\r\n\r\nWe need to implement the check as efficiently as possible and all checks for a class dominated by the same check should be removed from the graph.\r\n\r\nIn addition, we need to peel hot loops with initialization inside to allow removal of checks inside the loop.\r\n\r\nIdeally, this analysis would be performed globally, during analysis, and we would be able to completely remove some checks.", "url": "https://github.com/oracle/graal/issues/2211", "user": "vjovanov", "labels": ["bug", "native-image"], "created": "2020-03-03 10:11:03", "closed": "2020-07-03 12:11:26", "commits": {}, "ttf": 122.00027777777778, "commitsDetails": []}, {"title": "Performance issues with GraalVM EE", "body": "**Describe GraalVM and your environment :**\r\n - GraalVM version or commit id if built from source: 20.0\r\n - CE or EE: EE\r\n - JDK version: JDK8\r\n - OS and OS Version: macOS & Linux\r\n - Architecture: amd64\r\n - The output of `java -Xinternalversion`:\r\n ```\r\nJava HotSpot(TM) 64-Bit Server VM GraalVM EE 20.0.0 (25.241-b07-jvmci-20.0-b02) for linux-amd64 JRE (8u241), built on Jan 20 2020 20:45:37 by \"buildslave\" with gcc 7.3.0\r\n```\r\n\r\n**Have you verified this issue still happens when using the latest snapshot?**\r\nNo.\r\n\r\n**Describe the issue**\r\nUnexpected, more than 3x drop of throughput when running some benchmarks on GraalVM EE.\r\n\r\n**Code snippet or code repository that reproduces the issue**\r\n```\r\nhttps://github.com/plokhotnyuk/jsoniter-scala\r\n```\r\n\r\n**Steps to reproduce the issue**\r\n1. [Optional] Download and install the `sbt` tool using the following link:\r\nhttps://www.scala-sbt.org/download.html\r\n2. Clone the repo and change the working directory:\r\n```\r\ngit clone --depth 1 https://github.com/plokhotnyuk/jsoniter-scala\r\ncd jsoniter-scala\r\n```\r\n3. Run the parsing benchmark on GraalVM EE:\r\n```\r\nsbt -java-home /usr/lib/jvm/graalvm-ee-java8 'jsoniter-scala-benchmark/jmh:run -jvmArgsAppend \"-Dgraal.UseBranchesWithin32ByteBoundary=true\" -p size=128 -wi 10 -i 10 ArrayOfEnumADTsReading.jsoniterScala'\r\n```\r\n4. Run the serialization benchmark on GraalVM EE\r\n```\r\nsbt -java-home /usr/lib/jvm/graalvm-ee-java8 'jsoniter-scala-benchmark/jmh:run -jvmArgsAppend \"-Dgraal.UseBranchesWithin32ByteBoundary=true\" -p size=128 -wi 10 -i 10 StringOfEscapedCharsWriting.jsoniterJava\r\n```\r\n5. Run benchmarks from pp. 3 and 4 on GraalVM CE by altering value for the `-java-home` option.\r\n\r\n**Expected behavior**\r\nExpected to have values of throughput scores for EE to be greater than for CE.\r\n\r\n**Additional context**\r\nBelow are results of both benchmarks for different versions of GraalVM with the perf profiler using the `-prof perfnorm` option.\r\n\r\n## ArrayOfEnumADTsReading.jsoniterScala with GraalVM EE\r\n```\r\n[info] Benchmark                                                   (size)   Mode  Cnt       Score       Error  Units\r\n[info] ArrayOfEnumADTsReading.jsoniterScala                           128  thrpt   10  122827.665 \u00b1 17880.191  ops/s\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:CPI                       128  thrpt            0.404               #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:L1-dcache-load-misses     128  thrpt          965.144               #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:L1-dcache-loads           128  thrpt        45268.994               #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:L1-dcache-stores          128  thrpt        17143.531               #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:L1-icache-load-misses     128  thrpt          597.267               #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:LLC-load-misses           128  thrpt           10.637               #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:LLC-loads                 128  thrpt          187.110               #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:LLC-store-misses          128  thrpt           10.974               #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:LLC-stores                128  thrpt           30.594               #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:branch-misses             128  thrpt          233.420               #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:branches                  128  thrpt        34185.243               #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:cycles                    128  thrpt        62726.759               #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:dTLB-load-misses          128  thrpt            6.092               #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:dTLB-loads                128  thrpt        45250.767               #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:dTLB-store-misses         128  thrpt            0.734               #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:dTLB-stores               128  thrpt        17196.921               #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:iTLB-load-misses          128  thrpt            8.717               #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:iTLB-loads                128  thrpt           26.634               #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:instructions              128  thrpt       155360.063               #/op\r\n```\r\n\r\n## ArrayOfEnumADTsReading.jsoniterScala with GraalVM CE\r\n```\r\n[info] Do not assume the numbers tell you what you want them to tell.\r\n[info] Benchmark                                                   (size)   Mode  Cnt       Score     Error  Units\r\n[info] ArrayOfEnumADTsReading.jsoniterScala                           128  thrpt   10  391932.863 \u00b1 696.596  ops/s\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:CPI                       128  thrpt            0.223             #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:L1-dcache-load-misses     128  thrpt           19.162             #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:L1-dcache-loads           128  thrpt         6327.540             #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:L1-dcache-stores          128  thrpt         3016.906             #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:L1-icache-load-misses     128  thrpt            0.560             #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:LLC-load-misses           128  thrpt            0.276             #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:LLC-loads                 128  thrpt            0.629             #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:LLC-store-misses          128  thrpt            1.891             #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:LLC-stores                128  thrpt            4.031             #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:branch-misses             128  thrpt            8.236             #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:branches                  128  thrpt        10309.307             #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:cycles                    128  thrpt         8712.587             #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:dTLB-load-misses          128  thrpt            0.271             #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:dTLB-loads                128  thrpt         6345.154             #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:dTLB-store-misses         128  thrpt            0.005             #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:dTLB-stores               128  thrpt         3036.552             #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:iTLB-load-misses          128  thrpt            0.021             #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:iTLB-loads                128  thrpt            0.040             #/op\r\n[info] ArrayOfEnumADTsReading.jsoniterScala:instructions              128  thrpt        39150.551             #/op\r\n```\r\n\r\n## StringOfEscapedCharsWriting.jsoniterJava with GraalVM EE\r\n```\r\n[info] Benchmark                                                       (size)   Mode  Cnt       Score      Error  Units\r\n[info] StringOfEscapedCharsWriting.jsoniterJava                           128  thrpt   10  194519.800 \u00b1 2292.614  ops/s\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:CPI                       128  thrpt            0.375              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:L1-dcache-load-misses     128  thrpt          367.522              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:L1-dcache-loads           128  thrpt        11625.797              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:L1-dcache-stores          128  thrpt         9626.260              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:L1-icache-load-misses     128  thrpt          488.652              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:LLC-load-misses           128  thrpt            0.382              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:LLC-loads                 128  thrpt            4.465              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:LLC-store-misses          128  thrpt           10.801              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:LLC-stores                128  thrpt           19.697              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:branch-misses             128  thrpt            4.329              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:branches                  128  thrpt         7911.434              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:cycles                    128  thrpt        17585.816              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:dTLB-load-misses          128  thrpt            0.384              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:dTLB-loads                128  thrpt        11615.281              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:dTLB-store-misses         128  thrpt            0.053              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:dTLB-stores               128  thrpt         9634.336              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:iTLB-load-misses          128  thrpt            0.063              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:iTLB-loads                128  thrpt           34.478              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:instructions              128  thrpt        46901.538              #/op\r\n```\r\n\r\n## StringOfEscapedCharsWriting.jsoniterJava with GraalVM CE\r\n```\r\n[info] Benchmark                                                       (size)   Mode  Cnt        Score      Error  Units\r\n[info] StringOfEscapedCharsWriting.jsoniterJava                           128  thrpt   10  1662262.711 \u00b1 6159.823  ops/s\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:CPI                       128  thrpt             0.227              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:L1-dcache-load-misses     128  thrpt            12.818              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:L1-dcache-loads           128  thrpt          1269.910              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:L1-dcache-stores          128  thrpt          1694.485              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:L1-icache-load-misses     128  thrpt             0.110              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:LLC-load-misses           128  thrpt             0.062              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:LLC-loads                 128  thrpt             0.131              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:LLC-store-misses          128  thrpt             3.746              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:LLC-stores                128  thrpt             7.867              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:branch-misses             128  thrpt             2.048              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:branches                  128  thrpt          1472.143              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:cycles                    128  thrpt          2051.614              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:dTLB-load-misses          128  thrpt             0.208              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:dTLB-loads                128  thrpt          1266.724              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:dTLB-store-misses         128  thrpt             0.002              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:dTLB-stores               128  thrpt          1691.303              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:iTLB-load-misses          128  thrpt             0.003              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:iTLB-loads                128  thrpt             0.005              #/op\r\n[info] StringOfEscapedCharsWriting.jsoniterJava:instructions              128  thrpt          9055.684              #/op\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2203", "user": "plokhotnyuk", "labels": ["bug", "compiler"], "created": "2020-03-02 10:51:17", "closed": "2020-03-04 11:18:16", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "native-image NPE in BytecodeStream.setBCI()", "body": "**Describe GraalVM and your environment :**\r\n - GraalVM version or commit id if built from source: 20.0\r\n - CE or EE: CE\r\n - Build Time or run time failure: build-time\r\n - JDK version: 8\r\n - Native compiler information:<details><summary>Run the following to capture compiler version</summary>\r\n   - In windows: `cl.exe`\r\n   - In macOS : `cc -v`\r\n   - In Linux: `gcc --version`\r\n</details>\r\n\r\n```\r\nApple LLVM version 10.0.1 (clang-1001.0.46.4)\r\nTarget: x86_64-apple-darwin18.6.0\r\nThread model: posix\r\nInstalledDir: /Library/Developer/CommandLineTools/usr/bin\r\n```\r\n - Native linker information:<details><summary>Run the following to capture linker version</summary>\r\n   - In windows: `cl.exe`\r\n   - In macOS : `cc -Wl,-v`\r\n   - In Linux: `gcc -Wl,--version`\r\n</details>\r\n\r\n```\r\n@(#)PROGRAM:ld  PROJECT:ld64-450.3\r\nBUILD 18:16:53 Apr  5 2019\r\nconfigured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em\r\nLibrary search paths:\r\n\t/usr/local/lib\r\n\t/Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/lib\r\nFramework search paths:\r\n\t/Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/System/Library/Frameworks/\r\nUndefined symbols for architecture x86_64:\r\n  \"_main\", referenced from:\r\n     implicit entry/start for main executable\r\nld: symbol(s) not found for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\n - OS and OS Version: **[e.g. macOS Catalina]**\r\n - Architecture: **[e.g.: AMD64]**\r\n - The output of `java -Xinternalversion`: \r\n```\r\nOpenJDK 64-Bit Server VM GraalVM CE 20.0.0 (25.242-b06-jvmci-20.0-b02) for bsd-amd64 JRE (8u242), built on Jan 20 2020 12:54:03 by \"graal\" with gcc 4.2.1 Compatible Apple LLVM 8.1.0 (clang-802.0.42)\r\n```\r\n\r\n**Have you verified this issue still happens when using the latest snapshot?**\r\nYou can find snapshot builds here: https://github.com/graalvm/graalvm-ce-dev-builds/releases\r\n\r\nI tried with master today, behaves the same.\r\n\r\n**Describe the issue**\r\nBuilding a new spring-batch sample, used the agent to collect config. The config may be insufficient but the crash doesn't let me know that.\r\n\r\n**Describe the full native-image command**\r\n<details><summary>Capture full native-image command by running with the `--verbose` flag e.g.:</summary>\r\n\r\n```\r\n native-image --verbose [... other args]\r\n```\r\n</details>\r\n\r\n```\r\n/Users/aclement/installs/graalvm-ce-java8-20.0.0/Contents/Home/jre/bin/native-image -cp /Users/aclement/.m2/repository/org/springframework/experimental/spring-graal-native-feature/0.6.0.BUILD-SNAPSHOT/spring-graal-native-feature-0.6.0.BUILD-SNAPSHOT.jar:/Users/aclement/.m2/repository/org/springframework/boot/spring-boot-starter-batch/2.3.0.M2/spring-boot-starter-batch-2.3.0.M2.jar:/Users/aclement/.m2/repository/org/springframework/boot/spring-boot-starter/2.3.0.M2/spring-boot-starter-2.3.0.M2.jar:/Users/aclement/.m2/repository/org/springframework/boot/spring-boot/2.3.0.M2/spring-boot-2.3.0.M2.jar:/Users/aclement/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.3.0.M2/spring-boot-autoconfigure-2.3.0.M2.jar:/Users/aclement/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.3.0.M2/spring-boot-starter-logging-2.3.0.M2.jar:/Users/aclement/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/Users/aclement/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/Users/aclement/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.13.0/log4j-to-slf4j-2.13.0.jar:/Users/aclement/.m2/repository/org/apache/logging/log4j/log4j-api/2.13.0/log4j-api-2.13.0.jar:/Users/aclement/.m2/repository/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30.jar:/Users/aclement/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/aclement/.m2/repository/org/yaml/snakeyaml/1.25/snakeyaml-1.25.jar:/Users/aclement/.m2/repository/org/springframework/batch/spring-batch-core/4.2.1.RELEASE/spring-batch-core-4.2.1.RELEASE.jar:/Users/aclement/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.1/jackson-databind-2.10.1.jar:/Users/aclement/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.1/jackson-annotations-2.10.1.jar:/Users/aclement/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.1/jackson-core-2.10.1.jar:/Users/aclement/.m2/repository/io/micrometer/micrometer-core/1.3.5/micrometer-core-1.3.5.jar:/Users/aclement/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.11/HdrHistogram-2.1.11.jar:/Users/aclement/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/aclement/.m2/repository/javax/batch/javax.batch-api/1.0/javax.batch-api-1.0.jar:/Users/aclement/.m2/repository/org/codehaus/jettison/jettison/1.2/jettison-1.2.jar:/Users/aclement/.m2/repository/org/springframework/batch/spring-batch-infrastructure/4.2.1.RELEASE/spring-batch-infrastructure-4.2.1.RELEASE.jar:/Users/aclement/.m2/repository/org/springframework/retry/spring-retry/1.2.5.RELEASE/spring-retry-1.2.5.RELEASE.jar:/Users/aclement/.m2/repository/org/springframework/spring-aop/5.2.3.RELEASE/spring-aop-5.2.3.RELEASE.jar:/Users/aclement/.m2/repository/org/springframework/spring-beans/5.2.3.RELEASE/spring-beans-5.2.3.RELEASE.jar:/Users/aclement/.m2/repository/org/springframework/spring-context/5.2.3.RELEASE/spring-context-5.2.3.RELEASE.jar:/Users/aclement/.m2/repository/org/springframework/spring-expression/5.2.3.RELEASE/spring-expression-5.2.3.RELEASE.jar:/Users/aclement/.m2/repository/org/springframework/spring-tx/5.2.3.RELEASE/spring-tx-5.2.3.RELEASE.jar:/Users/aclement/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.3.0.M2/spring-boot-starter-jdbc-2.3.0.M2.jar:/Users/aclement/.m2/repository/com/zaxxer/HikariCP/3.4.2/HikariCP-3.4.2.jar:/Users/aclement/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/Users/aclement/.m2/repository/org/springframework/spring-jdbc/5.2.3.RELEASE/spring-jdbc-5.2.3.RELEASE.jar:/Users/aclement/.m2/repository/org/springframework/spring-context-indexer/5.2.3.RELEASE/spring-context-indexer-5.2.3.RELEASE.jar:/Users/aclement/.m2/repository/com/h2database/h2/1.4.200/h2-1.4.200.jar:/Users/aclement/.m2/repository/mysql/mysql-connector-java/8.0.19/mysql-connector-java-8.0.19.jar:/Users/aclement/.m2/repository/org/springframework/spring-core/5.2.3.RELEASE/spring-core-5.2.3.RELEASE.jar:/Users/aclement/.m2/repository/org/springframework/spring-jcl/5.2.3.RELEASE/spring-jcl-5.2.3.RELEASE.jar:/Users/aclement/gits5/spring-graal-native/spring-graal-native-samples/spring-batch-native/target/spring-batch-native-0.0.1-BUILD-SNAPSHOT.jar -Dmode=light --initialize-at-build-time --allow-incomplete-classpath --report-unsupported-elements-at-runtime --enable-all-security-services -H:+ReportExceptionStackTraces -H:Class=org.springframework.samples.springbatchnative.SpringBatchNativeApplication\r\n```\r\n\r\n**Code snippet or code repository that reproduces the issue**\r\n```\r\ngit clone git@github.com:spring-projects-experimental/spring-graal-native.git\r\ngit checkout extensible-configuration\r\ncd spring-graal-native\r\n./build-feature.sh\r\ncd *samples/spring-batch-native\r\nmvn package\r\n./ni.sh\r\n```\r\n\r\n```\r\nFatal error: com.oracle.graal.pointsto.util.AnalysisError$ParsingError: Error encountered while parsing org.springframework.transaction.reactive.TransactionalOperator.create(org.springframework.transaction.ReactiveTransactionManager)\r\nParsing context:\r\n\tparsing org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration.transactionalOperator(TransactionAutoConfiguration.java:69)\r\n\tparsing com.oracle.svm.reflect.TransactionAutoConfiguration_transactionalOperator_a964289f6b3e47bee01b407a7368b35f9592c637_38771.invoke(Unknown Source)\r\n\tparsing java.lang.reflect.Method.invoke(Method.java:498)\r\n\tparsing ch.qos.logback.classic.spi.ThrowableProxy.<init>(ThrowableProxy.java:66)\r\n\tparsing ch.qos.logback.classic.spi.LoggingEvent.<init>(LoggingEvent.java:119)\r\n\tparsing ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:419)\r\n\tparsing ch.qos.logback.classic.Logger.filterAndLog_0_Or3Plus(Logger.java:383)\r\n\tparsing ch.qos.logback.classic.Logger.log(Logger.java:765)\r\n\tparsing org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog.error(LogAdapter.java:428)\r\n\tparsing org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:837)\r\n\tparsing org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:812)\r\n\tparsing org.springframework.boot.SpringApplication.run(SpringApplication.java:325)\r\n\tparsing org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)\r\n\tparsing org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)\r\n\tparsing org.springframework.samples.springbatchnative.SpringBatchNativeApplication.main(SpringBatchNativeApplication.java:10)\r\n\tparsing com.oracle.svm.core.JavaMainWrapper.runCore(JavaMainWrapper.java:151)\r\n\tparsing com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:186)\r\n\tparsing com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)\r\n\r\n\tat com.oracle.graal.pointsto.util.AnalysisError.parsingError(AnalysisError.java:138)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:327)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:300)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:107)\r\n\tat com.oracle.graal.pointsto.flow.StaticInvokeTypeFlow.update(InvokeTypeFlow.java:346)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:511)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:171)\r\n\tat java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: java.lang.NullPointerException\r\n\tat org.graalvm.compiler.bytecode.BytecodeStream.setBCI(BytecodeStream.java:209)\r\n\tat org.graalvm.compiler.bytecode.BytecodeStream.<init>(BytecodeStream.java:47)\r\n\tat org.graalvm.compiler.java.BytecodeParser.<init>(BytecodeParser.java:914)\r\n\tat com.oracle.svm.hosted.phases.SharedGraphBuilderPhase$SharedBytecodeParser.<init>(SharedGraphBuilderPhase.java:84)\r\n\tat com.oracle.svm.hosted.phases.SharedGraphBuilderPhase$SharedBytecodeParser.<init>(SharedGraphBuilderPhase.java:79)\r\n\tat com.oracle.svm.hosted.phases.AnalysisGraphBuilderPhase$AnalysisBytecodeParser.<init>(AnalysisGraphBuilderPhase.java:62)\r\n\tat com.oracle.svm.hosted.phases.AnalysisGraphBuilderPhase.createBytecodeParser(AnalysisGraphBuilderPhase.java:56)\r\n\tat org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n\tat org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:221)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:340)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:310)\r\n\t... 10 more\r\nError: Image build request failed with exit status 1\r\n```\r\n</details>\r\n", "url": "https://github.com/oracle/graal/issues/2200", "user": "aclement", "labels": ["bug", "native-image", "spring"], "created": "2020-02-28 22:22:05", "closed": "2020-04-03 20:46:29", "commits": {}, "ttf": 34.000277777777775, "commitsDetails": []}, {"title": "native-image crashing ArrayStoreException whilst compiling spring vanilla-tx sample", "body": "**Describe GraalVM and your environment :**\r\n - GraalVM version or commit id if built from source: master b8d40c4c0a07\r\n - CE or EE: CE\r\n - Build Time or run time failure: build-time\r\n - JDK version: 8\r\n - Native compiler information:<details><summary>Run the following to capture compiler version</summary>\r\n   - In windows: `cl.exe`\r\n   - In macOS : `cc -v`\r\n   - In Linux: `gcc --version`\r\n</details>\r\n\r\n```\r\ncc -v\r\nApple LLVM version 10.0.1 (clang-1001.0.46.4)\r\nTarget: x86_64-apple-darwin18.6.0\r\nThread model: posix\r\nInstalledDir: /Library/Developer/CommandLineTools/usr/bin\r\n```\r\n - Native linker information:<details><summary>Run the following to capture linker version</summary>\r\n   - In windows: `cl.exe`\r\n   - In macOS : `cc -Wl,-v`\r\n   - In Linux: `gcc -Wl,--version`\r\n</details>\r\n\r\n```\r\ncc -Wl,-v\r\n@(#)PROGRAM:ld  PROJECT:ld64-450.3\r\nBUILD 18:16:53 Apr  5 2019\r\nconfigured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em\r\nLibrary search paths:\r\n\t/usr/local/lib\r\n\t/Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/lib\r\nFramework search paths:\r\n\t/Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/System/Library/Frameworks/\r\nUndefined symbols for architecture x86_64:\r\n  \"_main\", referenced from:\r\n     implicit entry/start for main executable\r\nld: symbol(s) not found for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\n - OS and OS Version: **[e.g. macOS Catalina]**\r\n - Architecture: **[e.g.: AMD64]**\r\n - The output of `java -Xinternalversion`: \r\n```\r\nOpenJDK 64-Bit Server VM GraalVM 20.1.0-dev (25.242-b06-jvmci-20.0-b02) for bsd-amd64 JRE (8u242), built on Jan 20 2020 12:54:03 by \"graal\" with gcc 4.2.1 Compatible Apple LLVM 8.1.0 (clang-802.0.42)\r\n```\r\n\r\n**Have you verified this issue still happens when using the latest snapshot?**\r\nYou can find snapshot builds here: https://github.com/graalvm/graalvm-ce-dev-builds/releases\r\n\r\n**Describe the issue**\r\nBuilding my app crashes:\r\n```\r\n[vanilla-tx:14119]     analysis:  43,741.30 ms,  7.18 GB\r\nFatal error:java.lang.ArrayStoreException\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat java.util.concurrent.ForkJoinTask.getThrowableException(ForkJoinTask.java:598)\r\n\tat java.util.concurrent.ForkJoinTask.get(ForkJoinTask.java:1005)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:456)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:358)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:517)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:116)\r\nCaused by: java.lang.ArrayStoreException: sun.reflect.annotation.TypeNotPresentExceptionProxy\r\n\tat sun.reflect.annotation.AnnotationParser.parseClassArray(AnnotationParser.java:724)\r\n\tat sun.reflect.annotation.AnnotationParser.parseArray(AnnotationParser.java:531)\r\n\tat sun.reflect.annotation.AnnotationParser.parseMemberValue(AnnotationParser.java:355)\r\n\tat sun.reflect.annotation.AnnotationParser.parseAnnotation2(AnnotationParser.java:286)\r\n\tat sun.reflect.annotation.AnnotationParser.parseAnnotations2(AnnotationParser.java:120)\r\n\tat sun.reflect.annotation.AnnotationParser.parseAnnotations(AnnotationParser.java:72)\r\n\tat java.lang.Class.createAnnotationData(Class.java:3521)\r\n\tat java.lang.Class.annotationData(Class.java:3510)\r\n\tat java.lang.Class.getAnnotations(Class.java:3446)\r\n\tat com.oracle.svm.hosted.config.JAXBClassAndResourcesLoaderFeature.registerAnnotatedXMLRootClasses(JAXBClassAndResourcesLoaderFeature.java:90)\r\n\tat com.oracle.svm.hosted.config.JAXBClassAndResourcesLoaderFeature.registerJavaxXmlConfigs(JAXBClassAndResourcesLoaderFeature.java:64)\r\n\tat com.oracle.svm.hosted.ReachabilityHandlerFeature.duringAnalysis(ReachabilityHandlerFeature.java:114)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$runPointsToAnalysis$8(NativeImageGenerator.java:716)\r\n\tat com.oracle.svm.hosted.FeatureHandler.forEachFeature(FeatureHandler.java:63)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:716)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:531)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:446)\r\n\tat java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1386)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nError: Image build request failed with exit status 1\r\ncom.oracle.svm.driver.NativeImage$NativeImageError: Image build request failed with exit status 1\r\n\tat com.oracle.svm.driver.NativeImage.showError(NativeImage.java:1527)\r\n\tat com.oracle.svm.driver.NativeImage.build(NativeImage.java:1289)\r\n\tat com.oracle.svm.driver.NativeImage.performBuild(NativeImage.java:1250)\r\n\tat com.oracle.svm.driver.NativeImage.main(NativeImage.java:1209)\r\n```\r\n\r\n**Describe the full native-image command**\r\n<details><summary>Capture full native-image command by running with the `--verbose` flag e.g.:</summary>\r\n\r\n```\r\nnative-image \\\r\n  --verbose \\\r\n  --no-server \\\r\n-Dverbose=true \\\r\n  --no-fallback \\\r\n  -H:+TraceClassInitialization \\\r\n  -H:Name=$ARTIFACT \\\r\n  -H:+ReportExceptionStackTraces \\\r\n  --allow-incomplete-classpath \\\r\n  --report-unsupported-elements-at-runtime \\\r\n  -DremoveUnusedAutoconfig=true \\\r\n  -cp $CP $MAINCLASS\r\n```\r\n</details>\r\n\r\n```\r\nDue to feature verbose output this is massive, I'd need to do a bit of work to trim it down. It happens reliably though.\r\n```\r\n\r\n**Code snippet or code repository that reproduces the issue**\r\n```\r\ngit clone git@github.com:spring-projects-experimental/spring-graal-native.git\r\ngit checkout extensible-configuration\r\ncd spring-graal-native\r\n./build-feature.sh\r\ncd *samples/vanilla-tx\r\n./build.sh\r\n```\r\n\r\nThis works fine on 20.0 release.\r\n", "url": "https://github.com/oracle/graal/issues/2199", "user": "aclement", "labels": ["bug", "native-image", "spring"], "created": "2020-02-28 18:37:47", "closed": "2020-03-23 21:31:51", "commits": {}, "ttf": 24.00027777777778, "commitsDetails": []}, {"title": "agent missing AuthConfigFactoryImpl reference, failing to include it in reflect-config.json", "body": "**Describe GraalVM and your environment :**\r\n - GraalVM version or commit id if built from source: 20.0 or master today (28-Feb)\r\n - CE or EE: CE\r\n - Build Time or run time failure: runtime (due to agent missing something it should have passed to native-image)\r\n - JDK version: 8\r\n\r\nI added a new spring sample that includes security. I used the agent to collect configuration. It compiles ok but then fails at runtime with:\r\n```\r\n\r\njava.lang.SecurityException: AuthConfigFactory error: java.lang.ClassNotFoundException: org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl\r\n\tat javax.security.auth.message.config.AuthConfigFactory.getFactory(AuthConfigFactory.java:85) ~[na:na]\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.findJaspicProvider(AuthenticatorBase.java:1382) ~[na:na]\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.getJaspicProvider(AuthenticatorBase.java:1375) ~[na:na]\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:532) ~[na:na]\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) ~[na:na]\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[na:na]\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[na:na]\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [com.example.securingweb.securingwebapplication:na]\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [com.example.securingweb.securingwebapplication:na]\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [com.example.securingweb.securingwebapplication:na]\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [com.example.securingweb.securingwebapplication:na]\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639) [com.example.securingweb.securingwebapplication:na]\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [com.example.securingweb.securingwebapplication:na]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [com.example.securingweb.securingwebapplication:na]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [com.example.securingweb.securingwebapplication:na]\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [com.example.securingweb.securingwebapplication:na]\r\n\tat java.lang.Thread.run(Thread.java:748) [com.example.securingweb.securingwebapplication:na]\r\n\tat com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:527) [com.example.securingweb.securingwebapplication:na]\r\n\tat com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:193) [com.example.securingweb.securingwebapplication:na]\r\nCaused by: java.lang.ClassNotFoundException: org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl\r\n\tat com.oracle.svm.core.hub.ClassForNameSupport.forName(ClassForNameSupport.java:60) ~[na:na]\r\n\tat java.lang.Class.forName(DynamicHub.java:1211) ~[com.example.securingweb.securingwebapplication:na]\r\n\tat javax.security.auth.message.config.AuthConfigFactory$1.run(AuthConfigFactory.java:75) ~[na:na]\r\n\tat javax.security.auth.message.config.AuthConfigFactory$1.run(AuthConfigFactory.java:67) ~[na:na]\r\n\tat java.security.AccessController.doPrivileged(AccessController.java:117) ~[na:na]\r\n\tat javax.security.auth.message.config.AuthConfigFactory.getFactory(AuthConfigFactory.java:66) ~[na:na]\r\n```\r\n\r\nIt looks to have missed the `Class.forName` call in `javax.security.auth.message.config.AuthConfigFactory`:\r\n```\r\nClass<?> clazz = Class.forName(className);\r\n```\r\nThe file is here: https://github.com/apache/tomcat/blob/782a2ba96778ce671937dc8704559e0895a52025/java/jakarta/security/auth/message/config/AuthConfigFactory.java - please note that I know it was recently changed from javax to jakarta - but I am using a released version that still uses javax prefix. I think it might be the javax prefix that is causing issues here - do you use that as some kind of filter and not caught calls from javax prefixed types? or handle them in a special way?\r\n\r\nIf I manually add it to the reflect-config.json, everything works. \r\n```\r\n{\"name\":\"org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl\",\"allDeclaredMethods\":true,\"allDeclaredConstructors\":true},\r\n```\r\n\r\nRepro steps I think...\r\n```\r\ngit clone git@github.com:spring-projects-experimental/spring-graal-native.git\r\ngit checkout extensible-configuration\r\ncd spring-graal-native\r\n./build-feature.sh\r\nmvn install\r\ncd *samples/gs-securing-web\r\nrm src/main/resources/META-INF/native-images/*.json (to delete existing config in the repo)\r\nmvn package\r\n./run_agent.sh\r\nThen visit all the pages:\r\ngo to localhost:8080, click the link, enter rubbish, click submit, then enter 'user' 'password' and click submit, see message, click sign out, then shut down the app\r\n(That should have exercised all the codepaths to collect what we need)\r\nThen run 'mvn -Pgraal package' to build the native-image using that configuration\r\n```\r\n\r\nI also tried graal master with the new flag `-agentlib:native-image-agent=experimental-class-loader-support,config-output-dir=...` but it didn't help.", "url": "https://github.com/oracle/graal/issues/2198", "user": "aclement", "labels": ["bug", "native-image"], "created": "2020-02-28 18:22:28", "closed": "2020-03-10 00:46:26", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "Unexpected \"Unsupported type jdk.internal.reflect.MethodAccessorGenerator is reachable\" error", "body": "Just spotted a Quarkus/Graal master issue, see (https://github.com/quarkusio/quarkus/issues/7422):\r\n\r\n```\r\n$ mvn clean install -Dnative -pl integration-tests/optaplanner-jackson\r\n...\r\nError: com.oracle.svm.hosted.substitute.DeletedElementException: Unsupported type jdk.internal.reflect.MethodAccessorGenerator is reachable\r\nTo diagnose the issue, you can add the option --report-unsupported-elements-at-runtime. The unsupported element is then reported at run time when it is accessed the first time.\r\nDetailed message:\r\nTrace:\r\n\tat parsing jdk.internal.reflect.ReflectionFactory.generateConstructor(ReflectionFactory.java:513)\r\nCall path from entry point to jdk.internal.reflect.ReflectionFactory.generateConstructor(Class, Constructor):\r\n\tat jdk.internal.reflect.ReflectionFactory.generateConstructor(ReflectionFactory.java:513)\r\n\tat jdk.internal.reflect.ReflectionFactory.newConstructorForSerialization(ReflectionFactory.java:506)\r\n\tat java.io.ObjectStreamClass.getSerializableConstructor(ObjectStreamClass.java:1516)\r\n\tat java.io.ObjectStreamClass$2.run(ObjectStreamClass.java:509)\r\n\tat java.io.ObjectStreamClass$2.run(ObjectStreamClass.java:484)\r\n\tat com.oracle.svm.core.jdk.Target_java_security_AccessController.doPrivileged(SecuritySubstitutions.java:81)\r\n\tat sun.security.pkcs11.SunPKCS11.initToken(SunPKCS11.java:1028)\r\n\tat sun.security.pkcs11.SunPKCS11$TokenPoller.run(SunPKCS11.java:852)\r\n\tat java.lang.Thread.run(Thread.java:834)\r\n\tat com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:517)\r\n\tat com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:193)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.PosixJavaThreads_pthreadStartRoutine_e1f4a8c0039f8337338252cd8734f63a79b5e3df(generated:0)\r\n```\r\n\r\nI suspect this is caused by the following change https://github.com/oracle/graal/commit/eab7e93b585febf7c2c68948af70157732767963\r\n\r\nThe call path above is not under Quarkus control, so I'd assume this is a regression on svm?", "url": "https://github.com/oracle/graal/issues/2192", "user": "galderz", "labels": ["bug", "native-image"], "created": "2020-02-26 11:08:34", "closed": "2020-06-09 09:10:56", "commits": {}, "ttf": 103.00027777777778, "commitsDetails": []}, {"title": "Throwing FileNotFoundException crashes on iOS", "body": "\r\n**Describe GraalVM and your environment :**\r\n - GraalVM version or commit id if built from source: **[custom build 20.1.0]**\r\n - CE or EE: **[CE]**\r\n - Build Time or run time failure: **[run-time]**\r\n - JDK version: **[JDK11]**\r\n - Native compiler information:\r\n\r\n```\r\nApple clang version 11.0.0 (clang-1100.0.33.16)\r\nTarget: x86_64-apple-darwin19.2.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\n```\r\n\r\n - OS and OS Version: **[macOS Catalina 10.15.2]**\r\n - Architecture: **[ARM64-iOS]**\r\n - The output of `java -Xinternalversion`: \r\n```\r\nOpenJDK 64-Bit Server VM (11.0.2+7) for bsd-amd64 JRE (11.0.2+7), built on Dec 12 2018 04:24:53 by \"mach5one\" with gcc 4.2.1 Compatible Apple LLVM 9.1.0 (clang-902.0.39.2)\r\n```\r\n\r\n**Have you verified this issue still happens when using the latest snapshot?**\r\nThis issue happens with a custom build from master\r\n \r\n**Describe the issue**\r\nRunning a [HelloWorld sample](https://github.com/gluonhq/client-samples/tree/master/Maven/HelloWorld), modified with the snippet below, on iOS causes the following crash, if a `FileNotFoundException` occurs because the expected file doesn't exist, with the following stacktrace:\r\n\r\n```\r\n Process 23801 stopped\r\n * thread #9, stop reason = EXC_BAD_ACCESS (code=1, address=0x6)\r\n     frame #0: 0x00000001048daf04 helloWorld`JNIJavaCallWrappers__jniInvoke__VA__LIST_003aLjava__io__FileNotFoundException__2__0002e__0003cinit__0003e__00028Ljava__lang__String__2Ljava__lang__String__2__00029V__d01b5d4b7a7694fdaee18008b584fb6dbc616a97 + 228\r\n helloWorld`JNIJavaCallWrappers__jniInvoke__VA__LIST_003aLjava__io__FileNotFoundException__2__0002e__0003cinit__0003e__00028Ljava__lang__String__2Ljava__lang__String__2__00029V__d01b5d4b7a7694fdaee18008b584fb6dbc616a97:\r\n ->  0x1048daf04 <+228>: ldr    x1, [x8], #0x8\r\n     0x1048daf08 <+232>: str    x8, [x19]\r\n     0x1048daf0c <+236>: ldur   x8, [x29, #-0x18]\r\n     0x1048daf10 <+240>: str    x0, [sp, #0x20]\r\n Target 0: (helloWorld) stopped.\r\n * thread #9, stop reason = EXC_BAD_ACCESS (code=1, address=0x6)\r\n   * frame #0: 0x00000001048daf04 helloWorld`JNIJavaCallWrappers__jniInvoke__VA__LIST_003aLjava__io__FileNotFoundException__2__0002e__0003cinit__0003e__00028Ljava__lang__String__2Ljava__lang__String__2__00029V__d01b5d4b7a7694fdaee18008b584fb6dbc616a97 + 228\r\n     frame #1: 0x0000000104cafbc4 helloWorld`JNU_NewObjectByName + 156\r\n     frame #2: 0x0000000104caeb3c helloWorld`throwFileNotFoundException + 104\r\n     frame #3: 0x0000000104caeebc helloWorld`fileOpen + 376\r\n     frame #4: 0x0000000104336f0c helloWorld`__llvm_jni_wrapper_f_isVoidi64i64i64f + 32\r\n     frame #5: 0x000000010450a9b4 helloWorld`FileInputStream_open0_8b1b5fc3043b8ae0dd0d8b68b3a5a224719f9dca + 200\r\n     frame #6: 0x00000001044ffaa4 helloWorld`FileInputStream_constructor_aac741e2ef07c171301eb35c0deea3293fe4d747 + 372\r\n     frame #7: 0x0000000104503334 helloWorld`FileInputStream_constructor_c26cfb3083610a614cb5843727b1293a2e050fbe + 140\r\n     frame #8: 0x000000010484c210 helloWorld`HelloWorld_main_6ed547d50a30bc97dec85c6ce61dc044222e770a + 160\r\n     frame #9: 0x0000000104914aa4 helloWorld`IsolateEnterStub_JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b_a61fe6c26e84dd4037e4629852b5488bfcc16e7e + 316\r\n     frame #10: 0x000000010423836c helloWorld`startGVM + 40\r\n     frame #11: 0x00000001042380b8 helloWorld`-[AppDelegate startVM:] + 40\r\n     frame #12: 0x00000001947070a4 Foundation`__NSThread__start__ + 848\r\n     frame #13: 0x0000000194039d8c libsystem_pthread.dylib`_pthread_start + 156\r\n```\r\n\r\n**Describe the full native-image command**\r\n<details><summary>Capture full native-image command by running with the `--verbose` flag e.g.:</summary>\r\n\r\n```\r\n native-image --report-unsupported-elements-at-runtime -Djdk.internal.lambda.eagerlyInitialize=false -H:+ExitAfterRelocatableImageWrite -H:TempDirectory=/Users/JosePereda/Gluon/Gluon-OSS/Client/Forks/jpereda-client-samples/Maven/HelloWorld/target/client/arm64-ios/gvm/tmp -H:+SharedLibrary -H:+AddAllCharsets -H:EnableURLProtocols=http,https -H:ReflectionConfigurationFiles=/tmp/HelloWorld/target/client/arm64-ios/gvm/reflectionconfig-arm64-ios.json -H:JNIConfigurationFiles=/tmp/HelloWorld/target/client/arm64-ios/gvm/jniconfig-arm64-ios.json -H:ResourceConfigurationFiles=/tmp/HelloWorld/target/client/arm64-ios/gvm/resourceconfig-arm64-ios.json -H:CompilerBackend=llvm -H:-SpawnIsolates -Dllvm.bin.dir=/tmp/graalvm-svm-darwin-20.1.0-ea+24/lib/llvm/bin -H:+UseCAPCache -H:CAPCacheDir=/tmp/HelloWorld/target/client/arm64-ios/gvm/capcache -Dsvm.targetName=iOS -Dsvm.targetArch=arm64 -Dsvm.platform=org.graalvm.nativeimage.Platform$DARWIN_AARCH64 -cp /tmp/HelloWorld/target/classes hello.HelloWorld\r\n\r\n```\r\n</details>\r\n\r\n```\r\nBuild on Server(pid: 33841, port: 59405)\r\n[hello.helloworld:33841]    classlist:     250.02 ms,  2.07 GB\r\n[hello.helloworld:33841]        (cap):      77.93 ms,  2.07 GB\r\n[hello.helloworld:33841]        setup:     477.68 ms,  2.07 GB\r\n[hello.helloworld:33841]   (typeflow):  13,636.38 ms,  2.92 GB\r\n[hello.helloworld:33841]    (objects):  12,115.29 ms,  2.92 GB\r\n[hello.helloworld:33841]   (features):     879.67 ms,  2.92 GB\r\n[hello.helloworld:33841]     analysis:  27,255.75 ms,  2.92 GB\r\n[hello.helloworld:33841]     (clinit):     446.53 ms,  2.92 GB\r\n[hello.helloworld:33841]     universe:     961.52 ms,  2.92 GB\r\n[hello.helloworld:33841]      (parse):   1,453.13 ms,  2.89 GB\r\n[hello.helloworld:33841]     (inline):   1,867.66 ms,  2.64 GB\r\n[hello.helloworld:33841]    (compile):  18,111.99 ms,  2.93 GB\r\n[hello.helloworld:33841]    (bitcode):   1,426.13 ms,  2.93 GB\r\n[hello.helloworld:33841]    (prelink):   4,438.60 ms,  2.93 GB\r\n[hello.helloworld:33841]       (llvm):  41,748.94 ms,  2.93 GB\r\n[hello.helloworld:33841]   (postlink):   2,501.81 ms,  2.93 GB\r\n[hello.helloworld:33841]      compile:  71,753.71 ms,  2.93 GB\r\n[hello.helloworld:33841]        image:   4,686.64 ms,  2.97 GB\r\n[hello.helloworld:33841]        write:     916.59 ms,  2.97 GB\r\n[hello.helloworld:33841]      [total]: 106,430.14 ms,  2.97 GB\r\n\r\n```\r\n\r\n**Code snippet or code repository that reproduces the issue**\r\n```\r\npublic static void main(String[] args) throws Exception{\r\n        try {\r\n            new FileInputStream(\"nonexistent.css\");\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n```\r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\n1. Step one [Download GraalVM build for [iOS](https://download2.gluonhq.com/substrate/graalvm/graalvm-svm-darwin-20.1.0-ea+24.zip), extract and set `$GRAALVM_HOME`]\r\n2. Step two [Clone the [sample](https://github.com/gluonhq/client-samples), modify with above snippet, and enable iOS target in pom]\r\n3. Step three [`mvn clean client:build`]\r\n4. Step four [deploy to an iOS device, following [documentation](https://docs.gluonhq.com/client/#_ios_deployment): `mvn client:run`]\r\n\r\n**Expected behavior**\r\nThe `FileNotFoundException` should be thrown, as happens when running the same sample on MacOS:\r\n\r\n```\r\n java.io.FileNotFoundException: nonexistent.css (No such file or directory)\r\n    at com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VA_LIST:Ljava_io_FileNotFoundException_2_0002e_0003cinit_0003e_00028Ljava_lang_String_2Ljava_lang_String_2_00029V(JNIJavaCallWrappers.java:0)\r\n    at java.io.FileInputStream.open0(FileInputStream.java)\r\n    at java.io.FileInputStream.open(FileInputStream.java:219)\r\n...\r\n```\r\n\r\n**Additional context**\r\nPossibly related to #2090 ", "url": "https://github.com/oracle/graal/issues/2189", "user": "jperedadnr", "labels": ["bug", "native-image"], "created": "2020-02-25 22:47:31", "closed": "2020-02-27 08:30:07", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "native-image unsupported features Apache POI app built using Gradle", "body": "**Describe GraalVM and your environment :**\r\n - GraalVM version or commit id if built from source: **20.1.0-dev-20200225_0946**\r\n - CE or EE: **CE**\r\n - Build Time or run time failure: **build time**\r\n - JDK version: **JDK11**\r\n - Native compiler information:\r\n```\r\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.16.27035 for x64\r\n```\r\n - Native linker information:\r\n```\r\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.16.27035 for x64\r\n```\r\n - OS and OS Version: **Windows 10 1909 18363.657**\r\n - Architecture: **AMD64**\r\n - The output of `java -Xinternalversion`: \r\n```\r\nOpenJDK 64-Bit Server VM (11.0.6+9-jvmci-20.0-b02) for windows-amd64 JRE (11.0.6+9-jvmci-20.0-b02), built on Jan 20 2020 20:19:26 by \"\" with MS VC++ 15.5 (VS2017)\r\n```\r\n\r\n**Have you verified this issue still happens when using the latest snapshot?**\r\nIt has been verified using GraalVM CE 20.1.0-dev-20200225_0946, the latest snapshot at the time of reporting.\r\n\r\n**Describe the issue**\r\n```\r\nWarning: Aborting stand-alone image build due to unsupported features during native-image generation.\r\n\r\nError: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved type during parsing: org.apache.poi.xssf.usermodel.XSSFWorkbook.\r\n```\r\n\r\n**Describe the full native-image command**\r\n<details>\r\n\r\n```\r\n> native-image -jar graalvm_ni_apachepoi_failure.jar --no-fallback --verbose\r\nExecuting [\r\n'C:\\graalvm\\graalvm-ce-java11-20.1.0-dev\\bin\\java.exe' \\\r\n-XX:+UseParallelGC \\\r\n-XX:+UnlockExperimentalVMOptions \\\r\n-XX:+EnableJVMCI \\\r\n-Dtruffle.TrustAllTruffleRuntimeProviders=true \\\r\n-Dtruffle.TruffleRuntime=com.oracle.truffle.api.impl.DefaultTruffleRuntime \\\r\n-Dgraalvm.ForcePolyglotInvalid=true \\\r\n-Dgraalvm.locatorDisabled=true \\\r\n-Dsubstratevm.IgnoreGraalVersionCheck=true \\\r\n-Djava.lang.invoke.stringConcat=BC_SB \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.runtime=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.code=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.aarch64=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.amd64=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.meta=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.hotspot=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.services=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.common=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.code.site=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.code.stack=ALL-UNNAMED \\\r\n--add-opens \\\r\njdk.internal.vm.compiler/org.graalvm.compiler.debug=ALL-UNNAMED \\\r\n--add-opens \\\r\njdk.internal.vm.compiler/org.graalvm.compiler.nodes=ALL-UNNAMED \\\r\n--add-opens \\\r\njdk.unsupported/sun.reflect=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.module=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.ref=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.reflect=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.io=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang.reflect=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang.invoke=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang.ref=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.net=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.nio=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.nio.file=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.security=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/javax.crypto=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.util=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.util.concurrent.atomic=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/sun.security.x509=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.logger=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.sdk/org.graalvm.nativeimage.impl=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.sdk/org.graalvm.polyglot=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.truffle/com.oracle.truffle.polyglot=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.truffle/com.oracle.truffle.api.impl=ALL-UNNAMED \\\r\n-XX:+UseJVMCINativeLibrary \\\r\n-Xss10m \\\r\n-Xms1g \\\r\n-Xmx13642557024 \\\r\n-Duser.country=US \\\r\n-Duser.language=en \\\r\n-Djava.awt.headless=true \\\r\n-Dorg.graalvm.version=20.1.0-dev \\\r\n-Dorg.graalvm.config=CE \\\r\n-Dcom.oracle.graalvm.isaot=true \\\r\n-Djava.system.class.loader=com.oracle.svm.hosted.NativeImageSystemClassLoader \\\r\n-Xshare:off \\\r\n--module-path \\\r\n'C:\\graalvm\\graalvm-ce-java11-20.1.0-dev\\lib\\truffle\\truffle-api.jar' \\\r\n'-javaagent:C:\\graalvm\\graalvm-ce-java11-20.1.0-dev\\lib\\svm\\builder\\svm.jar' \\\r\n-Djdk.internal.lambda.disableEagerInitialization=true \\\r\n-Djdk.internal.lambda.eagerlyInitialize=false \\\r\n-Djava.lang.invoke.InnerClassLambdaMetafactory.initializeLambdas=false \\\r\n-cp \\\r\n'C:\\graalvm\\graalvm-ce-java11-20.1.0-dev\\lib\\svm\\builder\\objectfile.jar;C:\\graalvm\\graalvm-ce-java11-20.1.0-dev\\lib\\svm\\builder\\pointsto.jar;C:\\graalvm\\graalvm-ce-java11-20.1.0-dev\\lib\\svm\\builder\\svm.jar' \\\r\n'com.oracle.svm.hosted.NativeImageGeneratorRunner$JDK9Plus' \\\r\n-imagecp \\\r\n'C:\\graalvm\\graalvm-ce-java11-20.1.0-dev\\lib\\svm\\builder\\objectfile.jar;C:\\graalvm\\graalvm-ce-java11-20.1.0-dev\\lib\\svm\\builder\\pointsto.jar;C:\\graalvm\\graalvm-ce-java11-20.1.0-dev\\lib\\svm\\builder\\svm.jar;C:\\graalvm\\graalvm-ce-java11-20.1.0-dev\\lib\\svm\\library-support.jar;C:\\graalvm_ni_apachepoi_failure\\build\\libs\\graalvm_ni_apachepoi_failure.jar' \\\r\n'-H:Path=C:\\graalvm_ni_apachepoi_failure\\build\\libs' \\\r\n-H:Class=graalvm_ni_apachepoi_failure.App \\\r\n-H:Name=graalvm_ni_apachepoi_failure \\\r\n-H:FallbackThreshold=0 \\\r\n'-H:CLibraryPath=C:\\graalvm\\graalvm-ce-java11-20.1.0-dev\\lib\\svm\\clibraries\\windows-amd64' \\\r\n\r\n]\r\n```\r\n</details>\r\n\r\n**Code snippet or code repository that reproduces the issue**\r\n- **src\\main\\java\\graalvm_ni_apachepoi_failure\\App.java**\r\n```\r\npackage graalvm_ni_apachepoi_failure;\r\n\r\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\r\n\r\npublic class App {\r\n    public static void main(String[] args) {\r\n        XSSFWorkbook workbook = new XSSFWorkbook();\r\n        System.out.println(workbook.toString());\r\n        try {\r\n            workbook.close();\r\n        } catch (Exception e) {\r\n            System.out.println(\"Couldn't close workbook\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n- **build.gradle**\r\n```\r\nplugins {\r\n    id 'java'\r\n    id 'application'\r\n}\r\n\r\nrepositories {\r\n    jcenter()\r\n}\r\n\r\ndependencies {\r\n    implementation 'org.apache.poi:poi:4.1.2'\r\n    implementation 'org.apache.poi:poi-ooxml:4.1.2'\r\n}\r\n\r\napplication {\r\n    mainClassName = 'graalvm_ni_apachepoi_failure.App'\r\n}\r\n\r\njar {\r\n    manifest {\r\n        attributes 'Main-Class': mainClassName\r\n    }\r\n}\r\n\r\n```\r\n\r\n**Steps to reproduce the issue**\r\n1. Install Gradle 6.2\r\n1. Create a directory called `graalvm_ni_apachepoi_failure` and paste `src\\main\\java\\graalvm_ni_apachepoi_failure\\App.java` and `build.gradle` provided above into it\r\n1. Build the application using Gradle 6.2: open a command prompt and execute `gradle clean build` into the directory created above\r\n1. Run `gu install native-image`\r\n1. Navigate into the `build\\libs` directory created by Gradle and run `native-image -jar graalvm_ni_apachepoi_failure.jar --no-fallback`\r\n\r\n**Expected behavior**\r\nThe application should have compiled just fine.", "url": "https://github.com/oracle/graal/issues/2186", "user": "cosminpolifronie", "labels": ["bug", "native-image"], "created": "2020-02-25 15:46:22", "closed": "2020-02-25 15:58:02", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "\"Could not find option 'UseLowLatencyGC'\"", "body": "**Describe GraalVM and your environment :**\r\n - GraalVM version or commit id if built from source: **[e.g. 19.3]** 20.0.0\r\n - CE or EE: **[e.g.: CE]** CE\r\n - Build Time or run time failure: **[eg run-time]** Build Time\r\n - JDK version: **[e.g.: JDK8]** JDK11\r\n\r\n**Describe the issue**\r\nlog:\r\n```\r\nBuild on Server(pid: 5894, port: 38273)*\r\nError: Could not find option 'UseLowLatencyGC'. Use -H:PrintFlags= to list all available options.\r\nError: Use -H:+ReportExceptionStackTraces to print stacktrace of underlying exception\r\nError: Image build request failed with exit status 1\r\n##[error]Process completed with exit code 1.\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2179", "user": "pczmr8v5n454iycf", "labels": ["bug", "native-image"], "created": "2020-02-23 10:48:17", "closed": "2020-02-27 10:03:57", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Memory leak on windows with isolate", "body": "**Describe GraalVM and your environment :**\r\n - GraalVM version or commit id if built from source: **20.1.0-dev 20200212_0349**\r\n - CE or EE: **CE**\r\n - Build Time or run time failure: **run-time**\r\n - JDK version: **JDK11** and  **JDK8**\r\n - Native compiler information:<details><summary>Run the following to capture compiler version</summary>\r\n   - In windows: `cl.exe`\r\n   - In macOS : `cc -v`\r\n   - In Linux: `gcc --version`\r\n</details>\r\n\r\n```\r\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.24.28316 for x64\r\nCopyright (C) Microsoft Corporation.  All rights reserved.\r\n\r\nusage: cl [ option... ] filename... [ /link linkoption... ]\r\n```\r\n - Native linker information:<details><summary>Run the following to capture linker version</summary>\r\n   - In windows: `cl.exe`\r\n   - In macOS : `cc -Wl,-v`\r\n   - In Linux: `gcc -Wl,--version`\r\n</details>\r\n\r\n```\r\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.24.28316 for x64\r\nCopyright (C) Microsoft Corporation.  All rights reserved.\r\n\r\nusage: cl [ option... ] filename... [ /link linkoption... ]\r\n```\r\n - OS and OS Version: **Windows 10 1909**\r\n - Architecture: **AMD64**\r\n - The output of `java -Xinternalversion`: \r\n```\r\nOpenJDK 64-Bit Server VM (11.0.6+9-jvmci-20.0-b02) for windows-amd64 JRE (11.0.6+9-jvmci-20.0-b02), built on Jan 20 2020 20:19:26 by \"\" with MS VC++ 15.5 (VS2017)\r\n```\r\n\r\n**Have you verified this issue still happens when using the latest snapshot?**\r\nYou can find snapshot builds here: https://github.com/graalvm/graalvm-ce-dev-builds/releases\r\n\r\nYes\r\n\r\n**Describe the issue**\r\nThere is a memory leak on each isolate call of 3,5MB, only in the windows build. It doesn't seem to happen on linux.\r\n\r\n**Describe the full native-image command**\r\n<details><summary>Capture full native-image command by running with the `--verbose` flag e.g.:</summary>\r\n\r\n```\r\n native-image --verbose [... other args]\r\n```\r\n\r\n\r\n```\r\nC:\\Users\\arnaud\\code\\graal\\graal-windows-isolate-leak>java -Xinternalversion\r\nOpenJDK 64-Bit Server VM (11.0.6+9-jvmci-20.0-b02) for windows-amd64 JRE (11.0.6+9-jvmci-20.0-b02), built on Jan 20 2020 20:19:26 by \"\" with MS VC++ 15.5 (VS2017)\r\n\r\nC:\\Users\\arnaud\\code\\graal\\graal-windows-isolate-leak>native-image -jar target\\graal-windows-isolate-leak-1.0-SNAPSHOT-jar-with-dependencies.jar --verbose\r\nExecuting [\r\nC:\\Program Files\\Java\\graalvm-ce-java11-20.1.0-dev\\bin\\java.exe \\\r\n-XX:+UseParallelGC \\\r\n-XX:+UnlockExperimentalVMOptions \\\r\n-XX:+EnableJVMCI \\\r\n-Dtruffle.TrustAllTruffleRuntimeProviders=true \\\r\n-Dtruffle.TruffleRuntime=com.oracle.truffle.api.impl.DefaultTruffleRuntime \\\r\n-Dgraalvm.ForcePolyglotInvalid=true \\\r\n-Dgraalvm.locatorDisabled=true \\\r\n-Dsubstratevm.IgnoreGraalVersionCheck=true \\\r\n-Djava.lang.invoke.stringConcat=BC_SB \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.runtime=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.code=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.aarch64=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.amd64=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.meta=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.hotspot=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.services=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.common=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.code.site=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.code.stack=ALL-UNNAMED \\\r\n--add-opens \\\r\njdk.internal.vm.compiler/org.graalvm.compiler.debug=ALL-UNNAMED \\\r\n--add-opens \\\r\njdk.internal.vm.compiler/org.graalvm.compiler.nodes=ALL-UNNAMED \\\r\n--add-opens \\\r\njdk.unsupported/sun.reflect=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.module=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.ref=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.reflect=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.io=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang.reflect=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang.invoke=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang.ref=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.net=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.nio=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.nio.file=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.security=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/javax.crypto=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.util=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.util.concurrent.atomic=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/sun.security.x509=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.logger=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.sdk/org.graalvm.nativeimage.impl=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.sdk/org.graalvm.polyglot=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.truffle/com.oracle.truffle.polyglot=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.truffle/com.oracle.truffle.api.impl=ALL-UNNAMED \\\r\n-XX:+UseJVMCINativeLibrary \\\r\n-Xss10m \\\r\n-Xms1g \\\r\n-Xmx14g \\\r\n-Duser.country=US \\\r\n-Duser.language=en \\\r\n-Djava.awt.headless=true \\\r\n-Dorg.graalvm.version=20.1.0-dev \\\r\n-Dorg.graalvm.config=CE \\\r\n-Dcom.oracle.graalvm.isaot=true \\\r\n-Djava.system.class.loader=com.oracle.svm.hosted.NativeImageSystemClassLoader \\\r\n-Xshare:off \\\r\n--module-path \\\r\nC:\\Program Files\\Java\\graalvm-ce-java11-20.1.0-dev\\lib\\truffle\\truffle-api.jar \\\r\n-javaagent:C:\\Program Files\\Java\\graalvm-ce-java11-20.1.0-dev\\lib\\svm\\builder\\svm.jar \\\r\n-Djdk.internal.lambda.disableEagerInitialization=true \\\r\n-Djdk.internal.lambda.eagerlyInitialize=false \\\r\n-Djava.lang.invoke.InnerClassLambdaMetafactory.initializeLambdas=false \\\r\n-cp \\\r\nC:\\Program Files\\Java\\graalvm-ce-java11-20.1.0-dev\\lib\\svm\\builder\\objectfile.jar;C:\\Program Files\\Java\\graalvm-ce-java11-20.1.0-dev\\lib\\svm\\builder\\pointsto.jar;C:\\Program Files\\Java\\graalvm-ce-java11-20.1.0-dev\\lib\\svm\\builder\\svm.jar \\  com.oracle.svm.hosted.NativeImageGeneratorRunner$JDK9Plus \\\r\n-imagecp \\\r\nC:\\Program Files\\Java\\graalvm-ce-java11-20.1.0-dev\\lib\\svm\\builder\\objectfile.jar;C:\\Program Files\\Java\\graalvm-ce-java11-20.1.0-dev\\lib\\svm\\builder\\pointsto.jar;C:\\Program Files\\Java\\graalvm-ce-java11-20.1.0-dev\\lib\\svm\\builder\\svm.jar;C:\\Program Files\\Java\\graalvm-ce-java11-20.1.0-dev\\lib\\svm\\library-support.jar;C:\\Users\\arnaud\\code\\graal\\graal-windows-isolate-leak\\target\\graal-windows-isolate-leak-1.0-SNAPSHOT-jar-with-dependencies.jar \\\r\n-H:Path=C:\\Users\\arnaud\\code\\graal\\graal-windows-isolate-leak \\\r\n-H:Class=Leak \\\r\n-H:Name=graal-windows-isolate-leak-1.0-SNAPSHOT-jar-with-dependencies \\\r\n-H:CLibraryPath=C:\\Program Files\\Java\\graalvm-ce-java11-20.1.0-dev\\lib\\svm\\clibraries\\windows-amd64\r\n]\r\n[graal-windows-isolate-leak-1.0-SNAPSHOT-jar-with-dependencies:23764]    classlist:     943.02 ms,  0.96 GB\r\n[graal-windows-isolate-leak-1.0-SNAPSHOT-jar-with-dependencies:23764]        (cap):   1,643.70 ms,  0.96 GB\r\n[graal-windows-isolate-leak-1.0-SNAPSHOT-jar-with-dependencies:23764]        setup:   2,788.46 ms,  0.96 GB\r\n[graal-windows-isolate-leak-1.0-SNAPSHOT-jar-with-dependencies:23764]   (typeflow):   3,540.78 ms,  1.22 GB\r\n[graal-windows-isolate-leak-1.0-SNAPSHOT-jar-with-dependencies:23764]    (objects):   3,505.22 ms,  1.22 GB\r\n[graal-windows-isolate-leak-1.0-SNAPSHOT-jar-with-dependencies:23764]   (features):     123.73 ms,  1.22 GB\r\n[graal-windows-isolate-leak-1.0-SNAPSHOT-jar-with-dependencies:23764]     analysis:   7,303.43 ms,  1.22 GB\r\n[graal-windows-isolate-leak-1.0-SNAPSHOT-jar-with-dependencies:23764]     (clinit):     139.92 ms,  1.22 GB\r\n[graal-windows-isolate-leak-1.0-SNAPSHOT-jar-with-dependencies:23764]     universe:     378.81 ms,  1.22 GB\r\n[graal-windows-isolate-leak-1.0-SNAPSHOT-jar-with-dependencies:23764]      (parse):     446.83 ms,  1.24 GB\r\n[graal-windows-isolate-leak-1.0-SNAPSHOT-jar-with-dependencies:23764]     (inline):     666.73 ms,  1.69 GB\r\n[graal-windows-isolate-leak-1.0-SNAPSHOT-jar-with-dependencies:23764]    (compile):   2,426.14 ms,  2.28 GB\r\n[graal-windows-isolate-leak-1.0-SNAPSHOT-jar-with-dependencies:23764]      compile:   3,869.14 ms,  2.28 GB\r\n[graal-windows-isolate-leak-1.0-SNAPSHOT-jar-with-dependencies:23764]        image:     552.87 ms,  2.28 GB\r\n[graal-windows-isolate-leak-1.0-SNAPSHOT-jar-with-dependencies:23764]        write:     115.89 ms,  2.28 GB\r\n[graal-windows-isolate-leak-1.0-SNAPSHOT-jar-with-dependencies:23764]      [total]:  16,108.27 ms,  2.28 GB\r\n```\r\n</details>\r\n\r\n**Code snippet or code repository that reproduces the issue**\r\nI've put a simple reproduction test here :\r\n```\r\nhttps://github.com/amarant/graal-windows-isolate-leak\r\n```\r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\n1. git clone https://github.com/amarant/graal-windows-isolate-leak\r\n2. mvn clean package\r\n3. native-image -jar target\\graal-windows-isolate-leak-1.0-SNAPSHOT-jar-with-dependencies.jar\r\n4. graal-windows-isolate-leak-1.0-SNAPSHOT-jar-with-dependencies.exe\r\n5. enter \"i toto\" and watch the memory usage grow\r\n\r\n**Expected behavior**\r\nThe memory used should not grow at each call on windows because it doesn't on linux.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here. Specially important are stack traces or log output. Feel free to link to gists or to screenshots if necesary\r\n<details><summary>Details</summary>\r\n\r\n```\r\n    PASTE YOUR LOG/STACK TRACE HERE\r\n```\r\n</details>\r\n", "url": "https://github.com/oracle/graal/issues/2178", "user": "amarant", "labels": ["bug", "native-image"], "created": "2020-02-22 23:51:19", "closed": "2020-03-23 14:50:26", "commits": {}, "ttf": 29.00027777777778, "commitsDetails": []}, {"title": "Micronaut Kafka consumer service - Native image build issue", "body": "**Describe GraalVM and your environment :**\r\n - GraalVM version : **[19.3.1]**\r\n - CE or EE: **[CE]**\r\n - Build Time or run time failure: **[Build-time]**\r\n - JDK version: **[JDK8]**\r\n - Native compiler information:<details><summary>Run the following to capture compiler version</summary>\r\n   - In windows: `cl.exe`\r\n   - In macOS : `cc -v`\r\n   - In Linux: `gcc --version`\r\n</details>\r\n\r\n```\r\ngcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-39)\r\n```\r\n - Native linker information:<details><summary>Run the following to capture linker version</summary>\r\n   - In windows: `cl.exe`\r\n   - In macOS : `cc -Wl,-v`\r\n   - In Linux: `gcc -Wl,--version`\r\n</details>\r\n\r\n```\r\ncollect2 version 4.8.5 20150623 (Red Hat 4.8.5-39)\r\n/usr/bin/ld --build-id --no-add-needed --eh-frame-hdr --hash-style=gnu -m elf_x86_64 -dynamic-linker /lib64/ld-linux-x86-64.so.2 /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crti.o /usr/lib/gcc/x86_64-redhat-linux/4.8.5/crtbegin.o -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../.. --version -lgcc --as-needed -lgcc_s --no-as-needed -lc -lgcc --as-needed -lgcc_s --no-as-needed /usr/lib/gcc/x86_64-redhat-linux/4.8.5/crtend.o /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crtn.o\r\nGNU ld version 2.27-41.base.el7_7.1\r\nCopyright (C) 2016 Free Software Foundation, Inc.\r\nThis program is free software; you may redistribute it under the terms of\r\nthe GNU General Public License version 3 or (at your option) a later version.\r\nThis program has absolutely no warranty.\r\n```\r\n - OS and OS Version: GNU/Linux\r\n - Architecture: **x86_64**\r\n - The output of `java -Xinternalversion`: \r\n```\r\nOpenJDK 64-Bit Server VM GraalVM CE 20.0.0 (25.242-b06-jvmci-20.0-b02) for linux-amd64 JRE (8u242), built on Jan 20 2020 20:45:17 by \"buildslave\" with gcc 7.3.0\r\n```\r\n\r\n**Have you verified this issue still happens when using the latest snapshot?**:  Yes\r\nYou can find snapshot builds here: https://github.com/graalvm/graalvm-ce-dev-builds/releases\r\n\r\n**Describe the issue**\r\n **Native Image creation is failing after **write process****\r\n\r\n**Describe the full native-image command**\r\n<details><summary>Capture full native-image command by running with the `--verbose` flag e.g.:</summary>\r\n\r\n```\r\n native-image --verbose [... other args]\r\n```\r\n</details>\r\n\r\n```\r\nnative-image --no-server --static  -cp kafka-listener-0.1.jar\r\n```\r\n\r\n**Code snippet or code repository that reproduces the issue**: [Git Repo](https://github.com/ashokmarappan/kafka-listener)\r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\n1. Clone the above github repo to your local\r\n2. Execute the below command to build the application\r\n**mvn clean package**\r\n3. Ensure GraalVM is set as JAVA_HOME using **echo $JAVA_HOME** and **$PATH**\r\n3. Execute the below cmd to build the native image using GraalVM,\r\n**native-image --no-server --static  -cp target/kafka-listener-0.1.jar**\r\n\r\n**Expected behavior**\r\nI expect the native image to be created without any build error and should be able to consume the message that I post to topic.\r\n```\r\n[Note: I have tested my application by running in the linux box using cmd(**mvnw clean package exec:exec**)and was able to consume the kafka message that was posted to topic. Micronaut application working fine]\r\n```\r\n\r\n**Additional context**\r\n<details><summary>Details</summary>\r\n\r\n```\r\n**Complete TRACE:**\r\n\r\n[jenkins@linux-host /app/home/jenkins/Ashok]$ native-image --no-server --static -cp kafka-listener-*.jar\r\n[kafka-listener:4017]    classlist:   8,637.81 ms\r\n[kafka-listener:4017]        (cap):     889.31 ms\r\nWARNING: Could not resolve io.micronaut.configuration.kafka.metrics.ConsumerKafkaMetricsReporter for reflection configuration.\r\nWARNING: Could not resolve io.micronaut.configuration.kafka.metrics.ProducerKafkaMetricsReporter for reflection configuration.\r\n[kafka-listener:4017]        setup:   2,816.81 ms\r\nWarning: class initialization of class io.micronaut.http.bind.binders.ContinuationArgumentBinder failed with exception java.lang.NoClassDefFoundError: kotlin/TypeCastException. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=io.micronaut.http.bind.binders.ContinuationArgumentBinder to explicitly request delayed initialization of this class.\r\nWarning: class initialization of class io.micronaut.http.bind.binders.ContinuationArgumentBinder$Companion failed with exception java.lang.NoClassDefFoundError: kotlin/TypeCastException. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=io.micronaut.http.bind.binders.ContinuationArgumentBinder$Companion to explicitly request delayed initialization of this class.\r\n[kafka-listener:4017]   (typeflow):  36,568.36 ms\r\n[kafka-listener:4017]    (objects):  20,560.23 ms\r\n[kafka-listener:4017]   (features):   4,794.70 ms\r\n[kafka-listener:4017]     analysis:  65,641.71 ms\r\n[kafka-listener:4017]     (clinit):   1,514.58 ms\r\n[kafka-listener:4017]     universe:   3,604.70 ms\r\n[kafka-listener:4017]      (parse):   7,104.41 ms\r\n[kafka-listener:4017]     (inline):  11,730.45 ms\r\n[kafka-listener:4017]    (compile):  43,403.96 ms\r\n[kafka-listener:4017]      compile:  65,669.93 ms\r\n[kafka-listener:4017]        image:   4,700.01 ms\r\n[kafka-listener:4017]        write:     585.67 ms\r\nFatal error: java.lang.RuntimeException: java.lang.RuntimeException: host C compiler or linker does not seem to work: java.lang.RuntimeException: returned 1\r\n\r\nRunning command: cc -v -o /app/home/jenkins/Ashok/kafka-listener -z noexecstack -Wl,--gc-sections -Wl,-x -static -L/tmp/SVM-3385603027518003578 -L/app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib -L/app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/svm/clibraries/linux-amd64 /tmp/SVM-3385603027518003578/kafka-listener.o /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libzip.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libnet.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libjava.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libnio.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libsunec.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libsunec.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/svm/clibraries/linux-amd64/libffi.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/svm/clibraries/linux-amd64/liblibchelper.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/svm/clibraries/linux-amd64/libjvm.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/svm/clibraries/linux-amd64/libstrictmath.a -lstdc++ -lm -lpthread -ldl -lz -lrt\r\n\r\nUsing built-in specs.\r\nCOLLECT_GCC=cc\r\nCOLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/lto-wrapper\r\nTarget: x86_64-redhat-linux\r\nConfigured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-linker-build-id --with-linker-hash-style=gnu --enable-languages=c,c++,objc,obj-c++,java,fortran,ada,go,lto --enable-plugin --enable-initfini-array --disable-libgcj --with-isl=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/isl-install --with-cloog=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/cloog-install --enable-gnu-indirect-function --with-tune=generic --with-arch_32=x86-64 --build=x86_64-redhat-linux\r\nThread model: posix\r\ngcc version 4.8.5 20150623 (Red Hat 4.8.5-39) (GCC)\r\nCOMPILER_PATH=/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/:/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/:/usr/libexec/gcc/x86_64-redhat-linux/:/usr/lib/gcc/x86_64-redhat-linux/4.8.5/:/usr/lib/gcc/x86_64-redhat-linux/\r\nLIBRARY_PATH=/usr/lib/gcc/x86_64-redhat-linux/4.8.5/:/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/:/lib/../lib64/:/usr/lib/../lib64/:/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../:/lib/:/usr/lib/\r\nCOLLECT_GCC_OPTIONS='-v' '-o' '/app/home/jenkins/Ashok/kafka-listener' '-z' 'noexecstack' '-static' '-L/tmp/SVM-3385603027518003578' '-L/app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib' '-L/app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/svm/clibraries/linux-amd64' '-mtune=generic' '-march=x86-64'\r\n /usr/libexec/gcc/x86_64-redhat-linux/4.8.5/collect2 --build-id --no-add-needed --hash-style=gnu -m elf_x86_64 -static -o /app/home/jenkins/Ashok/kafka-listener -z noexecstack /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crti.o /usr/lib/gcc/x86_64-redhat-linux/4.8.5/crtbeginT.o -L/tmp/SVM-3385603027518003578 -L/app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib -L/app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/svm/clibraries/linux-amd64 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../.. --gc-sections -x /tmp/SVM-3385603027518003578/kafka-listener.o /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libzip.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libnet.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libjava.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libnio.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libsunec.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libsunec.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/svm/clibraries/linux-amd64/libffi.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/svm/clibraries/linux-amd64/liblibchelper.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/svm/clibraries/linux-amd64/libjvm.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/svm/clibraries/linux-amd64/libstrictmath.a -lstdc++ -lm -lpthread -ldl -lz -lrt --start-group -lgcc -lgcc_eh -lc --end-group /usr/lib/gcc/x86_64-redhat-linux/4.8.5/crtend.o /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crtn.o\r\n/tmp/SVM-3385603027518003578/kafka-listener.o:(.data+0x0): warning: Using 'dlopen' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking\r\n/usr/bin/ld: cannot find -lz\r\n/app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libnio.a(UnixNativeDispatcher.o): In function `Java_sun_nio_fs_UnixNativeDispatcher_getgrgid':\r\n/opt/jprt/T/P1/094513.buildslave/s/jdk/src/solaris/native/sun/nio/fs/UnixNativeDispatcher.c:1037: warning: Using 'getgrgid_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking\r\n/app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libnio.a(UnixNativeDispatcher.o): In function `prepAttributes':\r\n/opt/jprt/T/P1/094513.buildslave/s/jdk/src/solaris/native/sun/nio/fs/UnixNativeDispatcher.c:444: warning: Using 'getgrnam_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking\r\n/tmp/SVM-3385603027518003578/kafka-listener.o:(.data+0x1058): warning: Using 'getpwuid' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking\r\n/app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libnio.a(UnixNativeDispatcher.o): In function `prepAttributes':\r\n/opt/jprt/T/P1/094513.buildslave/s/jdk/src/solaris/native/sun/nio/fs/UnixNativeDispatcher.c:443: warning: Using 'getpwnam_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking\r\n/opt/jprt/T/P1/094513.buildslave/s/jdk/src/solaris/native/sun/nio/fs/UnixNativeDispatcher.c:443: warning: Using 'getpwuid_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking\r\n/app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libnet.a(Inet4AddressImpl.o): In function `Java_java_net_Inet4AddressImpl_lookupAllHostAddr':\r\n/opt/jprt/T/P1/094513.buildslave/s/jdk/src/solaris/native/java/net/Inet4AddressImpl.c:418: warning: Using 'getaddrinfo' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking\r\ncollect2: error: ld returned 1 exit status\r\n\r\n        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n        at java.util.concurrent.ForkJoinTask.getThrowableException(ForkJoinTask.java:593)\r\n        at java.util.concurrent.ForkJoinTask.get(ForkJoinTask.java:1005)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:462)\r\n        at com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:315)\r\n        at com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:454)\r\n        at com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:115)\r\nCaused by: java.lang.RuntimeException: host C compiler or linker does not seem to work: java.lang.RuntimeException: returned 1\r\n\r\nRunning command: cc -v -o /app/home/jenkins/Ashok/kafka-listener -z noexecstack -Wl,--gc-sections -Wl,-x -static -L/tmp/SVM-3385603027518003578 -L/app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib -L/app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/svm/clibraries/linux-amd64 /tmp/SVM-3385603027518003578/kafka-listener.o /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libzip.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libnet.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libjava.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libnio.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libsunec.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libsunec.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/svm/clibraries/linux-amd64/libffi.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/svm/clibraries/linux-amd64/liblibchelper.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/svm/clibraries/linux-amd64/libjvm.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/svm/clibraries/linux-amd64/libstrictmath.a -lstdc++ -lm -lpthread -ldl -lz -lrt\r\n\r\nUsing built-in specs.\r\nCOLLECT_GCC=cc\r\nCOLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/lto-wrapper\r\nTarget: x86_64-redhat-linux\r\nConfigured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-linker-build-id --with-linker-hash-style=gnu --enable-languages=c,c++,objc,obj-c++,java,fortran,ada,go,lto --enable-plugin --enable-initfini-array --disable-libgcj --with-isl=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/isl-install --with-cloog=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/cloog-install --enable-gnu-indirect-function --with-tune=generic --with-arch_32=x86-64 --build=x86_64-redhat-linux\r\nThread model: posix\r\ngcc version 4.8.5 20150623 (Red Hat 4.8.5-39) (GCC)\r\nCOMPILER_PATH=/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/:/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/:/usr/libexec/gcc/x86_64-redhat-linux/:/usr/lib/gcc/x86_64-redhat-linux/4.8.5/:/usr/lib/gcc/x86_64-redhat-linux/\r\nLIBRARY_PATH=/usr/lib/gcc/x86_64-redhat-linux/4.8.5/:/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/:/lib/../lib64/:/usr/lib/../lib64/:/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../:/lib/:/usr/lib/\r\nCOLLECT_GCC_OPTIONS='-v' '-o' '/app/home/jenkins/Ashok/kafka-listener' '-z' 'noexecstack' '-static' '-L/tmp/SVM-3385603027518003578' '-L/app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib' '-L/app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/svm/clibraries/linux-amd64' '-mtune=generic' '-march=x86-64'\r\n /usr/libexec/gcc/x86_64-redhat-linux/4.8.5/collect2 --build-id --no-add-needed --hash-style=gnu -m elf_x86_64 -static -o /app/home/jenkins/Ashok/kafka-listener -z noexecstack /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crti.o /usr/lib/gcc/x86_64-redhat-linux/4.8.5/crtbeginT.o -L/tmp/SVM-3385603027518003578 -L/app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib -L/app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/svm/clibraries/linux-amd64 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../.. --gc-sections -x /tmp/SVM-3385603027518003578/kafka-listener.o /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libzip.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libnet.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libjava.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libnio.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libsunec.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libsunec.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/svm/clibraries/linux-amd64/libffi.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/svm/clibraries/linux-amd64/liblibchelper.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/svm/clibraries/linux-amd64/libjvm.a /app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/svm/clibraries/linux-amd64/libstrictmath.a -lstdc++ -lm -lpthread -ldl -lz -lrt --start-group -lgcc -lgcc_eh -lc --end-group /usr/lib/gcc/x86_64-redhat-linux/4.8.5/crtend.o /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crtn.o\r\n/tmp/SVM-3385603027518003578/kafka-listener.o:(.data+0x0): warning: Using 'dlopen' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking\r\n/usr/bin/ld: cannot find -lz\r\n/app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libnio.a(UnixNativeDispatcher.o): In function `Java_sun_nio_fs_UnixNativeDispatcher_getgrgid':\r\n/opt/jprt/T/P1/094513.buildslave/s/jdk/src/solaris/native/sun/nio/fs/UnixNativeDispatcher.c:1037: warning: Using 'getgrgid_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking\r\n/app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libnio.a(UnixNativeDispatcher.o): In function `prepAttributes':\r\n/opt/jprt/T/P1/094513.buildslave/s/jdk/src/solaris/native/sun/nio/fs/UnixNativeDispatcher.c:444: warning: Using 'getgrnam_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking\r\n/tmp/SVM-3385603027518003578/kafka-listener.o:(.data+0x1058): warning: Using 'getpwuid' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking\r\n/app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libnio.a(UnixNativeDispatcher.o): In function `prepAttributes':\r\n/opt/jprt/T/P1/094513.buildslave/s/jdk/src/solaris/native/sun/nio/fs/UnixNativeDispatcher.c:443: warning: Using 'getpwnam_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking\r\n/opt/jprt/T/P1/094513.buildslave/s/jdk/src/solaris/native/sun/nio/fs/UnixNativeDispatcher.c:443: warning: Using 'getpwuid_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking\r\n/app/home/jenkins/graalvm-ce-java8-19.3.1/jre/lib/libnet.a(Inet4AddressImpl.o): In function `Java_java_net_Inet4AddressImpl_lookupAllHostAddr':\r\n/opt/jprt/T/P1/094513.buildslave/s/jdk/src/solaris/native/java/net/Inet4AddressImpl.c:418: warning: Using 'getaddrinfo' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking\r\ncollect2: error: ld returned 1 exit status\r\n\r\n        at com.oracle.svm.hosted.image.NativeBootImageViaCC.write(NativeBootImageViaCC.java:388)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:652)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:445)\r\n        at java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1386)\r\n        at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n        at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n        at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n        at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nError: Image build request failed with exit status 1\r\n\r\n```\r\n</details>\r\n", "url": "https://github.com/oracle/graal/issues/2175", "user": "ashokmarappan", "labels": ["bug", "native-image"], "created": "2020-02-21 14:56:52", "closed": "2020-02-24 09:44:16", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "[native-image]com.oracle.svm.core.util.VMError$HostedError: class com.sun.xml.internal.bind.v2.ContextFactory not found on Windows", "body": "Tested with graalvm-ce-java11-20.0.0-dev.\r\n\r\n`D:\\games>native-image -jar jar\\graalvm\\game.jar native\\game --verbose --no-fallback --static -H:+ReportExceptionStackTraces -cp \"jmod\\jaxb\\jaxb-runtime-2.3.2.jar;jmod\\jaxb\\jakarta.xml.bind-api-2.3.2.jar;jmod\\jaxb\\txw2-2.3.2.jar;jmod\\jaxb\\stax-ex-1.8.1.jar;jmod\\jaxb\\FastInfoset-1.2.16.jar;jmod\\jaxb\\istack-commons-runtime-3.0.8.jar;jmod\\jaxb\\jakarta.activation-api-1.2.1.jar\"\r\nExecuting [\r\nE:\\Java\\graalvm-ce-java11-20.0.0-dev\\bin\\java.exe \\\r\n-XX:+UnlockExperimentalVMOptions \\\r\n-XX:+EnableJVMCI \\\r\n-Dtruffle.TrustAllTruffleRuntimeProviders=true \\\r\n-Dtruffle.TruffleRuntime=com.oracle.truffle.api.impl.DefaultTruffleRuntime \\\r\n-Dgraalvm.ForcePolyglotInvalid=true \\\r\n-Dgraalvm.locatorDisabled=true \\\r\n-Dsubstratevm.IgnoreGraalVersionCheck=true \\\r\n-Djava.lang.invoke.stringConcat=BC_SB \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.runtime=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.code=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.aarch64=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.amd64=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.meta=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.hotspot=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.services=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.common=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.code.site=ALL-UNNAMED \\\r\n--add-exports \\\r\njdk.internal.vm.ci/jdk.vm.ci.code.stack=ALL-UNNAMED \\\r\n--add-opens \\\r\njdk.internal.vm.compiler/org.graalvm.compiler.debug=ALL-UNNAMED \\\r\n--add-opens \\\r\njdk.internal.vm.compiler/org.graalvm.compiler.nodes=ALL-UNNAMED \\\r\n--add-opens \\\r\njdk.unsupported/sun.reflect=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.module=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.ref=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.reflect=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.io=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang.reflect=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang.invoke=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.lang.ref=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.net=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.nio=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.nio.file=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.security=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/javax.crypto=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.util=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/java.util.concurrent.atomic=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/sun.security.x509=ALL-UNNAMED \\\r\n--add-opens \\\r\njava.base/jdk.internal.logger=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.sdk/org.graalvm.nativeimage.impl=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.sdk/org.graalvm.polyglot=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.truffle/com.oracle.truffle.polyglot=ALL-UNNAMED \\\r\n--add-opens \\\r\norg.graalvm.truffle/com.oracle.truffle.api.impl=ALL-UNNAMED \\\r\n-XX:+UseJVMCINativeLibrary \\\r\n-Xss10m \\\r\n-Xms1g \\\r\n-Xmx14g \\\r\n-Duser.country=US \\\r\n-Duser.language=en \\\r\n-Djava.awt.headless=true \\\r\n-Dorg.graalvm.version=20.0.0-dev \\\r\n-Dorg.graalvm.config=CE \\\r\n-Dcom.oracle.graalvm.isaot=true \\\r\n-Djava.system.class.loader=com.oracle.svm.hosted.NativeImageSystemClassLoader \\\r\n-Xshare:off \\\r\n--module-path \\\r\nE:\\Java\\graalvm-ce-java11-20.0.0-dev\\lib\\truffle\\truffle-api.jar \\\r\n-javaagent:E:\\Java\\graalvm-ce-java11-20.0.0-dev\\lib\\svm\\builder\\svm.jar \\\r\n-Djdk.internal.lambda.disableEagerInitialization=true \\\r\n-Djdk.internal.lambda.eagerlyInitialize=false \\\r\n-Djava.lang.invoke.InnerClassLambdaMetafactory.initializeLambdas=false \\\r\n-cp \\\r\nE:\\Java\\graalvm-ce-java11-20.0.0-dev\\lib\\svm\\builder\\objectfile.jar;E:\\Java\\graalvm-ce-java11-20.0.0-dev\\lib\\svm\\builder\\pointsto.jar;E:\\Java\\graalvm-ce-java11-20.0.0-dev\\lib\\svm\\builder\\svm.jar \\\r\ncom.oracle.svm.hosted.NativeImageGeneratorRunner$JDK9Plus \\\r\n-imagecp \\\r\nE:\\Java\\graalvm-ce-java11-20.0.0-dev\\lib\\svm\\builder\\objectfile.jar;E:\\Java\\graalvm-ce-java11-20.0.0-dev\\lib\\svm\\builder\\pointsto.jar;E:\\Java\\graalvm-ce-java11-20.0.0-dev\\lib\\svm\\builder\\svm.jar;E:\\Java\\graalvm-ce-java11-20.0.0-dev\\lib\\svm\\library-support.jar;D:\\games\\jmod\\jaxb\\jakarta.xml.bind-api-2.3.2.jar;D:\\games\\jmod\\jaxb\\txw2-2.3.2.jar;D:\\games\\jmod\\jaxb\\istack-commons-runtime-3.0.8.jar;D:\\games\\jmod\\jaxb\\stax-ex-1.8.1.jar;D:\\games\\jmod\\jaxb\\FastInfoset-1.2.16.jar;D:\\games\\jmod\\jaxb\\jakarta.activation-api-1.2.1.jar;D:\\games\\jar\\graalvm\\game.jar;D:\\games\\jmod\\jaxb\\jaxb-runtime-2.3.2.jar \\\r\n-H:Path=D:\\games \\\r\n-H:Class=legend.Main \\\r\n-H:FallbackThreshold=0 \\\r\n-H:+StaticExecutable \\\r\n-H:+ReportExceptionStackTraces \\\r\n-H:CLibraryPath=E:\\Java\\graalvm-ce-java11-20.0.0-dev\\lib\\svm\\clibraries\\windows-amd64 \\\r\n-H:Name=native\\game\r\n]\r\n[native\\game:6096]    classlist:   1,291.69 ms,  1.21 GB\r\n[native\\game:6096]        (cap):   7,492.68 ms,  1.21 GB\r\n[native\\game:6096]        setup:   9,039.14 ms,  1.21 GB\r\n[native\\game:6096]     analysis:   6,421.41 ms,  1.46 GB\r\nFatal error: com.oracle.svm.core.util.VMError$HostedError: class com.sun.xml.internal.bind.v2.ContextFactory not found\r\n        at com.oracle.svm.core.util.VMError.guarantee(VMError.java:85)\r\n        at com.oracle.svm.core.jdk.JNIRegistrationUtil.clazz(JNIRegistrationUtil.java:78)\r\n        at com.oracle.svm.hosted.config.JAXBClassAndResourcesLoaderFeature.registerReflectionClasses(JAXBClassAndResourcesLoaderFeature.java:70)\r\n        at com.oracle.svm.hosted.config.JAXBClassAndResourcesLoaderFeature.registerJavaxXmlConfigs(JAXBClassAndResourcesLoaderFeature.java:62)\r\n        at com.oracle.svm.hosted.ReachabilityHandlerFeature.duringAnalysis(ReachabilityHandlerFeature.java:114)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.lambda$runPointsToAnalysis$8(NativeImageGenerator.java:715)\r\n        at com.oracle.svm.hosted.FeatureHandler.forEachFeature(FeatureHandler.java:63)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:715)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:530)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:445)\r\n        at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1407)\r\n        at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n        at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n        at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n        at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n        at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\nError: Image build request failed with exit status 1\r\ncom.oracle.svm.driver.NativeImage$NativeImageError: Image build request failed with exit status 1\r\n        at com.oracle.svm.driver.NativeImage.showError(NativeImage.java:1527)\r\n        at com.oracle.svm.driver.NativeImage.build(NativeImage.java:1289)\r\n        at com.oracle.svm.driver.NativeImage.performBuild(NativeImage.java:1250)\r\n        at com.oracle.svm.driver.NativeImage.main(NativeImage.java:1209)\r\n        at com.oracle.svm.driver.NativeImage$JDK9Plus.main(NativeImage.java:1707)`\r\n\r\nSpecial Note:\r\nI used the same command to compile successfully under graalvm-ce-java11-windows-amd64-19.3.1, but I will get an error when running game.exe. The error information is the same as this link: [https://github.com/oracle/graal/issues/1871]\r\n\r\nIn addition, I checked the source code of the jaxb-ri version 2.3.2 project, and I can confirm that the project does not reference the package com.sun.xml.internal.bind.v2, but instead references com.sun.xml.bind.v2, because I have paid close attention to the release of previous JDK versions, I can confirm that the package com.sun.xml.internal.bind has been removed from java11 and marked as outdated in java9 and java10, I am surprised to report this error. Repeated adjustment of the parameter test can not compile successfully multiple times, only to ask the graalvm project team to solve it.\r\n", "url": "https://github.com/oracle/graal/issues/2169", "user": "legendaryhero1981", "labels": ["bug", "native-image"], "created": "2020-02-21 07:56:56", "closed": "2020-03-30 13:25:38", "commits": {}, "ttf": 38.000277777777775, "commitsDetails": []}, {"title": "cross-compilation to Android fails due to strict compiler check", "body": "**Describe GraalVM and your environment :**\r\n - GraalVM version or commit id if built from source: **20.1-dev**\r\n - CE or EE: **CE**\r\n - Build Time or run time failure: **buld-time**\r\n - JDK version: **JDK 11**\r\n - Native compiler information:<details><summary>Run the following to capture compiler version</summary>\r\n   - In windows: `cl.exe`\r\n   - In macOS : `cc -v`\r\n   - In Linux: `gcc --version`\r\n</details>\r\n\r\ncross-compilation from Linux AMD64 for Android AArch64 fails, since NativeImageGenerator will invoke LinuxCCompilerInvoker.verifyCompiler to see if the build compiler is ok for the target.\r\nWhen using LLVM though, we don't rely on this build compiler.\r\n\r\nI propose to skip this step if the LLVM backend is used.", "url": "https://github.com/oracle/graal/issues/2166", "user": "johanvos", "labels": ["bug", "native-image"], "created": "2020-02-20 10:38:17", "closed": "2020-03-03 15:42:02", "commits": {"6105f0f58ddbf7a24c51905b8d9abae8b61c4624": {"commitGHEventType": "closed", "commitUser": "graalvmbot"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "6105f0f58ddbf7a24c51905b8d9abae8b61c4624", "commitGHEventType": "closed", "commitUser": "graalvmbot", "commitParents": ["f65c327174f4714378375a5dbd0b972760a072dd"], "nameRev": "6105f0f58ddbf7a24c51905b8d9abae8b61c4624 tags/JDK-8241231~93^2~1", "commitMessage": "Don't use the build compiler check in case LLVM backend is used.\nThis fixes #2166\n", "commitDateTime": "2020-03-02 15:59:53", "authoredDateTime": "2020-02-20 11:39:07", "commitGitStats": [{"filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "NativeImageGenerator.java", "spoonMethods": [{"spoonMethodName": "com.oracle.svm.hosted.NativeImageGenerator.setupNativeImage(java.lang.String,org.graalvm.compiler.options.OptionValues,java.util.Map,com.oracle.svm.core.JavaMainWrapper.JavaMainSupport,com.oracle.graal.pointsto.infrastructure.SubstitutionProcessor,java.util.concurrent.ForkJoinPool,org.graalvm.compiler.api.replacements.SnippetReflectionProvider,org.graalvm.compiler.debug.DebugContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6105f0f58ddbf7a24c51905b8d9abae8b61c4624"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 1, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted"], "changesInPackagesSPOON": ["com.oracle.svm.hosted.NativeImageGenerator.setupNativeImage(java.lang.String,org.graalvm.compiler.options.OptionValues,java.util.Map,com.oracle.svm.core.JavaMainWrapper.JavaMainSupport,com.oracle.graal.pointsto.infrastructure.SubstitutionProcessor,java.util.concurrent.ForkJoinPool,org.graalvm.compiler.api.replacements.SnippetReflectionProvider,org.graalvm.compiler.debug.DebugContext)"]}, {"title": "JNI can't access field of Java object", "body": "**GraalVM and environment :**\r\n - GraalVM version : **19.3.1**\r\n - **CE**\r\n - JDK version: **OpenJDK 1.8.0_242-b06** (bundled with GraalVM)\r\n - Native compiler/linker information: **clang 8.0.0** (bundled with GraalVM)\r\n\r\n - OS and OS Version: **WSL Debian on Windows 10 Pro**\r\n - The output of `java -Xinternalversion`: \r\n```\r\nOpenJDK 64-Bit GraalVM CE 19.3.1 (25.242-b06-jvmci-19.3-b07) for linux-amd64 JRE (8u242), built on Jan 13 2020 23:00:49 by \"buildslave\" with gcc 7.3.0\r\n```\r\n\r\nHello!\r\n\r\nI'm trying to create a simple application that can execute some c code from a java context and interact with it (so basically JNI) but it must be portable (thanks to llvm) so GraalVM seems the best option.\r\nI've managed to make Java and C interact with each other but when I try to build an application with native-image, JNI suddenly can't interact with Java.\r\nA small repository with minimal code is available here: https://github.com/aliegeois/native-image-jni/\r\n\r\nThe relevant code is the following:\r\n- Java code:\r\n```java\r\npublic class App {\r\n\tstatic {\r\n\t\tSystem.loadLibrary(\"native\");\r\n\t}\r\n\r\n\tprivate int x = 4;\r\n\r\n\tpublic int getX() {\r\n\t\treturn x;\r\n\t}\r\n\r\n\tpublic native void change();\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tApp app = new App();\r\n\t\tSystem.out.println(\"Before JNI: x = \" + app.getX());\r\n\t\tapp.change();\r\n\t\tSystem.out.println(\"After JNI: x = \" + app.getX());\r\n\t}\r\n}\r\n```\r\n- C code:\r\n```c\r\n#include \"App.h\"\r\n\r\nJNIEXPORT void JNICALL Java_App_change(JNIEnv *env, jobject thisObject)\r\n{\r\n\tjclass thisObjectClass = (*env)->GetObjectClass(env, thisObject);\r\n\tjfieldID xField = (*env)->GetFieldID(env, thisObjectClass, \"x\", \"I\");\r\n\r\n\t(*env)->SetIntField(env, thisObject, xField, 7);\r\n}\r\n```\r\n\r\nThen I build the app with native-image (no problem) and an executable is created.\r\nBut when I start it I have the following error:\r\n\r\n```\r\nnative-image-jni$ ./app\r\nBefore JNI: x = 4\r\nException in thread \"main\" java.lang.NoSuchFieldError: App.x\r\n        at com.oracle.svm.jni.functions.JNIFunctions$Support.getFieldID(JNIFunctions.java:1041)\r\n        at com.oracle.svm.jni.functions.JNIFunctions.GetFieldID(JNIFunctions.java:393)\r\n        at App.change(App.java)\r\n        at App.main(App.java:17)\r\n```\r\n\r\nI have the following `jni-config.json` to indicate which fields can be accessed/modified:\r\n```json\r\n[\r\n\t{\r\n\t\t\"name\": \"App\",\r\n\t\t\"fields\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"x\",\r\n\t\t\t\t\"allowWrite\": true\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n]\r\n```\r\n\r\nWithout native-image the code is executed correctly:\r\n```\r\nnative-image-jni$ java -cp . -Djava.library.path=. App\r\nBefore JNI: x = 4\r\nAfter JNI: x = 7\r\n```\r\n\r\nI'm a bit lost so I'm looking for advice on how to make all of this work.\r\n\r\nThanks", "url": "https://github.com/oracle/graal/issues/2163", "user": "aliegeois", "labels": ["bug", "native-image"], "created": "2020-02-19 15:56:16", "closed": "2020-03-26 22:36:23", "commits": {}, "ttf": 36.000277777777775, "commitsDetails": []}, {"title": "MacOS native image calling JNI code: passed in argument to JNI call always passed as 0", "body": "**Describe GraalVM and your environment :**\r\n - GraalVM version or commit id if built from source: **19.3.1, 20.1.0-dev**\r\n - CE or EE: **CE**\r\n - Build Time or run time failure: **run-time**\r\n - JDK version: **JDK8 and JDK11**\r\n - Native compiler information:<details><summary>Run the following to capture compiler version</summary>\r\n   - In windows: `cl.exe`\r\n   - In macOS : `cc -v`\r\n   - In Linux: `gcc --version`\r\n</details>\r\n\r\n```\r\nApple LLVM version 10.0.0 (clang-1000.11.45.2)\r\nTarget: x86_64-apple-darwin17.7.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode-10.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\n```\r\n - Native linker information:<details><summary>Run the following to capture linker version</summary>\r\n   - In windows: `cl.exe`\r\n   - In macOS : `cc -Wl,-v`\r\n   - In Linux: `gcc -Wl,--version`\r\n</details>\r\n\r\n```\r\n@(#)PROGRAM:ld  PROJECT:ld64-302.3\r\nconfigured to support archs: armv6 armv7 armv7s arm64 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em (tvOS)\r\nLibrary search paths:\r\n\t/usr/lib\r\n\t/usr/local/lib\r\nFramework search paths:\r\n\t/Library/Frameworks/\r\n\t/System/Library/Frameworks/\r\nUndefined symbols for architecture x86_64:\r\n  \"_main\", referenced from:\r\n     implicit entry/start for main executable\r\nld: symbol(s) not found for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\n - OS and OS Version: **Mac OS X 10.13.6 17G65 (Circle CI mac build node)**\r\n - Architecture: **AMD64**\r\n - The output of `java -Xinternalversion`: \r\n```\r\nJava HotSpot(TM) 64-Bit Server VM (25.181-b13) for bsd-amd64 JRE (1.8.0_181-b13), built on Jul  7 2018 01:02:31 by \"java_re\" with gcc 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)\r\n```\r\n\r\n**Have you verified this issue still happens when using the latest snapshot?**\r\nYes. Happens on all MacOS native-images up to and including 20.1.0-dev\r\n\r\n**Describe the issue**\r\n~~JNI code writing to Unix domain sockets, when called from a graal native-image on MacOS, always writes 0 bytes.~~\r\nJNI call on native-image on MacOS gets argument passed always as 0 when it shouldn't be:\r\n\r\n```\r\nJNIEXPORT jint JNICALL Java_SocketTest_unix_1socket_1write\r\n  (JNIEnv *env, jclass this, jint fd, jbyteArray buf, jint count)\r\n```\r\n\r\nThe final `jint` argument `count` is always passed a `0`. (note: the first jint arg `fd` is passed correctly)\r\n\r\n On MacOS the code works when running on the JVM, but fails when run as a native-image.\r\nThe code works on Linux, on both the JVM and as a native image.\r\n\r\n**Describe the full native-image command**\r\n<details><summary>Capture full native-image command by running with the `--verbose` flag e.g.:</summary>\r\n\r\n```\r\nbin/native-image \\\r\n        -jar SocketTest.jar \\\r\n        -H:Name=sockettest \\\r\n        -H:+ReportExceptionStackTraces \\\r\n        -H:ConfigurationFileDirectories=config-dir \\\r\n        --initialize-at-build-time \\\r\n        --verbose \\\r\n        --no-fallback \\\r\n        --no-server \\\r\n        \"-J-Xmx1g\"\r\n```\r\n</details>\r\n\r\n```\r\njavac src/SocketTest.java\r\ncd src && jar cfm ../SocketTest.jar manifest.txt SocketTest.class\r\ncd src && javah -o SocketTest.h -cp ./ SocketTest\r\ncc -I/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/include -I/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/include/darwin -I. -dynamiclib -undefined suppress -flat_namespace src/SocketTest.c -o libSocketTest.dylib -fPIC\r\n/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/bin/native-image \\\r\n        -jar SocketTest.jar \\\r\n        -H:Name=sockettest \\\r\n        -H:+ReportExceptionStackTraces \\\r\n        -H:ConfigurationFileDirectories=config-dir \\\r\n        --initialize-at-build-time \\\r\n        --verbose \\\r\n        --no-fallback \\\r\n        --no-server \\\r\n        \"-J-Xmx1g\"\r\nExecuting [\r\n/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/bin/java \\\r\n-XX:+UnlockExperimentalVMOptions \\\r\n-XX:+EnableJVMCI \\\r\n-Dtruffle.TrustAllTruffleRuntimeProviders=true \\\r\n-Dtruffle.TruffleRuntime=com.oracle.truffle.api.impl.DefaultTruffleRuntime \\\r\n-Dgraalvm.ForcePolyglotInvalid=true \\\r\n-Dgraalvm.locatorDisabled=true \\\r\n-d64 \\\r\n-XX:-UseJVMCIClassLoader \\\r\n-XX:+UseJVMCINativeLibrary \\\r\n-Xss10m \\\r\n-Xms1g \\\r\n-Xmx6871947672 \\\r\n-Duser.country=US \\\r\n-Duser.language=en \\\r\n-Dorg.graalvm.version=19.3.1 \\\r\n-Dorg.graalvm.config=CE \\\r\n-Dcom.oracle.graalvm.isaot=true \\\r\n-Djvmci.class.path.append=/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/jvmci/graal.jar \\\r\n-javaagent:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/svm.jar \\\r\n-Djdk.internal.lambda.disableEagerInitialization=true \\\r\n-Djdk.internal.lambda.eagerlyInitialize=false \\\r\n-Djava.lang.invoke.InnerClassLambdaMetafactory.initializeLambdas=false \\\r\n-Xmx1g \\\r\n-Xbootclasspath/a:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/boot/graal-sdk.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/boot/graaljs-scriptengine.jar \\\r\n-cp \\\r\n/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/graal-llvm.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/javacpp-shadowed.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/llvm-platform-specific-shadowed.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/llvm-wrapper-shadowed.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/objectfile.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/pointsto.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/svm-llvm.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/svm.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/jvmci/graal-management.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/jvmci/graal.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/jvmci/jvmci-api.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/jvmci/jvmci-hotspot.jar \\\r\ncom.oracle.svm.hosted.NativeImageGeneratorRunner \\\r\n-imagecp \\\r\n/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/boot/graal-sdk.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/boot/graaljs-scriptengine.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/graal-llvm.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/javacpp-shadowed.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/llvm-platform-specific-shadowed.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/llvm-wrapper-shadowed.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/objectfile.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/pointsto.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/svm-llvm.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/svm.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/jvmci/graal-management.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/jvmci/graal.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/jvmci/jvmci-api.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/jvmci/jvmci-hotspot.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/library-support.jar:/Users/distiller/project/SocketTest.jar \\\r\n-H:Path=/Users/distiller/project \\\r\n-H:Class=SocketTest \\\r\n-H:+ReportExceptionStackTraces \\\r\n-H:ConfigurationFileDirectories=config-dir \\\r\n-H:ClassInitialization=:build_time \\\r\n-H:FallbackThreshold=0 \\\r\n-H:CLibraryPath=/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/clibraries/darwin-amd64 \\\r\n-H:Name=sockettest\r\n]\r\n[sockettest:658]    classlist:   2,609.97 ms\r\n[sockettest:658]        (cap):   2,352.17 ms\r\n[sockettest:658]        setup:   4,091.46 ms\r\n[sockettest:658]   (typeflow):   4,852.49 ms\r\n[sockettest:658]    (objects):   4,295.98 ms\r\n[sockettest:658]   (features):     218.70 ms\r\n[sockettest:658]     analysis:   9,509.99 ms\r\n[sockettest:658]     (clinit):     145.00 ms\r\n[sockettest:658]     universe:     467.81 ms\r\n[sockettest:658]      (parse):   1,066.00 ms\r\n[sockettest:658]     (inline):   1,890.51 ms\r\n[sockettest:658]    (compile):   6,216.90 ms\r\n[sockettest:658]      compile:   9,636.61 ms\r\n[sockettest:658]        image:     727.41 ms\r\n[sockettest:658]        write:     244.79 ms\r\n[sockettest:658]      [total]:  27,775.94 ms\r\nrm -f socket; \\\r\n    nc -l -U socket & \\\r\n    sleep 5; \\\r\n    LD_LIBRARY_PATH=./ ./sockettest\r\nHello world; this is C talking!\r\nopened fd: 3\r\nwriting to fd...\r\nbytes written (should be 14): 0\r\nclosed fd: 3\r\nTest FAILED!\r\n```\r\n\r\n**Code snippet or code repository that reproduces the issue**\r\nI've setup a repo reducing the expression of the problem to the barest minimum.\r\n```\r\nhttps://github.com/epiccastle/graal-jni-unix-socket-test\r\n```\r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\n1. git clone git@github.com:epiccastle/graal-jni-unix-socket-test.git\r\n2. cd graal-jni-unix-socket-test\r\n3. make run-native-test GRAALVM=$GRAALVM_HOME\r\n\r\n**Expected behavior**\r\nThe test should pass. 14 bytes should be written to the socket. Instead 0 bytes are written.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here. Specially important are stack traces or log output. Feel free to link to gists or to screenshots if necesary\r\n<details><summary>Details</summary>\r\n\r\n```\r\nCI builds of this test code on both JVM and native image on all the graal versions and linux, too:\r\nhttps://circleci.com/gh/epiccastle/graal-jni-unix-socket-test/tree/master\r\n```\r\n</details>\r\n", "url": "https://github.com/oracle/graal/issues/2152", "user": "retrogradeorbit", "labels": ["bug", "native-image"], "created": "2020-02-13 15:30:46", "closed": "2020-02-17 09:59:24", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Native-image-maven-plugin does not work in Windows", "body": "Hello, I am having trouble while compiling springboot using maven v3.1.1, the error message is\r\n \r\n\r\n`Fatal error: com.oracle.svm.core.util.VMError$HostedError: Option name \"IncludeResourceBundles\" has multiple definitions: com.oracle.svm.core.jdk.LocalizationSupport$Options.IncludeResourceBundles and com.oracle.svm.core.jdk.LocalizationFeature$Options.IncludeResourceBundles\r\n\tat com.oracle.svm.core.util.VMError.shouldNotReachHere(VMError.java:66)\r\n\tat com.oracle.svm.hosted.option.HostedOptionParser.collectOptions(HostedOptionParser.java:88)\r\n\tat com.oracle.svm.hosted.option.HostedOptionParser.<init>(HostedOptionParser.java:61)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:206)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:454)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:115)`\r\n\r\n\r\nCan someone help me ?", "url": "https://github.com/oracle/graal/issues/2151", "user": "MuriloFtto", "labels": ["bug", "platform-windows"], "created": "2020-02-13 10:56:53", "closed": "2020-06-23 02:37:50", "commits": {}, "ttf": 130.00027777777777, "commitsDetails": []}, {"title": "Native-image build of application fails to successfully link on macOS graalvm-ce-java8-19.3.1", "body": "**Describe GraalVM and your environment :**\r\n - GraalVM version or commit id if built from source: **19.3.1**\r\n - CE or EE: **CE**\r\n - Build Time or run time failure: **build time**\r\n - JDK version: **JDK8**\r\n - Native compiler information:<details><summary>Run the following to capture compiler version</summary>\r\n   - In windows: `cl.exe`\r\n   - In macOS : `cc -v`\r\n   - In Linux: `gcc --version`\r\n</details>\r\n\r\n```\r\nApple LLVM version 9.0.0 (clang-900.0.38)\r\nTarget: x86_64-apple-darwin16.7.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode-9.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\n```\r\n - Native linker information:<details><summary>Run the following to capture linker version</summary>\r\n   - In windows: `cl.exe`\r\n   - In macOS : `cc -Wl,-v`\r\n   - In Linux: `gcc -Wl,--version`\r\n</details>\r\n\r\n```\r\n@(#)PROGRAM:ld  PROJECT:ld64-302.3\r\nconfigured to support archs: armv6 armv7 armv7s arm64 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em (tvOS)\r\nLibrary search paths:\r\n\t/usr/lib\r\n\t/usr/local/lib\r\nFramework search paths:\r\n\t/Library/Frameworks/\r\n\t/System/Library/Frameworks/\r\nUndefined symbols for architecture x86_64:\r\n  \"_main\", referenced from:\r\n     implicit entry/start for main executable\r\nld: symbol(s) not found for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\n - OS and OS Version: **Mac OS X 10.12.6 16G29 (Circle CI mac build node)**\r\n - Architecture: **AMD64**\r\n - The output of `java -Xinternalversion`: \r\n```\r\nJava HotSpot(TM) 64-Bit Server VM (25.152-b16) for bsd-amd64 JRE (1.8.0_152-b16), built on Sep 14 2017 02:31:13 by \"java_re\" with gcc 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)\r\n```\r\n\r\n**Have you verified this issue still happens when using the latest snapshot?**\r\nYes. Build fails.\r\nThis exact issue doesn't happen with graalvm-ce-java8-darwin-amd64-20.1.0-dev, but another issue does. On dev version the native-image fails before it even tries to link\r\n\r\n**Describe the issue**\r\nA clojure uberjar (that uses JNI to access a shared library) in trying to be built into a native-image cannot be successfully linked on a mac by graal ce versions 19.3.0 and 19.3.1\r\nBuilds ok to a binary on linux/amd64 on 19.3.1\r\n\r\n**Describe the full native-image command**\r\n<details><summary>Capture full native-image command by running with the `--verbose` flag e.g.:</summary>\r\n\r\n```\r\n~/graalvm-ce-java8-19.3.1/bin/native-image \\\r\n\t\t-jar target/uberjar/spire-$(VERSION)-standalone.jar \\\r\n\t\t-H:Name=build/spire \\\r\n\t\t-H:+ReportExceptionStackTraces \\\r\n\t\t-J-Dclojure.spec.skip-macros=true \\\r\n\t\t-J-Dclojure.compiler.direct-linking=true \\\r\n\t\t-H:ConfigurationFileDirectories=graal-configs/ \\\r\n\t\t--initialize-at-build-time \\\r\n\t\t--initialize-at-run-time=com.jcraft.jsch.PortWatcher \\\r\n\t\t-H:Log=registerResource: \\\r\n\t\t-H:EnableURLProtocols=http,https \\\r\n\t\t--verbose \\\r\n\t\t--allow-incomplete-classpath \\\r\n\t\t--no-fallback \\\r\n\t\t--no-server \\\r\n\t\t\"-J-Xmx6g\"\r\n```\r\n</details>\r\n\r\n```\r\n/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/bin/native-image \\\r\n\t\t-jar target/uberjar/spire-0.1.0-SNAPSHOT-standalone.jar \\\r\n\t\t-H:Name=build/spire \\\r\n\t\t-H:+ReportExceptionStackTraces \\\r\n\t\t-J-Dclojure.spec.skip-macros=true \\\r\n\t\t-J-Dclojure.compiler.direct-linking=true \\\r\n\t\t-H:ConfigurationFileDirectories=graal-configs/ \\\r\n\t\t--initialize-at-build-time \\\r\n\t\t--initialize-at-run-time=com.jcraft.jsch.PortWatcher \\\r\n\t\t-H:Log=registerResource: \\\r\n\t\t-H:EnableURLProtocols=http,https \\\r\n\t\t--verbose \\\r\n\t\t--allow-incomplete-classpath \\\r\n\t\t--no-fallback \\\r\n\t\t--no-server \\\r\n\t\t\"-J-Xmx6g\"\r\nExecuting [\r\n/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/bin/java \\\r\n-XX:+UnlockExperimentalVMOptions \\\r\n-XX:+EnableJVMCI \\\r\n-Dtruffle.TrustAllTruffleRuntimeProviders=true \\\r\n-Dtruffle.TruffleRuntime=com.oracle.truffle.api.impl.DefaultTruffleRuntime \\\r\n-Dgraalvm.ForcePolyglotInvalid=true \\\r\n-Dgraalvm.locatorDisabled=true \\\r\n-d64 \\\r\n-XX:-UseJVMCIClassLoader \\\r\n-XX:+UseJVMCINativeLibrary \\\r\n-Xss10m \\\r\n-Xms1g \\\r\n-Xmx6871947672 \\\r\n-Duser.country=US \\\r\n-Duser.language=en \\\r\n-Dorg.graalvm.version=19.3.1 \\\r\n-Dorg.graalvm.config=CE \\\r\n-Dcom.oracle.graalvm.isaot=true \\\r\n-Djvmci.class.path.append=/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/jvmci/graal.jar \\\r\n-javaagent:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/svm.jar \\\r\n-Djdk.internal.lambda.disableEagerInitialization=true \\\r\n-Djdk.internal.lambda.eagerlyInitialize=false \\\r\n-Djava.lang.invoke.InnerClassLambdaMetafactory.initializeLambdas=false \\\r\n-Dclojure.spec.skip-macros=true \\\r\n-Dclojure.compiler.direct-linking=true \\\r\n-Xmx6g \\\r\n-Xbootclasspath/a:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/boot/graal-sdk.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/boot/graaljs-scriptengine.jar \\\r\n-cp \\\r\n/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/graal-llvm.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/javacpp-shadowed.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/llvm-platform-specific-shadowed.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/llvm-wrapper-shadowed.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/objectfile.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/pointsto.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/svm-llvm.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/svm.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/jvmci/graal-management.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/jvmci/graal.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/jvmci/jvmci-api.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/jvmci/jvmci-hotspot.jar \\\r\ncom.oracle.svm.hosted.NativeImageGeneratorRunner \\\r\n-imagecp \\\r\n/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/boot/graal-sdk.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/boot/graaljs-scriptengine.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/graal-llvm.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/javacpp-shadowed.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/llvm-platform-specific-shadowed.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/llvm-wrapper-shadowed.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/objectfile.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/pointsto.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/svm-llvm.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/builder/svm.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/jvmci/graal-management.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/jvmci/graal.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/jvmci/jvmci-api.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/jvmci/jvmci-hotspot.jar:/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/library-support.jar:/Users/distiller/project/target/uberjar/spire-0.1.0-SNAPSHOT-standalone.jar \\\r\n-H:Path=/Users/distiller/project \\\r\n-H:Class=spire.core \\\r\n-H:+ReportExceptionStackTraces \\\r\n-H:ConfigurationFileDirectories=graal-configs/ \\\r\n-H:ClassInitialization=:build_time \\\r\n-H:ClassInitialization=com.jcraft.jsch.PortWatcher:run_time \\\r\n-H:Log=registerResource: \\\r\n\r\n-H:EnableURLProtocols=http,https \\\r\n-H:+AllowIncompleteClasspath \\\r\n-H:FallbackThreshold=0 \\\r\n-H:CLibraryPath=/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/clibraries/darwin-amd64 \\\r\n-H:Name=build/spire\r\n]\r\n[build/spire:3095]    classlist:   6,213.45 ms\r\n[build/spire:3095]        (cap):   1,948.64 ms\r\n[build/spire:3095]        setup:   3,632.68 ms\r\n[Use -Dgraal.LogFile=<path> to redirect Graal log output to a file.]\r\n[thread:17] scope: ForkJoinPool-4-worker-1\r\n  [thread:17] scope: ForkJoinPool-4-worker-1.registerResource\r\n  ServiceLoaderFeature: registerResource: META-INF/services/java.nio.file.spi.FileSystemProvider\r\n  [thread:17] scope: ForkJoinPool-4-worker-1.registerResource\r\n  ServiceLoaderFeature: registerResource: META-INF/services/com.fasterxml.jackson.core.JsonFactory\r\n  [thread:17] scope: ForkJoinPool-4-worker-1.registerResource\r\n  Resources have been added by ServiceLoaderFeature. Automatic registration can be disabled with -H:-UseServiceLoaderFeature\r\n  [thread:17] scope: ForkJoinPool-4-worker-1.registerResource\r\n  ResourcesFeature: registerResource: libspire.dylib\r\n  [thread:17] scope: ForkJoinPool-4-worker-1.registerResource\r\n  ResourcesFeature: registerResource: libsunec.dylib\r\n  [thread:17] scope: ForkJoinPool-4-worker-1.registerResource\r\n  ServiceLoaderFeature: registerResource: META-INF/services/sun.net.spi.nameservice.NameServiceDescriptor\r\n  [thread:17] scope: ForkJoinPool-4-worker-1.registerResource\r\n  Resources have been added by ServiceLoaderFeature. Automatic registration can be disabled with -H:-UseServiceLoaderFeature\r\n[build/spire:3095]   (typeflow):  42,905.22 ms\r\n[build/spire:3095]    (objects):  38,361.85 ms\r\n[build/spire:3095]   (features):   1,870.45 ms\r\n[build/spire:3095]     analysis:  84,671.96 ms\r\n[build/spire:3095]     (clinit):     691.39 ms\r\n[build/spire:3095]     universe:   1,885.24 ms\r\n[build/spire:3095]      (parse):   5,905.49 ms\r\n[build/spire:3095]     (inline):   8,226.59 ms\r\n[build/spire:3095]    (compile):  34,101.61 ms\r\n[build/spire:3095]      compile:  50,460.88 ms\r\n[build/spire:3095]        image:   4,901.90 ms\r\n[build/spire:3095]        write:     999.76 ms\r\nFatal error: java.lang.RuntimeException: java.lang.RuntimeException: host C compiler or linker does not seem to work: java.lang.RuntimeException: returned 1\r\n\r\nRunning command: cc -v -o /Users/distiller/project/build/spire -Wl,-no_compact_unwind -Wl,-exported_symbols_list -Wl,/var/folders/ms/xg67k5sn16xc7sdr_w3q45840000gn/T/SVM-8490479744702547476/exported_symbols.list -Wl,-x -arch x86_64 -L/var/folders/ms/xg67k5sn16xc7sdr_w3q45840000gn/T/SVM-8490479744702547476 -L/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib -L/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/clibraries/darwin-amd64 /var/folders/ms/xg67k5sn16xc7sdr_w3q45840000gn/T/SVM-8490479744702547476/build/spire.o /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libzip.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libnet.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libjava.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libnio.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libsunec.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libsunec.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/clibraries/darwin-amd64/libffi.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/clibraries/darwin-amd64/liblibchelper.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/clibraries/darwin-amd64/libjvm.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/clibraries/darwin-amd64/libstrictmath.a -lstdc++ -lm -Wl,-framework,CoreFoundation -lpthread -ldl -lz\r\n\r\nApple LLVM version 9.0.0 (clang-900.0.38)\r\nTarget: x86_64-apple-darwin16.7.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode-9.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\n \"/Applications/Xcode-9.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld\" -demangle -lto_library /Applications/Xcode-9.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/libLTO.dylib -dynamic -arch x86_64 -macosx_version_min 10.12.0 -o /Users/distiller/project/build/spire -L/var/folders/ms/xg67k5sn16xc7sdr_w3q45840000gn/T/SVM-8490479744702547476 -L/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib -L/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/clibraries/darwin-amd64 -no_compact_unwind -exported_symbols_list /var/folders/ms/xg67k5sn16xc7sdr_w3q45840000gn/T/SVM-8490479744702547476/exported_symbols.list -x /var/folders/ms/xg67k5sn16xc7sdr_w3q45840000gn/T/SVM-8490479744702547476/build/spire.o /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libzip.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libnet.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libjava.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libnio.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libsunec.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libsunec.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/clibraries/darwin-amd64/libffi.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/clibraries/darwin-amd64/liblibchelper.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/clibraries/darwin-amd64/libjvm.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/clibraries/darwin-amd64/libstrictmath.a -lc++ -lm -framework CoreFoundation -lpthread -ldl -lz -lSystem /Applications/Xcode-9.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/9.0.0/lib/darwin/libclang_rt.osx.a\r\nUndefined symbols for architecture x86_64:\r\n  \"_VerifyClassname\", referenced from:\r\n      _Java_sun_misc_URLClassPath_knownToNotExist0 in libjava.a(URLClassPath.o)\r\n      _Java_java_lang_ClassLoader_findBootstrapClass in libjava.a(ClassLoader.o)\r\n  \"_VerifyFixClassname\", referenced from:\r\n      _Java_sun_misc_URLClassPath_knownToNotExist0 in libjava.a(URLClassPath.o)\r\n      _Java_java_lang_ClassLoader_findBootstrapClass in libjava.a(ClassLoader.o)\r\n      _Java_java_lang_ClassLoader_defineClass2 in libjava.a(ClassLoader.o)\r\n      _Java_java_lang_ClassLoader_defineClass1 in libjava.a(ClassLoader.o)\r\nld: symbol(s) not found for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat java.util.concurrent.ForkJoinTask.getThrowableException(ForkJoinTask.java:593)\r\n\tat java.util.concurrent.ForkJoinTask.get(ForkJoinTask.java:1005)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:462)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:315)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:454)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:115)\r\nCaused by: java.lang.RuntimeException: host C compiler or linker does not seem to work: java.lang.RuntimeException: returned 1\r\n\r\nRunning command: cc -v -o /Users/distiller/project/build/spire -Wl,-no_compact_unwind -Wl,-exported_symbols_list -Wl,/var/folders/ms/xg67k5sn16xc7sdr_w3q45840000gn/T/SVM-8490479744702547476/exported_symbols.list -Wl,-x -arch x86_64 -L/var/folders/ms/xg67k5sn16xc7sdr_w3q45840000gn/T/SVM-8490479744702547476 -L/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib -L/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/clibraries/darwin-amd64 /var/folders/ms/xg67k5sn16xc7sdr_w3q45840000gn/T/SVM-8490479744702547476/build/spire.o /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libzip.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libnet.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libjava.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libnio.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libsunec.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libsunec.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/clibraries/darwin-amd64/libffi.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/clibraries/darwin-amd64/liblibchelper.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/clibraries/darwin-amd64/libjvm.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/clibraries/darwin-amd64/libstrictmath.a -lstdc++ -lm -Wl,-framework,CoreFoundation -lpthread -ldl -lz\r\n\r\nApple LLVM version 9.0.0 (clang-900.0.38)\r\nTarget: x86_64-apple-darwin16.7.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode-9.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\n \"/Applications/Xcode-9.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld\" -demangle -lto_library /Applications/Xcode-9.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/libLTO.dylib -dynamic -arch x86_64 -macosx_version_min 10.12.0 -o /Users/distiller/project/build/spire -L/var/folders/ms/xg67k5sn16xc7sdr_w3q45840000gn/T/SVM-8490479744702547476 -L/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib -L/Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/clibraries/darwin-amd64 -no_compact_unwind -exported_symbols_list /var/folders/ms/xg67k5sn16xc7sdr_w3q45840000gn/T/SVM-8490479744702547476/exported_symbols.list -x /var/folders/ms/xg67k5sn16xc7sdr_w3q45840000gn/T/SVM-8490479744702547476/build/spire.o /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libzip.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libnet.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libjava.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libnio.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libsunec.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/libsunec.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/clibraries/darwin-amd64/libffi.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/clibraries/darwin-amd64/liblibchelper.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/clibraries/darwin-amd64/libjvm.a /Users/distiller/graalvm-ce-java8-19.3.1/Contents/Home/jre/lib/svm/clibraries/darwin-amd64/libstrictmath.a -lc++ -lm -framework CoreFoundation -lpthread -ldl -lz -lSystem /Applications/Xcode-9.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/9.0.0/lib/darwin/libclang_rt.osx.a\r\nUndefined symbols for architecture x86_64:\r\n  \"_VerifyClassname\", referenced from:\r\n      _Java_sun_misc_URLClassPath_knownToNotExist0 in libjava.a(URLClassPath.o)\r\n      _Java_java_lang_ClassLoader_findBootstrapClass in libjava.a(ClassLoader.o)\r\n  \"_VerifyFixClassname\", referenced from:\r\n      _Java_sun_misc_URLClassPath_knownToNotExist0 in libjava.a(URLClassPath.o)\r\n      _Java_java_lang_ClassLoader_findBootstrapClass in libjava.a(ClassLoader.o)\r\n      _Java_java_lang_ClassLoader_defineClass2 in libjava.a(ClassLoader.o)\r\n      _Java_java_lang_ClassLoader_defineClass1 in libjava.a(ClassLoader.o)\r\nld: symbol(s) not found for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n\r\n\tat com.oracle.svm.hosted.image.NativeBootImageViaCC.write(NativeBootImageViaCC.java:388)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:652)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:445)\r\n\tat java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1386)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nError: Image build request failed with exit status 1\r\ncom.oracle.svm.driver.NativeImage$NativeImageError: Image build request failed with exit status 1\r\n\tat com.oracle.svm.driver.NativeImage.showError(NativeImage.java:1482)\r\n\tat com.oracle.svm.driver.NativeImage.build(NativeImage.java:1260)\r\n\tat com.oracle.svm.driver.NativeImage.performBuild(NativeImage.java:1222)\r\n\tat com.oracle.svm.driver.NativeImage.main(NativeImage.java:1181)\r\nmake: *** [build/spire] Error 1\r\n\r\nExited with code exit status 2\r\n```\r\n\r\n**Code snippet or code repository that reproduces the issue**\r\n```\r\nhttps://github.com/epiccastle/spire\r\n```\r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\n1. Install Leiningen (clojure build tool to make the uberjar https://leiningen.org/ )\r\n2. `git clone git@github.com:epiccastle/spire.git`\r\n3. `cd spire`\r\n4. `make clean all `\r\nor\r\n4. `make clean all GRAALVM=/path/to/graalvm/home/to/use`\r\n\r\n**Expected behavior**\r\nA native binary is produced\r\n\r\n**Additional context**\r\nAdd any other context about the problem here. Specially important are stack traces or log output. Feel free to link to gists or to screenshots if necesary\r\n\r\n* This project uses JNI. I am unsure if that is related somehow.\r\n* Also FYI: the build log for trying to build on 20.1.0-dev graal is here:\r\n  https://circleci.com/gh/epiccastle/spire/506\r\n  Note this produces a different error, but may help narrow it down?\r\n\r\n", "url": "https://github.com/oracle/graal/issues/2144", "user": "retrogradeorbit", "labels": ["bug", "native-image"], "created": "2020-02-11 07:23:26", "closed": "2020-02-20 10:41:38", "commits": {"eab7e93b585febf7c2c68948af70157732767963": {"commitGHEventType": "referenced", "commitUser": "olpaw"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "eab7e93b585febf7c2c68948af70157732767963", "commitGHEventType": "referenced", "commitUser": "olpaw", "commitParents": ["9e38150d052a467ae7e522b56497d53fb95064be"], "nameRev": "eab7e93b585febf7c2c68948af70157732767963 tags/JDK-8241231~151^2~7", "commitMessage": "Mark AccessorGenerator & MethodAccessorGenerator as @Deleted\n", "commitDateTime": "2020-02-19 11:35:00", "authoredDateTime": "2020-02-18 11:30:33", "commitGitStats": [{"filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_jdk_internal_reflect_AccessorGenerator.java", "insertions": 38, "deletions": 0, "lines": 38}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Target_jdk_internal_reflect_AccessorGenerator.java", "spoonMethods": [{"spoonMethodName": "com.oracle.svm.core.jdk.Target_jdk_internal_reflect_AccessorGenerator", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["eab7e93b585febf7c2c68948af70157732767963"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 38, "deletions": 0, "lines": 38, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk"], "changesInPackagesSPOON": ["com.oracle.svm.core.jdk.Target_jdk_internal_reflect_AccessorGenerator"]}, {"title": "[native image] crash with SIGSEGV when trying to migrate aws-java-sdk version to 2.10.56", "body": "Trying to  building the native image in codeBuild on AWS. I had upgraded aws-java-sdk version from 1.x.x to 2.10.56. The native image builds with the 1.x.x version however, an error occurs when building the native image with 2.10.56 version. I have used GraalVM version 19.0.0 and micronaut-bom: 1.1.1.\r\n\r\nThe CloudWatch logs are as below:\r\n\r\n`Warning: class initialization of class io.netty.channel.epoll.Native failed with exception java.lang.NoClassDefFoundError: Could not initialize class io.netty.channel.epoll.Native. This class will be initialized at run time because either option --report-unsupported-elements-at-runtime or option --allow-incomplete-classpath is used for image building. Use the option --delay-class-initialization-to-runtime=io.netty.channel.epoll.Native to explicitly request delayed initialization of this class.`\r\n\r\n```\r\n#  A fatal error has been detected by the Java Runtime Environment:\r\n# SIGSEGV (0xb) at pc=0x00007f8a435218e0, pid=71, tid=0x00007f89f79c0700\r\n# JRE version: OpenJDK Runtime Environment (8.0_202-b08) (build 1.8.0_202-20190206132807.buildslave.jdk8u-src-tar--b08)\r\n# Java VM: OpenJDK GraalVM CE 1.0.0-rc15 (25.202-b08-jvmci-0.58 mixed mode linux-amd64 compressed oops)\r\n# Problematic frame:\r\n# C 0x00007f8a435218e0\r\n# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try \"ulimit -c unlimited\" before starting Java again\r\n# An error report file with more information is saved as:\r\n# /codebuild/output/src666903570/src/hs_err_pid71.log\r\n# If you would like to submit a bug report, please visit:\r\n# http://bugreport.java.com/bugreport/crash.jsp\r\nError: Image build request failed with exit status 134\r\n[Container] 2020/02/07 06:45:52 Command did not exit successfully ./build-native-image.sh exit status 1\r\n[Container] 2020/02/07 06:45:52 Phase complete: BUILD State: FAILED\r\n[Container] 2020/02/07 06:45:52 Phase context status code: COMMAND_EXECUTION_ERROR Message: Error while executing command: ./build-native-image.sh. Reason: exit status 1\r\n[Container] 2020/02/07 06:45:52 Entering phase POST_BUILD\r\n[Container] 2020/02/07 06:45:52 Phase complete: POST_BUILD State: SUCCEEDED\r\n[Container] 2020/02/07 06:45:52 Phase context status code: Message:\r\n[Container] 2020/02/07 06:45:53 Expanding base directory path: .\r\n[Container] 2020/02/07 06:45:53 Assembling file list\r\n[Container] 2020/02/07 06:45:53 Expanding .\r\n[Container] 2020/02/07 06:45:53 Expanding file paths for base directory .\r\n[Container] 2020/02/07 06:45:53 Assembling file list\r\n[Container] 2020/02/07 06:45:53 Expanding ./test-function-*.zip\r\n[Container] 2020/02/07 06:45:53 Phase complete: UPLOAD_ARTIFACTS State: FAILED\r\n[Container] 2020/02/07 06:45:53 Phase context status code: CLIENT_ERROR Message: no matching artifact paths found\r\n```\r\nbuild-native-image.sh\r\n\r\n```\r\n#!/bin/sh\r\nGRAALVM_HOME=${GRAALVM_HOME:-/usr/lib/graalvm}\r\n${GRAALVM_HOME}/bin/native-image --no-server \\\r\n             --class-path test-function-custom-runtime-*.jar \\\r\n             -H:ReflectionConfigurationFiles=src/main/resources/reflect.json \\\r\n             -H:EnableURLProtocols=http \\\r\n             -H:IncludeResources=\"logback.xml|application.properties|git.properties|.*/endpoints.json$\" \\\r\n\t     -H:Log=registerResource \\\r\n\t     -H:DynamicProxyConfigurationFiles=\"dynamic-proxies.json\" \\\r\n             -H:Name=server \\\r\n             -H:Class=io.micronaut.function.aws.runtime.MicronautLambdaRuntime \\\r\n             -H:+ReportUnsupportedElementsAtRuntime \\\r\n             -H:-AllowVMInspection \\\r\n\t     --enable-https \\\r\n             --allow-incomplete-classpath \\\r\n             --rerun-class-initialization-at-runtime='sun.security.jca.JCAUtil$CachedSecureRandomHolder,javax.net.ssl.SSLContext' \\\r\n             --delay-class-initialization-to-runtime=io.netty.handler.codec.http.HttpObjectEncoder,io.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder,io.netty.handler.ssl.util.ThreadLocalInsecureRandom,com.sun.jndi.dns.DnsClient,io.micronaut.function.aws.proxy.MicronautLambdaContainerHandler,com.amazonaws.serverless.proxy.internal.LambdaContainerHandler,io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator,io.netty.handler.ssl.ReferenceCountedOpenSslEngine\r\n```\r\n\r\nP.S. If I upgrade graal and micronaut-bom version to 1.2.10 and graal verison 19.2.1, the native image is successfully created but when I try to access an application endpoint, it fails for below exception: `error failed: org.apache.commons.logging.LogFactoryjava.lang.NoClassDefFoundError: org.apache.commons.logging.LogFactory and series of exceptions with specifically while creating S3 client and  lambda client.`\r\n\r\nThe exception also had failure at below point:\r\n`failed: Could not initialize class software.amazon.awssdk.http.apache.internal.conn.SdkTlsSocketFactoryjava.lang.NoClassDefFoundError: Could not initialize class software.amazon.awssdk.http.apache.internal.conn.SdkTlsSocketFactory`\r\n\r\n\r\nAny help is appreciated!", "url": "https://github.com/oracle/graal/issues/2138", "user": "nikitakakra", "labels": ["bug", "native-image"], "created": "2020-02-10 08:02:19", "closed": "2020-02-13 18:52:54", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "[native-image] Startup time of native compiled with graalvm 20.1-dev is noticably slower than 19.3.0 on macOS", "body": "Given a simple class like:\r\n\r\n``` java\r\npublic class Foo {\r\n\r\n    public static void main(String [] args) {\r\n        System.out.println(\"Hello\");\r\n    }\r\n}\r\n```\r\n\r\n```\r\n$ javac Foo.java\r\n\r\n$ brew install Tenzer/tap/multitime\r\n\r\n$ export GRAALVM_HOME=/Users/borkdude/Downloads/graalvm-ce-java8-19.3.0/Contents/Home\r\n$GRAALVM_HOME/bin/native-image Foo --no-server\r\n$ multitime -n100 ./foo\r\n\r\n===> multitime results\r\n1: ./foo\r\n            Mean        Std.Dev.    Min         Median      Max\r\nreal        0.007       0.001       0.005       0.008       0.009\r\nuser        0.002       0.000       0.002       0.002       0.003\r\nsys         0.002       0.000       0.001       0.002       0.004\r\n\r\n$ export GRAALVM_HOME=/Users/borkdude/Downloads/graalvm-ce-java8-20.1.0-dev/Contents/Home\r\n$GRAALVM_HOME/bin/native-image Foo --no-server\r\n$ multitime -n100 ./foo\r\n\r\n===> multitime results\r\n1: ./foo\r\n            Mean        Std.Dev.    Min         Median      Max\r\nreal        0.015       0.001       0.011       0.015       0.016\r\nuser        0.007       0.001       0.005       0.007       0.008\r\nsys         0.005       0.000       0.004       0.005       0.006\r\n```\r\n\r\nI noticed this when trying out 20.1-dev jdk8 with [babashka](https://github.com/borkdude/babashka/), a scripting tool made with GraalVM. On GraalVM 19.3.0 java8 it has a startup time of around 14ms, but when I was trying GraalVM 20.1-dev it became 24ms which is 10ms slower.\r\n\r\n```\r\n$ export GRAALVM_HOME=/Users/borkdude/Downloads/graalvm-ce-java8-19.3.0/Contents/Home\r\n$ script/compile \r\n$ multitime -n100 ./bb '(System/getProperty \"java.vm.version\")'\r\n\r\n===> multitime results\r\n1: ./bb \"(System/getProperty \\\"java.vm.version\\\")\"\r\n            Mean        Std.Dev.    Min         Median      Max\r\nreal        0.014       0.001       0.012       0.014       0.016\r\nuser        0.005       0.000       0.004       0.005       0.006\r\nsys         0.006       0.001       0.004       0.006       0.008\r\n\r\n$ export GRAALVM_HOME=/Users/borkdude/Downloads/graalvm-ce-java8-20.1.0-dev/Contents/Home\r\n$ script/compile \r\n$ multitime -n100 ./bb '(System/getProperty \"java.vm.version\")'\r\n\r\n===> multitime results\r\n1: ./bb \"(System/getProperty \\\"java.vm.version\\\")\"\r\n            Mean        Std.Dev.    Min         Median      Max\r\nreal        0.024       0.002       0.018       0.024       0.026\r\nuser        0.011       0.001       0.008       0.011       0.011\r\nsys         0.010       0.001       0.007       0.010       0.012\r\n```\r\n\r\nTo build babashka:\r\n\r\n```\r\n$ git clone https://github.com/borkdude/babashka --recursive\r\n```\r\n\r\nInstall [lein](https://github.com/technomancy/leiningen), a Clojure build tool.\r\n\r\nSet `GRAALVM_HOME` to either 19 or 20 with java8.\r\n\r\nThen run `script/compile` (on linux or macos).\r\n\r\nThis will produce a  `bb` executable.\r\n\r\n", "url": "https://github.com/oracle/graal/issues/2136", "user": "borkdude", "labels": ["bug", "native-image"], "created": "2020-02-08 22:01:55", "closed": "2020-03-06 00:25:50", "commits": {}, "ttf": 26.00027777777778, "commitsDetails": []}, {"title": "[native image]BufferOverFlowException when build", "body": "OS: Windows 10 64bit\r\nGraalVM : ee-java8-19.3.1\r\noutput:\r\n[server:20488]    classlist:   9,735.83 ms\r\n[server:20488]        (cap):   3,488.14 ms\r\n[server:20488]        setup:   6,038.86 ms\r\n[server:20488]   (typeflow):  71,208.39 ms\r\n[server:20488]    (objects):  37,012.61 ms\r\n[server:20488]   (features):   8,344.66 ms\r\n[server:20488]     analysis: 121,588.52 ms\r\n[server:20488]     (clinit):   1,825.38 ms\r\n8954 method(s) included for runtime compilation\r\n[server:20488]     universe:   5,660.79 ms\r\n[server:20488]      (parse):   7,115.10 ms\r\n[server:20488]     (inline):  19,638.45 ms\r\n[server:20488]    (compile):  63,902.86 ms\r\n[server:20488]      compile:  96,801.57 ms\r\n[server:20488]        image:  10,511.17 ms\r\n[server:20488]        write:     124.31 ms\r\nFatal error: com.oracle.svm.core.util.VMError$HostedError: java.nio.BufferOverflowException\r\n        at com.oracle.svm.core.util.VMError.shouldNotReachHere(VMError.java:70)\r\n        at com.oracle.svm.hosted.image.NativeBootImage.write(NativeBootImage.java:141)\r\n        at com.oracle.svm.hosted.image.NativeBootImageViaCC.write(NativeBootImageViaCC.java:329)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:652)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:445)\r\n        at java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1386)\r\n        at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n        at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n        at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n        at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: java.nio.BufferOverflowException\r\n        at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:363)\r\n        at java.nio.ByteBuffer.put(ByteBuffer.java:859)\r\n        at com.oracle.objectfile.ObjectFile.writeBuffer(ObjectFile.java:1611)\r\n        at com.oracle.objectfile.ObjectFile.write(ObjectFile.java:1207)\r\n        at com.oracle.svm.hosted.image.NativeBootImage.write(NativeBootImage.java:139)\r\n        ... 8 more\r\nError: Image build request failed with exit status 1\r\n\r\nBy the way, the recently build snapshot is not usable for windows which the system default code page is not 437, because native-image try to detected the msvc version by exec cl.exe but the output is different in different code page.\r\n\r\n", "url": "https://github.com/oracle/graal/issues/2134", "user": "kangzq0530", "labels": ["bug", "native-image"], "created": "2020-02-08 14:16:49", "closed": "2020-04-24 05:26:00", "commits": {}, "ttf": 75.00027777777778, "commitsDetails": []}, {"title": "Does reading a file, then closing it (its e.g. InputStream), really have to be delayed in static initialization?", "body": "**Describe GraalVM and your environment :**\r\n - GraalVM version or commit id if built from source: **oracle/graalvm-ce:19.3.1-java11**\r\n - CE or EE: **CE**\r\n - Build Time or run time failure: **build-time**\r\n - JDK version: **JDK11**\r\n\r\nIt appears I cannot read and close a file during static build time initialization.\r\n\r\nThis is extremely valuable for deserialization of resources. It would, on the face of it, be side-effect free, in all ways that actually matter.\r\n\r\n**Code snippet or code repository that reproduces the issue**\r\n\r\nGraal is being evaluated for a game server to distribute opponent AI move calculations to a lambda / serverless function.\r\n\r\nThis snippet is an example of something in a static initializer that will fail:\r\n\r\n```\r\nFiles.newInputStream(filename);\r\n```\r\n\r\nThis command is used to build the entire application. It static initializes the minimum number of classes to load the contents of the `CardCatalogue` (this is a digital card game), which is JSON resources that get deserialized into objects living in static fields.\r\n\r\n**native-image command**:\r\n```\r\nnative-image \\\r\n    --no-server \\\r\n    --no-fallback \\\r\n    --initialize-at-build-time=com.hiddenswitch.spellsource.micro.BotsController,com.hiddenswitch.spellsource.core.JsonConfiguration,io.vertx.core.json,net.demilich,com.google.common.base.Preconditions,com.google.common.base.Ascii,com.google.common.base.CharMatcher,com.google.common.base.CharMatcher\\$InRange,com.google.common.base.CharMatcher\\$Is,com.google.common.base.CharMatcher\\$FastMatcher,com.google.common.base.CaseFormat,com.google.common.base.CaseFormat\\$3,com.google.common.base.CaseFormat\\$1,com.google.common.base.CaseFormat\\$4,com.google.common.base.CaseFormat\\$2,com.google.common.base.CaseFormat\\$5 \\\r\n    --static \\\r\n    -H:+TraceClassInitialization \\\r\n    -H:ReflectionConfigurationFiles=src/main/resources/META-INF/native-image/com.hiddenswitch.spellsource/micro/reflect-config.json \\\r\n    -H:DynamicProxyConfigurationFiles=src/main/resources/META-INF/native-image/com.hiddenswitch.spellsource/micro/proxy-config.json \\\r\n    -H:ResourceConfigurationFiles=src/main/resources/META-INF/native-image/com.hiddenswitch.spellsource/micro/resource-config.json \\\r\n    -H:IncludeResources=src/main/resources/logback.xml,src/main/resources/application.yml \\\r\n    -H:Name=micro \\\r\n    -H:Class=com.hiddenswitch.spellsource.micro.Application \\\r\n    -cp build/libs/micro-*-all.jar\r\n[micro:24]    classlist:  15,815.97 ms\r\n[micro:24]        (cap):     933.89 ms\r\n[micro:24]        setup:   2,595.66 ms\r\n[micro:24]   (typeflow):  48,959.93 ms\r\n[micro:24]    (objects):  40,088.24 ms\r\n[micro:24]   (features):  11,194.89 ms\r\n[micro:24]     analysis: 104,896.55 ms\r\nError: Unsupported features in 5 methods\r\nDetailed message:\r\nError: Detected a direct Buffer in the image heap. A direct Buffer has a pointer to unmanaged C memory, and C memory from the image generator is not available at image run time.  Object has been initialized without the native-image initialization instrumentation and the stack trace can't be tracked. The object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image run time by using the option --initialize-at-build-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nTrace: \tobject jdk.internal.jimage.ImageReader$SharedImageReader\r\n\tobject jdk.internal.jimage.ImageReader\r\n\tmethod jdk.internal.module.SystemModuleFinders$SystemImage.reader()\r\nCall path from entry point to jdk.internal.module.SystemModuleFinders$SystemImage.reader(): \r\n\tat jdk.internal.module.SystemModuleFinders$SystemImage.reader(SystemModuleFinders.java:385)\r\n\tat jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator.next(SystemModuleFinders.java:526)\r\n\tat jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator.tryAdvance(SystemModuleFinders.java:549)\r\n\tat java.util.Spliterators$1Adapter.hasNext(Spliterators.java:681)\r\n\tat com.google.common.collect.TransformedIterator.hasNext(TransformedIterator.java:42)\r\n\tat com.oracle.svm.jni.access.JNIReflectionDictionary.unsetEntryPoints(JNIReflectionDictionary.java:149)\r\n\tat com.oracle.svm.jni.functions.JNIFunctions.UnregisterNatives(JNIFunctions.java:362)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.JNIFunctions_UnregisterNatives_07af9442aa98f893dd700b47b363fa08a3f7e240(generated:0)\r\nError: Detected a direct Buffer in the image heap. A direct Buffer has a pointer to unmanaged C memory, and C memory from the image generator is not available at image run time.  Object has been initialized without the native-image initialization instrumentation and the stack trace can't be tracked. The object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image run time by using the option --initialize-at-build-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nTrace: \tobject jdk.internal.jimage.ImageReader$SharedImageReader\r\n\tobject jdk.internal.jimage.ImageReader\r\n\tmethod jdk.internal.module.SystemModuleFinders$SystemImage.reader()\r\nCall path from entry point to jdk.internal.module.SystemModuleFinders$SystemImage.reader(): \r\n\tat jdk.internal.module.SystemModuleFinders$SystemImage.reader(SystemModuleFinders.java:385)\r\n\tat jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator.next(SystemModuleFinders.java:526)\r\n\tat jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator.tryAdvance(SystemModuleFinders.java:549)\r\n\tat java.util.Spliterators$1Adapter.hasNext(Spliterators.java:681)\r\n\tat com.google.common.collect.TransformedIterator.hasNext(TransformedIterator.java:42)\r\n\tat com.oracle.svm.jni.access.JNIReflectionDictionary.unsetEntryPoints(JNIReflectionDictionary.java:149)\r\n\tat com.oracle.svm.jni.functions.JNIFunctions.UnregisterNatives(JNIFunctions.java:362)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.JNIFunctions_UnregisterNatives_07af9442aa98f893dd700b47b363fa08a3f7e240(generated:0)\r\nError: Detected a direct/mapped ByteBuffer in the image heap. A direct ByteBuffer has a pointer to unmanaged C memory, and C memory from the image generator is not available at image run time. A mapped ByteBuffer references a file descriptor, which is no longer open and mapped at run time.  Object has been initialized without the native-image initialization instrumentation and the stack trace can't be tracked. The object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image run time by using the option --initialize-at-build-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nTrace: \tobject jdk.internal.jimage.ImageReader$SharedImageReader\r\n\tobject jdk.internal.jimage.ImageReader\r\n\tmethod jdk.internal.module.SystemModuleFinders$SystemImage.reader()\r\nCall path from entry point to jdk.internal.module.SystemModuleFinders$SystemImage.reader(): \r\n\tat jdk.internal.module.SystemModuleFinders$SystemImage.reader(SystemModuleFinders.java:385)\r\n\tat jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator.next(SystemModuleFinders.java:526)\r\n\tat jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator.tryAdvance(SystemModuleFinders.java:549)\r\n\tat java.util.Spliterators$1Adapter.hasNext(Spliterators.java:681)\r\n\tat com.google.common.collect.TransformedIterator.hasNext(TransformedIterator.java:42)\r\n\tat com.oracle.svm.jni.access.JNIReflectionDictionary.unsetEntryPoints(JNIReflectionDictionary.java:149)\r\n\tat com.oracle.svm.jni.functions.JNIFunctions.UnregisterNatives(JNIFunctions.java:362)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.JNIFunctions_UnregisterNatives_07af9442aa98f893dd700b47b363fa08a3f7e240(generated:0)\r\nError: Detected a direct/mapped ByteBuffer in the image heap. A direct ByteBuffer has a pointer to unmanaged C memory, and C memory from the image generator is not available at image run time. A mapped ByteBuffer references a file descriptor, which is no longer open and mapped at run time.  Object has been initialized without the native-image initialization instrumentation and the stack trace can't be tracked. The object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image run time by using the option --initialize-at-build-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nTrace: \tobject jdk.internal.jimage.ImageReader$SharedImageReader\r\n\tobject jdk.internal.jimage.ImageReader\r\n\tmethod jdk.internal.module.SystemModuleFinders$SystemImage.reader()\r\nCall path from entry point to jdk.internal.module.SystemModuleFinders$SystemImage.reader(): \r\n\tat jdk.internal.module.SystemModuleFinders$SystemImage.reader(SystemModuleFinders.java:385)\r\n\tat jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator.next(SystemModuleFinders.java:526)\r\n\tat jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator.tryAdvance(SystemModuleFinders.java:549)\r\n\tat java.util.Spliterators$1Adapter.hasNext(Spliterators.java:681)\r\n\tat com.google.common.collect.TransformedIterator.hasNext(TransformedIterator.java:42)\r\n\tat com.oracle.svm.jni.access.JNIReflectionDictionary.unsetEntryPoints(JNIReflectionDictionary.java:149)\r\n\tat com.oracle.svm.jni.functions.JNIFunctions.UnregisterNatives(JNIFunctions.java:362)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.JNIFunctions_UnregisterNatives_07af9442aa98f893dd700b47b363fa08a3f7e240(generated:0)\r\nError: Detected a direct/mapped ByteBuffer in the image heap. A direct ByteBuffer has a pointer to unmanaged C memory, and C memory from the image generator is not available at image run time. A mapped ByteBuffer references a file descriptor, which is no longer open and mapped at run time.  Object has been initialized without the native-image initialization instrumentation and the stack trace can't be tracked. The object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image run time by using the option --initialize-at-build-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nTrace: \tobject jdk.internal.jimage.ImageReader$SharedImageReader\r\n\tobject jdk.internal.jimage.ImageReader\r\n\tmethod jdk.internal.module.SystemModuleFinders$SystemImage.reader()\r\nCall path from entry point to jdk.internal.module.SystemModuleFinders$SystemImage.reader(): \r\n\tat jdk.internal.module.SystemModuleFinders$SystemImage.reader(SystemModuleFinders.java:385)\r\n\tat jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator.next(SystemModuleFinders.java:526)\r\n\tat jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator.tryAdvance(SystemModuleFinders.java:549)\r\n\tat java.util.Spliterators$1Adapter.hasNext(Spliterators.java:681)\r\n\tat com.google.common.collect.TransformedIterator.hasNext(TransformedIterator.java:42)\r\n\tat com.oracle.svm.jni.access.JNIReflectionDictionary.unsetEntryPoints(JNIReflectionDictionary.java:149)\r\n\tat com.oracle.svm.jni.functions.JNIFunctions.UnregisterNatives(JNIFunctions.java:362)\r\n\tat com.oracle.svm.core.code.IsolateEnterStub.JNIFunctions_UnregisterNatives_07af9442aa98f893dd700b47b363fa08a3f7e240(generated:0)\r\n\r\nError: Use -H:+ReportExceptionStackTraces to print stacktrace of underlying exception\r\nError: Image build request failed with exit status 1\r\n```\r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\n 1. `git clone https://github.com/hiddenswitch/Spellsource-Server.git && cd Spellsource-Server && git checkout micro-improvements`\r\n 2. With JDK11: `./gradlew micro:shadowJar && docker build -t micro -f micro/Dockerfile .`\r\n\r\n\r\n**Expected behavior**\r\nReading files in a static initializer should work.", "url": "https://github.com/oracle/graal/issues/2133", "user": "doctorpangloss", "labels": ["bug", "native-image"], "created": "2020-02-08 01:18:25", "closed": "2020-02-08 23:11:58", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[interop/sulong] UnsupportedSpecializationException in ToI32Node", "body": "**Describe GraalVM and your environment :**\r\n - GraalVM version or commit id if built from source: **19.3**\r\n - CE or EE: **CE**\r\n - JDK version: **JDK8**\r\n - OS and OS Version: **macOS Catalina**\r\n - Architecture: **amd64**\r\n - The output of `java -Xinternalversion`: \r\n```\r\nOpenJDK 64-Bit GraalVM CE 19.3.0 (25.232-b07-jvmci-19.3-b05) for bsd-amd64 JRE (8u232), built on Nov 14 2019 02:39:20 by \"graal\" with gcc 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.37)\r\n```\r\n\r\n**Have you verified this issue still happens when using the latest snapshot?**\r\nYes, still an issue in GraalVM CE 20.1.0-dev-20200204_0342.\r\n\r\n**Describe the issue**\r\n\r\nSulong's `ToI32Node` throws an `UnsupportedSpecializationException`, which is propagated to the user:\r\n\r\n```\r\nERROR: com.oracle.truffle.api.dsl.UnsupportedSpecializationException: Unexpected values provided for ToI32NodeGen@7efde843: [DynamicObject<undefined>@55fd5e4b], [DynamicObjectBasic]\r\norg.graalvm.polyglot.PolyglotException: com.oracle.truffle.api.dsl.UnsupportedSpecializationException: Unexpected values provided for ToI32NodeGen@7efde843: [DynamicObject<undefined>@55fd5e4b], [DynamicObjectBasic]\r\n        at com.oracle.truffle.llvm.runtime.interop.convert.ToI32NodeGen.executeAndSpecialize(ToI32NodeGen.java:356)\r\n        at com.oracle.truffle.llvm.runtime.interop.convert.ToI32NodeGen.executeWithTarget(ToI32NodeGen.java:232)\r\n        at com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode$LLVMLookupDispatchForeignNode.doGeneric(LLVMDispatchNode.java:283)\r\n        at com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode$LLVMLookupDispatchForeignNode.doUnknownType(LLVMDispatchNode.java:296)\r\n        at com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNodeGen$LLVMLookupDispatchForeignNodeGen.executeAndSpecialize(LLVMDispatchNodeGen.java:770)\r\n        at com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNodeGen$LLVMLookupDispatchForeignNodeGen.execute(LLVMDispatchNodeGen.java:579)\r\n        at com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode.doForeign(LLVMDispatchNode.java:228)\r\n        at com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNodeGen.executeAndSpecialize(LLVMDispatchNodeGen.java:340)\r\n        at com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNodeGen.executeDispatch(LLVMDispatchNodeGen.java:134)\r\n        at com.oracle.truffle.llvm.runtime.nodes.func.LLVMCallNode.executeGeneric(LLVMCallNode.java:70)\r\n        at com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode.executeI32(LLVMExpressionNode.java:100)\r\n        at com.oracle.truffle.llvm.runtime.nodes.others.LLVMValueProfilingNodeFactory$LLVMI32ProfiledValueNodeGen.executeI32(LLVMValueProfilingNodeFactory.java:304)\r\n        at com.oracle.truffle.llvm.runtime.nodes.vars.LLVMWriteNodeFactory$LLVMWriteI32NodeGen.execute(LLVMWriteNodeFactory.java:271)\r\n        at com.oracle.truffle.llvm.runtime.nodes.base.LLVMBasicBlockNode$InitializedBlock.execute(LLVMBasicBlockNode.java:158)\r\n        at com.oracle.truffle.llvm.runtime.nodes.control.LLVMDispatchBasicBlockNode.executeGeneric(LLVMDispatchBasicBlockNode.java:86)\r\n        at com.oracle.truffle.llvm.runtime.nodes.control.LLVMFunctionRootNode.executeGeneric(LLVMFunctionRootNode.java:74)\r\n        at com.oracle.truffle.llvm.runtime.nodes.func.LLVMFunctionStartNode.execute(LLVMFunctionStartNode.java:78)\r\n        at <llvm> main(Unknown)\r\n        at org.graalvm.polyglot.Value.execute(Value.java:366)\r\n        at com.oracle.truffle.llvm.launcher.LLVMLauncher.execute(LLVMLauncher.java:219)\r\n        at com.oracle.truffle.llvm.launcher.LLVMLauncher.launch(LLVMLauncher.java:63)\r\n        at org.graalvm.launcher.AbstractLanguageLauncher.launch(AbstractLanguageLauncher.java:121)\r\n        at org.graalvm.launcher.PolyglotLauncher.switchToLauncher(PolyglotLauncher.java:345)\r\n        at org.graalvm.launcher.PolyglotLauncher.launch(PolyglotLauncher.java:191)\r\n        at org.graalvm.launcher.PolyglotLauncher.main(PolyglotLauncher.java:434)\r\n```\r\n\r\n**Code snippet or code repository that reproduces the issue**\r\n```c\r\n#include <stdlib.h>\r\n#include <stdio.h>\r\n#include <polyglot.h>\r\n\r\nstruct Order {\r\n    int price;\r\n};\r\n\r\nPOLYGLOT_DECLARE_STRUCT(Order)\r\n\r\nstruct Order *newOrder(int price) {\r\n    struct Order *order = (struct Order *) malloc(sizeof(struct Order));\r\n    order->price = price;\r\n    return order;\r\n}\r\n\r\nint main() {\r\n    void *foo = polyglot_eval(\"js\", \"(order) => order.price\");\r\n    printf(\"%d\\n\", ((int (*)(struct Order *order)) foo)(newOrder(100)));\r\n    return 0;\r\n}\r\n\r\n```\r\n\r\n**Steps to reproduce the issue**\r\nPlease include both build steps as well as run steps\r\n1. `$LLVM_TOOLCHAIN/clang repro.cpp -lpolyglot-mock -o repro.bc`\r\n2. `lli --polyglot repro.bc`\r\n\r\n**Expected behavior**\r\nNot sure this is expected to fail, but if it should, then `UnsupportedSpecializationException` shouldn't be visible to the user.\r\n\r\n\r\n\r\n", "url": "https://github.com/oracle/graal/issues/2127", "user": "fniephaus", "labels": ["bug"], "created": "2020-02-04 15:42:41", "closed": "2020-03-10 12:33:35", "commits": {}, "ttf": 34.000277777777775, "commitsDetails": []}, {"title": "Test ticket", "body": "**Test ticket**", "url": "https://github.com/oracle/graal/issues/2125", "user": "tahabasri", "labels": ["bug"], "created": "2020-02-03 14:22:22", "closed": "2020-02-03 14:25:37", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[native-image] memory corruption in byte arrays obtained via getPrimitiveArrayCritical", "body": "Rendering a jpeg on linux using JavaFX results in a crash caused by memory corruption.\r\nThe function where the corruption happens is this one: \r\nhttps://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/native-iio/jpegloader.c#L1594,\r\n\r\n(note: the barray parameter is passed via 0x4, while running this via hotspot just passes the address)\r\n\r\nThis function has nested calls to ` (*env)->GetPrimitiveArrayCritical`.\r\nCommenting line 1668\r\n         ` jbyte *body = (*env)->GetPrimitiveArrayCritical(env, barray, &iscopy);`\r\nand its corresponding Release method prevents the crash (but obviously data can't be copied into the byte[] in that case, resulting in a black picture.\r\n", "url": "https://github.com/oracle/graal/issues/2114", "user": "johanvos", "labels": ["bug", "native-image"], "created": "2020-01-30 09:22:45", "closed": "2020-01-31 10:06:33", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "[native-image] Thread.getAllStackTraces() fails with an error", "body": "Calling `Thread.getAllStackTraces()` while more than one thread is running, fails with the following error:\r\n\r\n```No Java synchronization must be performed within a VMOperation: if the object is already locked, the VM is at a deadlock\r\nFatal error: Should not reach here: Not okay to block.\r\n\r\nJavaFrameAnchor dump:\r\n\r\n  No anchors\r\n\r\nTopFrame info:\r\n\r\n  TotalFrameSize in CodeInfoTable 32\r\n\r\nVMThreads info:\r\n\r\n  VMThread 000001bfac3bb140  STATUS_IN_SAFEPOINT  java.lang.Thread@0x1bfacb022e0\r\n  VMThread 000001bfac3b7d80  STATUS_IN_JAVA (safepoints disabled)  java.lang.Thread@0x1bfac934190\r\n\r\nVM Thread State for current thread 000001bfac3b7d80:\r\n\r\n  0 (8 bytes): com.oracle.svm.jni.JNIThreadLocalEnvironment.jniFunctions = (bytes)\r\n    000001bfac3b7d80: 000001bfac89cfc8\r\n\r\n  8 (32 bytes): com.oracle.svm.core.genscavenge.ThreadLocalAllocation.regularTLAB = (bytes)\r\n    000001bfac3b7d88: 000001bfacb00000 000001bfacc00000\r\n    000001bfac3b7d98: 000001bfacb02e30 0000000000000000\r\n\r\n\r\n  40 (8 bytes): com.oracle.svm.core.heap.NoAllocationVerifier.openVerifiers = (Object) null\r\n  48 (8 bytes): com.oracle.svm.core.jdk.IdentityHashCodeSupport.hashCodeGeneratorTL = (Object) null\r\n  56 (8 bytes): com.oracle.svm.core.snippets.SnippetRuntime.currentException = (Object) null\r\n  64 (8 bytes): com.oracle.svm.core.thread.JavaThreads.currentThread = (Object) java.lang.Thread  000001bfac934190\r\n  72 (8 bytes): com.oracle.svm.core.thread.ThreadingSupportImpl.activeTimer = (Object) null\r\n  80 (8 bytes): com.oracle.svm.jni.JNIObjectHandles.handles = (Object) com.oracle.svm.core.handles.ThreadLocalHandles  000001bfacb01428\r\n  88 (8 bytes): com.oracle.svm.jni.JNIThreadLocalPendingException.pendingException = (Object) null\r\n  96 (8 bytes): com.oracle.svm.jni.JNIThreadLocalPinnedObjects.pinnedObjectsListHead = (Object) null\r\n  104 (8 bytes): com.oracle.svm.jni.JNIThreadOwnedMonitors.ownedMonitors = (Object) null\r\n  112 (8 bytes): com.oracle.svm.core.genscavenge.ThreadLocalAllocation.freeList = (Word) 0  0000000000000000\r\n  120 (8 bytes): com.oracle.svm.core.graal.snippets.StackOverflowCheckImpl.stackBoundaryTL = (Word) 1  0000000000000001\r\n  128 (8 bytes): com.oracle.svm.core.stack.JavaFrameAnchors.lastAnchor = (Word) 0  0000000000000000\r\n  136 (8 bytes): com.oracle.svm.core.thread.VMThreads.IsolateTL = (Word) 1922742878208  000001bfac680000\r\n  144 (8 bytes): com.oracle.svm.core.thread.VMThreads.OSThreadHandleTL = (Word) 164  00000000000000a4\r\n  152 (8 bytes): com.oracle.svm.core.thread.VMThreads.OSThreadIdTL = (Word) 7308  0000000000001c8c\r\n  160 (8 bytes): com.oracle.svm.core.thread.VMThreads.nextTL = (Word) 0  0000000000000000\r\n  168 (4 bytes): com.oracle.svm.core.graal.snippets.StackOverflowCheckImpl.yellowZoneStateTL = (int) -16843010  fefefefe\r\n  172 (4 bytes): com.oracle.svm.core.snippets.ImplicitExceptions.implicitExceptionsAreFatal = (int) 0  00000000\r\n  176 (4 bytes): com.oracle.svm.core.thread.Safepoint.safepointRequested = (int) 2147473412  7fffd804\r\n  180 (4 bytes): com.oracle.svm.core.thread.ThreadingSupportImpl.currentPauseDepth = (int) 1  00000001\r\n  184 (4 bytes): com.oracle.svm.core.thread.VMThreads$StatusSupport.safepointsDisabledTL = (int) 1  00000001\r\n  188 (4 bytes): com.oracle.svm.core.thread.VMThreads$StatusSupport.statusTL = (int) 1  00000001\r\n\r\nVMOperation dump:\r\n\r\n  VMOperation in progress: getAllStackTraces\r\n    causesSafepoint: true\r\n    queuingThread: 000001bfac3b7d80\r\n    executingThread: 000001bfac3b7d80\r\n\r\nDump Counters:\r\n\r\n\r\nRaw Stacktrace:\r\n\r\n  000000bc7a2ff6d0: 000001bfac8d1500 000001bfac7ea518\r\n  000000bc7a2ff6e0: 000001bfac680000 00007ff669b6d6fc\r\n  000000bc7a2ff6f0: 000001bfac8d150a 00007ff669b693c9\r\n  000000bc7a2ff700: 0000000000000001 00007ff669b4149b\r\n  000000bc7a2ff710: 000001bfac7744e8 000001bfac7e6578\r\n  000000bc7a2ff720: 00000002002b3bb8 00007ff669b12c58\r\n  000000bc7a2ff730: 000001bfac885680 000001bfac680018\r\n  000000bc7a2ff740: 000001bfac7e8e70 00007ff669b4abbf\r\n  000000bc7a2ff750: 0000000000002df5 0000000000000001\r\n  000000bc7a2ff760: 00000098ac3b8608 0000000000015729\r\n  000000bc7a2ff770: 00000001acb02d40 000001bfac7e8e70\r\n  000000bc7a2ff780: 0000000000015700 0000000000015729\r\n  000000bc7a2ff790: 000001bfac92c860 00007ff669b5fe6b\r\n  000000bc7a2ff7a0: 0000000000482d40 000001bfacb02d40\r\n  000000bc7a2ff7b0: 000001bfacb02560 00007ff669cff66a\r\n  000000bc7a2ff7c0: 000000bc7a2ff818 00007ff669b60865\r\n  000000bc7a2ff7d0: 000001bfacb02e10 00007ff669b475d5\r\n  000000bc7a2ff7e0: 000001bfac9f9d50 000001bfacb02e10\r\n  000000bc7a2ff7f0: 000001bfacb02560 00007ff669c13a37\r\n  000000bc7a2ff800: 00007ff669b5fcb0 000001bfacb026d8\r\n  000000bc7a2ff810: 000001bfacb022e0 000000a8ac934398\r\n  000000bc7a2ff820: 00000000000000a8 00007ff669bf5819\r\n  000000bc7a2ff830: 0000000300000000 0000000000000050\r\n  000000bc7a2ff840: 000000087a5ff5d0 00007ff669cdf106\r\n  000000bc7a2ff850: 000001bfac3b0000 000001bfacb022e0\r\n  000000bc7a2ff860: 000001bfacb02560 00007ff669cdf78b\r\n  000000bc7a2ff870: 0000000000000028 00007ff669b62a60\r\n  000000bc7a2ff880: 000001bfacb02dc0 000001bfacb022e0\r\n  000000bc7a2ff890: 000001bfacb024d8 00007ff669b633f6\r\n  000000bc7a2ff8a0: 00006433b373d787 0000000000000002\r\n  000000bc7a2ff8b0: 000001bfacb022e0 000001bfacb024d8\r\n  000000bc7a2ff8c0: 000001bfac3bb140 00007ff669b61430\r\n  000000bc7a2ff8d0: 000001bfac3b7d80 000001bfac3c3418\r\n  000000bc7a2ff8e0: 00007ff669b6e800 00007ff669b64fd4\r\n  000000bc7a2ff8f0: 000001bfac8d1000 00007ffdea8a234f\r\n  000000bc7a2ff900: 000001bfacb02520 00007ff669b65618\r\n  000000bc7a2ff910: 00007ff669b266b0 000001bfacb02520\r\n  000000bc7a2ff920: 000001bfacb02520 00007ff669b67fb4\r\n  000000bc7a2ff930: 0000000000000000 000001bfac680000\r\n  000000bc7a2ff940: 000001bfac7e7668 000001bfac680000\r\n  000000bc7a2ff950: 00000000002207f0 000001bfacb02520\r\n  000000bc7a2ff960: 0000000000000000 0000000000000000\r\n  000000bc7a2ff970: 0000000000000000 00007ff669b684ca\r\n  000000bc7a2ff980: 000001bfac3b7d80 00007ff669b669b6\r\n  000000bc7a2ff990: 000001bfaca01828 000001bfaca01828\r\n  000000bc7a2ff9a0: 000001bfacb02520 000001bfaca017d8\r\n  000000bc7a2ff9b0: 000001bfac886778 00007ff669b68c1b\r\n  000000bc7a2ff9c0: 00000000002207f0 000001bfacb02520\r\n  000000bc7a2ff9d0: 000001bfac7e9fd0 000001bfac7e9fd0\r\n  000000bc7a2ff9e0: 000001bfaca017d8 000001bfac8d1070\r\n  000000bc7a2ff9f0: 000001bfaca01828 000001bfac886778\r\n  000000bc7a2ffa00: 0000000100000001 00007ff669b68a24\r\n  000000bc7a2ffa10: 00007ff669b6e897 00007ff669b4149b\r\n  000000bc7a2ffa20: 000001bfac886778 000001bfacb02520\r\n  000000bc7a2ffa30: 0000000000000000 00007ff669b692a1\r\n  000000bc7a2ffa40: 000001bfacb022e0 00007ff669d2e767\r\n  000000bc7a2ffa50: 00000000000000c8 000001bfac680018\r\n  000000bc7a2ffa60: 000001bfacb02520 000001bfac7e7668\r\n  000000bc7a2ffa70: 0000000000000000 00007ff669b65400\r\n  000000bc7a2ffa80: 00007ff669b6e800 000001bfacb024c0\r\n  000000bc7a2ffa90: 000001bfac7e9fd0 00007ff669b6297c\r\n  000000bc7a2ffaa0: 00007ff669e17138 00007ff669e1713e\r\n  000000bc7a2ffab0: 000001bfacb024d8 00007ff669b11569\r\n  000000bc7a2ffac0: 000001bfac7e6418 00007ff669c1503b\r\n\r\nStacktrace Stage0:\r\n\r\n  RSP 000000bc7a2ff6d0 RIP 00007ff669b6d776 FrameSize 32\r\n  RSP 000000bc7a2ff6f0 RIP 00007ff669b6d6fc FrameSize 16\r\n  RSP 000000bc7a2ff700 RIP 00007ff669b693c9 FrameSize 48\r\n  RSP 000000bc7a2ff730 RIP 00007ff669b12c58 FrameSize 32\r\n  RSP 000000bc7a2ff750 RIP 00007ff669b4abbf FrameSize 112\r\n  RSP 000000bc7a2ff7c0 RIP 00007ff669cff66a FrameSize 32\r\n  RSP 000000bc7a2ff7e0 RIP 00007ff669b475d5 FrameSize 32\r\n  RSP 000000bc7a2ff800 RIP 00007ff669c13a37 FrameSize 48\r\n  RSP 000000bc7a2ff830 RIP 00007ff669bf5819 FrameSize 32\r\n  RSP 000000bc7a2ff850 RIP 00007ff669cdf106 FrameSize 32\r\n  RSP 000000bc7a2ff870 RIP 00007ff669cdf78b FrameSize 48\r\n  RSP 000000bc7a2ff8a0 RIP 00007ff669b633f6 FrameSize 48\r\n  RSP 000000bc7a2ff8d0 RIP 00007ff669b61430 FrameSize 32\r\n  RSP 000000bc7a2ff8f0 RIP 00007ff669b64fd4 FrameSize 32\r\n  RSP 000000bc7a2ff910 RIP 00007ff669b65618 FrameSize 32\r\n  RSP 000000bc7a2ff930 RIP 00007ff669b67fb4 FrameSize 80\r\n  RSP 000000bc7a2ff980 RIP 00007ff669b684ca FrameSize 64\r\n  RSP 000000bc7a2ff9c0 RIP 00007ff669b68c1b FrameSize 80\r\n  RSP 000000bc7a2ffa10 RIP 00007ff669b68a24 FrameSize 48\r\n  RSP 000000bc7a2ffa40 RIP 00007ff669b692a1 FrameSize 64\r\n  RSP 000000bc7a2ffa80 RIP 00007ff669b65400 FrameSize 32\r\n  RSP 000000bc7a2ffaa0 RIP 00007ff669b6297c FrameSize 32\r\n  RSP 000000bc7a2ffac0 RIP 00007ff669b11569 FrameSize 48\r\n  RSP 000000bc7a2ffaf0 RIP 00007ff669b1131b FrameSize 48\r\n  RSP 000000bc7a2ffb20 RIP 00007ff669b2639d FrameSize 1\r\n\r\nStacktrace Stage1:\r\n\r\n  RSP 000000bc7a2ff6d0 RIP 00007ff669b6d776  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ff6f0 RIP 00007ff669b6d6fc  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ff700 RIP 00007ff669b693c9  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ff730 RIP 00007ff669b12c58  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ff750 RIP 00007ff669b4abbf  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ff7c0 RIP 00007ff669cff66a  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ff7e0 RIP 00007ff669b475d5  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ff800 RIP 00007ff669c13a37  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ff830 RIP 00007ff669bf5819  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ff850 RIP 00007ff669cdf106  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ff870 RIP 00007ff669cdf78b  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ff8a0 RIP 00007ff669b633f6  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ff8d0 RIP 00007ff669b61430  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ff8f0 RIP 00007ff669b64fd4  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ff910 RIP 00007ff669b65618  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ff930 RIP 00007ff669b67fb4  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ff980 RIP 00007ff669b684ca  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ff9c0 RIP 00007ff669b68c1b  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ffa10 RIP 00007ff669b68a24  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ffa40 RIP 00007ff669b692a1  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ffa80 RIP 00007ff669b65400  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ffaa0 RIP 00007ff669b6297c  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ffac0 RIP 00007ff669b11569  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ffaf0 RIP 00007ff669b1131b  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n  RSP 000000bc7a2ffb20 RIP 00007ff669b2639d  com.oracle.svm.core.code.CodeInfo@0x1bfac92c860 name = image code\r\n\r\nFull Stacktrace:\r\n\r\n  RSP 000000bc7a2ff6d0 RIP 00007ff669b6d776  [image code] com.oracle.svm.core.jdk.VMErrorSubstitutions.shutdown(VMErrorSubstitutions.java:111)\r\n  RSP 000000bc7a2ff6d0 RIP 00007ff669b6d776  [image code] com.oracle.svm.core.util.VMError.shouldNotReachHere(VMError.java:74)\r\n  RSP 000000bc7a2ff6f0 RIP 00007ff669b6d6fc  [image code] com.oracle.svm.core.util.VMError.shouldNotReachHere(VMError.java:59)\r\n  RSP 000000bc7a2ff700 RIP 00007ff669b693c9  [image code] com.oracle.svm.core.thread.VMOperationControl.guaranteeOkayToBlock(VMOperationControl.java:276)\r\n  RSP 000000bc7a2ff730 RIP 00007ff669b12c58  [image code] com.oracle.svm.core.MonitorSupport.monitorEnter(MonitorSupport.java:138)\r\n  RSP 000000bc7a2ff750 RIP 00007ff669b4abbf  [image code] com.oracle.svm.core.jdk.SplittableRandomAccessors.initialize(JavaUtilSubstitutions.java:267)\r\n  RSP 000000bc7a2ff7c0 RIP 00007ff669cff66a  [image code] com.oracle.svm.core.jdk.SplittableRandomAccessors.getDefaultGen(JavaUtilSubstitutions.java:260)\r\n  RSP 000000bc7a2ff7c0 RIP 00007ff669cff66a  [image code] java.util.SplittableRandom.<init>(SplittableRandom.java:378)\r\n  RSP 000000bc7a2ff7e0 RIP 00007ff669b475d5  [image code] com.oracle.svm.core.jdk.IdentityHashCodeSupport.generateHashCode(IdentityHashCodeSupport.java:43)\r\n  RSP 000000bc7a2ff800 RIP 00007ff669c13a37  [image code] java.lang.System.identityHashCode(System.java:309)\r\n  RSP 000000bc7a2ff830 RIP 00007ff669bf5819  [image code] java.lang.Object.hashCodeSubst(Object.java:102)\r\n  RSP 000000bc7a2ff850 RIP 00007ff669cdf106  [image code] java.util.HashMap.hash(HashMap.java:339)\r\n  RSP 000000bc7a2ff870 RIP 00007ff669cdf78b  [image code] java.util.HashMap.put(HashMap.java:607)\r\n  RSP 000000bc7a2ff8a0 RIP 00007ff669b633f6  [image code] com.oracle.svm.core.thread.JavaThreads.lambda$getAllStackTraces$1(JavaThreads.java:539)\r\n  RSP 000000bc7a2ff8d0 RIP 00007ff669b61430  [image code] com.oracle.svm.core.thread.JavaThreads$$Lambda$91a7d87fc99e4d13115449c8034607abad6591ed.invoke(Unknown Source)\r\n  RSP 000000bc7a2ff8f0 RIP 00007ff669b64fd4  [image code] com.oracle.svm.core.thread.JavaVMOperation$ThunkOperation.operate(JavaVMOperation.java:132)\r\n  RSP 000000bc7a2ff910 RIP 00007ff669b65618  [image code] com.oracle.svm.core.thread.JavaVMOperation.operate(JavaVMOperation.java:115)\r\n  RSP 000000bc7a2ff930 RIP 00007ff669b67fb4  [image code] com.oracle.svm.core.thread.VMOperation.execute(VMOperation.java:89)\r\n  RSP 000000bc7a2ff980 RIP 00007ff669b684ca  [image code] com.oracle.svm.core.thread.VMOperationControl$WorkQueues.drain(VMOperationControl.java:532)\r\n  RSP 000000bc7a2ff9c0 RIP 00007ff669b68c1b  [image code] com.oracle.svm.core.thread.VMOperationControl$WorkQueues.executeAllQueuedVMOperations(VMOperationControl.java:486)\r\n  RSP 000000bc7a2ffa10 RIP 00007ff669b68a24  [image code] com.oracle.svm.core.thread.VMOperationControl$WorkQueues.enqueueAndExecute(VMOperationControl.java:429)\r\n  RSP 000000bc7a2ffa40 RIP 00007ff669b692a1  [image code] com.oracle.svm.core.thread.VMOperationControl.enqueue(VMOperationControl.java:249)\r\n  RSP 000000bc7a2ffa80 RIP 00007ff669b65400  [image code] com.oracle.svm.core.thread.VMOperationControl.enqueue(VMOperationControl.java:213)\r\n  RSP 000000bc7a2ffa80 RIP 00007ff669b65400  [image code] com.oracle.svm.core.thread.JavaVMOperation.enqueue(JavaVMOperation.java:69)\r\n  RSP 000000bc7a2ffa80 RIP 00007ff669b65400  [image code] com.oracle.svm.core.thread.JavaVMOperation.enqueueBlockingSafepoint(JavaVMOperation.java:104)\r\n  RSP 000000bc7a2ffaa0 RIP 00007ff669b6297c  [image code] com.oracle.svm.core.thread.JavaThreads.getAllStackTraces(JavaThreads.java:537)\r\n  RSP 000000bc7a2ffac0 RIP 00007ff669b11569  [image code] java.lang.Thread.getAllStackTraces(Thread.java:385)\r\n  RSP 000000bc7a2ffac0 RIP 00007ff669b11569  [image code] AllStackTraces.printAllStackTraces(AllStackTraces.java:29)\r\n  RSP 000000bc7a2ffaf0 RIP 00007ff669b1131b  [image code] AllStackTraces.main(AllStackTraces.java:24)\r\n  RSP 000000bc7a2ffb20 RIP 00007ff669b2639d  [image code] com.oracle.svm.core.JavaMainWrapper.runCore(JavaMainWrapper.java:151)\r\n  RSP 000000bc7a2ffb20 RIP 00007ff669b2639d  [image code] com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:186)\r\n  RSP 000000bc7a2ffb20 RIP 00007ff669b2639d  [image code] com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(IsolateEnterStub.java:0)\r\n\r\nFull Stacktrace for VMThread 000001bfac3bb140:\r\n\r\n  RSP 000000bc7a5ff5d0 RIP 00007ff669b6eab5  [image code] com.oracle.svm.core.windows.headers.SynchAPI.WaitForSingleObject(SynchAPI.java)\r\n  RSP 000000bc7a5ff5d0 RIP 00007ff669b6eab5  [image code] com.oracle.svm.core.windows.WindowsParkEvent.condTimedWait(WindowsJavaThreads.java:226)\r\n  RSP 000000bc7a5ff640 RIP 00007ff669b63ddd  [image code] com.oracle.svm.core.thread.JavaThreads.sleep(JavaThreads.java:706)\r\n  RSP 000000bc7a5ff6e0 RIP 00007ff669c1503b  [image code] java.lang.Thread.sleep(Thread.java:349)\r\n  RSP 000000bc7a5ff700 RIP 00007ff669c14782  [image code] AllStackTraces$1.run(AllStackTraces.java:12)\r\n  RSP 000000bc7a5ff700 RIP 00007ff669c14782  [image code] java.lang.Thread.run(Thread.java:834)\r\n  RSP 000000bc7a5ff720 RIP 00007ff669b647de  [image code] com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:497)\r\n  RSP 000000bc7a5ff750 RIP 00007ff669b6d9cf  [image code] com.oracle.svm.core.windows.WindowsJavaThreads.osThreadStartRoutine(WindowsJavaThreads.java:136)\r\n  RSP 000000bc7a5ff7a0 RIP 00007ff669b26729  [image code] com.oracle.svm.core.code.IsolateEnterStub.WindowsJavaThreads_osThreadStartRoutine_4bc03aa26f8cdfc97ebd54050e8ae4bce1023851(IsolateEnterStub.java:0)\r\n\r\n[Native image heap boundaries:\r\n  ReadOnly Primitives: 0x1bfac680008 .. 0x1bfac7e6188\r\n  ReadOnly References: 0x1bfac7e6418 .. 0x1bfac8d0e88\r\n  Writable Primitives: 0x1bfac8d1000 .. 0x1bfac9338a8\r\n  Writable References: 0x1bfac9338c0 .. 0x1bfaca034a8]\r\n\r\n\r\n[Heap:\r\n  [Young generation:\r\n    [youngSpace:\r\n      aligned: 0/0 unaligned: 0/0]]\r\n  [Old generation:\r\n    [fromSpace:\r\n      aligned: 0/0 unaligned: 0/0]\r\n    [toSpace:\r\n      aligned: 0/0 unaligned: 0/0]\r\n    ]\r\n  [Unused:\r\n    aligned: 0/0]]\r\n\r\nFatal error: Should not reach here: Not okay to block.```", "url": "https://github.com/oracle/graal/issues/2101", "user": "tiainen", "labels": ["bug", "native-image"], "created": "2020-01-27 11:28:08", "closed": "2020-04-23 14:16:18", "commits": {}, "ttf": 87.00027777777778, "commitsDetails": []}, {"title": "[native-image] Unsupported feature error JDK11OrLater: Target_java_lang_ClassLoader.loadClass", "body": "I am compiling our vanilla-jpa sample in the spring feature repo (https://github.com/spring-projects-experimental/spring-graal-native) and running it against a recent 20.0.0 Java11 weekly dev build.\r\n\r\nWhen running the image, I get this error. It isnt' spring directly doing something unsupported but that `Package.getPackageInfo()` - does that need a substitution on it?\r\n\r\n```\r\nCaused by: com.oracle.svm.core.jdk.UnsupportedFeatureError: JDK11OrLater: Target_java_lang_ClassLoader.loadClass(Target_java_lang_Module, String)\r\n\tat com.oracle.svm.core.util.VMError.unsupportedFeature(VMError.java:101)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:247)\r\n\tat java.lang.Package.getPackageInfo(Package.java:420)\r\n\tat java.lang.Package.getAnnotations(Package.java:467)\r\n\tat org.springframework.data.util.NullableUtils.isNonNull(NullableUtils.java:138)\r\n\tat org.springframework.data.util.NullableUtils.isNonNull(NullableUtils.java:124)\r\n\tat org.springframework.data.repository.core.support.MethodInvocationValidator.supports(MethodInvocationValidator.java:63)\r\n```\r\n\r\nHere is a small test program that fails in the same way:\r\n```\r\npublic class Code {\r\n  public static void main(String []argv) {\r\n    Code.class.getPackage().getAnnotations();\r\n  }\r\n}\r\n```\r\n\r\n```\r\nException in thread \"main\" com.oracle.svm.core.jdk.UnsupportedFeatureError: JDK11OrLater: Target_java_lang_ClassLoader.loadClass(Target_java_lang_Module, String)\r\n\tat com.oracle.svm.core.util.VMError.unsupportedFeature(VMError.java:101)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:247)\r\n\tat java.lang.Package.getPackageInfo(Package.java:420)\r\n\tat java.lang.Package.getAnnotations(Package.java:467)\r\n\tat Code.main(Code.java:3)\r\n```", "url": "https://github.com/oracle/graal/issues/2093", "user": "aclement", "labels": ["bug", "native-image"], "created": "2020-01-23 21:31:12", "closed": "2020-02-03 02:34:56", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "[native-image] JavaFX Media doesn't work.", "body": "I tried building my [app](https://github.com/dubbadhar/gramophy) with the following changes :\r\n1. Removing jnativehook library\r\n2. Removing awt usage\r\nBuild was successful, then when i start to play any media file, it just doesnt proceed. `mediaPlayer.setOnError(...)` isn't triggered, and its not in `READY` state either. No stack trace is shown as well.\r\n\r\npom.xml : \r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <groupId>com.github.dubbadhar</groupId>\r\n    <artifactId>Gramophy</artifactId>\r\n    <version>2020</version>\r\n\r\n\r\n    <properties>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n        <maven.compiler.source>11</maven.compiler.source>\r\n        <maven.compiler.target>11</maven.compiler.target>\r\n        <javafx.version>13</javafx.version>\r\n        <client.plugin.version>0.1.11</client.plugin.version>\r\n        <mainClassName>Gramophy.Main</mainClassName>\r\n    </properties>\r\n\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-base</artifactId>\r\n            <version>13</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-controls</artifactId>\r\n            <version>13</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-media</artifactId>\r\n            <version>13</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-fxml</artifactId>\r\n            <version>13</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>com.jfoenix</groupId>\r\n            <artifactId>jfoenix</artifactId>\r\n            <version>9.0.8</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>com.mpatric</groupId>\r\n            <artifactId>mp3agic</artifactId>\r\n            <version>0.9.1</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.json</groupId>\r\n            <artifactId>json</artifactId>\r\n            <version>20190722</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>io.github.typhon0</groupId>\r\n            <artifactId>AnimateFX</artifactId>\r\n            <version>1.2.1</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-swing</artifactId>\r\n            <version>13</version>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <version>3.8.1</version>\r\n                <configuration>\r\n                    <release>11</release>\r\n                </configuration>\r\n            </plugin>\r\n\r\n            <plugin>\r\n                <groupId>org.openjfx</groupId>\r\n                <artifactId>javafx-maven-plugin</artifactId>\r\n                <version>0.0.3</version>\r\n                <configuration>\r\n                    <mainClass>${mainClassName}</mainClass>\r\n                </configuration>\r\n            </plugin>\r\n\r\n            <plugin>\r\n                <groupId>com.gluonhq</groupId>\r\n                <artifactId>client-maven-plugin</artifactId>\r\n                <version>${client.plugin.version}</version>\r\n                <configuration>\r\n                    <!-- Uncomment to run on iOS: -->\r\n                    <!-- <target>ios</target> -->\r\n                    <graalvmHome>/home/dubbadhar/graalvm/</graalvmHome>\r\n                    <reflectionList>\r\n                        <list>javafx.fxml.FXMLLoader</list>\r\n                        <list>Gramophy.dashController</list>\r\n                        <list>javafx.scene.control.Button</list>\r\n                        <list>javafx.scene.control.Label</list>\r\n                        <list>com.jfoenix.controls.JFXButton</list>\r\n                        <list>com.jfoenix.controls.JFXMasonryPane</list>\r\n                        <list>com.jfoenix.controls.JFXSpinner</list>\r\n                        <list>javafx.geometry.Insets</list>\r\n                        <list>javafx.scene.control.Label</list>\r\n                        <list>javafx.scene.control.ListView</list>\r\n                        <list>javafx.scene.CacheHint</list>\r\n                        <list>javafx.scene.paint.Paint</list>\r\n                        <list>javafx.scene.control.ScrollPane</list>\r\n                        <list>javafx.scene.control.ScrollPane$ScrollBarPolicy</list>\r\n                        <list>com.jfoenix.controls.JFXButton$ButtonType</list>\r\n                        <list>javafx.scene.control.Slider</list>\r\n                        <list>javafx.scene.image.Image</list>\r\n                        <list>javafx.scene.image.ImageView</list>\r\n                        <list>javafx.scene.layout.Priority</list>\r\n                        <list>javafx.scene.layout.AnchorPane</list>\r\n                        <list>javafx.scene.layout.HBox</list>\r\n                        <list>javafx.scene.layout.Region</list>\r\n                        <list>javafx.scene.layout.StackPane</list>\r\n                        <list>javafx.scene.layout.VBox</list>\r\n                        <list>javafx.scene.text.Font</list>\r\n                        <list>javafx.scene.control.TextField</list>\r\n                    </reflectionList>\r\n                    <mainClass>${mainClassName}</mainClass>\r\n                </configuration>\r\n            </plugin>\r\n\r\n        </plugins>\r\n    </build>\r\n\r\n    <pluginRepositories>\r\n        <pluginRepository>\r\n            <id>gluon-releases</id>\r\n            <url>http://nexus.gluonhq.com/nexus/content/repositories/releases/</url>\r\n        </pluginRepository>\r\n    </pluginRepositories>\r\n</project>\r\n```\r\n\r\nBut overall the app itself starts in a jiffy, and i really love it.\r\nJavaFX Version : 13", "url": "https://github.com/oracle/graal/issues/2078", "user": "dubbadhar", "labels": ["bug", "native-image"], "created": "2020-01-17 09:58:04", "closed": "2020-02-08 10:50:57", "commits": {}, "ttf": 22.00027777777778, "commitsDetails": []}, {"title": "Cannot build Truffle if MX_ALT_OUTPUT_ROOT points to a directory outside the repository", "body": "As reported by @christhalinger, we cannot build `truffle` when the `MX_ALT_OUTPUT_ROOT` environment variable points to a directory outside of the `graal` repository.\r\n\r\nTo reproduce:\r\n```\r\n$ cd truffle\r\n$ mkdir ../../TMP\r\n$ env MX_ALT_OUTPUT_ROOT=../../TMP mx -v build\r\n...\r\ngit apply --whitespace=nowarn --directory ../TMP/truffle/linux-amd64/src/libffi/libffi-3.2.1 /home/dansalon/workspace/main/graal/truffle/src/libffi/patches/others/0001-Add-mx-bootstrap-Makefile.patch\r\nerror: invalid path '../TMP/truffle/linux-amd64/src/libffi/libffi-3.2.1/Makefile'\r\n```\r\n\r\n[Here](https://ol-bitbucket.us.oracle.com/projects/G/repos/graal/browse/truffle/mx.truffle/mx_truffle.py#746) we should not assume that `self.subject.delegate.dir` is a subdirectory of `self.subject.suite.vc_dir`.", "url": "https://github.com/oracle/graal/issues/2066", "user": "ansalond", "labels": ["bug", "building", "oracle-emp"], "created": "2020-01-13 11:31:41", "closed": "2020-04-17 04:03:37", "commits": {}, "ttf": 94.00027777777778, "commitsDetails": []}, {"title": "[AArch64] Renaissance benchmark hangs when Graal is used", "body": "Recently, we noticed that on some types of AArch64 CPUs, the Renaissance benchmark hangs when Graal is used as the JVMCI compiler. This issue can be reproduced by below test command on Graal master with jdk11u.\r\n```\r\ncd graal/compiler\r\nmx vm -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler \\\r\n  -Djvmci.Compiler=graal -jar renaissance-gpl-0.10.0.jar future-genetic\r\n```\r\nwhere renaissance-gpl-0.10.0.jar can be downloaded by\r\n```\r\nwget https://github.com/renaissance-benchmarks/renaissance/releases/download/v0.10.0/renaissance-gpl-0.10.0.jar\r\n```\r\n\r\nWe have some investigations on this issue. Below are some details. TL;DR\r\n\r\nThe future-genetic case in the Renaissance benchmark is a test which makes heavy use of the `java.util.concurrent` library. It submits a map-reduce job but hangs with a phenomenon that all the worker threads are parked. The hanging issue only appears on AArch64 when we use Graal as the JVMCI compiler. If we just use C1 or C2, everything is fine. This issue is very hard to be reproduced in a small Java program. As we noticed that the library code called by this case has a lot of volatile accesses, we guessed that Graal might have something wrong when compiling loads/stores with volatile.\r\n\r\nTo prove our guess, we dumpped the assembly code compiled for volatile load by each compiler. The C1 compiler uses a normal load instruction surrounded by two dmb instructions for a volatile load. Code is like\r\n```\r\ndmb ish\r\nldr [xxx]\r\ndmb ishld\r\n```\r\nwhile C2 has optimized the volatile load to a below AArch64 load-acquire instruction.\r\n```\r\nldar [xxx]\r\n```\r\nIn the Graal compiler, we only generates one dmb after the load, like below. There's no dmb before.\r\n```\r\nldr [xxx]\r\ndmb ishld\r\n```\r\n\r\nTo test that the missing DMB is the cause of hanging, we tried to modify the Graal's compiled to what C1's and/or C2's like. We found that, either by hard-coding one more DMB before the Graal compiled LDR or by replacing the LDR+DMB to a single LDAR, the hanging issue disappers. To see why C1 needs one more DMB before the load, we found JDK-8179954 (https://bugs.openjdk.java.net/browse/JDK-8179954) stating that the mixed use of STLR and LDR+DMB may cause some errors. We also found this problem mentioned in the comments of @adinn's PR #1772.\r\n\r\nTo confirm this is a similar issue with JDK-8179954, we searched the code-gen and found there's no STLR generated by current Graal. But we do have another similar instruction, STLXR, generated for atomic operations. Suppose that an STLXR is generated before any LDR+DMB, the STLXR and LDR may be reordered by CPU according to the AArch64 memory ordering semantics. But if the STLXR represents an atomic store of a volatile field and the following LDR+DMB represents another volatile load, the reordering of these is prohibited according to the JSR-133 Cookbook (http://gee.cs.oswego.edu/dl/jmm/cookbook.html). We also tried adding one DMB after each STLXR generated for atomics, this hanging issue also disappers without any surprise.\r\n\r\nAbove are all our investigations. We believe that this issue will disapper after #1772 gets merged. So we would like to ask is there anything we (Arm) could do to make #1772 reviewed and merged ASAP? If it is not possible to be merged in a short time, shall we add a temporary workaround patch (just adding one more DMB somewhere) to make the `java.util.concurrent` library work correctly?", "url": "https://github.com/oracle/graal/issues/2045", "user": "pli-arm", "labels": ["bug", "compiler"], "created": "2019-12-30 03:42:37", "closed": "2020-06-04 07:33:17", "commits": {}, "ttf": 157.00027777777777, "commitsDetails": []}, {"title": "No HomeFinder when compiling with llvm", "body": "when compiling using the LLVM backend, native image build fails:\r\n\r\n```Error: ImageSingletons do not contain key org.graalvm.home.HomeFinder\r\nError: Use -H:+ReportExceptionStackTraces to print stacktrace of underlying exception\r\nError: Image build request failed with exit status 1\r\ncom.oracle.svm.driver.NativeImage$NativeImageError: Image build request failed with exit status 1\r\n\tat com.oracle.svm.driver.NativeImage.showError(NativeImage.java:1504)\r\n\tat com.oracle.svm.driver.NativeImage.build(NativeImage.java:1266)\r\n\tat com.oracle.svm.driver.NativeImage.performBuild(NativeImage.java:1227)\r\n\tat com.oracle.svm.driver.NativeImage.main(NativeImage.java:1186)\r\n\tat com.oracle.svm.driver.NativeImage$JDK9Plus.main(NativeImage.java:1683)```\r\n\r\nThe same code works fine when compiling without the LLVM backend.", "url": "https://github.com/oracle/graal/issues/2033", "user": "johanvos", "labels": ["bug", "native-image"], "created": "2019-12-27 12:36:45", "closed": "2020-02-19 09:03:57", "commits": {}, "ttf": 53.000277777777775, "commitsDetails": []}, {"title": "[native-image] Reflection config with java.nio.file.Files does not work with JDK 11 on macOS 10.14.6", "body": "**Problem statement**\r\n\r\nCompilation works fine on JDK8 for one of my projects, but not on JDK11 with macOS 10.14.6. This is the output produced on JDK11:\r\n\r\nhttps://gist.github.com/borkdude/bc0d9941a9432d41a25665fc1ce9c760\r\n\r\nExcerpt:\r\n\r\n```\r\nUndefined symbols for architecture x86_64:\r\n  \"_UTTypeCopyPreferredTagWithClass\", referenced from:\r\n      _Java_sun_nio_fs_UTIFileTypeDetector_probe0 in libnio.a(UTIFileTypeDetector.o)\r\n  \"_UTTypeCreatePreferredIdentifierForTag\", referenced from:\r\n      _Java_sun_nio_fs_UTIFileTypeDetector_probe0 in libnio.a(UTIFileTypeDetector.o)\r\n  \"_kUTTagClassFilenameExtension\", referenced from:\r\n      _Java_sun_nio_fs_UTIFileTypeDetector_probe0 in libnio.a(UTIFileTypeDetector.o)\r\n  \"_kUTTagClassMIMEType\", referenced from:\r\n      _Java_sun_nio_fs_UTIFileTypeDetector_probe0 in libnio.a(UTIFileTypeDetector.o)\r\nld: symbol(s) not found for architecture x86_64\r\n```\r\n\r\n**Reproduction**\r\n\r\nJar file: see attachment. Unzip first.\r\n[babashka-0.0.46-standalone.jar.zip](https://github.com/oracle/graal/files/3991581/babashka-0.0.46-standalone.jar.zip)\r\n\r\nContents of `reflection.json`:\r\n\r\n```\r\n[ {\r\n  \"name\" : \"java.nio.file.Files\",\r\n  \"allPublicMethods\" : true,\r\n  \"allPublicFields\" : true,\r\n  \"allPublicConstructors\" : true\r\n} ]\r\n```\r\n\r\nCompilation script:\r\n\r\n```\r\n#!/usr/bin/env bash\r\n\r\n$NATIVE_IMAGE \\\r\n  -jar babashka-0.0.46-standalone.jar \\\r\n  -H:Name=bb \\\r\n  -H:+ReportExceptionStackTraces \\\r\n  -J-Dclojure.spec.skip-macros=true \\\r\n  -J-Dclojure.compiler.direct-linking=true \\\r\n  \"-H:IncludeResources=BABASHKA_VERSION\" \\\r\n  \"-H:IncludeResources=SCI_VERSION\" \\\r\n  -H:ReflectionConfigurationFiles=reflection.json \\\r\n  --initialize-at-run-time=java.lang.Math\\$RandomNumberGeneratorHolder \\\r\n  --initialize-at-build-time \\\r\n  -H:Log=registerResource: \\\r\n  -H:EnableURLProtocols=http,https \\\r\n  --enable-all-security-services \\\r\n  -H:+JNI \\\r\n  --verbose \\\r\n  --no-fallback \\\r\n  --no-server \\\r\n  \"-J-Xmx3g\"\r\n```\r\n\r\nNote: set `NATIVE_IMAGE` to a `java11` version of GraalVM:\r\n```\r\n export NATIVE_IMAGE=/Users/borkdude/Downloads/graalvm-ce-java11-19.3.0/Contents/Home/bin/native-image\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/2015", "user": "borkdude", "labels": ["bug", "native-image"], "created": "2019-12-21 16:33:01", "closed": "2020-01-16 17:51:04", "commits": {}, "ttf": 26.00027777777778, "commitsDetails": []}, {"title": "native-image leads to wrong execution / code", "body": "Given this simple sample\r\n\r\n```\r\npackage sample;\r\n\r\npublic class Simple {\r\n\r\n    public static void main(String[] args) {\r\n        byte ca = (byte) 0xca;\r\n        System.out.println(\"Result: \" + checkType(ca));\r\n    }\r\n\r\n    static boolean checkType(byte type) {\r\n        byte masked = (byte) (type & 0xf0);\r\n        boolean result = (masked == (byte) 0xc0);\r\n        return result;\r\n    }\r\n}\r\n```\r\nWhen compiled and run with java, it returns true (which it obviously should).\r\n\r\nWhen compiled with native-image however, it returns false.\r\n\r\nGraalVM Version 19.3.0 CE\r\nMacOS Catalina 10.15.2\r\nUsing -H:Optimize=0 doesn't make any difference.", "url": "https://github.com/oracle/graal/issues/2011", "user": "ptrd", "labels": ["bug", "compiler"], "created": "2019-12-20 11:18:23", "closed": "2019-12-20 14:29:23", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "enterSlowPathNativeToJava called while in Java", "body": "(on Android)\r\nWhen calling Java code from native code, I can see a crash with the following trace:\r\n```\r\nVMError_shouldNotReachHere_c5b94b5a36d4ec9ecab1dc8b763f947e888a3612+72\r\nVMError_guarantee_18caf46ef6d672f2c7aab3ad271ff5117b823ec1+40\r\nSafepoint_enterSlowPathNativeToJava_7405606951b146d1e5a18c3861fef52afd34fa42+52\r\nPosixParkEvent_condWait_e56b1f736bc25db0e6b8d534448b6e861923815f+620\r\nJavaThreads_park_755a1b244969a8d0cb7054e95d9df6e2d73ee8da+148\r\nUnsafe_park_8e78b5f196bf0524b1490ff9abb68dc337e02cca+104\r\nAbstractQueuedSynchronizer_parkAndCheckInterrupt_5f77ccdb5d848784815a610576e6a7d474e2c6b6+84\r\nAbstractQueuedSynchronizer_doAcquireSharedInterruptibly_45d39ee7e51ec281fae273eb218ebe42e5365209+372\r\nAbstractQueuedSynchronizer_acquireSharedInterruptibly_986e79924c5cddba9f884d538a5457f24373785c+128\r\nCountDownLatch_await_cae569b700a03cdda8dbc533815f014324b9a239+52\r\nMonocleWindowManager_repaintFromNative_d2c47725d544f3ebd13059104a8dbef9cc63006c+240\r\nJNIJavaCallWrappers_jniInvoke_VARARGS:Lcom_sun_glass_ui_monocle_MonocleWindowManager_2_0002erepaintFromNative_00028_00029V_575e77e954c3b7b3fb82257fc2af51fec94e27b5+88\r\nJava_com_gluonhq_helloandroid_MainActivity_nativeSurfaceRedrawNeeded+72\r\n\r\n```\r\n\r\nThe last line (`nativeSurfaceRedrawNeeded`) is a native method, and it will invoke a Java method \r\n`MonocleWindowManager_repaintFromNative`\r\n\r\nFrom that moment, all subsequent methods are in Java, so I wonder why the NativeToJava suddenly appears.\r\nLooking into the code for `PosixJavaThreads.condWait()` it seems there are transitions to native in that method though.", "url": "https://github.com/oracle/graal/issues/2002", "user": "johanvos", "labels": ["bug", "native-image"], "created": "2019-12-17 13:44:34", "closed": "2020-01-07 08:06:06", "commits": {}, "ttf": 20.00027777777778, "commitsDetails": []}, {"title": "Problem with OkHttp & Charsets", "body": "I'm trying to use GraalVM native-image to make a native executable out of a JAR.\r\n\r\nThe JAR depends on `io.fabric8:kubernetes-client` which depends on `com.squareup.okhttp3:okhttp`. This is a sample of the `okhttp3.internal.Util`:\r\n\r\n```\r\npublic final class Util {\r\n  public static final Charset UTF_8 = Charset.forName(\"UTF-8\");\r\n  public static final Charset ISO_8859_1 = Charset.forName(\"ISO-8859-1\");\r\n  private static final Charset UTF_16_BE = Charset.forName(\"UTF-16BE\");\r\n  private static final Charset UTF_16_LE = Charset.forName(\"UTF-16LE\");\r\n  private static final Charset UTF_32_BE = Charset.forName(\"UTF-32BE\");\r\n  private static final Charset UTF_32_LE = Charset.forName(\"UTF-32LE\");\r\n  ...\r\n}\r\n```\r\n\r\nThis is my `Dockerfile`:\r\n\r\n```\r\nFROM oracle/graalvm-ce:19.2.1 as build\r\nCOPY target/jvm-operator-1.9.jar /var/jvm-operator-1.9.jar\r\nCOPY config /var/config\r\nWORKDIR /opt/graalvm\r\nRUN gu install native-image \\\r\n && native-image -jar /var/jvm-operator-1.9.jar \\\r\n   -H:ConfigurationFileDirectories=/var/config \\\r\n   -H:+AddAllCharsets \\\r\n   -H:+ReportExceptionStackTraces \\\r\n && mv jvm-operator-1.9 /var/jvm-operator-1.9\r\n\r\nFROM bitnami:minideb/buster\r\nCOPY --from=build /var/jvm-operator-1.9 operator\r\nCMD ./operator\r\n```\r\n\r\nAt runtime, I still have this stack when scheduling:\r\n\r\n```\r\nCaused by: java.nio.charset.UnsupportedCharsetException: UTF-32BE\r\n\tat java.nio.charset.Charset.forName(Charset.java:531)\r\n\tat okhttp3.internal.Util.<clinit>(Util.java:75)\r\n\tat com.oracle.svm.core.hub.ClassInitializationInfo.invokeClassInitializer(ClassInitializationInfo.java:350)\r\n\tat com.oracle.svm.core.hub.ClassInitializationInfo.initialize(ClassInitializationInfo.java:270)\r\n```\r\n\r\nNotice the `H:+AddAllCharsets` flag. I don't understand why it doesn't work.", "url": "https://github.com/oracle/graal/issues/1997", "user": "nfrankel", "labels": ["bug", "native-image"], "created": "2019-12-16 17:27:01", "closed": "2020-02-18 22:27:29", "commits": {}, "ttf": 64.00027777777778, "commitsDetails": []}, {"title": "native-image -H:Optimize=2 leads to wrong execution / code.", "body": "Hello everyone.\r\nMy name is Michael, I work for Neo4j and I contributed the Neo4j extension to the Quarkus project. That extension worked nicely in native mode and stopped doing so since Quarkus upgraded to GraalVM 19.3 (See related issue here https://github.com/quarkusio/quarkus/issues/6115).\r\n\r\nA little background to our driver: We shade Netty and have some substitutions in place to make SSL and some reflections work, which you can find here:\r\n* https://github.com/neo4j/neo4j-java-driver/tree/4.0.0/driver/src/main/resources/META-INF/native-image/org.neo4j/driver\r\n* https://github.com/neo4j/neo4j-java-driver/tree/4.0.0/driver/src/main/java/org/neo4j/driver/internal/svm\r\n\r\nThe bug happens when the driver receives a message from the server in a pack stream format. I have a fully runnable example here https://github.com/michael-simons/neo4j-java-driver-native-example, but you need to have a running Neo4j instance to make use of it.\r\n\r\nI was however able to pin point our issue to the code inside `Unpacker`, which you find here: https://github.com/neo4j/neo4j-java-driver/blob/4.0.0/driver/src/main/java/org/neo4j/driver/internal/packstream/PackStream.java#L401\r\n\r\nIn GraalVM prior to 19.3, regardless of `-H:Optimize=n` settings, the GraalVM native image compiler produced working code. Since 19.3, the various methods, and I think the partial switch statements, seem to fold into one which lead to wrong exceptions.\r\n\r\nYou'll find attached a reproducer, that doesn't need a running Neo4j instance. It's only dependency is `io.netty:netty-buffer` and I create the scenario when the message handler receives a welcome message from our server. The class `optimizationissue.Reproducer` creates a Netty `ByteBuf` from the message that the server sent and decodes it as the original Neo4j driver would do. It uses a copy of `PackStream$Unpacker` that I linked above.\r\n\r\nThe message starts with a struct header, so we start by calling `optimizationissue.PackStream.Unpacker#unpackStructHeader`. And while the message fit's a struct header, some other branch seems to be called.\r\n\r\nThe expected output is `{server=Neo4j/4.0.0-rc01, connection_id=bolt-536}`.\r\n\r\nIf you add ` -H:Optimize=0 ` to the native image generation, things work as expected.\r\n\r\nFind the complete project attached and thanks for looking into this.\r\n\r\n[graal-issue.zip](https://github.com/oracle/graal/files/3968386/graal-issue.zip)\r\n\r\n[graal-issue-no-netty-dependencies.zip](https://github.com/oracle/graal/files/3972548/graal-issue-no-netty-dependencies.zip)\r\n", "url": "https://github.com/oracle/graal/issues/1995", "user": "michael-simons", "labels": ["bug", "native-image"], "created": "2019-12-16 14:07:59", "closed": "2019-12-20 15:37:24", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Native Image of Micronaut App which uses Apache POI fails at runtime", "body": "Steps to reproduce. \r\n\r\nClone [micronaut-guides/micronaut-file-download-excel repository and checkout graalvm branch](https://github.com/micronaut-guides/micronaut-file-download-excel/tree/graalvm) branch. \r\n\r\nGenerate the native image:\r\n\r\n```\r\n$ sdk use java 19.3.0.r8-grl \r\n$ ./gradlew clean :complete:assemble\r\n$ % native-image --no-server -cp build/libs/complete-0.1-all.jar\r\n```\r\n\r\nExecute the native image:\r\n\r\n```\r\n$ ./micronautguide\r\n```\r\n\r\nNavigate to localhost:8080 click the `Excel` button. \r\n\r\nYou will see: \r\n\r\n\r\n```\r\n12:28:33.671 [pool-2-thread-2] ERROR i.m.h.s.netty.RoutingInBoundHandler - Unexpected error occurred: null\r\njava.lang.ExceptionInInitializerError: null\r\n\tat com.oracle.svm.core.hub.ClassInitializationInfo.initialize(ClassInitializationInfo.java:290)\r\n\tat java.lang.Class.ensureInitialized(DynamicHub.java:475)\r\n\tat org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorkbook$Factory.newInstance(Unknown Source)\r\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.onWorkbookCreate(XSSFWorkbook.java:456)\r\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:259)\r\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:253)\r\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:241)\r\n\tat builders.dsl.spreadsheet.builder.poi.PoiSpreadsheetBuilder.create(PoiSpreadsheetBuilder.java:18)\r\n\tat example.micronaut.BookExcelServiceImpl.excelFileFromBooks(BookExcelServiceImpl.java:23)\r\n\tat example.micronaut.HomeController.excel(HomeController.java:31)\r\n\tat example.micronaut.$HomeControllerDefinition$$exec2.invokeInternal(Unknown Source)\r\n\tat io.micronaut.context.AbstractExecutableMethod.invoke(AbstractExecutableMethod.java:145)\r\n\tat io.micronaut.context.DefaultBeanContext$BeanExecutionHandle.invoke(DefaultBeanContext.java:2844)\r\n\tat io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:235)\r\n\tat io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:122)\r\n\tat io.micronaut.http.server.netty.RoutingInBoundHandler.lambda$buildResultEmitter$17(RoutingInBoundHandler.java:1400)\r\n\tat io.reactivex.internal.operators.flowable.FlowableCreate.subscribeActual(FlowableCreate.java:71)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14918)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14865)\r\n\tat io.micronaut.reactive.rxjava2.RxInstrumentedFlowable.subscribeActual(RxInstrumentedFlowable.java:68)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14918)\r\n\tat io.reactivex.internal.operators.flowable.FlowableMap.subscribeActual(FlowableMap.java:37)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14918)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14865)\r\n\tat io.micronaut.reactive.rxjava2.RxInstrumentedFlowable.subscribeActual(RxInstrumentedFlowable.java:68)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14918)\r\n\tat io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty.subscribeActual(FlowableSwitchIfEmpty.java:32)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14918)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14865)\r\n\tat io.micronaut.reactive.rxjava2.RxInstrumentedFlowable.subscribeActual(RxInstrumentedFlowable.java:68)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14918)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14865)\r\n\tat io.micronaut.reactive.rxjava2.RxInstrumentedFlowable.subscribeActual(RxInstrumentedFlowable.java:68)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14918)\r\n\tat io.reactivex.internal.operators.flowable.FlowableSwitchMap.subscribeActual(FlowableSwitchMap.java:49)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14918)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14865)\r\n\tat io.micronaut.reactive.rxjava2.RxInstrumentedFlowable.subscribeActual(RxInstrumentedFlowable.java:68)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14918)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14868)\r\n\tat io.micronaut.http.context.ServerRequestTracingPublisher.lambda$subscribe$0(ServerRequestTracingPublisher.java:52)\r\n\tat io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:52)\r\n\tat io.micronaut.http.context.ServerRequestTracingPublisher.subscribe(ServerRequestTracingPublisher.java:52)\r\n\tat io.reactivex.internal.operators.flowable.FlowableFromPublisher.subscribeActual(FlowableFromPublisher.java:29)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14918)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14865)\r\n\tat io.micronaut.reactive.rxjava2.RxInstrumentedFlowable.subscribeActual(RxInstrumentedFlowable.java:68)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14918)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14865)\r\n\tat io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber.run(FlowableSubscribeOn.java:82)\r\n\tat io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$BooleanRunnable.run(ExecutorScheduler.java:288)\r\n\tat io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.run(ExecutorScheduler.java:253)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\tat com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:479)\r\n\tat com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:193)\r\nCaused by: java.lang.RuntimeException: Cannot load SchemaTypeSystem. Unable to load class with name schemaorg_apache_xmlbeans.system.sD023D6490046BA0250A839A9AD24C443.TypeSystemHolder. Make sure the generated binary files are on the classpath.\r\n\tat org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XmlBeans.java:788)\r\n\tat org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorkbook.<clinit>(Unknown Source)\r\n\tat com.oracle.svm.core.hub.ClassInitializationInfo.invokeClassInitializer(ClassInitializationInfo.java:350)\r\n\tat com.oracle.svm.core.hub.ClassInitializationInfo.initialize(ClassInitializationInfo.java:270)\r\n\t... 56 common frames omitted\r\nCaused by: java.lang.ClassNotFoundException: schemaorg_apache_xmlbeans.system.sD023D6490046BA0250A839A9AD24C443.TypeSystemHolder\r\n\tat com.oracle.svm.core.hub.ClassForNameSupport.forName(ClassForNameSupport.java:60)\r\n\tat java.lang.ClassLoader.loadClass(Target_java_lang_ClassLoader.java:131)\r\n\tat org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XmlBeans.java:774)\r\n\t... 59 common frames omitted\r\n```\r\n\r\nThis app is using [Spreadsheet builder](http://spreadsheet.dsl.builders) which has a transitive dependency to Apache POI. Probably the most common dependency to work with Excel files. \r\n\r\n## Notes: \r\n\r\nI provided reflection configuration file for [XMLBeans](https://xmlbeans.apache.org).\r\n\r\nIt is under `complete/src/main/graal/reflect.json` with  packages `org.apache.xmlbeans` and `org.openxmlformats` entries obtained with the tracing agent. \r\n\r\nMy `native-image.properties` files look like: \r\n\r\n`src/main/resources/META-INF/native-image/example.micronaut/micronautguide/native-image.properties`\r\n\r\n```\r\nArgs = -H:IncludeResources=logback.xml|application.yml|.*/*.html \\\r\n       -H:Name=micronautguide \\\r\n       -H:IncludeResourceBundles=org.apache.xmlbeans.impl.regex.message \\\r\n       -H:Class=example.micronaut.Application \r\n```\r\n\r\nI needed to specify `IncludeResourceBundles` to get rid of: \r\n\r\n```\r\nCaused by: java.lang.RuntimeException: Installation Problem???  Couldn't load messages: Resource bundle not found org.apache.xmlbeans.impl.regex.message. Register the resource bundle using the option -H:IncludeResourceBundles=org.apache.xmlbeans.impl.regex.message.\r\n\tat org.apache.xmlbeans.impl.regex.RegexParser.setLocale(RegexParser.java:88)\r\n\tat org.apache.xmlbeans.impl.regex.RegexParser.<init>(RegexParser.java:78)\r\n\tat org.apache.xmlbeans.impl.regex.ParserForXMLSchema.<init>(ParserForXMLSchema.java:28)\r\n\tat org.apache.xmlbeans.impl.regex.RegularExpression.setPattern(RegularExpression.java:2996)\r\n\tat org.apache.xmlbeans.impl.regex.RegularExpression.setPattern(RegularExpression.java:3009)\r\n\tat org.apache.xmlbeans.impl.regex.RegularExpression.<init>(RegularExpression.java:2975)\r\n\tat org.apache.xmlbeans.impl.regex.SchemaRegularExpression.<init>(SchemaRegularExpression.java:27)\r\n\tat org.apache.xmlbeans.impl.regex.SchemaRegularExpression.<init>(SchemaRegularExpression.java:23)\r\n\tat org.apache.xmlbeans.impl.regex.SchemaRegularExpression$1.<init>(SchemaRegularExpression.java:44)\r\n\tat org.apache.xmlbeans.impl.regex.SchemaRegularExpression.buildKnownPatternMap(SchemaRegularExpression.java:43)\r\n\tat org.apache.xmlbeans.impl.regex.SchemaRegularExpression.<clinit>(SchemaRegularExpression.java:38)\r\n\tat com.oracle.svm.core.hub.ClassInitializationInfo.invokeClassInitializer(ClassInitializationInfo.java:350)\r\n\tat com.oracle.svm.core.hub.ClassInitializationInfo.initialize(ClassInitializationInfo.java:270)\r\n\t... 68 common frames omitted\r\n```\r\n\r\nAny ideas?\r\n", "url": "https://github.com/oracle/graal/issues/1993", "user": "sdelamo", "labels": ["bug", "native-image"], "created": "2019-12-16 11:50:48", "closed": "2020-01-29 17:55:31", "commits": {}, "ttf": 44.000277777777775, "commitsDetails": []}, {"title": "[native-image] Functional interface binding produces UnsupportedMessageException", "body": "I'm trying to expose Java function to embeded javascript using polyglot binding with functional interface.\r\n \r\nAs per https://github.com/graalvm/graaljs/issues/152#issuecomment-483414280 I've set  ` allowAllAccess(true) ` which fixed ` Exception in thread \"main\" TypeError: execute on JavaObject[Test$1@35a3d49f (Test$1)] failed due to: Message not supported. ` when ran on JVM, however when using native-image same error persists. \r\n\r\nMinimal example of this behaviour can be found [here](https://github.com/lazar-mitrovic/PolyglotJS-Java-function-binding/tree/e84a3a6eb3136cfd7100367362d4a3fde58e704f) (building instructions are included in README)\r\n", "url": "https://github.com/oracle/graal/issues/1973", "user": "lazar-mitrovic", "labels": ["bug", "native-image"], "created": "2019-12-11 13:44:02", "closed": "2020-01-16 11:04:55", "commits": {}, "ttf": 35.000277777777775, "commitsDetails": []}, {"title": "[native-image] agent misses a class for reflection that needs manually adding", "body": "Possibly another case of whatever is happening in #1940. I am running a spring app with the agent, it fails to add a type to the reflect-config.json and the app won't run until I add it. The class that is missing is: `org.springframework.web.reactive.HandlerResult`.\r\n\r\nTo recreate:\r\n```\r\ngit clone git@github.com:spring-projects-experimental/spring-graal-native.git\r\ngit checkout upgrade_19_3\r\ncd spring-graal-native/spring-graal-native-feature\r\nmvn clean package\r\ncd ../spring-graal-native-samples/webflux-netty/agent\r\nRun `./1prepare.sh`\r\nRun `. ./2setcp.sh`\r\nRun `../../../3runWithAgent.sh` // this bit is producing the bad data...\r\nEdit graal/META-INF/native-image/resource-config.json and replace all the $ with '.' (this is a separate bug I have open). (e.g. :1,$ s/\\$/\\./g in vi)\r\nRun `../../../4compile.sh`\r\nRun `./wn`\r\nThis will fail.\r\nEdit graal/META-INF/native-image/reflect-config.json and add (on line 2):\r\n{\"name\":\"org.springframework.web.reactive.HandlerResult\"},\r\nNow re-run `../../../4compile.sh`\r\nRun `./wn`\r\nIt will start OK\r\n```", "url": "https://github.com/oracle/graal/issues/1958", "user": "aclement", "labels": ["agent", "bug", "native-image", "spring"], "created": "2019-12-09 20:00:23", "closed": "2020-04-01 14:06:34", "commits": {}, "ttf": 113.00027777777778, "commitsDetails": []}, {"title": "[native-image] com.oracle.svm.core.jdk.UnsupportedFeatureError for sun.text.spi.JavaTimeDateTimePatternProvider", "body": "LocalDate.format gives UnsupportedFeatureError for sun.text.spi.JavaTimeDateTimePatternProvider.\r\n\r\n LocaleServiceProviderAdapter.getAdapter:  providerClass: sun.text.spi.JavaTimeDateTimePatternProvider\r\n[Fri Dec 06 19:16:23 CET 2019][INFO] [SUB] com.oracle.svm.core.jdk.UnsupportedFeatureError: LocaleServiceProviderAdapter.getAdapter:  providerClass: sun.text.spi.JavaTimeDateTimePatternProvider\r\n[Fri Dec 06 19:16:23 CET 2019][INFO] [SUB] \tat com.oracle.svm.core.util.VMError.unsupportedFeature(VMError.java:102)\r\n[Fri Dec 06 19:16:23 CET 2019][INFO] [SUB] \tat sun.util.locale.provider.LocaleProviderAdapter.getAdapter(LocaleProviderAdapter.java:51)\r\n[Fri Dec 06 19:16:23 CET 2019][INFO] [SUB] \tat java.time.format.DateTimeFormatterBuilder.getLocalizedDateTimePattern(DateTimeFormatterBuilder.java:221)\r\n[Fri Dec 06 19:16:23 CET 2019][INFO] [SUB] \tat java.time.format.DateTimeFormatterBuilder$LocalizedPrinterParser.formatter(DateTimeFormatterBuilder.java:4769)\r\n[Fri Dec 06 19:16:23 CET 2019][INFO] [SUB] \tat java.time.format.DateTimeFormatterBuilder$LocalizedPrinterParser.format(DateTimeFormatterBuilder.java:4745)\r\n[Fri Dec 06 19:16:23 CET 2019][INFO] [SUB] \tat java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2335)\r\n[Fri Dec 06 19:16:23 CET 2019][INFO] [SUB] \tat java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1843)\r\n[Fri Dec 06 19:16:23 CET 2019][INFO] [SUB] \tat java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1817)\r\n[Fri Dec 06 19:16:23 CET 2019][INFO] [SUB] \tat java.time.LocalDate.format(LocalDate.java:1816)\r\n\r\nPossible cause:  sun.text.spi.JavaTimeDateTimePatternProvider is not included in the spiClasses() list in LocalSubstitutions.java", "url": "https://github.com/oracle/graal/issues/1955", "user": "maxum2610", "labels": ["bug", "native-image"], "created": "2019-12-07 15:36:59", "closed": "2020-01-13 18:18:53", "commits": {}, "ttf": 37.000277777777775, "commitsDetails": []}, {"title": "[native-image] server usage doesn't produce reliable images across builds", "body": "I have my simplest spring app. If I compile with `--no-server` I always get the same image and same output. If I try to run with a server, my image changes size across multiple builds and the output from my app changes. Here are two images built in sequence with the server:\r\n```\r\n\r\nCompile with server, first build (69 seconds):\r\n\r\n  .   ____          _            __ _ _\r\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\r\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\r\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\r\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\r\n =========|_|==============|___/=/_/_/_/\r\n :: Spring Boot ::\r\n\r\nDec 06, 2019 4:07:41 PM org.springframework.boot.StartupInfoLogger logStarting\r\nINFO: Starting CommandlinerunnerApplication on Andys-MacBook-Pro-2018.local with PID 51764 (/Users/aclement/gits/spring-graal-native/spring-graal-native-samples/commandlinerunner/clr started by aclement in /Users/aclement/gits/spring-graal-native/spring-graal-native-samples/commandlinerunner)\r\nDec 06, 2019 4:07:41 PM org.springframework.boot.SpringApplication logStartupProfileInfo\r\nINFO: No active profile set, falling back to default profiles: default\r\nDec 06, 2019 4:07:41 PM org.springframework.boot.StartupInfoLogger logStarted\r\nINFO: Started CommandlinerunnerApplication in 0.041 seconds (JVM running for 0.045)\r\nCLR running!\r\n\r\nreal    0m0.136s\r\nuser    0m0.032s\r\nsys     0m0.022s\r\n\r\nCompile with server, second build (48s):\r\n\r\n  .   ____          _            __ _ _\r\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\r\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\r\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\r\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\r\n =========|_|==============|___/=/_/_/_/\r\n :: Spring Boot ::\r\n\r\nCLR running!\r\n\r\nreal    0m0.138s\r\nuser    0m0.035s\r\nsys     0m0.021s\r\n```\r\n\r\nNotice all the logging is gone in the second image.  To recreate:\r\n```\r\ngit clone https://github.com/spring-projects-experimental/spring-graal-native\r\ncd spring-graal-native/spring-graal-native-feature\r\ngit checkout upgrade_19_3\r\nmvn clean package\r\ncd ../spring-graal-native-samples/commandlinerunner\r\nModify compile.sh to remove --no-server then run it.\r\n```", "url": "https://github.com/oracle/graal/issues/1952", "user": "aclement", "labels": ["bug", "native-image", "spring"], "created": "2019-12-07 00:24:19", "closed": "2020-06-30 02:33:29", "commits": {}, "ttf": 206.00027777777777, "commitsDetails": []}, {"title": "[native-agent] agent missing a type when computing reflect-config.json files", "body": "The repro project is here with instructions in the README:\r\n\r\nhttps://github.com/aclement/spring-graal-agent-1\r\n\r\nThis is with graal 19.3 (11).\r\n\r\nThe type missing is `org.springframework.context.support.PropertySourcesPlaceholderConfigurer` - not quite sure which reflection call is not being caught though. That type is the return type of a method:\r\n\r\n```\r\npublic static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer() {\r\n```\r\n in type `PropertyPlaceholderAutoConfiguration` that is accessed via reflection\r\n```\r\nObject result = factoryMethod.invoke(factoryBean, args);\r\n```\r\nmade from `CglibSubclassingInstantiationStrategy:154`. I suspect something is done reflectively on the result sometime later.", "url": "https://github.com/oracle/graal/issues/1940", "user": "aclement", "labels": ["agent", "bug", "native-image", "spring"], "created": "2019-12-05 19:58:17", "closed": "2020-03-12 16:36:09", "commits": {}, "ttf": 97.00027777777778, "commitsDetails": []}, {"title": "[native-image] Setting -Djava.net.preferIPv6Addresses=true is broken in 19.3.0", "body": "Consider this simple program:\r\n```\r\nimport java.net.InetAddress;\r\n\r\npublic class Ipv6Test {\r\n  public static void main(String[] args) throws Exception {\r\n    final InetAddress address = InetAddress.getByName(\"google.com\");\r\n    System.out.println(\"ip: \" + address.getHostAddress());\r\n  }\r\n}\r\n```\r\n\r\nI've built 2 native-images for that: using new 19.3.0 and old 19.0.2.\r\nCommands:\r\n```\r\n$ graalvm-ce-java8-19.3.0/bin/native-image --no-server --initialize-at-build-time --no-fallback --enable-url-protocols=https,http -Djava.net.preferIPv6Addresses=true Ipv6Test ipv6_test_19.3.0\r\n$ graalvm-ce-19.0.2/bin/native-image       --no-server --initialize-at-build-time --no-fallback --enable-url-protocols=https,http -Djava.net.preferIPv6Addresses=true Ipv6Test ipv6_test_19.0.2\r\n```\r\n\r\nRuns:\r\n```\r\n$ ./ipv6_test_19.3.0 -Djava.net.preferIPv6Addresses=true\r\nip: 74.125.205.139\r\n$ ./ipv6_test_19.0.2 -Djava.net.preferIPv6Addresses=true\r\nip: 2a00:1450:4010:c02:0:0:0:8a\r\n```\r\n\r\nSo now I can't update to 19.3.0 because native images in our company are working in ipv6-only environment and with 19.3.0 I'm getting \"Network unreachable\" errors for any connection attempt.", "url": "https://github.com/oracle/graal/issues/1937", "user": "qdeee", "labels": ["bug", "native-image"], "created": "2019-12-05 07:37:55", "closed": "2020-01-14 19:22:11", "commits": {}, "ttf": 40.000277777777775, "commitsDetails": []}, {"title": "DynamicProxySupport is not thread safe", "body": "I have seen a random failure in the Quarkus test suite where a JDK proxy was not created. It appears that DynamicProxySupport.addProxyClass is called from multiple threads, but is not thread safe. I think com.oracle.svm.reflect.proxy.DynamicProxySupport#proxyCache needs to be changed to a ConcurrentHashMap.", "url": "https://github.com/oracle/graal/issues/1927", "user": "stuartwdouglas", "labels": ["bug", "native-image"], "created": "2019-12-04 02:14:03", "closed": "2019-12-05 03:25:43", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "[native-image] Mongonaut crashes during runtime when compiled as a static native image", "body": "**What goes wrong:**\r\nRunning the docker image that contains the final application works, but after some time, the container dies. Copying the native image from the container using `docker cp` and running it under GDB shows that it segfaults after running for a bit with the following stacktrace: \r\n\r\n```\r\nThread 5 \"Timer-0\" received signal SIGSEGV, Segmentation fault.\r\n[Switching to Thread 0x7fffef7fe700 (LWP 387)]\r\n0x00007ffff71f1448 in internal_getent (stream=stream@entry=0x7ffff6ad3ec0, \r\n    result=result@entry=0x7fffef7fcf90, buffer=buffer@entry=0x7fffef7fd1e0 \"\", \r\n    buflen=buflen@entry=1024, errnop=errnop@entry=0x7fffef7fe6b0, \r\n    herrnop=herrnop@entry=0x7fffef7fe6e8, af=2, flags=0)\r\n    at nss_files/files-XXX.c:216\r\n216\tnss_files/files-XXX.c: No such file or directory.\r\n(gdb) bt\r\n#0  0x00007ffff71f1448 in internal_getent (stream=stream@entry=0x7ffff6ad3ec0, \r\n    result=result@entry=0x7fffef7fcf90, buffer=buffer@entry=0x7fffef7fd1e0 \"\", \r\n    buflen=buflen@entry=1024, errnop=errnop@entry=0x7fffef7fe6b0, \r\n    herrnop=herrnop@entry=0x7fffef7fe6e8, af=2, flags=0)\r\n    at nss_files/files-XXX.c:216\r\n#1  0x00007ffff71f26af in _nss_files_gethostbyname3_r (\r\n    name=0x7ffff41071c8 \"localhost\", af=2, result=0x7fffef7fcf90, \r\n    buffer=<optimized out>, buflen=1024, errnop=0x7fffef7fe6b0, \r\n    herrnop=0x7fffef7fe6e8, ttlp=0x0, canonp=0x7fffef7fcf80)\r\n    at nss_files/files-hosts.c:352\r\n#2  0x00000000027046af in ?? ()\r\n#3  0x000000000270528b in getaddrinfo ()\r\n#4  0x0000000001abdaa3 in ?? ()\r\n#5  0x00000000027a9000 in ?? ()\r\n#6  0x00007ffff4106028 in ?? ()\r\n#7  0x00007ffff7e6d7a0 in ?? ()\r\n#8  0x0000000001d556ec in ?? ()\r\n#9  0x00000001027a9000 in ?? ()\r\n#10 0x00007ffff4107150 in ?? ()\r\n<The rest of the backtrace has been omitted as the application was not compiled with debug symbols>\r\n```\r\n\r\n**Steps to reproduce:**\r\nMongonaut source:https://github.com/dekstroza/mongonaut\r\nReproducing this bug requires Docker.\r\n\r\n- Running this demo locally and not in Kubernetes requires a MongoDB server. The way I went was to install MongoDB locally and then share it with the docker container running the application. However, the bug is still reproducible even without a MongoDB server, but you should not send any requests to the application.\r\n- Clone the repo, checkout the _static-linking_ branch and get the latest GraalVM and Micronaut using SDKMAN.\r\n- Run `mvn clean install` in the project root directory.\r\n\r\nYou should now have a new docker image called `dekstroza/mongonaut:1.0.0-SNAPSHOT`\r\nIn order to run it, do `docker run --net=host dekstroza/mongonaut:1.0.0-SNAPSHOT`\r\n\r\nIf you have installed MongoDB, you can verify the requests work by running: \r\n```\r\n$ curl localhost:8080/mongonaut/alarms\r\n[]\r\n$ curl -X POST localhost:8080/mongonaut/alarms -d '{\"id\": 1,\"name\": \"Beeeeep\", \"severity\": \"LOW\"}' -H 'Content-Type:application/json'\r\n{\"id\":1,\"name\":\"Beeeeep\",\"severity\":\"LOW\"}\r\n$ curl localhost:8080/mongonaut/alarms\r\n[{\"id\":1,\"name\":\"Beeeeep\",\"severity\":\"LOW\"}]\r\n```\r\nEither way, after waiting for some time, the container will die.\r\nThe demo was run on Ubuntu 18.04, with the kernel version `5.0.0-36-generic`", "url": "https://github.com/oracle/graal/issues/1919", "user": "gradinac", "labels": ["bug", "native-image"], "created": "2019-12-03 18:20:11", "closed": "2020-02-20 14:44:06", "commits": {}, "ttf": 78.00027777777778, "commitsDetails": []}, {"title": "Threads Spin Indefinitely at java.util.WeakHashMap.get ", "body": "GraalVM Version: 19.2.1\r\nJava Version: 11.0.4\r\n\r\nMy application uses GraalVM to run JavaScript code snippets. I have 8 threads running JavaScript code. Each of these 8 threads has its own context, but shares an engine. In the thread dump, these threads have a name that starts with \"JSRunner-\".\r\n\r\nThere are also another 8 watchdog threads. These threads monitor the execution of the JavaScript code and forcefully close the context if the execution exceeds a time limit. These threads have a name that start with \"watchdog-thread-\". \r\n\r\nOn several occasions, I have seen the application become unresponsive because each of the \"JSRunner-1\" threads are stuck with a stack similar to the following:\r\n\r\n\r\n> \"JSRunner-1\" #413 daemon prio=5 os_prio=0 cpu=1218834.75ms elapsed=2861.83s tid=0x00007fb54801b000 nid=0x9742 runnable  [0x00007fb50b6f2000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\tat java.util.WeakHashMap.get(java.base@11.0.4/WeakHashMap.java:404)\r\n\tat java.util.Map.computeIfAbsent(java.base@11.0.4/Map.java:1001)\r\n\tat com.oracle.truffle.js.runtime.objects.JSShapeData.getShapeData(JSShapeData.java:109)\r\n\tat com.oracle.truffle.js.runtime.objects.JSShapeData.getEnumerablePropertyNamesArray(JSShapeData.java:136)\r\n\tat com.oracle.truffle.js.runtime.objects.JSShapeData.getEnumerablePropertyNames(JSShapeData.java:146)\r\n\tat com.oracle.truffle.js.runtime.objects.JSShape.getEnumerablePropertyNames(JSShape.java:196)\r\n\r\n\r\nAdditional, all of the watchdog threads have a stack similar to the following:\r\n\r\n\r\n> \"watchdog-thread-1\" #425 prio=5 os_prio=0 cpu=84.25ms elapsed=2859.07s tid=0x00007fb82c048000 nid=0x977b in Object.wait()  [0x00007fb50a4f1000]\r\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\n\tat java.lang.Object.wait(java.base@11.0.4/Native Method)\r\n\t- waiting on <no object reference available>\r\n\tat com.oracle.truffle.polyglot.PolyglotContextImpl.waitForClose(org.graalvm.truffle/PolyglotContextImpl.java:905)\r\n\t- waiting to re-lock in wait() <0x0000000571b142a0> (a com.oracle.truffle.polyglot.PolyglotContextImpl)\r\n\tat com.oracle.truffle.polyglot.PolyglotEngineImpl$CancelHandler.waitForClosing(org.graalvm.truffle/PolyglotEngineImpl.java:1055)\r\n\tat com.oracle.truffle.polyglot.PolyglotContextImpl.close(org.graalvm.truffle/PolyglotContextImpl.java:858)\r\n\tat org.graalvm.polyglot.Context.close(org.graalvm.sdk/Context.java:635)\r\n\r\nIt appears the \"JSRunner-\" threads are in an infinite loop at `java.util.WeakHashMap.get`. If access to the map is not appropriately protected in a multithreaded context, race conditions and data corruption can occur. A similar issue is detailed here: https://mailinator.blogspot.com/2009/06/beautiful-race-condition.html \r\n\r\nA partial thread dump from my application is attached. \r\n\r\n[partial_thread_dump.log](https://github.com/oracle/graal/files/3913562/partial_thread_dump.log)", "url": "https://github.com/oracle/graal/issues/1916", "user": "cjet", "labels": ["bug"], "created": "2019-12-02 22:30:11", "closed": "2020-01-15 13:24:33", "commits": {}, "ttf": 43.000277777777775, "commitsDetails": []}, {"title": "[native image] crash with SIGSEGV", "body": "Hi guys,\r\n\r\nI'm trying to build a simple \"hello world\" groovy app and compile using `native-image` (see **https://github.com/mojo2012/groovy-native**). Unfortunately the native-image tool crashes the JVM with a `SIGSEGV` and `exit code 134`:\r\n\r\n```\r\n[io.spotnext.groovynative.main:64539]    classlist:   7,661.82 ms\r\n[io.spotnext.groovynative.main:64539]        (cap):   2,763.46 ms\r\n[io.spotnext.groovynative.main:64539]        setup:   5,836.19 ms\r\n[io.spotnext.groovynative.main:64539]   (typeflow):  40,512.11 ms\r\n[io.spotnext.groovynative.main:64539]    (objects):  28,188.16 ms\r\n[io.spotnext.groovynative.main:64539]   (features):   1,639.57 ms\r\n[io.spotnext.groovynative.main:64539]     analysis:  71,823.00 ms\r\n[io.spotnext.groovynative.main:64539]     (clinit):     878.60 ms\r\n[io.spotnext.groovynative.main:64539]     universe:   2,814.27 ms\r\n[io.spotnext.groovynative.main:64539]      (parse):   8,091.91 ms\r\n[io.spotnext.groovynative.main:64539]     (inline):   7,152.93 ms\r\n[io.spotnext.groovynative.main:64539]    (compile):  50,854.53 ms\r\n#\r\n# A fatal error has been detected by the Java Runtime Environment:\r\n#\r\n#  SIGSEGV (0xb) at pc=0x000000010b2a5f3c, pid=64539, tid=42507\r\n#\r\n# JRE version: OpenJDK Runtime Environment (11.0.5+10) (build 11.0.5+10-jvmci-19.3-b05-LTS)\r\n# Java VM: OpenJDK 64-Bit GraalVM CE 19.3.0 (11.0.5+10-jvmci-19.3-b05-LTS, mixed mode, sharing, tiered, jvmci, jvmci compiler, compressed oops, g1 gc, bsd-amd64)\r\n# Problematic frame:\r\n# V  [libjvm.dylib+0x6a5f3c]  Symbol::as_unicode(int&) const+0x10\r\n#\r\n# No core dump will be written. Core dumps have been disabled. To enable core dumping, try \"ulimit -c unlimited\" before starting Java again\r\n#\r\n# An error report file with more information is saved as:\r\n# /Users/matthias.fuchs.lokal/Projekte/privat/groovy-native/target/hs_err_pid64539.log\r\n#\r\n# If you would like to submit a bug report, please visit:\r\n#   http://bugreport.java.com/bugreport/crash.jsp\r\n#\r\nError: Image build request failed with exit status 134\r\ncom.oracle.svm.driver.NativeImage$NativeImageError: Image build request failed with exit status 134\r\n\tat com.oracle.svm.driver.NativeImage.showError(NativeImage.java:1482)\r\n\tat com.oracle.svm.driver.NativeImage.build(NativeImage.java:1260)\r\n\tat com.oracle.svm.driver.NativeImage.performBuild(NativeImage.java:1222)\r\n\tat com.oracle.svm.driver.NativeImage.main(NativeImage.java:1181)\r\n\tat com.oracle.svm.driver.NativeImage$JDK9Plus.main(NativeImage.java:1665)\r\n```\r\n\r\nHere are the logs:\r\n[maven.log](https://github.com/oracle/graal/files/3906161/maven.log)\r\n[hs_err_pid64539.log](https://github.com/oracle/graal/files/3906162/hs_err_pid64539.log)\r\n\r\nHope you can help me :-)\r\n\r\nBtw also the proposed fix for this I found here in this repo doesn't work: https://github.com/wololock/graalvm-groovy-examples/tree/master/hello-world.\r\n(This was linked in another issue)\r\n\r\ncheers matthias", "url": "https://github.com/oracle/graal/issues/1906", "user": "mojo2012", "labels": ["bug", "native-image"], "created": "2019-11-29 18:23:48", "closed": "2020-02-07 19:22:22", "commits": {}, "ttf": 70.00027777777778, "commitsDetails": []}, {"title": "[native-image] NullPointerException during security services registration", "body": "Hi GraalVM team!\r\n\r\nI'm working on the GraalVM `19.3.0` integration into Quarkus and a `NullPointerException` is being thrown during three of the Quarkus extensions integration tests.\r\n\r\nHere's an example of NPE (this one is from a local build but we have the same failures in the Quarkus CI):\r\n\r\n```\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildStep] /Library/Java/JavaVirtualMachines/graalvm-unknown-java8-19.3.0/Contents/Home/jre/bin/native-image -J-Djava.util.logging.manager=org.jboss.logmanager.LogManager -J-Dsun.nio.ch.maxUpdateArraySize=100 -J-Dvertx.logger-delegate-factory-class-name=io.quarkus.vertx.core.runtime.VertxLogDelegateFactory -J-Dvertx.disableDnsResolver=true -J-Dio.netty.leakDetection.level=DISABLED -J-Dio.netty.allocator.maxOrder=1 --initialize-at-build-time= -H:InitialCollectionPolicy=com.oracle.svm.core.genscavenge.CollectionPolicy$BySpaceAndTime -jar quarkus-integration-test-elytron-security-oauth2-999-SNAPSHOT-runner.jar -H:FallbackThreshold=0 -H:+ReportExceptionStackTraces -H:+TraceSecurityServices -H:-AddAllCharsets -H:EnableURLProtocols=http,https --enable-all-security-services -H:+JNI --no-server -H:-UseServiceLoaderFeature -H:+StackTrace quarkus-integration-test-elytron-security-oauth2-999-SNAPSHOT-runner\r\n[quarkus-integration-test-elytron-security-oauth2-999-SNAPSHOT-runner:47933]    classlist:  19,354.31 ms\r\n[quarkus-integration-test-elytron-security-oauth2-999-SNAPSHOT-runner:47933]        (cap):   6,483.14 ms\r\n[quarkus-integration-test-elytron-security-oauth2-999-SNAPSHOT-runner:47933]        setup:  10,970.08 ms\r\n13:43:26,876 INFO  [org.jbo.threads] JBoss Threads version 3.0.0.Final\r\n[quarkus-integration-test-elytron-security-oauth2-999-SNAPSHOT-runner:47933]     analysis:  59,683.57 ms\r\nFatal error: java.lang.NullPointerException\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat java.util.concurrent.ForkJoinTask.getThrowableException(ForkJoinTask.java:598)\r\n\tat java.util.concurrent.ForkJoinTask.get(ForkJoinTask.java:1005)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:462)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:315)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:454)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:115)\r\nCaused by: java.lang.NullPointerException\r\n\tat sun.reflect.UnsafeFieldAccessorImpl.ensureObj(UnsafeFieldAccessorImpl.java:57)\r\n\tat sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl.get(UnsafeQualifiedObjectFieldAccessorImpl.java:38)\r\n\tat java.lang.reflect.Field.get(Field.java:393)\r\n\tat com.oracle.svm.hosted.SecurityServicesFeature.lambda$getConsParamClassAccessor$0(SecurityServicesFeature.java:279)\r\n\tat com.oracle.svm.hosted.SecurityServicesFeature.register(SecurityServicesFeature.java:313)\r\n\tat com.oracle.svm.hosted.SecurityServicesFeature.registerServicesForReflection(SecurityServicesFeature.java:191)\r\n\tat com.oracle.svm.hosted.ReachabilityHandlerFeature.duringAnalysis(ReachabilityHandlerFeature.java:114)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$runPointsToAnalysis$8(NativeImageGenerator.java:710)\r\n\tat com.oracle.svm.hosted.FeatureHandler.forEachFeature(FeatureHandler.java:63)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:710)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:530)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:445)\r\n\tat java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1386)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nError: Image build request failed with exit status 1\r\n```\r\n\r\nSince this exception didn't give any details about the service that was causing it, I added traces to the GraalVM source code and recompiled it. This helped me determine the services names that are causing the exceptions: `org.wildfly.security.password.impl.PasswordFactorySpiImpl` and `org.bouncycastle.jce.provider.X509StoreCertCollection`. There might be other services involved.\r\n\r\nI'm still not sure of what's causing this, but there's at least one thing that justifies creating this issue: it would be great if you could display the service name that is causing the NPE throw. Unless this is not supposed to happen at all.\r\n\r\n@cstancu: Does this look like a possible GraalVM bug or is there something wrong on our side? If it looks like a bug, I'll try to provide a reproducer.\r\n\r\nHere's the Quarkus issue about the GraalVM 19.3.0 integration (this one is limited to JDK8 only): https://github.com/quarkusio/quarkus/pull/5358", "url": "https://github.com/oracle/graal/issues/1883", "user": "gwenneg", "labels": ["bug", "native-image"], "created": "2019-11-25 13:45:29", "closed": "2019-11-27 21:42:37", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "[native-image] collect2: error: ld returned 1 exit status, undefined reference to `JVM_GetMethodTypeAnnotations'", "body": "Affected version: GraalVM CE 19.3.0\r\n\r\nI tried to upgrade my Groovy + GraalVM examples today from 19.2.1 to 19.3.0 and I got the following error while running the `native-image` compiler:\r\n\r\n```\r\n[countlinks:169]    classlist:   5,136.13 ms\r\n[countlinks:169]        (cap):     881.43 ms\r\n[countlinks:169]        setup:   2,493.77 ms\r\n[countlinks:169]   (typeflow):  19,605.75 ms\r\n[countlinks:169]    (objects):  19,679.49 ms\r\n[countlinks:169]   (features):   1,491.10 ms\r\n[countlinks:169]     analysis:  41,964.70 ms\r\n[countlinks:169]     (clinit):     561.29 ms\r\n[countlinks:169]     universe:   1,777.69 ms\r\n[countlinks:169]      (parse):   2,671.53 ms\r\n[countlinks:169]     (inline):   6,993.20 ms\r\n[countlinks:169]    (compile):  26,563.52 ms\r\n[countlinks:169]      compile:  38,372.31 ms\r\n[countlinks:169]        image:   4,105.61 ms\r\n[countlinks:169]        write:     604.50 ms\r\nFatal error: java.lang.RuntimeException: java.lang.RuntimeException: host C compiler or linker does not seem to work: java.lang.RuntimeException: returned 1\r\n\r\nRunning command: cc -v -o /app/countlinks -z noexecstack -Wl,--gc-sections -Wl,--dynamic-list -Wl,/tmp/SVM-2222675876113505818/exported_symbols.list -Wl,-x -L/tmp/SVM-2222675876113505818 -L/opt/graalvm-ce-java8-19.3.0/jre/lib -L/opt/graalvm-ce-java8-19.3.0/jre/lib/svm/clibraries/linux-amd64 /tmp/SVM-2222675876113505818/countlinks.o /opt/graalvm-ce-java8-19.3.0/jre/lib/svm/clibraries/linux-amd64/libffi.a /opt/graalvm-ce-java8-19.3.0/jre/lib/svm/clibraries/linux-amd64/liblibchelper.a /opt/graalvm-ce-java8-19.3.0/jre/lib/svm/clibraries/linux-amd64/libjvm.a /opt/graalvm-ce-java8-19.3.0/jre/lib/svm/clibraries/linux-amd64/libstrictmath.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libnet.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libjava.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libzip.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libnio.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libsunec.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libsunec.a -lm -lpthread -ldl -lpthread -lz -lrt -lstdc++\r\n\r\nUsing built-in specs.\r\nCOLLECT_GCC=cc\r\nCOLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/lto-wrapper\r\nTarget: x86_64-redhat-linux\r\nConfigured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-linker-build-id --with-linker-hash-style=gnu --enable-languages=c,c++,objc,obj-c++,java,fortran,ada,go,lto --enable-plugin --enable-initfini-array --disable-libgcj --with-isl=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/isl-install --with-cloog=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/cloog-install --enable-gnu-indirect-function --with-tune=generic --with-arch_32=x86-64 --build=x86_64-redhat-linux\r\nThread model: posix\r\ngcc version 4.8.5 20150623 (Red Hat 4.8.5-39.0.1) (GCC) \r\nCOMPILER_PATH=/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/:/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/:/usr/libexec/gcc/x86_64-redhat-linux/:/usr/lib/gcc/x86_64-redhat-linux/4.8.5/:/usr/lib/gcc/x86_64-redhat-linux/\r\nLIBRARY_PATH=/usr/lib/gcc/x86_64-redhat-linux/4.8.5/:/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/:/lib/../lib64/:/usr/lib/../lib64/:/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../:/lib/:/usr/lib/\r\nCOLLECT_GCC_OPTIONS='-v' '-o' '/app/countlinks' '-z' 'noexecstack' '-L/tmp/SVM-2222675876113505818' '-L/opt/graalvm-ce-java8-19.3.0/jre/lib' '-L/opt/graalvm-ce-java8-19.3.0/jre/lib/svm/clibraries/linux-amd64' '-mtune=generic' '-march=x86-64'\r\n /usr/libexec/gcc/x86_64-redhat-linux/4.8.5/collect2 --build-id --no-add-needed --eh-frame-hdr --hash-style=gnu -m elf_x86_64 -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o /app/countlinks -z noexecstack /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crti.o /usr/lib/gcc/x86_64-redhat-linux/4.8.5/crtbegin.o -L/tmp/SVM-2222675876113505818 -L/opt/graalvm-ce-java8-19.3.0/jre/lib -L/opt/graalvm-ce-java8-19.3.0/jre/lib/svm/clibraries/linux-amd64 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../.. --gc-sections --dynamic-list /tmp/SVM-2222675876113505818/exported_symbols.list -x /tmp/SVM-2222675876113505818/countlinks.o /opt/graalvm-ce-java8-19.3.0/jre/lib/svm/clibraries/linux-amd64/libffi.a /opt/graalvm-ce-java8-19.3.0/jre/lib/svm/clibraries/linux-amd64/liblibchelper.a /opt/graalvm-ce-java8-19.3.0/jre/lib/svm/clibraries/linux-amd64/libjvm.a /opt/graalvm-ce-java8-19.3.0/jre/lib/svm/clibraries/linux-amd64/libstrictmath.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libnet.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libjava.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libzip.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libnio.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libsunec.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libsunec.a -lm -lpthread -ldl -lpthread -lz -lrt -lstdc++ -lgcc --as-needed -lgcc_s --no-as-needed -lc -lgcc --as-needed -lgcc_s --no-as-needed /usr/lib/gcc/x86_64-redhat-linux/4.8.5/crtend.o /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crtn.o\r\n/opt/graalvm-ce-java8-19.3.0/jre/lib/libjava.a(Executable.o): In function `Java_java_lang_reflect_Executable_getTypeAnnotationBytes0':\r\n/opt/jprt/T/P1/225159.buildslave/s/jdk/src/share/native/java/lang/reflect/Executable.c:39: undefined reference to `JVM_GetMethodTypeAnnotations'\r\n/opt/graalvm-ce-java8-19.3.0/jre/lib/libjava.a(Executable.o): In function `Java_java_lang_reflect_Executable_getParameters0':\r\n/opt/jprt/T/P1/225159.buildslave/s/jdk/src/share/native/java/lang/reflect/Executable.c:33: undefined reference to `JVM_GetMethodParameters'\r\ncollect2: error: ld returned 1 exit status\r\n\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat java.util.concurrent.ForkJoinTask.getThrowableException(ForkJoinTask.java:593)\r\n\tat java.util.concurrent.ForkJoinTask.get(ForkJoinTask.java:1005)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:462)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:315)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:454)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:115)\r\nCaused by: java.lang.RuntimeException: host C compiler or linker does not seem to work: java.lang.RuntimeException: returned 1\r\n\r\nRunning command: cc -v -o /app/countlinks -z noexecstack -Wl,--gc-sections -Wl,--dynamic-list -Wl,/tmp/SVM-2222675876113505818/exported_symbols.list -Wl,-x -L/tmp/SVM-2222675876113505818 -L/opt/graalvm-ce-java8-19.3.0/jre/lib -L/opt/graalvm-ce-java8-19.3.0/jre/lib/svm/clibraries/linux-amd64 /tmp/SVM-2222675876113505818/countlinks.o /opt/graalvm-ce-java8-19.3.0/jre/lib/svm/clibraries/linux-amd64/libffi.a /opt/graalvm-ce-java8-19.3.0/jre/lib/svm/clibraries/linux-amd64/liblibchelper.a /opt/graalvm-ce-java8-19.3.0/jre/lib/svm/clibraries/linux-amd64/libjvm.a /opt/graalvm-ce-java8-19.3.0/jre/lib/svm/clibraries/linux-amd64/libstrictmath.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libnet.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libjava.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libzip.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libnio.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libsunec.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libsunec.a -lm -lpthread -ldl -lpthread -lz -lrt -lstdc++\r\n\r\nUsing built-in specs.\r\nCOLLECT_GCC=cc\r\nCOLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/lto-wrapper\r\nTarget: x86_64-redhat-linux\r\nConfigured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-linker-build-id --with-linker-hash-style=gnu --enable-languages=c,c++,objc,obj-c++,java,fortran,ada,go,lto --enable-plugin --enable-initfini-array --disable-libgcj --with-isl=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/isl-install --with-cloog=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/cloog-install --enable-gnu-indirect-function --with-tune=generic --with-arch_32=x86-64 --build=x86_64-redhat-linux\r\nThread model: posix\r\ngcc version 4.8.5 20150623 (Red Hat 4.8.5-39.0.1) (GCC) \r\nCOMPILER_PATH=/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/:/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/:/usr/libexec/gcc/x86_64-redhat-linux/:/usr/lib/gcc/x86_64-redhat-linux/4.8.5/:/usr/lib/gcc/x86_64-redhat-linux/\r\nLIBRARY_PATH=/usr/lib/gcc/x86_64-redhat-linux/4.8.5/:/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/:/lib/../lib64/:/usr/lib/../lib64/:/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../:/lib/:/usr/lib/\r\nCOLLECT_GCC_OPTIONS='-v' '-o' '/app/countlinks' '-z' 'noexecstack' '-L/tmp/SVM-2222675876113505818' '-L/opt/graalvm-ce-java8-19.3.0/jre/lib' '-L/opt/graalvm-ce-java8-19.3.0/jre/lib/svm/clibraries/linux-amd64' '-mtune=generic' '-march=x86-64'\r\n /usr/libexec/gcc/x86_64-redhat-linux/4.8.5/collect2 --build-id --no-add-needed --eh-frame-hdr --hash-style=gnu -m elf_x86_64 -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o /app/countlinks -z noexecstack /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crti.o /usr/lib/gcc/x86_64-redhat-linux/4.8.5/crtbegin.o -L/tmp/SVM-2222675876113505818 -L/opt/graalvm-ce-java8-19.3.0/jre/lib -L/opt/graalvm-ce-java8-19.3.0/jre/lib/svm/clibraries/linux-amd64 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../.. --gc-sections --dynamic-list /tmp/SVM-2222675876113505818/exported_symbols.list -x /tmp/SVM-2222675876113505818/countlinks.o /opt/graalvm-ce-java8-19.3.0/jre/lib/svm/clibraries/linux-amd64/libffi.a /opt/graalvm-ce-java8-19.3.0/jre/lib/svm/clibraries/linux-amd64/liblibchelper.a /opt/graalvm-ce-java8-19.3.0/jre/lib/svm/clibraries/linux-amd64/libjvm.a /opt/graalvm-ce-java8-19.3.0/jre/lib/svm/clibraries/linux-amd64/libstrictmath.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libnet.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libjava.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libzip.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libnio.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libsunec.a /opt/graalvm-ce-java8-19.3.0/jre/lib/libsunec.a -lm -lpthread -ldl -lpthread -lz -lrt -lstdc++ -lgcc --as-needed -lgcc_s --no-as-needed -lc -lgcc --as-needed -lgcc_s --no-as-needed /usr/lib/gcc/x86_64-redhat-linux/4.8.5/crtend.o /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crtn.o\r\n/opt/graalvm-ce-java8-19.3.0/jre/lib/libjava.a(Executable.o): In function `Java_java_lang_reflect_Executable_getTypeAnnotationBytes0':\r\n/opt/jprt/T/P1/225159.buildslave/s/jdk/src/share/native/java/lang/reflect/Executable.c:39: undefined reference to `JVM_GetMethodTypeAnnotations'\r\n/opt/graalvm-ce-java8-19.3.0/jre/lib/libjava.a(Executable.o): In function `Java_java_lang_reflect_Executable_getParameters0':\r\n/opt/jprt/T/P1/225159.buildslave/s/jdk/src/share/native/java/lang/reflect/Executable.c:33: undefined reference to `JVM_GetMethodParameters'\r\ncollect2: error: ld returned 1 exit status\r\n\r\n\tat com.oracle.svm.hosted.image.NativeBootImageViaCC.write(NativeBootImageViaCC.java:382)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:652)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:445)\r\n\tat java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1386)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nError: Image build request failed with exit status 1\r\n```\r\n\r\nIt seems like the following part explains the root cause:\r\n\r\n```\r\n/opt/graalvm-ce-java8-19.3.0/jre/lib/libjava.a(Executable.o): In function `Java_java_lang_reflect_Executable_getTypeAnnotationBytes0':\r\n/opt/jprt/T/P1/225159.buildslave/s/jdk/src/share/native/java/lang/reflect/Executable.c:39: undefined reference to `JVM_GetMethodTypeAnnotations'\r\n/opt/graalvm-ce-java8-19.3.0/jre/lib/libjava.a(Executable.o): In function `Java_java_lang_reflect_Executable_getParameters0':\r\n/opt/jprt/T/P1/225159.buildslave/s/jdk/src/share/native/java/lang/reflect/Executable.c:33: undefined reference to `JVM_GetMethodParameters'\r\ncollect2: error: ld returned 1 exit status\r\n```\r\n\r\nThis Groovy example worked fine in the 19.2.1. Here is the repository that contains the code, including Dockerfile that compiles the code using official GraalVM CE 19.3.0 image:\r\n\r\nhttps://github.com/wololock/graalvm-groovy-examples/tree/graalvm-19.3.0/grape-script-example\r\n\r\nAll configuration files for reflection, proxies, JNI and resources are generated using native-image-agent.\r\n\r\n## Steps to reproduce (using official Docker image)\r\n\r\n```\r\n$ git clone --single-branch --branch graalvm-19.3.0 https://github.com/wololock/graalvm-groovy-examples.git\r\n\r\n$ cd graalvm-groovy-examples/grape-script-example\r\n\r\n$ docker build -t graalvm-groovy-example:local .\r\n```\r\n\r\nPlease let me know if there is anything I can debug deeper for you. \r\n", "url": "https://github.com/oracle/graal/issues/1875", "user": "wololock", "labels": ["bug", "native-image"], "created": "2019-11-22 21:09:53", "closed": "2019-12-09 16:52:28", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "[native-image] cannot build an image with the 19.3.0 version of GraalVM CE for java8 and java11", "body": "## graalvm-ce-java11-19.3.0\r\n```\r\n$ /usr/lib/jvm/graalvm-ce-java11/bin/native-image --no-server --no-fallback --allow-incomplete-classpath --report-unsupported-elements-at-runtime -jar target/scala-2.13/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.jar\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:341]    classlist:   2,283.88 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:341]        (cap):     661.84 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:341]        setup:   1,656.77 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:341]   (typeflow):   9,919.53 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:341]    (objects):   8,332.85 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:341]   (features):     348.16 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:341]     analysis:  18,896.28 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:341]     (clinit):     371.34 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:341]     universe:     736.70 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:341]      (parse):   1,128.52 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:341]     (inline):   2,112.65 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:341]    (compile):   9,963.96 ms\r\n#\r\n# A fatal error has been detected by the Java Runtime Environment:\r\n#\r\n#  SIGSEGV (0xb) at pc=0x00007f26f47d6216, pid=341, tid=378\r\n#\r\n# JRE version: OpenJDK Runtime Environment (11.0.5+10) (build 11.0.5+10-jvmci-19.3-b05-LTS)\r\n# Java VM: OpenJDK 64-Bit GraalVM CE 19.3.0 (11.0.5+10-jvmci-19.3-b05-LTS, mixed mode, sharing, tiered, jvmci, jvmci compiler, compressed oops, g1 gc, linux-amd64)\r\n# Problematic frame:\r\n# V  [libjvm.so+0xd5b216]  Symbol::as_unicode(int&) const+0x16\r\n#\r\n# Core dump will be written. Default location: Core dumps may be processed with \"/usr/share/apport/apport %p %s %c %d %P\" (or dumping to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/jsoniter-scala-examples/core.341)\r\n#\r\n# An error report file with more information is saved as:\r\n# /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/jsoniter-scala-examples/hs_err_pid341.log\r\n#\r\n# If you would like to submit a bug report, please visit:\r\n#   http://bugreport.java.com/bugreport/crash.jsp\r\n#\r\n```\r\n\r\n## graalvm-ce-java8-19.3.0\r\n```\r\n$ /usr/lib/jvm/graalvm-ce-java8/bin/native-image --no-server --no-fallback --allow-incomplete-classpath --report-unsupported-elements-at-runtime -jar target/scala-2.13/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.jar\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:489]    classlist:   3,007.30 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:489]        (cap):     612.34 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:489]        setup:   1,562.82 ms\r\nwarning: unknown anonymous info of class scala.collection.immutable.LazyList$State$Empty$, assuming class is not anonymous. To remove the warning report an issue to the library or language author. The issue is caused by scala.collection.immutable.LazyList$State$Empty$ which is not following the naming convention.\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:489]   (typeflow):  39,573.50 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:489]    (objects):   8,895.65 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:489]   (features):     203.08 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:489]     analysis:  48,841.41 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:489]     (clinit):     398.47 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:489]     universe:     873.56 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:489]      (parse):  31,137.68 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:489]     (inline):   1,066.95 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:489]    (compile):   7,588.35 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:489]      compile:  40,151.22 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:489]        image:     531.41 ms\r\n[jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT:489]        write:     125.15 ms\r\nFatal error: java.lang.RuntimeException: java.lang.RuntimeException: host C compiler or linker does not seem to work: java.lang.RuntimeException: returned 1\r\n\r\nRunning command: cc -v -o /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/jsoniter-scala-examples/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT -z noexecstack -Wl,--gc-sections -Wl,--dynamic-list -Wl,/tmp/SVM-5501497825700285691/exported_symbols.list -Wl,-x -L/tmp/SVM-5501497825700285691 -L/usr/lib/jvm/graalvm-ce-java8/jre/lib -L/usr/lib/jvm/graalvm-ce-java8/jre/lib/svm/clibraries/linux-amd64 /tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o /usr/lib/jvm/graalvm-ce-java8/jre/lib/svm/clibraries/linux-amd64/libffi.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/svm/clibraries/linux-amd64/liblibchelper.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/svm/clibraries/linux-amd64/libjvm.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/svm/clibraries/linux-amd64/libstrictmath.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/libnet.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/libzip.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/libjava.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/libnio.a -lm -lpthread -ldl -lpthread -lz -lrt\r\n\r\nUsing built-in specs.\r\nCOLLECT_GCC=cc\r\nCOLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper\r\nOFFLOAD_TARGET_NAMES=nvptx-none\r\nOFFLOAD_TARGET_DEFAULT=1\r\nTarget: x86_64-linux-gnu\r\nConfigured with: ../src/configure -v --with-pkgversion='Ubuntu 7.4.0-1ubuntu1~18.04.1' --with-bugurl=file:///usr/share/doc/gcc-7/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++ --prefix=/usr --with-gcc-major-version-only --program-suffix=-7 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu\r\nThread model: posix\r\ngcc version 7.4.0 (Ubuntu 7.4.0-1ubuntu1~18.04.1) \r\nCOMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/\r\nLIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../:/lib/:/usr/lib/\r\nCOLLECT_GCC_OPTIONS='-v' '-o' '/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/jsoniter-scala-examples/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT' '-z' 'noexecstack' '-L/tmp/SVM-5501497825700285691' '-L/usr/lib/jvm/graalvm-ce-java8/jre/lib' '-L/usr/lib/jvm/graalvm-ce-java8/jre/lib/svm/clibraries/linux-amd64' '-mtune=generic' '-march=x86-64'\r\n /usr/lib/gcc/x86_64-linux-gnu/7/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/7/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper -plugin-opt=-fresolution=/tmp/ccLPrf9e.res -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s --sysroot=/ --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/jsoniter-scala-examples/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT -z noexecstack /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o -L/tmp/SVM-5501497825700285691 -L/usr/lib/jvm/graalvm-ce-java8/jre/lib -L/usr/lib/jvm/graalvm-ce-java8/jre/lib/svm/clibraries/linux-amd64 -L/usr/lib/gcc/x86_64-linux-gnu/7 -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/7/../../.. --gc-sections --dynamic-list /tmp/SVM-5501497825700285691/exported_symbols.list -x /tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o /usr/lib/jvm/graalvm-ce-java8/jre/lib/svm/clibraries/linux-amd64/libffi.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/svm/clibraries/linux-amd64/liblibchelper.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/svm/clibraries/linux-amd64/libjvm.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/svm/clibraries/linux-amd64/libstrictmath.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/libnet.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/libzip.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/libjava.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/libnio.a -lm -lpthread -ldl -lpthread -lz -lrt -lgcc --push-state --as-needed -lgcc_s --pop-state -lc -lgcc --push-state --as-needed -lgcc_s --pop-state /usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crtn.o\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0x40): undefined reference to `Java_java_lang_invoke_MethodHandle_invokeBasic'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0xd0): undefined reference to `Java_java_lang_invoke_MethodHandle_invokeBasic'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0x138): undefined reference to `Java_java_lang_invoke_MethodHandle_invokeBasic'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0x188): undefined reference to `Java_java_lang_invoke_MethodHandle_invokeBasic'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0x1c0): undefined reference to `Java_java_lang_invoke_MethodHandle_invokeBasic'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0x2b0): undefined reference to `Java_sun_misc_Unsafe_defineAnonymousClass'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0x330): undefined reference to `Java_java_lang_invoke_MethodHandle_invokeBasic'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0x368): undefined reference to `Java_sun_misc_Unsafe_defineClass'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0x490): undefined reference to `Java_java_lang_invoke_MethodHandle_invokeBasic'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0x4f8): undefined reference to `Java_java_lang_invoke_MethodHandle_invokeBasic'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0x670): undefined reference to `Java_java_lang_invoke_MethodHandle_invokeBasic'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0xa30): undefined reference to `Java_java_lang_invoke_MethodHandle_invokeBasic'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0xbb8): undefined reference to `Java_java_lang_invoke_MethodHandle_invokeBasic'\r\ncollect2: error: ld returned 1 exit status\r\n\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat java.util.concurrent.ForkJoinTask.getThrowableException(ForkJoinTask.java:593)\r\n\tat java.util.concurrent.ForkJoinTask.get(ForkJoinTask.java:1005)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:462)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:315)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:454)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:115)\r\nCaused by: java.lang.RuntimeException: host C compiler or linker does not seem to work: java.lang.RuntimeException: returned 1\r\n\r\nRunning command: cc -v -o /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/jsoniter-scala-examples/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT -z noexecstack -Wl,--gc-sections -Wl,--dynamic-list -Wl,/tmp/SVM-5501497825700285691/exported_symbols.list -Wl,-x -L/tmp/SVM-5501497825700285691 -L/usr/lib/jvm/graalvm-ce-java8/jre/lib -L/usr/lib/jvm/graalvm-ce-java8/jre/lib/svm/clibraries/linux-amd64 /tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o /usr/lib/jvm/graalvm-ce-java8/jre/lib/svm/clibraries/linux-amd64/libffi.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/svm/clibraries/linux-amd64/liblibchelper.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/svm/clibraries/linux-amd64/libjvm.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/svm/clibraries/linux-amd64/libstrictmath.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/libnet.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/libzip.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/libjava.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/libnio.a -lm -lpthread -ldl -lpthread -lz -lrt\r\n\r\nUsing built-in specs.\r\nCOLLECT_GCC=cc\r\nCOLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper\r\nOFFLOAD_TARGET_NAMES=nvptx-none\r\nOFFLOAD_TARGET_DEFAULT=1\r\nTarget: x86_64-linux-gnu\r\nConfigured with: ../src/configure -v --with-pkgversion='Ubuntu 7.4.0-1ubuntu1~18.04.1' --with-bugurl=file:///usr/share/doc/gcc-7/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++ --prefix=/usr --with-gcc-major-version-only --program-suffix=-7 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu\r\nThread model: posix\r\ngcc version 7.4.0 (Ubuntu 7.4.0-1ubuntu1~18.04.1) \r\nCOMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/\r\nLIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../:/lib/:/usr/lib/\r\nCOLLECT_GCC_OPTIONS='-v' '-o' '/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/jsoniter-scala-examples/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT' '-z' 'noexecstack' '-L/tmp/SVM-5501497825700285691' '-L/usr/lib/jvm/graalvm-ce-java8/jre/lib' '-L/usr/lib/jvm/graalvm-ce-java8/jre/lib/svm/clibraries/linux-amd64' '-mtune=generic' '-march=x86-64'\r\n /usr/lib/gcc/x86_64-linux-gnu/7/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/7/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper -plugin-opt=-fresolution=/tmp/ccLPrf9e.res -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s --sysroot=/ --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/jsoniter-scala-examples/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT -z noexecstack /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o -L/tmp/SVM-5501497825700285691 -L/usr/lib/jvm/graalvm-ce-java8/jre/lib -L/usr/lib/jvm/graalvm-ce-java8/jre/lib/svm/clibraries/linux-amd64 -L/usr/lib/gcc/x86_64-linux-gnu/7 -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/7/../../.. --gc-sections --dynamic-list /tmp/SVM-5501497825700285691/exported_symbols.list -x /tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o /usr/lib/jvm/graalvm-ce-java8/jre/lib/svm/clibraries/linux-amd64/libffi.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/svm/clibraries/linux-amd64/liblibchelper.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/svm/clibraries/linux-amd64/libjvm.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/svm/clibraries/linux-amd64/libstrictmath.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/libnet.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/libzip.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/libjava.a /usr/lib/jvm/graalvm-ce-java8/jre/lib/libnio.a -lm -lpthread -ldl -lpthread -lz -lrt -lgcc --push-state --as-needed -lgcc_s --pop-state -lc -lgcc --push-state --as-needed -lgcc_s --pop-state /usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crtn.o\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0x40): undefined reference to `Java_java_lang_invoke_MethodHandle_invokeBasic'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0xd0): undefined reference to `Java_java_lang_invoke_MethodHandle_invokeBasic'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0x138): undefined reference to `Java_java_lang_invoke_MethodHandle_invokeBasic'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0x188): undefined reference to `Java_java_lang_invoke_MethodHandle_invokeBasic'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0x1c0): undefined reference to `Java_java_lang_invoke_MethodHandle_invokeBasic'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0x2b0): undefined reference to `Java_sun_misc_Unsafe_defineAnonymousClass'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0x330): undefined reference to `Java_java_lang_invoke_MethodHandle_invokeBasic'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0x368): undefined reference to `Java_sun_misc_Unsafe_defineClass'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0x490): undefined reference to `Java_java_lang_invoke_MethodHandle_invokeBasic'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0x4f8): undefined reference to `Java_java_lang_invoke_MethodHandle_invokeBasic'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0x670): undefined reference to `Java_java_lang_invoke_MethodHandle_invokeBasic'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0xa30): undefined reference to `Java_java_lang_invoke_MethodHandle_invokeBasic'\r\n/tmp/SVM-5501497825700285691/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.o:(.data+0xbb8): undefined reference to `Java_java_lang_invoke_MethodHandle_invokeBasic'\r\ncollect2: error: ld returned 1 exit status\r\n\r\n\tat com.oracle.svm.hosted.image.NativeBootImageViaCC.write(NativeBootImageViaCC.java:382)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:652)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:445)\r\n\tat java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1386)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nError: Image build request failed with exit status 1\r\n```\r\n\r\nSteps to reproduce:\r\n1. Clone `jsoniter-scala` repo: \r\n```\r\n$ git clone https://github.com/plokhotnyuk/jsoniter-scala.git\r\n```\r\n\r\n2. Enter to the cloned directory and checkout for the specific branch:\r\n```\r\n$ cd jsoniter-scala\\jsoniter-scala-examples\r\n$ git checkout native-image-build-failure\r\n```\r\n3. [Install latest version of `sbt`](https://www.scala-sbt.org/1.0/docs/Setup.html) and/or ensure that it already installed properly: \r\n```\r\n$ sbt about\r\n```\r\n4. Build an uber jar and test that it works fine:\r\n```\r\n$ sbt clean assembly\r\n$ java -jar target/scala-2.13/jsoniter-scala-examples-assembly-0.1.0-SNAPSHOT.jar\r\n```\r\nIt should print the following output to the console:\r\n```\r\nUser(John,List(Device(1,HTC One X)))\r\n{\"name\":\"John\",\"devices\":[{\"id\":2,\"model\":\"iPhone X\"}]}\r\n```\r\n5. Ensure that the compiler is installed\r\n```\r\n$ /usr/lib/jvm/graalvm-ce-java11/bin/native-image --version\r\nGraalVM Version 19.3.0 CE\r\n```\r\nand optionally:\r\n```\r\n$ sudo /usr/lib/jvm/graalvm-ce-19/bin/gu install native-image\r\n```\r\n6. Start building the image using commands provided with errors.", "url": "https://github.com/oracle/graal/issues/1863", "user": "plokhotnyuk", "labels": ["bug", "native-image"], "created": "2019-11-21 17:32:16", "closed": "2019-12-23 23:03:59", "commits": {}, "ttf": 32.000277777777775, "commitsDetails": []}, {"title": "\"CTW\" crashes on AArch64.", "body": "Running \"ctw\" task on AArch64 crashes. Here is part of the error log:\r\n    \r\n    12:28:32 CompileTheWorld : iteration 0\r\n    12:28:33 #\r\n    12:28:33 # A fatal error has been detected by the Java Runtime Environment:\r\n    12:28:33 #\r\n    12:28:33 #  SIGILL (0x4) at pc=0x0000000800001ac8, pid=11787, tid=11788\r\n    12:28:33 #\r\n    12:28:33 # JRE version: OpenJDK Runtime Environment (11.0.4+11) (build 11.0.4+11-post- \r\n    Ubuntu-1ubuntu218.04.3)\r\n    12:28:33 # Java VM: OpenJDK 64-Bit Server VM (11.0.4+11-post-Ubuntu-1ubuntu218.04.3, mixed \r\n    mode, sharing, tiered, jvmci, compressed oops, g1 gc, linux-aarch64)\r\n    12:28:33 # Problematic frame:\r\n    12:28:33 # C  0x0000000800001ac8\r\n    12:28:33 #\r\n    12:28:33 # Core dump will be written. Default location: Core dumps may be processed with \r\n    \"/usr/share/apport/apport %p %s %c %d %P\" (or dumping to /home/ent-user/ci- scripts/core.11787)\r\n    12:28:33 #\r\n    12:28:33 # An error report file with more information is saved as:\r\n    12:28:33 # /home/ent-user/ci-scripts/hs_err_pid11787.log\r\n    12:28:33 Compiled method (c1)    1208 1206       3       java.util.Arrays::sort (47 bytes)\r\n    12:28:33  total in heap  [0x0000ffff790bf190,0x0000ffff790bf908] = 1912\r\n    12:28:33  relocation     [0x0000ffff790bf308,0x0000ffff790bf398] = 144\r\n    12:28:33  main code      [0x0000ffff790bf3c0,0x0000ffff790bf640] = 640\r\n    12:28:33  stub code      [0x0000ffff790bf640,0x0000ffff790bf790] = 336\r\n    12:28:33  metadata       [0x0000ffff790bf790,0x0000ffff790bf7d0] = 64\r\n    12:28:33  scopes data    [0x0000ffff790bf7d0,0x0000ffff790bf848] = 120\r\n    12:28:33  scopes pcs     [0x0000ffff790bf848,0x0000ffff790bf8e8] = 160\r\n    12:28:33  dependencies   [0x0000ffff790bf8e8,0x0000ffff790bf8f0] = 8\r\n    12:28:33  nul chk table  [0x0000ffff790bf8f0,0x0000ffff790bf908] = 24\r\n    12:28:33 #\r\n    12:28:33 # If you would like to submit a bug report, please visit:\r\n    12:28:33 #   https://bugs.launchpad.net/ubuntu/+source/openjdk-lts\r\n    12:28:33 #\r\n\r\n And the command:\r\n\r\n    mx --primary-suite-path .../graal/compiler gate -o -t 'CTW:hosted'\r\n\r\n", "url": "https://github.com/oracle/graal/issues/1801", "user": "XiaohongGong", "labels": ["bug", "compiler"], "created": "2019-11-01 06:14:12", "closed": "2019-11-21 06:40:24", "commits": {}, "ttf": 20.00027777777778, "commitsDetails": []}, {"title": "native-image build failed with a org.graalvm.compiler.java.JsrNotSupportedBailout: unstructured control flow", "body": "I try to build native-image for a project which used HikariCP and mysql. I just tested with windows.The release 19.2.0 is everything ok, but the latest master branch (2019-9-23) get error:\r\n\r\nError: Unsupported features in 3 methods\r\nDetailed message:\r\nError: unstructured control flow  ([108] [108, 27])\r\nCall path from entry point to com.mysql.jdbc.NetworkResources.forceClose():\r\n        at com.mysql.jdbc.NetworkResources.forceClose(NetworkResources.java:47)\r\n        at com.mysql.jdbc.MysqlIO.forceClose(MysqlIO.java:487)\r\n        at com.mysql.jdbc.ConnectionImpl.realClose(ConnectionImpl.java:4206)\r\n        at com.mysql.jdbc.StatementImpl$CancelTask$1.run(StatementImpl.java:110)\r\n        at com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:478)\r\n        at com.oracle.svm.core.windows.WindowsJavaThreads.osThreadStartRoutine(WindowsJavaThreads.java:136)\r\n        at com.oracle.svm.core.code.IsolateEnterStub.WindowsJavaThreads_osThreadStartRoutine_4bc03aa26f8cdfc97ebd54050e8ae4bce1023851(generated:0)\r\nOriginal exception that caused the problem: org.graalvm.compiler.java.JsrNotSupportedBailout: unstructured control flow  ([108] [108, 27])\r\n        at org.graalvm.compiler.java.BciBlockMapping.createJsrAlternatives(BciBlockMapping.java:805)\r\n        at org.graalvm.compiler.java.BciBlockMapping.createJsrAlternatives(BciBlockMapping.java:830)\r\n        at org.graalvm.compiler.java.BciBlockMapping.createJsrAlternatives(BciBlockMapping.java:830)\r\n...\r\n\r\nThe full log is too long and I will upload a file.\r\n[errorlog.txt](https://github.com/oracle/graal/files/3640591/errorlog.txt)\r\n\r\nI think this is related to #1563 . Maybe something @dougxc changed to fix the issue caused this bug.\r\nTo reproduce: add<code>com.zaxxer:HikariCP:3.3.1<br>mysql:mysql-connector-java:5.1.48</code>to dependencies, and a main like:\r\n<code>\r\npublic static void main(String[] args){\r\nHikariConfig config = new HikariConfig();\r\nHikariDataSource HIKARI_DATA_SOURCE = new HikariDataSource(config);\r\nHIKARI_DATA_SOURCE.getConnection();\r\n}\r\n</code>\r\nthen build it as native-image.\r\n", "url": "https://github.com/oracle/graal/issues/1699", "user": "kangzq0530", "labels": ["bug"], "created": "2019-09-23 04:55:26", "closed": "2020-06-02 05:20:48", "commits": {}, "ttf": 253.00027777777777, "commitsDetails": []}, {"title": "[compiler] NPE in SchedulePhase on graalvm-ee-linux-amd64-19.2.0.1", "body": "#### Repro\r\n\r\n`\"${GRAALVM_HOME}\"/bin/R -e 'install.packages(c(\"ggplot2\", \"dplyr\"))'`\r\n\r\n#### Output\r\n\r\n```\r\n...\r\n* installing *source* package \u2018ggplot2\u2019 ...\r\n** package \u2018ggplot2\u2019 successfully unpacked and MD5 sums checked\r\n** R\r\n** data\r\n*** moving datasets to lazyload DB\r\n** inst\r\n** byte-compile and prepare package for lazy loading\r\n[Use -Dgraal.LogFile=<path> to redirect Graal log output to a file.]\r\n[truffle] opt fail         envhook <split-3af82b74>                                    |Reason java.lang.NullPointerException\r\njava.lang.NullPointerException\r\n        at org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.checkKillsBetween(SchedulePhase.java:332)\r\n        at org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock(SchedulePhase.java:577)\r\n        at com.oracle.graal.enterprise.t.a$a.calcLatestBlock(stripped:526)\r\n        at org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks(SchedulePhase.java:272)\r\n        at org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:205)\r\n        at com.oracle.graal.enterprise.t.a.run(stripped:105)\r\n        at org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n        at org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n        at org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n        at org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n        at org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:605)\r\n        at org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:91)\r\n        at org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n        at org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n        at org.graalvm.compiler.phases.PhaseSuite.run(PhaseSuite.java:209)\r\n        at org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n        at org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n        at org.graalvm.compiler.core.GraalCompiler.emitFrontEnd(GraalCompiler.java:230)\r\n        at org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:144)\r\n        at org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:129)\r\n        at org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.compilePEGraph(TruffleCompilerImpl.java:521)\r\n        at org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.compileAST(TruffleCompilerImpl.java:455)\r\n        at org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl$TruffleCompilationWrapper.performCompilation(TruffleCompilerImpl.java:637)\r\n        at org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl$TruffleCompilationWrapper.performCompilation(TruffleCompilerImpl.java:579)\r\n        at org.graalvm.compiler.core.CompilationWrapper.run(CompilationWrapper.java:178)\r\n        at org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.doCompile(TruffleCompilerImpl.java:280)\r\n        at org.graalvm.compiler.truffle.compiler.hotspot.libgraal.HotSpotToSVMEntryPoints.doCompile(HotSpotToSVMEntryPoints.java:253)\r\n\r\n** help\r\n[truffle] opt fail         envhook <split-6de606e0>                                    |Reason java.lang.NullPointerException\r\njava.lang.NullPointerException\r\n        at org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.checkKillsBetween(SchedulePhase.java:332)\r\n        at org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock(SchedulePhase.java:577)\r\n        at com.oracle.graal.enterprise.t.a$a.calcLatestBlock(stripped:526)\r\n        at org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks(SchedulePhase.java:272)\r\n        at org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:205)\r\n        at com.oracle.graal.enterprise.t.a.run(stripped:105)\r\n        at org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n        at org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n        at org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n        at org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n        at org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:605)\r\n        at org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:91)\r\n        at org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n        at org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n        at org.graalvm.compiler.phases.PhaseSuite.run(PhaseSuite.java:209)\r\n        at org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n        at org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n        at org.graalvm.compiler.core.GraalCompiler.emitFrontEnd(GraalCompiler.java:230)\r\n        at org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:144)\r\n        at org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:129)\r\n        at org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.compilePEGraph(TruffleCompilerImpl.java:521)\r\n        at org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.compileAST(TruffleCompilerImpl.java:455)\r\n        at org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl$TruffleCompilationWrapper.performCompilation(TruffleCompilerImpl.java:637)\r\n        at org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl$TruffleCompilationWrapper.performCompilation(TruffleCompilerImpl.java:579)\r\n        at org.graalvm.compiler.core.CompilationWrapper.run(CompilationWrapper.java:178)\r\n        at org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.doCompile(TruffleCompilerImpl.java:280)\r\n        at org.graalvm.compiler.truffle.compiler.hotspot.libgraal.HotSpotToSVMEntryPoints.doCompile(HotSpotToSVMEntryPoints.java:253)\r\n\r\n*** installing help indices\r\n*** copying figures\r\n** building package indices\r\n        at org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl$TruffleCompilationWrapper.performCompilation(TruffleCompilerImpl.java:579)\r\n        at org.graalvm.compiler.core.CompilationWrapper.run(CompilationWrapper.java:178)\r\n        at org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.doCompile(TruffleCompilerImpl.java:280)\r\n        at org.graalvm.compiler.truffle.compiler.hotspot.libgraal.HotSpotToSVMEntryPoints.doCompile(HotSpotToSVMEntryPoints.java:253)\r\n\r\n** help\r\n[truffle] opt fail         envhook <split-6de606e0>                                    |Reason java.lang.NullPointerException\r\njava.lang.NullPointerException\r\n        at org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.checkKillsBetween(SchedulePhase.java:332)\r\n        at org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock(SchedulePhase.java:577)\r\n        at com.oracle.graal.enterprise.t.a$a.calcLatestBlock(stripped:526)\r\n        at org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks(SchedulePhase.java:272)\r\n        at org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:205)\r\n        at com.oracle.graal.enterprise.t.a.run(stripped:105)\r\n        at org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n        at org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n        at org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n        at org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n        at org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:605)\r\n        at org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:91)\r\n        at org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n        at org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n        at org.graalvm.compiler.phases.PhaseSuite.run(PhaseSuite.java:209)\r\n        at org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n        at org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n        at org.graalvm.compiler.core.GraalCompiler.emitFrontEnd(GraalCompiler.java:230)\r\n        at org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:144)\r\n        at org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:129)\r\n        at org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.compilePEGraph(TruffleCompilerImpl.java:521)\r\n        at org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.compileAST(TruffleCompilerImpl.java:455)\r\n        at org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl$TruffleCompilationWrapper.performCompilation(TruffleCompilerImpl.java:637)\r\n        at org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl$TruffleCompilationWrapper.performCompilation(TruffleCompilerImpl.java:579)\r\n        at org.graalvm.compiler.core.CompilationWrapper.run(CompilationWrapper.java:178)\r\n        at org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.doCompile(TruffleCompilerImpl.java:280)\r\n        at org.graalvm.compiler.truffle.compiler.hotspot.libgraal.HotSpotToSVMEntryPoints.doCompile(HotSpotToSVMEntryPoints.java:253)\r\n```\r\n...", "url": "https://github.com/oracle/graal/issues/1680", "user": "fniephaus", "labels": ["bug", "compiler"], "created": "2019-09-14 14:06:22", "closed": "2019-09-15 19:06:44", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Regression with Micronaut and Freemarker: NPE", "body": "Our CI has detected a regression in this commit: https://github.com/oracle/graal/commit/7ea083dd1132c715100329309d72c6699015144d\r\n\r\nIt is still possible to create the native image but when starting it and sending a request there is a NPE. See error bellow.\r\n\r\nSteps to reproduce the issue:\r\n\r\n- `git clone https://github.com/micronaut-graal-tests/micronaut-views-graal`\r\n- `cd micronaut-views-graal`\r\n- `git checkout freemarker`\r\n- Use GraalVM built from master, specifically the commit linked before.\r\n- `./build-native-image.sh`\r\n- Start the native-image and send a request:\r\n`curl localhost:8080/views/freemarker-view`\r\n\r\nI have also tried adding `--initialize-at-run-time=io.netty.buffer.AbstractReferenceCountedByteBuf` as suggested in #1315 but the error is the same.\r\n\r\nError:\r\n```\r\n$ ./views-graal-freemarker\r\n09:47:06.345 [main] DEBUG i.m.web.router.DefaultRouteBuilder - Created Route: GET /views/freemarker -> ViewsController#ModelAndView freemaker() (application/json )\r\n09:47:06.345 [main] DEBUG i.m.web.router.DefaultRouteBuilder - Created Route: HEAD /views/freemarker -> ViewsController#ModelAndView freemaker() (application/json )\r\n09:47:06.345 [main] DEBUG i.m.web.router.DefaultRouteBuilder - Created Route: GET /views/freemarker-view -> ViewsController#HttpResponse freemakerPojoView() (application/json )\r\n09:47:06.345 [main] DEBUG i.m.web.router.DefaultRouteBuilder - Created Route: HEAD /views/freemarker-view -> ViewsController#HttpResponse freemakerPojoView() (application/json )\r\n09:47:06.358 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 69ms. Server Running: http://localhost:8080\r\n09:47:09.846 [pool-2-thread-2] ERROR i.m.h.s.netty.RoutingInBoundHandler - Unexpected error occurred: null\r\njava.lang.NullPointerException: null\r\n\tat freemarker.core.DollarVariable.<init>(DollarVariable.java:53)\r\n\tat freemarker.core.FMParser.StringOutput(FMParser.java:1564)\r\n\tat freemarker.core.FMParser.MixedContentElements(FMParser.java:3761)\r\n\tat freemarker.core.FMParser.If(FMParser.java:1663)\r\n\tat freemarker.core.FMParser.FreemarkerDirective(FMParser.java:3422)\r\n\tat freemarker.core.FMParser.MixedContentElements(FMParser.java:3812)\r\n\tat freemarker.core.FMParser.Root(FMParser.java:4458)\r\n\tat freemarker.template.Template.<init>(Template.java:253)\r\n\tat freemarker.cache.TemplateCache.loadTemplate(TemplateCache.java:549)\r\n\tat freemarker.cache.TemplateCache.getTemplateInternal(TemplateCache.java:439)\r\n\tat freemarker.cache.TemplateCache.getTemplate(TemplateCache.java:292)\r\n\tat freemarker.template.Configuration.getTemplate(Configuration.java:2750)\r\n\tat freemarker.template.Configuration.getTemplate(Configuration.java:2599)\r\n\tat io.micronaut.views.freemarker.FreemarkerViewsRenderer.exists(FreemarkerViewsRenderer.java:86)\r\n\tat io.micronaut.views.ViewsFilter.lambda$doFilter$0(ViewsFilter.java:130)\r\n\tat io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber.onNext(FlowableSwitchMap.java:113)\r\n\tat io.micronaut.reactive.rxjava2.InstrumentedSubscriber.lambda$onNext$0(InstrumentedSubscriber.java:80)\r\n\tat io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:52)\r\n\tat io.micronaut.http.context.ServerRequestContext.lambda$instrument$0(ServerRequestContext.java:68)\r\n\tat io.micronaut.reactive.rxjava2.InstrumentedSubscriber.onNext(InstrumentedSubscriber.java:84)\r\n\tat io.micronaut.reactive.rxjava2.InstrumentedSubscriber.lambda$onNext$0(InstrumentedSubscriber.java:80)\r\n\tat io.micronaut.reactive.rxjava2.InstrumentedSubscriber.onNext(InstrumentedSubscriber.java:84)\r\n\tat io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FlowableSwitchIfEmpty.java:59)\r\n\tat io.micronaut.reactive.rxjava2.InstrumentedSubscriber.lambda$onNext$0(InstrumentedSubscriber.java:80)\r\n\tat io.micronaut.reactive.rxjava2.InstrumentedSubscriber.onNext(InstrumentedSubscriber.java:84)\r\n\tat io.reactivex.internal.operators.flowable.FlowableMap$MapSubscriber.onNext(FlowableMap.java:68)\r\n\tat io.micronaut.reactive.rxjava2.InstrumentedSubscriber.lambda$onNext$0(InstrumentedSubscriber.java:80)\r\n\tat io.micronaut.reactive.rxjava2.InstrumentedSubscriber.onNext(InstrumentedSubscriber.java:84)\r\n\tat io.reactivex.internal.operators.flowable.FlowableCreate$NoOverflowBaseAsyncEmitter.onNext(FlowableCreate.java:403)\r\n\tat io.micronaut.http.server.netty.RoutingInBoundHandler.lambda$buildResultEmitter$19(RoutingInBoundHandler.java:1430)\r\n\tat io.reactivex.internal.operators.flowable.FlowableCreate.subscribeActual(FlowableCreate.java:71)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14826)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14773)\r\n\tat io.micronaut.reactive.rxjava2.RxInstrumentedFlowable.subscribeActual(RxInstrumentedFlowable.java:68)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14826)\r\n\tat io.reactivex.internal.operators.flowable.FlowableMap.subscribeActual(FlowableMap.java:37)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14826)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14773)\r\n\tat io.micronaut.reactive.rxjava2.RxInstrumentedFlowable.subscribeActual(RxInstrumentedFlowable.java:68)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14826)\r\n\tat io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty.subscribeActual(FlowableSwitchIfEmpty.java:32)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14826)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14773)\r\n\tat io.micronaut.reactive.rxjava2.RxInstrumentedFlowable.subscribeActual(RxInstrumentedFlowable.java:68)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14826)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14773)\r\n\tat io.micronaut.reactive.rxjava2.RxInstrumentedFlowable.subscribeActual(RxInstrumentedFlowable.java:68)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14826)\r\n\tat io.reactivex.internal.operators.flowable.FlowableSwitchMap.subscribeActual(FlowableSwitchMap.java:49)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14826)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14773)\r\n\tat io.micronaut.reactive.rxjava2.RxInstrumentedFlowable.subscribeActual(RxInstrumentedFlowable.java:68)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14826)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14776)\r\n\tat io.micronaut.http.context.ServerRequestTracingPublisher.lambda$subscribe$0(ServerRequestTracingPublisher.java:52)\r\n\tat io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:52)\r\n\tat io.micronaut.http.context.ServerRequestTracingPublisher.subscribe(ServerRequestTracingPublisher.java:52)\r\n\tat io.reactivex.internal.operators.flowable.FlowableFromPublisher.subscribeActual(FlowableFromPublisher.java:29)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14826)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14773)\r\n\tat io.micronaut.reactive.rxjava2.RxInstrumentedFlowable.subscribeActual(RxInstrumentedFlowable.java:68)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14826)\r\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14773)\r\n\tat io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber.run(FlowableSubscribeOn.java:82)\r\n\tat io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$BooleanRunnable.run(ExecutorScheduler.java:288)\r\n\tat io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.run(ExecutorScheduler.java:253)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\tat com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:476)\r\n\tat com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:193)\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/1668", "user": "ilopmar", "labels": ["bug", "compiler"], "created": "2019-09-09 07:52:22", "closed": "2019-10-02 20:45:23", "commits": {}, "ttf": 23.00027777777778, "commitsDetails": []}, {"title": "-H:Log=registerResource only works when combined with --no-server", "body": "Contrary to what documentation https://github.com/oracle/graal/blob/master/substratevm/RESOURCES.md#L43 says, exact name inclusion (example: `.*/Resource0.txt$`) does not work.\r\n\r\nIn this example https://github.com/abelsromero/graal-resource-reader, you can test that `-H:IncludeResources='.*/config.properties$'` does not include the file, but `-H:IncludeResources='.*/*.properties$'` does.\r\n\r\nAs a side note: I don't see any output with `-H:Log=registerResource` or `-H:Log=registerResource:verbose`.\r\n\r\nGraal version: 19.2.0\r\nOS: Linux 5.1.21-1-MANJARO\r\n", "url": "https://github.com/oracle/graal/issues/1652", "user": "abelsromero", "labels": ["bug"], "created": "2019-09-02 19:28:43", "closed": "2019-09-04 07:44:48", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "[DNS issues] GraalVM 19.2.0 DNS issues with Alpine Linux", "body": "Hi all,\r\n\r\nI've upgraded to GraalVM 19.2.0 and I still have DNS issues with Alpine Linux. \r\n\r\nDockerfile:\r\n\r\n```\r\nFROM oracle/graalvm-ce:19.2.0 AS build-aot\r\n\r\nRUN yum clean all && yum update -y && yum install wget -y\r\n\r\nRUN wget https://www-eu.apache.org/dist/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.tar.gz -P /tmp\r\nRUN tar xf /tmp/apache-maven-3.6.1-bin.tar.gz -C /opt\r\nRUN ln -s /opt/apache-maven-3.6.1 /opt/maven\r\nRUN ln -s /opt/graalvm-ce-19.2.0 /opt/graalvm\r\n\r\nENV GRAALVM_HOME=/opt/graalvm\r\nENV JAVA_HOME=/opt/graalvm\r\nENV M2_HOME=/opt/maven\r\nENV MAVEN_HOME=/opt/maven\r\nENV PATH=${M2_HOME}/bin:${PATH}\r\nENV PATH=${GRAALVM_HOME}/bin:${PATH}\r\n\r\nCOPY ./pom.xml ./pom.xml\r\nCOPY src ./src/\r\n\r\nENV MAVEN_OPTS='-Xmx6g'\r\n\r\nRUN gu install native-image\r\n\r\nRUN mvn -Dmaven.test.skip=true -Pnative-image-fargate clean package\r\n\r\nFROM alpine:3.10\r\nLABEL maintainer=\"Sascha M\u00f6llering <smoell@amazon.de>\"\r\n\r\nENV javax.net.ssl.trustStore /cacerts\r\nENV javax.net.ssl.trustAnchors /cacerts\r\n\r\nRUN apk --no-cache add curl && echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf \r\n\r\nCOPY --from=build-aot target/reactive-vertx /usr/bin/reactive-vertx\r\nCOPY --from=build-aot /opt/graalvm/jre/lib/amd64/libsunec.so /libsunec.so\r\nCOPY --from=build-aot /opt/graalvm/jre/lib/security/cacerts /cacerts\r\n\r\nHEALTHCHECK --interval=5s --timeout=3s --retries=3 \\\r\n  CMD curl -f http://localhost:8080/health/check || exit 1\r\n\r\nEXPOSE 8080\r\n\r\nCMD [ \"/usr/bin/reactive-vertx\" ]\r\n```\r\n\r\nMy Java application still throws java.net.UnknownHostException.", "url": "https://github.com/oracle/graal/issues/1631", "user": "smoell", "labels": ["bug", "native-image"], "created": "2019-08-22 11:41:19", "closed": "2019-08-29 09:40:12", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "[native-image] 19.2.0 Compile makes no/little progress, stuck on DeoptProxyNode", "body": "A new behaviour that we are seeing in 19.2 dev and now GA (was hoping it would be fixed in GA \ud83e\udd1e ) compiling on macOS with `--language:js` enabled.\r\n\r\nThe native-image build runs and gets stuck in the compile phase, the compile process doesn't complete after 30+mins with no extra logging, profiling the running JVM shows a single thread running at 100% in this class `DeoptProxyNode` we didn't see this behaviour pre-19.2.\r\n\r\n```\r\n[worker-cli:72994]    classlist:   7,351.59 ms\r\n[worker-cli:72994]        (cap):   3,413.23 ms\r\n[worker-cli:72994]        setup:   4,747.65 ms\r\n[worker-cli:72994]   (typeflow): 125,181.45 ms\r\n[worker-cli:72994]    (objects):  59,774.15 ms\r\n[worker-cli:72994]   (features):  58,132.25 ms\r\n[worker-cli:72994]     analysis: 257,331.72 ms\r\n[worker-cli:72994]     (clinit):   3,856.25 ms\r\n63104 method(s) included for runtime compilation\r\nWARNING: suspicious method reachable for runtime compilation: com.oracle.svm.core.genscavenge.HeapImpl.freeMemory()\r\nCheck the complete tree of reachable methods using the option PrintRuntimeCompileMethods\r\nSuspicious method is called from\r\n  com.oracle.svm.core.genscavenge.Target_java_lang_Runtime.freeMemory(HeapImpl.java:918)\r\n  sun.security.provider.SeedGenerator$1.run(SeedGenerator.java:215)\r\n  sun.security.provider.SeedGenerator$1.run(SeedGenerator.java:168)\r\n  com.oracle.svm.core.jdk.Target_java_security_AccessController.doPrivileged(SecuritySubstitutions.java:69) -> java.util.logging.LogManager.ensureLogManagerInitialized(LogManager.java:338)\r\n  java.util.logging.LogManager.getLogManager(LogManager.java:380) -> java.util.logging.Handler.<init>(Handler.java:50)\r\n  com.oracle.truffle.polyglot.PolyglotLogHandler.<init>(PolyglotLogHandler.java:66) -> com.oracle.truffle.polyglot.EngineAccessor$EngineImpl.getLogHandler(EngineAccessor.java:711) -> com.oracle.truffle.api.TruffleLogger$PolyglotLogHandlerProvider.apply(TruffleLogger.java:1372)\r\n  com.oracle.truffle.api.TruffleLogger$PolyglotLogHandlerProvider.apply(TruffleLogger.java:1361)\r\n  java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n  com.oracle.svm.core.WeakIdentityHashMap$EntrySpliterator.forEachRemaining(WeakIdentityHashMap.java:1344)\r\n  java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:647)\r\n  java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:564)\r\n  io.micronaut.http.MediaType.toString(MediaType.java:545)\r\n  io.micronaut.http.MediaType.length(MediaType.java:503)\r\n  com.oracle.truffle.js.nodes.access.PropertyGetNode$StringLengthPropertyGetNode.getValueInt(PropertyGetNode.java:1396)\r\n  com.oracle.truffle.js.nodes.access.PropertyGetNode$StringLengthPropertyGetNode.getValue(PropertyGetNode.java:1390)\r\n  com.oracle.truffle.js.nodes.access.PropertyGetNode.getValue(PropertyGetNode.java:187)\r\n  com.oracle.truffle.js.nodes.access.PropertyGetNode.getValue(PropertyGetNode.java:160) -> com.oracle.truffle.js.builtins.PromisePrototypeBuiltins$FinallyNode$1PromiseFinallyRootNode.execute(PromisePrototypeBuiltins.java:246)\r\n  org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:327)\r\n  org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:317)\r\n  \r\n[worker-cli:72994]     universe:  22,347.75 ms\r\n```\r\nno more logging after `universe`\r\n\r\nprofiler shows activity here:\r\n\r\n```\r\n\r\n<...>   java.util.concurrent.ForkJoinWorkerThread.run()\r\n--\r\n<10 calls> CompileQueue.java:738   org.graalvm.compiler.phases.Phase.apply(StructuredGraph)\r\nPhase.java:38   org.graalvm.compiler.phases.Phase.apply(StructuredGraph, boolean)\r\nPhase.java:42   org.graalvm.compiler.phases.BasePhase.apply(StructuredGraph, Object, boolean)\r\nBasePhase.java:197   org.graalvm.compiler.phases.Phase.run(StructuredGraph, Object)\r\nPhase.java:49   org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(StructuredGraph)\r\nGraphBuilderPhase.java:84   org.graalvm.compiler.java.BytecodeParser.buildRootMethod()\r\nBytecodeParser.java:870   com.oracle.svm.hosted.phases.HostedBytecodeParser.build(FixedWithNextNode,   FrameStateBuilder)\r\nHostedGraphBuilderPhase.java:107   org.graalvm.compiler.java.BytecodeParser.build(FixedWithNextNode,   FrameStateBuilder)\r\nBytecodeParser.java:976   org.graalvm.compiler.java.BytecodeParser.processBlock(BciBlockMapping$BciBlock)\r\nBytecodeParser.java:3074   org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BciBlockMapping$BciBlock)\r\nBytecodeParser.java:3267   org.graalvm.compiler.java.BytecodeParser.processBytecode(int, int)\r\nBytecodeParser.java:4992   org.graalvm.compiler.java.BytecodeParser.genLoadIndexed(JavaKind)\r\nBytecodeParser.java:3862   org.graalvm.compiler.java.BytecodeParser.maybeEmitExplicitBoundsCheck(ValueNode,   ValueNode)\r\nBytecodeParser.java:1464   org.graalvm.compiler.java.BytecodeParser.genArrayLength(ValueNode)\r\nBytecodeParser.java:1509   org.graalvm.compiler.nodes.java.ArrayLengthNode.create(ValueNode,   ConstantReflectionProvider)\r\nArrayLengthNode.java:80   org.graalvm.compiler.nodes.java.ArrayLengthNode.readArrayLength(ValueNode,   ConstantReflectionProvider)\r\nArrayLengthNode.java:105   org.graalvm.compiler.nodes.util.GraphUtil.arrayLength(ValueNode,   ArrayLengthProvider$FindLengthMode, ConstantReflectionProvider)\r\nGraphUtil.java:693   com.oracle.svm.hosted.nodes.DeoptProxyNode.findLength(ArrayLengthProvider$FindLengthMode,   ConstantReflectionProvider)\r\nDeoptProxyNode.java:129   org.graalvm.compiler.nodes.util.GraphUtil.arrayLength(ValueNode,   ArrayLengthProvider$FindLengthMode, ConstantReflectionProvider)\r\nGraphUtil.java:693   com.oracle.svm.hosted.nodes.DeoptProxyNode.findLength(ArrayLengthProvider$FindLengthMode,   ConstantReflectionProvider)\r\nDeoptProxyNode.java:129   org.graalvm.compiler.nodes.util.GraphUtil.arrayLength(ValueNode,   ArrayLengthProvider$FindLengthMode, ConstantReflectionProvider)\r\nGraphUtil.java:693   com.oracle.svm.hosted.nodes.DeoptProxyNode.findLength(ArrayLengthProvider$FindLengthMode,   ConstantReflectionProvider)\r\nDeoptProxyNode.java:129   org.graalvm.compiler.nodes.util.GraphUtil.arrayLength(ValueNode,   ArrayLengthProvider$FindLengthMode, ConstantReflectionProvider)\r\nGraphUtil.java:693   com.oracle.svm.hosted.nodes.DeoptProxyNode.findLength(ArrayLengthProvider$FindLengthMode,   ConstantReflectionProvider)\r\nDeoptProxyNode.java:129   org.graalvm.compiler.nodes.util.GraphUtil.arrayLength(ValueNode,   ArrayLengthProvider$FindLengthMode, ConstantReflectionProvider)\r\nGraphUtil.java:693   com.oracle.svm.hosted.nodes.DeoptProxyNode.findLength(ArrayLengthProvider$FindLengthMode,   ConstantReflectionProvider)\r\nDeoptProxyNode.java:129   org.graalvm.compiler.nodes.util.GraphUtil.arrayLength(ValueNode,   ArrayLengthProvider$FindLengthMode, ConstantReflectionProvider)\r\nGraphUtil.java:693   com.oracle.svm.hosted.nodes.DeoptProxyNode.findLength(ArrayLengthProvider$FindLengthMode,   ConstantReflectionProvider)\r\nDeoptProxyNode.java:129   org.graalvm.compiler.nodes.util.GraphUtil.arrayLength(ValueNode,   ArrayLengthProvider$FindLengthMode, ConstantReflectionProvider)\r\nGraphUtil.java:693   com.oracle.svm.hosted.nodes.DeoptProxyNode.findLength(ArrayLengthProvider$FindLengthMode,   ConstantReflectionProvider)\r\nDeoptProxyNode.java:129   org.graalvm.compiler.nodes.util.GraphUtil.arrayLength(ValueNode,   ArrayLengthProvider$FindLengthMode, ConstantReflectionProvider)\r\nGraphUtil.java:693   com.oracle.svm.hosted.nodes.DeoptProxyNode.findLength(ArrayLengthProvider$FindLengthMode,   ConstantReflectionProvider)\r\nDeoptProxyNode.java:129   org.graalvm.compiler.nodes.util.GraphUtil.arrayLength(ValueNode,   ArrayLengthProvider$FindLengthMode, ConstantReflectionProvider)\r\nGraphUtil.java:693   com.oracle.svm.hosted.nodes.DeoptProxyNode.findLength(ArrayLengthProvider$FindLengthMode,   ConstantReflectionProvider)\r\nDeoptProxyNode.java:129   org.graalvm.compiler.nodes.util.GraphUtil.arrayLength(ValueNode,   ArrayLengthProvider$FindLengthMode, ConstantReflectionProvider)\r\nGraphUtil.java:693   com.oracle.svm.hosted.nodes.DeoptProxyNode.findLength(ArrayLengthProvider$FindLengthMode,   ConstantReflectionProvider)\r\nDeoptProxyNode.java:129   org.graalvm.compiler.nodes.util.GraphUtil.arrayLength(ValueNode,   ArrayLengthProvider$FindLengthMode, ConstantReflectionProvider)\r\nGraphUtil.java:696   org.graalvm.compiler.nodes.util.GraphUtil.phiArrayLength(ValuePhiNode,   ArrayLengthProvider$FindLengthMode, ConstantReflectionProvider)\r\nGraphUtil.java:725   org.graalvm.compiler.nodes.util.GraphUtil.arrayLength(ValueNode,   ArrayLengthProvider$FindLengthMode, ConstantReflectionProvider)\r\nGraphUtil.java:693   com.oracle.svm.hosted.nodes.DeoptProxyNode.findLength(ArrayLengthProvider$FindLengthMode,   ConstantReflectionProvider)\r\nDeoptProxyNode.java:129   org.graalvm.compiler.nodes.util.GraphUtil.arrayLength(ValueNode,   ArrayLengthProvider$FindLengthMode, ConstantReflectionProvider)\r\nGraphUtil.java:693   com.oracle.svm.hosted.nodes.DeoptProxyNode.findLength(ArrayLengthProvider$FindLengthMode,   ConstantReflectionProvider)\r\nGraphUtil.java:696   org.graalvm.compiler.nodes.util.GraphUtil.phiArrayLength(ValuePhiNode,   ArrayLengthProvider$FindLengthMode, ConstantReflectionProvider)\r\nGraphUtil.java:725   org.graalvm.compiler.nodes.util.GraphUtil.arrayLength(ValueNode,   ArrayLengthProvider$FindLengthMode, ConstantReflectionProvider)\r\nGraphUtil.java:693   com.oracle.svm.hosted.nodes.DeoptProxyNode.findLength(ArrayLengthProvider$FindLengthMode,   ConstantReflectionProvider)\r\nDeoptProxyNode.java:129   org.graalvm.compiler.nodes.util.GraphUtil.arrayLength(ValueNode,   ArrayLengthProvider$FindLengthMode, ConstantReflectionProvider)\r\nGraphUtil.java:693   com.oracle.svm.hosted.nodes.DeoptProxyNode.findLength(ArrayLengthProvider$FindLengthMode,   ConstantReflectionProvider)\r\nDeoptProxyNode.java:129   org.graalvm.compiler.nodes.util.GraphUtil.arrayLength(ValueNode,   ArrayLengthProvider$FindLengthMode, ConstantReflectionProvider)\r\nGraphUtil.java:693   com.oracle.svm.hosted.nodes.DeoptProxyNode.findLength(ArrayLengthProvider$FindLengthMode,   ConstantReflectionProvider)\r\nDeoptProxyNode.java:129   org.graalvm.compiler.nodes.util.GraphUtil.arrayLength(ValueNode,   ArrayLengthProvider$FindLengthMode, ConstantReflectionProvider)\r\nGraphUtil.java:693   com.oracle.svm.hosted.nodes.DeoptProxyNode.findLength(ArrayLengthProvider$FindLengthMode,   ConstantReflectionProvider)\r\nDeoptProxyNode.java:129   org.graalvm.compiler.nodes.util.GraphUtil.arrayLength(ValueNode,   ArrayLengthProvider$FindLengthMode, ConstantReflectionProvider)\r\nGraphUtil.java:693   com.oracle.svm.hosted.nodes.DeoptProxyNode.findLength(ArrayLengthProvider$FindLengthMode,   ConstantReflectionProvider)\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/1625", "user": "nhoughto", "labels": ["bug", "javascript"], "created": "2019-08-21 00:14:35", "closed": "2019-09-27 10:18:15", "commits": {}, "ttf": 37.000277777777775, "commitsDetails": []}, {"title": "[native-image] JNI/LLVM failure with ClassCastException", "body": "When compiling HelloWorld using LLVM backend, a number of ClassCastExceptions are thrown.\r\nCommand:\r\n```\r\nnative-image \\\r\n-H:CompilerBackend=llvm \\\r\n-H:-AOTInline \\\r\n-H:-SpawnIsolates \\\r\n-Dsvm.platform=\"org.graalvm.nativeimage.impl.InternalPlatform\\$DARWIN_JNI_AMD64\" \\\r\n-cp build/classes/java/main hello.HelloWorld\r\n\r\n```\r\nexception:\r\n\r\n```\r\njava.lang.ClassCastException: class com.oracle.svm.jni.access.JNIAccessibleMethod cannot be cast to class com.oracle.svm.hosted.code.CEntryPointData (com.oracle.svm.jni.access.JNIAccessibleMethod and com.oracle.svm.hosted.code.CEntryPointData are in unnamed module of loader 'app')\r\n        at com.oracle.svm.core.graal.llvm.SubstrateLLVMGenerator.<init>(SubstrateLLVMGenerator.java:97)\r\n        at com.oracle.svm.core.graal.llvm.SubstrateLLVMBackend.newLLVMGenerator(SubstrateLLVMBackend.java:119)\r\n        at org.graalvm.compiler.core.llvm.LLVMCompilerBackend.emitLLVM(LLVMCompilerBackend.java:61)\r\n        at org.graalvm.compiler.core.llvm.LLVMCompilerBackend.emitBackEnd(LLVMCompilerBackend.java:42)\r\n        at com.oracle.svm.core.graal.llvm.SubstrateLLVMBackend.emitBackEnd(SubstrateLLVMBackend.java:113)\r\n```\r\n\r\nI added some debug, and for example this method causes a ClassCastException:\r\n`HostedMethod<JNIJavaCallWrappers.jniInvoke_ARRAY:Ljava_lang_Boolean_2_0002e_0003cinit_0003e_00028Z_00029V -> AnalysisMethod<JNIJavaCallWrappers.jniInvoke_ARRAY:Ljava_lang_Boolean_2_0002e_0003cinit_0003e_00028Z_00029V -> com.oracle.svm.jni.hosted.JNIJavaCallWrapperMethod@2297a625>>`", "url": "https://github.com/oracle/graal/issues/1622", "user": "johanvos", "labels": ["bug", "native-image"], "created": "2019-08-19 12:56:01", "closed": "2019-08-20 09:17:11", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[native-image] ThreadLocalRandom seeder is never reinitialized", "body": "The ThreadLocalRandom class has a static final field of seeder and probeGenerator. The class should be reinitialized at runtime to reset the values properly. Otherwise the numbers generated will always be the same from run to run of the same native application.\r\n\r\nIt is possible to work around this by adding a Feature that sets the class for reinitialization:\r\n\r\n```\r\npublic class TestFeature implements Feature {\r\n    @Override\r\n    public void beforeAnalysis(BeforeAnalysisAccess access) {\r\n        ImageSingletons.lookup(RuntimeClassInitializationSupport.class).rerunInitialization(ThreadLocalRandom.class,\r\n                \"Need to reinitialize this class\");\r\n    }\r\n}\r\n```\r\n\r\nSince this is a standard JDK class it should be handled directly and not require a custom Feature.", "url": "https://github.com/oracle/graal/issues/1614", "user": "wburns", "labels": ["bug", "native-image"], "created": "2019-08-16 01:45:11", "closed": "2019-08-21 03:13:14", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "[native-image] Generating random numbers", "body": "I wanted to get a random element from a sequence using `(rand-nth seq)` but I was always getting the same value. After digging into to the source code I figured out it uses `(. Math (random))` under the hood.\r\n\r\nI've prepared a sample repo to reproduce the issue. It can be found here: https://github.com/tomekw/random\r\n\r\nI had to initialize the main class at build time to compile the project. Maybe that's the cause?\r\n\r\n**EDIT**: I'm on GraalVM 19.1.1 CE and on MacOS", "url": "https://github.com/oracle/graal/issues/1610", "user": "tomekw", "labels": ["bug", "native-image"], "created": "2019-08-12 14:25:44", "closed": "2019-08-21 03:12:33", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Graal 19.1.1 with Scala and Play Framework: java.lang.IllegalStateException: Must use either different key or iv for GCM encryption", "body": "Hi all,\r\n\r\nUnfortunately this bug is really hard for me to recreate, so i've included information that i'm using Scala, SBT and Play Framework.\r\n\r\nDuring day-to-day use when i'm using Graal 19.1.1 with `sbt run` and Play Framework in Dev Mode, and play's using Netty instead of akka-http - I get this error. I have to completely clean and rebuild to make things keep working. It often recurs.\r\n\r\nI see it whenever a client tries to hit my Play backend to do something over HTTPS - it completely errors out the communication\r\n\r\nThis **only** happens with Graal after 19.0.0. Graal 19.0.0 works fine.\r\n\r\nI'm hoping someone will see this and say \"oh it's connected to this crypto issue\" - obviously the setup i've described is super specific and hard to recreate so apologies for that\r\n\r\n", "url": "https://github.com/oracle/graal/issues/1596", "user": "henricook", "labels": ["bug", "compiler"], "created": "2019-08-09 14:19:51", "closed": "2019-09-01 13:55:30", "commits": {}, "ttf": 22.00027777777778, "commitsDetails": []}, {"title": "Graal runs SLOWER than regular java?", "body": "Im trying the Blender example from here:\r\nhttps://www.graalvm.org/docs/examples/java-performance-examples/\r\n\r\nAnd for some reason the run times I get for Graal are 980~ms, when I add the flag that disables Graal I get the same timings as in the example (even a bit faster).\r\nWhat am I doing wrong? Im running on Ubuntu 18.04 with community edition Graal, I added the Graal dir as first in my PATH (regular java is also there, last)", "url": "https://github.com/oracle/graal/issues/1593", "user": "tomerz90", "labels": ["bug", "documentation"], "created": "2019-08-09 11:05:28", "closed": "2019-08-09 17:30:15", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "FrameWithoutBoxing should not be materialized errors", "body": "I updated GraalVM from 19 to 19.1, and now I see the following errors during the high load test, but they only appear once\r\n\r\n`Reason org.graalvm.compiler.code.SourceStackTraceBailoutException$1: Object of type Lorg/graalvm/compiler/truffle/runtime/FrameWithoutBoxing; should not be materialized (must not pass virtual object into an invoke that cannot be inlined): \r\norg.graalvm.compiler.code.SourceStackTraceBailoutException$1: Object of type Lorg/graalvm/compiler/truffle/runtime/FrameWithoutBoxing; should not be materialized (must not pass virtual object into an invoke that cannot be inlined):\r\n\tat com.oracle.truffle.js.nodes.instrumentation.DeclareTagProvider$MaterializedFunctionBodyNode.execute(DeclareTagProvider.java:142)\r\n\tat com.oracle.truffle.js.nodes.JavaScriptNodeWrapper.execute(JavaScriptNodeWrapper.java:48)\r\n\tat com.oracle.truffle.js.nodes.function.FunctionRootNode.executeInRealm(FunctionRootNode.java:147)\r\n\tat com.oracle.truffle.js.runtime.JavaScriptRealmBoundaryRootNode.execute(JavaScriptRealmBoundaryRootNode.java:93)\r\n\tat org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:328)\r\n\tat org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:318)\r\nCaused by: org.graalvm.compiler.graph.VerificationError: Object of type Lorg/graalvm/compiler/truffle/runtime/FrameWithoutBoxing; should not be materialized (must not pass virtual object into an invoke that cannot be inlined):\r\n\tat org.graalvm.compiler.nodes.virtual.EnsureVirtualizedNode.ensureVirtualFailure(EnsureVirtualizedNode.java:98)\r\n\tat org.graalvm.compiler.nodes.virtual.CommitAllocationNode.lower(CommitAllocationNode.java:117)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase$Round.process(LoweringPhase.java:475)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase$Round.access$200(LoweringPhase.java:351)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase$Round$ProcessFrame.preprocess(LoweringPhase.java:415)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:574)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase$Round.run(LoweringPhase.java:400)\r\n\tat org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n\tat org.graalvm.compiler.phases.PhaseSuite.run(PhaseSuite.java:209)\r\n\tat org.graalvm.compiler.phases.common.IncrementalCanonicalizerPhase.run(IncrementalCanonicalizerPhase.java:56)\r\n\tat org.graalvm.compiler.phases.common.IncrementalCanonicalizerPhase.run(IncrementalCanonicalizerPhase.java:38)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase.lower(LoweringPhase.java:271)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase.run(LoweringPhase.java:264)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase.run(LoweringPhase.java:94)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n\tat org.graalvm.compiler.phases.PhaseSuite.run(PhaseSuite.java:209)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n\tat org.graalvm.compiler.core.GraalCompiler.emitFrontEnd(GraalCompiler.java:220)\r\n\tat org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:144)\r\n\tat org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:129)\r\n\tat org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.compilePEGraph(TruffleCompilerImpl.java:521)\r\n\tat org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.compileAST(TruffleCompilerImpl.java:455)\r\n\tat org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl$TruffleCompilationWrapper.performCompilation(TruffleCompilerImpl.java:624)\r\n\tat org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl$TruffleCompilationWrapper.performCompilation(TruffleCompilerImpl.java:571)\r\n\tat org.graalvm.compiler.core.CompilationWrapper.run(CompilationWrapper.java:178)\r\n\tat org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.doCompile(TruffleCompilerImpl.java:280)\r\n\tat org.graalvm.compiler.truffle.compiler.hotspot.libgraal.HotSpotToSVMEntryPoints.doCompile(HotSpotToSVMEntryPoints.java:251)`\r\n\r\nlog file attached [graal-19.1-errors.log](https://github.com/oracle/graal/files/3356838/graal-19.1-errors.log)\r\n", "url": "https://github.com/oracle/graal/issues/1463", "user": "smokeelow", "labels": ["bug"], "created": "2019-07-03 21:11:59", "closed": "2019-07-17 22:20:35", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "HotSpot assertion failed in Graal AArch64 compiler test suite", "body": "We found a HotSpot assertion failure in AArch64 Graal compiler test suite. It can be reproduced with latest GitHub Graal working on JDK 14 by below command\r\n```\r\nmx unittest --suite compiler --fail-fast --verbose\r\n```\r\n\r\nError message\r\n```\r\n# A fatal error has been detected by the Java Runtime Environment:\r\n#\r\n#  Internal Error (/home/penli01/jdk_src/src/hotspot/cpu/aarch64/nativeInst_aarch64.cpp:472), pid=141415, tid=141428\r\n#  assert(nativeInstruction_at(verified_entry)->is_jump_or_nop() || nativeInstruction_at(verified_entry)->is_sigill_zombie_not_entrant()) failed: Aarch64 cannot replace non-jump with jump\r\n#\r\n# JRE version: OpenJDK Runtime Environment (14.0) (fastdebug build 14-internal+0-adhoc.penli01.jdksrc)\r\n# Java VM: OpenJDK 64-Bit Server VM (fastdebug 14-internal+0-adhoc.penli01.jdksrc, mixed mode, tiered, jvmci, compressed oops, g1 gc, linux-aarch64)\r\n# Problematic frame:\r\n# V  [libjvm.so+0x113cedc]  NativeJump::patch_verified_entry(unsigned char*, unsigned char*, unsigned char*)+0x174\r\n#\r\n# Core dump will be written. Default location: Core dumps may be processed with \"/usr/share/apport/apport %p %s %c %d %P\" (or dumping to /home/penli01/graal/compiler/core.141415)\r\n#\r\n# An error report file with more information is saved as:\r\n# /home/penli01/graal/compiler/hs_err_pid141415.log\r\nCompiled method (JVMCI) 1218434 72428       4      (method)\r\n total in heap  [0x0000ffff7a615310,0x0000ffff7a6154e8] = 472\r\n main code      [0x0000ffff7a615480,0x0000ffff7a615494] = 20\r\n stub code      [0x0000ffff7a615494,0x0000ffff7a615498] = 4\r\n oops           [0x0000ffff7a615498,0x0000ffff7a6154a8] = 16\r\n scopes data    [0x0000ffff7a6154a8,0x0000ffff7a6154b0] = 8\r\n scopes pcs     [0x0000ffff7a6154b0,0x0000ffff7a6154d0] = 32\r\n dependencies   [0x0000ffff7a6154d0,0x0000ffff7a6154d8] = 8\r\n JVMCI data     [0x0000ffff7a6154d8,0x0000ffff7a6154e8] = 16\r\n```\r\n\r\nLines from hs_err)pid141415.log\r\n```\r\nCurrent thread (0x0000ffff80975800):  JavaThread \"Sweeper thread\" daemon [_thread_in_vm, id=141428, stack(0x0000ffff05c96000,0x0000ffff05e96000)]\r\n\r\nStack: [0x0000ffff05c96000,0x0000ffff05e96000],  sp=0x0000ffff05e94480,  free space=2041k\r\nNative frames: (J=compiled Java code, A=aot compiled Java code, j=interpreted, Vv=VM code, C=native code)\r\nV  [libjvm.so+0x113cedc]  NativeJump::patch_verified_entry(unsigned char*, unsigned char*, unsigned char*)+0x174\r\nV  [libjvm.so+0x1147998]  nmethod::make_not_entrant_or_zombie(int)+0x4a0\r\nV  [libjvm.so+0x152b4d4]  NMethodSweeper::process_compiled_method(CompiledMethod*)+0x134\r\nV  [libjvm.so+0x152c9c0]  NMethodSweeper::sweep_code_cache()+0x2d8\r\nV  [libjvm.so+0x152d590]  NMethodSweeper::possibly_sweep()+0x148\r\nV  [libjvm.so+0x152da8c]  NMethodSweeper::sweeper_loop()+0x22c\r\nV  [libjvm.so+0x159abd8]  JavaThread::thread_main_inner()+0x1e0\r\nV  [libjvm.so+0x15a07a8]  Thread::call_run()+0x110\r\nV  [libjvm.so+0x11d8180]  thread_native_entry(Thread*)+0x120\r\nC  [libpthread.so.0+0x7088]  start_thread+0xb0\r\n```\r\n\r\nFrom above message, we found that the instruction at the verified entry point of a Graal-compiled nmethod is not a nop or jump, but AArch64 HotSpot requires it to be. By dumping the problematic nmethod code we get the following\r\n```\r\n[Verified Entry Point]\r\n  0x0000ffff86a5c680:   fmov    s31, w1\r\n  0x0000ffff86a5c684:   cnt     v31.8b, v31.8b\r\n  0x0000ffff86a5c688:   addv    b31, v31.8b\r\n  0x0000ffff86a5c68c:   mov     x0, v31.d[0]\r\n  0x0000ffff86a5c690:   ret\r\n[Stub Code]\r\n  0x0000ffff86a5c694:   .inst   0x00000000 ; undefined\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/1439", "user": "pli-arm", "labels": ["bug", "compiler"], "created": "2019-06-27 01:03:08", "closed": "2019-07-09 00:39:33", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "[nfi] NFI crashes if library does not exist", "body": "#### Repro\r\nExecute something like this (with permissions for internal languages):\r\n```\r\nPolyglot.eval('nfi', 'load \"NonExistingModule.dylib\"')\r\n```\r\n\r\n#### Error\r\n\r\nVM exists with a `dlopen(NonExistingModule.dylib, 2): image not found` error.\r\n\r\n#### Expected Result\r\n\r\nThe VM does not quit, NFI returns some interop `Null` value instead.\r\n\r\n\r\n*Tested with GraalVM CE 19.0.0 on macOS.*", "url": "https://github.com/oracle/graal/issues/1432", "user": "fniephaus", "labels": ["bug"], "created": "2019-06-25 18:10:50", "closed": "2019-06-28 12:57:32", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "[native-image][JDK11]: Class.getPackage() fails with NPE", "body": "I'm trying to build my application using native-image on **JDK 11**, however it fails with NPE on Class.getPackage() call (jackson does this call during deserialization). \r\n\r\nMinimal example:\r\n```(java)\r\npublic class PackageName {\r\n\tpublic static void main(String... args) {\r\n\t\tjava.util.ArrayList.class.getPackage();\r\n\t}\r\n}\r\n```\r\n\r\n```\r\n$ javac PackageName.java\r\n$ native-image --no-server --initialize-at-build-time --no-fallback PackageName\r\n[packagename:660489]    classlist:   1,310.97 ms\r\n[packagename:660489]        (cap):   1,316.51 ms\r\n[packagename:660489]        setup:   2,740.61 ms\r\n[packagename:660489]   (typeflow):   5,145.25 ms\r\n[packagename:660489]    (objects):   4,782.91 ms\r\n[packagename:660489]   (features):     426.35 ms\r\n[packagename:660489]     analysis:  10,677.15 ms\r\n[packagename:660489]     (clinit):     314.85 ms\r\n[packagename:660489]     universe:     778.09 ms\r\n[packagename:660489]      (parse):     833.35 ms\r\n[packagename:660489]     (inline):   1,916.89 ms\r\n[packagename:660489]    (compile):   6,485.74 ms\r\n[packagename:660489]      compile:  10,197.46 ms\r\n[packagename:660489]        image:   2,190.03 ms\r\n[packagename:660489]        write:     219.86 ms\r\n[packagename:660489]      [total]:  28,320.84 ms\r\n\r\n$ ./packagename\r\nException in thread \"main\" java.lang.NullPointerException\r\n\tat jdk.internal.loader.BootLoader.getDefinedPackage(BootLoader.java:178)\r\n\tat jdk.internal.loader.BootLoader.definePackage(BootLoader.java:170)\r\n\tat java.lang.Class.getPackage(DynamicHub.java:968)\r\n\tat PackageName.main(PackageName.java:3)\r\n```\r\n\r\n**OS**: Ubuntu 14.04\r\n**JDK**: OpenJDK 11.0.3 (2019-04-16)\r\n**Graal**: built from master (2019.06.24 09:28:21 commit c12f7791882bc393f7fa4446fe2e8308748bf5dd) ", "url": "https://github.com/oracle/graal/issues/1428", "user": "qdeee", "labels": ["bug", "native-image"], "created": "2019-06-25 13:05:23", "closed": "2019-07-19 04:36:17", "commits": {}, "ttf": 23.00027777777778, "commitsDetails": []}, {"title": "BootstrapJVMCI is broken with EconomyCompilerConfiguration on AArch64", "body": "After @thomaswue's below commit of restricting application of canonicalizations, BootstrapJVMCI is broken with -Dgraal.CompilerConfiguration=economy on AArch64.\r\n```\r\ncommit 1419ca558c45504065b09825d57acbc6be822636\r\nAuthor: Thomas Wuerthinger <thomas.wuerthinger@oracle.com>\r\nDate:   Sun Jun 9 18:18:01 2019 +0200\r\n\r\n    Restrict application of canonicalizations for better compilation speed.\r\n```\r\n\r\nCommand line to reproduce this failure (only on AArch64, x86 is good)\r\n```\r\nmx vm -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -Djvmci.Compiler=graal \\\r\n  -Dgraal.CompilationFailureAction=ExitVM -Dgraal.CompilerConfiguration=economy -XX:+BootstrapJVMCI -version\r\n```\r\n\r\nStack trace printed\r\n```\r\nThread[JVMCI CompilerThread24,9,system]: Compilation of jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8(String) failed:\r\norg.graalvm.compiler.java.BytecodeParser$BytecodeParserError: java.lang.IllegalStateException: zip file closed\r\n        at parsing jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8(SymbolTable.java:800)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.throwParserError(BytecodeParser.java:2470)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3272)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3074)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:976)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:870)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase.run(GraphBuilderPhase.java:55)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase.run(GraphBuilderPhase.java:40)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.PhaseSuite.run(PhaseSuite.java:209)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.core.GraalCompiler.emitFrontEnd(GraalCompiler.java:213)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:144)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:129)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compileHelper(HotSpotGraalCompiler.java:225)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compile(HotSpotGraalCompiler.java:243)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.CompilationTask$HotSpotCompilationWrapper.performCompilation(CompilationTask.java:159)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.CompilationTask$HotSpotCompilationWrapper.performCompilation(CompilationTask.java:80)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.core.CompilationWrapper.run(CompilationWrapper.java:177)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.CompilationTask.runCompilation(CompilationTask.java:323)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compileMethod(HotSpotGraalCompiler.java:143)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compileMethod(HotSpotGraalCompiler.java:109)\r\n        at jdk.internal.vm.ci/jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.compileMethod(HotSpotJVMCIRuntime.java:692)\r\nCaused by: java.lang.IllegalStateException: zip file closed\r\n        at java.base/java.util.zip.ZipFile.ensureOpen(ZipFile.java:850)\r\n        at java.base/java.util.zip.ZipFile.getEntry(ZipFile.java:339)\r\n        at java.base/java.util.zip.ZipFile$1.getEntry(ZipFile.java:1056)\r\n        at java.base/java.util.jar.JarFile.getEntry0(JarFile.java:577)\r\n        at java.base/java.util.jar.JarFile.getEntry(JarFile.java:506)\r\n        at java.base/java.util.jar.JarFile.getJarEntry(JarFile.java:468)\r\n        at java.base/jdk.internal.module.ModuleReferences$JarModuleReader.getEntry(ModuleReferences.java:243)\r\n        at java.base/jdk.internal.module.ModuleReferences$JarModuleReader.implOpen(ModuleReferences.java:264)\r\n        at java.base/jdk.internal.module.ModuleReferences$SafeCloseModuleReader.open(ModuleReferences.java:181)\r\n        at java.base/jdk.internal.loader.BuiltinClassLoader.findResourceAsStream(BuiltinClassLoader.java:275)\r\n        at java.base/java.lang.Module.getResourceAsStream(Module.java:1574)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.serviceprovider.GraalServices.getClassfileAsStream(GraalServices.java:205)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.replacements.classfile.ClassfileBytecodeProvider.getClassfile(ClassfileBytecodeProvider.java:111)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.replacements.classfile.ClassfileBytecodeProvider.getBytecode(ClassfileBytecodeProvider.java:86)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.<init>(BytecodeParser.java:797)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.createBytecodeParser(GraphBuilderPhase.java:89)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.parseAndInlineCallee(BytecodeParser.java:2485)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.inline(BytecodeParser.java:2391)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.intrinsify(BytecodeParser.java:2323)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.nodes.graphbuilderconf.MethodSubstitutionPlugin.execute(MethodSubstitutionPlugin.java:207)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.tryInvocationPlugin(BytecodeParser.java:2092)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.appendInvoke(BytecodeParser.java:1801)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.genDynamicInvokeHelper(BytecodeParser.java:1675)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.genInvokeVirtual(BytecodeParser.java:1625)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.genInvokeVirtual(BytecodeParser.java:1610)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:5113)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3267)\r\n        ... 23 more\r\n```", "url": "https://github.com/oracle/graal/issues/1408", "user": "pli-arm", "labels": ["bug", "compiler"], "created": "2019-06-20 09:33:21", "closed": "2019-10-09 00:52:47", "commits": {}, "ttf": 110.00027777777778, "commitsDetails": []}, {"title": "GraalVM rc16 docker image removed from Docker hub", "body": "Hi,\r\n\r\nAs you know, Quarkus is still using rc16 (we are actively working on the GraalVM 19 support but it needs adjustments both in GraalVM and Quarkus).\r\n\r\nThe rc16 image was removed from Docker hub and it breaks people workflow: we had a user report this morning:\r\nhttps://hub.docker.com/r/oracle/graalvm-ce/tags\r\n\r\nCould you consider adding it back, at least until we have a stable Quarkus version supporting GraalVM 19?\r\n\r\nThanks!", "url": "https://github.com/oracle/graal/issues/1403", "user": "gsmet", "labels": ["bug"], "created": "2019-06-19 10:05:42", "closed": "2019-06-19 11:42:00", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "graal.js fails when re-running js function with exception", "body": "(spoiler): I have a github repo that's minimized to demonstrate this issue with the least possible code: https://github.com/gzoller/GraalBoom\r\n\r\nI'm using the Invoker interface on Oracle JVM with graal.js.  (I've also tried the Context interface w/same result).\r\n\r\nI have a Java class with a Map data member that I've converted to a ProxyObject.  I want to access this member in JS after passing in the object to a JS function.\r\n\r\nMy github code shows how I'm creating/passing these objects.  I'm using sbt to run my test.\r\n\r\nIf I fire up sbt and type 'test', the very first run works great--expected result.  But each subsequent run in the same sbt session produces the exception below.  Here's what I notice:  graal is looking for something called \"getField\" in my ProxyObject, but the ProxyObject interface specifies no such member, so...Boom!\r\n\r\nIf I completely exit sbt and re-enter/re-run, the first time run works again, then the same exception.\r\n\r\n`[info] - Does it work *** FAILED ***\r\n[info]   javax.script.ScriptException: org.graalvm.polyglot.PolyglotException: java.lang.IllegalStateException: java.lang.IllegalAccessException: no such field: com.test.Options.hash/com.test.MapProxyObject/getField\r\n[info]   at com.oracle.truffle.js.scriptengine.GraalJSScriptEngine.invoke(GraalJSScriptEngine.java:402)\r\n[info]   at com.oracle.truffle.js.scriptengine.GraalJSScriptEngine.invokeFunction(GraalJSScriptEngine.java:390)\r\n[info]   at com.test.GraalBoom.jsRun(GraalBoom.scala:17)\r\n[info]   at com.test.TestMe.$anonfun$new$1(TestMe.scala:12)\r\n[info]   at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)\r\n[info]   at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)\r\n[info]   at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)\r\n[info]   at org.scalatest.Transformer.apply(Transformer.scala:22)\r\n[info]   at org.scalatest.Transformer.apply(Transformer.scala:20)\r\n[info]   at org.scalatest.FunSpecLike$$anon$1.apply(FunSpecLike.scala:455)\r\n[info]   ...\r\n[info]   Cause: org.graalvm.polyglot.PolyglotException: java.lang.IllegalStateException: java.lang.IllegalAccessException: no such field: com.test.Options.hash/com.test.MapProxyObject/getField\r\n[info]   at com.oracle.truffle.polyglot.HostFieldDesc$MHImpl.makeGetMethodHandle(HostFieldDesc.java:200)\r\n[info]   at com.oracle.truffle.polyglot.HostFieldDesc$MHImpl.get(HostFieldDesc.java:156)\r\n[info]   at com.oracle.truffle.polyglot.HostObject$ReadFieldNode.doCached(HostObject.java:1151)\r\n[info]   at com.oracle.truffle.polyglot.HostObjectFactory$ReadFieldNodeGen.executeAndSpecialize(HostObjectFactory.java:1272)\r\n[info]   at com.oracle.truffle.polyglot.HostObjectFactory$ReadFieldNodeGen.execute(HostObjectFactory.java:1237)\r\n[info]   at com.oracle.truffle.polyglot.HostObject.readMember(HostObject.java:239)\r\n[info]   at com.oracle.truffle.polyglot.HostObjectGen$InteropLibraryExports$Cached.readMemberNode_AndSpecialize(HostObjectGen.java:1221)\r\n[info]   at com.oracle.truffle.polyglot.HostObjectGen$InteropLibraryExports$Cached.readMember(HostObjectGen.java:1199)\r\n[info]   at com.oracle.truffle.api.interop.InteropLibraryGen$CachedDispatch.readMember(InteropLibraryGen.java:2983)\r\n[info]   at com.oracle.truffle.js.nodes.access.PropertyGetNode$ForeignPropertyGetNode.foreignGet(PropertyGetNode.java:913)\r\n[info]   ...\r\n[info] - Does it work 2 *** FAILED ***\r\n[info]   org.graalvm.polyglot.PolyglotException: java.lang.IllegalStateException: java.lang.IllegalAccessException: no such field: com.test.Options2.hash/org.graalvm.polyglot.proxy.ProxyObject/getField\r\n[info]   at com.oracle.truffle.polyglot.HostFieldDesc$MHImpl.makeGetMethodHandle(HostFieldDesc.java:200)\r\n[info]   at com.oracle.truffle.polyglot.HostFieldDesc$MHImpl.get(HostFieldDesc.java:156)\r\n[info]   at com.oracle.truffle.polyglot.HostObject$ReadFieldNode.doCached(HostObject.java:1151)\r\n[info]   at com.oracle.truffle.polyglot.HostObjectFactory$ReadFieldNodeGen.executeAndSpecialize(HostObjectFactory.java:1272)\r\n[info]   at com.oracle.truffle.polyglot.HostObjectFactory$ReadFieldNodeGen.execute(HostObjectFactory.java:1237)\r\n[info]   at com.oracle.truffle.polyglot.HostObject.readMember(HostObject.java:239)\r\n[info]   at com.oracle.truffle.polyglot.HostObjectGen$InteropLibraryExports$Cached.readMemberNode_AndSpecialize(HostObjectGen.java:1221)\r\n[info]   at com.oracle.truffle.polyglot.HostObjectGen$InteropLibraryExports$Cached.readMember(HostObjectGen.java:1199)\r\n[info]   at com.oracle.truffle.api.interop.InteropLibraryGen$CachedDispatch.readMember(InteropLibraryGen.java:2983)\r\n[info]   at com.oracle.truffle.js.nodes.access.PropertyGetNode$ForeignPropertyGetNode.foreignGet(PropertyGetNode.java:913)\r\n[info]   ...\r\n[`", "url": "https://github.com/oracle/graal/issues/1339", "user": "gzoller", "labels": ["bug"], "created": "2019-05-27 14:25:54", "closed": "2019-06-12 16:01:39", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "MitigateExceedingMaxOopMapStackOffsetTest failed on AArch64", "body": "```\r\n.E\r\nrunStackObjects(org.graalvm.compiler.hotspot.lir.test.MitigateExceedingMaxOopMapStackOffsetTest)\r\norg.graalvm.compiler.debug.GraalError: java.lang.AssertionError\r\n        at lir instruction: B0@3698 org.graalvm.compiler.lir.aarch64.AArch64Move$Move stack:32|QWORD = MOVE r0|QWORD[.]\r\n[B0]\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.lir.asm.CompilationResultBuilder.emitOp(CompilationResultBuilder.java:557)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.lir.asm.CompilationResultBuilder.emitBlock(CompilationResultBuilder.java:537)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.lir.asm.CompilationResultBuilder.emit(CompilationResultBuilder.java:512)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.aarch64.AArch64HotSpotBackend.emitCodeBody(AArch64HotSpotBackend.java:325)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.aarch64.AArch64HotSpotBackend.emitCode(AArch64HotSpotBackend.java:268)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.aarch64.AArch64HotSpotBackend.emitCode(AArch64HotSpotBackend.java:251)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.core.gen.LIRCompilerBackend.emitCode(LIRCompilerBackend.java:207)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.core.gen.LIRCompilerBackend.emitBackEnd(LIRCompilerBackend.java:87)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.core.target.Backend.emitBackEnd(Backend.java:280)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:145)\r\n        at org.graalvm.compiler.core.test.GraalCompilerTest.compile(GraalCompilerTest.java:1103)\r\n        at org.graalvm.compiler.core.test.GraalCompilerTest.getCode(GraalCompilerTest.java:996)\r\n        at org.graalvm.compiler.core.test.GraalCompilerTest.getCode(GraalCompilerTest.java:937)\r\n        at org.graalvm.compiler.core.test.GraalCompilerTest.executeActual(GraalCompilerTest.java:763)\r\n        at org.graalvm.compiler.core.test.GraalCompilerTest.executeActualCheckDeopt(GraalCompilerTest.java:895)\r\n        at org.graalvm.compiler.core.test.GraalCompilerTest.testAgainstExpected(GraalCompilerTest.java:885)\r\n        at org.graalvm.compiler.jtt.JTTTest.runTest(JTTTest.java:111)\r\n        at org.graalvm.compiler.jtt.JTTTest.runTest(JTTTest.java:94)\r\n        at org.graalvm.compiler.jtt.JTTTest.runTest(JTTTest.java:90)\r\n        at org.graalvm.compiler.hotspot.lir.test.MitigateExceedingMaxOopMapStackOffsetTest.runStackObjects(MitigateExceedingMaxOopMapStackOffsetTest.java:161)\r\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.base/java.lang.reflect.Method.invoke(Method.java:567)\r\n        at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n        at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n        at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n        at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n        at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\r\n        at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n        at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n        at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n        at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n        at org.junit.runners.Suite.runChild(Suite.java:128)\r\n        at org.junit.runners.Suite.runChild(Suite.java:27)\r\n        at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n        at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n        at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n        at org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n        at org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n        at com.oracle.mxtool.junit.MxJUnitWrapper.runRequest(MxJUnitWrapper.java:282)\r\n        at com.oracle.mxtool.junit.MxJUnitWrapper.main(MxJUnitWrapper.java:198)\r\nCaused by: java.lang.AssertionError\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.asm.aarch64.AArch64MacroAssembler.makeAddress(AArch64MacroAssembler.java:186)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.asm.aarch64.AArch64MacroAssembler.makeAddress(AArch64MacroAssembler.java:255)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.lir.aarch64.AArch64Move.loadStackSlotAddress(AArch64Move.java:583)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.lir.aarch64.AArch64Move.loadStackSlotAddress(AArch64Move.java:577)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.lir.aarch64.AArch64Move.reg2stack(AArch64Move.java:436)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.lir.aarch64.AArch64Move.move(AArch64Move.java:378)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.lir.aarch64.AArch64Move$Move.emitCode(AArch64Move.java:127)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.lir.aarch64.AArch64LIRInstruction.emitCode(AArch64LIRInstruction.java:39)\r\n        at jdk.internal.vm.compiler/org.graalvm.compiler.lir.asm.CompilationResultBuilder.emitOp(CompilationResultBuilder.java:550)\r\n        ... 49 more\r\n\r\n```\r\n@dougxc @sanzinger ", "url": "https://github.com/oracle/graal/issues/1337", "user": "pli-arm", "labels": ["bug", "compiler"], "created": "2019-05-27 09:48:39", "closed": "2019-05-29 09:54:58", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Thread.currentThread().getContextClassLoader() returns null in Windows image", "body": "My compiled native image for Windows fails with a `NullPointerException`. The `null` is returned from a call to a library which basically does:\r\n\r\n```\r\nThread.currentThread().getContextClassLoader()\r\n```\r\n\r\nThis returns `null` in the Windows image, but in the linux and MacOS images it returns a non-null object.\r\n\r\nThe specific line where the error happens is:\r\nhttps://github.com/clojure/clojure/blob/master/src/clj/clojure/java/io.clj#L450", "url": "https://github.com/oracle/graal/issues/1287", "user": "borkdude", "labels": ["bug", "native-image"], "created": "2019-05-14 15:21:55", "closed": "2020-04-30 11:39:57", "commits": {}, "ttf": 351.0002777777778, "commitsDetails": []}, {"title": "jconsole crashes on GraalVM CE 19.0.0", "body": "Affected version: GraalVM CE 19.0.0\r\n\r\n```\r\n$ java -version \r\nopenjdk version \"1.8.0_212\"\r\nOpenJDK Runtime Environment (build 1.8.0_212-20190420092731.buildslave.jdk8u-src-tar--b03)\r\nOpenJDK GraalVM CE 19.0.0 (build 25.212-b03-jvmci-19-b01, mixed mode)\r\n```\r\n\r\nOS info:\r\n\r\n```\r\nOS:Fedora release 29 (Twenty Nine)\r\nuname:Linux 5.0.13-200.fc29.x86_64 #1 SMP Mon May 6 00:49:54 UTC 2019 x86_64\r\nlibc:glibc 2.28 NPTL 2.28 \r\n```\r\n\r\n\r\nWhen I switch my `$JAVA_HOME` to GraalVM distribution, and I try to run `jconsole`, it crashes right away with the following error output.\r\n\r\n```\r\n$ jconsole               \r\n#\r\n# A fatal error has been detected by the Java Runtime Environment:\r\n#\r\n#  SIGSEGV (0xb) at pc=0x00000000000047d0, pid=10326, tid=0x00007fdde76fe700\r\n#\r\n# JRE version: OpenJDK Runtime Environment (8.0_212-b03) (build 1.8.0_212-20190420092731.buildslave.jdk8u-src-tar--b03)\r\n# Java VM: OpenJDK GraalVM CE 19.0.0 (25.212-b03-jvmci-19-b01 mixed mode linux-amd64 compressed oops)\r\n# Problematic frame:\r\n# C  0x00000000000047d0\r\n#\r\n# Core dump written. Default location: /home/wololock/core or core.10326\r\n#\r\n# An error report file with more information is saved as:\r\n# /home/wololock/hs_err_pid10326.log\r\n#\r\n# If you would like to submit a bug report, please visit:\r\n#   http://bugreport.java.com/bugreport/crash.jsp\r\n#\r\n[1]    10326 abort (core dumped)  jconsole\r\n```\r\n\r\nHere is the content of `/home/wololock/hs_err_pid10326.log` log file.\r\n\r\n```\r\n#\r\n# A fatal error has been detected by the Java Runtime Environment:\r\n#\r\n#  SIGSEGV (0xb) at pc=0x00000000000047d0, pid=10326, tid=0x00007fdde76fe700\r\n#\r\n# JRE version: OpenJDK Runtime Environment (8.0_212-b03) (build 1.8.0_212-20190420092731.buildslave.jdk8u-src-tar--b03)\r\n# Java VM: OpenJDK GraalVM CE 19.0.0 (25.212-b03-jvmci-19-b01 mixed mode linux-amd64 compressed oops)\r\n# Problematic frame:\r\n# C  0x00000000000047d0\r\n#\r\n# Core dump written. Default location: /home/wololock/core or core.10326\r\n#\r\n# If you would like to submit a bug report, please visit:\r\n#   http://bugreport.java.com/bugreport/crash.jsp\r\n# The crash happened outside the Java Virtual Machine in native code.\r\n# See problematic frame for where to report the bug.\r\n#\r\n\r\n---------------  T H R E A D  ---------------\r\n\r\nCurrent thread (0x00007fde0c2d1800):  JavaThread \"AWT-EventQueue-0\" [_thread_in_native, id=10351, stack(0x00007fdde75fe000,0x00007fdde76ff000)]\r\n\r\nsiginfo: si_signo: 11 (SIGSEGV), si_code: 1 (SEGV_MAPERR), si_addr: 0x00000000000047d0\r\n\r\nRegisters:\r\nRAX=0x0000000000000000, RBX=0x00007fddeec1a5d0, RCX=0x00007fde0c230d60, RDX=0x00007fde0c230d60\r\nRSP=0x00007fdde76f8e68, RBP=0x0000000000000001, RSI=0x00007ffcafd73c28, RDI=0x0000000000000001\r\nR8 =0x00007fdd74030b90, R9 =0x000000000000002f, R10=0x00007fdd7408c640, R11=0x0000000000000206\r\nR12=0x00007ffcafd73c28, R13=0x00007fde0c230d60, R14=0x00007fddeec1a5d8, R15=0x0000000000000000\r\nRIP=0x00000000000047d0, EFLAGS=0x0000000000010202, CSGSFS=0x002b000000000033, ERR=0x0000000000000014\r\n  TRAPNO=0x000000000000000e\r\n\r\nTop of Stack: (sp=0x00007fdde76f8e68)\r\n0x00007fdde76f8e68:   00007fde151eedea 0000000000000000\r\n0x00007fdde76f8e78:   0000000000000001 00007ffcafd73c28\r\n0x00007fdde76f8e88:   00007fde0c230d60 00007fdd7408c640\r\n0x00007fdde76f8e98:   00007fde151eeeea 0000001200000108\r\n0x00007fdde76f8ea8:   00007fdd7408c640 00007fdde76f8f70\r\n0x00007fdde76f8eb8:   0000000000000000 0000000000000004\r\n0x00007fdde76f8ec8:   0000000000000004 00007fdde76f90c0\r\n0x00007fdde76f8ed8:   00007fde151f2ecf 00007fdd7408c640\r\n0x00007fdde76f8ee8:   00007fde151f2c65 00007fdd7402be20\r\n0x00007fdde76f8ef8:   00007fdde76f90c0 0000000000001000\r\n0x00007fdde76f8f08:   00007fde14e2f97e 0000000000000805\r\n0x00007fdde76f8f18:   00007fdde76f90c0 00007fdde76f8ef0\r\n0x00007fdde76f8f28:   00000001000081a4 00007fde1520b120\r\n0x00007fdde76f8f38:   0000000080000002 000000000000005f\r\n0x00007fdde76f8f48:   0000000000000000 00007fdde76f9340\r\n0x00007fdde76f8f58:   00007fde14ede98e 0000000000000001\r\n0x00007fdde76f8f68:   00007ffcafd73c28 0000000080000002\r\n0x00007fdde76f8f78:   00007fde14ef8067 00007fdde76f9190\r\n0x00007fdde76f8f88:   00007fdde76f90a0 00007fde151f2af0\r\n0x00007fdde76f8f98:   00007fdde76f90c0 00007fddf41d1508\r\n0x00007fdde76f8fa8:   00007fde151e9334 00007fdde76f90a0\r\n0x00007fdde76f8fb8:   00007fdde76f8fac 0000000000000000\r\n0x00007fdde76f8fc8:   c272af5690bc3dfd 00007fdde76f9340\r\n0x00007fdde76f8fd8:   00007fde14ede98e 0000000000000001\r\n0x00007fdde76f8fe8:   00007ffcafd73c28 3dc861898fb83dfd\r\n0x00007fdde76f8ff8:   3dcf8689901a3dfd 0000000000000000\r\n0x00007fdde76f9008:   0000000000000000 000000000136d420\r\n0x00007fdde76f9018:   00007fdde76f9110 00007fdde76f9100\r\n0x00007fdde76f9028:   00007fdde76f9048 00007fdd74034a80\r\n0x00007fdde76f9038:   0000000000000003 000000017408cfc0\r\n0x00007fdde76f9048:   00007fddf41d1c00 0000000000001000\r\n0x00007fdde76f9058:   0000000000000001 0000000000000007 \r\n\r\nInstructions: (pc=0x00000000000047d0)\r\n0x00000000000047b0:   \r\n[error occurred during error reporting (printing registers, top of stack, instructions near pc), id 0xb]\r\n\r\nRegister to memory mapping:\r\n\r\nRAX=0x0000000000000000 is an unknown value\r\nRBX=0x00007fddeec1a5d0: <offset 0x165d0> in /lib64/libresolv.so.2 at 0x00007fddeec04000\r\nRCX=0x00007fde0c230d60 is an unknown value\r\nRDX=0x00007fde0c230d60 is an unknown value\r\nRSP=0x00007fdde76f8e68 is pointing into the stack for thread: 0x00007fde0c2d1800\r\nRBP=0x0000000000000001 is an unknown value\r\nRSI=0x00007ffcafd73c28 is an unknown value\r\nRDI=0x0000000000000001 is an unknown value\r\nR8 =0x00007fdd74030b90 is an unknown value\r\nR9 =0x000000000000002f is an unknown value\r\nR10=0x00007fdd7408c640 is an unknown value\r\nR11=0x0000000000000206 is an unknown value\r\nR12=0x00007ffcafd73c28 is an unknown value\r\nR13=0x00007fde0c230d60 is an unknown value\r\nR14=0x00007fddeec1a5d8: <offset 0x165d8> in /lib64/libresolv.so.2 at 0x00007fddeec04000\r\nR15=0x0000000000000000 is an unknown value\r\n\r\n\r\nStack: [0x00007fdde75fe000,0x00007fdde76ff000],  sp=0x00007fdde76f8e68,  free space=1003k\r\nNative frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\r\nC  0x00000000000047d0\r\n\r\nJava frames: (J=compiled Java code, j=interpreted, Vv=VM code)\r\nj  java.net.Inet6AddressImpl.lookupAllHostAddr(Ljava/lang/String;)[Ljava/net/InetAddress;+0\r\nj  java.net.InetAddress$2.lookupAllHostAddr(Ljava/lang/String;)[Ljava/net/InetAddress;+4\r\nj  java.net.InetAddress.getAddressesFromNameService(Ljava/lang/String;Ljava/net/InetAddress;)[Ljava/net/InetAddress;+51\r\nj  java.net.InetAddress.getLocalHost()Ljava/net/InetAddress;+90\r\nj  sun.font.FcFontConfiguration.getFcInfoFile()Ljava/io/File;+7\r\nj  sun.font.FcFontConfiguration.readFcInfo()V+1\r\nj  sun.font.FcFontConfiguration.init()Z+14\r\nj  sun.font.FcFontConfiguration.<init>(Lsun/font/SunFontManager;)V+16\r\nj  sun.awt.X11FontManager.createFontConfiguration()Lsun/awt/FontConfiguration;+53\r\nj  sun.font.SunFontManager$2.run()Ljava/lang/Object;+205\r\nv  ~StubRoutines::call_stub\r\nj  java.security.AccessController.doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;+0\r\nj  sun.font.SunFontManager.<init>()V+222\r\nj  sun.awt.FcFontManager.<init>()V+1\r\nj  sun.awt.X11FontManager.<init>()V+1\r\nv  ~StubRoutines::call_stub\r\nj  sun.reflect.NativeConstructorAccessorImpl.newInstance0(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;+0\r\nj  sun.reflect.NativeConstructorAccessorImpl.newInstance([Ljava/lang/Object;)Ljava/lang/Object;+85\r\nj  sun.reflect.DelegatingConstructorAccessorImpl.newInstance([Ljava/lang/Object;)Ljava/lang/Object;+5\r\nj  java.lang.reflect.Constructor.newInstance([Ljava/lang/Object;)Ljava/lang/Object;+79\r\nj  java.lang.Class.newInstance()Ljava/lang/Object;+138\r\nj  sun.font.FontManagerFactory$1.run()Ljava/lang/Object;+21\r\nv  ~StubRoutines::call_stub\r\nj  java.security.AccessController.doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;+0\r\nj  sun.font.FontManagerFactory.getInstance()Lsun/font/FontManager;+17\r\nj  sun.font.SunFontManager.getInstance()Lsun/font/SunFontManager;+0\r\nj  sun.font.FontDesignMetrics.getMetrics(Ljava/awt/Font;Ljava/awt/font/FontRenderContext;)Lsun/font/FontDesignMetrics;+0\r\nj  sun.swing.SwingUtilities2.getFontMetrics(Ljavax/swing/JComponent;Ljava/awt/Font;)Ljava/awt/FontMetrics;+15\r\nj  javax.swing.JComponent.getFontMetrics(Ljava/awt/Font;)Ljava/awt/FontMetrics;+2\r\nj  sun.swing.MenuItemLayoutHelper.reset(Ljavax/swing/JMenuItem;Ljavax/swing/Icon;Ljavax/swing/Icon;Ljava/awt/Rectangle;ILjava/lang/String;ZLjava/awt/Font;Ljava/awt/Font;ZLjava/lang/String;)V+77\r\nj  sun.swing.MenuItemLayoutHelper.<init>(Ljavax/swing/JMenuItem;Ljavax/swing/Icon;Ljavax/swing/Icon;Ljava/awt/Rectangle;ILjava/lang/String;ZLjava/awt/Font;Ljava/awt/Font;ZLjava/lang/String;)V+24\r\nj  javax.swing.plaf.basic.BasicMenuItemUI.getPreferredMenuItemSize(Ljavax/swing/JComponent;Ljavax/swing/Icon;Ljavax/swing/Icon;I)Ljava/awt/Dimension;+48\r\nj  javax.swing.plaf.basic.BasicMenuItemUI.getPreferredSize(Ljavax/swing/JComponent;)Ljava/awt/Dimension;+14\r\nj  javax.swing.JComponent.getPreferredSize()Ljava/awt/Dimension;+26\r\nj  javax.swing.BoxLayout.checkRequests()V+111\r\nj  javax.swing.BoxLayout.preferredLayoutSize(Ljava/awt/Container;)Ljava/awt/Dimension;+10\r\nj  javax.swing.plaf.basic.DefaultMenuLayout.preferredLayoutSize(Ljava/awt/Container;)Ljava/awt/Dimension;+40\r\nj  java.awt.Container.preferredSize()Ljava/awt/Dimension;+43\r\nj  java.awt.Container.getPreferredSize()Ljava/awt/Dimension;+1\r\nj  javax.swing.JComponent.getPreferredSize()Ljava/awt/Dimension;+39\r\nj  javax.swing.JRootPane$RootLayout.layoutContainer(Ljava/awt/Container;)V+142\r\nj  java.awt.Container.layout()V+11\r\nj  java.awt.Container.doLayout()V+1\r\nj  java.awt.Container.validateTree()V+47\r\nj  java.awt.Container.validateTree()V+110\r\nj  java.awt.Container.validate()V+60\r\nj  java.awt.Container.validateUnconditionally()V+14\r\nj  java.awt.Window.show()V+12\r\nj  java.awt.Component.show(Z)V+5\r\nj  java.awt.Component.setVisible(Z)V+2\r\nj  java.awt.Window.setVisible(Z)V+2\r\nj  sun.tools.jconsole.JConsole$6.run()V+155\r\nj  java.awt.event.InvocationEvent.dispatch()V+47\r\nj  java.awt.EventQueue.dispatchEventImpl(Ljava/awt/AWTEvent;Ljava/lang/Object;)V+21\r\nj  java.awt.EventQueue.access$500(Ljava/awt/EventQueue;Ljava/awt/AWTEvent;Ljava/lang/Object;)V+3\r\nj  java.awt.EventQueue$3.run()Ljava/lang/Void;+32\r\nj  java.awt.EventQueue$3.run()Ljava/lang/Object;+1\r\nv  ~StubRoutines::call_stub\r\nj  java.security.AccessController.doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;+0\r\nj  java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;Ljava/security/AccessControlContext;)Ljava/lang/Object;+18\r\nj  java.awt.EventQueue.dispatchEvent(Ljava/awt/AWTEvent;)V+46\r\nj  java.awt.EventDispatchThread.pumpOneEventForFilters(I)V+140\r\nj  java.awt.EventDispatchThread.pumpEventsForFilter(ILjava/awt/Conditional;Ljava/awt/EventFilter;)V+35\r\nj  java.awt.EventDispatchThread.pumpEventsForHierarchy(ILjava/awt/Conditional;Ljava/awt/Component;)V+11\r\nj  java.awt.EventDispatchThread.pumpEvents(ILjava/awt/Conditional;)V+4\r\nj  java.awt.EventDispatchThread.pumpEvents(Ljava/awt/Conditional;)V+3\r\nj  java.awt.EventDispatchThread.run()V+9\r\nv  ~StubRoutines::call_stub\r\n\r\n---------------  P R O C E S S  ---------------\r\n\r\nJava Threads: ( => current thread )\r\n  0x00007fde0c00a000 JavaThread \"DestroyJavaVM\" [_thread_blocked, id=10327, stack(0x00007fde13adf000,0x00007fde13bdf000)]\r\n=>0x00007fde0c2d1800 JavaThread \"AWT-EventQueue-0\" [_thread_in_native, id=10351, stack(0x00007fdde75fe000,0x00007fdde76ff000)]\r\n  0x00007fde0c2d0000 JavaThread \"AWT-Shutdown\" [_thread_blocked, id=10350, stack(0x00007fdde76ff000,0x00007fdde7800000)]\r\n  0x00007fde0c2cb800 JavaThread \"Thread-1\" [_thread_blocked, id=10349, stack(0x00007fdde79fe000,0x00007fdde7aff000)]\r\n  0x00007fde0c2ca000 JavaThread \"Thread-0\" [_thread_blocked, id=10348, stack(0x00007fdde7aff000,0x00007fdde7c00000)]\r\n  0x00007fde0c294000 JavaThread \"AWT-XAWT\" daemon [_thread_in_native, id=10347, stack(0x00007fddee7ff000,0x00007fddee900000)]\r\n  0x00007fde0c274800 JavaThread \"Java2D Disposer\" daemon [_thread_blocked, id=10346, stack(0x00007fddeecff000,0x00007fddeee00000)]\r\n  0x00007fde0c0d6800 JavaThread \"Service Thread\" daemon [_thread_blocked, id=10344, stack(0x00007fddf66eb000,0x00007fddf67ec000)]\r\n  0x00007fde0c0cc000 JavaThread \"C1 CompilerThread3\" daemon [_thread_blocked, id=10343, stack(0x00007fddf67ed000,0x00007fddf69ed000)]\r\n  0x00007fde0c0c9800 JavaThread \"JVMCI-native CompilerThread2\" daemon [_thread_blocked, id=10342, stack(0x00007fddf69ee000,0x00007fddf6bee000)]\r\n  0x00007fde0c0c8000 JavaThread \"JVMCI-native CompilerThread1\" daemon [_thread_blocked, id=10341, stack(0x00007fddf6bef000,0x00007fddf6def000)]\r\n  0x00007fde0c0c5000 JavaThread \"JVMCI-native CompilerThread0\" daemon [_thread_blocked, id=10340, stack(0x00007fddf6df0000,0x00007fddf6ff0000)]\r\n  0x00007fde0c0c3800 JavaThread \"Signal Dispatcher\" daemon [_thread_blocked, id=10339, stack(0x00007fddf6ff0000,0x00007fddf70f1000)]\r\n  0x00007fde0c090800 JavaThread \"Finalizer\" daemon [_thread_blocked, id=10338, stack(0x00007fddf70f1000,0x00007fddf71f2000)]\r\n  0x00007fde0c08c000 JavaThread \"Reference Handler\" daemon [_thread_blocked, id=10337, stack(0x00007fddf71f2000,0x00007fddf72f3000)]\r\n\r\nOther Threads:\r\n  0x00007fde0c084000 VMThread [stack: 0x00007fddf72f4000,0x00007fddf73f4000] [id=10336]\r\n  0x00007fde0c0db800 WatcherThread [stack: 0x00007fddf65eb000,0x00007fddf66eb000] [id=10345]\r\n\r\nVM state:not at safepoint (normal execution)\r\n\r\nVM Mutex/Monitor currently owned by a thread: None\r\n\r\nheap address: 0x00000006ca200000, size: 3934 MB, Compressed Oops mode: Zero based, Oop shift amount: 3\r\nNarrow klass base: 0x0000000000000000, Narrow klass shift: 3\r\nCompressed class space size: 1073741824 Address: 0x00000007c0000000\r\n\r\nHeap:\r\n PSYoungGen      total 3584K, used 1545K [0x000000076e100000, 0x000000076e800000, 0x00000007c0000000)\r\n  eden space 3072K, 33% used [0x000000076e100000,0x000000076e2026c8,0x000000076e400000)\r\n  from space 512K, 100% used [0x000000076e400000,0x000000076e480000,0x000000076e480000)\r\n  to   space 512K, 0% used [0x000000076e780000,0x000000076e780000,0x000000076e800000)\r\n ParOldGen       total 5632K, used 1038K [0x00000006ca200000, 0x00000006ca780000, 0x000000076e100000)\r\n  object space 5632K, 18% used [0x00000006ca200000,0x00000006ca303b68,0x00000006ca780000)\r\n Metaspace       used 11423K, capacity 11660K, committed 12032K, reserved 1060864K\r\n  class space    used 1334K, capacity 1416K, committed 1536K, reserved 1048576K\r\n\r\nCard table byte_map: [0x00007fde12104000,0x00007fde128b4000] byte_map_base: 0x00007fde0eab3000\r\n\r\nMarking Bits: (ParMarkBitMap*) 0x00007fde14d9f3a0\r\n Begin Bits: [0x00007fddc0510000, 0x00007fddc4288000)\r\n End Bits:   [0x00007fddc4288000, 0x00007fddc8000000)\r\n\r\nPolling page: 0x00007fde15208000\r\n\r\nCodeCache: size=245760Kb used=2092Kb max_used=2092Kb free=243667Kb\r\n bounds [0x00007fddfd000000, 0x00007fddfd270000, 0x00007fde0c000000]\r\n total_blobs=972 nmethods=450 adapters=445\r\n compilation: enabled\r\n\r\nCompilation events (10 events):\r\nEvent: 0,218 Thread 0x00007fde0c0c8000 nmethod 443 0x00007fddfd207110 code [0x00007fddfd207260, 0x00007fddfd2072e0]\r\nEvent: 0,218 Thread 0x00007fde0c0cc000 nmethod 446 0x00007fddfd207390 code [0x00007fddfd207560, 0x00007fddfd208048]\r\nEvent: 0,219 Thread 0x00007fde0c0cc000  448       3       java.util.StringTokenizer::scanToken (179 bytes)\r\nEvent: 0,219 Thread 0x00007fde0c0cc000 nmethod 448 0x00007fddfd208210 code [0x00007fddfd2084a0, 0x00007fddfd209418]\r\nEvent: 0,219 Thread 0x00007fde0c0cc000  447       3       java.util.StringTokenizer::skipDelimiters (116 bytes)\r\nEvent: 0,220 Thread 0x00007fde0c0cc000 nmethod 447 0x00007fddfd2099d0 code [0x00007fddfd209be0, 0x00007fddfd20a5d8]\r\nEvent: 0,221 Thread 0x00007fde0c0cc000  449       1       java.nio.Buffer::position (5 bytes)\r\nEvent: 0,221 Thread 0x00007fde0c0cc000 nmethod 449 0x00007fddfd20afd0 code [0x00007fddfd20b140, 0x00007fddfd20b250]\r\nEvent: 0,221 Thread 0x00007fde0c0cc000  450       3       java.lang.Character::charCount (12 bytes)\r\nEvent: 0,222 Thread 0x00007fde0c0cc000 nmethod 450 0x00007fddfd20b290 code [0x00007fddfd20b400, 0x00007fddfd20b590]\r\n\r\nGC Heap History (6 events):\r\nEvent: 0,082 GC heap before\r\n{Heap before GC invocations=1 (full 0):\r\n PSYoungGen      total 2048K, used 1536K [0x000000076e100000, 0x000000076e380000, 0x00000007c0000000)\r\n  eden space 1536K, 100% used [0x000000076e100000,0x000000076e280000,0x000000076e280000)\r\n  from space 512K, 0% used [0x000000076e300000,0x000000076e300000,0x000000076e380000)\r\n  to   space 512K, 0% used [0x000000076e280000,0x000000076e280000,0x000000076e300000)\r\n ParOldGen       total 5632K, used 0K [0x00000006ca200000, 0x00000006ca780000, 0x000000076e100000)\r\n  object space 5632K, 0% used [0x00000006ca200000,0x00000006ca200000,0x00000006ca780000)\r\n Metaspace       used 4390K, capacity 4744K, committed 4992K, reserved 1056768K\r\n  class space    used 497K, capacity 535K, committed 640K, reserved 1048576K\r\nEvent: 0,083 GC heap after\r\nHeap after GC invocations=1 (full 0):\r\n PSYoungGen      total 2048K, used 496K [0x000000076e100000, 0x000000076e500000, 0x00000007c0000000)\r\n  eden space 1536K, 0% used [0x000000076e100000,0x000000076e100000,0x000000076e280000)\r\n  from space 512K, 96% used [0x000000076e280000,0x000000076e2fc010,0x000000076e300000)\r\n  to   space 512K, 0% used [0x000000076e480000,0x000000076e480000,0x000000076e500000)\r\n ParOldGen       total 5632K, used 112K [0x00000006ca200000, 0x00000006ca780000, 0x000000076e100000)\r\n  object space 5632K, 2% used [0x00000006ca200000,0x00000006ca21c310,0x00000006ca780000)\r\n Metaspace       used 4390K, capacity 4744K, committed 4992K, reserved 1056768K\r\n  class space    used 497K, capacity 535K, committed 640K, reserved 1048576K\r\n}\r\nEvent: 0,119 GC heap before\r\n{Heap before GC invocations=2 (full 0):\r\n PSYoungGen      total 2048K, used 2032K [0x000000076e100000, 0x000000076e500000, 0x00000007c0000000)\r\n  eden space 1536K, 100% used [0x000000076e100000,0x000000076e280000,0x000000076e280000)\r\n  from space 512K, 96% used [0x000000076e280000,0x000000076e2fc010,0x000000076e300000)\r\n  to   space 512K, 0% used [0x000000076e480000,0x000000076e480000,0x000000076e500000)\r\n ParOldGen       total 5632K, used 112K [0x00000006ca200000, 0x00000006ca780000, 0x000000076e100000)\r\n  object space 5632K, 2% used [0x00000006ca200000,0x00000006ca21c310,0x00000006ca780000)\r\n Metaspace       used 6708K, capacity 6868K, committed 7040K, reserved 1056768K\r\n  class space    used 743K, capacity 820K, committed 896K, reserved 1048576K\r\nEvent: 0,120 GC heap after\r\nHeap after GC invocations=2 (full 0):\r\n PSYoungGen      total 3584K, used 496K [0x000000076e100000, 0x000000076e500000, 0x00000007c0000000)\r\n  eden space 3072K, 0% used [0x000000076e100000,0x000000076e100000,0x000000076e400000)\r\n  from space 512K, 96% used [0x000000076e480000,0x000000076e4fc010,0x000000076e500000)\r\n  to   space 512K, 0% used [0x000000076e400000,0x000000076e400000,0x000000076e480000)\r\n ParOldGen       total 5632K, used 344K [0x00000006ca200000, 0x00000006ca780000, 0x000000076e100000)\r\n  object space 5632K, 6% used [0x00000006ca200000,0x00000006ca256310,0x00000006ca780000)\r\n Metaspace       used 6708K, capacity 6868K, committed 7040K, reserved 1056768K\r\n  class space    used 743K, capacity 820K, committed 896K, reserved 1048576K\r\n}\r\nEvent: 0,163 GC heap before\r\n{Heap before GC invocations=3 (full 0):\r\n PSYoungGen      total 3584K, used 3568K [0x000000076e100000, 0x000000076e500000, 0x00000007c0000000)\r\n  eden space 3072K, 100% used [0x000000076e100000,0x000000076e400000,0x000000076e400000)\r\n  from space 512K, 96% used [0x000000076e480000,0x000000076e4fc010,0x000000076e500000)\r\n  to   space 512K, 0% used [0x000000076e400000,0x000000076e400000,0x000000076e480000)\r\n ParOldGen       total 5632K, used 344K [0x00000006ca200000, 0x00000006ca780000, 0x000000076e100000)\r\n  object space 5632K, 6% used [0x00000006ca200000,0x00000006ca256310,0x00000006ca780000)\r\n Metaspace       used 8606K, capacity 8820K, committed 8960K, reserved 1056768K\r\n  class space    used 952K, capacity 1024K, committed 1024K, reserved 1048576K\r\nEvent: 0,164 GC heap after\r\nHeap after GC invocations=3 (full 0):\r\n PSYoungGen      total 3584K, used 512K [0x000000076e100000, 0x000000076e800000, 0x00000007c0000000)\r\n  eden space 3072K, 0% used [0x000000076e100000,0x000000076e100000,0x000000076e400000)\r\n  from space 512K, 100% used [0x000000076e400000,0x000000076e480000,0x000000076e480000)\r\n  to   space 512K, 0% used [0x000000076e780000,0x000000076e780000,0x000000076e800000)\r\n ParOldGen       total 5632K, used 1038K [0x00000006ca200000, 0x00000006ca780000, 0x000000076e100000)\r\n  object space 5632K, 18% used [0x00000006ca200000,0x00000006ca303b68,0x00000006ca780000)\r\n Metaspace       used 8606K, capacity 8820K, committed 8960K, reserved 1056768K\r\n  class space    used 952K, capacity 1024K, committed 1024K, reserved 1048576K\r\n}\r\n\r\nClass unloading (0 events):\r\nNo events\r\n\r\nDeoptimization events (1 events):\r\nEvent: 0,219 Thread 0x00007fde0c2d1800 Uncommon trap: reason=null_assert_or_unreached0 action=reinterpret pc=0x00007fddfd1dadb2 method=java.lang.String.replace(CC)Ljava/lang/String; @ 20\r\n\r\nClasses redefined (0 events):\r\nNo events\r\n\r\nInternal exceptions (10 events):\r\nEvent: 0,051 Thread 0x00007fde0c00a000 Exception <a 'java/security/PrivilegedActionException'> (0x000000076e1b6e58) thrown at [/b/b/e/main/graal-jvmci-8/src/share/vm/prims/jvm.cpp, line 1504]\r\nEvent: 0,051 Thread 0x00007fde0c00a000 Exception <a 'java/security/PrivilegedActionException'> (0x000000076e1b8c70) thrown at [/b/b/e/main/graal-jvmci-8/src/share/vm/prims/jvm.cpp, line 1504]\r\nEvent: 0,051 Thread 0x00007fde0c00a000 Exception <a 'java/security/PrivilegedActionException'> (0x000000076e1b8e80) thrown at [/b/b/e/main/graal-jvmci-8/src/share/vm/prims/jvm.cpp, line 1504]\r\nEvent: 0,053 Thread 0x00007fde0c00a000 Exception <a 'java/security/PrivilegedActionException'> (0x000000076e1c0418) thrown at [/b/b/e/main/graal-jvmci-8/src/share/vm/prims/jvm.cpp, line 1504]\r\nEvent: 0,053 Thread 0x00007fde0c00a000 Exception <a 'java/security/PrivilegedActionException'> (0x000000076e1c0628) thrown at [/b/b/e/main/graal-jvmci-8/src/share/vm/prims/jvm.cpp, line 1504]\r\nEvent: 0,085 Thread 0x00007fde0c00a000 Exception <a 'java/lang/NoSuchFieldError': method resolution failed> (0x000000076e11d370) thrown at [/b/b/e/main/graal-jvmci-8/src/share/vm/prims/methodHandles.cpp, line 1167]\r\nEvent: 0,086 Thread 0x00007fde0c00a000 Exception <a 'java/lang/NoSuchFieldError': method resolution failed> (0x000000076e12ad60) thrown at [/b/b/e/main/graal-jvmci-8/src/share/vm/prims/methodHandles.cpp, line 1167]\r\nEvent: 0,098 Thread 0x00007fde0c00a000 Exception <a 'java/io/FileNotFoundException'> (0x000000076e1ab448) thrown at [/b/b/e/main/graal-jvmci-8/src/share/vm/prims/jni.cpp, line 714]\r\nEvent: 0,098 Thread 0x00007fde0c00a000 Exception <a 'java/io/FileNotFoundException'> (0x000000076e1afd50) thrown at [/b/b/e/main/graal-jvmci-8/src/share/vm/prims/jni.cpp, line 714]\r\nEvent: 0,108 Thread 0x00007fde0c00a000 Exception <a 'java/lang/ClassNotFoundException': sun/dc/DuctusRenderingEngine> (0x000000076e1ce870) thrown at [/b/b/e/main/graal-jvmci-8/src/share/vm/classfile/systemDictionary.cpp, line 233]\r\n\r\nEvents (10 events):\r\nEvent: 0,221 loading class java/util/regex/Pattern$5\r\nEvent: 0,221 loading class java/util/regex/Pattern$5 done\r\nEvent: 0,221 loading class java/util/regex/Pattern$BranchConn\r\nEvent: 0,221 loading class java/util/regex/Pattern$BranchConn done\r\nEvent: 0,221 loading class java/util/regex/Pattern$Branch\r\nEvent: 0,221 loading class java/util/regex/Pattern$Branch done\r\nEvent: 0,221 loading class java/util/regex/ASCII\r\nEvent: 0,221 loading class java/util/regex/ASCII done\r\nEvent: 0,221 loading class sun/font/FcFontConfiguration\r\nEvent: 0,221 loading class sun/font/FcFontConfiguration done\r\n\r\n\r\nDynamic libraries:\r\n00400000-00401000 r-xp 00000000 08:05 939507                             /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/bin/jconsole\r\n00600000-00601000 r--p 00000000 08:05 939507                             /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/bin/jconsole\r\n00601000-00602000 rw-p 00001000 08:05 939507                             /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/bin/jconsole\r\n00814000-00835000 rw-p 00000000 00:00 0                                  [heap]\r\n6ca200000-6ca780000 rw-p 00000000 00:00 0 \r\n6ca780000-76e100000 ---p 00000000 00:00 0 \r\n76e100000-76e800000 rw-p 00000000 00:00 0 \r\n76e800000-7c0000000 ---p 00000000 00:00 0 \r\n7c0000000-7c0180000 rw-p 00000000 00:00 0 \r\n7c0180000-800000000 ---p 00000000 00:00 0 \r\n7fdd70000000-7fdd70021000 rw-p 00000000 00:00 0 \r\n7fdd70021000-7fdd74000000 ---p 00000000 00:00 0 \r\n7fdd74000000-7fdd74091000 rw-p 00000000 00:00 0 \r\n7fdd74091000-7fdd78000000 ---p 00000000 00:00 0 \r\n7fdd78000000-7fdd78021000 rw-p 00000000 00:00 0 \r\n7fdd78021000-7fdd7c000000 ---p 00000000 00:00 0 \r\n7fdd7c000000-7fdd7c021000 rw-p 00000000 00:00 0 \r\n7fdd7c021000-7fdd80000000 ---p 00000000 00:00 0 \r\n7fdd80000000-7fdd80021000 rw-p 00000000 00:00 0 \r\n7fdd80021000-7fdd84000000 ---p 00000000 00:00 0 \r\n7fdd84000000-7fdd84021000 rw-p 00000000 00:00 0 \r\n7fdd84021000-7fdd88000000 ---p 00000000 00:00 0 \r\n7fdd88000000-7fdd88021000 rw-p 00000000 00:00 0 \r\n7fdd88021000-7fdd8c000000 ---p 00000000 00:00 0 \r\n7fdd8c000000-7fdd8c021000 rw-p 00000000 00:00 0 \r\n7fdd8c021000-7fdd90000000 ---p 00000000 00:00 0 \r\n7fdd90000000-7fdd90342000 rw-p 00000000 00:00 0 \r\n7fdd90342000-7fdd94000000 ---p 00000000 00:00 0 \r\n7fdd94000000-7fdd94220000 rw-p 00000000 00:00 0 \r\n7fdd94220000-7fdd98000000 ---p 00000000 00:00 0 \r\n7fdd98000000-7fdd98021000 rw-p 00000000 00:00 0 \r\n7fdd98021000-7fdd9c000000 ---p 00000000 00:00 0 \r\n7fdd9c000000-7fdd9c027000 rw-p 00000000 00:00 0 \r\n7fdd9c027000-7fdda0000000 ---p 00000000 00:00 0 \r\n7fdda0000000-7fdda0021000 rw-p 00000000 00:00 0 \r\n7fdda0021000-7fdda4000000 ---p 00000000 00:00 0 \r\n7fdda7057000-7fddb4000000 r--p 00000000 08:05 3409247                    /usr/lib/locale/locale-archive\r\n7fddb4000000-7fddb4021000 rw-p 00000000 00:00 0 \r\n7fddb4021000-7fddb8000000 ---p 00000000 00:00 0 \r\n7fddb8000000-7fddb8021000 rw-p 00000000 00:00 0 \r\n7fddb8021000-7fddbc000000 ---p 00000000 00:00 0 \r\n7fddbc000000-7fddbc021000 rw-p 00000000 00:00 0 \r\n7fddbc021000-7fddc0000000 ---p 00000000 00:00 0 \r\n7fddc0510000-7fddc8000000 rw-p 00000000 00:00 0 \r\n7fddc8000000-7fddc8021000 rw-p 00000000 00:00 0 \r\n7fddc8021000-7fddcc000000 ---p 00000000 00:00 0 \r\n7fddcc000000-7fddcc021000 rw-p 00000000 00:00 0 \r\n7fddcc021000-7fddd0000000 ---p 00000000 00:00 0 \r\n7fddd0000000-7fddd0021000 rw-p 00000000 00:00 0 \r\n7fddd0021000-7fddd4000000 ---p 00000000 00:00 0 \r\n7fddd8000000-7fddd8021000 rw-p 00000000 00:00 0 \r\n7fddd8021000-7fdddc000000 ---p 00000000 00:00 0 \r\n7fdde0000000-7fdde0021000 rw-p 00000000 00:00 0 \r\n7fdde0021000-7fdde4000000 ---p 00000000 00:00 0 \r\n7fdde6376000-7fdde63b6000 rw-p 00000000 00:00 0 \r\n7fdde63b6000-7fdde6576000 ---p 00000000 00:00 0 \r\n7fdde6576000-7fdde6591000 r--p 00000000 08:05 3418852                    /usr/lib64/libglib-2.0.so.0.5800.3\r\n7fdde6591000-7fdde6611000 r-xp 0001b000 08:05 3418852                    /usr/lib64/libglib-2.0.so.0.5800.3\r\n7fdde6611000-7fdde6693000 r--p 0009b000 08:05 3418852                    /usr/lib64/libglib-2.0.so.0.5800.3\r\n7fdde6693000-7fdde6694000 r--p 0011c000 08:05 3418852                    /usr/lib64/libglib-2.0.so.0.5800.3\r\n7fdde6694000-7fdde6695000 rw-p 0011d000 08:05 3418852                    /usr/lib64/libglib-2.0.so.0.5800.3\r\n7fdde6695000-7fdde6696000 rw-p 00000000 00:00 0 \r\n7fdde6696000-7fdde66cc000 r--p 00000000 08:05 3418846                    /usr/lib64/libgio-2.0.so.0.5800.3\r\n7fdde66cc000-7fdde67bc000 r-xp 00036000 08:05 3418846                    /usr/lib64/libgio-2.0.so.0.5800.3\r\n7fdde67bc000-7fdde6838000 r--p 00126000 08:05 3418846                    /usr/lib64/libgio-2.0.so.0.5800.3\r\n7fdde6838000-7fdde6840000 rw-p 001a1000 08:05 3418846                    /usr/lib64/libgio-2.0.so.0.5800.3\r\n7fdde6840000-7fdde6842000 rw-p 00000000 00:00 0 \r\n7fdde6a00000-7fdde6b00000 rw-p 00000000 00:00 0 \r\n7fdde6c00000-7fdde6d00000 rw-p 00000000 00:00 0 \r\n7fdde6e00000-7fdde6f00000 rw-p 00000000 00:00 0 \r\n7fdde7000000-7fdde7200000 rw-p 00000000 00:00 0 \r\n7fdde7200000-7fdde7300000 rw-p 00000000 00:00 0 \r\n7fdde7400000-7fdde7500000 rw-p 00000000 00:00 0 \r\n7fdde75fe000-7fdde7601000 ---p 00000000 00:00 0 \r\n7fdde7601000-7fdde76ff000 rwxp 00000000 00:00 0 \r\n7fdde76ff000-7fdde7702000 ---p 00000000 00:00 0 \r\n7fdde7702000-7fdde7800000 rwxp 00000000 00:00 0 \r\n7fdde7800000-7fdde7900000 rw-p 00000000 00:00 0 \r\n7fdde79fe000-7fdde7a01000 ---p 00000000 00:00 0 \r\n7fdde7a01000-7fdde7aff000 rwxp 00000000 00:00 0 \r\n7fdde7aff000-7fdde7b02000 ---p 00000000 00:00 0 \r\n7fdde7b02000-7fdde7c00000 rwxp 00000000 00:00 0 \r\n7fdde7c00000-7fdde7d00000 rw-p 00000000 00:00 0 \r\n7fdde7e00000-7fdde7f00000 rw-p 00000000 00:00 0 \r\n7fdde8000000-7fdde8021000 rw-p 00000000 00:00 0 \r\n7fdde8021000-7fddec000000 ---p 00000000 00:00 0 \r\n7fddec000000-7fddec100000 rw-p 00000000 00:00 0 \r\n7fddec200000-7fddec300000 rw-p 00000000 00:00 0 \r\n7fddec400000-7fddec500000 rw-p 00000000 00:00 0 \r\n7fddec600000-7fddec700000 rw-p 00000000 00:00 0 \r\n7fddec800000-7fddec900000 rw-p 00000000 00:00 0 \r\n7fddeca00000-7fddecb00000 rw-p 00000000 00:00 0 \r\n7fddecc00000-7fddecd00000 rw-p 00000000 00:00 0 \r\n7fddece00000-7fddecf00000 rw-p 00000000 00:00 0 \r\n7fdded000000-7fdded100000 rw-p 00000000 00:00 0 \r\n7fdded200000-7fdded300000 rw-p 00000000 00:00 0 \r\n7fdded400000-7fdded500000 rw-p 00000000 00:00 0 \r\n7fdded600000-7fdded700000 rw-p 00000000 00:00 0 \r\n7fdded800000-7fdded900000 rw-p 00000000 00:00 0 \r\n7fddeda00000-7fddedb00000 rw-p 00000000 00:00 0 \r\n7fddedc00000-7fddedd00000 rw-p 00000000 00:00 0 \r\n7fddede00000-7fddedf00000 rw-p 00000000 00:00 0 \r\n7fddee000000-7fddee100000 rw-p 00000000 00:00 0 \r\n7fddee200000-7fddee300000 rw-p 00000000 00:00 0 \r\n7fddee371000-7fddee373000 r--p 00000000 08:05 3431377                    /usr/lib64/libpcre2-8.so.0.8.0\r\n7fddee373000-7fddee3d6000 r-xp 00002000 08:05 3431377                    /usr/lib64/libpcre2-8.so.0.8.0\r\n7fddee3d6000-7fddee3fd000 r--p 00065000 08:05 3431377                    /usr/lib64/libpcre2-8.so.0.8.0\r\n7fddee3fd000-7fddee3fe000 ---p 0008c000 08:05 3431377                    /usr/lib64/libpcre2-8.so.0.8.0\r\n7fddee3fe000-7fddee3ff000 r--p 0008c000 08:05 3431377                    /usr/lib64/libpcre2-8.so.0.8.0\r\n7fddee3ff000-7fddee400000 rw-p 0008d000 08:05 3431377                    /usr/lib64/libpcre2-8.so.0.8.0\r\n7fddee400000-7fddee500000 rw-p 00000000 00:00 0 \r\n7fddee600000-7fddee700000 rw-p 00000000 00:00 0 \r\n7fddee712000-7fddee71c000 r--p 00000000 08:05 3419690                    /usr/lib64/libblkid.so.1.1.0\r\n7fddee71c000-7fddee74e000 r-xp 0000a000 08:05 3419690                    /usr/lib64/libblkid.so.1.1.0\r\n7fddee74e000-7fddee75e000 r--p 0003c000 08:05 3419690                    /usr/lib64/libblkid.so.1.1.0\r\n7fddee75e000-7fddee763000 r--p 0004b000 08:05 3419690                    /usr/lib64/libblkid.so.1.1.0\r\n7fddee763000-7fddee764000 rw-p 00050000 08:05 3419690                    /usr/lib64/libblkid.so.1.1.0\r\n7fddee764000-7fddee765000 rw-p 00000000 00:00 0 \r\n7fddee7a2000-7fddee7ae000 r--p 00000000 08:05 3420069                    /usr/lib64/libmount.so.1.1.0\r\n7fddee7ae000-7fddee7e8000 r-xp 0000c000 08:05 3420069                    /usr/lib64/libmount.so.1.1.0\r\n7fddee7e8000-7fddee7fa000 r--p 00046000 08:05 3420069                    /usr/lib64/libmount.so.1.1.0\r\n7fddee7fa000-7fddee7fe000 rw-p 00057000 08:05 3420069                    /usr/lib64/libmount.so.1.1.0\r\n7fddee7fe000-7fddee7ff000 rw-p 00000000 00:00 0 \r\n7fddee7ff000-7fddee802000 ---p 00000000 00:00 0 \r\n7fddee802000-7fddee900000 rwxp 00000000 00:00 0 \r\n7fddee900000-7fddeea00000 rw-p 00000000 00:00 0 \r\n7fddeeb00000-7fddeec00000 rw-p 00000000 00:00 0 \r\n7fddeec04000-7fddeec08000 r--p 00000000 08:05 3414530                    /usr/lib64/libresolv-2.28.so\r\n7fddeec08000-7fddeec15000 r-xp 00004000 08:05 3414530                    /usr/lib64/libresolv-2.28.so\r\n7fddeec15000-7fddeec19000 r--p 00011000 08:05 3414530                    /usr/lib64/libresolv-2.28.so\r\n7fddeec19000-7fddeec1a000 ---p 00015000 08:05 3414530                    /usr/lib64/libresolv-2.28.so\r\n7fddeec1a000-7fddeec1c000 rw-p 00015000 08:05 3414530                    /usr/lib64/libresolv-2.28.so\r\n7fddeec1c000-7fddeec1e000 rw-p 00000000 00:00 0 \r\n7fddeec1e000-7fddeec25000 r--p 00000000 08:05 3419497                    /usr/lib64/libselinux.so.1\r\n7fddeec25000-7fddeec3f000 r-xp 00007000 08:05 3419497                    /usr/lib64/libselinux.so.1\r\n7fddeec3f000-7fddeec46000 r--p 00021000 08:05 3419497                    /usr/lib64/libselinux.so.1\r\n7fddeec46000-7fddeec47000 ---p 00028000 08:05 3419497                    /usr/lib64/libselinux.so.1\r\n7fddeec47000-7fddeec49000 rw-p 00028000 08:05 3419497                    /usr/lib64/libselinux.so.1\r\n7fddeec49000-7fddeec4b000 rw-p 00000000 00:00 0 \r\n7fddeec4b000-7fddeec4d000 r--p 00000000 08:05 3419818                    /usr/lib64/libffi.so.6.0.2\r\n7fddeec4d000-7fddeec52000 r-xp 00002000 08:05 3419818                    /usr/lib64/libffi.so.6.0.2\r\n7fddeec52000-7fddeec53000 r--p 00007000 08:05 3419818                    /usr/lib64/libffi.so.6.0.2\r\n7fddeec53000-7fddeec54000 ---p 00008000 08:05 3419818                    /usr/lib64/libffi.so.6.0.2\r\n7fddeec54000-7fddeec56000 rw-p 00008000 08:05 3419818                    /usr/lib64/libffi.so.6.0.2\r\n7fddeec8c000-7fddeec8e000 r--p 00000000 08:05 3419122                    /usr/lib64/libpcre.so.1.2.11\r\n7fddeec8e000-7fddeecdf000 r-xp 00002000 08:05 3419122                    /usr/lib64/libpcre.so.1.2.11\r\n7fddeecdf000-7fddeecfd000 r--p 00053000 08:05 3419122                    /usr/lib64/libpcre.so.1.2.11\r\n7fddeecfd000-7fddeecfe000 r--p 00070000 08:05 3419122                    /usr/lib64/libpcre.so.1.2.11\r\n7fddeecfe000-7fddeecff000 rw-p 00071000 08:05 3419122                    /usr/lib64/libpcre.so.1.2.11\r\n7fddeecff000-7fddeed02000 ---p 00000000 00:00 0 \r\n7fddeed02000-7fddeee00000 rwxp 00000000 00:00 0 \r\n7fddeee00000-7fddeef00000 rw-p 00000000 00:00 0 \r\n7fddeef00000-7fddeef02000 r--p 00000000 08:05 3420359                    /usr/lib64/libuuid.so.1.3.0\r\n7fddeef02000-7fddeef06000 r-xp 00002000 08:05 3420359                    /usr/lib64/libuuid.so.1.3.0\r\n7fddeef06000-7fddeef07000 r--p 00006000 08:05 3420359                    /usr/lib64/libuuid.so.1.3.0\r\n7fddeef07000-7fddeef08000 r--p 00006000 08:05 3420359                    /usr/lib64/libuuid.so.1.3.0\r\n7fddeef08000-7fddeef09000 rw-p 00000000 00:00 0 \r\n7fddeef60000-7fddeef6b000 r--p 00000000 08:05 3418863                    /usr/lib64/libgobject-2.0.so.0.5800.3\r\n7fddeef6b000-7fddeef9e000 r-xp 0000b000 08:05 3418863                    /usr/lib64/libgobject-2.0.so.0.5800.3\r\n7fddeef9e000-7fddeefb3000 r--p 0003e000 08:05 3418863                    /usr/lib64/libgobject-2.0.so.0.5800.3\r\n7fddeefb3000-7fddeefb4000 ---p 00053000 08:05 3418863                    /usr/lib64/libgobject-2.0.so.0.5800.3\r\n7fddeefb4000-7fddeefb6000 rw-p 00053000 08:05 3418863                    /usr/lib64/libgobject-2.0.so.0.5800.3\r\n7fddef000000-7fddef06f000 r-xp 00000000 08:05 5776566                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libfreetype.so.6\r\n7fddef06f000-7fddef170000 ---p 0006f000 08:05 5776566                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libfreetype.so.6\r\n7fddef170000-7fddef183000 rw-p 00070000 08:05 5776566                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libfreetype.so.6\r\n7fddef183000-7fddef1eb000 r-xp 00000000 08:05 5776567                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libfontmanager.so\r\n7fddef1eb000-7fddef3ea000 ---p 00068000 08:05 5776567                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libfontmanager.so\r\n7fddef3ea000-7fddef3ee000 r--p 00067000 08:05 5776567                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libfontmanager.so\r\n7fddef3ee000-7fddef3ef000 rw-p 0006b000 08:05 5776567                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libfontmanager.so\r\n7fddef3ef000-7fddef500000 rw-p 00000000 00:00 0 \r\n7fddef55c000-7fddef573000 r-xp 00000000 08:05 5776591                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libnet.so\r\n7fddef573000-7fddef772000 ---p 00017000 08:05 5776591                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libnet.so\r\n7fddef772000-7fddef773000 r--p 00016000 08:05 5776591                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libnet.so\r\n7fddef773000-7fddef774000 rw-p 00017000 08:05 5776591                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libnet.so\r\n7fddef774000-7fddef785000 r-xp 00000000 08:05 5776568                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libnio.so\r\n7fddef785000-7fddef984000 ---p 00011000 08:05 5776568                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libnio.so\r\n7fddef984000-7fddef985000 r--p 00010000 08:05 5776568                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libnio.so\r\n7fddef985000-7fddef986000 rw-p 00011000 08:05 5776568                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libnio.so\r\n7fddef986000-7fddef9a2000 r--p 00000000 08:05 3418596                    /usr/lib64/libX11.so.6.3.0\r\n7fddef9a2000-7fddefa30000 r-xp 0001c000 08:05 3418596                    /usr/lib64/libX11.so.6.3.0\r\n7fddefa30000-7fddefac4000 r--p 000aa000 08:05 3418596                    /usr/lib64/libX11.so.6.3.0\r\n7fddefac4000-7fddefac7000 r--p 0013d000 08:05 3418596                    /usr/lib64/libX11.so.6.3.0\r\n7fddefac7000-7fddefacb000 rw-p 00140000 08:05 3418596                    /usr/lib64/libX11.so.6.3.0\r\n7fddefacb000-7fddefb27000 r-xp 00000000 08:05 5776599                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libawt_xawt.so\r\n7fddefb27000-7fddefd27000 ---p 0005c000 08:05 5776599                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libawt_xawt.so\r\n7fddefd27000-7fddefd28000 r--p 0005c000 08:05 5776599                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libawt_xawt.so\r\n7fddefd28000-7fddefd2b000 rw-p 0005d000 08:05 5776599                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libawt_xawt.so\r\n7fddefd2b000-7fddefd2d000 rw-p 00000000 00:00 0 \r\n7fddefd2d000-7fddefdd0000 r-xp 00000000 08:05 5776561                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libawt.so\r\n7fddefdd0000-7fddeffcf000 ---p 000a3000 08:05 5776561                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libawt.so\r\n7fddeffcf000-7fddeffd0000 r--p 000a2000 08:05 5776561                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libawt.so\r\n7fddeffd0000-7fddeffdb000 rw-p 000a3000 08:05 5776561                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libawt.so\r\n7fddeffdb000-7fddf0000000 rw-p 00000000 00:00 0 \r\n7fddf0000000-7fddf0021000 rw-p 00000000 00:00 0 \r\n7fddf0021000-7fddf4000000 ---p 00000000 00:00 0 \r\n7fddf4000000-7fddf4100000 rw-p 00000000 00:00 0 \r\n7fddf41d1000-7fddf41d4000 r--p 00000000 08:05 3414523                    /usr/lib64/libnss_files-2.28.so\r\n7fddf41d4000-7fddf41db000 r-xp 00003000 08:05 3414523                    /usr/lib64/libnss_files-2.28.so\r\n7fddf41db000-7fddf41dd000 r--p 0000a000 08:05 3414523                    /usr/lib64/libnss_files-2.28.so\r\n7fddf41dd000-7fddf41de000 ---p 0000c000 08:05 3414523                    /usr/lib64/libnss_files-2.28.so\r\n7fddf41de000-7fddf41df000 r--p 0000c000 08:05 3414523                    /usr/lib64/libnss_files-2.28.so\r\n7fddf41df000-7fddf41e0000 rw-p 0000d000 08:05 3414523                    /usr/lib64/libnss_files-2.28.so\r\n7fddf41e0000-7fddf41e6000 rw-p 00000000 00:00 0 \r\n7fddf41e6000-7fddf4200000 r--p 00000000 08:05 4330845                    /etc/ld.so.cache\r\n7fddf4200000-7fddf4300000 rw-p 00000000 00:00 0 \r\n7fddf4302000-7fddf4303000 r--p 00000000 08:05 3420122                    /usr/lib64/libnss_mdns4_minimal.so.2\r\n7fddf4303000-7fddf4305000 r-xp 00001000 08:05 3420122                    /usr/lib64/libnss_mdns4_minimal.so.2\r\n7fddf4305000-7fddf4306000 r--p 00003000 08:05 3420122                    /usr/lib64/libnss_mdns4_minimal.so.2\r\n7fddf4306000-7fddf4307000 r--p 00003000 08:05 3420122                    /usr/lib64/libnss_mdns4_minimal.so.2\r\n7fddf4307000-7fddf4308000 rw-p 00000000 00:00 0 \r\n7fddf4308000-7fddf4312000 r--s 00116000 08:05 5545010                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/ext/localedata.jar\r\n7fddf4312000-7fddf4313000 r--p 00000000 08:05 3418856                    /usr/lib64/libgmodule-2.0.so.0.5800.3\r\n7fddf4313000-7fddf4315000 r-xp 00001000 08:05 3418856                    /usr/lib64/libgmodule-2.0.so.0.5800.3\r\n7fddf4315000-7fddf4316000 r--p 00003000 08:05 3418856                    /usr/lib64/libgmodule-2.0.so.0.5800.3\r\n7fddf4316000-7fddf4318000 rw-p 00003000 08:05 3418856                    /usr/lib64/libgmodule-2.0.so.0.5800.3\r\n7fddf4318000-7fddf431a000 r--p 00000000 08:05 3419612                    /usr/lib64/libXfixes.so.3.1.0\r\n7fddf431a000-7fddf431d000 r-xp 00002000 08:05 3419612                    /usr/lib64/libXfixes.so.3.1.0\r\n7fddf431d000-7fddf431e000 r--p 00005000 08:05 3419612                    /usr/lib64/libXfixes.so.3.1.0\r\n7fddf431e000-7fddf431f000 ---p 00006000 08:05 3419612                    /usr/lib64/libXfixes.so.3.1.0\r\n7fddf431f000-7fddf4320000 r--p 00006000 08:05 3419612                    /usr/lib64/libXfixes.so.3.1.0\r\n7fddf4320000-7fddf4321000 rw-p 00007000 08:05 3419612                    /usr/lib64/libXfixes.so.3.1.0\r\n7fddf4321000-7fddf4324000 r--p 00000000 08:05 3419608                    /usr/lib64/libXcursor.so.1.0.2\r\n7fddf4324000-7fddf432a000 r-xp 00003000 08:05 3419608                    /usr/lib64/libXcursor.so.1.0.2\r\n7fddf432a000-7fddf432c000 r--p 00009000 08:05 3419608                    /usr/lib64/libXcursor.so.1.0.2\r\n7fddf432c000-7fddf432d000 r--p 0000a000 08:05 3419608                    /usr/lib64/libXcursor.so.1.0.2\r\n7fddf432d000-7fddf432e000 rw-p 00000000 00:00 0 \r\n7fddf432e000-7fddf4331000 r--p 00000000 08:05 3418293                    /usr/lib64/libgcc_s-8-20190223.so.1\r\n7fddf4331000-7fddf4343000 r-xp 00003000 08:05 3418293                    /usr/lib64/libgcc_s-8-20190223.so.1\r\n7fddf4343000-7fddf4346000 r--p 00015000 08:05 3418293                    /usr/lib64/libgcc_s-8-20190223.so.1\r\n7fddf4346000-7fddf4347000 ---p 00018000 08:05 3418293                    /usr/lib64/libgcc_s-8-20190223.so.1\r\n7fddf4347000-7fddf4348000 r--p 00018000 08:05 3418293                    /usr/lib64/libgcc_s-8-20190223.so.1\r\n7fddf4348000-7fddf4349000 rw-p 00019000 08:05 3418293                    /usr/lib64/libgcc_s-8-20190223.so.1\r\n7fddf4349000-7fddf43b0000 r--s 00ef0000 08:05 5532310                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/jvmci/graal.jar\r\n7fddf43b0000-7fddf43d5000 r--s 00474000 08:05 5776464                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/truffle/truffle-api.jar\r\n7fddf43d5000-7fddf43e1000 r--p 00000000 08:05 3420427                    /usr/lib64/libxcb.so.1.1.0\r\n7fddf43e1000-7fddf43f5000 r-xp 0000c000 08:05 3420427                    /usr/lib64/libxcb.so.1.1.0\r\n7fddf43f5000-7fddf43fe000 r--p 00020000 08:05 3420427                    /usr/lib64/libxcb.so.1.1.0\r\n7fddf43fe000-7fddf43ff000 r--p 00028000 08:05 3420427                    /usr/lib64/libxcb.so.1.1.0\r\n7fddf43ff000-7fddf4400000 rw-p 00029000 08:05 3420427                    /usr/lib64/libxcb.so.1.1.0\r\n7fddf4400000-7fddf4500000 rw-p 00000000 00:00 0 \r\n7fddf4502000-7fddf451e000 r--s 00393000 08:05 5545242                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/ext/cldrdata.jar\r\n7fddf451e000-7fddf4520000 r--p 00000000 08:05 3419615                    /usr/lib64/libXi.so.6.1.0\r\n7fddf4520000-7fddf452b000 r-xp 00002000 08:05 3419615                    /usr/lib64/libXi.so.6.1.0\r\n7fddf452b000-7fddf452e000 r--p 0000d000 08:05 3419615                    /usr/lib64/libXi.so.6.1.0\r\n7fddf452e000-7fddf452f000 r--p 0000f000 08:05 3419615                    /usr/lib64/libXi.so.6.1.0\r\n7fddf452f000-7fddf4530000 rw-p 00010000 08:05 3419615                    /usr/lib64/libXi.so.6.1.0\r\n7fddf4530000-7fddf4532000 r--p 00000000 08:05 3419625                    /usr/lib64/libXtst.so.6.1.0\r\n7fddf4532000-7fddf4535000 r-xp 00002000 08:05 3419625                    /usr/lib64/libXtst.so.6.1.0\r\n7fddf4535000-7fddf4536000 r--p 00005000 08:05 3419625                    /usr/lib64/libXtst.so.6.1.0\r\n7fddf4536000-7fddf4537000 ---p 00006000 08:05 3419625                    /usr/lib64/libXtst.so.6.1.0\r\n7fddf4537000-7fddf4538000 r--p 00006000 08:05 3419625                    /usr/lib64/libXtst.so.6.1.0\r\n7fddf4538000-7fddf4539000 rw-p 00007000 08:05 3419625                    /usr/lib64/libXtst.so.6.1.0\r\n7fddf4539000-7fddf453b000 r--p 00000000 08:05 3419622                    /usr/lib64/libXrender.so.1.3.0\r\n7fddf453b000-7fddf4542000 r-xp 00002000 08:05 3419622                    /usr/lib64/libXrender.so.1.3.0\r\n7fddf4542000-7fddf4544000 r--p 00009000 08:05 3419622                    /usr/lib64/libXrender.so.1.3.0\r\n7fddf4544000-7fddf4545000 r--p 0000a000 08:05 3419622                    /usr/lib64/libXrender.so.1.3.0\r\n7fddf4545000-7fddf4546000 rw-p 0000b000 08:05 3419622                    /usr/lib64/libXrender.so.1.3.0\r\n7fddf4546000-7fddf454a000 r--p 00000000 08:05 3419611                    /usr/lib64/libXext.so.6.4.0\r\n7fddf454a000-7fddf4555000 r-xp 00004000 08:05 3419611                    /usr/lib64/libXext.so.6.4.0\r\n7fddf4555000-7fddf4559000 r--p 0000f000 08:05 3419611                    /usr/lib64/libXext.so.6.4.0\r\n7fddf4559000-7fddf455a000 r--p 00012000 08:05 3419611                    /usr/lib64/libXext.so.6.4.0\r\n7fddf455a000-7fddf455b000 rw-p 00013000 08:05 3419611                    /usr/lib64/libXext.so.6.4.0\r\n7fddf455b000-7fddf45d5000 r--s 01103000 08:05 5544728                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/lib/tools.jar\r\n7fddf45d5000-7fddf6225000 r-xp 00000000 08:05 5776560                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libjvmcicompiler.so\r\n7fddf6225000-7fddf63e6000 rw-p 01c50000 08:05 5776560                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libjvmcicompiler.so\r\n7fddf63e6000-7fddf65e6000 ---p 01e11000 08:05 5776560                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libjvmcicompiler.so\r\n7fddf65e6000-7fddf65ea000 rw-p 01e11000 08:05 5776560                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libjvmcicompiler.so\r\n7fddf65ea000-7fddf65eb000 ---p 00000000 00:00 0 \r\n7fddf65eb000-7fddf67ec000 rwxp 00000000 00:00 0 \r\n7fddf67ec000-7fddf67ed000 ---p 00000000 00:00 0 \r\n7fddf67ed000-7fddf69ed000 rwxp 00000000 00:00 0 \r\n7fddf69ed000-7fddf69ee000 ---p 00000000 00:00 0 \r\n7fddf69ee000-7fddf6bee000 rwxp 00000000 00:00 0 \r\n7fddf6bee000-7fddf6bef000 ---p 00000000 00:00 0 \r\n7fddf6bef000-7fddf6def000 rwxp 00000000 00:00 0 \r\n7fddf6def000-7fddf6df0000 ---p 00000000 00:00 0 \r\n7fddf6df0000-7fddf72f3000 rwxp 00000000 00:00 0 \r\n7fddf72f3000-7fddf72f4000 ---p 00000000 00:00 0 \r\n7fddf72f4000-7fddf73f4000 rwxp 00000000 00:00 0 \r\n7fddf73f4000-7fddf8000000 rw-p 00000000 00:00 0 \r\n7fddf8000000-7fddf8021000 rw-p 00000000 00:00 0 \r\n7fddf8021000-7fddfc000000 ---p 00000000 00:00 0 \r\n7fddfc002000-7fddfc003000 r--p 00000000 08:05 3419605                    /usr/lib64/libXau.so.6.0.0\r\n7fddfc003000-7fddfc004000 r-xp 00001000 08:05 3419605                    /usr/lib64/libXau.so.6.0.0\r\n7fddfc004000-7fddfc005000 r--p 00002000 08:05 3419605                    /usr/lib64/libXau.so.6.0.0\r\n7fddfc005000-7fddfc006000 r--p 00002000 08:05 3419605                    /usr/lib64/libXau.so.6.0.0\r\n7fddfc006000-7fddfc007000 rw-p 00000000 00:00 0 \r\n7fddfc007000-7fddfc00c000 r--s 002f9000 08:05 5546319                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/charsets.jar\r\n7fddfc00c000-7fddfc00e000 r--p 00000000 08:05 3411962                    /usr/lib64/libcrypt.so.1.1.0\r\n7fddfc00e000-7fddfc023000 r-xp 00002000 08:05 3411962                    /usr/lib64/libcrypt.so.1.1.0\r\n7fddfc023000-7fddfc03d000 r--p 00017000 08:05 3411962                    /usr/lib64/libcrypt.so.1.1.0\r\n7fddfc03d000-7fddfc03e000 ---p 00031000 08:05 3411962                    /usr/lib64/libcrypt.so.1.1.0\r\n7fddfc03e000-7fddfc03f000 r--p 00031000 08:05 3411962                    /usr/lib64/libcrypt.so.1.1.0\r\n7fddfc03f000-7fddfc048000 rw-p 00000000 00:00 0 \r\n7fddfc048000-7fddfc04b000 r--p 00000000 08:05 3420462                    /usr/lib64/libz.so.1.2.11\r\n7fddfc04b000-7fddfc059000 r-xp 00003000 08:05 3420462                    /usr/lib64/libz.so.1.2.11\r\n7fddfc059000-7fddfc060000 r--p 00011000 08:05 3420462                    /usr/lib64/libz.so.1.2.11\r\n7fddfc060000-7fddfc061000 r--p 00017000 08:05 3420462                    /usr/lib64/libz.so.1.2.11\r\n7fddfc061000-7fddfc062000 rw-p 00000000 00:00 0 \r\n7fddfc065000-7fddfc069000 r--s 00087000 08:05 5546311                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/jvmci/jvmci-hotspot.jar\r\n7fddfc069000-7fddfc07c000 r--s 00346000 08:05 5546107                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/resources.jar\r\n7fddfc07c000-7fddfc082000 r--s 0005e000 08:05 5543433                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/lib/jconsole.jar\r\n7fddfc082000-7fddfc089000 r--s 00064000 08:05 929011                     /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/boot/graal-sdk.jar\r\n7fddfc089000-7fddfc08e000 r--s 000e7000 08:05 929012                     /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/boot/graal-sdk.src.zip\r\n7fddfc08e000-7fddfd000000 rw-p 00000000 00:00 0 \r\n7fddfd000000-7fddfd270000 rwxp 00000000 00:00 0 \r\n7fddfd270000-7fde0c000000 ---p 00000000 00:00 0 \r\n7fde0c000000-7fde0c2d7000 rw-p 00000000 00:00 0 \r\n7fde0c2d7000-7fde10000000 ---p 00000000 00:00 0 \r\n7fde10000000-7fde10004000 r--s 0004d000 08:05 5546313                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/jvmci/jvmci-api.jar\r\n7fde10004000-7fde10118000 rw-p 00000000 00:00 0 \r\n7fde10118000-7fde102e7000 r--s 03c3b000 08:05 5546318                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/rt.jar\r\n7fde102e7000-7fde113dc000 rw-p 00000000 00:00 0 \r\n7fde113dc000-7fde113dd000 ---p 00000000 00:00 0 \r\n7fde113dd000-7fde114dd000 rwxp 00000000 00:00 0 \r\n7fde114dd000-7fde114de000 ---p 00000000 00:00 0 \r\n7fde114de000-7fde115de000 rwxp 00000000 00:00 0 \r\n7fde115de000-7fde115df000 ---p 00000000 00:00 0 \r\n7fde115df000-7fde116df000 rwxp 00000000 00:00 0 \r\n7fde116df000-7fde116e0000 ---p 00000000 00:00 0 \r\n7fde116e0000-7fde117e0000 rwxp 00000000 00:00 0 \r\n7fde117e0000-7fde117e1000 ---p 00000000 00:00 0 \r\n7fde117e1000-7fde118e1000 rwxp 00000000 00:00 0 \r\n7fde118e1000-7fde118e2000 ---p 00000000 00:00 0 \r\n7fde118e2000-7fde119e2000 rwxp 00000000 00:00 0 \r\n7fde119e2000-7fde119e3000 ---p 00000000 00:00 0 \r\n7fde119e3000-7fde11ae3000 rwxp 00000000 00:00 0 \r\n7fde11ae3000-7fde11ae4000 ---p 00000000 00:00 0 \r\n7fde11ae4000-7fde11be4000 rwxp 00000000 00:00 0 \r\n7fde11be4000-7fde11be7000 rw-p 00000000 00:00 0 \r\n7fde11be7000-7fde12104000 ---p 00000000 00:00 0 \r\n7fde12104000-7fde12107000 rw-p 00000000 00:00 0 \r\n7fde12107000-7fde12623000 ---p 00000000 00:00 0 \r\n7fde12623000-7fde12627000 rw-p 00000000 00:00 0 \r\n7fde12627000-7fde128b3000 ---p 00000000 00:00 0 \r\n7fde128b3000-7fde128be000 rw-p 00000000 00:00 0 \r\n7fde128be000-7fde12c74000 ---p 00000000 00:00 0 \r\n7fde12c74000-7fde12c8f000 r-xp 00000000 08:05 5776584                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libzip.so\r\n7fde12c8f000-7fde12e8f000 ---p 0001b000 08:05 5776584                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libzip.so\r\n7fde12e8f000-7fde12e90000 r--p 0001b000 08:05 5776584                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libzip.so\r\n7fde12e90000-7fde12e91000 rw-p 0001c000 08:05 5776584                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libzip.so\r\n7fde12e91000-7fde13696000 r--s 00000000 08:05 5383299                    /var/lib/sss/mc/passwd\r\n7fde13696000-7fde136c0000 r-xp 00000000 08:05 5776595                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libjava.so\r\n7fde136c0000-7fde138c0000 ---p 0002a000 08:05 5776595                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libjava.so\r\n7fde138c0000-7fde138c1000 r--p 0002a000 08:05 5776595                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libjava.so\r\n7fde138c1000-7fde138c3000 rw-p 0002b000 08:05 5776595                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libjava.so\r\n7fde138c3000-7fde138d2000 r-xp 00000000 08:05 5776585                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libverify.so\r\n7fde138d2000-7fde13ad1000 ---p 0000f000 08:05 5776585                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libverify.so\r\n7fde13ad1000-7fde13ad3000 r--p 0000e000 08:05 5776585                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libverify.so\r\n7fde13ad3000-7fde13ad4000 rw-p 00010000 08:05 5776585                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/libverify.so\r\n7fde13ad4000-7fde13ad6000 r--p 00000000 08:05 3414533                    /usr/lib64/librt-2.28.so\r\n7fde13ad6000-7fde13ada000 r-xp 00002000 08:05 3414533                    /usr/lib64/librt-2.28.so\r\n7fde13ada000-7fde13adc000 r--p 00006000 08:05 3414533                    /usr/lib64/librt-2.28.so\r\n7fde13adc000-7fde13add000 r--p 00007000 08:05 3414533                    /usr/lib64/librt-2.28.so\r\n7fde13add000-7fde13ade000 rw-p 00008000 08:05 3414533                    /usr/lib64/librt-2.28.so\r\n7fde13ade000-7fde13adf000 ---p 00000000 00:00 0 \r\n7fde13adf000-7fde13ae2000 ---p 00000000 00:00 0 \r\n7fde13ae2000-7fde13bdf000 rwxp 00000000 00:00 0 \r\n7fde13bdf000-7fde13bec000 r--p 00000000 08:05 3414507                    /usr/lib64/libm-2.28.so\r\n7fde13bec000-7fde13c8c000 r-xp 0000d000 08:05 3414507                    /usr/lib64/libm-2.28.so\r\n7fde13c8c000-7fde13d61000 r--p 000ad000 08:05 3414507                    /usr/lib64/libm-2.28.so\r\n7fde13d61000-7fde13d62000 r--p 00181000 08:05 3414507                    /usr/lib64/libm-2.28.so\r\n7fde13d62000-7fde13d63000 rw-p 00182000 08:05 3414507                    /usr/lib64/libm-2.28.so\r\n7fde13d63000-7fde14ac3000 r-xp 00000000 08:05 5776565                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/server/libjvm.so\r\n7fde14ac3000-7fde14cc2000 ---p 00d60000 08:05 5776565                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/server/libjvm.so\r\n7fde14cc2000-7fde14d8a000 rw-p 00d5f000 08:05 5776565                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/amd64/server/libjvm.so\r\n7fde14d8a000-7fde14dbe000 rw-p 00000000 00:00 0 \r\n7fde14dbe000-7fde14de0000 r--p 00000000 08:05 3414501                    /usr/lib64/libc-2.28.so\r\n7fde14de0000-7fde14f2d000 r-xp 00022000 08:05 3414501                    /usr/lib64/libc-2.28.so\r\n7fde14f2d000-7fde14f79000 r--p 0016f000 08:05 3414501                    /usr/lib64/libc-2.28.so\r\n7fde14f79000-7fde14f7a000 ---p 001bb000 08:05 3414501                    /usr/lib64/libc-2.28.so\r\n7fde14f7a000-7fde14f7e000 r--p 001bb000 08:05 3414501                    /usr/lib64/libc-2.28.so\r\n7fde14f7e000-7fde14f80000 rw-p 001bf000 08:05 3414501                    /usr/lib64/libc-2.28.so\r\n7fde14f80000-7fde14f84000 rw-p 00000000 00:00 0 \r\n7fde14f84000-7fde14f85000 r--p 00000000 08:05 3414503                    /usr/lib64/libdl-2.28.so\r\n7fde14f85000-7fde14f87000 r-xp 00001000 08:05 3414503                    /usr/lib64/libdl-2.28.so\r\n7fde14f87000-7fde14f88000 r--p 00003000 08:05 3414503                    /usr/lib64/libdl-2.28.so\r\n7fde14f88000-7fde14f89000 r--p 00003000 08:05 3414503                    /usr/lib64/libdl-2.28.so\r\n7fde14f89000-7fde14f8a000 rw-p 00004000 08:05 3414503                    /usr/lib64/libdl-2.28.so\r\n7fde14f8a000-7fde14fa0000 r-xp 00000000 08:05 5544634                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/lib/amd64/jli/libjli.so\r\n7fde14fa0000-7fde1519f000 ---p 00016000 08:05 5544634                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/lib/amd64/jli/libjli.so\r\n7fde1519f000-7fde151a0000 r--p 00015000 08:05 5544634                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/lib/amd64/jli/libjli.so\r\n7fde151a0000-7fde151a1000 rw-p 00016000 08:05 5544634                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/lib/amd64/jli/libjli.so\r\n7fde151a1000-7fde151a7000 r--p 00000000 08:05 3414528                    /usr/lib64/libpthread-2.28.so\r\n7fde151a7000-7fde151b7000 r-xp 00006000 08:05 3414528                    /usr/lib64/libpthread-2.28.so\r\n7fde151b7000-7fde151bd000 r--p 00016000 08:05 3414528                    /usr/lib64/libpthread-2.28.so\r\n7fde151bd000-7fde151be000 r--p 0001b000 08:05 3414528                    /usr/lib64/libpthread-2.28.so\r\n7fde151be000-7fde151bf000 rw-p 0001c000 08:05 3414528                    /usr/lib64/libpthread-2.28.so\r\n7fde151bf000-7fde151c5000 rw-p 00000000 00:00 0 \r\n7fde151c6000-7fde151c7000 r--s 00006000 08:05 5776470                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/truffle/locator.jar\r\n7fde151c7000-7fde151c9000 r--s 0000c000 08:05 929013                     /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/boot/graaljs-scriptengine.jar\r\n7fde151c9000-7fde151ca000 r--s 00005000 08:05 5546307                    /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/jre/lib/jvmci-services.jar\r\n7fde151ca000-7fde151d2000 rw-s 00000000 00:2b 272709                     /tmp/hsperfdata_wololock/10326\r\n7fde151d2000-7fde151d4000 r--p 00000000 08:05 3412404                    /usr/lib64/libnss_sss.so.2\r\n7fde151d4000-7fde151da000 r-xp 00002000 08:05 3412404                    /usr/lib64/libnss_sss.so.2\r\n7fde151da000-7fde151dc000 r--p 00008000 08:05 3412404                    /usr/lib64/libnss_sss.so.2\r\n7fde151dc000-7fde151dd000 r--p 00009000 08:05 3412404                    /usr/lib64/libnss_sss.so.2\r\n7fde151dd000-7fde151de000 rw-p 0000a000 08:05 3412404                    /usr/lib64/libnss_sss.so.2\r\n7fde151de000-7fde151df000 rw-p 00000000 00:00 0 \r\n7fde151df000-7fde151e0000 r--p 00000000 08:05 3414491                    /usr/lib64/ld-2.28.so\r\n7fde151e0000-7fde15200000 r-xp 00001000 08:05 3414491                    /usr/lib64/ld-2.28.so\r\n7fde15200000-7fde15208000 r--p 00021000 08:05 3414491                    /usr/lib64/ld-2.28.so\r\n7fde15208000-7fde15209000 r--p 00000000 00:00 0 \r\n7fde15209000-7fde1520a000 r--p 00029000 08:05 3414491                    /usr/lib64/ld-2.28.so\r\n7fde1520a000-7fde1520b000 rw-p 0002a000 08:05 3414491                    /usr/lib64/ld-2.28.so\r\n7fde1520b000-7fde1520c000 rw-p 00000000 00:00 0 \r\n7ffcafd55000-7ffcafd74000 rwxp 00000000 00:00 0                          [stack]\r\n7ffcafd74000-7ffcafd76000 rw-p 00000000 00:00 0 \r\n7ffcafdb5000-7ffcafdb8000 r--p 00000000 00:00 0                          [vvar]\r\n7ffcafdb8000-7ffcafdb9000 r-xp 00000000 00:00 0                          [vdso]\r\nffffffffff600000-ffffffffff601000 r-xp 00000000 00:00 0                  [vsyscall]\r\n\r\nVM Arguments:\r\njvm_args: -Dapplication.home=/home/wololock/.sdkman/candidates/java/graalvm-19.0.0 -Xms8m -Djconsole.showOutputViewer \r\njava_command: sun.tools.jconsole.JConsole\r\njava_class_path (initial): /home/wololock/.sdkman/candidates/java/graalvm-19.0.0/lib/jconsole.jar:/home/wololock/.sdkman/candidates/java/graalvm-19.0.0/lib/tools.jar:/home/wololock/.sdkman/candidates/java/graalvm-19.0.0/classes\r\nLauncher Type: SUN_STANDARD\r\n\r\nEnvironment Variables:\r\nJAVA_HOME=/home/wololock/.sdkman/candidates/java/graalvm-19.0.0\r\nPATH=/home/wololock/.sdkman/candidates/visualvm/current/bin:/home/wololock/.sdkman/candidates/maven/current/bin:/home/wololock/.sdkman/candidates/lazybones/current/bin:/home/wololock/.sdkman/candidates/java/graalvm-19.0.0/bin:/home/wololock/.sdkman/candidates/groovy/current/bin:/home/wololock/.sdkman/candidates/gradle/current/bin:/usr/local/bin:/usr/bin:/bin:/home/wololock/bin:/usr/local/sbin:/usr/sbin\r\nSHELL=/bin/zsh\r\nDISPLAY=:0.0\r\n\r\nSignal Handlers:\r\nSIGSEGV: [libjvm.so+0xb315b0], sa_mask[0]=11111111011111111101111111111110, sa_flags=SA_RESTART|SA_SIGINFO\r\nSIGBUS: [libjvm.so+0xb315b0], sa_mask[0]=11111111011111111101111111111110, sa_flags=SA_RESTART|SA_SIGINFO\r\nSIGFPE: [libjvm.so+0x96d440], sa_mask[0]=11111111011111111101111111111110, sa_flags=SA_RESTART|SA_SIGINFO\r\nSIGPIPE: [libjvm.so+0x96d440], sa_mask[0]=11111111011111111101111111111110, sa_flags=SA_RESTART|SA_SIGINFO\r\nSIGXFSZ: [libjvm.so+0x96d440], sa_mask[0]=11111111011111111101111111111110, sa_flags=SA_RESTART|SA_SIGINFO\r\nSIGILL: [libjvm.so+0x96d440], sa_mask[0]=11111111011111111101111111111110, sa_flags=SA_RESTART|SA_SIGINFO\r\nSIGUSR1: SIG_DFL, sa_mask[0]=00000000000000000000000000000000, sa_flags=none\r\nSIGUSR2: [libjvm.so+0x96d310], sa_mask[0]=00000000000000000000000000000000, sa_flags=SA_RESTART|SA_SIGINFO\r\nSIGHUP: [libjvm.so+0x96d930], sa_mask[0]=11111111011111111101111111111110, sa_flags=SA_RESTART|SA_SIGINFO\r\nSIGINT: [libjvm.so+0x96d930], sa_mask[0]=11111111011111111101111111111110, sa_flags=SA_RESTART|SA_SIGINFO\r\nSIGTERM: [libjvm.so+0x96d930], sa_mask[0]=11111111011111111101111111111110, sa_flags=SA_RESTART|SA_SIGINFO\r\nSIGQUIT: [libjvm.so+0x96d930], sa_mask[0]=11111111011111111101111111111110, sa_flags=SA_RESTART|SA_SIGINFO\r\n\r\n\r\n---------------  S Y S T E M  ---------------\r\n\r\nOS:Fedora release 29 (Twenty Nine)\r\n\r\nuname:Linux 5.0.13-200.fc29.x86_64 #1 SMP Mon May 6 00:49:54 UTC 2019 x86_64\r\nlibc:glibc 2.28 NPTL 2.28 \r\nrlimit: STACK 8192k, CORE infinity, NPROC 62796, NOFILE 4096, AS infinity\r\nload average:0,45 0,74 0,68\r\n\r\n/proc/meminfo:\r\nMemTotal:       16105488 kB\r\nMemFree:         9831160 kB\r\nMemAvailable:   12339768 kB\r\nBuffers:          411596 kB\r\nCached:          2425544 kB\r\nSwapCached:            0 kB\r\nActive:          3556056 kB\r\nInactive:        1901040 kB\r\nActive(anon):    2621764 kB\r\nInactive(anon):   236080 kB\r\nActive(file):     934292 kB\r\nInactive(file):  1664960 kB\r\nUnevictable:      250656 kB\r\nMlocked:            8276 kB\r\nSwapTotal:       8190972 kB\r\nSwapFree:        8190972 kB\r\nDirty:               340 kB\r\nWriteback:             0 kB\r\nAnonPages:       2870728 kB\r\nMapped:           940548 kB\r\nShmem:            491440 kB\r\nKReclaimable:     247460 kB\r\nSlab:             360880 kB\r\nSReclaimable:     247460 kB\r\nSUnreclaim:       113420 kB\r\nKernelStack:       12636 kB\r\nPageTables:        41120 kB\r\nNFS_Unstable:          0 kB\r\nBounce:                0 kB\r\nWritebackTmp:          0 kB\r\nCommitLimit:    16243716 kB\r\nCommitted_AS:   10455256 kB\r\nVmallocTotal:   34359738367 kB\r\nVmallocUsed:           0 kB\r\nVmallocChunk:          0 kB\r\nPercpu:             4000 kB\r\nHardwareCorrupted:     0 kB\r\nAnonHugePages:         0 kB\r\nShmemHugePages:        0 kB\r\nShmemPmdMapped:        0 kB\r\nCmaTotal:              0 kB\r\nCmaFree:               0 kB\r\nHugePages_Total:       0\r\nHugePages_Free:        0\r\nHugePages_Rsvd:        0\r\nHugePages_Surp:        0\r\nHugepagesize:       2048 kB\r\nHugetlb:               0 kB\r\nDirectMap4k:      305680 kB\r\nDirectMap2M:     8810496 kB\r\nDirectMap1G:     7340032 kB\r\n\r\ncontainer (cgroup) information:\r\ncontainer_type: cgroupv1\r\ncpu_cpuset_cpus: 0-7\r\ncpu_memory_nodes: 0\r\nactive_processor_count: 8\r\ncpu_quota: -1\r\ncpu_period: 100000\r\ncpu_shares: -1\r\nmemory_limit_in_bytes: -1\r\nmemory_and_swap_limit_in_bytes: -1\r\nmemory_soft_limit_in_bytes: -1\r\nmemory_usage_in_bytes: 4312530944\r\nmemory_max_usage_in_bytes: 5241081856\r\n\r\n\r\nCPU:total 8 (initial active 8) (4 cores per cpu, 2 threads per core) family 6 model 60 stepping 3, cmov, cx8, fxsr, mmx, sse, sse2, sse3, ssse3, sse4.1, sse4.2, popcnt, avx, avx2, aes, clmul, erms, lzcnt, ht, tsc, tscinvbit, bmi1, bmi2\r\n\r\n/proc/cpuinfo:\r\nprocessor\t: 0\r\nvendor_id\t: GenuineIntel\r\ncpu family\t: 6\r\nmodel\t\t: 60\r\nmodel name\t: Intel(R) Core(TM) i7-4900MQ CPU @ 2.80GHz\r\nstepping\t: 3\r\nmicrocode\t: 0x25\r\ncpu MHz\t\t: 3186.743\r\ncache size\t: 8192 KB\r\nphysical id\t: 0\r\nsiblings\t: 8\r\ncore id\t\t: 0\r\ncpu cores\t: 4\r\napicid\t\t: 0\r\ninitial apicid\t: 0\r\nfpu\t\t: yes\r\nfpu_exception\t: yes\r\ncpuid level\t: 13\r\nwp\t\t: yes\r\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid xsaveopt dtherm ida arat pln pts flush_l1d\r\nbugs\t\t: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf\r\nbogomips\t: 5587.26\r\nclflush size\t: 64\r\ncache_alignment\t: 64\r\naddress sizes\t: 39 bits physical, 48 bits virtual\r\npower management:\r\n\r\nprocessor\t: 1\r\nvendor_id\t: GenuineIntel\r\ncpu family\t: 6\r\nmodel\t\t: 60\r\nmodel name\t: Intel(R) Core(TM) i7-4900MQ CPU @ 2.80GHz\r\nstepping\t: 3\r\nmicrocode\t: 0x25\r\ncpu MHz\t\t: 2801.729\r\ncache size\t: 8192 KB\r\nphysical id\t: 0\r\nsiblings\t: 8\r\ncore id\t\t: 0\r\ncpu cores\t: 4\r\napicid\t\t: 1\r\ninitial apicid\t: 1\r\nfpu\t\t: yes\r\nfpu_exception\t: yes\r\ncpuid level\t: 13\r\nwp\t\t: yes\r\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid xsaveopt dtherm ida arat pln pts flush_l1d\r\nbugs\t\t: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf\r\nbogomips\t: 5587.26\r\nclflush size\t: 64\r\ncache_alignment\t: 64\r\naddress sizes\t: 39 bits physical, 48 bits virtual\r\npower management:\r\n\r\nprocessor\t: 2\r\nvendor_id\t: GenuineIntel\r\ncpu family\t: 6\r\nmodel\t\t: 60\r\nmodel name\t: Intel(R) Core(TM) i7-4900MQ CPU @ 2.80GHz\r\nstepping\t: 3\r\nmicrocode\t: 0x25\r\ncpu MHz\t\t: 3251.962\r\ncache size\t: 8192 KB\r\nphysical id\t: 0\r\nsiblings\t: 8\r\ncore id\t\t: 1\r\ncpu cores\t: 4\r\napicid\t\t: 2\r\ninitial apicid\t: 2\r\nfpu\t\t: yes\r\nfpu_exception\t: yes\r\ncpuid level\t: 13\r\nwp\t\t: yes\r\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid xsaveopt dtherm ida arat pln pts flush_l1d\r\nbugs\t\t: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf\r\nbogomips\t: 5587.26\r\nclflush size\t: 64\r\ncache_alignment\t: 64\r\naddress sizes\t: 39 bits physical, 48 bits virtual\r\npower management:\r\n\r\nprocessor\t: 3\r\nvendor_id\t: GenuineIntel\r\ncpu family\t: 6\r\nmodel\t\t: 60\r\nmodel name\t: Intel(R) Core(TM) i7-4900MQ CPU @ 2.80GHz\r\nstepping\t: 3\r\nmicrocode\t: 0x25\r\ncpu MHz\t\t: 3576.334\r\ncache size\t: 8192 KB\r\nphysical id\t: 0\r\nsiblings\t: 8\r\ncore id\t\t: 1\r\ncpu cores\t: 4\r\napicid\t\t: 3\r\ninitial apicid\t: 3\r\nfpu\t\t: yes\r\nfpu_exception\t: yes\r\ncpuid level\t: 13\r\nwp\t\t: yes\r\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid xsaveopt dtherm ida arat pln pts flush_l1d\r\nbugs\t\t: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf\r\nbogomips\t: 5587.26\r\nclflush size\t: 64\r\ncache_alignment\t: 64\r\naddress sizes\t: 39 bits physical, 48 bits virtual\r\npower management:\r\n\r\nprocessor\t: 4\r\nvendor_id\t: GenuineIntel\r\ncpu family\t: 6\r\nmodel\t\t: 60\r\nmodel name\t: Intel(R) Core(TM) i7-4900MQ CPU @ 2.80GHz\r\nstepping\t: 3\r\nmicrocode\t: 0x25\r\ncpu MHz\t\t: 2810.380\r\ncache size\t: 8192 KB\r\nphysical id\t: 0\r\nsiblings\t: 8\r\ncore id\t\t: 2\r\ncpu cores\t: 4\r\napicid\t\t: 4\r\ninitial apicid\t: 4\r\nfpu\t\t: yes\r\nfpu_exception\t: yes\r\ncpuid level\t: 13\r\nwp\t\t: yes\r\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid xsaveopt dtherm ida arat pln pts flush_l1d\r\nbugs\t\t: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf\r\nbogomips\t: 5587.26\r\nclflush size\t: 64\r\ncache_alignment\t: 64\r\naddress sizes\t: 39 bits physical, 48 bits virtual\r\npower management:\r\n\r\nprocessor\t: 5\r\nvendor_id\t: GenuineIntel\r\ncpu family\t: 6\r\nmodel\t\t: 60\r\nmodel name\t: Intel(R) Core(TM) i7-4900MQ CPU @ 2.80GHz\r\nstepping\t: 3\r\nmicrocode\t: 0x25\r\ncpu MHz\t\t: 3610.693\r\ncache size\t: 8192 KB\r\nphysical id\t: 0\r\nsiblings\t: 8\r\ncore id\t\t: 2\r\ncpu cores\t: 4\r\napicid\t\t: 5\r\ninitial apicid\t: 5\r\nfpu\t\t: yes\r\nfpu_exception\t: yes\r\ncpuid level\t: 13\r\nwp\t\t: yes\r\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid xsaveopt dtherm ida arat pln pts flush_l1d\r\nbugs\t\t: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf\r\nbogomips\t: 5587.26\r\nclflush size\t: 64\r\ncache_alignment\t: 64\r\naddress sizes\t: 39 bits physical, 48 bits virtual\r\npower management:\r\n\r\nprocessor\t: 6\r\nvendor_id\t: GenuineIntel\r\ncpu family\t: 6\r\nmodel\t\t: 60\r\nmodel name\t: Intel(R) Core(TM) i7-4900MQ CPU @ 2.80GHz\r\nstepping\t: 3\r\nmicrocode\t: 0x25\r\ncpu MHz\t\t: 3679.158\r\ncache size\t: 8192 KB\r\nphysical id\t: 0\r\nsiblings\t: 8\r\ncore id\t\t: 3\r\ncpu cores\t: 4\r\napicid\t\t: 6\r\ninitial apicid\t: 6\r\nfpu\t\t: yes\r\nfpu_exception\t: yes\r\ncpuid level\t: 13\r\nwp\t\t: yes\r\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid xsaveopt dtherm ida arat pln pts flush_l1d\r\nbugs\t\t: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf\r\nbogomips\t: 5587.26\r\nclflush size\t: 64\r\ncache_alignment\t: 64\r\naddress sizes\t: 39 bits physical, 48 bits virtual\r\npower management:\r\n\r\nprocessor\t: 7\r\nvendor_id\t: GenuineIntel\r\ncpu family\t: 6\r\nmodel\t\t: 60\r\nmodel name\t: Intel(R) Core(TM) i7-4900MQ CPU @ 2.80GHz\r\nstepping\t: 3\r\nmicrocode\t: 0x25\r\ncpu MHz\t\t: 2847.291\r\ncache size\t: 8192 KB\r\nphysical id\t: 0\r\nsiblings\t: 8\r\ncore id\t\t: 3\r\ncpu cores\t: 4\r\napicid\t\t: 7\r\ninitial apicid\t: 7\r\nfpu\t\t: yes\r\nfpu_exception\t: yes\r\ncpuid level\t: 13\r\nwp\t\t: yes\r\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid xsaveopt dtherm ida arat pln pts flush_l1d\r\nbugs\t\t: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf\r\nbogomips\t: 5587.26\r\nclflush size\t: 64\r\ncache_alignment\t: 64\r\naddress sizes\t: 39 bits physical, 48 bits virtual\r\npower management:\r\n\r\n\r\n\r\nMemory: 4k page, physical 16105488k(9825160k free), swap 8190972k(8190972k free)\r\n\r\nvm_info: OpenJDK GraalVM CE 19.0.0 (25.212-b03-jvmci-19-b01) for linux-amd64 JRE (8u212), built on Apr 30 2019 15:34:31 by \"buildslave\" with gcc 7.3.0\r\n\r\ntime: Mon May 13 08:38:18 2019\r\ntimezone: CEST\r\nelapsed time: 0 seconds (0d 0h 0m 0s)\r\n```\r\n\r\nI'm guessing this crash may be caused by an exception thrown in the `AWT-EventQueue-0` thread. I also tried running `jvisualvm`, but it only showed the splash screen which has hidden after the two seconds and nothing else shown up.  The process was still running, the memory consumption was increasing, but JVisualVM never run. I couldn't spot any error in the console log. However, when I run `jvisualvm --help` I see an exception thrown in the middle of the help output.\r\n\r\n```\r\n$ jvisualvm --help\r\nUsage: /home/wololock/.sdkman/candidates/java/1.0.0-rc-13-grl/lib/visualvm/platform/lib/nbexec {options} arguments\r\n\r\nGeneral options:\r\n  --help                show this help \r\n  --jdkhome <path>      path to Java(TM) 2 SDK, Standard Edition\r\n  -J<jvm_option>        pass <jvm_option> to JVM\r\n\r\n  --cp:p <classpath>    prepend <classpath> to classpath\r\n  --cp:a <classpath>    append <classpath> to classpath\r\nException in thread \"AWT-EventQueue-0\" java.lang.NullPointerException\r\n\tat sun.awt.FontConfiguration.getVersion(FontConfiguration.java:1264)\r\n\tat sun.awt.FontConfiguration.readFontConfigFile(FontConfiguration.java:219)\r\n\tat sun.awt.FontConfiguration.init(FontConfiguration.java:107)\r\n\tat sun.awt.X11FontManager.createFontConfiguration(X11FontManager.java:774)\r\n\tat sun.font.SunFontManager$2.run(SunFontManager.java:431)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat sun.font.SunFontManager.<init>(SunFontManager.java:376)\r\n\tat sun.awt.FcFontManager.<init>(FcFontManager.java:35)\r\n\tat sun.awt.X11FontManager.<init>(X11FontManager.java:57)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat java.lang.Class.newInstance(Class.java:442)\r\n\tat sun.font.FontManagerFactory$1.run(FontManagerFactory.java:83)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat sun.font.FontManagerFactory.getInstance(FontManagerFactory.java:74)\r\n\tat sun.font.SunFontManager.getInstance(SunFontManager.java:250)\r\n\tat sun.font.FontDesignMetrics.getMetrics(FontDesignMetrics.java:264)\r\n\tat sun.swing.SwingUtilities2.getFontMetrics(SwingUtilities2.java:1113)\r\n\tat javax.swing.JComponent.getFontMetrics(JComponent.java:1626)\r\n\tat org.netbeans.core.startup.Splash$SplashPainter.init(Splash.java:358)\r\n\tat org.netbeans.core.startup.Splash$SplashPainter$1.run(Splash.java:400)\r\n\tat java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)\r\n\tat java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)\r\n\tat java.awt.EventQueue.access$500(EventQueue.java:97)\r\n\tat java.awt.EventQueue$3.run(EventQueue.java:709)\r\n\tat java.awt.EventQueue$3.run(EventQueue.java:703)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:74)\r\n\tat java.awt.EventQueue.dispatchEvent(EventQueue.java:728)\r\n\tat java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:205)\r\n\tat java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)\r\n\tat java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)\r\n\tat java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)\r\n\tat java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)\r\n\tat java.awt.EventDispatchThread.run(EventDispatchThread.java:82)\r\nModule reload options:\r\n  --reload /path/to/module.jar  install or reinstall a module JAR file\r\n\r\nAdditional module options:\r\n  --openfile <arg>          open file specified by <arg>, file can be Application snapshot, NetBeans Profiler snapshot or HPROF heap dump.\r\n  --openid <arg>            open application with id <arg>\r\n  --openpid <arg>           open application with process id <arg>\r\n  --openjmx <arg>           open application specified by JMX connection (host:port)\r\n  --modules                 \r\n  --refresh                 Refresh all catalogs\r\n  --list                    Prints the list of all modules, their versions and enablement status\r\n  --install <arg1>...<argN> Installs provided JAR files as modules\r\n  --disable <arg1>...<argN> Disable modules for specified codebase names\r\n  --enable <arg1>...<argN>  Enable modules for specified codebase names\r\n  --update <arg1>...<argN>  Updates all or specified modules\r\n  --update-all              Updates all modules\r\n  --extra-uc <arg>          Add a extra Update Center (URL)\r\n\r\nCore options:\r\n  --laf <LaF classname> use given LookAndFeel class instead of the default\r\n  --fontsize <size>     set the base font size of the user interface, in points\r\n  --locale <language[:country[:variant]]> use specified locale\r\n  --userdir <path>      use specified directory to store user settings\r\n  --cachedir <path>     use specified directory to store user cache, must be different from userdir\r\n  --nosplash            do not show the splash screen\r\n```\r\n\r\nI checked other OpenJDK 1.8.0_212 distributions - `jconsole` works fine there. ", "url": "https://github.com/oracle/graal/issues/1269", "user": "wololock", "labels": ["bug"], "created": "2019-05-13 06:53:07", "closed": "2019-05-13 13:34:18", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Cannot launch igv 19.0.0 on macOS", "body": "```bash\r\nJAVA_HOME=~/bin/graalvm-ee-19.0.0/Contents/Home bin/idealgraphvisualizer\r\njava version \"1.8.0_212\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_212-b31)\r\nJava HotSpot(TM) GraalVM EE 19.0.0 (build 25.212-b31-jvmci-19-b01, mixed mode)\r\nbin/idealgraphvisualizer: line 60: [: missing `]'\r\nMatching Java Virtual Machines (2):\r\n    11.0.1, x86_64:    \"Java SE 11.0.1\"    /Library/Java/JavaVirtualMachines/jdk-11.0.1.jdk/Contents/Home\r\n    1.8.0_191, x86_64:    \"Java SE 8\"    /Library/Java/JavaVirtualMachines/jdk1.8.0_191.jdk/Contents/Home\r\n\r\nCannot find java. Please install java 8, 9, or 10.\r\n[1]    95834 exit 2     JAVA_HOME=~/bin/graalvm-ee-19.0.0/Contents/Home bin/idealgraphvisualizer\r\n```\r\n\r\nIt seems that `$jdkhome` is declared too late in the launcher file.", "url": "https://github.com/oracle/graal/issues/1254", "user": "fniephaus", "labels": ["bug"], "created": "2019-05-10 07:53:15", "closed": "2019-08-17 11:21:30", "commits": {}, "ttf": 99.00027777777778, "commitsDetails": []}, {"title": "[native-image] ClassCastException: java.lang.Object cannot be cast to com.oracle.truffle.polyglot.PolyglotLanguageContext", "body": "I'm trying to use js' arrow functions in some js code executed using truffle js from an native executable and I get \r\n\r\n    ClassCastException: java.lang.Object cannot be cast to com.oracle.truffle.polyglot.PolyglotLanguageContext\r\n\r\nthe goal is to use arrow functions to implement a functional interface, the js code is:\r\n\r\n```js\r\nfrom('timer:js?period=1s')\r\n    .setBody()\r\n        .constant('test')\r\n    .setHeader('test')\r\n        .constant('test')\r\n    .process(e => e.getMessage().setBody('test'))\r\n    .to('log:js?showAll=false&multiline=false')\r\n```\r\n\r\nan example project can be found here: https://github.com/lburgazzoli/camel-routes-loader-graalvm", "url": "https://github.com/oracle/graal/issues/1247", "user": "lburgazzoli", "labels": ["bug", "truffle"], "created": "2019-05-08 01:08:20", "closed": "2019-07-25 08:30:12", "commits": {}, "ttf": 78.00027777777778, "commitsDetails": []}, {"title": "VS Code Debug. Debug Console autocomplete errors.", "body": "### Issue\r\nI'm using VS Code to debug JavaScript. In debug, when i'm trying to type something in _Debug Console_\r\ni'm getting error\r\n\r\n```\r\nError processing \"completions\": TypeError: Cannot read property 'length' of undefined\r\n    at NodeDebugAdapter.getFlatAndUniqueCompletionItems (/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.node-debug2/node_modules/vscode-chrome-debug-core/out/src/chrome/chromeDebugAdapter.js:3202:32)\r\n    at NodeDebugAdapter.<anonymous> (/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.node-debug2/node_modules/vscode-chrome-debug-core/out/src/chrome/chromeDebugAdapter.js:3193:27)\r\n    at Generator.next (<anonymous>)\r\n    at fulfilled (/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.node-debug2/node_modules/vscode-chrome-debug-core/out/src/chrome/chromeDebugAdapter.js:11:26)\r\n```\r\n\r\nSee full video https://www.youtube.com/watch?v=VINnHJqmC60&feature=youtu.be\r\n\r\nWhen i go by url chrome-devtools://devtools/bundled/js_app.html?ws=127.0.0.1:7992/3ad2426f-e6a244b0f3a in Chrome, it works as expected. I see autocomplete, no errors, everything works perfect.\r\n\r\nIn Intellij IDEA/WebStorm i don't see errors but autocomplete not working in debug console.\r\n\r\nMy setup:\r\n_OS:_ macOS 10.14\r\n_Editor:_ VS Code Version 1.33.1 (1.33.1) (autocomplete not working, errors)\r\n_Editor:_ Chrome(DevTools) 74 (autocomplete works, no errors)\r\n_Editor:_ Intellij IDEA 2019.1 (autocomplete not working, no errors)\r\n_JVM:_ GraalVM RC16", "url": "https://github.com/oracle/graal/issues/1227", "user": "smokeelow", "labels": ["bug"], "created": "2019-05-02 15:26:49", "closed": "2019-10-24 07:00:45", "commits": {}, "ttf": 174.00027777777777, "commitsDetails": []}, {"title": "[native-image] unsafe accessed field from Truffle", "body": "After successfully building graalvm-1.0.0-rc15 from sources, I'm running into a bug when running the following clojure code\r\n\r\n```Clojure\r\n(import '[org.graalvm.polyglot Context Source])\r\n(def ^Context polyglot \r\n  (doto (Context/newBuilder (into-array String []))\r\n            (.allowAllAccess true)\r\n            (.build))\r\n```\r\n\r\n```\r\nException in thread \"main\" com.oracle.svm.core.jdk.UnsupportedFeatureError: The offset of private volatile com.oracle.truffle.api.nodes.Node com.oracle.truffle.api.nodes.Node.parent is accessed without the field being first registered as unsafe accessed. Please register the field as unsafe accessed. You can do so by using a custom Feature. First, create a class that implements the org.graalvm.nativeimage.Feature interface. Then, implement the method beforeAnalysis(org.graalvm.nativeimage.BeforeAnalysisAccess config). Next, use the config object to register the field for unsafe access by calling config.registerAsUnsafeAccessed(java.lang.reflect.Field) method. Finally, specify the custom feature to the native image building tool using the -H:Features=MyCustomFeature option.\r\n\tat com.oracle.svm.core.util.VMError.unsupportedFeature(VMError.java:102)\r\n\tat sun.misc.Unsafe.objectFieldOffset(Unsafe.java:48)\r\n\tat com.oracle.truffle.api.nodes.NodeFieldAccessor$UnsafeNodeField.<init>(NodeFieldAccessor.java:266)\r\n\tat com.oracle.truffle.api.nodes.NodeFieldAccessor.create(NodeFieldAccessor.java:111)\r\n\tat com.oracle.truffle.api.nodes.NodeClassImpl.<init>(NodeClassImpl.java:81)\r\n\tat com.oracle.truffle.api.nodes.NodeClass$1$1.run(NodeClass.java:61)\r\n\tat com.oracle.truffle.api.nodes.NodeClass$1$1.run(NodeClass.java:59)\r\n\tat java.security.AccessController.doPrivileged(AccessController.java:63)\r\n\tat com.oracle.truffle.api.nodes.NodeClass$1.computeValue(NodeClass.java:59)\r\n\tat com.oracle.truffle.api.nodes.NodeClass$1.computeValue(NodeClass.java:56)\r\n\tat java.lang.ClassValue.get(JavaLangSubstitutions.java:505)\r\n\tat com.oracle.truffle.api.nodes.NodeClass.get(NodeClass.java:69)\r\n\tat com.oracle.truffle.api.nodes.Node.getNodeClass(Node.java:118)\r\n\tat com.oracle.truffle.api.nodes.NodeUtil.adoptChildrenHelper(NodeUtil.java:276)\r\n\tat com.oracle.truffle.api.nodes.Node.adoptChildren(Node.java:269)\r\n\tat com.oracle.truffle.api.impl.DefaultCallTarget.<init>(DefaultCallTarget.java:65)\r\n\tat com.oracle.truffle.api.impl.DefaultTruffleRuntime.createCallTarget(DefaultTruffleRuntime.java:121)\r\n\tat com.oracle.truffle.polyglot.PolyglotValue.createTarget(PolyglotValue.java:644)\r\n\tat com.oracle.truffle.polyglot.PolyglotValue$InteropCodeCache.<init>(PolyglotValue.java:722)\r\n\tat com.oracle.truffle.polyglot.PolyglotValue.createInteropValue(PolyglotValue.java:656)\r\n\tat com.oracle.truffle.polyglot.PolyglotLanguageContext$1.apply(PolyglotLanguageContext.java:694)\r\n\tat com.oracle.truffle.polyglot.PolyglotLanguageContext$1.apply(PolyglotLanguageContext.java:692)\r\n\tat java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1688)\r\n\tat com.oracle.truffle.polyglot.PolyglotLanguageContext.lookupValueCache(PolyglotLanguageContext.java:692)\r\n\tat com.oracle.truffle.polyglot.PolyglotLanguageContext.asValue(PolyglotLanguageContext.java:685)\r\n\tat com.oracle.truffle.polyglot.PolyglotBindingsValue.<init>(PolyglotBindingsValue.java:61)\r\n\tat com.oracle.truffle.polyglot.PolyglotContextImpl.<init>(PolyglotContextImpl.java:196)\r\n\tat com.oracle.truffle.polyglot.PolyglotEngineImpl.createContext(PolyglotEngineImpl.java:1152)\r\n\tat org.graalvm.polyglot.Context$Builder.build(Context.java:1305)\r\n\tat panaeolus.csound.graal$_createContext.invokeStatic(graal.clj:29)\r\n\tat panaeolus.csound.graal$_createContext.doInvoke(graal.clj:24)\r\n\tat clojure.lang.RestFn.invoke(RestFn.java:397)\r\n\tat panaeolus.csound.graal.createContext(Unknown Source)\r\n\tat panaeolus.csound.graal$_main.invokeStatic(graal.clj:35)\r\n\tat panaeolus.csound.graal$_main.invoke(graal.clj:35)\r\n\tat clojure.lang.AFn.applyToHelper(AFn.java:152)\r\n\tat clojure.lang.AFn.applyTo(AFn.java:144)\r\n\tat panaeolus.csound.graal.main(Unknown Source)\r\n```\r\n\r\nSeems to be internal issue of declaring some fields unsafe? Any chance to override this with some native-image compiler flags?", "url": "https://github.com/oracle/graal/issues/1158", "user": "hlolli", "labels": ["bug"], "created": "2019-04-12 22:28:22", "closed": "2019-04-27 16:04:59", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "[polyglot-native] poly_create_context throws NullPointerException", "body": "Compiling GraalVM on Ubuntu 18.04 from master and using the native API provided by libpolyglot.so causes a NullPointerException during a call to poly_create_context.\r\n\r\nSource code of the test program:\r\n\r\n~~~~\r\n#include <cstdio>\r\n#include <polyglot_api.h>\r\n#include <polyglot_isolate.h>\r\n#include <polyglot_types.h>\r\n\r\nint main(int argc, char* argv[])\r\n{\r\n    //Keep the compiler quiet\r\n    (void)argc;\r\n    (void)argv;\r\n\r\n    poly_isolate isolate;\r\n    poly_thread thread;\r\n    poly_status status;\r\n\r\n    status = poly_create_isolate(NULL, &isolate, &thread);\r\n    if (status != poly_ok) {\r\n        printf(\"Status: %d\\n\", status);\r\n    }\r\n    else {\r\n        printf(\"Status is ok. Isolate: %p Thread: %p\\n\", isolate, thread); //Just to see if we get something other than NULL here\r\n    }\r\n\r\n    const char langJS[] = \"js\";\r\n    const char* langs[] = {langJS};\r\n\r\n    poly_context context;\r\n    // Attempted with langs = NULL & size = 0 here too.\r\n    if ((status = poly_create_context(thread, langs, 1, &context)) != poly_ok) {\r\n        printf(\"Failed to create context: %d\\n\", status);\r\n        const poly_extended_error_info* errInfo;\r\n        poly_get_last_error_info(thread, &errInfo);\r\n        printf(\"Error message: %s\\n\", errInfo->error_message);\r\n        return 1;\r\n    }\r\n\r\n    return 0;\r\n}\r\n~~~~\r\n---\r\n__The way Graal was built:__\r\n~~~~\r\ngit clone the repo\r\ncd graal/vm\r\nmx --env lp_js sforceimports\r\nmx --env lp_js build\r\n~~~~\r\nContents of lp_js environment:\r\n~~~~\r\nDYNAMIC_IMPORTS=/substratevm,/tools,/graal-js\r\nDISABLE_LIBPOLYGLOT=false\r\nDISABLE_POLYGLOT=true\r\nDEBUG_IMAGES=true\r\nFORCE_BASH_LAUNCHERS=true\r\n~~~~\r\n__Compiling the test code:__\t\r\n~~~~\r\ng++ -L$(POLY_LIB_PATH) -I$(POLY_LIB_PATH) -Wall -o test main.cpp -lpolyglot\r\n~~~~\r\nwhere $(POLY_LIB_PATH) is the path to the $(mx --env lp_js graalvm-home)/jre/lib/polyglot directory.\r\n__Running the test code:__\r\nexport LD_LIBRARY_PATH=$(mx --env lp_js graalvm-home)/jre/lib/polyglot\r\n./test\r\n\r\n__Output:__\r\nError code 9 is poly_generic_failure \r\n~~~~\r\n./test \r\nStatus is ok. Isolate: 0x7f6afcf7c000 Thread: 0x557c1301e260\r\nFailed to create context: 9\r\nError message: java.lang.NullPointerException\r\nThe full stack trace is:\r\norg.graalvm.polyglot.PolyglotException: java.lang.NullPointerException\r\n\tat com.oracle.truffle.polyglot.PolyglotReferences$SingleContext.assertDirectContextAccess(PolyglotReferences.java:216)\r\n\tat com.oracle.truffle.polyglot.PolyglotReferences$SingleContext.get(PolyglotReferences.java:211)\r\n\tat com.oracle.truffle.polyglot.PolyglotReferences$AssumeSingleContext.get(PolyglotReferences.java:261)\r\n\tat com.oracle.truffle.js.runtime.JSContext.getRealm(JSContext.java:753)\r\n\tat com.oracle.truffle.js.runtime.objects.JSObject.create(JSObject.java:131)\r\n\tat com.oracle.truffle.js.runtime.builtins.JSArray.createImpl(JSArray.java:161)\r\n\tat com.oracle.truffle.js.runtime.builtins.JSArray.create(JSArray.java:150)\r\n\tat com.oracle.truffle.js.runtime.builtins.JSArray.create(JSArray.java:146)\r\n\tat com.oracle.truffle.js.runtime.builtins.JSArray.create(JSArray.java:142)\r\n\tat com.oracle.truffle.js.runtime.builtins.JSArray.create(JSArray.java:138)\r\n\tat com.oracle.truffle.js.runtime.builtins.JSArray.createConstant(JSArray.java:97)\r\n\tat com.oracle.truffle.js.runtime.JSRealm.setArguments(JSRealm.java:1244)\r\n\tat com.oracle.truffle.js.runtime.JSRealm.patchContext(JSRealm.java:1271)\r\n\tat com.oracle.truffle.js.lang.JavaScriptLanguage.patchContext(JavaScriptLanguage.java:452)\r\n\tat com.oracle.truffle.js.lang.JavaScriptLanguage.patchContext(JavaScriptLanguage.java:126)\r\n\tat com.oracle.truffle.api.TruffleLanguage$LanguageImpl.patchEnvContext(TruffleLanguage.java:2704)\r\n\tat com.oracle.truffle.polyglot.PolyglotLanguageContext.patch(PolyglotLanguageContext.java:522)\r\n\tat com.oracle.truffle.polyglot.PolyglotContextImpl.patch(PolyglotContextImpl.java:1162)\r\n\tat com.oracle.truffle.polyglot.PolyglotEngineImpl.loadPreinitializedContext(PolyglotEngineImpl.java:1177)\r\n\tat com.oracle.truffle.polyglot.PolyglotEngineImpl.createContext(PolyglotEngineImpl.java:1150)\r\n\tat org.graalvm.polyglot.Context$Builder.build(Context.java:1305)\r\n\tat org.graalvm.polyglot.Context.create(Context.java:697)\r\n\tat org.graalvm.polyglot.nativeapi.PolyglotNativeAPI.lambda$poly_create_context$16(PolyglotNativeAPI.java:422)\r\n\tat org.graalvm.polyglot.nativeapi.PolyglotNativeAPI.withHandledErrors(PolyglotNativeAPI.java:1627)\r\n\tat org.graalvm.polyglot.nativeapi.PolyglotNativeAPI.poly_create_context(PolyglotNativeAPI.java:419)\r\nOriginal Internal Error: \r\njava.lang.NullPointerException\r\n\tat com.oracle.truffle.polyglot.PolyglotReferences$SingleContext.assertDirectContextAccess(PolyglotReferences.java:216)\r\n\tat com.oracle.truffle.polyglot.PolyglotReferences$SingleContext.get(PolyglotReferences.java:211)\r\n\tat com.oracle.truffle.polyglot.PolyglotReferences$AssumeSingleContext.get(PolyglotReferences.java:261)\r\n\tat com.oracle.truffle.js.runtime.JSContext.getRealm(JSContext.java:753)\r\n\tat com.oracle.truffle.js.runtime.objects.JSObject.create(JSObject.java:131)\r\n\tat com.oracle.truffle.js.runtime.builtins.JSArray.createImpl(JSArray.java:161)\r\n\tat com.oracle.truffle.js.runtime.builtins.JSArray.create(JSArray.java:150)\r\n\tat com.oracle.truffle.js.runtime.builtins.JSArray.create(JSArray.java:146)\r\n\tat com.oracle.truffle.js.runtime.builtins.JSArray.create(JSArray.java:142)\r\n\tat com.oracle.truffle.js.runtime.builtins.JSArray.create(JSArray.java:138)\r\n\tat com.oracle.truffle.js.runtime.builtins.JSArray.createConstant(JSArray.java:97)\r\n\tat com.oracle.truffle.js.runtime.JSRealm.setArguments(JSRealm.java:1244)\r\n\tat com.oracle.truffle.js.runtime.JSRealm.patchContext(JSRealm.java:1271)\r\n\tat com.oracle.truffle.js.lang.JavaScriptLanguage.patchContext(JavaScriptLanguage.java:452)\r\n\tat com.oracle.truffle.js.lang.JavaScriptLanguage.patchContext(JavaScriptLanguage.java:126)\r\n\tat com.oracle.truffle.api.TruffleLanguage$LanguageImpl.patchEnvContext(TruffleLanguage.java:2704)\r\n\tat com.oracle.truffle.polyglot.PolyglotLanguageContext.patch(PolyglotLanguageContext.java:522)\r\n\tat com.oracle.truffle.polyglot.PolyglotContextImpl.patch(PolyglotContextImpl.java:1162)\r\n\tat com.oracle.truffle.polyglot.PolyglotEngineImpl.loadPreinitializedContext(PolyglotEngineImpl.java:1177)\r\n\tat com.oracle.truffle.polyglot.PolyglotEngineImpl.createContext(PolyglotEngineImpl.java:1150)\r\n\tat org.graalvm.polyglot.Context$Builder.build(Context.java:1305)\r\n\tat org.graalvm.polyglot.Context.create(Context.java:697)\r\n\tat org.graalvm.polyglot.nativeapi.PolyglotNativeAPI.lambda$poly_create_context$16(PolyglotNativeAPI.java:422)\r\n\tat org.graalvm.polyglot.nativeapi.PolyglotNativeAPI.withHandledErrors(PolyglotNativeAPI.java:1627)\r\n\tat org.graalvm.polyglot.nativeapi.PolyglotNativeAPI.poly_create_context(PolyglotNativeAPI.java:419)\r\nCaused by: Attached Guest Language Frames (0)\r\n~~~~\r\n\r\n", "url": "https://github.com/oracle/graal/issues/1144", "user": "gradinac", "labels": ["bug"], "created": "2019-04-08 20:35:27", "closed": "2019-04-12 18:22:59", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Startup of application via GraalVM-CE-1.0-rc15 is a bit slower than the traditional JDK8 version", "body": "**This might be application specific, and not necessary happening for all applications**\r\n\r\nI'd like to know if there are _any flags to pass on the CLI as args to speed up the startup_? Maybe it is expected to startup slow but would love to know what is happening and why. Are there any _CLI args to enable logging/recording of diagnostics_ when running with the Graal compiler enabled?\r\n\r\nIf I have to diagnose this myself what should I be _enabling and also looking at_ in the logs?\r\n\r\nEither way these diagnostics will help both myself and your team.", "url": "https://github.com/oracle/graal/issues/1142", "user": "neomatrix369", "labels": ["bug", "compiler"], "created": "2019-04-08 12:53:08", "closed": "2019-05-02 02:29:09", "commits": {}, "ttf": 23.00027777777778, "commitsDetails": []}, {"title": "Bootstrap always slower than oracle JVM?", "body": "Hi guys,\r\n\r\nI did a small main (comparable to just calling a CLI help command, no real logic) and the execution is always slower with graalvm than with oracle. Whereas with the rc14 it was slower but close, the rc15 is really noticeably slower. Here a capture of the execution time to illustrate that statement - using time command on the exact same command line (java -cp \"li/*.jar\" my.Main):\r\n\r\n    Oracle 1.8u191\r\n\r\n    real\t0m0,127s\r\n    user\t0m0,145s\r\n    sys\t0m0,028s\r\n\r\n\r\n    Graal 14\r\n\r\n    real\t0m0,119s\r\n    user\t0m0,184s\r\n    sys\t0m0,049s\r\n\r\n\r\n    Graal 15\r\n\r\n    real\t0m0,477s\r\n    user\t0m0,271s\r\n    sys\t0m0,027s\r\n\r\nSince Graal rc15 uses libjvm by default I expected it to be the opposite, did I miss anything or is this something to address?\r\n\r\nRomain", "url": "https://github.com/oracle/graal/issues/1140", "user": "rmannibucau", "labels": ["bug", "compiler"], "created": "2019-04-08 08:26:31", "closed": "2019-04-23 23:24:12", "commits": {}, "ttf": 15.000277777777777, "commitsDetails": []}, {"title": "Building Truffle NFI on Windows 10 fails", "body": "while building `com.oracle.truffle.nfi.native` for Graal compiler:\r\n\r\n```\r\nBuilding com.oracle.truffle.nfi.native with Ninja...\r\n[1/7] CC src\\lookup_win32.obj\r\nFAILED: src/lookup_win32.obj\r\ncl -nologo -showIncludes \r\n -IC:\\msys64\\home\\cd4mcq\\packages\\graal\\truffle\\src\\com.oracle.truffle.nfi.native\\include\r\n -IC:\\msys64\\home\\cd4mcq\\packages\\graal\\truffle\\src\\com.oracle.truffle.nfi.native\\src\r\n -IC:\\msys64\\home\\cd4mcq\\packages\\graal\\truffle\\mxbuild\\windows-amd64\\src\\libffi\\libffi-3.2.1\\include\r\n -IC:\\msys64\\home\\cd4mcq\\packages\\graal\\truffle\\mxbuild\\src\\com.oracle.truffle.nfi\\jni_gen\r\n -IC:\\Program Files\\Java\\jdk-11\\include\r\n -IC:\\Program Files\\Java\\jdk-11\\include\\win32\r\n -MD -c  C:\\msys64\\home\\cd4mcq\\packages\\graal\\truffle\\src\\com.oracle.truffle.nfi.native\\src\\lookup_win32.c\r\n -Fosrc\\lookup_win32.obj\r\ncl : Command line warning D9024 : unrecognized source file type 'Files\\Java\\jdk-11\\include', object file assumed\r\ncl : Command line warning D9027 : source file 'Files\\Java\\jdk-11\\include' ignored\r\ncl : Command line warning D9024 : unrecognized source file type 'Files\\Java\\jdk-11\\include\\win32', object file assumed\r\ncl : Command line warning D9027 : source file 'Files\\Java\\jdk-11\\include\\win32' ignored\r\nC:\\msys64\\home\\cd4mcq\\packages\\graal\\truffle\\mxbuild\\src\\com.oracle.truffle.nfi\\jni_gen\\com_oracle_truffle_nfi_impl_NativeAllocation.h(2) : fatal error C1083: Cannot open include file: 'jni.h': No such file or directory\r\n```\r\n\r\nDouble quotes are missing around `C:\\Program Files\\Java\\jdk-11\\include` for `-IC:\\Program Files\\Java\\jdk-11\\include`.", "url": "https://github.com/oracle/graal/issues/1123", "user": "oroppas", "labels": ["bug"], "created": "2019-03-30 09:07:38", "closed": "2019-06-15 22:43:16", "commits": {}, "ttf": 77.00027777777778, "commitsDetails": []}, {"title": "Segfault using Micronaut application and native image agent", "body": "I've tried to use the native-image agent the generate the appropriate reflect.json files according to https://github.com/oracle/graal/blob/master/substratevm/CONFIGURE.md and I've hit a segfault.\r\n\r\nTo reproduce the issue:\r\n- `git clone https://github.com/micronaut-graal-tests/micronaut-service-discovery-consul-http-client`\r\n- `cd micronaut-service-discovery-consul-http-client`\r\n- Use latest Graal from master branch (current rc15-dev)\r\n- `./gradlew assemble`\r\n- On another terminal start Consul: `docker run -it --rm -p 8500:8500 consul`\r\n- `export JAVA_TOOL_OPTIONS=\"-agentlib:native-image-agent=output=/tmp/trace-file.json\"`\r\n- `java -jar build/libs/service-discovery-0.1.jar`\r\n- On another terminal: `curl localhost:8080/api/hello/Micronaut`\r\n\r\n```\r\n$ java -jar build/libs/service-discovery-0.1.jar \r\nPicked up JAVA_TOOL_OPTIONS: -agentlib:native-image-agent=output=/tmp/trace-file.json\r\n11:27:13.430 [main] DEBUG io.micronaut.core.reflect.ClassUtils - Attempting to dynamically load class com.fasterxml.jackson.databind.Module\r\n11:27:13.433 [main] DEBUG io.micronaut.core.reflect.ClassUtils - Successfully loaded class com.fasterxml.jackson.databind.Module\r\n11:27:17.255 [Thread-1] DEBUG io.micronaut.core.reflect.ClassUtils - Attempting to dynamically load class io.methvin.watchservice.MacOSXListeningWatchService\r\n11:27:17.263 [Thread-1] DEBUG io.micronaut.core.reflect.ClassUtils - Class io.methvin.watchservice.MacOSXListeningWatchService is not present\r\n11:27:19.637 [main] DEBUG io.micronaut.core.reflect.ClassUtils - Attempting to dynamically load class io.reactivex.Observable\r\n11:27:19.637 [main] DEBUG io.micronaut.core.reflect.ClassUtils - Successfully loaded class io.reactivex.Observable\r\n11:27:19.638 [main] DEBUG io.micronaut.core.reflect.ClassUtils - Attempting to dynamically load class reactor.core.publisher.Flux\r\n11:27:19.639 [main] DEBUG io.micronaut.core.reflect.ClassUtils - Class reactor.core.publisher.Flux is not present\r\n11:27:19.640 [main] DEBUG io.micronaut.core.reflect.ClassUtils - Attempting to dynamically load class io.reactivex.Single\r\n11:27:19.640 [main] DEBUG io.micronaut.core.reflect.ClassUtils - Successfully loaded class io.reactivex.Single\r\n11:27:19.641 [main] DEBUG io.micronaut.core.reflect.ClassUtils - Attempting to dynamically load class reactor.core.publisher.Mono\r\n11:27:19.641 [main] DEBUG io.micronaut.core.reflect.ClassUtils - Class reactor.core.publisher.Mono is not present\r\n11:27:19.641 [main] DEBUG io.micronaut.core.reflect.ClassUtils - Attempting to dynamically load class io.reactivex.Maybe\r\n11:27:19.643 [main] DEBUG io.micronaut.core.reflect.ClassUtils - Successfully loaded class io.reactivex.Maybe\r\n11:27:19.643 [main] DEBUG io.micronaut.core.reflect.ClassUtils - Attempting to dynamically load class io.reactivex.Completable\r\n11:27:19.643 [main] DEBUG io.micronaut.core.reflect.ClassUtils - Successfully loaded class io.reactivex.Completable\r\n11:27:19.732 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 6434ms. Server Running: http://localhost:8080\r\n11:27:20.455 [nioEventLoopGroup-1-3] DEBUG i.m.http.client.DefaultHttpClient - Sending HTTP Request: PUT /v1/agent/service/register\r\n11:27:20.455 [nioEventLoopGroup-1-3] DEBUG i.m.http.client.DefaultHttpClient - Chosen Server: localhost(8500)\r\n11:27:20.458 [nioEventLoopGroup-1-3] TRACE i.m.http.client.DefaultHttpClient - Content-Type: application/json\r\n11:27:20.461 [nioEventLoopGroup-1-3] TRACE i.m.http.client.DefaultHttpClient - Accept: application/json\r\n11:27:20.461 [nioEventLoopGroup-1-3] TRACE i.m.http.client.DefaultHttpClient - host: localhost:8500\r\n11:27:20.462 [nioEventLoopGroup-1-3] TRACE i.m.http.client.DefaultHttpClient - connection: close\r\n11:27:20.462 [nioEventLoopGroup-1-3] TRACE i.m.http.client.DefaultHttpClient - content-length: 136\r\n11:27:20.462 [nioEventLoopGroup-1-3] TRACE i.m.http.client.DefaultHttpClient - Request Body\r\n11:27:20.462 [nioEventLoopGroup-1-3] TRACE i.m.http.client.DefaultHttpClient - ----\r\n11:27:20.462 [nioEventLoopGroup-1-3] TRACE i.m.http.client.DefaultHttpClient - {\"Name\":\"service-discovery\",\"Address\":\"localhost\",\"Port\":8080,\"Checks\":[{\"Status\":\"passing\",\"TTL\":\"25s\"}],\"ID\":\"service-discovery:8080\"}\r\n11:27:20.462 [nioEventLoopGroup-1-3] TRACE i.m.http.client.DefaultHttpClient - ----\r\n11:27:20.608 [nioEventLoopGroup-1-3] TRACE i.m.http.client.DefaultHttpClient - HTTP Client Response Received for Request: PUT http://localhost:8500/v1/agent/service/register\r\n11:27:20.608 [nioEventLoopGroup-1-3] TRACE i.m.http.client.DefaultHttpClient - Status Code: 200 OK\r\n11:27:20.608 [nioEventLoopGroup-1-3] TRACE i.m.http.client.DefaultHttpClient - Vary: Accept-Encoding\r\n11:27:20.608 [nioEventLoopGroup-1-3] TRACE i.m.http.client.DefaultHttpClient - Date: Tue, 19 Mar 2019 10:27:20 GMT\r\n11:27:20.609 [nioEventLoopGroup-1-3] TRACE i.m.http.client.DefaultHttpClient - Content-Length: 0\r\n11:27:20.609 [nioEventLoopGroup-1-3] TRACE i.m.http.client.DefaultHttpClient - Connection: close\r\n11:27:20.609 [nioEventLoopGroup-1-3] TRACE i.m.http.client.DefaultHttpClient - Response Body\r\n11:27:20.609 [nioEventLoopGroup-1-3] TRACE i.m.http.client.DefaultHttpClient - ----\r\n11:27:20.609 [nioEventLoopGroup-1-3] TRACE i.m.http.client.DefaultHttpClient - \r\n11:27:20.609 [nioEventLoopGroup-1-3] TRACE i.m.http.client.DefaultHttpClient - ----\r\n11:27:20.618 [nioEventLoopGroup-1-3] INFO  i.m.d.registration.AutoRegistration - Registered service [service-discovery] with Consul\r\n11:27:22.294 [pool-1-thread-2] DEBUG io.micronaut.core.reflect.ClassUtils - Reflectively instantiating type: class io.micronaut.cache.interceptor.DefaultCacheKeyGenerator\r\n11:27:22.415 [nioEventLoopGroup-1-7] DEBUG i.m.http.client.DefaultHttpClient - Sending HTTP Request: PUT /v1/agent/check/pass/service%3Aservice-discovery%3A8080\r\n11:27:22.426 [nioEventLoopGroup-1-7] DEBUG i.m.http.client.DefaultHttpClient - Chosen Server: localhost(8500)\r\n11:27:22.427 [nioEventLoopGroup-1-7] TRACE i.m.http.client.DefaultHttpClient - Accept: application/json\r\n11:27:22.427 [nioEventLoopGroup-1-7] TRACE i.m.http.client.DefaultHttpClient - host: localhost:8500\r\n11:27:22.427 [nioEventLoopGroup-1-7] TRACE i.m.http.client.DefaultHttpClient - connection: close\r\n11:27:22.427 [nioEventLoopGroup-1-7] TRACE i.m.http.client.DefaultHttpClient - content-length: 0\r\n11:27:22.431 [nioEventLoopGroup-1-7] TRACE i.m.http.client.DefaultHttpClient - HTTP Client Response Received for Request: PUT http://localhost:8500/v1/agent/check/pass/service%3Aservice-discovery%3A8080\r\n11:27:22.432 [nioEventLoopGroup-1-7] TRACE i.m.http.client.DefaultHttpClient - Status Code: 200 OK\r\n11:27:22.432 [nioEventLoopGroup-1-7] TRACE i.m.http.client.DefaultHttpClient - Vary: Accept-Encoding\r\n11:27:22.432 [nioEventLoopGroup-1-7] TRACE i.m.http.client.DefaultHttpClient - Date: Tue, 19 Mar 2019 10:27:22 GMT\r\n11:27:22.432 [nioEventLoopGroup-1-7] TRACE i.m.http.client.DefaultHttpClient - Content-Length: 0\r\n11:27:22.432 [nioEventLoopGroup-1-7] TRACE i.m.http.client.DefaultHttpClient - Connection: close\r\n11:27:22.433 [nioEventLoopGroup-1-7] TRACE i.m.http.client.DefaultHttpClient - Response Body\r\n11:27:22.433 [nioEventLoopGroup-1-7] TRACE i.m.http.client.DefaultHttpClient - ----\r\n11:27:22.433 [nioEventLoopGroup-1-7] TRACE i.m.http.client.DefaultHttpClient - \r\n11:27:22.433 [nioEventLoopGroup-1-7] TRACE i.m.http.client.DefaultHttpClient - ----\r\n11:27:22.569 [nioEventLoopGroup-1-10] DEBUG i.m.http.client.DefaultHttpClient - Sending HTTP Request: GET /v1/health/service/service-discovery?passing=false\r\n11:27:22.570 [nioEventLoopGroup-1-10] DEBUG i.m.http.client.DefaultHttpClient - Chosen Server: localhost(8500)\r\n11:27:22.570 [nioEventLoopGroup-1-10] TRACE i.m.http.client.DefaultHttpClient - Accept: application/json\r\n11:27:22.570 [nioEventLoopGroup-1-10] TRACE i.m.http.client.DefaultHttpClient - host: localhost:8500\r\n11:27:22.570 [nioEventLoopGroup-1-10] TRACE i.m.http.client.DefaultHttpClient - connection: close\r\n11:27:22.595 [nioEventLoopGroup-1-10] TRACE i.m.http.client.DefaultHttpClient - HTTP Client Response Received for Request: GET http://localhost:8500/v1/health/service/service-discovery?passing=false\r\n11:27:22.596 [nioEventLoopGroup-1-10] TRACE i.m.http.client.DefaultHttpClient - Status Code: 200 OK\r\n11:27:22.596 [nioEventLoopGroup-1-10] TRACE i.m.http.client.DefaultHttpClient - Content-Type: application/json\r\n11:27:22.597 [nioEventLoopGroup-1-10] TRACE i.m.http.client.DefaultHttpClient - Vary: Accept-Encoding\r\n11:27:22.597 [nioEventLoopGroup-1-10] TRACE i.m.http.client.DefaultHttpClient - X-Consul-Effective-Consistency: leader\r\n11:27:22.597 [nioEventLoopGroup-1-10] TRACE i.m.http.client.DefaultHttpClient - X-Consul-Index: 11\r\n11:27:22.597 [nioEventLoopGroup-1-10] TRACE i.m.http.client.DefaultHttpClient - X-Consul-Knownleader: true\r\n11:27:22.598 [nioEventLoopGroup-1-10] TRACE i.m.http.client.DefaultHttpClient - X-Consul-Lastcontact: 0\r\n11:27:22.598 [nioEventLoopGroup-1-10] TRACE i.m.http.client.DefaultHttpClient - Date: Tue, 19 Mar 2019 10:27:22 GMT\r\n11:27:22.598 [nioEventLoopGroup-1-10] TRACE i.m.http.client.DefaultHttpClient - Content-Length: 2031\r\n11:27:22.598 [nioEventLoopGroup-1-10] TRACE i.m.http.client.DefaultHttpClient - Connection: close\r\n11:27:22.598 [nioEventLoopGroup-1-10] TRACE i.m.http.client.DefaultHttpClient - Response Body\r\n11:27:22.598 [nioEventLoopGroup-1-10] TRACE i.m.http.client.DefaultHttpClient - ----\r\n11:27:22.613 [nioEventLoopGroup-1-10] TRACE i.m.http.client.DefaultHttpClient - [\r\n    {\r\n        \"Node\": {\r\n            \"ID\": \"8bc4d37f-448b-6409-c1fd-f135510b67e7\",\r\n            \"Node\": \"dcffd3bc77c5\",\r\n            \"Address\": \"127.0.0.1\",\r\n            \"Datacenter\": \"dc1\",\r\n            \"TaggedAddresses\": {\r\n                \"lan\": \"127.0.0.1\",\r\n                \"wan\": \"127.0.0.1\"\r\n            },\r\n            \"Meta\": {\r\n                \"consul-network-segment\": \"\"\r\n            },\r\n            \"CreateIndex\": 9,\r\n            \"ModifyIndex\": 10\r\n        },\r\n        \"Service\": {\r\n            \"ID\": \"service-discovery:8080\",\r\n            \"Service\": \"service-discovery\",\r\n            \"Tags\": [],\r\n            \"Address\": \"localhost\",\r\n            \"Meta\": null,\r\n            \"Port\": 8080,\r\n            \"Weights\": {\r\n                \"Passing\": 1,\r\n                \"Warning\": 1\r\n            },\r\n            \"EnableTagOverride\": false,\r\n            \"ProxyDestination\": \"\",\r\n            \"Proxy\": {},\r\n            \"Connect\": {},\r\n            \"CreateIndex\": 11,\r\n            \"ModifyIndex\": 11\r\n        },\r\n        \"Checks\": [\r\n            {\r\n                \"Node\": \"dcffd3bc77c5\",\r\n                \"CheckID\": \"serfHealth\",\r\n                \"Name\": \"Serf Health Status\",\r\n                \"Status\": \"passing\",\r\n                \"Notes\": \"\",\r\n                \"Output\": \"Agent alive and reachable\",\r\n                \"ServiceID\": \"\",\r\n                \"ServiceName\": \"\",\r\n                \"ServiceTags\": [],\r\n                \"Definition\": {},\r\n                \"CreateIndex\": 9,\r\n                \"ModifyIndex\": 9\r\n            },\r\n            {\r\n                \"Node\": \"dcffd3bc77c5\",\r\n                \"CheckID\": \"service:service-discovery:8080\",\r\n                \"Name\": \"Service 'service-discovery' check\",\r\n                \"Status\": \"passing\",\r\n                \"Notes\": \"\",\r\n                \"Output\": \"\",\r\n                \"ServiceID\": \"service-discovery:8080\",\r\n                \"ServiceName\": \"service-discovery\",\r\n                \"ServiceTags\": [],\r\n                \"Definition\": {},\r\n                \"CreateIndex\": 11,\r\n                \"ModifyIndex\": 11\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n11:27:22.614 [nioEventLoopGroup-1-10] TRACE i.m.http.client.DefaultHttpClient - ----\r\n#\r\n# A fatal error has been detected by the Java Runtime Environment:\r\n#\r\n#  SIGSEGV (0xb) at pc=0x00007f7bfc1bbc42, pid=5036, tid=0x00007f7b6a6f7700\r\n#\r\n# JRE version: OpenJDK Runtime Environment (8.0_202-b08) (build 1.8.0_202-20190206132807.buildslave.jdk8u-src-tar--b08)\r\n# Java VM: OpenJDK GraalVM 1.0.0-rc15-dev (25.202-b08-jvmci-0.55 mixed mode linux-amd64 compressed oops)\r\n# Problematic frame:\r\n# V  [libjvm.so+0x6a1c42]  jni_FromReflectedMethod+0x62\r\n#\r\n# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try \"ulimit -c unlimited\" before starting Java again\r\n#\r\n# An error report file with more information is saved as:\r\n# /home/ivan/workspaces/micronaut-graal-tests/micronaut-service-discovery-consul-http-client/hs_err_pid5036.log\r\nCompiled method (c1)    9721  667       3       java.lang.Class::getEnclosingMethodInfo (21 bytes)\r\n total in heap  [0x00007f7be0277d90,0x00007f7be0278260] = 1232\r\n relocation     [0x00007f7be0277ec0,0x00007f7be0277f18] = 88\r\n main code      [0x00007f7be0277f20,0x00007f7be02780e0] = 448\r\n stub code      [0x00007f7be02780e0,0x00007f7be0278198] = 184\r\n metadata       [0x00007f7be0278198,0x00007f7be02781a0] = 8\r\n scopes data    [0x00007f7be02781a0,0x00007f7be02781e8] = 72\r\n scopes pcs     [0x00007f7be02781e8,0x00007f7be0278258] = 112\r\n dependencies   [0x00007f7be0278258,0x00007f7be0278260] = 8\r\n#\r\n# If you would like to submit a bug report, please visit:\r\n#   http://bugreport.java.com/bugreport/crash.jsp\r\n#\r\nAborted (core dumped)\r\n```\r\n\r\n[hs_err_pid5381.log](https://github.com/oracle/graal/files/2982800/hs_err_pid5381.log)\r\n", "url": "https://github.com/oracle/graal/issues/1081", "user": "ilopmar", "labels": ["bug", "native-image"], "created": "2019-03-19 10:29:59", "closed": "2019-03-21 10:33:49", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Failure to compile method that interprets ok", "body": "I'm seeing the following error for a piece of code that interprets correct (I get no verification errors) and which seems to JIT properly on C2.\r\n\r\n```\r\n[Use -Dgraal.LogFile=<path> to redirect Graal log output to a file.]\r\nThread[JVMCI CompilerThread2,9,system]: Compilation of Users.headius.projects.jruby.lib.ruby.stdlib.monitor.RUBY$method$broadcast$0(ThreadContext, StaticScope, IRubyObject, Block, RubyModule, String) failed:\r\norg.graalvm.compiler.graph.GraalGraphError: Invalid frame state 87|FrameState@-3[AFTER_BCI]\r\n\tat node: 2312|Read\r\n\tat org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.raiseInvalidFrameStateError(HotSpotDebugInfoBuilder.java:122)\r\n\tat org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.computeFrameForState(HotSpotDebugInfoBuilder.java:92)\r\n\tat org.graalvm.compiler.core.gen.DebugInfoBuilder.build(DebugInfoBuilder.java:101)\r\n\tat org.graalvm.compiler.core.gen.NodeLIRBuilder.stateForWithExceptionEdge(NodeLIRBuilder.java:748)\r\n\tat org.graalvm.compiler.core.gen.NodeLIRBuilder.stateFor(NodeLIRBuilder.java:740)\r\n\tat org.graalvm.compiler.core.gen.NodeLIRBuilder.state(NodeLIRBuilder.java:729)\r\n\tat org.graalvm.compiler.nodes.memory.ReadNode.generate(ReadNode.java:79)\r\n\tat org.graalvm.compiler.core.gen.NodeLIRBuilder.emitNode(NodeLIRBuilder.java:473)\r\n\tat org.graalvm.compiler.core.gen.NodeLIRBuilder.doRoot(NodeLIRBuilder.java:464)\r\n\tat org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock(NodeLIRBuilder.java:379)\r\n\tat org.graalvm.compiler.core.LIRGenerationPhase.emitBlock(LIRGenerationPhase.java:81)\r\n\tat org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:71)\r\n\tat org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:46)\r\n\tat org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)\r\n\tat org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:109)\r\n\tat org.graalvm.compiler.core.gen.LIRCompilerBackend.emitLIR0(LIRCompilerBackend.java:139)\r\n\tat org.graalvm.compiler.core.gen.LIRCompilerBackend.emitLIR(LIRCompilerBackend.java:102)\r\n\tat org.graalvm.compiler.core.gen.LIRCompilerBackend.emitBackEnd(LIRCompilerBackend.java:82)\r\n\tat org.graalvm.compiler.core.target.Backend.emitBackEnd(Backend.java:262)\r\n\tat org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:145)\r\n\tat org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:129)\r\n\tat org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compileHelper(HotSpotGraalCompiler.java:185)\r\n\tat org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compile(HotSpotGraalCompiler.java:198)\r\n\tat org.graalvm.compiler.hotspot.CompilationTask$HotSpotCompilationWrapper.performCompilation(CompilationTask.java:182)\r\n\tat org.graalvm.compiler.hotspot.CompilationTask$HotSpotCompilationWrapper.performCompilation(CompilationTask.java:99)\r\n\tat org.graalvm.compiler.core.CompilationWrapper.run(CompilationWrapper.java:172)\r\n\tat org.graalvm.compiler.hotspot.CompilationTask.runCompilation(CompilationTask.java:331)\r\n\tat org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compileMethod(HotSpotGraalCompiler.java:138)\r\n\tat org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compileMethod(HotSpotGraalCompiler.java:105)\r\n\tat jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.compileMethod(HotSpotJVMCIRuntime.java:627)\r\nTo disable compilation failure notifications, set CompilationFailureAction to Silent (e.g., -Dgraal.CompilationFailureAction=Silent).\r\nTo print a message for a compilation failure without retrying the compilation, set CompilationFailureAction to Print (e.g., -Dgraal.CompilationFailureAction=Print).\r\nRetrying compilation of Users.headius.projects.jruby.lib.ruby.stdlib.monitor.RUBY$method$broadcast$0(ThreadContext, StaticScope, IRubyObject, Block, RubyModule, String)\r\n```\r\n\r\nThe bytecode for this method (Ruby code jitted to JVM bytecode) is in the following gist: https://gist.github.com/headius/33160a110d0365029bd1ec45c48b32f3", "url": "https://github.com/oracle/graal/issues/1075", "user": "headius", "labels": ["bug", "compiler"], "created": "2019-03-16 19:27:34", "closed": "2019-07-17 19:16:35", "commits": {}, "ttf": 122.00027777777778, "commitsDetails": []}, {"title": "Compilation fails due to \"invalid frame state\"", "body": "This is a new error that we are getting regularly on RC13:\r\n\r\n```\r\nThread[JVMCI CompilerThread1,9,system]: Compilation of de.hpi.swa.graal.squeak.nodes.primitives.impl.ControlPrimitivesFactory$PrimSignalNodeFactory$PrimSignalNodeGen.executeWithArguments(VirtualFrame, Object[]) failed:\r\norg.graalvm.compiler.graph.GraalGraphError: Invalid frame state 17|FrameState@-4[AFTER_EXCEPTION_BCI]\r\n\tat node: 655|ForeignCall#new_instance_or_null(KlassPointer)Object\r\n\tat org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.raiseInvalidFrameStateError(HotSpotDebugInfoBuilder.java:122)\r\n\tat org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.computeFrameForState(HotSpotDebugInfoBuilder.java:92)\r\n\tat org.graalvm.compiler.core.gen.DebugInfoBuilder.build(DebugInfoBuilder.java:101)\r\n\tat org.graalvm.compiler.core.gen.NodeLIRBuilder.stateForWithExceptionEdge(NodeLIRBuilder.java:748)\r\n\tat org.graalvm.compiler.core.gen.NodeLIRBuilder.stateFor(NodeLIRBuilder.java:740)\r\n\tat org.graalvm.compiler.core.gen.NodeLIRBuilder.state(NodeLIRBuilder.java:729)\r\n\tat org.graalvm.compiler.nodes.extended.ForeignCallNode.generate(ForeignCallNode.java:171)\r\n\tat org.graalvm.compiler.core.gen.NodeLIRBuilder.emitNode(NodeLIRBuilder.java:473)\r\n\tat org.graalvm.compiler.core.gen.NodeLIRBuilder.doRoot(NodeLIRBuilder.java:464)\r\n\tat org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock(NodeLIRBuilder.java:379)\r\n\tat org.graalvm.compiler.core.LIRGenerationPhase.emitBlock(LIRGenerationPhase.java:81)\r\n\tat org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:71)\r\n\tat org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:46)\r\n\tat org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)\r\n\tat org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:109)\r\n\tat org.graalvm.compiler.core.gen.LIRCompilerBackend.emitLIR0(LIRCompilerBackend.java:150)\r\n\tat org.graalvm.compiler.core.gen.LIRCompilerBackend.emitLIR(LIRCompilerBackend.java:113)\r\n\tat org.graalvm.compiler.core.gen.LIRCompilerBackend.emitBackEnd(LIRCompilerBackend.java:83)\r\n\tat org.graalvm.compiler.core.target.Backend.emitBackEnd(Backend.java:280)\r\n\tat org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:145)\r\n\tat org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:129)\r\n\tat org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compileHelper(HotSpotGraalCompiler.java:185)\r\n\tat org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compile(HotSpotGraalCompiler.java:198)\r\n\tat org.graalvm.compiler.hotspot.CompilationTask$HotSpotCompilationWrapper.performCompilation(CompilationTask.java:182)\r\n\tat org.graalvm.compiler.hotspot.CompilationTask$HotSpotCompilationWrapper.performCompilation(CompilationTask.java:99)\r\n\tat org.graalvm.compiler.core.CompilationWrapper.run(CompilationWrapper.java:172)\r\n\tat org.graalvm.compiler.hotspot.CompilationTask.runCompilation(CompilationTask.java:331)\r\n\tat org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compileMethod(HotSpotGraalCompiler.java:138)\r\n\tat org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compileMethod(HotSpotGraalCompiler.java:105)\r\n\tat jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.compileMethod(HotSpotJVMCIRuntime.java:708)\r\n```\r\n\r\nHere's the corresponding Graal dump: [graal_diagnostics_28231.zip](https://github.com/oracle/graal/files/2948433/graal_diagnostics_28231.zip). Any idea how this can be fixed?\r\n\r\n", "url": "https://github.com/oracle/graal/issues/1050", "user": "fniephaus", "labels": ["bug", "compiler"], "created": "2019-03-09 13:45:04", "closed": "2020-02-05 10:55:41", "commits": {}, "ttf": 332.0002777777778, "commitsDetails": []}, {"title": "[native-image] command line option -H:IncludeResources=... deletes characters", "body": "**Graal Version**: 1.0.0-RC12, EE and CE\r\n\r\n**Expected Behaviour**: Resources should be included as-is\r\n\r\n**Actual Behaviour**: in some cases, the first letter of a resource path gets deleted\r\n\r\nWhen adding resources through command-ine option `-H:IncludeResources=...`, the first letter willof the resource path will be deleted. I have some sample code on [github][github], that packages (`mvn package) and compiles (execute script `native/scripts/nativeCompile.sh`) fine, and the created exeuctable run as exepcted. When you, however, alter the command \r\n\r\n    $GRAAL_HOME/bin/native-image --no-server -cp ./dus.graal.native-1.0-SNAPSHOT.jar:../../benchmarks/target/dus.graal.benchmarks-1.0-SNAPSHOT.jar de.consol.dus.graal.numbercrunching.wordcount.WordCountStreamNative -O1 -da --static -H:IncludeResources='.*wordCount/.*\\.txt$' -H:Log=registerResource\r\n\r\nto\r\n\r\n    $GRAAL_HOME/bin/native-image --no-server -cp ./dus.graal.native-1.0-SNAPSHOT.jar:../../benchmarks/target/dus.graal.benchmarks-1.0-SNAPSHOT.jar:. de.consol.dus.graal.numbercrunching.wordcount.WordCountStreamNative -O1 -da --static -H:IncludeResources='.*wordCount/.*\\.txt$' -H:Log=registerResource\r\n\r\n(the difference is the `.` at the end of the classpath), while compilation, one observes the following output:\r\n\r\n    > ls -lisa   \r\n    classes  dus.graal.native-1.0-SNAPSHOT.jar  generated-sources  maven-archiver  maven-status\r\n    > native-image --no-server -cp ./dus.graal.native-1.0-SNAPSHOT.jar:../../benchmarks/target/dus.graal.benchmarks-1.0-SNAPSHOT.jar:. de.consol.dus.graal.numbercrunching.wordcount.WordCountIterativeNative -O1 -da --static -H:IncludeResources='.*wordCount/.*\\.txt$' -H:Log=registerResource\r\n    [de.consol.dus.graal.numbercrunching.wordcount.wordcountiterativenative:2515]    classlist:   1,497.81 ms\r\n    [de.consol.dus.graal.numbercrunching.wordcount.wordcountiterativenative:2515]        (cap):   1,014.72 ms\r\n    [de.consol.dus.graal.numbercrunching.wordcount.wordcountiterativenative:2515]        setup:   2,377.18 ms\r\n    [Use -Dgraal.LogFile=<path> to redirect Graal log output to a file.]\r\n    [thread:27] scope: ForkJoinPool-4-worker-1\r\n      [thread:27] scope: ForkJoinPool-4-worker-1.registerResource\r\n      ResourcesFeature: registerResource: lasses/wordCount/war_and_peace.txt #folder should be called \"classes\", not \"lasses\"\r\n      [thread:27] scope: ForkJoinPool-4-worker-1.registerResource\r\n      ResourcesFeature: registerResource: lasses/wordCount/le_grand_cyrus.txt #folder should be called \"classes\", not \"lasses\"\r\n      [thread:27] scope: ForkJoinPool-4-worker-1.registerResource\r\n      ResourcesFeature: registerResource: wordCount/war_and_peace.txt\r\n      [thread:27] scope: ForkJoinPool-4-worker-1.registerResource\r\n      ResourcesFeature: registerResource: wordCount/le_grand_cyrus.txt\r\n    [...]\r\n\r\n[github]: https://github.com/turing85/graal-playground", "url": "https://github.com/oracle/graal/issues/988", "user": "turing85", "labels": ["bug", "native-image"], "created": "2019-02-18 09:26:25", "closed": "2019-02-19 21:21:12", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Host class filter can be bypassed with Java reflection", "body": "The host class filter (via `org.graalvm.polyglot.Context.Builder#hostClassFilter`) is a nice way to restrict the host classes that are accessible by a guest. But it can be easily bypassed using Java reflection.\r\n\r\nFor example, disallowing `java.lang.Runtime` via the host-class-filter lets the following JS snippet bark:\r\n``` \r\nJava.type('java.lang.Runtime').getRuntime().exec(\"/bin/ps);\r\n``` \r\nBut the following snippet still works:\r\n```\r\nvar RuntimeClass = Java.type(\"java.lang.Class\").forName(\"java.lang.Runtime\");\r\nvar RuntimeGetRuntime = RuntimeClass.getDeclaredMethod(\"getRuntime\");\r\nvar RuntimeRaw = RuntimeGetRuntime.invoke(null);\r\nvar RuntimeExec = RuntimeClass.getDeclaredMethod(\"exec\");\r\nRuntimeExec.invoke(RuntimeRaw, '/bin/ps');\r\n```\r\n\r\nNashorn \"disables\" Java reflection, if a `jdk.nashorn.api.scripting.ClassFilter` is configured, but Graal does not \"disable\" Java reflection (for the guest), if a host-class-filter is configured.\r\n\r\nIt _seems_ to help to disallow `java.lang.Class` via the host-class-filter. At least, `Java.type('SomeAccessibleClass').class` and `someType.getClass()` seem to yield `java.lang.Object` (at least calling `.forName(...)` on the returned objects fails with a `TypeError: INVOKE on JavaClass[java.lang.Object] failed due to: Unknown identifier: forName`. I'm not sure, whether that's because `forName()` is a static method or because `java.lang.Class` is forbidden.\r\n\r\nIt's a surprising behavior, that a class, which is forbidden via the host-class-filter, is still accessible via Java reflection, especially since the javadoc for `org.graalvm.polyglot.Context.Builder#hostClassFilter` says `If the filter returns true, then the class is accessible, otherwise it is not accessible and throws a guest language error when accessed.`\r\n\r\nUsing a `SecurityManager` and disallowing `RuntimePermission(\"accessDeclaredMembers\")` might work, but it also lets Truffle fail (e.g. `com.oracle.truffle.api.nodes.NodeClassImpl.collectInstanceFields()` requires that permission). It's pretty big hammer - and requires additional configuration (at least code + probably config file).", "url": "https://github.com/oracle/graal/issues/987", "user": "snazy", "labels": ["bug", "javascript"], "created": "2019-02-16 23:50:18", "closed": "2019-04-18 13:55:35", "commits": {}, "ttf": 60.000277777777775, "commitsDetails": []}, {"title": "Regression introduced: IndexOutOfBoundsException creating Micronaut native-image apps", "body": "Our CI has detected a regression introduced in this commit: https://github.com/oracle/graal/commit/d4558fb51456328dc272aba597882182b1550248\r\n\r\nAll of our Micronaut Graal test applications fail when building the native image with the following error:\r\n\r\n```\r\n[basic-app:96]    classlist:   9,785.03 ms\r\n[basic-app:96]        (cap):   3,001.95 ms\r\n[basic-app:96]        setup:   6,848.65 ms\r\n[basic-app:96]     analysis:  47,532.28 ms\r\nFatal error: java.lang.IndexOutOfBoundsException: index 2\r\n\tat java.util.concurrent.atomic.AtomicReferenceArray.checkedByteOffset(AtomicReferenceArray.java:78)\r\n\tat java.util.concurrent.atomic.AtomicReferenceArray.get(AtomicReferenceArray.java:125)\r\n\tat com.oracle.graal.pointsto.flow.context.object.AnalysisObject.getInstanceFieldTypeStore(AnalysisObject.java:213)\r\n\tat com.oracle.graal.pointsto.flow.context.object.AnalysisObject.getInstanceFieldFlow(AnalysisObject.java:199)\r\n\tat com.oracle.graal.pointsto.flow.LoadFieldTypeFlow$LoadInstanceFieldTypeFlow.onObservedUpdate(LoadFieldTypeFlow.java:159)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:347)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:389)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:508)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:169)\r\n\tat java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nError: Image building with exit status 1\r\n```\r\n\r\nIn this CI execution https://gitlab.com/micronaut-projects/micronaut-graal-tests/pipelines/47754989 you can check that all the applications fail in the \"Micronaut\" stage. This is the stage we use to build native images with latest GraalVM built from master in the \"Build-graal\" pipeline stage.\r\n\r\nTo reproduce the issue you can use any of our test applications used in CI, for example:\r\n\r\n- `git clone https://github.com/micronaut-graal-tests/micronaut-basic-app`\r\n- `cd micronaut-basic-app/`\r\n- Use GraalVM built from master\r\n- `./build-native-image.sh`\r\n\r\n", "url": "https://github.com/oracle/graal/issues/985", "user": "ilopmar", "labels": ["bug", "native-image"], "created": "2019-02-16 08:03:38", "closed": "2019-02-20 04:29:17", "commits": {"9f0546754bfb1bf2a1963f0c4358a67aaeab63b1": {"commitGHEventType": "referenced", "commitUser": "dougxc"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "9f0546754bfb1bf2a1963f0c4358a67aaeab63b1", "commitGHEventType": "referenced", "commitUser": "dougxc", "commitParents": ["4753af71b1cabf3e444041424d28bf4af7a5d71a", "14594f7bb73560c73e57cbce6420c34d8104c6cd"], "nameRev": "9f0546754bfb1bf2a1963f0c4358a67aaeab63b1 tags/vm-1.0.0-rc13~6^2~37", "commitMessage": "[GR-14006] Fix DynamicHub.getProtectionDomain() substitution [#985, #995].\n\nPullRequest: graal/2959\n", "commitDateTime": "2019-02-19 18:39:19", "authoredDateTime": "2019-02-19 18:39:19", "commitGitStats": [{"filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/flow/CloneTypeFlow.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/flow/FormalParamTypeFlow.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/flow/FormalReturnTypeFlow.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/flow/InitialParamTypeFlow.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/flow/LoadFieldTypeFlow.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/flow/OffsetLoadTypeFlow.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/flow/OffsetStoreTypeFlow.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/flow/StoreFieldTypeFlow.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/flow/TypeFlow.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/flow/context/object/AnalysisObject.java", "insertions": 16, "deletions": 6, "lines": 22}, {"filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/flow/context/object/ContextSensitiveAnalysisObject.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/util/AnalysisError.java", "insertions": 37, "deletions": 10, "lines": 47}, {"filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/hub/DynamicHub.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CloneTypeFlow.java", "spoonMethods": [{"spoonMethodName": "com.oracle.graal.pointsto.flow.CloneTypeFlow.update(com.oracle.graal.pointsto.BigBang)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FormalParamTypeFlow.java", "spoonMethods": [{"spoonMethodName": "com.oracle.graal.pointsto.flow.FormalParamTypeFlow.method()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FormalReturnTypeFlow.java", "spoonMethods": [{"spoonMethodName": "com.oracle.graal.pointsto.flow.FormalReturnTypeFlow.method()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InitialParamTypeFlow.java", "spoonMethods": [{"spoonMethodName": "com.oracle.graal.pointsto.flow.InitialParamTypeFlow.method()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LoadFieldTypeFlow.java", "spoonMethods": [{"spoonMethodName": "com.oracle.graal.pointsto.flow.LoadFieldTypeFlow.LoadInstanceFieldTypeFlow.onObservedUpdate(com.oracle.graal.pointsto.BigBang)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OffsetLoadTypeFlow.java", "spoonMethods": [{"spoonMethodName": "com.oracle.graal.pointsto.flow.OffsetLoadTypeFlow.UnsafePartitionLoadTypeFlow.onObservedUpdate(com.oracle.graal.pointsto.BigBang)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.graal.pointsto.flow.OffsetLoadTypeFlow.AbstractUnsafeLoadTypeFlow.onObservedUpdate(com.oracle.graal.pointsto.BigBang)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OffsetStoreTypeFlow.java", "spoonMethods": [{"spoonMethodName": "com.oracle.graal.pointsto.flow.OffsetStoreTypeFlow.AbstractUnsafeStoreTypeFlow.handleUnsafeAccessedFields(com.oracle.graal.pointsto.BigBang,java.util.List,com.oracle.graal.pointsto.flow.context.object.AnalysisObject)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "StoreFieldTypeFlow.java", "spoonMethods": [{"spoonMethodName": "com.oracle.graal.pointsto.flow.StoreFieldTypeFlow.StoreInstanceFieldTypeFlow.onObservedUpdate(com.oracle.graal.pointsto.BigBang)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeFlow.java", "spoonMethods": [{"spoonMethodName": "com.oracle.graal.pointsto.flow.TypeFlow.method()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AnalysisObject.java", "spoonMethods": [{"spoonMethodName": "com.oracle.graal.pointsto.flow.context.object.AnalysisObject.getInstanceFieldTypeStore(com.oracle.graal.pointsto.BigBang,com.oracle.graal.pointsto.meta.AnalysisField)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.oracle.graal.pointsto.flow.context.object.AnalysisObject.getInstanceFieldFlow(com.oracle.graal.pointsto.BigBang,com.oracle.graal.pointsto.meta.AnalysisField,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.graal.pointsto.flow.context.object.AnalysisObject.getInstanceFieldFilterFlow(com.oracle.graal.pointsto.BigBang,com.oracle.graal.pointsto.meta.AnalysisMethod,com.oracle.graal.pointsto.meta.AnalysisField)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.graal.pointsto.flow.context.object.AnalysisObject.getUnsafeWriteSinkFrozenFilterFlow(com.oracle.graal.pointsto.BigBang,com.oracle.graal.pointsto.meta.AnalysisMethod,com.oracle.graal.pointsto.meta.AnalysisField)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.graal.pointsto.flow.context.object.AnalysisObject.getInstanceFieldFlow(com.oracle.graal.pointsto.BigBang,com.oracle.graal.pointsto.meta.AnalysisMethod,com.oracle.graal.pointsto.meta.AnalysisField,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.graal.pointsto.flow.context.object.AnalysisObject.getInstanceFieldTypeStore(com.oracle.graal.pointsto.BigBang,com.oracle.graal.pointsto.meta.AnalysisMethod,com.oracle.graal.pointsto.meta.AnalysisField)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ContextSensitiveAnalysisObject.java", "spoonMethods": [{"spoonMethodName": "com.oracle.graal.pointsto.flow.context.object.ContextSensitiveAnalysisObject.getInstanceFieldFilterFlow(com.oracle.graal.pointsto.BigBang,com.oracle.graal.pointsto.meta.AnalysisMethod,com.oracle.graal.pointsto.meta.AnalysisField)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.graal.pointsto.flow.context.object.ContextSensitiveAnalysisObject.getInstanceFieldFlow(com.oracle.graal.pointsto.BigBang,com.oracle.graal.pointsto.meta.AnalysisField,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AnalysisError.java", "spoonMethods": [{"spoonMethodName": "com.oracle.graal.pointsto.util.AnalysisError.ParsingError.message(com.oracle.graal.pointsto.meta.AnalysisMethod,java.lang.Throwable)", "TOT": 8, "UPD": 1, "INS": 0, "MOV": 4, "DEL": 3}, {"spoonMethodName": "com.oracle.graal.pointsto.util.AnalysisError.FieldNotPresentError", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.graal.pointsto.util.AnalysisError.parsingContext(com.oracle.graal.pointsto.meta.AnalysisMethod)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.graal.pointsto.util.AnalysisError.fieldNotPresentError(com.oracle.graal.pointsto.meta.AnalysisMethod,com.oracle.graal.pointsto.meta.AnalysisField,com.oracle.graal.pointsto.meta.AnalysisType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DynamicHub.java", "spoonMethods": [{"spoonMethodName": "com.oracle.svm.core.hub.DynamicHub.getProtectionDomain()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[native-image] NPE in ChainedSubstitutionProcessor.lookup", "body": "In a complex application that works fine with Java 8 on SVM, I have an issue when using Java 11.\r\nThe final error is a `NullPointerException` in` SubstitutionProcessor$ChainedSubstitutionProcessor.lookup` since the first lookup returns null in\r\n`second.lookup(first.lookup(method))\r\n\r\nFYI, `first` is an `AnnotationSupport` instance and `declaringClass.getSubstitutionMethod(method)` returns null for \r\n`declaringClass = AnnotationType<jdk.jfr.Relational$$ProxyImpl -> HotSpotType<Lcom/sun/proxy/$Proxy37;, resolved>>`\r\n and \r\n`method =  HotSpotMethod<$Proxy37.<init>(InvocationHandler)>`", "url": "https://github.com/oracle/graal/issues/968", "user": "johanvos", "labels": ["bug", "native-image"], "created": "2019-02-08 14:44:36", "closed": "2019-02-27 00:15:31", "commits": {"c15f734de99df5289a72d77bfec97e04dcb3203e": {"commitGHEventType": "referenced", "commitUser": "dougxc"}}, "ttf": 18.00027777777778, "commitsDetails": [{"commitHash": "c15f734de99df5289a72d77bfec97e04dcb3203e", "commitGHEventType": "referenced", "commitUser": "dougxc", "commitParents": ["bfa4fd4fb8552b2dd43e345d319e83f53a04813e", "d0ec22dc18ac15ad08d2be5b7b4b9427bc9b732b"], "nameRev": "c15f734de99df5289a72d77bfec97e04dcb3203e tags/JDK-8218074~67", "commitMessage": "[GR-14088] Add missing annotation constructor substitution (#968, #996).\n\nPullRequest: graal/2992\n", "commitDateTime": "2019-02-26 15:04:18", "authoredDateTime": "2019-02-26 15:04:18", "commitGitStats": [{"filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/annotation/AnnotationSupport.java", "insertions": 24, "deletions": 0, "lines": 24}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AnnotationSupport.java", "spoonMethods": [{"spoonMethodName": "com.oracle.svm.hosted.annotation.AnnotationSupport.AnnotationConstructorMethod", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.svm.hosted.annotation.AnnotationSupport.getSubstitution(jdk.vm.ci.meta.ResolvedJavaType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[native-image] instantiating javax.script.ScriptEngineManager crashes the compiler", "body": "reproducer:\r\n\r\n```sh\r\nnative-image ex.Example\r\n```\r\n\r\n```java\r\npackage ex;\r\nimport javax.script.*;\r\nimport java.util.*;\r\npublic class Example {\r\n    public static void main(String... args) {\r\n        ScriptEngineManager manager = new ScriptEngineManager();\r\n    }\r\n}\r\n```\r\nthis WILL complete successfully if we pass (e.g.) `--language:js` to `native-image`:\r\n\r\n```sh\r\nnative-image --language:js ex.Example\r\n```\r\nbut compilation will take a lot more time.\r\n\r\nbonus: using `--language:js` and by changing the main above as follows:\r\n\r\n```java\r\n        ScriptEngineManager manager = new ScriptEngineManager();\r\n        List<ScriptEngineFactory> factories = manager.getEngineFactories();\r\n        for (ScriptEngineFactory factory : factories) {\r\n            System.out.println(factory);\r\n        }\r\n```\r\n\r\nall the factory ids get printed as expected \r\n\r\n```sh\r\n% ./ex.example                                                         \r\njdk.nashorn.api.scripting.NashornScriptEngineFactory@7fcb5e318a00\r\ncom.oracle.truffle.js.scriptengine.GraalJSEngineFactory@7fcb5e318868\r\n```", "url": "https://github.com/oracle/graal/issues/958", "user": "evacchi", "labels": ["bug", "native-image"], "created": "2019-02-05 13:39:51", "closed": "2019-02-11 18:43:37", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "[native-image] non-immutable relocatable object on imageheap", "body": "I run into an error during NativeImageHeap.processAddObjectsWorklist() as there is an object with relocatable pointers that is not immutable.\r\nThe object is an instance of com.oracle.svm.core.hub.ClassInitializationInfo.ClassInitializerFunctionPointerHolderimageheap?", "url": "https://github.com/oracle/graal/issues/933", "user": "johanvos", "labels": ["bug", "native-image"], "created": "2019-01-23 13:19:11", "closed": "2019-01-25 20:12:41", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Graal ArrayCopy compiler errors", "body": "While running my application in docker `oracle/graalvm-ce:1.0.0-rc10` I received such warning. The application works fine. Hope this report will help you.\r\n```\r\nThread[JVMCI CompilerThread1,9,system]: Compilation of java.util.ArrayList.toArray(Object[]) failed:\r\norg.graalvm.compiler.debug.GraalError: unexpected invoke HotSpotMethod<System.$$YJP$$arraycopy(Object, int, Object, int, int)> in snippet\r\n\tat org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets$Templates.instantiate(ArrayCopySnippets.java:539)\r\n\tat org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets$Templates.lower(ArrayCopySnippets.java:494)\r\n\tat org.graalvm.compiler.hotspot.meta.DefaultHotSpotLoweringProvider.lower(DefaultHotSpotLoweringProvider.java:324)\r\n\tat org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLoweringProvider.lower(AMD64HotSpotLoweringProvider.java:84)\r\n\tat org.graalvm.compiler.replacements.nodes.BasicArrayCopyNode.lower(BasicArrayCopyNode.java:146)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase$Round.process(LoweringPhase.java:465)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase$Round.access$200(LoweringPhase.java:341)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase$Round$ProcessFrame.preprocess(LoweringPhase.java:405)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:564)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase$Round.run(LoweringPhase.java:390)\r\n\tat org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n\tat org.graalvm.compiler.phases.PhaseSuite.run(PhaseSuite.java:212)\r\n\tat org.graalvm.compiler.phases.common.IncrementalCanonicalizerPhase.run(IncrementalCanonicalizerPhase.java:56)\r\n\tat org.graalvm.compiler.phases.common.IncrementalCanonicalizerPhase.run(IncrementalCanonicalizerPhase.java:38)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase.lower(LoweringPhase.java:261)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase.run(LoweringPhase.java:254)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase.run(LoweringPhase.java:93)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n\tat org.graalvm.compiler.phases.PhaseSuite.run(PhaseSuite.java:212)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n\tat org.graalvm.compiler.core.GraalCompiler.emitFrontEnd(GraalCompiler.java:266)\r\n\tat org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:180)\r\n\tat org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:165)\r\n\tat org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compileHelper(HotSpotGraalCompiler.java:185)\r\n\tat org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compile(HotSpotGraalCompiler.java:198)\r\n\tat org.graalvm.compiler.hotspot.CompilationTask$HotSpotCompilationWrapper.performCompilation(CompilationTask.java:182)\r\n\tat org.graalvm.compiler.hotspot.CompilationTask$HotSpotCompilationWrapper.performCompilation(CompilationTask.java:99)\r\n\tat org.graalvm.compiler.core.CompilationWrapper.run(CompilationWrapper.java:172)\r\n\tat org.graalvm.compiler.hotspot.CompilationTask.runCompilation(CompilationTask.java:331)\r\n\tat org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compileMethod(HotSpotGraalCompiler.java:138)\r\n\tat org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compileMethod(HotSpotGraalCompiler.java:105)\r\n\tat jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.compileMethod(HotSpotJVMCIRuntime.java:627)\r\nTo disable compilation failure notifications, set CompilationFailureAction to Silent (e.g., -Dgraal.CompilationFailureAction=Silent).\r\nTo print a message for a compilation failure without retrying the compilation, set CompilationFailureAction to Print (e.g., -Dgraal.CompilationFailureAction=Print).\r\nRetrying compilation of java.util.ArrayList.toArray(Object[])\r\n\r\nWarning: adjusting CompilationFailureAction from Diagnose to Print after MaxCompilationProblemsPerAction (2) failed compilations\r\nThread[JVMCI CompilerThread1,9,system]: Compilation of java.util.ArrayList.addAll(Collection) failed: org.graalvm.compiler.debug.GraalError: unexpected invoke HotSpotMethod<System.$$YJP$$arraycopy(Object, int, Object, int, int)> in snippet\r\n\tat org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets$Templates.instantiate(ArrayCopySnippets.java:539)\r\n\tat org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets$Templates.lower(ArrayCopySnippets.java:494)\r\n\tat org.graalvm.compiler.hotspot.meta.DefaultHotSpotLoweringProvider.lower(DefaultHotSpotLoweringProvider.java:324)\r\n\tat org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLoweringProvider.lower(AMD64HotSpotLoweringProvider.java:84)\r\n\tat org.graalvm.compiler.replacements.nodes.BasicArrayCopyNode.lower(BasicArrayCopyNode.java:146)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase$Round.process(LoweringPhase.java:465)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase$Round.access$200(LoweringPhase.java:341)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase$Round$ProcessFrame.preprocess(LoweringPhase.java:405)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:564)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase$Round.run(LoweringPhase.java:390)\r\n\tat org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n\tat org.graalvm.compiler.phases.PhaseSuite.run(PhaseSuite.java:212)\r\n\tat org.graalvm.compiler.phases.common.IncrementalCanonicalizerPhase.run(IncrementalCanonicalizerPhase.java:56)\r\n\tat org.graalvm.compiler.phases.common.IncrementalCanonicalizerPhase.run(IncrementalCanonicalizerPhase.java:38)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase.lower(LoweringPhase.java:261)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase.run(LoweringPhase.java:254)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase.run(LoweringPhase.java:93)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n\tat org.graalvm.compiler.phases.PhaseSuite.run(PhaseSuite.java:212)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n\tat org.graalvm.compiler.core.GraalCompiler.emitFrontEnd(GraalCompiler.java:266)\r\n\tat org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:180)\r\n\tat org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:165)\r\n\tat org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compileHelper(HotSpotGraalCompiler.java:185)\r\n\tat org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compile(HotSpotGraalCompiler.java:198)\r\n\tat org.graalvm.compiler.hotspot.CompilationTask$HotSpotCompilationWrapper.performCompilation(CompilationTask.java:182)\r\n\tat org.graalvm.compiler.hotspot.CompilationTask$HotSpotCompilationWrapper.performCompilation(CompilationTask.java:99)\r\n\tat org.graalvm.compiler.core.CompilationWrapper.run(CompilationWrapper.java:172)\r\n\tat org.graalvm.compiler.hotspot.CompilationTask.runCompilation(CompilationTask.java:331)\r\n\tat org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compileMethod(HotSpotGraalCompiler.java:138)\r\n\tat org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compileMethod(HotSpotGraalCompiler.java:105)\r\n\tat jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.compileMethod(HotSpotJVMCIRuntime.java:627)\r\n```", "url": "https://github.com/oracle/graal/issues/876", "user": "ppiotrow", "labels": ["bug", "compiler"], "created": "2018-12-19 09:53:18", "closed": "2019-04-01 10:16:16", "commits": {}, "ttf": 103.00027777777778, "commitsDetails": []}, {"title": "[native-image] JNI config fails when it contains java.lang.Class", "body": "If a JNI configuration file is passed to native-image via -H:JNIConfigurationFiles=jniconfig.json and if this file contains java.lang.Class, the native-image generation fails -- see below\r\nThis scenario is used when native code wants to call methods on java.lang.Class and first need to find it, e.g. via env->FindClass(env, \"java/lang/Class\");\r\n\r\n```\r\nerror: Error encountered while parsing com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_ARRAY:Ljava_lang_Class_2_0002ecreateAnnotationData_00028I_00029Ljava_lang_Class_00024AnnotationData_2(com.oracle.svm.jni.nativeapi.JNIEnvironment, com.oracle.svm.jni.nativeapi.JNIObjectHandle, com.oracle.svm.jni.nativeapi.JNIMethodId, com.oracle.svm.jni.nativeapi.JNIValue) \r\nParsing context: <no parsing context available> \r\nOriginal error: com.oracle.graal.pointsto.constraints.UnsupportedFeatureException: Unsupported method java.lang.Class.createAnnotationData(int) is reachable: The declaring class of this element has been substituted, but this element is not present in the substitution class\r\nTo diagnose the issue, you can add the option --report-unsupported-elements-at-runtime. The unsupported element is then reported at run time when it is accessed the first time.\r\n\tat com.oracle.svm.hosted.substitute.AnnotationSubstitutionProcessor.lookup(AnnotationSubstitutionProcessor.java:178)\r\n\tat com.oracle.graal.pointsto.infrastructure.SubstitutionProcessor$ChainedSubstitutionProcessor.lookup(SubstitutionProcessor.java:128)\r\n\tat com.oracle.graal.pointsto.infrastructure.SubstitutionProcessor$ChainedSubstitutionProcessor.lookup(SubstitutionProcessor.java:128)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookupAllowUnresolved(AnalysisUniverse.java:380)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookup(AnalysisUniverse.java:360)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookup(AnalysisUniverse.java:69)\r\n\tat com.oracle.graal.pointsto.infrastructure.UniverseMetaAccess.lookupJavaMethod(UniverseMetaAccess.java:99)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisMetaAccess.lookupJavaMethod(AnalysisMetaAccess.java:67)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisMetaAccess.lookupJavaMethod(AnalysisMetaAccess.java:40)\r\n\tat com.oracle.svm.jni.hosted.JNIJavaCallWrapperMethod.buildGraph(JNIJavaCallWrapperMethod.java:190)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisMethod.buildGraph(AnalysisMethod.java:286)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:176)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:323)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:310)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:300)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:107)\r\n\tat com.oracle.graal.pointsto.BigBang$1.run(BigBang.java:383)\r\n```", "url": "https://github.com/oracle/graal/issues/875", "user": "johanvos", "labels": ["bug"], "created": "2018-12-19 08:43:24", "closed": "2019-03-13 11:42:15", "commits": {}, "ttf": 84.00027777777778, "commitsDetails": []}, {"title": "Incorrect results for Math.scalb()", "body": "We implemented a **Java bytecode generator** that creates random class files, which we also tested on **GraalVM**. \r\nOver the last couple of weeks we implemented a test suite that resembles \r\n[`CompileTheWorld`](https://github.com/oracle/graal/blob/master/compiler/src/org.graalvm.compiler.hotspot.test/src/org/graalvm/compiler/hotspot/test/CompileTheWorld.java) from the *Graal* compiler test suite. Utilizing the compiler API, we repeatedly generate random class files and load them using a custom class loader. Then we run those files with the *HotSpot* interpreter and compare this result to a run with the *Graal* compiler.\r\n\r\nIn a number of test runs we managed to find a bug that seems to stem from field default values\r\nas well as the `java.lang.Math.scalb` method. As the generated class files are usually fairly complex,\r\nwe narrowed it down to the following class file:\r\n```\r\n  public class Bug\r\n    minor version: 0\r\n    major version: 52\r\n    flags: ACC_PUBLIC\r\n  Constant pool:\r\n     #1 = Utf8               Bug\r\n     #2 = Class              #1             // Bug\r\n     #3 = Utf8               java/lang/Object\r\n     #4 = Class              #3             // java/lang/Object\r\n     #5 = Utf8               a\r\n     #6 = Utf8               I\r\n     #7 = Utf8               main\r\n     #8 = Utf8               ([Ljava/lang/String;)V\r\n     #9 = NameAndType        #5:#6          // a:I\r\n    #10 = Fieldref           #2.#9          // Bug.a:I\r\n    #11 = Utf8               java/lang/System\r\n    #12 = Class              #11            // java/lang/System\r\n    #13 = Utf8               out\r\n    #14 = Utf8               Ljava/io/PrintStream;\r\n    #15 = NameAndType        #13:#14        // out:Ljava/io/PrintStream;\r\n    #16 = Fieldref           #12.#15        // java/lang/System.out:Ljava/io/PrintStream;\r\n    #17 = Utf8               java/lang/Math\r\n    #18 = Class              #17            // java/lang/Math\r\n    #19 = Utf8               scalb\r\n    #20 = Utf8               (FI)F\r\n    #21 = NameAndType        #19:#20        // scalb:(FI)F\r\n    #22 = Methodref          #18.#21        // java/lang/Math.scalb:(FI)F\r\n    #23 = Utf8               java/io/PrintStream\r\n    #24 = Class              #23            // java/io/PrintStream\r\n    #25 = Utf8               println\r\n    #26 = Utf8               (F)V\r\n    #27 = NameAndType        #25:#26        // println:(F)V\r\n    #28 = Methodref          #24.#27        // java/io/PrintStream.println:(F)V\r\n    #29 = Utf8               Code\r\n    #30 = Utf8               StackMapTable\r\n  {\r\n    static int a;\r\n      descriptor: I\r\n      flags: ACC_STATIC\r\n  \r\n    public static void main(java.lang.String[]);\r\n      descriptor: ([Ljava/lang/String;)V\r\n      flags: ACC_PUBLIC, ACC_STATIC\r\n      Code:\r\n        stack=3, locals=2, args_size=1\r\n           0: sipush        -279\r\n           3: istore_1\r\n           4: getstatic     #10                 // Field a:I\r\n           7: ifle          21\r\n          10: getstatic     #10                 // Field a:I\r\n          13: ifge          17\r\n          16: nop\r\n          17: iconst_1\r\n          18: goto          22\r\n          21: iconst_0\r\n          22: ifeq          27\r\n          25: iconst_0\r\n          26: istore_1\r\n          27: getstatic     #16                 // Field java/lang/System.out:Ljava/io/PrintStream;\r\n          30: iconst_m1\r\n          31: i2f\r\n          32: iload_1\r\n          33: invokestatic  #22                 // Method java/lang/Math.scalb:(FI)F\r\n          36: invokevirtual #28                 // Method java/io/PrintStream.println:(F)V\r\n          39: return\r\n        StackMapTable: number_of_entries = 4\r\n          frame_type = 252 /* append */\r\n            offset_delta = 17\r\n            locals = [ int ]\r\n          frame_type = 3 /* same */\r\n          frame_type = 64 /* same_locals_1_stack_item */\r\n            stack = [ int ]\r\n          frame_type = 4 /* same */\r\n  }\r\n```\r\nWhen run with the interpreter, this results in the output of `-0.0` while execution of code compiled by **Graal** yields `-1.0`. \r\n\r\nWe could not further minimize the bytecode. We managed to recreate the class in *ASM* to perform manual corrections, but even the removal of the `nop` (bci 16) results in the test executing correctly.\r\n\r\nJust for comparison, the decompiled source code would be something like:\r\n\r\n```java\r\n//\r\n// Source code recreated from a .class file by IntelliJ IDEA\r\n// (powered by Fernflower decompiler)\r\n//\r\n\r\npublic class Bug {\r\n    static int a;\r\n\r\n    public static void main(String[] var0) {\r\n        short var1 = -279;\r\n        boolean var10000;\r\n        if (a > 0) {\r\n            if (a < 0) {\r\n                ;\r\n            }\r\n\r\n            var10000 = true;\r\n        } else {\r\n            var10000 = false;\r\n        }\r\n\r\n        if (var10000) {\r\n            var1 = 0;\r\n        }\r\n\r\n        System.out.println(Math.scalb((float)-1, var1));\r\n    }\r\n}\r\n\r\n```\r\n\r\nInterestingly, this source code also does not reproduce the bug when compiling it again.\r\n\r\nWe used the following version of the *LabsJDK* on a `Fedora release 28` machine:\r\n```\r\njava version \"1.8.0_192\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_192-b12)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.192-b12-jvmci-0.53, mixed mode)\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/868", "user": "skloibi", "labels": ["bug", "compiler"], "created": "2018-12-17 15:48:33", "closed": "2019-01-15 15:47:53", "commits": {}, "ttf": 28.00027777777778, "commitsDetails": []}, {"title": "Class.forName can return a ghost type", "body": "With the changes in RC10 it is now possible that Class.forName will return a ghost class. It looks like there is code in NativeImageClassLoader that is supposed to stop this, however it appears that if the ghost class has already been created via bytecode parsing then it will be returned (as the order of class loading is not guaranteed this means the problem will not always appear). \r\n\r\nThis will cause problems with any library that allows optional features. I saw this problem with Hibernate validator, which is attempting to check for the existence of a Java FX class to see if it should enable Java FX validation. This then causes problems as these classes are linked against ghost classes with the wrong signature resulting in a MalformedParameterizedTypeException.", "url": "https://github.com/oracle/graal/issues/851", "user": "stuartwdouglas", "labels": ["bug", "native-image"], "created": "2018-12-10 00:44:39", "closed": "2018-12-22 00:29:28", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "Memory leak in js code using hashmaps and high cardinality properties", "body": "Memory leak in graal RC9 for code using javascript hash maps and high-cardinality properties like that:\r\n\r\n```javascript\r\nconst UUID = Packages.java.util.UUID;\r\n\r\nsetInterval(() => {\r\n    const a = {};\r\n    a[UUID.randomUUID().toString()] = 1;\r\n}, 1);\r\n```\r\n\r\nMemory starts growing until the heap is completely exhausted. This is a show stopper for most js applications.\r\n\r\n![graaljs-heapdump](https://user-images.githubusercontent.com/15331945/49244750-8b4a6d00-f3de-11e8-95e5-c680bd010c32.png)\r\n", "url": "https://github.com/oracle/graal/issues/832", "user": "victor-smirnov", "labels": ["bug", "javascript"], "created": "2018-11-29 19:19:38", "closed": "2019-03-19 14:34:10", "commits": {}, "ttf": 109.00027777777778, "commitsDetails": []}, {"title": "[native-image]VMError.shouldNotReachHere: javax.crypto.JceSecurity.getCodeBase(Class) is reached at runtime", "body": "I created a Java class to handle csv file, compile and native-image succeed with following command:\r\n```\r\n[root@localhost yuyin]# javac -cp .:commons-lang-2.6.jar:javacsv-2.0.jar:fastjson-1.2.47.jar TranslateMe.java \r\nNote: TranslateMe.java uses unchecked or unsafe operations.\r\nNote: Recompile with -Xlint:unchecked for details.\r\n[root@localhost yuyin]# native-image -cp .:commons-lang-2.6.jar:javacsv-2.0.jar:fastjson-1.2.47.jar:springfox-spring-web-2.9.2.jar:commons-codec-1.9.jar:guava-19.0.jar TranslateMe\r\nBuild on Server(pid: 12073, port: 39356)\r\n[translateme:12073]    classlist:   1,817.08 ms\r\n[translateme:12073]        (cap):   1,476.90 ms\r\n[translateme:12073]        setup:   2,083.27 ms\r\n[translateme:12073]   (typeflow):  12,302.75 ms\r\n[translateme:12073]    (objects):   2,678.75 ms\r\n[translateme:12073]   (features):     167.29 ms\r\n[translateme:12073]     analysis:  15,521.68 ms\r\n[translateme:12073]     universe:     700.79 ms\r\n[translateme:12073]      (parse):   4,576.88 ms\r\n[translateme:12073]     (inline):   4,462.09 ms\r\n[translateme:12073]    (compile):  36,130.38 ms\r\n[translateme:12073]      compile:  45,809.76 ms\r\n[translateme:12073]        image:     875.62 ms\r\n[translateme:12073]        write:     297.93 ms\r\n[translateme:12073]      [total]:  67,160.56 ms\r\n```\r\n\r\nBut the error threw when I executed the native image;\r\n\r\n```\r\n[root@localhost yuyin]# ./translateme 20181127090023.csv text.csv category.csv \r\nVMError.shouldNotReachHere: javax.crypto.JceSecurity.getCodeBase(Class) is reached at runtime. This should not happen. The contents of JceSecurity.verificationResults are computed and cached at image build time.\r\n\r\nJavaFrameAnchor dump:\r\n\r\n  No anchors\r\n  \r\nDeoptStubPointer address: 0000000000000000\r\n\r\nTopFrame info:\r\n\r\n  Lookup TotalFrameSize in CodeInfoTable:\r\n  SourceTotalFrameSize 96\r\n  \r\nVMThreads info:\r\n\r\n  VMThread 000000000155a050  STATUS_IN_JAVA (safepoints disabled)  java.lang.Thread@0x7f4e35815eb8\r\n  \r\nVM Thread State for current thread 000000000155a050:\r\n\r\n  0 (8 bytes): com.oracle.svm.jni.JNIThreadLocalEnvironment.jniFunctions = (bytes) \r\n    000000000155a050: 0000000000000000\r\n  \r\n  8 (32 bytes): com.oracle.svm.core.genscavenge.ThreadLocalAllocation.pinnedTLAB = (bytes) \r\n    000000000155a058: 0000000000000000 0000000000000000\r\n    000000000155a068: 0000000000000000 0000000000000000\r\n    \r\n  \r\n  40 (32 bytes): com.oracle.svm.core.genscavenge.ThreadLocalAllocation.regularTLAB = (bytes) \r\n    000000000155a078: 00007f4e35c00000 00007f4e35d00000\r\n    000000000155a088: 00007f4e35cc9aa8 0000000000000000\r\n    \r\n  \r\n  72 (8 bytes): com.oracle.svm.core.genscavenge.ThreadLocalAllocation.freeList = (Word) 0  0000000000000000\r\n  80 (8 bytes): com.oracle.svm.core.stack.JavaFrameAnchors.lastAnchor = (Word) 0  0000000000000000\r\n  88 (8 bytes): com.oracle.svm.core.thread.VMThreads.IsolateTL = (Word) 139973878173696  00007f4e35495000\r\n  96 (8 bytes): com.oracle.svm.core.thread.VMThreads.OSThreadIdTL = (Word) 140008257120064  00007f56366e6740\r\n  104 (8 bytes): com.oracle.svm.core.thread.VMThreads.nextTL = (Word) 0  0000000000000000\r\n  112 (4 bytes): com.oracle.svm.core.genscavenge.PinnedAllocatorImpl.openPinnedAllocator = (Object) null\r\n  116 (4 bytes): com.oracle.svm.core.heap.NoAllocationVerifier.openVerifiers = (Object) null\r\n  120 (4 bytes): com.oracle.svm.core.jdk.IdentityHashCodeSupport.hashCodeGeneratorTL = (Object) null\r\n  124 (4 bytes): com.oracle.svm.core.snippets.SnippetRuntime.currentException = (Object) null\r\n  128 (4 bytes): com.oracle.svm.core.thread.JavaThreads.currentThread = (Object) java.lang.Thread  00007f4e35815eb8\r\n  132 (4 bytes): com.oracle.svm.core.thread.ThreadingSupportImpl.activeTimer = (Object) null\r\n  136 (4 bytes): com.oracle.svm.jni.JNIThreadLocalHandles.handles = (Object) null\r\n  140 (4 bytes): com.oracle.svm.jni.JNIThreadLocalPendingException.pendingException = (Object) null\r\n  144 (4 bytes): com.oracle.svm.jni.JNIThreadLocalPinnedObjects.pinnedObjectsListHead = (Object) null\r\n  148 (4 bytes): com.oracle.svm.jni.JNIThreadOwnedMonitors.ownedMonitors = (Object) null\r\n  152 (4 bytes): com.oracle.svm.core.thread.Safepoint.safepointRequested = (int) -1694969  ffe62307\r\n  156 (4 bytes): com.oracle.svm.core.thread.Safepoint.safepointRequestedValueBeforeSafepoint = (int) 0  00000000\r\n  160 (4 bytes): com.oracle.svm.core.thread.ThreadingSupportImpl.currentPauseDepth = (int) 0  00000000\r\n  164 (4 bytes): com.oracle.svm.core.thread.VMOperationControl.isLockOwner = (int) 0  00000000\r\n  168 (4 bytes): com.oracle.svm.core.thread.VMThreads$StatusSupport.safepointsDisabledTL = (int) 1  00000001\r\n  172 (4 bytes): com.oracle.svm.core.thread.VMThreads$StatusSupport.statusTL = (int) 1  00000001\r\n  \r\nVMOperation dump:\r\n\r\n  No VMOperation in progress\r\n  \r\n\r\nRuntimeCodeCache dump:\r\n\r\n  == [Recent RuntimeCodeCache operations: ]\r\n  \r\n  == [RuntimeCodeCache: 0 methods]\r\n  \r\nDeoptimizer dump:\r\n\r\n  == [Recent Deoptimizer Events: \r\n  ]\r\n  \r\nDump Counters:\r\n\r\n  \r\nRaw Stacktrace:\r\n\r\n  00007ffe385fbb20: 00007f4e35cc9798 00000000006ff5ff\r\n  00007ffe385fbb30: 00007f4e35c97e20 00000000004fc184\r\n  00007ffe385fbb40: 00007f4e35cc9928 0000002b35cc9688\r\n  00007ffe385fbb50: 000000b735cc9798 00007f4e356e9220\r\n  00007ffe385fbb60: 00007f4e3577d518 00007f4e35495000\r\n  00007ffe385fbb70: 00007f4e35cc9918 000000000054f67f\r\n  00007ffe385fbb80: 00000000000000b7 00007f4e35cc9798\r\n  00007ffe385fbb90: 00007f4e35cc9918 000000000052c783\r\n  00007ffe385fbba0: 00007f4e35870518 000000070007b6a3\r\n  00007ffe385fbbb0: 00007f4e35cc9918 00007f4e35cc96f0\r\n  00007ffe385fbbc0: 00007f4e356f04f8 00000000007e3af4\r\n  00007ffe385fbbd0: 00007f4e35c89420 000000000074d3e1\r\n  00007ffe385fbbe0: 00007f4e35c8a598 00007f4e357778d8\r\n  00007ffe385fbbf0: 00007f4e3581a2c0 00007f4e35495000\r\n  00007ffe385fbc00: 00007f4e3581a2a0 00007f4e356f0480\r\n  00007ffe385fbc10: 00007f4e35870518 00000000004fa35c\r\n  00007ffe385fbc20: 0005739135c89328 00007f4e35c8a4c0\r\n  00007ffe385fbc30: 00007f4e35870518 0000000035495000\r\n  00007ffe385fbc40: 00007f4e35cbb1a0 00007f4e35c8a598\r\n  00007ffe385fbc50: 00007f4e35c8a588 00007f4e35c8a558\r\n  00007ffe385fbc60: 00007f4e3574e5d0 00007f4e356e8f48\r\n  00007ffe385fbc70: 00049ea235c88898 0000000000000005\r\n  00007ffe385fbc80: 0000000535814a30 00007f4e35c84b88\r\n  00007ffe385fbc90: 00007f4e356e5640 00000000004082d7\r\n  00007ffe385fbca0: 00007f4e35495000 0000000000540e03\r\n  00007ffe385fbcb0: 00007f4e3586eb18 00000000007f7a5b\r\n  00007ffe385fbcc0: 0000000000000000 0000000000000000\r\n  00007ffe385fbcd0: 00007ffe385fbd10 00007ffe385fbcb0\r\n  00007ffe385fbce0: 0000000000000000 000000000053fc13\r\n  00007ffe385fbcf0: 00007f4e35495000 00007f4e35c8a528\r\n  00007ffe385fbd00: 00007f4e35c88898 00007f4e35c893e8\r\n  00007ffe385fbd10: 000fe87d00501ea0 00007f4e35c883b8\r\n  00007ffe385fbd20: 0006ff3a0006ff3a 000fdebc0006ff3a\r\n  00007ffe385fbd30: 00007f4e358149d0 00007f4e358149d0\r\n  00007ffe385fbd40: 00007f4e358149d0 00007f4e35c845e0\r\n  00007ffe385fbd50: 00007f4e35c845c0 00007f4e358149d0\r\n  00007ffe385fbd60: 00007f4e356e55f0 000fdeaf00000002\r\n  00007ffe385fbd70: 000fde96000fdea2 00007f4e35c84578\r\n  00007ffe385fbd80: 00007f4e35c84510 00007f4e35c844b0\r\n  00007ffe385fbd90: 00007f4e35c862d8 00007f4e35814a10\r\n  00007ffe385fbda0: 00007f4e35c7d368 00007f4e356e55d0\r\n  00007ffe385fbdb0: 00007f4e356c7180 00007f4e3574eda8\r\n  00007ffe385fbdc0: 00007f4e35911798 00007f4e35911768\r\n  00007ffe385fbdd0: 00007f4e35911738 00007f4e3574ec88\r\n  00007ffe385fbde0: 00007f4e35911598 00007f4e3590a6a8\r\n  00007ffe385fbdf0: 00007f4e35908350 0000000b00000003\r\n  00007ffe385fbe00: 00007f4e35901098 00000000004fac4e\r\n  00007ffe385fbe10: 00007f4e354953a8 00007f4e35495000\r\n  00007ffe385fbe20: 000000b000000000 0000000000527149\r\n  00007ffe385fbe30: 00007f4e35901098 00007f4e35901098\r\n  00007ffe385fbe40: 00007f4e356e8f88 00007ffe385fbf98\r\n  00007ffe385fbe50: 0000000435495000 0000000000501769\r\n  00007ffe385fbe60: 00007f56362c4870 0000000000f0b5ff\r\n  00007ffe385fbe70: 0000000000000001 00007ffe385fbf98\r\n  00007ffe385fbe80: 00000004385fbeb0 0000000000000000\r\n  00007ffe385fbe90: 0000000000000000 0000000000000000\r\n  00007ffe385fbea0: 00007ffe385fbf90 0000000000402000\r\n  00007ffe385fbeb0: 0000000000000000 00007f56356ba445\r\n  00007ffe385fbec0: 0000002000000000 00007ffe385fbf98\r\n  00007ffe385fbed0: 0000000400000000 00000000005016f0\r\n  00007ffe385fbee0: 0000000000000000 31682007716fe0c5\r\n  00007ffe385fbef0: 0000000000402000 00007ffe385fbf90\r\n  00007ffe385fbf00: 0000000000000000 0000000000000000\r\n  00007ffe385fbf10: ce9450b80cefe0c5 cfc44ad03695e0c5\r\n  \r\nStacktrace Stage0:\r\n\r\n  RSP 00007ffe385fbb20 RIP 000000000052e834 FrameSize 96\r\n  RSP 00007ffe385fbb80 RIP 000000000054f67f FrameSize 32\r\n  RSP 00007ffe385fbba0 RIP 000000000052c783 FrameSize 48\r\n  RSP 00007ffe385fbbd0 RIP 00000000007e3af4 FrameSize 80\r\n  RSP 00007ffe385fbc20 RIP 00000000004fa35c FrameSize 128\r\n  RSP 00007ffe385fbca0 RIP 00000000004082d7 FrameSize 368\r\n  RSP 00007ffe385fbe10 RIP 00000000004fac4e FrameSize 80\r\n  RSP 00007ffe385fbe60 RIP 0000000000501769 FrameSize 1\r\n  \r\nStacktrace Stage1:\r\n\r\n  RSP 00007ffe385fbb20 RIP 000000000052e834  com.oracle.svm.core.code.ImageCodeInfo@0x7f4e35755be0 name = image code\r\n  RSP 00007ffe385fbb80 RIP 000000000054f67f  com.oracle.svm.core.code.ImageCodeInfo@0x7f4e35755be0 name = image code\r\n  RSP 00007ffe385fbba0 RIP 000000000052c783  com.oracle.svm.core.code.ImageCodeInfo@0x7f4e35755be0 name = image code\r\n  RSP 00007ffe385fbbd0 RIP 00000000007e3af4  com.oracle.svm.core.code.ImageCodeInfo@0x7f4e35755be0 name = image code\r\n  RSP 00007ffe385fbc20 RIP 00000000004fa35c  com.oracle.svm.core.code.ImageCodeInfo@0x7f4e35755be0 name = image code\r\n  RSP 00007ffe385fbca0 RIP 00000000004082d7  com.oracle.svm.core.code.ImageCodeInfo@0x7f4e35755be0 name = image code\r\n  RSP 00007ffe385fbe10 RIP 00000000004fac4e  com.oracle.svm.core.code.ImageCodeInfo@0x7f4e35755be0 name = image code\r\n  RSP 00007ffe385fbe60 RIP 0000000000501769  com.oracle.svm.core.code.ImageCodeInfo@0x7f4e35755be0 name = image code\r\n  \r\nFull Stacktrace:\r\n\r\n  RSP 00007ffe385fbb20 RIP 000000000052e834  [image code] com.oracle.svm.core.jdk.VMErrorSubstitutions.shutdown(VMErrorSubstitutions.java:146)\r\n  RSP 00007ffe385fbb80 RIP 000000000054f67f  [image code] com.oracle.svm.core.jdk.Target_com_oracle_svm_core_util_VMError.shouldNotReachHere(VMErrorSubstitutions.java:63)\r\n  RSP 00007ffe385fbba0 RIP 000000000052c783  [image code] com.oracle.svm.core.jdk.JceSecurityUtil.shouldNotReach(SecuritySubstitutions.java:270)\r\n  RSP 00007ffe385fbbd0 RIP 00000000007e3af4  [image code] com.oracle.svm.core.jdk.Target_javax_crypto_JceSecurity.getCodeBase(SecuritySubstitutions.java:236)\r\n  RSP 00007ffe385fbbd0 RIP 00000000007e3af4  [image code] javax.crypto.JceSecurity.getVerificationResult(JceSecurity.java:189)\r\n  RSP 00007ffe385fbc20 RIP 00000000004fa35c  [image code] javax.crypto.JceSecurity.canUseProvider(JceSecurity.java:204)\r\n  RSP 00007ffe385fbc20 RIP 00000000004fa35c  [image code] javax.crypto.SecretKeyFactory.nextSpi(SecretKeyFactory.java:295)\r\n  RSP 00007ffe385fbc20 RIP 00000000004fa35c  [image code] javax.crypto.SecretKeyFactory.<init>(SecretKeyFactory.java:121)\r\n  RSP 00007ffe385fbc20 RIP 00000000004fa35c  [image code] javax.crypto.SecretKeyFactory.getInstance(SecretKeyFactory.java:160)\r\n  RSP 00007ffe385fbca0 RIP 00000000004082d7  [image code] TranslateMe.main(TranslateMe.java:116)\r\n  RSP 00007ffe385fbe10 RIP 00000000004fac4e  [image code] com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:164)\r\n  RSP 00007ffe385fbe60 RIP 0000000000501769  [image code] com.oracle.svm.core.code.CEntryPointCallStubs.com_002eoracle_002esvm_002ecore_002eJavaMainWrapper_002erun_0028int_002corg_002egraalvm_002enativeimage_002ec_002etype_002eCCharPointerPointer_0029(generated:0)\r\n  \r\n[Native image heap boundaries: \r\n  ReadOnly Primitives: 0x7f4e35495008 .. 0x7f4e356e4b50\r\n  ReadOnly References: 0x7f4e356e5528 .. 0x7f4e3577a998\r\n  Writable Primitives: 0x7f4e3577b000 .. 0x7f4e358147e0\r\n  Writable References: 0x7f4e358147f0 .. 0x7f4e35890538]\r\n\r\n\r\n[Heap:\r\n  [Young generation: \r\n    [youngSpace:\r\n      aligned: 0/0 unaligned: 0/0]]\r\n  [Old generation: \r\n    [fromSpace:\r\n      aligned: 0/0 unaligned: 0/0]\r\n    [toSpace:\r\n      aligned: 0/0 unaligned: 0/0]\r\n    [pinnedFromSpace:\r\n      aligned: 0/0 unaligned: 0/0]\r\n    [pinnedToSpace:\r\n      aligned: 0/0 unaligned: 0/0]]\r\n  [Unused:\r\n    aligned: 0/0]]\r\n\r\n[root@localhost yuyin]# \r\n```", "url": "https://github.com/oracle/graal/issues/824", "user": "mahaoboy", "labels": ["bug", "native-image"], "created": "2018-11-27 02:58:39", "closed": "2019-03-05 16:58:00", "commits": {}, "ttf": 98.00027777777778, "commitsDetails": []}, {"title": "Truffle crash", "body": "Doing \r\n\r\n      Polyglot.eval(\"R\", \"dev.control(displaylist = 'enable')\")\r\n\r\nworks fine, but the following is crashing truffle:\r\n\r\n        Polyglot.eval(\"R\", \"dev.control(displaylist = 'inhibit')\")\r\n\r\nFailure/Error: Polyglot.eval(\"R\", \"dev.control(displaylist = 'inhibit')\")\r\n\r\nRuntimeError:\r\n  java.lang.ClassCastException: com.oracle.truffle.r.runtime.data.RNull cannot be cast to com.oracle.truffle.r.runtime.data.RList (RInternalError)\r\n      from com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:321)\r\n      from org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:289)\r\n      from org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:278)\r\n      from org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:265)\r\n      from org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:247)\r\n      from org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:230)\r\n      from org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:88)\r\n      from org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:72)\r\n      from com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)\r\n      from com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1157)\r\n  Caused by:\r\n  com.oracle.truffle.r.runtime.data.RNull cannot be cast to com.oracle.truffle.r.runtime.data.RList (ClassCastException)\r\n      from com.oracle.truffle.r.library.fastrGrid.FastRGridExternalLookup.lambda$lookupDotCall$1(FastRGridExternalLookup.java:172)\r\n      from com.oracle.truffle.r.library.fastrGrid.GridStateSetNode.execute(GridStateSetNode.java:52)\r\n      from com.oracle.truffle.r.nodes.builtin.RExternalBuiltinNode$Arg1.call(RExternalBuiltinNode.java:88)\r\n      from com.oracle.truffle.r.nodes.builtin.RExternalBuiltinNode.call(RExternalBuiltinNode.java:40)\r\n      from com.oracle.truffle.r.nodes.builtin.base.foreign.CallAndExternalFunctions$DotCall.doExternal(CallAndExternalFunctions.java:645)\r\n      from com.oracle.truffle.r.nodes.builtin.base.foreign.CallAndExternalFunctionsFactory$DotCallNodeGen.executeAndSpecialize(CallAndExternalFunctionsFactory.java:156)\r\n      from com.oracle.truffle.r.nodes.builtin.base.foreign.CallAndExternalFunctionsFactory$DotCallNodeGen.execute(CallAndExternalFunctionsFactory.java:113)\r\n      from com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg3.call(RBuiltinNode.java:200)\r\n      from com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1100)\r\n      from com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:882)", "url": "https://github.com/oracle/graal/issues/796", "user": "rbotafogo", "labels": ["bug"], "created": "2018-11-09 14:52:51", "closed": "2018-11-12 12:35:24", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "NullPointerException in native-image compilation with 1.0-RC8", "body": "_Originally posted by @Jiri-Kremser in https://github.com/oracle/graal/issues/582#issuecomment-434704242_\r\n\r\nI am hitting the same issue with graalvm-ce-1.0.0-rc8.\r\n\r\n```\r\ngit clone https://github.com/radanalyticsio/spark-operator\r\ncd spark-operator && mvn clean install\r\nnative-image -H:Name=micro -J-Xmx4G -J-Xms4G -H:+JNI -H:EnableURLProtocols=https -H:+ReportUnsupportedElementsAtRuntime -jar ./target/spark-operator-*.jar\r\n\r\n...\r\n[spark-operator-0.2.1-SNAPSHOT:16909]    (compile):   7,453.18 ms\r\n[spark-operator-0.2.1-SNAPSHOT:16909]      compile:  11,454.29 ms\r\nfatal error: java.lang.NullPointerException\r\n\tat com.oracle.svm.hosted.code.CompileQueue.defaultCompileFunction(CompileQueue.java:896)\r\n\tat com.oracle.svm.hosted.code.CompileQueue.doCompile(CompileQueue.java:882)\r\n\tat com.oracle.svm.hosted.code.CompileQueue$CompileTask.run(CompileQueue.java:257)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:174)\r\n\tat java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\n```", "url": "https://github.com/oracle/graal/issues/769", "user": "peter-hofer", "labels": ["bug", "native-image"], "created": "2018-10-31 17:36:37", "closed": "2018-11-29 06:20:48", "commits": {}, "ttf": 28.00027777777778, "commitsDetails": []}, {"title": "native-image fails to compile PostgreSQL JDBC client.", "body": "When I try to create a native image of a trivial app that connects to postgres I get somewhat cryptic errors \"Parameter _X_ of _method_ has declared type _classImpl_ which is incompatible with types in state:\".\r\n\r\n```\r\nerror: unsupported features in 48 methods\r\nDetailed message:\r\nError: Parameter 0 of org.postgresql.core.SetupQueryRunner.run(QueryExecutor, String, boolean) has declared type org.postgresql.core.QueryExecutor which is incompatible with types in state: 1TypeMObject<[0x0000096E00008CDF:!S:QueryExecutorImpl]>\r\nCall path from entry point to org.postgresql.core.SetupQueryRunner.run(QueryExecutor, String, boolean): \r\n\tat org.postgresql.core.SetupQueryRunner.run(SetupQueryRunner.java:43)\r\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.isMaster(ConnectionFactoryImpl.java:745)\r\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:256)\r\n\tat org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)\r\n\tat org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:195)\r\n\tat org.postgresql.Driver.makeConnection(Driver.java:454)\r\n\tat org.postgresql.Driver.connect(Driver.java:256)\r\n\tat java.sql.DriverManager.getConnection(DriverManager.java:664)\r\n\tat java.sql.DriverManager.getConnection(DriverManager.java:270)\r\n\tat lumgraal.App.main(App.java:18)\r\n\tat com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:163)\r\n\tat com.oracle.svm.core.code.CEntryPointCallStubs.com_002eoracle_002esvm_002ecore_002eJavaMainWrapper_002erun_0028int_002corg_002egraalvm_002enativeimage_002ec_002etype_002eCCharPointerPointer_0029(generated:0)\r\n...\r\n```\r\n\r\nWhat is the problem and what is a suggested workaround?\r\n\r\nThe repo to reproduce the issue: [https://github.com/katox/graal-pg-client](https://github.com/katox/graal-pg-client)", "url": "https://github.com/oracle/graal/issues/727", "user": "katox", "labels": ["bug", "native-image"], "created": "2018-10-08 17:09:29", "closed": "2019-03-11 09:57:43", "commits": {}, "ttf": 153.00027777777777, "commitsDetails": []}, {"title": "NPE when running native-image tool", "body": "I get an NPE when building this project: https://github.com/OlegIlyenko/sangria-http4s-graalvm-example/issues/2. The issue contains the original stacktrace. \r\n\r\nIt should be reproducible since it uses a docker image for graal: https://github.com/OlegIlyenko/sangria-http4s-graalvm-example/blob/65e84d6c8e00724cfa4ce87edff704e776fb79b6/packaging.sbt#L56 \r\n\r\nThe image generation can be run via the 'nativeImage' task: `sbt nativeImage`.", "url": "https://github.com/oracle/graal/issues/723", "user": "joprice", "labels": ["bug", "native-image"], "created": "2018-10-06 20:11:09", "closed": "2018-12-03 17:23:55", "commits": {}, "ttf": 57.000277777777775, "commitsDetails": []}, {"title": "Error while compiling ", "body": "I'm trying to compile a example real life application with GraalVM, but I'm getting \r\n\r\n```\r\nerror: should not reach here: Could not find field java.util.zip.ZipEntry.name on class sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry\r\nError: Image building with exit status 1\r\n```\r\n\r\nI've no idea where to go from here.\r\n\r\nReproducible via https://github.com/marcust/jzenith/tree/experimental/graalvm\r\n\r\nany of the `jzenith-example` fat jars, eg:\r\n```\r\n/opt/graalvm/bin/native-image  --verbose  --no-server  -Dio.netty.noUnsafe=true   -H:ReflectionConfigurationFiles=../../jzenith-graalvm-extras/reflectconfigs/netty.json  -H:+ReportUnsupportedElementsAtRuntime  -Dfile.encoding=UTF-8  -jar target/jzenith-example-mysql-0.1-SNAPSHOT-fat.jar \r\n```\r\n", "url": "https://github.com/oracle/graal/issues/690", "user": "marcust", "labels": ["bug", "native-image"], "created": "2018-09-25 18:29:51", "closed": "2018-09-27 23:26:21", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "NoClassDefFoundError: kotlin/reflect/KParameter", "body": "This is new with image generation for a minimal Spring Boot app in rc6:\r\n\r\n```\r\nfatal error: java.lang.NoClassDefFoundError: kotlin/reflect/KParameter\r\n\tat java.lang.Class.getDeclaredMethods0(Native Method)\r\n\tat java.lang.Class.privateGetDeclaredMethods(Class.java:2701)\r\n\tat java.lang.Class.getDeclaredMethods(Class.java:1975)\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.toJava(HotSpotResolvedJavaMethodImpl.java:611)\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getAnnotation(HotSpotResolvedJavaMethodImpl.java:537)\r\n\tat com.oracle.svm.hosted.cenum.CEnumCallWrapperSubstitutionProcessor.lookup(CEnumCallWrapperSubstitutionProcessor.java:51)\r\n...\r\n```\r\n\r\nSource code and README: https://github.com/dsyer/spring-boot-aot.", "url": "https://github.com/oracle/graal/issues/656", "user": "dsyer", "labels": ["bug", "native-image"], "created": "2018-09-04 07:02:18", "closed": "2019-02-07 23:27:32", "commits": {}, "ttf": 156.00027777777777, "commitsDetails": []}, {"title": "NullPointerException in Inflation.checkType()", "body": "This happens on native image generation with rc6 (but not rc5):\r\n\r\n```\r\n...\r\nCaused by: java.lang.NullPointerException\r\n\tat com.oracle.svm.hosted.analysis.Inflation.checkType(Inflation.java:139)\r\n\tat java.lang.Iterable.forEach(Iterable.java:75)\r\n\tat java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)\r\n\tat com.oracle.svm.hosted.analysis.Inflation.checkObjectGraph(Inflation.java:130)\r\n\tat com.oracle.graal.pointsto.BigBang.checkObjectGraph(BigBang.java:590)\r\n\tat com.oracle.graal.pointsto.BigBang.finish(BigBang.java:562)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:690)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:401)\r\n...\r\n```\r\n\r\nSource code with README: https://github.com/dsyer/spring-boot-micro-apps (master branch, `BuncApplication` main class).", "url": "https://github.com/oracle/graal/issues/655", "user": "dsyer", "labels": ["bug", "native-image"], "created": "2018-09-04 06:55:13", "closed": "2019-02-04 07:24:59", "commits": {}, "ttf": 153.00027777777777, "commitsDetails": []}, {"title": "NPE in image generation", "body": "```\r\nfatal error: org.graalvm.compiler.debug.GraalError: java.lang.NullPointerException\r\n\tat method: Object io.agroal.pool.ConnectionPool$ConnectionHandlerThreadLocal.initialValue()  [Virtual call from Object ThreadLocal.setInitialValue(), callTarget Object ThreadLocal.initialValue()]\r\n\tat com.oracle.svm.hosted.code.CompileQueue.defaultCompileFunction(CompileQueue.java:956)\r\n\tat com.oracle.svm.hosted.code.CompileQueue.doCompile(CompileQueue.java:882)\r\n\tat com.oracle.svm.hosted.code.CompileQueue$CompileTask.run(CompileQueue.java:257)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:174)\r\n\tat java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: java.lang.NullPointerException\r\n\tat org.graalvm.compiler.replacements.DefaultJavaLoweringProvider.insertAllocationBarrier(DefaultJavaLoweringProvider.java:933)\r\n\tat org.graalvm.compiler.replacements.DefaultJavaLoweringProvider.finishAllocatedObjects(DefaultJavaLoweringProvider.java:922)\r\n\tat org.graalvm.compiler.replacements.DefaultJavaLoweringProvider.lowerCommitAllocationNode(DefaultJavaLoweringProvider.java:850)\r\n\tat org.graalvm.compiler.replacements.DefaultJavaLoweringProvider.lower(DefaultJavaLoweringProvider.java:229)\r\n\tat com.oracle.svm.core.graal.meta.SubstrateBasicLoweringProvider.lower(SubstrateBasicLoweringProvider.java:143)\r\n\tat com.oracle.graal.enterprise.a.i.lower(stripped:139)\r\n\tat org.graalvm.compiler.nodes.virtual.CommitAllocationNode.lower(CommitAllocationNode.java:120)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase$Round.process(LoweringPhase.java:465)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase$Round.access$200(LoweringPhase.java:341)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase$Round$ProcessFrame.preprocess(LoweringPhase.java:405)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:564)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase$Round.run(LoweringPhase.java:390)\r\n\tat org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n\tat org.graalvm.compiler.phases.PhaseSuite.run(PhaseSuite.java:212)\r\n\tat org.graalvm.compiler.phases.common.IncrementalCanonicalizerPhase.run(IncrementalCanonicalizerPhase.java:56)\r\n\tat org.graalvm.compiler.phases.common.IncrementalCanonicalizerPhase.run(IncrementalCanonicalizerPhase.java:38)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase.lower(LoweringPhase.java:261)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase.run(LoweringPhase.java:254)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase.run(LoweringPhase.java:93)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n\tat org.graalvm.compiler.phases.PhaseSuite.run(PhaseSuite.java:212)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n\tat org.graalvm.compiler.core.GraalCompiler.emitFrontEnd(GraalCompiler.java:256)\r\n\tat org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:180)\r\n\tat org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:165)\r\n\tat com.oracle.svm.hosted.code.CompileQueue.defaultCompileFunction(CompileQueue.java:925)\r\n```\r\nI think the class that is causing problems is https://github.com/agroal/agroal/blob/master/agroal-pool/src/main/java/io/agroal/pool/ConnectionPool.java#L295\r\n\r\nThis is a problem on both RC5 and RC6", "url": "https://github.com/oracle/graal/issues/654", "user": "stuartwdouglas", "labels": ["bug", "native-image"], "created": "2018-09-04 01:07:51", "closed": "2019-03-15 02:19:02", "commits": {}, "ttf": 192.00027777777777, "commitsDetails": []}, {"title": "native-image: fails to create image when --language:js is included.", "body": "I have a small [Java project](https://github.com/renatoathaydes/rawhttp-scraper/tree/works-on-jvm-but-not-graalvm) that tries to run a JS script.\r\nI coded it against the old `ScriptManager` API and it works when running with HotSpot/Nashorn.\r\n\r\nIt also seems to work fine when I compile and run using GraalVM like a normal JVM.\r\n\r\n```\r\n./gradlew clean jar\r\njava -Dpolyglot.js.nashorn-compat=true -jar build/libs/rawhttp-scraper-1.0-SNAPSHOT.jar samples/requests/get-speakers samples/js/parseJson.js\r\n```\r\n\r\nNow, when I try to create a native image including the JS environment, it does not work:\r\n\r\n```\r\nnative-image --language:js -jar build/libs/rawhttp-scraper-1.0-SNAPSHOT.jar\r\n```\r\n\r\nError:\r\n\r\n```\r\nBuild on Server(pid: 58707, port: 52955)\r\n   classlist:     842.15 ms\r\n       (cap):   1,184.43 ms\r\n       setup:   1,778.32 ms\r\n    analysis:   1,104.00 ms\r\nfatal error: java.lang.NoClassDefFoundError: Could not initialize class rawhttp.core.RawHttpOptions\r\n\tat sun.misc.Unsafe.ensureClassInitialized(Native Method)\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.initialize(HotSpotResolvedObjectTypeImpl.java:382)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.createType(AnalysisUniverse.java:213)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookupAllowUnresolved(AnalysisUniverse.java:193)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookup(AnalysisUniverse.java:170)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisField.<init>(AnalysisField.java:104)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.createField(AnalysisUniverse.java:357)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookupAllowUnresolved(AnalysisUniverse.java:345)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookup(AnalysisUniverse.java:312)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisType.convertFields(AnalysisType.java:857)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisType.convertInstanceFields(AnalysisType.java:850)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisType.getInstanceFields(AnalysisType.java:841)\r\n\tat com.oracle.graal.pointsto.flow.context.object.AnalysisObject.getInstanceFieldTypeStore(AnalysisObject.java:209)\r\n\tat com.oracle.graal.pointsto.flow.context.object.AnalysisObject.getInstanceFieldFlow(AnalysisObject.java:199)\r\n\tat com.oracle.graal.pointsto.flow.LoadFieldTypeFlow$LoadInstanceFieldTypeFlow.onObservedUpdate(LoadFieldTypeFlow.java:159)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:347)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:389)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:500)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:174)\r\n\tat java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nError: Processing image build request failed\r\n```\r\n\r\nIf I do not include the `--language:js` argument, it creates the image, but then it does not find the JS script engine.\r\n\r\nIs there something I can do to work around the problem for now, or I will have to wait for a bug fix?\r\n", "url": "https://github.com/oracle/graal/issues/589", "user": "renatoathaydes", "labels": ["bug", "native-image"], "created": "2018-08-04 17:24:35", "closed": "2019-03-15 00:11:22", "commits": {}, "ttf": 222.00027777777777, "commitsDetails": []}, {"title": "DynamicHub.getProtectionDomain() fails at native image build time", "body": "While trying to get JAXB working I ran into the following error. It looks like this constructor that is being called from DynamicHub is not present on the substitution class.\r\n\r\nI am not really sure how this should actually work, but it seems like a bug that a substitution is referencing a constructor that has been removed.\r\n\r\n```\r\nError: com.oracle.graal.pointsto.constraints.UnsupportedFeatureException: Unsupported constructor java.security.ProtectionDomain.<init>(CodeSource, PermissionCollection) is reachable: The declaring class of this element has been substituted, but this element is not present in the substitution class\r\nTo diagnose the issue, you can add the option -H:+ReportUnsupportedElementsAtRuntime. The unsupported element is then reported at run time when it is accessed the first time.\r\nTrace:\r\n\tat parsing com.oracle.svm.core.hub.DynamicHub.getProtectionDomain(DynamicHub.java:941)\r\nCall path from entry point to java.lang.Class.getProtectionDomain():\r\n\tat com.oracle.svm.core.hub.DynamicHub.getProtectionDomain(DynamicHub.java:938)\r\n\tat com.sun.xml.bind.v2.runtime.reflect.opt.Injector.inject(Injector.java:311)\r\n\tat com.sun.xml.bind.v2.runtime.reflect.opt.Injector.inject(Injector.java:97)\r\n\tat com.sun.xml.bind.v2.runtime.reflect.opt.AccessorInjector.prepare(AccessorInjector.java:87)\r\n\tat com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedAccessorFactory.get(OptimizedAccessorFactory.java:179)\r\n\tat com.sun.xml.bind.v2.runtime.reflect.Accessor$FieldReflection.optimize(Accessor.java:285)\r\n\tat com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty.<init>(SingleMapNodeProperty.java:105)\r\n\tat com.oracle.svm.reflect.proxies.Proxy_3174_SingleMapNodeProperty_SingleMapNodeProperty.newInstance(Unknown Source)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.undertow.server.protocol.http.HttpRequestParser.instance(HttpRequestParser.java:219)\r\n\tat com.oracle.svm.reflect.proxies.Proxy_2750_HttpRequestParser_instance.invoke(Unknown Source)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:173)\r\n\tat com.oracle.svm.core.code.CEntryPointCallStubs.com_002eoracle_002esvm_002ecore_002eJavaMainWrapper_002erun_0028int_002corg_002egraalvm_002enativeimage_002ec_002etype_002eCCharPointerPointer_0029(generated:0)\r\n```", "url": "https://github.com/oracle/graal/issues/564", "user": "stuartwdouglas", "labels": ["bug", "native-image"], "created": "2018-07-23 23:50:07", "closed": "2018-09-28 00:06:05", "commits": {}, "ttf": 66.00027777777778, "commitsDetails": []}, {"title": "Native image compilation fails with ArrayIndexOutOfBoundsException", "body": "Stack trace:\r\n```\r\nanalysis:  91,812.37 ms\r\n2 fatal errors detected:\r\nfatal error: java.lang.IndexOutOfBoundsException: index -1\r\n\tat java.util.concurrent.atomic.AtomicReferenceArray.checkedByteOffset(AtomicReferenceArray.java:78)\r\n\tat java.util.concurrent.atomic.AtomicReferenceArray.get(AtomicReferenceArray.java:125)\r\n\tat com.oracle.graal.pointsto.flow.context.object.AnalysisObject.getInstanceFieldTypeStore(AnalysisObject.java:213)\r\n\tat com.oracle.graal.pointsto.flow.context.object.AnalysisObject.getInstanceFieldFlow(AnalysisObject.java:199)\r\n\tat com.oracle.graal.pointsto.flow.LoadFieldTypeFlow$LoadInstanceFieldTypeFlow.onObservedUpdate(LoadFieldTypeFlow.java:159)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:347)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:389)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:500)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:174)\r\n\tat java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\n```\r\n\r\nThis occurs while trying to substitute 3 public static methods like this:\r\n\r\n```\r\n@TargetClass(ServiceLoader.class)\r\n@Substitute\r\nfinal class Target_com_hazelcast_util_ServiceLoader {\r\n\r\n    @Substitute\r\n    public static <T> Iterator<T> iterator(Class<T> expectedType, String factoryId, ClassLoader classLoader) throws Exception {\r\n      ...\r\n    }\r\n\r\n    @Substitute\r\n    public static <T> Iterator<Class<T>> classIterator(Class<T> expectedType, String factoryId, ClassLoader classLoader)\r\n            throws Exception {\r\n...\r\n    }\r\n\r\n    @Substitute\r\n    public static <T> T load(Class<T> clazz, String factoryId, ClassLoader classLoader) throws Exception {\r\n...\r\n    }\r\n}\r\n```\r\n\r\nOriginal class is [`com.hazelcast.util.ServiceLoader`](https://github.com/hazelcast/hazelcast/blob/81a872c2588e1f47cf613b09943b0f7f96f107bb/hazelcast/src/main/java/com/hazelcast/util/ServiceLoader.java#L50).\r\n\r\n`java -version`:\r\n```\r\njava version \"1.8.0_172\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_172-b11)\r\nGraalVM 1.0.0-rc4 (build 25.71-b01-internal-jvmci-0.45, mixed mode)\r\n```\r\n\r\nI did try to debug this but running with a debugger attached takes ages on my machine.", "url": "https://github.com/oracle/graal/issues/551", "user": "vbekiaris", "labels": ["bug", "native-image"], "created": "2018-07-18 09:35:05", "closed": "2019-03-14 23:41:34", "commits": {}, "ttf": 239.00027777777777, "commitsDetails": []}, {"title": "Graal jrunscript does not work", "body": "Graal version: 1.0.0-rc3 (Mac OS X)\r\n\r\nGraal command:\r\njrunscript jrunscript.js\r\n\r\nScript (jrunscript.js)\r\nprint(\"Hello, jrunscript!\");\r\n\r\n\r\nGraal result:\r\nscript error in file <system-init> : org.graalvm.polyglot.PolyglotException: ReferenceError: java is not defined\r\nExit status: 10\r\n\r\nExpected result (JVM jrunscript)\r\nHello, jrunscript!\r\n", "url": "https://github.com/oracle/graal/issues/546", "user": "davidpcaldwell", "labels": ["bug"], "created": "2018-07-13 12:57:52", "closed": "2018-07-19 06:07:11", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Compilation error where classpath should exclude code path", "body": "This one is a bit strange because I can't reproduce it with a simple sample. If you try to compile a simple empty Spring Boot app it falls over like this:\r\n\r\n```\r\nBuild on Server(pid: 26395, port: 46211)\r\n   classlist:   2,385.00 ms\r\n       (cap):     654.30 ms\r\n       setup:     941.67 ms\r\n    analysis:   9,080.94 ms\r\nerror: Bytecode parsing error: java.lang.NoClassDefFoundError\r\nDetailed message:\r\nError: Bytecode parsing error: java.lang.NoClassDefFoundError\r\nTrace: \r\n\tat parsing org.springframework.boot.BeanDefinitionLoader.load(BeanDefinitionLoader.java:166)\r\nCall path from entry point to org.springframework.boot.BeanDefinitionLoader.load(BeanDefinitionLoader$GroovyBeanDefinitionSource): \r\n\tat org.springframework.boot.BeanDefinitionLoader.load(BeanDefinitionLoader.java:165)\r\n\tat org.springframework.boot.BeanDefinitionLoader.load(BeanDefinitionLoader.java:155)\r\n\tat org.springframework.boot.BeanDefinitionLoader.load(BeanDefinitionLoader.java:135)\r\n\tat org.springframework.boot.BeanDefinitionLoader.load(BeanDefinitionLoader.java:127)\r\n\tat org.springframework.boot.SpringApplication.load(SpringApplication.java:704)\r\n\tat org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:393)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:328)\r\n\tat org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:137)\r\n\tat com.example.demo.DemoApplication.main(DemoApplication.java:24)\r\n\tat com.oracle.svm.reflect.proxies.Proxy_84_DemoApplication_main.invoke(Unknown Source)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:173)\r\n\tat com.oracle.svm.core.code.CEntryPointCallStubs.com_002eoracle_002esvm_002ecore_002eJavaMainWrapper_002erun_0028int_002corg_002egraalvm_002enativeimage_002ec_002etype_002eCCharPointerPointer_0029(generated:0)\r\nOriginal exception that caused the problem: java.lang.NoClassDefFoundError\r\n\tat jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:387)\r\n\tat jdk.vm.ci.hotspot.HotSpotUnresolvedJavaType.resolve(HotSpotUnresolvedJavaType.java:91)\r\n\tat com.oracle.graal.pointsto.infrastructure.WrappedSignature.getReturnType(WrappedSignature.java:55)\r\n\tat com.oracle.graal.pointsto.flow.MethodFlowsGraph.<init>(MethodFlowsGraph.java:113)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.<init>(MethodTypeFlow.java:75)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisMethod.<init>(AnalysisMethod.java:127)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.createMethod(AnalysisUniverse.java:399)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookupAllowUnresolved(AnalysisUniverse.java:387)\r\n\tat com.oracle.graal.pointsto.infrastructure.WrappedConstantPool.lookupMethod(WrappedConstantPool.java:78)\r\n\tat org.graalvm.compiler.java.BytecodeParser.lookupMethod(BytecodeParser.java:3900)\r\n\tat org.graalvm.compiler.java.BytecodeParser.genInvokeInterface(BytecodeParser.java:1454)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:4813)\r\n\tat org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3114)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:2923)\r\n\tat org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:888)\r\n\tat org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:782)\r\n\tat org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:95)\r\n\tat org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:196)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:315)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:310)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:300)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:107)\r\n\tat com.oracle.graal.pointsto.flow.SpecialInvokeTypeFlow.onObservedUpdate(InvokeTypeFlow.java:421)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:347)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:389)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:500)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:174)\r\n\tat java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: java.lang.ClassNotFoundException: groovy.lang.Closure\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:381)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n\tat jdk.vm.ci.hotspot.CompilerToVM.lookupType(Native Method)\r\n\tat jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:379)\r\n\t... 35 more\r\n\r\nError: Processing image build request failed\r\n```\r\n\r\nThe missing class is not actually needed at runtime, but we can't compile so we never get to prove it. The offending code in Spring Boot is [here](https://github.com/spring-projects/spring-boot/blob/337d2d8e9a4a9b8f2e200dcb51a603c549d8583a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/BeanDefinitionLoader.java#L151) I think. Notice that the interface that depends on `groovy.lang.Closure` is never used if `isGroovyPresent()` is false.\r\n\r\nI tried to reproduce the problem with a simpler program and couldn't, so I'm out of ideas now. Maybe someone else can spot the different between the above code and this (which compiles and runs):\r\n\r\n```java\r\npublic class Missings {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tnew Missings().run(args);\r\n\t}\r\n\r\n\tprivate void run(String[] args) {\r\n\t\tClass<?> source = args.length > 0 ? ClassUtils.resolveClassName(args[0], null)\r\n\t\t\t\t: this.getClass();\r\n\t\tSystem.err.println(source + \" \" + isGroovyPresent());\r\n\t\tif (isGroovyPresent()\r\n\t\t\t\t&& GroovyBeanDefinitionSource.class.isAssignableFrom(source)) {\r\n\t\t\tGroovyBeanDefinitionSource loader = BeanUtils.instantiateClass(source,\r\n\t\t\t\t\tGroovyBeanDefinitionSource.class);\r\n\t\t\tload(loader);\r\n\t\t\tthrow new IllegalStateException(\r\n\t\t\t\t\t\"Not expecting to find GroovyBeanDefinitionSource\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate void load(GroovyBeanDefinitionSource loader) {\r\n\t\tSystem.err.println(loader);\r\n\t}\r\n\r\n\tprivate boolean isGroovyPresent() {\r\n\t\treturn ClassUtils.isPresent(\"groovy.lang.MetaClass\", null);\r\n\t}\r\n\r\n\t@FunctionalInterface\r\n\tprotected interface GroovyBeanDefinitionSource {\r\n\r\n\t\tClosure<?> getBeans();\r\n\r\n\t}\r\n}\r\n```", "url": "https://github.com/oracle/graal/issues/523", "user": "dsyer", "labels": ["bug", "native-image"], "created": "2018-07-05 09:33:44", "closed": "2019-02-04 06:50:44", "commits": {}, "ttf": 213.00027777777777, "commitsDetails": []}, {"title": "overloaded method selection does not look at argument types", "body": "When working in embeded mode, the JS engine does not look at the argument types when deciding which overloaded method to choose. Also using the nashorn notation to explicitly specify the overloaded method does not seem to be allowed.\r\n\r\nA full reproducer is here:\r\n\r\nhttps://gist.github.com/pmlopes/6021d34f920f8e24b391b38fcf1987e9\r\n\r\nIn this reproducer a Java object define an overloaded method which has the same arity but different argument types, the types are instantiated using:\r\n\r\n```js\r\nJava.type('FQCN')\r\n```\r\n\r\nSo at the engine level the type is known and not dynamic, when calling the method then this type seems to be ignored as due to the fact that the overloads have the same arity you'll see:\r\n\r\n```\r\nAn exception occured while executing the Java class. TypeError: \r\nINVOKE on JavaObject[bugs.Pool@39eb534c (bugs.Pool)] failed due to: \r\n\r\njava.lang.IllegalArgumentException: Multiple applicable overloads found for method name prepare \r\n\r\n(candidates: [\r\nMethod[public void bugs.Pool.prepare(java.lang.String,bugs.Tuple,bugs.Handler)],\r\nMethod[public void bugs.Pool.prepare(java.lang.String,java.util.stream.Collector,bugs.Handler)]\r\n],\r\n\r\narguments: [\r\nSELECT ... (String),\r\nJavaObject[bugs.Tuple@8b41341 (bugs.Tuple)] (JavaObject),\r\nDynamicObject<JSFunction>@daa14ca (DynamicObjectBasic)])\r\n```\r\n\r\nAs you can see form the arguments the types are known and could lead to a proper match. The last argument is a functional interface, so the match should also be valid as js functions are \"casted\" to functional interfaces by default.", "url": "https://github.com/oracle/graal/issues/502", "user": "pmlopes", "labels": ["bug"], "created": "2018-06-27 08:58:20", "closed": "2018-08-06 16:28:28", "commits": {}, "ttf": 40.000277777777775, "commitsDetails": []}, {"title": "ObjectStamp cannot be cast IntegerStamp", "body": "I have no idea what this means, or if there is a way for me to configure around it. Here's the error (when generating a native-image):\r\n\r\n```\r\nCaused by: java.lang.ClassCastException: org.graalvm.compiler.core.common.type.ObjectStamp cannot be cast to org.graalvm.compiler.core.common.type.IntegerStamp\r\n\tat org.graalvm.compiler.java.BytecodeParser.processReturnValue(BytecodeParser.java:2529)\r\n\tat org.graalvm.compiler.java.BytecodeParser.genReturn(BytecodeParser.java:2508)\r\n\tat com.oracle.svm.hosted.phases.SharedGraphBuilderPhase$SharedBytecodeParser.genReturn(SharedGraphBuilderPhase.java:349)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:4784)\r\n\tat org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3115)\r\n\t... 21 more\r\n```", "url": "https://github.com/oracle/graal/issues/497", "user": "dsyer", "labels": ["bug", "compiler"], "created": "2018-06-24 18:00:33", "closed": "2018-07-02 09:25:44", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "ClassNotFoundException: com.jcraft.jzlib.Deflater when generating native image", "body": "JZlib is not used or required by my app. Looks like maybe something Graal is trying to accesss?\r\n\r\n```\r\n$ native-image -H:Name=micro -H:ReflectionConfigurationFiles=netty_reflection_config.json --report-unsupported-elements-at-runtime -cp $CP com.example.micro.MicroApplication\r\nBuild on Server(pid: 24101, port: 33515)\r\n   classlist:   1,877.39 ms\r\n       (cap):   2,166.71 ms\r\n       setup:   2,645.74 ms\r\n    analysis:  20,473.22 ms\r\nfatal error: java.lang.NoClassDefFoundError\r\n\tat jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:389)\r\n\tat jdk.vm.ci.hotspot.HotSpotUnresolvedJavaType.resolve(HotSpotUnresolvedJavaType.java:91)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisField.<init>(AnalysisField.java:104)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.createField(AnalysisUniverse.java:357)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookupAllowUnresolved(AnalysisUniverse.java:345)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookup(AnalysisUniverse.java:312)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisType.convertFields(AnalysisType.java:857)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisType.convertInstanceFields(AnalysisType.java:850)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisType.getInstanceFields(AnalysisType.java:841)\r\n\tat com.oracle.graal.pointsto.flow.context.object.AnalysisObject.getInstanceFieldTypeStore(AnalysisObject.java:209)\r\n\tat com.oracle.graal.pointsto.flow.context.object.AnalysisObject.getInstanceFieldFlow(AnalysisObject.java:199)\r\n\tat com.oracle.graal.pointsto.flow.StoreFieldTypeFlow$StoreInstanceFieldTypeFlow.onObservedUpdate(StoreFieldTypeFlow.java:160)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:347)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:389)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:500)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:174)\r\n\tat java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: java.lang.ClassNotFoundException: com.jcraft.jzlib.Deflater\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:381)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n\tat jdk.vm.ci.hotspot.CompilerToVM.lookupType(Native Method)\r\n\tat jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:381)\r\n\t... 20 more\r\nError: Processing image build request failed\r\n```", "url": "https://github.com/oracle/graal/issues/494", "user": "dsyer", "labels": ["bug", "native-image"], "created": "2018-06-22 16:51:57", "closed": "2018-08-13 20:05:58", "commits": {}, "ttf": 52.000277777777775, "commitsDetails": []}, {"title": "InvalidPathException on Windows when trying to eval js", "body": "Despite Windows support not being fully available yet, I was told on gitter that Graal in its interpreted mode should already work on Windows on a stock JDK8 as long as the following .jars are on the classpath:  \r\n- graal-sdk-jar\r\n- truffle-api.jar\r\n- tregex.jar\r\n- graaljs.jar\r\n- graaljs-scriptengine.jar\r\n\r\nHowever there seems to be a bug causing an **InvalidPathException** when the context is being created so I was asked to report here as a bug. Here's the code:\r\n\r\n```\r\nimport javax.script.ScriptException;\r\nimport org.graalvm.polyglot.Context;\r\n\r\npublic class NewMain {\r\n\r\n    public static void main(String[] args) throws ScriptException {\r\n        org.graalvm.polyglot.Context context = Context.create(); //error here\r\n        context.eval(\"js\", \"console.log('hello');\");\r\n    }\r\n\r\n}\r\n```\r\nStacktrace:\r\n```\r\nException in thread \"main\" java.nio.file.InvalidPathException: Illegal char <:> at index 2: /C:/libs/graaljs.jar\r\n\tat sun.nio.fs.WindowsPathParser.normalize(WindowsPathParser.java:182)\r\n\tat sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:153)\r\n\tat sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)\r\n\tat sun.nio.fs.WindowsPath.parse(WindowsPath.java:94)\r\n\tat sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:255)\r\n\tat java.nio.file.Paths.get(Paths.java:84)\r\n\tat com.oracle.truffle.api.vm.LanguageCache.collectLanguages(LanguageCache.java:199)\r\n\tat com.oracle.truffle.api.vm.LanguageCache.createLanguages(LanguageCache.java:145)\r\n\tat com.oracle.truffle.api.vm.LanguageCache.languages(LanguageCache.java:135)\r\n\tat com.oracle.truffle.api.vm.PolyglotEngineImpl.initializeLanguages(PolyglotEngineImpl.java:403)\r\n\tat com.oracle.truffle.api.vm.PolyglotEngineImpl.<init>(PolyglotEngineImpl.java:153)\r\n\tat com.oracle.truffle.api.vm.PolyglotEngineImpl.<init>(PolyglotEngineImpl.java:135)\r\n\tat com.oracle.truffle.api.vm.PolyglotImpl.buildEngine(PolyglotImpl.java:177)\r\n\tat org.graalvm.polyglot.Engine$Builder.build(Engine.java:366)\r\n\tat org.graalvm.polyglot.Context$Builder.build(Context.java:976)\r\n\tat org.graalvm.polyglot.Context.create(Context.java:640)\r\n\tat NewMain.main(NewMain.java:9)\r\n```\r\nI'm on Windows 10 Pro Version 1803, running JDK1.8.0_111\r\n\r\n", "url": "https://github.com/oracle/graal/issues/469", "user": "newk5", "labels": ["bug", "javascript", "truffle"], "created": "2018-06-13 00:30:24", "closed": "2018-08-10 09:03:14", "commits": {"f183e313bb49949586cd6988b8808b35483e4760": {"commitGHEventType": "referenced", "commitUser": "dougxc"}}, "ttf": 58.000277777777775, "commitsDetails": [{"commitHash": "f183e313bb49949586cd6988b8808b35483e4760", "commitGHEventType": "referenced", "commitUser": "dougxc", "commitParents": ["941368b69a98f500b8c44d54b58b611c3997a909"], "nameRev": "f183e313bb49949586cd6988b8808b35483e4760 tags/JDK-8206992~28^2~2", "commitMessage": "[#469] Fix InvalidPathException on Windows. Use URL -> URI conversion instead of URL.getPath()\n", "commitDateTime": "2018-08-09 11:58:51", "authoredDateTime": "2018-07-25 17:08:11", "commitGitStats": [{"filePath": "truffle/src/com.oracle.truffle.api.vm/src/com/oracle/truffle/api/vm/LanguageCache.java", "insertions": 25, "deletions": 3, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LanguageCache.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.api.vm.LanguageCache.collectLanguages(java.lang.ClassLoader,java.util.List)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f183e313bb49949586cd6988b8808b35483e4760"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 25, "deletions": 3, "lines": 28, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["truffle/src/com.oracle.truffle.api.vm/src/com/oracle/truffle/api/vm"], "changesInPackagesSPOON": ["com.oracle.truffle.api.vm.LanguageCache.collectLanguages(java.lang.ClassLoader,java.util.List)"]}, {"title": "java.lang.NoClassDefFoundError: javax/servlet/http/HttpServletRequest", "body": "Encountered this trying to build a native image with the current master:\r\n\r\n```sh\r\nmx native-image --verbose -H:+ReportUnsupportedElementsAtRuntime -jar app.jar\r\n```\r\n\r\n`app.jar` is a (nontrivial) fat JAR created with Maven Shade. Let me know if I can provide any other useful information.\r\n\r\n```\r\n   classlist: 343,746.89 ms\r\n       (cap):   3,785.04 ms\r\n       setup:  15,238.60 ms\r\nSLF4J: Class path contains multiple SLF4J bindings.\r\nSLF4J: Found binding in [jar:file:/test/lib/slf4j-log4j12-1.7.21.jar!/org/slf4j/impl/StaticLoggerBinder.class]\r\nSLF4J: Found binding in [jar:file:/test/srcclr-3.0.3-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]\r\nSLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.\r\nSLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]\r\n    analysis: 356,936.42 ms\r\nerror: Bytecode parsing error: java.lang.NoClassDefFoundError: javax/servlet/http/HttpServletRequest\r\nDetailed message:\r\nError: Bytecode parsing error: java.lang.NoClassDefFoundError: javax/servlet/http/HttpServletRequest\r\nTrace:\r\n\tat parsing io.sentry.DefaultSentryClientFactory.createMarshaller(DefaultSentryClientFactory.java:478)\r\nCall path from entry point to io.sentry.DefaultSentryClientFactory.createMarshaller(Dsn):\r\n\tat io.sentry.DefaultSentryClientFactory.createMarshaller(DefaultSentryClientFactory.java:461)\r\n\tat io.sentry.DefaultSentryClientFactory.createStdOutConnection(DefaultSentryClientFactory.java:449)\r\n\tat io.sentry.DefaultSentryClientFactory.createConnection(DefaultSentryClientFactory.java:330)\r\n\tat io.sentry.DefaultSentryClientFactory.createSentryClient(DefaultSentryClientFactory.java:236)\r\n\tat io.sentry.SentryClientFactory.sentryClient(SentryClientFactory.java:64)\r\n\tat io.sentry.Sentry.init(Sentry.java:81)\r\n\tat io.sentry.Sentry.init(Sentry.java:44)\r\n\tat io.sentry.Sentry.getStoredClient(Sentry.java:102)\r\n\tat io.sentry.Sentry.capture(Sentry.java:177)\r\n\tat io.sentry.SentryUncaughtExceptionHandler.uncaughtException(SentryUncaughtExceptionHandler.java:55)\r\n\tat com.oracle.svm.core.thread.JavaThreads.dispatchUncaughtException(JavaThreads.java:485)\r\n\tat com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:175)\r\n\tat com.oracle.svm.core.code.CEntryPointCallStubs.com_002eoracle_002esvm_002ecore_002eJavaMainWrapper_002erun_0028int_002corg_002egraalvm_002enativeimage_002ec_002etype_002eCCharPointerPointer_0029(generated:0)\r\nOriginal exception that caused the problem: java.lang.NoClassDefFoundError: javax/servlet/http/HttpServletRequest\r\n\tat java.lang.Class.getDeclaredConstructors0(Native Method)\r\n\tat java.lang.Class.privateGetDeclaredConstructors(Class.java:2671)\r\n\tat java.lang.Class.getDeclaredConstructors(Class.java:2020)\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getDeclaredConstructors(HotSpotResolvedObjectTypeImpl.java:910)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisType.<init>(AnalysisType.java:164)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.createType(AnalysisUniverse.java:255)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookupAllowUnresolved(AnalysisUniverse.java:193)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookup(AnalysisUniverse.java:170)\r\n\tat com.oracle.graal.pointsto.meta.AnalysisUniverse.lookup(AnalysisUniverse.java:69)\r\n\tat com.oracle.graal.pointsto.infrastructure.WrappedConstantPool.lookupConstant(WrappedConstantPool.java:144)\r\n\tat org.graalvm.compiler.java.BytecodeParser.lookupConstant(BytecodeParser.java:3911)\r\n\tat org.graalvm.compiler.java.BytecodeParser.genLoadConstant(BytecodeParser.java:3639)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:4633)\r\n\tat org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3116)\r\n\tat org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:2925)\r\n\tat org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:887)\r\n\tat org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:781)\r\n\tat org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:95)\r\n\tat org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)\r\n\tat org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:196)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:315)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:310)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:300)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:107)\r\n\tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:186)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:347)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:389)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:500)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:174)\r\n\tat java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: java.lang.ClassNotFoundException: javax.servlet.http.HttpServletRequest\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:381)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n\t... 37 more\r\n\r\nError: Image building with exit status 1\r\n```", "url": "https://github.com/oracle/graal/issues/454", "user": "dariusf", "labels": ["bug", "native-image"], "created": "2018-06-06 16:50:05", "closed": "2019-02-04 06:33:28", "commits": {}, "ttf": 242.00027777777777, "commitsDetails": []}, {"title": "[bug report] multiple errors in scala/sbt/js project", "body": "I am trying to move the build process of the `scala/sbt/js` based project webknossos to GraalVM (scalableminds/webknossos#2647).\r\n\r\nThe compilation of the project works fine, but `sbt stage` (which involves js (e.g. webpack builds)) takes very long (> 50min, with OpenJDK/NodeJS ~3min) and has several errors, which can be seen in the [CI output](https://circleci.com/gh/scalableminds/webknossos/3737). A reduced version is appended below.\r\n\r\nThe CI uses a docker image which is built within this PR: scalableminds/dockerfiles#3\r\nThe GraalVM version is `ce-1.0.0-rc1`.\r\n\r\nI am not sure if I am missing something or those are bugs within graalvm/truffle. Are these issues known already? Any help in resolving those errors would be highly appreciated.\r\n\r\nThanks a lot!\r\n\r\n```\r\n[error] [truffle] opt fail         SortableSet <split-74ed4678>                                |Reason org.graalvm.compiler.code.SourceStackTraceBailoutException$1: Partial evaluation did not reduce value to a constant, is a regular compiler node: 2170|Pi \r\n[error] org.graalvm.compiler.code.SourceStackTraceBailoutException$1: Partial evaluation did not reduce value to a constant, is a regular compiler node: 2170|Pi\r\n[error] Caused by: org.graalvm.compiler.core.common.PermanentBailoutException: Partial evaluation did not reduce value to a constant, is a regular compiler node: 2170|Pi\r\n[error] \tat java.lang.Throwable.<init>(Throwable.java:265)\r\n[error] \tat java.lang.Exception.<init>(Exception.java:66)\r\n[error] \tat java.lang.RuntimeException.<init>(RuntimeException.java:62)\r\n[error] \tat jdk.vm.ci.code.BailoutException.<init>(BailoutException.java:66)\r\n[error] \tat org.graalvm.compiler.core.common.PermanentBailoutException.<init>(PermanentBailoutException.java:36)\r\n[error] \tat org.graalvm.compiler.replacements.PEGraphDecoder$PENonAppendGraphBuilderContext.bailout(PEGraphDecoder.java:242)\r\n[error] \tat org.graalvm.compiler.truffle.compiler.substitutions.TruffleGraphBuilderPlugins$19.apply(TruffleGraphBuilderPlugins.java:366)\r\n[error] \tat org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugin.execute(InvocationPlugin.java:196)\r\n\u2026\r\n[error] \tat org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime$1.run(GraalTruffleRuntime.java:745)\r\n[error] \tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n[error] \tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n[error] \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n[error] \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n[error] \tat java.lang.Thread.run(Thread.java:748)\r\n[error] \tat org.graalvm.compiler.core.CompilerThread.run(CompilerThread.java:40)\r\n[error] \tat com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:222)\r\n[error] \tat Lcom/oracle/svm/core/code/CEntryPointCallStubs;.com_002eoracle_002esvm_002ecore_002eposix_002ethread_002ePosixJavaThreads_002epthreadStartRoutine_0028com_002eoracle_002esvm_002ecore_002eposix_002ethread_002ePosixJavaThreads_0024ThreadStartData_0029(generated:0)\r\n```\r\n\r\n```\r\n[error] [truffle] opt fail         :anonymous                                                  |Reason java.lang.ArrayIndexOutOfBoundsException \r\n[error] Dumping debug output in /home/circleci/webknossos/dumps/1527524793177\r\n[error] Thread[TruffleCompilerThread-198,10,main]: Compilation of :anonymous failed: java.lang.ArrayIndexOutOfBoundsException\r\n[error] \tat java.lang.Throwable.<init>(Throwable.java:250)\r\n[error] \tat java.lang.Exception.<init>(Exception.java:54)\r\n[error] \tat java.lang.RuntimeException.<init>(RuntimeException.java:51)\r\n[error] \tat java.lang.IndexOutOfBoundsException.<init>(IndexOutOfBoundsException.java:46)\r\n[error] \tat java.lang.ArrayIndexOutOfBoundsException.<init>(ArrayIndexOutOfBoundsException.java:45)\r\n[error] \tat com.oracle.svm.core.snippets.SnippetRuntime.throwArrayIndexOutOfBoundsException(SnippetRuntime.java:230)\r\n[error] \tat org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.next(NodeClass.java:966)\r\n[error] \tat org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs(SchedulePhase.java:1128)\r\n\u2026\r\n[error] \tat org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime$1.run(GraalTruffleRuntime.java:745)\r\n[error] \tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n[error] \tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n[error] \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n[error] \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n[error] \tat java.lang.Thread.run(Thread.java:748)\r\n[error] \tat org.graalvm.compiler.core.CompilerThread.run(CompilerThread.java:40)\r\n[error] \tat com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:222)\r\n[error] \tat Lcom/oracle/svm/core/code/CEntryPointCallStubs;.com_002eoracle_002esvm_002ecore_002eposix_002ethread_002ePosixJavaThreads_002epthreadStartRoutine_0028com_002eoracle_002esvm_002ecore_002eposix_002ethread_002ePosixJavaThreads_0024ThreadStartData_0029(generated:0)\r\n```\r\n\r\n```\r\n[error] VMError.shouldNotReachHere: VMError.shouldNotReachHere: com.oracle.svm.core.genscavenge.HeapChunkProvider$AllocatorOutOfMemoryError: null\r\n[error] \r\n[error] JavaFrameAnchor dump:\r\n[error] \r\n[error]   Anchor 00007f78b4840b38 LastJavaSP 00007f78b4840ad0\r\n[error]   \r\n[error] DeoptStubPointer address: 00007f78a8bd55d0\r\n[error] \r\n[error] TopFrame info:\r\n[error] \r\n[error]   Lookup TotalFrameSize in CodeInfoTable:\r\n[error]   SourceTotalFrameSize 48\r\n[error]   \r\n[error] VMThreads info:\r\n\u2026\r\n```\r\n\r\n```\r\n\u2026\r\n[error]   RSP 00007f78b4841a40 RIP 00007f78a8e1f1c4  com.oracle.svm.core.code.ImageCodeInfo@0x7f78ac4c3d70 name = image code\r\n[error]   RSP 00007fa9c69f3120 RIP 00007fa9bb355ae9  [image code] com.oracle.truffle.js.nodes.function.JSFunctionCallNode.executeCall(JSFunctionCallNode.java:217)RSP 00007f78b4841a80 RIP 00007f78a8e212eb  com.oracle.svm.core.code.ImageCodeInfo@0x7f78ac4c3d70 name = image code\r\n[error]   \r\n[error]   RSP 00007f78b4841ab0 RIP 00007f78a8e2e4d7  com.oracle.svm.core.code.ImageCodeInfo@0x7f78ac4c3d70 name = image code\r\n[error]   RSP 00007f78b4841b10 RIP 00007f78aa32b0e7  RSP \r\njava.lang.Error: Running webpack failed with exit code: 99\r\n\tat AssetCompilation$$anonfun$assetsGenerationTask$1.apply(AssetCompilation.scala:80)\r\n\tat AssetCompilation$$anonfun$assetsGenerationTask$1.apply(AssetCompilation.scala:67)\r\n\tat scala.Function4$$anonfun$tupled$1.apply(Function4.scala:35)\r\n\tat scala.Function4$$anonfun$tupled$1.apply(Function4.scala:34)\r\n\tat scala.Function1$$anonfun$compose$1.apply(Function1.scala:47)\r\n\tat sbt.$tilde$greater$$anonfun$$u2219$1.apply(TypeFunctions.scala:40)\r\n\tat sbt.std.Transform$$anon$4.work(System.scala:63)\r\n\tat sbt.Execute$$anonfun$submit$1$$anonfun$apply$1.apply(Execute.scala:228)\r\n\tat sbt.Execute$$anonfun$submit$1$$anonfun$apply$1.apply(Execute.scala:228)\r\n\tat sbt.ErrorHandling$.wideConvert(ErrorHandling.scala:17)\r\n\tat sbt.Execute.work(Execute.scala:237)\r\n\tat sbt.Execute$$anonfun$submit$1.apply(Execute.scala:228)\r\n\tat sbt.Execute$$anonfun$submit$1.apply(Execute.scala:228)\r\n\tat sbt.ConcurrentRestrictions$$anon$4$$anonfun$1.apply(ConcurrentRestrictions.scala:159)\r\n\tat sbt.CompletionService$$anon$2.call(CompletionService.scala:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```", "url": "https://github.com/oracle/graal/issues/435", "user": "jstriebel", "labels": ["bug"], "created": "2018-05-29 09:56:47", "closed": "2019-09-11 15:29:53", "commits": {}, "ttf": 470.0002777777778, "commitsDetails": []}, {"title": "[native-image] Fails with java.lang.ArrayIndexOutOfBoundsException: -1", "body": "## Context\r\n\r\nTrying to build a native image of the Gradle launcher. This is the very first time I'm trying `native-image`, so there's obviously not a lot of details here. It means that fixing this issue would probably be not enough to generate a working image.\r\n\r\nNevertheless, it can be reproduced by running `native-image` on a Gradle installation.\r\n\r\n`/opt/DEV/graalvm-1.0.0-rc1/bin/native-image -cp lib/gradle-launcher-4.9.jar -H:Name=native-gradle -H:Class=org.gradle.launcher.GradleMain -H:+ReportUnsupportedElementsAtRuntime --verbose`\r\n\r\nYields:\r\n\r\n```\r\nBuild on Server(pid: 30616, port: 26681)\r\nSendBuildRequest [\r\n-task=com.oracle.svm.hosted.NativeImageGeneratorRunner\r\n-imagecp\r\n/opt/DEV/graalvm-1.0.0-rc1/jre/lib/svm/builder/svm.jar:/opt/DEV/graalvm-1.0.0-rc1/jre/lib/svm/builder/pointsto.jar:/opt/DEV/graalvm-1.0.0-rc1/jre/lib/svm/builder/objectfile.jar:/opt/DEV/graalvm-1.0.0-rc1/jre/lib/jvmci/jvmci-api.jar:/opt/DEV/graalvm-1.0.0-rc1/jre/lib/jvmci/graal.jar:/opt/DEV/graalvm-1.0.0-rc1/jre/lib/jvmci/jvmci-hotspot.jar:/opt/DEV/graalvm-1.0.0-rc1/jre/lib/boot/graaljs-scriptengine.jar:/opt/DEV/graalvm-1.0.0-rc1/jre/lib/boot/graal-sdk.jar:/opt/DEV/graalvm-1.0.0-rc1/jre/lib/svm/library-support.jar:/home/cchampeau/DEV/gradle-source-build/lib/gradle-launcher-4.9.jar\r\n-H:Path=/home/cchampeau/DEV/gradle-source-build\r\n-H:Name=native-gradle\r\n-H:Class=org.gradle.launcher.GradleMain\r\n-H:+ReportUnsupportedElementsAtRuntime\r\n-H:CLibraryPath=/opt/DEV/graalvm-1.0.0-rc1/jre/lib/svm/clibraries/linux-amd64\r\n]\r\n   classlist:     158.62 ms\r\n       (cap):     675.37 ms\r\n       setup:     927.45 ms\r\n    analysis:   2,029.47 ms\r\nfatal error: java.lang.ArrayIndexOutOfBoundsException: -1\r\n\tat com.oracle.graal.pointsto.flow.MethodFlowsGraph.linkClones(MethodFlowsGraph.java:259)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:118)\r\n\tat com.oracle.graal.pointsto.flow.StaticInvokeTypeFlow.update(InvokeTypeFlow.java:344)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:498)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:172)\r\n\tat java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nError: Processing image build request failed\r\n```\r\n\r\nThe run above is with a custom Gradle distribution (built from sources / `master`), but I could reproduce the same with a downloaded Gradle 4.7 distribution.\r\n\r\nThanks!", "url": "https://github.com/oracle/graal/issues/430", "user": "melix", "labels": ["bug", "native-image"], "created": "2018-05-22 14:35:18", "closed": "2018-05-24 18:44:36", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Incorrect behaviour when compiling the Scala compiler ", "body": "To reproduce:\r\n```\r\ngit clone git@github.com:scala/scala.git\r\ncd scala\r\nsbt -java-home <path-to-graal-vm> compiler/compile\r\n```\r\nThe failure is:\r\n```\r\njava.util.NoSuchElementException: key not found: method matchEnd7\r\n\tat scala.collection.MapOps.default(Map.scala:203)\r\n\tat scala.collection.MapOps.default$(Map.scala:202)\r\n\tat scala.collection.AbstractMap.default(Map.scala:318)\r\n\tat scala.collection.MapOps.apply(Map.scala:122)\r\n\tat scala.collection.MapOps.apply$(Map.scala:121)\r\n\tat scala.collection.AbstractMap.apply(Map.scala:318)\r\n```\r\nThe method that misbehaves is probably \r\n```\r\nscala.tools.nsc.backend.jvm.BCodeIdiomatic$LabelDefsFinder.traverse\r\n```\r\nas changing it with `println` statements made the bug go away. \r\nBig thanks to @lrytz for finding the bug and identifying the method that fails.\r\n", "url": "https://github.com/oracle/graal/issues/423", "user": "vjovanov", "labels": ["bug", "compiler"], "created": "2018-05-17 13:06:40", "closed": "2018-06-04 12:36:52", "commits": {}, "ttf": 17.00027777777778, "commitsDetails": []}, {"title": "[native-image] build crashes when trying to use mysql JDBC driver", "body": "I tried to compile following code:\r\n\r\n```java\r\npackage dbtest;\r\n\r\nimport com.mysql.jdbc.Driver;\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\n\r\npublic class DbTest {\r\n\r\n    public static void main(String[] args) {\r\n        try {\r\n            System.out.println(Driver.class);\r\n            Connection conn = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\", \"test\", \"test\");\r\n            conn.close();\r\n            System.out.println(\"OK\");\r\n        } catch (Exception e) {\r\n            System.out.println(\"ERROR\" + e);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nGot following error:\r\n\r\n```\r\n$ ./build.sh\r\nBuild on Server(pid: 8493, port: 26682)\r\n   classlist:     128.26 ms\r\n       (cap):     526.57 ms\r\n       setup:     683.54 ms\r\n    analysis:   1,460.66 ms\r\n7 fatal errors detected:\r\nfatal error: java.lang.ArrayIndexOutOfBoundsException: -1\r\n\tat com.oracle.graal.pointsto.flow.MethodFlowsGraph.linkClones(MethodFlowsGraph.java:259)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:118)\r\n\tat com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:184)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:345)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:387)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:498)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:172)\r\n\tat java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\n(above exception repeated several times)\r\nError: Processing image build request failed\r\n```\r\n\r\nUsed following command:\r\n\r\n```\r\nnative-image -cp mysql-connector-java-5.0.8.jar:target/classes dbtest.DbTest\r\n```\r\n\r\nTested with several mysql-connector versions: 5.0.8, 5.1.6, 5.1.46, GraalVM CE 1.0-rc1. \r\n\r\nNot sure that it is but looks like some kind of internal error. If something inside JDBC/driver is not supported (yet), some more readable message would be useful.\r\n\r\nThanks and regards, \r\nrle\r\n", "url": "https://github.com/oracle/graal/issues/418", "user": "rlewczuk", "labels": ["bug", "native-image"], "created": "2018-05-13 04:29:20", "closed": "2018-05-24 19:17:10", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "Binary size increases more than 2x with option -H:+ReportUnsupportedElementsAtRuntime", "body": "I compiled [this clojure project](https://gitlab.com/konrad.mrozek/cljfmt-graalvm) using `native-image` without and with the option `-H:+ReportUnsupportedElementsAtRuntime`.\r\n\r\nCompiled without the option:\r\n\r\n```\r\n-rwxr-xr-x   1 Borkdude  staff  9408992 May  4 13:04 cljfmt\r\n```\r\n\r\nCompiled with the option:\r\n```\r\n-rwxr-xr-x   1 Borkdude  staff  23209488 May  7 09:52 cljfmt\r\n```\r\n\r\nAs you can see the size increases more than 2x with the option. I had a discussion about this with https://twitter.com/cstancu and he suggested I post an issue about this, so here we go.\r\n\r\nI'm running GraalVM EE 1.0.0-rc1 on MacOS High Sierra 10.13.4\r\n\r\n", "url": "https://github.com/oracle/graal/issues/410", "user": "borkdude", "labels": ["bug", "native-image"], "created": "2018-05-07 18:56:36", "closed": "2019-03-14 22:54:02", "commits": {}, "ttf": 311.0002777777778, "commitsDetails": []}, {"title": "LanguageCache.collectLanguages() creates invalid path on Windows", "body": "This line fails on Windows:\r\nhttps://github.com/oracle/graal/blob/3122d963ef7a5e1674ef8f590deda5a85b16ebc0/truffle/src/com.oracle.truffle.api.vm/src/com/oracle/truffle/api/vm/LanguageCache.java#L199\r\n\r\nas `((JarURLConnection) connection).getJarFileURL().getPath()` creates a path with a leading slash, e.g. `/C:/path/to/file.jar`\r\n", "url": "https://github.com/oracle/graal/issues/409", "user": "harmanpa", "labels": ["bug", "truffle"], "created": "2018-05-07 17:00:54", "closed": "2020-01-22 13:21:54", "commits": {}, "ttf": 624.0002777777778, "commitsDetails": []}, {"title": "JMH Blackhole and Graal interaction", "body": "@thomaswue said that there is a special support for Blackhole in Graal. Yet, our early JMH testing shows it breaks at least in one case. Seen this with JMH validation tests:\r\n  https://twitter.com/shipilev/status/992332163055017986\r\n\r\n\r\nTry this benchmark:\r\n\r\n```\r\nimport org.openjdk.jmh.annotations.*;\r\nimport org.openjdk.jmh.infra.Blackhole;\r\n\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n@State(Scope.Thread)\r\n@BenchmarkMode(Mode.AverageTime)\r\n@OutputTimeUnit(TimeUnit.NANOSECONDS)\r\n@Fork(1)\r\npublic class GraalBHBreakage {\r\n    @Param(\"1\")\r\n    private int steps;\r\n\r\n    private Double[] objects;\r\n\r\n    @Setup\r\n    public void prepare() {\r\n        objects = new Double[steps];\r\n        for (int c = 0; c < steps; c++) {\r\n            objects[c] = (double) c;\r\n        }\r\n    }\r\n\r\n    @Benchmark\r\n    public void test(Blackhole bh) {\r\n        for (int c = 0; c < steps; c++) {\r\n            bh.consume((Double) Math.log(objects[c]));\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nOn 8u171, C2 the test yields:\r\n\r\n```\r\nBenchmark             (steps)  Mode  Cnt   Score   Error  Units\r\nGraalBHBreakage.test        1  avgt    5  38.442 \u00b1 0.108  ns/op\r\n```\r\n\r\nWith GraalVM 1.0.0-rc1 and now-current JMH 1.20:\r\n\r\n```\r\nBenchmark             (steps)  Mode  Cnt  Score   Error  Units\r\nGraalBHBreakage.test        1  avgt    5  2.327 \u00b1 0.008  ns/op\r\n```\r\n\r\nSo, it breaks: it seems the Blackhole method body is present/inlined, but the boxing allocation is stripped out. This is partially due to JMH not supporting compiler hints with Graal (see [CODETOOLS-79012164](https://bugs.openjdk.java.net/browse/CODETOOLS-7902164)), and after that is fixed, we get back the behavior we want:\r\n\r\nWith GraalVM 1.0.0-rc1 and JMH 1.21-rc:\r\n\r\n```\r\n$ java -jar target/benchmarks.jar -f 1 -wi 5 -i 5 -r 1s -w 1s\r\nBenchmark             (steps)  Mode  Cnt   Score   Error  Units\r\nGraalBHBreakage.test        1  avgt    5  36.760 \u00b1 0.189  ns/op\r\n```\r\n\r\nBut, there is a special testing mode in JMH that forces the inlining of Blackholes to test if Blackhole still works should inline hints fail: `-Djmh.blackhole.forceInline=true`. It still fails, see with GraalVM 1.0.0-rc1 and JMH 1.21-rc:\r\n\r\n```\r\n$ java -Djmh.blackhole.forceInline=true -jar target/benchmarks.jar -f 1 -wi 5 -i 5 -r 1s -w 1s\r\n...\r\nBenchmark             (steps)  Mode  Cnt  Score   Error  Units\r\nGraalBHBreakage.test        1  avgt    5  2.323 \u00b1 0.020  ns/op\r\n```\r\nIs this still a bug? I think Blackhole should work even with forced inlining, like it does for C2.", "url": "https://github.com/oracle/graal/issues/402", "user": "shipilev", "labels": ["bug", "compiler"], "created": "2018-05-04 11:11:40", "closed": "2018-05-04 18:32:35", "commits": {"40e02e0f3d13bd7db19f8bb98e7a4cae7f6fba36": {"commitGHEventType": "referenced", "commitUser": "dougxc"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "40e02e0f3d13bd7db19f8bb98e7a4cae7f6fba36", "commitGHEventType": "referenced", "commitUser": "dougxc", "commitParents": ["5c44ef8185326ada8c9c2e38e28cde9e7bc0a6a6", "568fb15c1b4f398d3b461bce6fbc4a722f71eaee"], "nameRev": "40e02e0f3d13bd7db19f8bb98e7a4cae7f6fba36 tags/antlr-complete-4.7~63", "commitMessage": "[GR-9718] Change JMH blackhole plugins to be decorators (#402).\n\nPullRequest: graal/1458\n", "commitDateTime": "2018-05-04 08:35:24", "authoredDateTime": "2018-05-04 08:35:24", "commitGitStats": [{"filePath": "compiler/mx.compiler/mx_compiler.py", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "compiler/src/org.graalvm.compiler.java/src/org/graalvm/compiler/java/BytecodeParser.java", "insertions": 7, "deletions": 5, "lines": 12}, {"filePath": "compiler/src/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/graphbuilderconf/InvocationPlugin.java", "insertions": 11, "deletions": 1, "lines": 12}, {"filePath": "compiler/src/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/graphbuilderconf/InvocationPlugins.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "compiler/src/org.graalvm.compiler.replacements/src/org/graalvm/compiler/replacements/StandardGraphBuilderPlugins.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BytecodeParser.java", "spoonMethods": [{"spoonMethodName": "org.graalvm.compiler.java.BytecodeParser.tryInvocationPlugin(org.graalvm.compiler.nodes.CallTargetNode.InvokeKind,org.graalvm.compiler.nodes.ValueNode[],jdk.vm.ci.meta.ResolvedJavaMethod,jdk.vm.ci.meta.JavaKind,jdk.vm.ci.meta.JavaType)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "InvocationPlugin.java", "spoonMethods": [{"spoonMethodName": "org.graalvm.compiler.nodes.graphbuilderconf.isDecorator()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InvocationPlugins.java", "spoonMethods": [{"spoonMethodName": "org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugins.get(jdk.vm.ci.meta.ResolvedJavaMethod)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "StandardGraphBuilderPlugins.java", "spoonMethods": [{"spoonMethodName": "org.graalvm.compiler.replacements.StandardGraphBuilderPlugins.registerJMHBlackholePlugins(org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugins,org.graalvm.compiler.bytecode.BytecodeProvider).42.isDecorator()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "NPE with native-image on Akka program", "body": "```\r\n$ native-image --version\r\nSubstrateVM Version Info\r\n68c7c1073a86a3d541ffb82434acc664f3096079:substratevm\r\na642b10d9d3c8ca79be66d5694311e769e1526a9:substratevm-enterprise\r\nGraalVM Version 1.0.0-rc1\r\n```\r\n\r\n`native-image` on an Akka based program yields an NPE. Unfortunately, I'm unable to provide the source code as it is presently closed. Here's the full stacktrace in the hope that this may help understand the problem:\r\n\r\n```\r\nerror: Error encountered while parsing akka.actor.dungeon.Children.swapChildrenRefs(akka.actor.dungeon.ChildrenContainer, akka.actor.dungeon.ChildrenContainer) \r\nParsing context:\r\n\tparsing akka.actor.dungeon.Children.initChild(Children.scala:148)\r\n\tparsing akka.actor.dungeon.Children.initChild$(Children.scala:141)\r\n\tparsing akka.actor.ActorCell.initChild(ActorCell.scala:431)\r\n\tparsing akka.actor.LocalActorRefProvider.systemGuardian$lzycompute(ActorRefProvider.scala:629)\r\n\tparsing akka.actor.LocalActorRefProvider.systemGuardian(ActorRefProvider.scala:623)\r\n\tparsing akka.actor.ActorSystemImpl.systemGuardian(ActorSystem.scala:806)\r\n\tparsing akka.actor.ActorSystemImpl.stop(ActorSystem.scala:745)\r\n\tparsing akka.actor.ActorSystemImpl.$anonfun$terminate$1(ActorSystem.scala:847)\r\n\tparsing akka.actor.ActorSystemImpl.$anonfun$terminate$1$adapted(ActorSystem.scala:847)\r\n\tparsing akka.actor.ActorSystemImpl$$Lambda$943/444028694.apply(Unknown Source)\r\n\tparsing scala.Option.foreach(Option.scala:257)\r\n\tparsing akka.actor.ActorSystemImpl.terminate(ActorSystem.scala:847)\r\n\tparsing com.github.huntc.streambed.ApplicationProcess.main(Application.scala:277)\r\n\tparsing com.github.huntc.lora.server.GatewayServerEntryPoints$.main(GatewayServer.scala:38)\r\n\tparsing com.github.huntc.lora.server.GatewayServerEntryPoints.main(GatewayServer.scala)\r\n\tparsing com.oracle.svm.reflect.proxies.Proxy_3_GatewayServerEntryPoints_main.invoke(Unknown Source)\r\n\tparsing java.lang.reflect.Method.invoke(Method.java:498)\r\n\tparsing com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:199)\r\n\tparsing Lcom/oracle/svm/core/code/CEntryPointCallStubs;.com_002eoracle_002esvm_002ecore_002eJavaMainWrapper_002erun_0028int_002corg_002egraalvm_002enativeimage_002ec_002etype_002eCCharPointerPointer_0029(generated:0)\r\nOriginal error: java.lang.NullPointerException\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder$NodeIterator.node(MethodTypeFlowBuilder.java:1081)\r\n\tat org.graalvm.compiler.phases.graph.PostOrderNodeIterator.apply(PostOrderNodeIterator.java:104)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:400)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:308)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:298)\r\n\tat com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:105)\r\n\tat com.oracle.graal.pointsto.flow.SpecialInvokeTypeFlow.onObservedUpdate(InvokeTypeFlow.java:419)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:345)\r\n\tat com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:387)\r\n\tat com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:498)\r\n\tat com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:172)\r\n\tat java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\n```", "url": "https://github.com/oracle/graal/issues/401", "user": "huntc", "labels": ["bug", "native-image"], "created": "2018-05-04 06:58:52", "closed": "2018-05-05 18:56:25", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Unsupported method in UnixAsynchronousSocketChannelImpl", "body": "Hi again :)\r\n\r\nWhile trying to use `http4s-blaze-client` package during request handling following exception gets thrown:\r\n```\r\njava.util.concurrent.ExecutionException: Boxed Error\r\n        at java.lang.Throwable.<init>(Throwable.java:287)\r\n        at java.lang.Exception.<init>(Exception.java:84)\r\n        at java.util.concurrent.ExecutionException.<init>(ExecutionException.java:77)\r\n        at scala.concurrent.impl.Promise$.resolver(Promise.scala:83)\r\n        at scala.concurrent.impl.Promise$.scala$concurrent$impl$Promise$$resolveTry(Promise.scala:75)\r\n        at scala.concurrent.impl.Promise$DefaultPromise.tryComplete(Promise.scala:280)\r\n        at scala.concurrent.Promise.complete(Promise.scala:49)\r\n        at scala.concurrent.Promise.complete$(Promise.scala:48)\r\n        at scala.concurrent.impl.Promise$DefaultPromise.complete(Promise.scala:183)\r\n        at scala.concurrent.Promise.failure(Promise.scala:100)\r\n        at scala.concurrent.Promise.failure$(Promise.scala:100)\r\n        at scala.concurrent.impl.Promise$DefaultPromise.failure(Promise.scala:183)\r\n        at org.http4s.blaze.channel.nio2.ClientChannelFactory$$anon$1.failed(ClientChannelFactory.scala:29)\r\n        at org.http4s.blaze.channel.nio2.ClientChannelFactory$$anon$1.failed(ClientChannelFactory.scala:27)\r\n        at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:128)\r\n        at sun.nio.ch.Invoker$2.run(Invoker.java:218)\r\n        at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n        at com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:222)\r\n        at Lcom/oracle/svm/core/code/CEntryPointCallStubs;.com_002eoracle_002esvm_002ecore_002eposix_002ethread_002ePosixJavaThreads_002epthreadStartRoutine_0028com_002eoracle_002esvm_002ecore_002eposix_002ethread_002ePosixJavaThreads_0024ThreadStartData_0029(generated:0)\r\nCaused by: com.oracle.svm.core.jdk.UnsupportedFeatureError: Unsupported method sun.nio.ch.UnixAsynchronousSocketChannelImpl.checkConnect(int) is reachable: Native method. If you intend to use the Java Native Interface (JNI), specify -H:+JNI and see also -H:JNIConfigurationFiles=<path> (use -H:+PrintFlags for details)\r\n        at java.lang.Throwable.<init>(Throwable.java:265)\r\n        at java.lang.Error.<init>(Error.java:70)\r\n        at com.oracle.svm.core.jdk.UnsupportedFeatureError.<init>(UnsupportedFeatureError.java:29)\r\n        at com.oracle.svm.core.jdk.Target_com_oracle_svm_core_util_VMError.unsupportedFeature(VMErrorSubstitutions.java:103)\r\n        at sun.nio.ch.UnixAsynchronousSocketChannelImpl.checkConnect(UnixAsynchronousSocketChannelImpl.java)\r\n        at sun.nio.ch.UnixAsynchronousSocketChannelImpl.finishConnect(UnixAsynchronousSocketChannelImpl.java:252)\r\n        at sun.nio.ch.UnixAsynchronousSocketChannelImpl.finish(UnixAsynchronousSocketChannelImpl.java:198)\r\n        at sun.nio.ch.UnixAsynchronousSocketChannelImpl.onEvent(UnixAsynchronousSocketChannelImpl.java:213)\r\n        at sun.nio.ch.EPollPort$EventHandlerTask.run(EPollPort.java:293)\r\n        ... 3 common frames omitted\r\n```\r\n\r\nRecompilation with `-H:+JNI` transforms it into:\r\n```\r\njava.util.concurrent.ExecutionException: Boxed Error\r\n        at java.lang.Throwable.<init>(Throwable.java:287)\r\n        at java.lang.Exception.<init>(Exception.java:84)\r\n        at java.util.concurrent.ExecutionException.<init>(ExecutionException.java:77)\r\n        at scala.concurrent.impl.Promise$.resolver(Promise.scala:83)\r\n        at scala.concurrent.impl.Promise$.scala$concurrent$impl$Promise$$resolveTry(Promise.scala:75)\r\n        at scala.concurrent.impl.Promise$DefaultPromise.tryComplete(Promise.scala:280)\r\n        at scala.concurrent.Promise.complete(Promise.scala:49)\r\n        at scala.concurrent.Promise.complete$(Promise.scala:48)\r\n        at scala.concurrent.impl.Promise$DefaultPromise.complete(Promise.scala:183)\r\n        at scala.concurrent.Promise.failure(Promise.scala:100)\r\n        at scala.concurrent.Promise.failure$(Promise.scala:100)\r\n        at scala.concurrent.impl.Promise$DefaultPromise.failure(Promise.scala:183)\r\n        at org.http4s.blaze.channel.nio2.ClientChannelFactory$$anon$1.failed(ClientChannelFactory.scala:29)\r\n        at org.http4s.blaze.channel.nio2.ClientChannelFactory$$anon$1.failed(ClientChannelFactory.scala:27)\r\n        at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:128)\r\n        at sun.nio.ch.Invoker$2.run(Invoker.java:218)\r\n        at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n        at com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:222)\r\n        at Lcom/oracle/svm/core/code/CEntryPointCallStubs;.com_002eoracle_002esvm_002ecore_002eposix_002ethread_002ePosixJavaThreads_002epthreadStartRoutine_0028com_002eoracle_002esvm_002ecore_002eposix_002ethread_002ePosixJavaThreads_0024ThreadStartData_0029(generated:0)\r\nCaused by: java.lang.UnsatisfiedLinkError: sun.nio.ch.UnixAsynchronousSocketChannelImpl.checkConnect(I)V [symbol: Java_sun_nio_ch_UnixAsynchronousSocketChannelImpl_checkConnect or Java_sun_nio_ch_UnixAsynchronousSocketChannelImpl_checkConnect__I]\r\n        at java.lang.Throwable.<init>(Throwable.java:265)\r\n        at java.lang.Error.<init>(Error.java:70)\r\n        at java.lang.LinkageError.<init>(LinkageError.java:55)\r\n        at java.lang.UnsatisfiedLinkError.<init>(UnsatisfiedLinkError.java:54)\r\n        at com.oracle.svm.jni.access.JNINativeLinkage.getOrFindEntryPoint(JNINativeLinkage.java:123)\r\n        at com.oracle.svm.jni.JNIGeneratedMethodSupport.nativeCallAddress(JNIGeneratedMethodSupport.java:52)\r\n        at sun.nio.ch.UnixAsynchronousSocketChannelImpl.checkConnect(UnixAsynchronousSocketChannelImpl.java)\r\n        at sun.nio.ch.UnixAsynchronousSocketChannelImpl.finishConnect(UnixAsynchronousSocketChannelImpl.java:252)\r\n        at sun.nio.ch.UnixAsynchronousSocketChannelImpl.finish(UnixAsynchronousSocketChannelImpl.java:198)\r\n        at sun.nio.ch.UnixAsynchronousSocketChannelImpl.onEvent(UnixAsynchronousSocketChannelImpl.java:213)\r\n        at sun.nio.ch.EPollPort$EventHandlerTask.run(EPollPort.java:293)\r\n        ... 3 common frames omitted\r\n```", "url": "https://github.com/oracle/graal/issues/396", "user": "lbialy", "labels": ["bug", "native-image"], "created": "2018-05-03 13:21:33", "closed": "2018-06-14 00:37:24", "commits": {}, "ttf": 41.000277777777775, "commitsDetails": []}, {"title": "Java Interop overload resolution does not work for functional interfaces with an additional empty overload.", "body": "The following test program produces:\r\n``` \r\nclass Polyglot {\r\n    \r\n    public static final class HttpServer {\r\n\r\n        public HttpServer requestHandler(Supplier<String> handler) {\r\n            return this;\r\n        }\r\n        \r\n        public Supplier<String>requestHandler() {\r\n            return null;\r\n        }\r\n                    \r\n    }\r\n    \r\n    public static void main(String[] args) throws IOException {\r\n        Context polyglot = Context.create();// (function(e) 42 )\r\n        Value f = polyglot.eval(\"js\", \"function(server) { return server.requestHandler(function(e) 42 )};\");\r\n        HttpServer server = new HttpServer();\r\n        System.out.println(f.execute(server));\r\n    }\r\n}\r\n``` \r\n\r\nThis currently fails in GraalVM 1.0 RC1 for Mac with the following error:\r\n\r\n```\r\nException in thread \"main\" TypeError: INVOKE on JavaObject[Polyglot$HttpServer@290d210d (Polyglot$HttpServer)] failed due to: java.lang.IllegalArgumentException: no applicable overload found (overloads: [Method[public Polyglot$HttpServer Polyglot$HttpServer.requestHandler(java.util.function.Supplier)], Method[public java.util.function.Supplier Polyglot$HttpServer.requestHandler()]], arguments: [DynamicObject<JSFunction>@60611244 (b)])\r\n\tat <js> :anonymous(Unnamed:1:26-63)\r\n\tat org.graalvm.polyglot.Value.execute(Value.java:312)\r\n\tat Polyglot.main(Polyglot.java:25)\r\n\r\n``` \r\n\r\nI'd expect the requestHandler with the the Handler argument to be selected and executed. \r\n\r\nThis was reported by Paulo Lopez on the Gitter chat.", "url": "https://github.com/oracle/graal/issues/371", "user": "chumer", "labels": ["bug", "javascript", "truffle"], "created": "2018-04-23 10:18:17", "closed": "2018-04-24 23:22:42", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "[native-image] can't compile on docker", "body": "I tried to build simple code with native-image on docker + graalvm-ce-1.0.0-rc1, but native-image throwed NullpinterException.\r\nAnd same program is sucess on MacOS + graalvm-ee-1.0.0-rc1.\r\nHaven't yet native-image support Docker? Or should I need some configuration to Dockerfile?\r\n\r\n```bash\r\n[root@c74702bf3869 /]# javac HelloWorld.java\r\n[root@c74702bf3869 /]# java HelloWorld \r\nHello, World\r\n[root@c74702bf3869 /]#\u3000native-image --verbose HelloWorld\r\nBuild on Server(pid: 167, port: 26681)\r\nSendBuildRequest [\r\n-task=com.oracle.svm.hosted.NativeImageGeneratorRunner\r\n-imagecp\r\n/usr/graalvm-1.0.0-rc1/jre/lib/svm/builder/pointsto.jar:/usr/graalvm-1.0.0-rc1/jre/lib/svm/builder/objectfile.jar:/usr/graalvm-1.0.0-rc1/jre/lib/svm/builder/svm.jar:/usr/graalvm-1.0.0-rc1/jre/lib/jvmci/jvmci-api.jar:/usr/graalvm-1.0.0-rc1/jre/lib/jvmci/graal.jar:/usr/graalvm-1.0.0-rc1/jre/lib/jvmci/jvmci-hotspot.jar:/usr/graalvm-1.0.0-rc1/jre/lib/boot/graal-sdk.jar:/usr/graalvm-1.0.0-rc1/jre/lib/boot/graaljs-scriptengine.jar:/usr/graalvm-1.0.0-rc1/jre/lib/svm/library-support.jar:/\r\n-H:Path=/\r\n-H:CLibraryPath=/usr/graalvm-1.0.0-rc1/jre/lib/svm/clibraries/linux-amd64\r\n-H:Class=HelloWorld\r\n-H:Name=helloworld\r\n]\r\nfatal error: java.lang.NullPointerException\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat java.util.concurrent.ForkJoinTask.getThrowableException(ForkJoinTask.java:598)\r\n\tat java.util.concurrent.ForkJoinTask.reportException(ForkJoinTask.java:677)\r\n\tat java.util.concurrent.ForkJoinTask.invoke(ForkJoinTask.java:735)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateParallel(ForEachOps.java:160)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:233)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:583)\r\n\tat com.oracle.svm.hosted.ImageClassLoader.initAllClasses(ImageClassLoader.java:120)\r\n\tat com.oracle.svm.hosted.ImageClassLoader.create(ImageClassLoader.java:103)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:150)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:337)\r\n\tat com.oracle.svm.hosted.server.NativeImageBuildServer.executeCompilation(NativeImageBuildServer.java:378)\r\n\tat com.oracle.svm.hosted.server.NativeImageBuildServer.lambda$processCommand$8(NativeImageBuildServer.java:315)\r\n\tat com.oracle.svm.hosted.server.NativeImageBuildServer.withJVMContext(NativeImageBuildServer.java:396)\r\n\tat com.oracle.svm.hosted.server.NativeImageBuildServer.processCommand(NativeImageBuildServer.java:312)\r\n\tat com.oracle.svm.hosted.server.NativeImageBuildServer.processRequest(NativeImageBuildServer.java:256)\r\n\tat com.oracle.svm.hosted.server.NativeImageBuildServer.lambda$serve$7(NativeImageBuildServer.java:216)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.NullPointerException\r\n\tat com.oracle.svm.hosted.ImageClassLoader.loadClassesFromPath(ImageClassLoader.java:127)\r\n\tat com.oracle.svm.hosted.ImageClassLoader.lambda$initAllClasses$2(ImageClassLoader.java:120)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.TreeMap$KeySpliterator.forEachRemaining(TreeMap.java:2746)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\r\n\tat java.util.stream.ForEachOps$ForEachTask.compute(ForEachOps.java:291)\r\n\tat java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.execLocalTasks(ForkJoinPool.java:1040)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1058)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nError: Processing image build request failed\r\n```\r\n\r\nI use following Dockerfile.\r\n\r\n```Dockerfile\r\nFROM centos:7\r\nMAINTAINER koduki\r\n\r\nENV GRAALVM_URL=https://github.com/oracle/graal/releases/download/vm-1.0.0-rc1/graalvm-ce-1.0.0-rc1-linux-amd64.tar.gz \\\r\n    GRAALVM_PKG=graalvm-ce-1.0.0-rc1-linux-amd64.tar.gz \\\r\n    GRAALVM_HOME=/usr/graalvm-1.0.0-rc1\r\n\r\nENV JAVA_HOME=${GRAALVM_HOME} \\\r\n    PATH=${GRAALVM_HOME}/bin:$PATH\r\n\r\nRUN curl -L -o $GRAALVM_PKG $GRAALVM_URL &&  \\\r\n    tar xfvz $GRAALVM_PKG -C /usr/ &&  \\\r\n    rm $GRAALVM_PKG\r\n\r\nRUN yum -y install gcc openssl-devel && rm -rf /var/cache/yum && \\\r\n    alternatives --install /usr/bin/java  java  $JAVA_HOME/bin/java  20000 && \\\r\n    alternatives --install /usr/bin/javac javac $JAVA_HOME/bin/javac 20000 && \\\r\n    alternatives --install /usr/bin/jar   jar   $JAVA_HOME/bin/jar   20000\r\n\r\nCMD [\"java\", \"-version\"]\r\n```", "url": "https://github.com/oracle/graal/issues/362", "user": "koduki", "labels": ["bug", "native-image"], "created": "2018-04-21 08:41:53", "closed": "2018-04-24 07:38:37", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Broken link", "body": "I didn't find quickly any repository with website sources. If there is one - let me know and I will make a PR.\r\n\r\n**Here**: https://www.graalvm.org/docs/why-graal/\r\n**is link**: Find out [how to get started](https://www.graalvm.org/docs/graalvm-as-a-platform/simple-language/) implementing a language.\r\n\r\nIt's a 404 know, a the correct URL is (probably): https://www.graalvm.org/docs/graalvm-as-a-platform/implement-language/", "url": "https://github.com/oracle/graal/issues/351", "user": "misiek08", "labels": ["bug", "documentation"], "created": "2018-04-19 07:10:38", "closed": "2018-04-19 15:01:35", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Frames not working in JavaDoc", "body": "The Java docs at http://www.graalvm.org/truffle/javadoc are mildly broken in that the \"Frames\" link does not work to turn on the side bar.\r\n\r\nTo reproduce go to http://www.graalvm.org/truffle/javadoc/org/graalvm/polyglot/package-summary.html and then click \"Frames\" in the header. I would expect it to open the side bar, but instead it jumps back to the top-level index and stays in \"No Frames\" mode.", "url": "https://github.com/oracle/graal/issues/345", "user": "arthurp", "labels": ["bug"], "created": "2018-04-18 14:30:08", "closed": "2018-04-25 11:54:56", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "Native Image \"HelloWorld.java\" Fails", "body": "I'm trying the `HelloWorld.java` native image example and am receiving a failure.  Here is what I attempted:\r\n\r\nHelloWorld.java:\r\n\r\n```\r\npublic class HelloWorld {\r\n  public static void main(String[] args) {\r\n    System.out.println(\"Hello, World!\");\r\n  }\r\n}\r\n```\r\n\r\ncommand:\r\n`javac HelloWorld.java`\r\n\r\nResults in HelloWorld.class file generated.\r\n\r\ncommand:\r\n`native-image HelloWorld` \r\n\r\nResults in the following failure:\r\n\r\n```\r\nBuild on Server(pid: 10370, port: 26681)*\r\n   classlist:   1,544.97 ms\r\n       (cap):   3,572.68 ms\r\n       setup:   4,269.92 ms\r\nerror: Error compiling query code (in /tmp/SVM-8237896470152817894/PosixDirectives.c). Compiler command  gcc /tmp/SVM-8237896470152817894/PosixDirectives.c -o /tmp/SVM-8237896470152817894/PosixDirectives output included error: /tmp/SVM-8237896470152817894/PosixDirectives.c:60:18: fatal error: zlib.h: No such file or directory\r\n    C file contents around line 60:\r\n    /tmp/SVM-8237896470152817894/PosixDirectives.c:59: #include <unistd.h>\r\n    /tmp/SVM-8237896470152817894/PosixDirectives.c:60: #include <zlib.h>\r\n    /tmp/SVM-8237896470152817894/PosixDirectives.c:61: #include <arpa/inet.h>\r\nError: Processing image build request failed\r\n```\r\n\r\nMy environment:\r\n\r\n```\r\n$ java -version\r\nopenjdk version \"1.8.0_161\"\r\nOpenJDK Runtime Environment (build 1.8.0_161-12)\r\nGraalVM 1.0.0-rc1 (build 25.71-b01-internal-jvmci-0.42, mixed mode)\r\n```\r\n\r\n```\r\n$ cat /etc/os-release \r\nPRETTY_NAME=\"Debian GNU/Linux 9 (stretch)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"9\"\r\nVERSION=\"9 (stretch)\"\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n```\r\n", "url": "https://github.com/oracle/graal/issues/343", "user": "cfsilence", "labels": ["bug", "native-image"], "created": "2018-04-18 12:58:09", "closed": "2018-04-18 14:34:24", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Stack overflow on Eclipse Golo generated bytecode with invokedynamic", "body": "Playing with a JDK 10 ea I found a stack overflow when running a simple recursion-based Fibonacci sample.\r\n\r\nApparently inlining of invokedynamic callsites causes problems with deep recursion stacks.\r\nHere is a small part of the stack trace:\r\n\r\n```\r\nat jdk.internal.vm.compiler@10/org.graalvm.compiler.replacements.MethodHandlePlugin.handleInvoke(MethodHandlePlugin.java:90)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.tryNodePluginForInvocation(BytecodeParser.java:2047)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.appendInvoke(BytecodeParser.java:1579)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.genDynamicInvokeHelper(BytecodeParser.java:1432)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.genInvokeVirtualHelper(BytecodeParser.java:1460)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.genInvokeVirtual(BytecodeParser.java:1441)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.genInvokeVirtual(BytecodeParser.java:1387)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:4525)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:2964)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:2786)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:831)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.parseAndInlineCallee(BytecodeParser.java:2278)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.inline(BytecodeParser.java:2186)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2079)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.appendInvoke(BytecodeParser.java:1601)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.genDynamicInvokeHelper(BytecodeParser.java:1434)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.genInvokeDynamic(BytecodeParser.java:1380)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.genInvokeDynamic(BytecodeParser.java:1376)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:4529)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:2964)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:2786)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:831)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.parseAndInlineCallee(BytecodeParser.java:2278)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.inline(BytecodeParser.java:2186)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2068)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.appendInvoke(BytecodeParser.java:1601)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.handleReplacedInvoke(BytecodeParser.java:1532)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.replacements.MethodHandlePlugin.handleInvoke(MethodHandlePlugin.java:90)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.tryNodePluginForInvocation(BytecodeParser.java:2047)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.appendInvoke(BytecodeParser.java:1579)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.genInvokeStatic(BytecodeParser.java:1350)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.genInvokeStatic(BytecodeParser.java:1332)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:4527)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:2964)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:2786)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:831)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.parseAndInlineCallee(BytecodeParser.java:2278)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.inline(BytecodeParser.java:2186)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2079)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.appendInvoke(BytecodeParser.java:1601)\r\n          \tat jdk.internal.vm.compiler@10/org.graalvm.compiler.java.BytecodeParser.handleReplacedInvoke(BytecodeParser.java:1532)\r\n```\r\n\r\n## Steps to reproduce\r\n\r\n1. Get Eclipse Golo\r\n2. `cd` to the Golo distribution folder.\r\n3. Run `JAVA_OPTS='-XX:+UnlockExperimentalVMOptions -XX:+UseJVMCICompiler' bin/golo golo --files samples/fibonacci.golo`\r\n\r\n## Code\r\n\r\nHere is the culprit program:\r\n\r\n```golo\r\nmodule samples.Fibonacci\r\n\r\nimport java.lang.System\r\n\r\nfunction fib = |n| {\r\n  if n <= 1 {\r\n    return n\r\n  } else {\r\n    return fib(n - 1) + fib(n - 2)\r\n  }\r\n}\r\n\r\nlocal function run = {\r\n  let start = System.currentTimeMillis()\r\n  let result = fib(40)\r\n  let duration = System.currentTimeMillis() - start\r\n  println(\">>> \" + result + \" (took \" + duration + \"ms)\")\r\n}\r\n\r\nfunction main = |args| {\r\n  while true {\r\n    run()\r\n  }\r\n}\r\n```\r\n\r\nIt is important to note that most Golo call sites are using `invokedynamic`.\r\n\r\n", "url": "https://github.com/oracle/graal/issues/341", "user": "jponge", "labels": ["bug", "compiler"], "created": "2018-04-18 09:58:00", "closed": "2018-04-19 13:19:59", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Links to documentation in README are broken", "body": ">A comprehensive GraalVM documentation can be found on the website.\r\n\r\n1. The website (graalvm.org) is having issue with certificate:\r\n\r\n>This server could not prove that it is graalvm.org; its security certificate is from *.github.com. This may be caused by a misconfiguration or an attacker intercepting your connection.\r\n\r\n2. Links to section, e.g *Getting Started* don't exist: https://github.com/oracle/graal/blob/master/docs/docs/getting-started", "url": "https://github.com/oracle/graal/issues/339", "user": "tuleism", "labels": ["bug"], "created": "2018-04-18 02:13:07", "closed": "2018-04-18 08:33:12", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "https://graalvm.org/ reports invalid SSL certificate in Chrome, Firefox", "body": "The README.md links to `https://graalvm.org`, but this link appears as insecure (big red 'Your connection is not private' warning page when you click it.\r\n\r\n(The certificate given over HTTPS is valid for `https://www.graalvm.org`, but not for `https://graalvm.org`.  Interestingly, they are not the same certificate, either.)\r\n\r\nI am happy to provide more information if desired.", "url": "https://github.com/oracle/graal/issues/338", "user": "rhencke", "labels": ["bug"], "created": "2018-04-18 01:55:24", "closed": "2018-04-18 08:37:17", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[v1.0.0-rc1/rc2] Grails (v2.5.6) project does not run", "body": "If one tries to run a Grails (v2.5.6) project, it fails. The output is:\r\n\r\n```\r\njava.lang.NoClassDefFoundError: org/springsource/loaded/ri/ReflectiveInterceptor\r\n\tat jdk.vm.ci.hotspot.UnsafeAccess.initUnsafe(UnsafeAccess.java:43)\r\n\tat jdk.vm.ci.hotspot.UnsafeAccess.<clinit>(UnsafeAccess.java:34)\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getHolder(HotSpotResolvedJavaMethodImpl.java:93)\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.fromMetaspace(HotSpotResolvedJavaMethodImpl.java:110)\r\nCaused by: java.lang.ClassNotFoundExceptionjava.lang.NoClassDefFoundError: Could not initialize class jdk.vm.ci.hotspot.UnsafeAccess\r\n: org.springsource.loaded.ri.ReflectiveInterceptor\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getHolder(HotSpotResolvedJavaMethodImpl.java:93)\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.fromMetaspace(HotSpotResolvedJavaMethodImpl.java:110)\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:381)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\r\n\tat java.net.FactoryURLClassLoader.loadClass(URLClassLoader.java:814)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n\tat jdk.vm.ci.hotspot.UnsafeAccess.initUnsafe(UnsafeAccess.java:43)\r\n\tat jdk.vm.ci.hotspot.UnsafeAccess.<clinit>(UnsafeAccess.java:34)\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getHolder(HotSpotResolvedJavaMethodImpl.java:93)\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.fromMetaspace(HotSpotResolvedJavaMethodImpl.java:110)\r\njava.lang.NoClassDefFoundError: Could not initialize class jdk.vm.ci.hotspot.UnsafeAccess\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getHolder(HotSpotResolvedJavaMethodImpl.java:93)\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.fromMetaspace(HotSpotResolvedJavaMethodImpl.java:110)\r\njava.lang.NoClassDefFoundError: Could not initialize class jdk.vm.ci.hotspot.UnsafeAccess\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getHolder(HotSpotResolvedJavaMethodImpl.java:93)\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.fromMetaspace(HotSpotResolvedJavaMethodImpl.java:110)\r\njava.lang.NoClassDefFoundError: Could not initialize class jdk.vm.ci.hotspot.UnsafeAccess\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getHolder(HotSpotResolvedJavaMethodImpl.java:93)\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.fromMetaspace(HotSpotResolvedJavaMethodImpl.java:110)\r\njava.lang.NoClassDefFoundError: Could not initialize class jdk.vm.ci.hotspot.UnsafeAccess\r\njava.lang.NoClassDefFoundError\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getHolder(HotSpotResolvedJavaMethodImpl.java:93)\r\n: Could not initialize class jdk.vm.ci.hotspot.UnsafeAccess\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.fromMetaspace(HotSpotResolvedJavaMethodImpl.java:110)\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getHolder(HotSpotResolvedJavaMethodImpl.java:93)\r\njava.lang.NoClassDefFoundError\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.fromMetaspace(HotSpotResolvedJavaMethodImpl.java:110)\r\n: Could not initialize class jdk.vm.ci.hotspot.UnsafeAccess\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getHolder(HotSpotResolvedJavaMethodImpl.java:93)\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.fromMetaspace(HotSpotResolvedJavaMethodImpl.java:110)\r\njava.lang.NoClassDefFoundError: Could not initialize class jdk.vm.ci.hotspot.UnsafeAccess\r\njava.lang.NoClassDefFoundError: Could not initialize class jdk.vm.ci.hotspot.UnsafeAccess\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getHolder(HotSpotResolvedJavaMethodImpl.java:93)\r\njava.lang.NoClassDefFoundError\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.fromMetaspace(HotSpotResolvedJavaMethodImpl.java:110)\r\n: Could not initialize class jdk.vm.ci.hotspot.UnsafeAccess\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getHolder(HotSpotResolvedJavaMethodImpl.java:93)\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getHolder(HotSpotResolvedJavaMethodImpl.java:93)\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.fromMetaspace(HotSpotResolvedJavaMethodImpl.java:110)\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.fromMetaspace(HotSpotResolvedJavaMethodImpl.java:110)\r\njava.lang.NoClassDefFoundErrorjava.lang.NoClassDefFoundError: Could not initialize class jdk.vm.ci.hotspot.UnsafeAccess: Could not initialize class jdk.vm.ci.hotspot.UnsafeAccess\r\n\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getHolder(HotSpotResolvedJavaMethodImpl.java:93)\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getHolder(HotSpotResolvedJavaMethodImpl.java:93)\r\njava.lang.NoClassDefFoundError\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.fromMetaspace(HotSpotResolvedJavaMethodImpl.java:110)\r\n: Could not initialize class jdk.vm.ci.hotspot.UnsafeAccess\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getHolder(HotSpotResolvedJavaMethodImpl.java:93)\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.fromMetaspace(HotSpotResolvedJavaMethodImpl.java:110)\r\n\tat jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.fromMetaspace(HotSpotResolvedJavaMethodImpl.java:110)\r\njava.lang.NoClassDefFoundError: Could not initialize class jdk.vm.ci.hotspot.UnsafeAccess\r\njava.lang.NoClassDefFoundErrorjava.lang.NoClassDefFoundError: Could not initialize class jdk.vm.ci.hotspot.UnsafeAccess: Could not initialize class jdk.vm.ci.hotspot.UnsafeAccess\r\n...\r\n```\r\n\r\nThe project runs fine with Oracle JDK or OpenJDK 8.\r\n\r\nThanks.\r\n", "url": "https://github.com/oracle/graal/issues/337", "user": "tmysik", "labels": ["bug", "compiler"], "created": "2018-04-17 18:42:13", "closed": "2018-06-14 11:06:43", "commits": {}, "ttf": 57.000277777777775, "commitsDetails": []}, {"title": "graalvm 0.31 and R language", "body": "There seems to be some issue with the R language.\r\n\r\nOperating System: RHEL7\r\n\r\nSample Code: Test.java\r\n```\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.UnsupportedEncodingException;\r\n\r\nimport org.graalvm.polyglot.Context;\r\nimport org.graalvm.polyglot.Value;\r\n\r\npublic class Test {\r\n\tpublic static void main(String[] args) {\r\n\t\tByteArrayOutputStream yourOutput = new ByteArrayOutputStream();\r\n\t\tContext context = Context.newBuilder()\r\n\t\t\t\t.out(yourOutput)\r\n\t\t\t\t.err(yourOutput)\r\n\t\t\t\t.build();\r\n\t\tStringBuffer stringBuffer = new StringBuffer();\r\n\t\tValue evalValue = context.eval(\"R\",\"print('Hello polyglot world R!');\");\r\n\t\ttry {\r\n\t\t\tstringBuffer.append(\"Output: \").append(yourOutput.toString(\"UTF-8\")).append(\"<br/>\");\r\n\t\t\tstringBuffer.append(\"Result type:  \").append(evalValue.getMetaObject()).append(\"<br/>\");\r\n\t\t\tstringBuffer.append(\"Result value:  \").append(evalValue).append(\"<br/>\");\r\n\t\t} catch (UnsupportedEncodingException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tyourOutput.reset();\r\n\t\tSystem.out.println(stringBuffer.toString());\r\n\t}\r\n}\r\n```\r\nBuild and while running it throws an exception\r\n```\r\nsh-4.2$ /opt/app-root/graalvm-0.31/bin/javac Test.java\r\n\r\nsh-4.2$ /opt/app-root/graalvm-0.31/bin/java Test \r\nException in thread \"main\" org.graalvm.polyglot.PolyglotException: java.lang.UnsatisfiedLinkError: libgomp.so.1: cannot open shared object file: No such file or directory\r\n        at com.oracle.truffle.nfi.impl.NFIContext.loadLibrary(Native Method)\r\n        at com.oracle.truffle.nfi.impl.NFIContext.loadLibrary(NFIContext.java:147)\r\n        at com.oracle.truffle.nfi.impl.NFILanguageImpl$LoadLibraryNode.execute(NFILanguageImpl.java:89)\r\n        at <native> null(Unknown)\r\n        at    <nfi> null(Unknown)\r\n        at      <R> null(Unknown)\r\n        at org.graalvm.polyglot.Context.eval(Context.java:185)\r\n        at Test.main(Test.java:15)\r\nOriginal Internal Error:\r\njava.lang.UnsatisfiedLinkError: libgomp.so.1: cannot open shared object file: No such file or directory\r\n        at com.oracle.truffle.nfi.impl.NFIContext.loadLibrary(Native Method)\r\n        at com.oracle.truffle.nfi.impl.NFIContext.loadLibrary(NFIContext.java:147)\r\n        at com.oracle.truffle.nfi.impl.NFILanguageImpl$LoadLibraryNode.execute(NFILanguageImpl.java:89)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:245)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:234)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:224)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:209)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:192)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:81)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:65)\r\n        at com.oracle.truffle.nfi.NFIRootNode.execute(NFIRootNode.java:81)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:245)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:234)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:224)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:209)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.call(OptimizedCallTarget.java:185)\r\n        at com.oracle.truffle.r.ffi.impl.nfi.TruffleNFI_DLL$TruffleNFI_DLOpenNode.execute(TruffleNFI_DLL.java:60)\r\n        at com.oracle.truffle.r.runtime.ffi.DLLRFFI$DLOpenRootNode.execute(DLLRFFI.java:86)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:245)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:234)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:224)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:209)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.call(OptimizedCallTarget.java:185)\r\n        at com.oracle.truffle.r.runtime.ffi.DLL.loadLibR(DLL.java:437)\r\n        at com.oracle.truffle.r.ffi.impl.nfi.TruffleNFI_Context.initialize(TruffleNFI_Context.java:285)\r\n        at com.oracle.truffle.r.runtime.context.RContext.initializeContext(RContext.java:517)\r\n        at com.oracle.truffle.r.engine.TruffleRLanguageImpl.initializeContext(TruffleRLanguageImpl.java:109)\r\n        at com.oracle.truffle.r.engine.TruffleRLanguageImpl.initializeContext(TruffleRLanguageImpl.java:59)\r\n        at com.oracle.truffle.api.TruffleLanguage$Env.postInit(TruffleLanguage.java:1639)\r\n        at com.oracle.truffle.api.TruffleLanguage$LanguageImpl.postInitEnv(TruffleLanguage.java:1820)\r\n        at com.oracle.truffle.api.vm.PolyglotLanguageContext.ensureInitialized(PolyglotLanguageContext.java:268)\r\n        at com.oracle.truffle.api.vm.PolyglotLanguageContext.parseCached(PolyglotLanguageContext.java:109)\r\n        at com.oracle.truffle.api.vm.PolyglotContextImpl.eval(PolyglotContextImpl.java:745)\r\n        at org.graalvm.polyglot.Context.eval(Context.java:169)\r\n        at org.graalvm.polyglot.Context.eval(Context.java:185)\r\n        at Test.main(Test.java:15)\r\nCaused by: com.oracle.truffle.api.TruffleStackTrace$LazyStackTrace\r\nCaused by: com.oracle.truffle.api.TruffleStackTrace\r\n        at com.oracle.truffle.api.TruffleStackTrace.fillIn(TruffleStackTrace.java:170)\r\n        at com.oracle.truffle.api.TruffleStackTrace.addStackFrameInfo(TruffleStackTrace.java:233)\r\n        at com.oracle.truffle.api.TruffleLanguage$LanguageImpl.onThrowable(TruffleLanguage.java:1845)\r\n        at com.oracle.truffle.api.impl.TVMCI.onThrowable(TVMCI.java:177)\r\n        at org.graalvm.compiler.truffle.runtime.GraalTVMCI.onThrowable(GraalTVMCI.java:112)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:250)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:234)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:224)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:209)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:192)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:81)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:65)\r\n        at com.oracle.truffle.nfi.NFIRootNode.execute(NFIRootNode.java:81)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:245)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:234)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:224)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:209)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.call(OptimizedCallTarget.java:185)\r\n        at com.oracle.truffle.r.ffi.impl.nfi.TruffleNFI_DLL$TruffleNFI_DLOpenNode.execute(TruffleNFI_DLL.java:60)\r\n        at com.oracle.truffle.r.runtime.ffi.DLLRFFI$DLOpenRootNode.execute(DLLRFFI.java:86)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:245)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:234)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:224)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:209)\r\n        at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.call(OptimizedCallTarget.java:185)\r\n        at com.oracle.truffle.r.runtime.ffi.DLL.loadLibR(DLL.java:437)\r\n        at com.oracle.truffle.r.ffi.impl.nfi.TruffleNFI_Context.initialize(TruffleNFI_Context.java:285)\r\n        at com.oracle.truffle.r.runtime.context.RContext.initializeContext(RContext.java:517)\r\n        at com.oracle.truffle.r.engine.TruffleRLanguageImpl.initializeContext(TruffleRLanguageImpl.java:109)\r\n        at com.oracle.truffle.r.engine.TruffleRLanguageImpl.initializeContext(TruffleRLanguageImpl.java:59)\r\n        at com.oracle.truffle.api.TruffleLanguage$Env.postInit(TruffleLanguage.java:1639)\r\n        at com.oracle.truffle.api.TruffleLanguage$LanguageImpl.postInitEnv(TruffleLanguage.java:1820)\r\n        at com.oracle.truffle.api.vm.PolyglotLanguageContext.ensureInitialized(PolyglotLanguageContext.java:268)\r\n        at com.oracle.truffle.api.vm.PolyglotLanguageContext.parseCached(PolyglotLanguageContext.java:109)\r\n        at com.oracle.truffle.api.vm.PolyglotContextImpl.eval(PolyglotContextImpl.java:745)\r\n        at org.graalvm.polyglot.Context.eval(Context.java:169)\r\n        at org.graalvm.polyglot.Context.eval(Context.java:185)\r\n        at Test.main(Test.java:15)\r\n```\r\n\r\n\r\n", "url": "https://github.com/oracle/graal/issues/309", "user": "himanshumps", "labels": ["bug", "r"], "created": "2018-02-24 16:17:15", "closed": "2018-04-25 11:43:33", "commits": {}, "ttf": 59.000277777777775, "commitsDetails": []}, {"title": "[sdk] The SDK launcher doesn't handle GetExecutableName returning null", "body": "`com.oracle.svm.core.posix.GetExecutableName` can return `null` if `realpath` fails. `realpath` can fail if `/proc` isn't mounted, which is sometimes the case in minimal environments like in a chroot. We've seen this happen for real.\r\n\r\nThe problem is that `org.graalvm.launcher.Launcher#getCurrentExecutablePath` does not handle `com.oracle.svm.core.posix.GetExecutableName` returning `null`, and you get an NPE.\r\n\r\nIt's probably reasonable to not work without `/proc`, but we should give a nice error message.\r\n\r\nReported by @liamwhite", "url": "https://github.com/oracle/graal/issues/307", "user": "chrisseaton", "labels": ["bug", "native-image"], "created": "2018-02-22 14:01:02", "closed": "2019-12-28 00:19:21", "commits": {}, "ttf": 673.0002777777778, "commitsDetails": []}, {"title": "Wrapping with custom JVMCI compiler config breaks something in JIT", "body": "I'm not sure how exactly to describe this...\r\n\r\nI have been working on a wrapper for Graal that can plug into JVMCI but allow us to tweak compilation specific to JRuby's workloads. The code for this is at https://github.com/jruby/jruby-graal.\r\n\r\nOriginally, the code simply wrapped and delegated all the Graal JVMCI endpoints, and this worked correctly to decorate Graal's high tier with a special pass for JRuby.\r\n\r\nHowever, now it appears this method of wrapping Graal breaks compilation in some way. I now get these errors:\r\n\r\n```\r\nThread[JVMCI CompilerThread0,9,system]: Compilation of java.util.zip.ZipFile$Source.hashN(byte[], int, int) failed: org.graalvm.compiler.java.BytecodeParser$BytecodeParserError: org.graalvm.compiler.debug.GraalError: org.graalvm.compiler.nodes.extended.BranchProbabilityNode.probability(double, boolean) should have been handled by a GeneratedInvocationPlugin\r\n```\r\n\r\nEven worse, if I remove all my customizations except for returning my own subclass of CoreCompilerConfiguration, it *still* fails, even though the code is identical to Graal's JVMCI plugin (other than the subclass):\r\n\r\n```java\r\n    public static class JRubyCompilerConfigurationFactory extends CoreCompilerConfigurationFactory {\r\n        @Override\r\n        public CompilerConfiguration createCompilerConfiguration() {\r\n//            return new CoreCompilerConfiguration();\r\n            return new JRubyGraalCompilerConfiguration();\r\n        }\r\n    }\r\n\r\n    public static class JRubyGraalCompilerConfiguration extends CoreCompilerConfiguration {\r\n    }\r\n```\r\n\r\nIf I change the code above to return CoreCompilerConfiguration, I get no errors. If I use mine, it errors.\r\n\r\nDoesn't it seem as though something about compilation is changing solely based on whether the configuration class came from Graal?", "url": "https://github.com/oracle/graal/issues/306", "user": "headius", "labels": ["bug", "compiler"], "created": "2018-02-21 18:13:46", "closed": "2018-03-12 21:20:48", "commits": {}, "ttf": 19.00027777777778, "commitsDetails": []}, {"title": "[svm] truffleruby can't start when /dev/shm is not mounted", "body": "```\r\n$ strace graalvm-0.31/bin/ruby --native -e 'Process.exit(0)'\r\nexecve(\"graalvm-0.31/bin/ruby\", [\"graalvm-0.31/bin/ruby\", \"--native\", \"-e\", \"Process.exit(0)\"], [/* 22 vars */]) = 0\r\n\r\n...\r\n\r\nstatfs(\"/dev/shm/\", {f_type=TMPFS_MAGIC, f_bsize=4096, f_blocks=2044018, f_bfree=2044018, f_bavail=2044018, f_files=2044018, f_ffree=2043495, f_fsid={val=[0, 0]}, f_namelen=255, f_frsize=4096, f_flags=ST_VALID|ST_NOSUID|ST_RELATIME}) = 0\r\nfutex(0x7f0e38205330, FUTEX_WAKE_PRIVATE, 2147483647) = 0\r\nopen(\"/dev/shm/sem.cSunMiscSignal-3926\", O_RDWR|O_NOFOLLOW) = -1 ENOENT (No such file or directory)\r\ngetpid()                                = 3926\r\nlstat(\"/dev/shm/usldvC\", 0x7ffd971943f0) = -1 ENOENT (No such file or directory)\r\nopen(\"/dev/shm/usldvC\", O_RDWR|O_CREAT|O_EXCL, 0600) = -1 EACCES (Permission denied)\r\nwrite(2, \"Util_sun_misc_Signal.ensureIniti\"..., 71) = 71\r\n\r\nUtil_sun_misc_Signal.ensureInitialized: CSunMiscSignal.create() failed.\r\n```\r\n\r\nRunning on the JVM works.\r\nComplete backtrace [here](https://gist.github.com/liamwhite/affa7d31550269881a024b2fb48fcad6).", "url": "https://github.com/oracle/graal/issues/305", "user": "liamwhite", "labels": ["bug", "native-image", "wontfix"], "created": "2018-02-19 22:42:08", "closed": "2019-02-11 12:34:42", "commits": {}, "ttf": 356.0002777777778, "commitsDetails": []}, {"title": "\"failed: polling page vectors safepoint stub not created yet\" in SharedRuntime::get_poll_stub on GraalVM 0.31", "body": "Graal VM crashes (SIGSEGV, or \"failed: polling page vectors safepoint stub not created yet\" on fastdebug) when executing compiled Scala code. The problem occurs before Truffle initializes and only seems to happen when +UseJVMCICompiler is turned on. The crash is non-deterministic and only occurs quickly in 1 in 10 runs (roughly). It appears to be less frequent on a fast debug build.\r\n\r\nCurrently reproducing this crash requires running the entire Orc compiler (https://github.com/orc-lang/orc). However, a reference in one of the hs_err files makes me thing I might be able to create a scala-parser-combinators stress test to set this off. I'll try to do that in the next few days. But for now here is the jar which contains the ```scala.util.parsing.combinator.Parsers$$anon$2$$Lambda$477.apply``` method which appeared in the hs_err: http://central.maven.org/maven2/org/scala-lang/modules/scala-parser-combinators_2.12/1.0.6/scala-parser-combinators_2.12-1.0.6.jar.\r\n\r\nWith a fastdebug libjvm (from @gilles-duboscq via graal-dev) I did get hs_err files. One file (out of many runs) did have a Java level stack trace: [hs_err_pid3981.log](https://github.com/oracle/graal/files/1737543/hs_err_pid3981.log). However, most of the hs_err files have no frames above the pthreads signal handler: [hs_err_pid5402.log](https://github.com/oracle/graal/files/1737547/hs_err_pid5402.log).\r\n", "url": "https://github.com/oracle/graal/issues/303", "user": "arthurp", "labels": ["bug", "compiler"], "created": "2018-02-19 16:50:05", "closed": "2018-03-05 12:16:39", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "Semantics of TruffleBoundary.allowInlining changed in GraalVM", "body": "The semantics of TruffleBoundary.allowInlining seems to have changed in GraalVM 0.31. Specifically, if allowInlining = true the function may be inlined *during partial evaluation*. This causes errors such as overly deep inlining due to trying to partial evaluation of j.l.invoke.MethodHandle.asType (and internally makeImpl). But this is also visible using neverPartOfCompilation.\r\n\r\nI have written an example: https://gist.github.com/arthurp/bbfe1a72b350647e9deb1ab12db504ce\r\n\r\nThis problem is a regression if the intended allowInlining semantics is that Graal is allowed to do inlining, but the boundary still prevents partial evaluation. If however allowInlining is supposed to allow optional partial evaluation through the boundary then this is a documentation bug.", "url": "https://github.com/oracle/graal/issues/300", "user": "arthurp", "labels": ["bug", "compiler", "truffle"], "created": "2018-02-18 18:45:00", "closed": "2018-02-20 13:39:23", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Incorrect results from Math.exp", "body": "The Graal optimized Math.exp seems to be producing incorrect results by a large margin (not a few ulp). Specifically exp(x) for x < -1023 produces ~3.99999.... Before Graal compilation, the result is correct.\r\n\r\nI wrote a program to demonstrate this.\r\n\r\n```Java\r\ndouble compute(double x) {\r\n\treturn Math.exp(x);\r\n}\r\n\r\nvoid run(int n) {\r\n\tdouble x = Double.parseDouble(\"-1024\"); // Make sure the optimizer doesn't constant propagate.\r\n\tdouble r = 0; // Collector to make sure the computed value is used.\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tr += compute(x);\r\n\t}\r\n\t// Print the result of compute and collector (to prevent optimizations)\r\n\tSystem.out.println(compute(x) + \" (collector: \" + r + \")\");\r\n}\r\n```\r\n(for a runnable version see [MathOptimizationTest2.java](https://gist.githubusercontent.com/arthurp/8683294996d7ad07e8931a916c8ef39c/raw/fdbe4381e688788a9f4077187faa73b669b3f1cb/MathOptimizationTest2.java))\r\n\r\nThis code produces the following output on GraalVM 0.31:\r\n\r\n```\r\n0.0 (collector: 0.0)\r\n3.9999999999999996 (collector: 39999.99999999999)\r\n3.9999999999999996 (collector: 39999.99999999999)\r\n3.9999999999999996 (collector: 39999.99999999999)\r\n3.9999999999999996 (collector: 39999.99999999999)\r\n```\r\n\r\n(Just to be clear the number should be exp(-1024) which is 0 at double-precision)\r\n\r\nThe same code running on with \"-XX:-UseJVMCICompiler\" to disable Graal for the code produces the expected output (this output is also produced by my Java 8 JRE):\r\n\r\n```\r\n0.0 (collector: 0.0)\r\n0.0 (collector: 0.0)\r\n0.0 (collector: 0.0)\r\n0.0 (collector: 0.0)\r\n0.0 (collector: 0.0)\r\n```\r\n\r\nThe issue first appears at -1024 (-1023 works correctly giving 0.0). I dug a little and I noticed this: \r\n\r\n> For  IEEE double if x > 709.782712893383973096 then exp(x) overflow if x < -745.133219101941108420 then exp(x) underflow \r\n\r\nin [org.graalvm.compiler.lir.amd64.AMD64MathIntrinsicUnaryOp](https://github.com/oracle/graal/blob/3b1d7f2e9c3bb6a57600dbbcad20e5ecea36a20f/compiler/src/org.graalvm.compiler.lir.amd64/src/org/graalvm/compiler/lir/amd64/AMD64MathIntrinsicUnaryOp.java#L3456). I don't know enough about Graal to tell if this code is actually used in my case and the limits are not the same, but it definitely seems related.\r\n", "url": "https://github.com/oracle/graal/issues/296", "user": "arthurp", "labels": ["bug", "compiler"], "created": "2018-02-14 16:29:05", "closed": "2018-09-03 16:23:46", "commits": {}, "ttf": 200.00027777777777, "commitsDetails": []}, {"title": "Substrate VM build step fails on MacOSX", "body": "Followed the [quick start](https://github.com/graalvm/graal/tree/master/substratevm#quick-start) guide\r\n\r\n* Env\r\n```\r\nMac OS : 10.12.6 \r\n ~/install/graal/graal/substratevm (master) $ java -version\r\njava version \"1.8.0_151\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_151-b12)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.71-b01-internal-jvmci-0.38, mixed mode)\r\n```\r\n\r\n```\r\n$ mx build \r\n....\r\nArchiving CHROMEINSPECTOR_TEST... [dependency com.oracle.truffle.tools.chromeinspector.test updated]\r\nCompiling org.graalvm.compiler.virtual with javac-daemon... [dependency GRAAL_OPTIONS_PROCESSOR updated]\r\nCompiling org.graalvm.compiler.loop.phases with javac-daemon... [dependency GRAAL_OPTIONS_PROCESSOR updated]\r\nCompiling com.oracle.truffle.api.dsl.test with javac-daemon... [dependency TRUFFLE_DSL_PROCESSOR updated]\r\nCompiling org.graalvm.compiler.replacements with javac-daemon... [dependency GRAAL_OPTIONS_PROCESSOR updated]\r\nCompiling com.oracle.truffle.api.interop.java.test with javac-daemon... [dependency TRUFFLE_DSL_PROCESSOR updated]\r\nArchiving TRUFFLE_SL_TEST... [dependency com.oracle.truffle.sl.test updated]\r\njava.util.ServiceConfigurationError: com.oracle.truffle.api.TruffleRuntimeAccess: Provider org.graalvm.compiler.truffle.hotspot.HotSpotTruffleRuntimeAccess not a subtype\r\n\tat java.util.ServiceLoader.fail(ServiceLoader.java:239)\r\n\tat java.util.ServiceLoader.access$300(ServiceLoader.java:185)\r\n\tat java.util.ServiceLoader$LazyIterator.nextService(ServiceLoader.java:376)\r\n\tat java.util.ServiceLoader$LazyIterator.next(ServiceLoader.java:404)\r\n\tat java.util.ServiceLoader$1.next(ServiceLoader.java:480)\r\n\tat com.oracle.truffle.api.Truffle.selectTruffleRuntimeAccess(Truffle.java:64)\r\n\tat com.oracle.truffle.api.Truffle.access$000(Truffle.java:39)\r\n\tat com.oracle.truffle.api.Truffle$1.run(Truffle.java:145)\r\n\tat com.oracle.truffle.api.Truffle$1.run(Truffle.java:118)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat com.oracle.truffle.api.Truffle.initRuntime(Truffle.java:118)\r\n\tat com.oracle.truffle.api.Truffle.<clinit>(Truffle.java:48)\r\n\tat com.oracle.truffle.api.TruffleOptions.<clinit>(TruffleOptions.java:126)\r\n\tat com.oracle.truffle.api.interop.Message.valueOf(Message.java:753)\r\n\tat com.oracle.truffle.dsl.processor.interop.Utils.getMessage(Utils.java:56)\r\n\tat com.oracle.truffle.dsl.processor.interop.MessageGenerator.getGenerator(MessageGenerator.java:151)\r\n\tat com.oracle.truffle.dsl.processor.interop.InteropDSLProcessor.processResolveClass(InteropDSLProcessor.java:229)\r\n\tat com.oracle.truffle.dsl.processor.interop.InteropDSLProcessor.processElement(InteropDSLProcessor.java:167)\r\n\tat com.oracle.truffle.dsl.processor.interop.InteropDSLProcessor.process0(InteropDSLProcessor.java:90)\r\n\tat com.oracle.truffle.dsl.processor.interop.InteropDSLProcessor.process(InteropDSLProcessor.java:83)\r\n\tat com.sun.tools.javac.processing.JavacProcessingEnvironment.callProcessor(JavacProcessingEnvironment.java:794)\r\n\tat com.sun.tools.javac.processing.JavacProcessingEnvironment.discoverAndRunProcs(JavacProcessingEnvironment.java:705)\r\n\tat com.sun.tools.javac.processing.JavacProcessingEnvironment.access$1800(JavacProcessingEnvironment.java:91)\r\n\tat com.sun.tools.javac.processing.JavacProcessingEnvironment$Round.run(JavacProcessingEnvironment.java:1035)\r\n\tat com.sun.tools.javac.processing.JavacProcessingEnvironment.doProcessing(JavacProcessingEnvironment.java:1176)\r\n\tat com.sun.tools.javac.main.JavaCompiler.processAnnotations(JavaCompiler.java:1170)\r\n\tat com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:856)\r\n\tat com.sun.tools.javac.main.Main.compile(Main.java:523)\r\n\tat com.sun.tools.javac.main.Main.compile(Main.java:381)\r\n\tat com.sun.tools.javac.main.Main.compile(Main.java:370)\r\n\tat com.sun.tools.javac.main.Main.compile(Main.java:361)\r\n\tat com.sun.tools.javac.Main.compile(Main.java:56)\r\n\tat sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.oracle.mxtool.compilerserver.JavacDaemon$JavacCompiler.compile(JavacDaemon.java:32)\r\n\tat com.oracle.mxtool.compilerserver.CompilerDaemon$Connection.run(CompilerDaemon.java:149)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n/Users/sgopal1/install/graal/graal/truffle/src/com.oracle.truffle.api.interop.java.test/src/com/oracle/truffle/api/interop/java/test/OwnMessageResolutionTest.java:35: error: Uncaught error in class com.oracle.truffle.dsl.processor.interop.InteropDSLProcessor: com.oracle.truffle.api.TruffleRuntimeAccess: Provider org.graalvm.compiler.truffle.hotspot.HotSpotTruffleRuntimeAccess not a subtype\r\npublic class OwnMessageResolutionTest {\r\n```", "url": "https://github.com/oracle/graal/issues/275", "user": "sureshg", "labels": ["bug", "native-image"], "created": "2018-01-05 09:10:53", "closed": "2018-06-22 10:22:19", "commits": {}, "ttf": 168.00027777777777, "commitsDetails": []}, {"title": "[Truffle] Fails to build due to too long filename on eCryptfs", "body": "## Environment\r\n\r\n* OS: Ubuntu 17.10\r\n* JDK: GraalVM 0.30.1 (JDK 8)\r\n* graal JDK-8192814 tag\r\n* Encrypted home directory with eCryptfs\r\n\r\n## Error\r\n```\r\n/.../graal/truffle/src/com.oracle.truffle.sl/src/com/oracle/truffle/sl/runtime/SLFunctionRegistry.java:214: error: error while writing FunctionNamesHasSizeNode: /.../graal/truffle/mxbuild/src/com.oracle.truffle.sl/bin/com/oracle/truffle/sl/runtime/SLFunctionRegistry$FunctionsObject$FunctionsObjectMessageResolution$FunctionNamesObject$FunctionNamesMessageResolution$FunctionNamesHasSizeNode.class (File name too long)\r\n```", "url": "https://github.com/oracle/graal/issues/270", "user": "zakkak", "labels": ["bug", "truffle"], "created": "2017-12-13 12:19:28", "closed": "2018-03-08 07:58:23", "commits": {}, "ttf": 84.00027777777778, "commitsDetails": []}, {"title": "Failed to cancel current process", "body": "Let me start by stating that this project \ud83c\udfb8 !\r\n\r\nThe issue: Can't cancel current process when ruby interop is called.\r\n\r\n```javascript\r\nconst express = require('express');\r\nconst app = express();\r\n\r\nconst BigInteger = Java.type('java.math.BigInteger');\r\n\r\napp.get('/', (req, res) => {\r\n  let text = `How to fix JS numbers... ${BigInteger.valueOf(2).pow(100).toString(16)} ... use Java!`;\r\n  text += Interop.eval('application/x-r', 'paste(\"Hello from R\", runif(100))');\r\n  text += Interop.eval('application/x-python', '\" - And from Python: \" + \"Hello \" * 3');\r\n  text += Interop.eval('application/x-ruby', '\" - And from Ruby: \" + Math.sqrt(9).to_s');\r\n  return res.send(`Result: ${text}`);\r\n});\r\n\r\napp.listen(3000, () => console.log('Example app listening on port 3000!'));\r\n```\r\n\r\nExecution goes fine but when one tries to cancel the process using Ctrl-C the following error is displayed. \r\n\r\n```bash\r\n\u25cb \u2192 node --jvm --polyglot server.js\r\nExample app listening on port 3000!\r\n^CException in thread \"Polyglot-ruby-0\" com.oracle.truffle.api.vm.PolyglotIllegalStateException: Multi threaded access requested by thread Thread[Polyglot-ruby-0,9,system] but is not allowed for language(s) regex, js.\r\n\tat com.oracle.truffle.api.vm.PolyglotContextImpl.throwDeniedThreadAccess(PolyglotContextImpl.java:453)\r\n\tat com.oracle.truffle.api.vm.PolyglotContextImpl.checkAllThreadAccesses(PolyglotContextImpl.java:357)\r\n\tat com.oracle.truffle.api.vm.PolyglotContextImpl.enterThreadChanged(PolyglotContextImpl.java:290)\r\n\tat com.oracle.truffle.api.vm.PolyglotContextImpl.enter(PolyglotContextImpl.java:261)\r\n\tat com.oracle.truffle.api.vm.PolyglotLanguageContext.enter(PolyglotLanguageContext.java:125)\r\n\tat com.oracle.truffle.api.vm.PolyglotLanguageContext.enterThread(PolyglotLanguageContext.java:178)\r\n\tat com.oracle.truffle.api.vm.PolyglotThread.run(PolyglotThread.java:50)\r\n```\r\n\r\nThis only happens when the Ruby interop is used.\r\n\r\nPlatform:\r\nOS name: \"mac os x\", version: \"10.13.1\", arch: \"x86_64\", family: \"mac\"\r\n\r\nJava/GraalVM:\r\njava version \"1.8.0_151\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_151-b12)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.71-b01-internal-jvmci-0.38, mixed mode)", "url": "https://github.com/oracle/graal/issues/267", "user": "bmsantos", "labels": ["bug", "ruby"], "created": "2017-12-07 02:37:02", "closed": "2018-03-12 12:17:50", "commits": {}, "ttf": 95.00027777777778, "commitsDetails": []}, {"title": "Assertion failure in LoopFragmentInside.insertWithinAfter", "body": "After updating Graal/Truffle to https://github.com/graalvm/graal/commit/b8870391f574bb4d1663423ebb7f56b1ec27fbc0, I am seeing the following assertion failing:\r\n\r\n```\r\njava.lang.AssertionError\r\n\tat org.graalvm.compiler.loop.LoopFragmentInside.insertWithinAfter(LoopFragmentInside.java:195)\r\n\tat org.graalvm.compiler.loop.LoopFragmentInside.insertWithinAfter(LoopFragmentInside.java:153)\r\n\tat org.graalvm.compiler.loop.phases.LoopTransformations.partialUnroll(LoopTransformations.java:154)\r\n\tat org.graalvm.compiler.loop.phases.LoopPartialUnrollPhase.run(LoopPartialUnrollPhase.java:67)\r\n\tat org.graalvm.compiler.loop.phases.LoopPartialUnrollPhase.run(LoopPartialUnrollPhase.java:34)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:195)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:137)\r\n\tat org.graalvm.compiler.phases.PhaseSuite.run(PhaseSuite.java:203)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:195)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:137)\r\n\tat org.graalvm.compiler.core.GraalCompiler.emitFrontEnd(GraalCompiler.java:234)\r\n\tat org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:172)\r\n\tat org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:158)\r\n\tat org.graalvm.compiler.truffle.TruffleCompiler.compileMethodHelper(TruffleCompiler.java:232)\r\n\tat org.graalvm.compiler.truffle.TruffleCompiler.compileMethod(TruffleCompiler.java:181)\r\n```\r\n\r\nTo reproduce the problem, you can use the following steps:\r\n\r\n```bash\r\ngit clone -b dev https://github.com/smarr/SOMns\r\ncd SOMns\r\nant compile\r\n\r\nexport JVMCI_BIN=$YOUR_PATH_TO_YOUR_GRAAL_JVMCI_BINARY\r\nexport GRAAL_FLAGS=$ANY_GRAAL_FLAGS_PERHAPS\r\n./som -t1  core-lib/Benchmarks/AsyncHarness.ns Savina.UnbalancedCobwebbedTree 100 25  100000:10:500:100\r\n```\r\n\r\nThe assertion triggers mostly deterministic, but not in 100% of the runs.\r\n\r\nTo determine the plain `java` command-line, use `-vv`:\r\n```bash\r\n./som -t1 -vv core-lib/Benchmarks/AsyncHarness.ns Savina.UnbalancedCobwebbedTree 100 25  100000:10:500:100\r\n```", "url": "https://github.com/oracle/graal/issues/252", "user": "smarr", "labels": ["bug"], "created": "2017-08-31 09:38:38", "closed": "2017-09-04 19:08:58", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Failing assertion: a second round in the current lowering phase introduced these new nodes", "body": "When trying to confirm that https://github.com/graalvm/graal-core/issues/271 got fixed successfully, I stumbled into a new issue, using https://github.com/graalvm/graal/commit/eb130b8f66bcab141349b1709da6a63452ac2164\r\n\r\nIt looks roughly like this, full stacktrace in details:\r\n```\r\nHotSpotMethod<OptimizedCallTarget.callRoot(Object[])>}: a second round in the current lowering phase introduced these new nodes: [2420|==, 2421|<, 2422|Conditional, 2423|Conditional, 2424|==, 2425|<, 2426|Conditional, 2427|Conditional]\r\n                Context obj org.graalvm.compiler.phases.common.LoweringPhase@743b8578\r\n                Context obj org.graalvm.compiler.core.phases.HighTier@654e235f\r\n\r\n```\r\n\r\n\r\n<details>\r\n\r\n```\r\nStarting CD benchmark ... \r\n[thread:13] scope: TruffleCompilerThread-13\r\n  [thread:13] scope: TruffleCompilerThread-13.Truffle\r\n  Context: Truffle<Method_RedBlackTree>>#treeAt:insert:\t@5b614145()>\r\n    [thread:13] scope: TruffleCompilerThread-13.Truffle.TruffleGraal.GraalCompiler\r\n    Context: StructuredGraph:4{Method RedBlackTree>>#treeAt:insert:\t@5b614145, HotSpotMethod<OptimizedCallTarget.callRoot(Object[])>}\r\n        [thread:13] scope: TruffleCompilerThread-13.Truffle.TruffleGraal.GraalCompiler.GraalCompilerRoot.GraalCompiler\r\n        Context: StructuredGraph:4{Method RedBlackTree>>#treeAt:insert:\t@5b614145, HotSpotMethod<OptimizedCallTarget.callRoot(Object[])>}\r\n                [thread:13] scope: TruffleCompilerThread-13.Truffle.TruffleGraal.GraalCompiler.GraalCompilerRoot.GraalCompiler.FrontEnd.HighTier.LoweringPhase.InterceptException\r\n                Exception occurred in scope: TruffleCompilerThread-13.Truffle.TruffleGraal.GraalCompiler.GraalCompilerRoot.GraalCompiler.FrontEnd.HighTier.LoweringPhase.InterceptException\r\n                Context obj java.lang.AssertionError: StructuredGraph:4{Method RedBlackTree>>#treeAt:insert:\t@5b614145, HotSpotMethod<OptimizedCallTarget.callRoot(Object[])>}: a second round in the current lowering phase introduced these new nodes: [2420|==, 2421|<, 2422|Conditional, 2423|Conditional, 2424|==, 2425|<, 2426|Conditional, 2427|Conditional]\r\n                Context obj org.graalvm.compiler.phases.common.LoweringPhase@743b8578\r\n                Context obj org.graalvm.compiler.core.phases.HighTier@654e235f\r\n                Context obj StructuredGraph:4{Method RedBlackTree>>#treeAt:insert:\t@5b614145, HotSpotMethod<OptimizedCallTarget.callRoot(Object[])>}\r\n                Context obj jdk.vm.ci.hotspot.HotSpotCodeCacheProvider@5fa69b97\r\n                Context obj Truffle<Method_RedBlackTree>>#treeAt:insert:\t@5b614145()>\r\n[truffle] opt fail         Method RedBlackTree>>#treeAt:insert:\t@5b614145              |Reason java.lang.AssertionError: StructuredGraph:4{Method RedBlackTree>>#treeAt:insert:\t@5b614145, HotSpotMethod<OptimizedCallTarget.callRoot(Object[])>}: a second round in the current lowering phase introduced these new nodes: [2420|==, 2421|<, 2422|Conditional, 2423|Conditional, 2424|==, 2425|<, 2426|Conditional, 2427|Conditional]\r\njava.lang.AssertionError: StructuredGraph:4{Method RedBlackTree>>#treeAt:insert:\t@5b614145, HotSpotMethod<OptimizedCallTarget.callRoot(Object[])>}: a second round in the current lowering phase introduced these new nodes: [2420|==, 2421|<, 2422|Conditional, 2423|Conditional, 2424|==, 2425|<, 2426|Conditional, 2427|Conditional]\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase.checkPostLowering(LoweringPhase.java:235)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase.run(LoweringPhase.java:242)\r\n\tat org.graalvm.compiler.phases.common.LoweringPhase.run(LoweringPhase.java:86)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:187)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n\tat org.graalvm.compiler.phases.PhaseSuite.run(PhaseSuite.java:179)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:187)\r\n\tat org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:139)\r\n\tat org.graalvm.compiler.core.GraalCompiler.emitFrontEnd(GraalCompiler.java:231)\r\n\tat org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:174)\r\n\tat org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:160)\r\n\tat org.graalvm.compiler.truffle.TruffleCompiler.compileMethodHelper(TruffleCompiler.java:224)\r\n\tat org.graalvm.compiler.truffle.TruffleCompiler.compileMethod(TruffleCompiler.java:177)\r\n\tat org.graalvm.compiler.truffle.GraalTruffleRuntime.doCompile0(GraalTruffleRuntime.java:529)\r\n\tat org.graalvm.compiler.truffle.GraalTruffleRuntime.doCompile(GraalTruffleRuntime.java:515)\r\n\tat org.graalvm.compiler.truffle.GraalTruffleRuntime$1.run(GraalTruffleRuntime.java:560)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\tat org.graalvm.compiler.core.CompilerThread.run(CompilerThread.java:51)\r\n```\r\n\r\n</details>\r\n\r\nTo reproduce the problem, you can use the following steps:\r\n\r\n```bash\r\ngit clone https://github.com/smarr/SOMns\r\ncd SOMns\r\nant compile\r\n\r\nexport JVMCI_BIN=$YOUR_PATH_TO_YOUR_GRAAL_JVMCI_BINARY\r\nexport GRAAL_FLAGS=$ANY_GRAAL_FLAGS_PERHAPS\r\n./som -t1  core-lib/Benchmarks/Harness.som CD  130 0 100\r\n```\r\n\r\nTo determine the plain `java` command-line, use `-vv`:\r\n```bash\r\n./som -t1 -vv core-lib/Benchmarks/Harness.som CD  130 0 100\r\n```", "url": "https://github.com/oracle/graal/issues/217", "user": "smarr", "labels": ["bug"], "created": "2017-05-02 14:07:39", "closed": "2017-05-05 16:14:30", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "DSL flat layout issue with custom abstract execute method: Incorrect cast", "body": "The following class leads to incorrectly generated code:\r\n\r\n```Java\r\n@DSLOptions(defaultGenerator = DSLGenerator.FLAT)\r\npublic abstract class FooBar extends Node {\r\n  @Children protected final FooBar[] args;\r\n\r\n  protected FooBar() { args = new FooBar[0]; }\r\n\r\n  public abstract Object execute(VirtualFrame frame, Object[] args);\r\n\r\n  @Specialization\r\n  public Object test(final Object[] args) {\r\n    return null;\r\n  }\r\n}\r\n```\r\n\r\nIt results in the following `execute(.)` method. The last line has the incorrect `(Object)` cast.\r\n\r\n```Java\r\n    @Override\r\n    public Object execute(VirtualFrame frameValue, Object[] arg0Value) {\r\n        int state = state_;\r\n        if ((state & 0b10) != 0 /* is-active test(Object[]) */) {\r\n            return test(arg0Value);\r\n        }\r\n        CompilerDirectives.transferToInterpreterAndInvalidate();\r\n        return executeAndSpecialize((Object) arg0Value);\r\n    }\r\n```", "url": "https://github.com/oracle/graal/issues/210", "user": "smarr", "labels": ["bug"], "created": "2016-11-29 22:22:09", "closed": "2017-02-09 17:58:00", "commits": {}, "ttf": 71.00027777777778, "commitsDetails": []}, {"title": "Thread-Safety of Frames", "body": "Currently, the implementations of `VirtualFrame` and `MaterializedFrame` are not thread-safe.\n\nThis causes data races in languages with lexical scope that are shared between multiple threads (typically on `MaterializedFrame` objects).\n\nFrom my perspective there are two possible ways forward:\n1. acknowledge the fact and documented as 'by design' in the JavaDoc, ideally with a description of possible solutions for language implementers\n2. try to find a way to make it safe as part of the framework\n\nRelated post on mailing list: http://mail.openjdk.java.net/pipermail/graal-dev/2016-October/004592.html\n\nThis might actually already be observable in languages like Ruby with multiple threads, @eregon @chrisseaton?\n", "url": "https://github.com/oracle/graal/issues/208", "user": "smarr", "labels": ["bug", "truffle"], "created": "2016-10-25 12:59:03", "closed": "2018-04-03 11:10:45", "commits": {}, "ttf": 524.0002777777778, "commitsDetails": []}, {"title": "DSL creates incorrect createNode(...) if constructor has `Object` arguments", "body": "The following example leads to a wrong `createNode(..)` method:\n\n``` java\n@GenerateNodeFactory\n@NodeChildren({\n  @NodeChild(value = \"foo\",  type = FooBarNode.class),\n  @NodeChild(value = \"bar\",  type = FooBarNode.class)})\npublic abstract class FooBarNode extends Node {\n  public FooBarNode(final SourceSection source, final Object a, final Object b) { }\n\n  public abstract Object executeGeneric(final VirtualFrame frame);\n\n  @Specialization\n  public Object doSomething(final VirtualFrame frame, final Object foo, final Object bar) {\n    return null;\n  }\n}\n```\n\nThe result looks like this:\n\n``` java\npublic FooBarNode createNode(Object... arguments) {\n    if (arguments.length == 5 && (arguments[0] == null || arguments[0] instanceof SourceSection) && (arguments[1] == null || arguments[1] instanceof FooBarNode) && (arguments[2] == null || arguments[2] instanceof FooBarNode)) {\n        return create((SourceSection) arguments[0], arguments[1], arguments[2], (FooBarNode) arguments[3], (FooBarNode) arguments[4]);\n    } else {\n        throw new IllegalArgumentException(\"Invalid create signature.\");\n    }\n}\n```\n\nThe important bit is that the type checks miss the `Object` arguments, and thus, the indexes used to check for the two `FooBarNode` are off by the number of `Object` arguments in the `FooBarNode` constructor.\n", "url": "https://github.com/oracle/graal/issues/205", "user": "smarr", "labels": ["bug"], "created": "2016-09-09 16:34:23", "closed": "2016-11-29 20:49:46", "commits": {"30561c085aae6f738f16b9cfe2c31761f05cd81d": {"commitGHEventType": "referenced", "commitUser": "dougxc"}, "8caa7bae2ba6eb518ee2b82efa858473fb091799": {"commitGHEventType": "referenced", "commitUser": "dougxc"}}, "ttf": 81.00027777777778, "commitsDetails": [{"commitHash": "30561c085aae6f738f16b9cfe2c31761f05cd81d", "commitGHEventType": "referenced", "commitUser": "dougxc", "commitParents": ["b3f102a7c5d73c18f7b143059d6b99e2a2b6b994", "bb86c00cf58353f6434a204d8b490b5c8df82d71"], "nameRev": "30561c085aae6f738f16b9cfe2c31761f05cd81d tags/graal-vm-0.17~10", "commitMessage": "Merge pull request #205 in G/truffle from ~JAROSLAV.TULACH_ORACLE.COM/truffle:InteropMap to master\n\nIntroducing Message.KEYS that gives us a way to look at TruffleObject as a java.util.Map\n\n* commit 'bb86c00cf58353f6434a204d8b490b5c8df82d71':\n  Removing not used method parameters\n  Removing no longer used method parameter\n  Javadoc fixes\n  Note about Message.KEYS in changelog\n  Let the generated DSL code return null on accessXYZ methods and throw the UnsupportedMessageException by the infrastructure\n  Using Message.KEYS instead of properties\n  Putting the Shape.getKeyList behind a @TruffleBoundary\n  Removing usage of deprecated APIs and providing Jackpot hint to do so semi-automatically\n  Introducing Factory18 interface with accessProperties() method and changing all annotation processor to use it\n  Removing unnecessary public keyword\n  Proper formatting\n  Supporting object properties listing in SL\n  Implement entrySet <-> Message.PROPERTIES mapping\n  Message.PROPERTIES is unary message\n  Message.PROPERTIES is a known one\n  Introducing Message.PROPERTIES to find out array of properties for a foreign object\n  TruffleMap with get and put operations\n  Accessing special Data class, not the test class\n  Basic test for java.util.Map based interop\n", "commitDateTime": "2016-09-21 23:12:09", "authoredDateTime": "2016-09-21 23:12:09", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "truffle/com.oracle.truffle.api.interop.java.test/src/com/oracle/truffle/api/interop/java/test/BoxedStringTest.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "truffle/com.oracle.truffle.api.interop.java.test/src/com/oracle/truffle/api/interop/java/test/JavaInteropTest.java", "insertions": 64, "deletions": 24, "lines": 88}, {"filePath": "truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/JavaObjectMessageResolution.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/ToJavaNode.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/TruffleMap.java", "insertions": 123, "deletions": 0, "lines": 123}, {"filePath": "truffle/com.oracle.truffle.api.interop/src/META-INF/upgrade/factory.hint", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "truffle/com.oracle.truffle.api.interop/src/com/oracle/truffle/api/interop/ForeignAccess.java", "insertions": 249, "deletions": 11, "lines": 260}, {"filePath": "truffle/com.oracle.truffle.api.interop/src/com/oracle/truffle/api/interop/GenericObjectAccessNode.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "truffle/com.oracle.truffle.api.interop/src/com/oracle/truffle/api/interop/Keys.java", "insertions": 35, "deletions": 0, "lines": 35}, {"filePath": "truffle/com.oracle.truffle.api.interop/src/com/oracle/truffle/api/interop/Message.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "truffle/com.oracle.truffle.api.test/src/com/oracle/truffle/api/interop/ForeignAccessToStringTest.java", "insertions": 12, "deletions": 2, "lines": 14}, {"filePath": "truffle/com.oracle.truffle.api.test/src/com/oracle/truffle/api/vm/ArrayTruffleObject.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "truffle/com.oracle.truffle.dsl.processor/src/com/oracle/truffle/dsl/processor/InteropProcessor.java", "insertions": 49, "deletions": 41, "lines": 90}, {"filePath": "truffle/com.oracle.truffle.dsl.processor/src/com/oracle/truffle/dsl/processor/interop/ForeignAccessFactoryGenerator.java", "insertions": 21, "deletions": 14, "lines": 35}, {"filePath": "truffle/com.oracle.truffle.dsl.processor/src/com/oracle/truffle/dsl/processor/interop/GenericGenerator.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "truffle/com.oracle.truffle.dsl.processor/src/com/oracle/truffle/dsl/processor/interop/InteropDSLProcessor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "truffle/com.oracle.truffle.dsl.processor/src/com/oracle/truffle/dsl/processor/interop/MessageGenerator.java", "insertions": 4, "deletions": 6, "lines": 10}, {"filePath": "truffle/com.oracle.truffle.sl.test/src/com/oracle/truffle/sl/test/SLDebugLegacyTest.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "truffle/com.oracle.truffle.sl/src/com/oracle/truffle/sl/runtime/SLObjectMessageResolution.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "truffle/com.oracle.truffle.tck/src/com/oracle/truffle/tck/BoxedValue.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "truffle/com.oracle.truffle.tck/src/com/oracle/truffle/tck/TruffleTCK.java", "insertions": 35, "deletions": 10, "lines": 45}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}, {"commitHash": "8caa7bae2ba6eb518ee2b82efa858473fb091799", "commitGHEventType": "referenced", "commitUser": "dougxc", "commitParents": ["235fb40219800b0cabcd05f50fac8cf33db84985"], "nameRev": "8caa7bae2ba6eb518ee2b82efa858473fb091799 tags/truffle-0.21~8^2~1", "commitMessage": "Fixes incorrect argument index in createNode(..)\n\nThis fixes issue #205.\n\nSigned-off-by: Stefan Marr <git@stefan-marr.de>\n", "commitDateTime": "2016-11-28 18:29:10", "authoredDateTime": "2016-09-09 18:57:37", "commitGitStats": [{"filePath": "truffle/com.oracle.truffle.dsl.processor/src/com/oracle/truffle/dsl/processor/generator/NodeFactoryFactory.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "NodeFactoryFactory.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.dsl.processor.generator.NodeFactoryFactory.createCreateNodeMethod()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8caa7bae2ba6eb518ee2b82efa858473fb091799"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 0, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1.0, "UPD": 0.0, "INS": 1.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["truffle/com.oracle.truffle.dsl.processor/src/com/oracle/truffle/dsl/processor/generator"], "changesInPackagesSPOON": ["com.oracle.truffle.dsl.processor.generator.NodeFactoryFactory.createCreateNodeMethod()"]}, {"title": "TruffleDSL Specialization causes broken code generation (related to not operator use , \"!\")", "body": "The following node definition causes the DSL to generated invalid code:\n\n``` Java\npublic abstract class BreakpointNode extends Node {\n\n  public abstract boolean executeCheckIsSetAndEnabled();\n\n  protected BreakpointInfo getBreakpointStatus() {\n    return null;\n  }\n\n  @Specialization(guards = \"!info.hasBreakpoint\")\n  public boolean noBreakpoint(@Cached(\"getBreakpointStatus()\") final BreakpointInfo info) {\n    return false;\n  }\n\n  @Specialization(guards = {\"info.hasBreakpoint\", \"!info.breakpoint.isEnabled()\"})\n  public boolean breakpointDisabled(@Cached(\"getBreakpointStatus()\") final BreakpointInfo info) {\n    return false;\n  }\n}\n```\n\nSpecifically, this generates the following `createNext(.)` method:\n\n``` Java\n        @Override\n        protected final SpecializationNode createNext(Frame frameValue) {\n            BreakpointInfo info1 = (root.getBreakpointStatus());\n            if ((!(info1.hasBreakpoint))) {\n                return NoBreakpointNode_.create(root, info1);\n            }\n            BreakpointInfo info2 = (root.getBreakpointStatus()); else if ((!(info2.breakpoint.isEnabled()))) {\n                return BreakpointDisabledNode_.create(root, info2);\n            }\n            return null;\n        }\n```\n", "url": "https://github.com/oracle/graal/issues/198", "user": "smarr", "labels": ["bug", "oca-signed"], "created": "2016-08-09 17:45:59", "closed": "2016-08-09 17:52:54", "commits": {"69bc8312a14b7f03c2fdb8ef9efb70c24b115ccb": {"commitGHEventType": "referenced", "commitUser": "dougxc"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "69bc8312a14b7f03c2fdb8ef9efb70c24b115ccb", "commitGHEventType": "referenced", "commitUser": "dougxc", "commitParents": ["db0adbc376ba1f6f06ea04afddb240e36a31b1ae", "ac3e429934fea3089cb97271c16e94b92eaf53a7"], "nameRev": "69bc8312a14b7f03c2fdb8ef9efb70c24b115ccb tags/graal-vm-0.17~22", "commitMessage": "Merge pull request #198 in G/truffle from om-improve-factory-error to master\n\n* commit 'ac3e429934fea3089cb97271c16e94b92eaf53a7':\n  Improve the error message when giving an incorrect number of arguments to a DynamicObjectFactory.\n", "commitDateTime": "2016-09-14 08:51:38", "authoredDateTime": "2016-09-14 08:51:38", "commitGitStats": [{"filePath": "truffle/com.oracle.truffle.object.basic.test/src/com/oracle/truffle/object/basic/test/DynamicObjectFactoryTest.java", "insertions": 71, "deletions": 0, "lines": 71}, {"filePath": "truffle/com.oracle.truffle.object/src/com/oracle/truffle/object/ShapeImpl.java", "insertions": 37, "deletions": 18, "lines": 55}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DynamicObjectFactoryTest.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.object.basic.test.DynamicObjectFactoryTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShapeImpl.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.object.ShapeImpl.createFactory().2.newInstance(java.lang.Object[])", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.object.ShapeImpl.createFactory()", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 5, "DEL": 1}, {"spoonMethodName": "com.oracle.truffle.object.ShapeImpl.createFactory().2.getShape()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.oracle.truffle.object.ShapeImpl.DynamicObjectFactoryImpl", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.object.ShapeImpl.DynamicObjectFactoryImpl.newInstance(java.lang.Object[])", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.object.ShapeImpl.DynamicObjectFactoryImpl.getShape()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.object.ShapeImpl.createFactory().2", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Some Javadoc links point to code snippets not included in any sources Jar", "body": "This means that most Truffle users won't be able to navigate to these snippets in their IDE.\n\nCases I encountered:\n- com.oracle.truffle.api.dsl.test.interop.Snippets.ExampleTruffleObject#getForeignAccessMethod\n- com.oracle.truffle.api.dsl.test.interop.Snippets.ExampleTruffleObjectMR\n", "url": "https://github.com/oracle/graal/issues/181", "user": "pniederw", "labels": ["bug"], "created": "2016-05-06 16:05:28", "closed": "2018-01-09 11:39:11", "commits": {"731bb36abb025dbc460fe1c379ccad3fbe5e7ae3": {"commitGHEventType": "referenced", "commitUser": "dougxc"}}, "ttf": 612.0002777777778, "commitsDetails": [{"commitHash": "731bb36abb025dbc460fe1c379ccad3fbe5e7ae3", "commitGHEventType": "referenced", "commitUser": "dougxc", "commitParents": ["b1e45fe5971b03ac33ce95836d4666198800090f", "d094163f9715cfbb80dd8a23d74b252d95a73ddf"], "nameRev": "731bb36abb025dbc460fe1c379ccad3fbe5e7ae3 tags/truffle-0.17~1", "commitMessage": "Merge pull request #181 in G/truffle from ~MICHAEL.VAN.DE.VANTER_ORACLE.COM/truffle:javadoc-event-binding to master\n\n* commit 'd094163f9715cfbb80dd8a23d74b252d95a73ddf':\n  Javadoc EventBinding:  correct minor mistake, rewrite for clarity.\n", "commitDateTime": "2016-08-30 09:49:45", "authoredDateTime": "2016-08-30 09:49:45", "commitGitStats": [{"filePath": "truffle/com.oracle.truffle.api.instrumentation/src/com/oracle/truffle/api/instrumentation/EventBinding.java", "insertions": 21, "deletions": 18, "lines": 39}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EventBinding.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "`InstrumentationHandler.visitRoot(.)` seems not thread safe", "body": "The `InstrumentationHandler.visitRoot()` method sets fields of an `AbstractNodeVisitor` (`root` and `providedTags`), at the end, it sets the fields to `null`.\n\nThis seems thread-unsafe. Considering `InstrumentationHandler.installRootNode()` calls `visitRoot()` with the `addAllBindingsVisitor`, this seems to be unsafe, because multiple threads can end up using the same instance of `addAllBindingsVisitor` object, and mutating it unsynchronized.\n\nThis seems to be introduced with https://github.com/graalvm/truffle/commit/2aa2eff1c157c847cae58734075a57fd14c0acb9\n\n/cc @mlvdv \n", "url": "https://github.com/oracle/graal/issues/180", "user": "smarr", "labels": ["bug", "oca-signed"], "created": "2016-05-01 22:02:57", "closed": "2016-07-18 12:36:27", "commits": {"d8c531d6b037ef603bbd8fa3cc6d644b5a786387": {"commitGHEventType": "referenced", "commitUser": "dougxc"}}, "ttf": 77.00027777777778, "commitsDetails": [{"commitHash": "d8c531d6b037ef603bbd8fa3cc6d644b5a786387", "commitGHEventType": "referenced", "commitUser": "dougxc", "commitParents": ["854088ef15c70e7621eabcc90d295ffa626ad840", "539ac7c9c1d751b1ae6bcbc26d448c1849fbc590"], "nameRev": "d8c531d6b037ef603bbd8fa3cc6d644b5a786387 tags/graal-vm-0.17~33", "commitMessage": "Merge pull request #180 in G/truffle from ~MICHAEL.VAN.DE.VANTER_ORACLE.COM/truffle:feature/source-section-query2 to master\n\n* commit '539ac7c9c1d751b1ae6bcbc26d448c1849fbc590':\n  Instrumenter.querySourceSections:  udpate CHANGELog and versions\n  CHANGELOG:  back out a change for now.\n  InstrumentationHandler: reverse a unneeded argument type change.\n  Instrumenter.querySourceSections(): update tests\n  CHANGELOG:  new InsttrumenterQuerySourceSections method\n  Instrumenter: lift implementation of querySourceSections from AbsstractInstrumenter.\n  Add Instrumenter method for directly querying all loaded SourceSections, optionally filtered\n  SourceSectionFilter:  add singleton instance ANY that always matches\n", "commitDateTime": "2016-09-01 18:00:13", "authoredDateTime": "2016-09-01 18:00:13", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "truffle/com.oracle.truffle.api.debug/src/com/oracle/truffle/api/debug/Debugger.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "truffle/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/InstrumentationMultiThreadingTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "truffle/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/InstrumentationTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "truffle/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/SourceListenerTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "truffle/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/SourceSectionFilterTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "truffle/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/SourceSectionListenerTest.java", "insertions": 34, "deletions": 5, "lines": 39}, {"filePath": "truffle/com.oracle.truffle.api.instrumentation/src/com/oracle/truffle/api/instrumentation/Instrumenter.java", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "truffle/com.oracle.truffle.api.instrumentation/src/com/oracle/truffle/api/instrumentation/SourceSectionFilter.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Debugger.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.api.debug.Debugger.getLoadedSources()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "InstrumentationMultiThreadingTest.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.api.instrumentation.InstrumentationMultiThreadingTest.createDummyBindings(com.oracle.truffle.api.instrumentation.Instrumenter)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "InstrumentationTest.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.api.instrumentation.InstrumentationTest.TestInstrumentAll1.onCreate(com.oracle.truffle.api.instrumentation.Env)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.oracle.truffle.api.instrumentation.InstrumentationTest.TestInstrumentNonInstrumentable1.onCreate(com.oracle.truffle.api.instrumentation.Env)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.oracle.truffle.api.instrumentation.InstrumentationTest.TestKillQuitException.onCreate(com.oracle.truffle.api.instrumentation.Env)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "SourceListenerTest.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.api.instrumentation.SourceListenerTest.TestLoadSource1.onCreate(com.oracle.truffle.api.instrumentation.Env)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.oracle.truffle.api.instrumentation.SourceListenerTest.TestLoadSourceException.onCreate(com.oracle.truffle.api.instrumentation.Env)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "SourceSectionFilterTest.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.api.instrumentation.SourceSectionFilterTest.testEmpty()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SourceSectionListenerTest.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.api.instrumentation.SourceSectionListenerTest.TestLoadSourceSectionException.onCreate(com.oracle.truffle.api.instrumentation.Env)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.oracle.truffle.api.instrumentation.SourceSectionListenerTest.TestLoadSourceSection1.onCreate(com.oracle.truffle.api.instrumentation.Env)", "TOT": 13, "UPD": 0, "INS": 7, "MOV": 1, "DEL": 5}, {"spoonMethodName": "com.oracle.truffle.api.instrumentation.SourceSectionListenerTest.assertSections(java.util.List,com.oracle.truffle.api.source.SourceSection[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.api.instrumentation.SourceSectionListenerTest.testLoadSourceSectionImpl(int)", "TOT": 19, "UPD": 0, "INS": 11, "MOV": 8, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.api.instrumentation.SourceSectionListenerTest.TestLoadSourceSection1", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.api.instrumentation.SourceSectionListenerTest.TestLoadSourceSection1.query(com.oracle.truffle.api.instrumentation.SourceSectionFilter)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Instrumenter.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.api.instrumentation.Instrumenter.querySourceSections(com.oracle.truffle.api.instrumentation.SourceSectionFilter)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SourceSectionFilter.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.api.instrumentation.SourceSectionFilter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "0.13-SNAPSHOT of truffle-dsl-processor not published", "body": "http://lafo.ssw.uni-linz.ac.at/nexus/content/repositories/repos-public/com/oracle/truffle/truffle-dsl-processor/ only has 0.12-SNAPSHOT, whereas other modules (e.g. http://lafo.ssw.uni-linz.ac.at/nexus/content/repositories/repos-public/com/oracle/truffle/truffle-api/) have 0.13-SNAPSHOT.\n\n`mx maven-install` does produce a 0.13-SNAPSHOT:\n\n```\n[INFO] Installing /xxx/truffle/mxbuild/dists/truffle-dsl-processor.jar to /xxx/.m2/repository/com/oracle/truffle/truffle-dsl-processor/0.13-SNAPSHOT/truffle-dsl-processor-0.13-SNAPSHOT.jar\n```\n", "url": "https://github.com/oracle/graal/issues/173", "user": "pniederw", "labels": ["bug"], "created": "2016-04-13 19:02:23", "closed": "2016-04-19 10:19:59", "commits": {"60f38b6c97f808d396e8556afc49f32a47abde0e": {"commitGHEventType": "closed", "commitUser": "dougxc"}, "356123985aeb2c75a61a1e827f17a8d5c5980e9f": {"commitGHEventType": "referenced", "commitUser": "dougxc"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "60f38b6c97f808d396e8556afc49f32a47abde0e", "commitGHEventType": "closed", "commitUser": "dougxc", "commitParents": ["4120e59091039394d7536cfba6edc301015ed354"], "nameRev": "60f38b6c97f808d396e8556afc49f32a47abde0e tags/truffle-0.13~8^2~1", "commitMessage": "Gilles suggested this to fix #173: 0.13-SNAPSHOT of truffle-dsl-processor not published\n", "commitDateTime": "2016-04-18 10:40:34", "authoredDateTime": "2016-04-18 10:40:34", "commitGitStats": [{"filePath": "mx.truffle/suite.py", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "356123985aeb2c75a61a1e827f17a8d5c5980e9f", "commitGHEventType": "referenced", "commitUser": "dougxc", "commitParents": ["4120e59091039394d7536cfba6edc301015ed354", "8e4dd223cf5ce03b873573c1decf40e1b84a526e"], "nameRev": "356123985aeb2c75a61a1e827f17a8d5c5980e9f tags/truffle-0.13~8", "commitMessage": "Merge pull request #17 in G/truffle from ~JAROSLAV.TULACH_ORACLE.COM/truffle:master to master\n\n* commit '8e4dd223cf5ce03b873573c1decf40e1b84a526e':\n  mx testdownstream should only be optional check\n  Gilles suggested this to fix #173: 0.13-SNAPSHOT of truffle-dsl-processor not published\n", "commitDateTime": "2016-04-19 03:14:42", "authoredDateTime": "2016-04-19 03:14:42", "commitGitStats": [{"filePath": "ci.hocon", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "mx.truffle/suite.py", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["60f38b6c97f808d396e8556afc49f32a47abde0e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 1, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["mx.truffle/suite.py"]}, {"title": "Debugger requirement: language-specific display of values", "body": "The debugger needs access to language-specific textual display of language values.  This was formerly supported by the (now deprecated):\n     `String TruffleLanugage.getVisualizer().displayValue(Object value, int trim)`\n\nThe REPL debugger now uses `Object.toString()`.\n\n@mickjordan reports that this is important for current work.\n", "url": "https://github.com/oracle/graal/issues/155", "user": "mlvdv", "labels": ["bug", "oracle-emp"], "created": "2016-03-29 23:46:28", "closed": "2016-07-18 12:38:18", "commits": {"bd163128ec958b97ebc68b33ac5b4fae376a37b5": {"commitGHEventType": "referenced", "commitUser": "dougxc"}}, "ttf": 110.00027777777778, "commitsDetails": [{"commitHash": "bd163128ec958b97ebc68b33ac5b4fae376a37b5", "commitGHEventType": "referenced", "commitUser": "dougxc", "commitParents": ["64858a010dcce60422e0bcc49171a6e9ea862076", "a23d950104592eb9ff7f5d55da309b40cb4b7b88"], "nameRev": "bd163128ec958b97ebc68b33ac5b4fae376a37b5 tags/graal-vm-0.15", "commitMessage": "Merge pull request #155 in G/truffle from ~ANDREAS.WOESS_ORACLE.COM/truffle:pr/interop-gen-codestyle to master\n\n* commit 'a23d950104592eb9ff7f5d55da309b40cb4b7b88':\n  Fix checkstyle issues in generated code\n", "commitDateTime": "2016-08-03 05:38:31", "authoredDateTime": "2016-08-03 05:38:31", "commitGitStats": [{"filePath": "truffle/com.oracle.truffle.dsl.processor/src/com/oracle/truffle/dsl/processor/InteropProcessor.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "truffle/com.oracle.truffle.dsl.processor/src/com/oracle/truffle/dsl/processor/interop/ExecuteGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "truffle/com.oracle.truffle.dsl.processor/src/com/oracle/truffle/dsl/processor/interop/ForeignAccessFactoryGenerator.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "truffle/com.oracle.truffle.dsl.processor/src/com/oracle/truffle/dsl/processor/interop/GenericGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "truffle/com.oracle.truffle.dsl.processor/src/com/oracle/truffle/dsl/processor/interop/LanguageCheckGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "truffle/com.oracle.truffle.dsl.processor/src/com/oracle/truffle/dsl/processor/interop/ReadGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "truffle/com.oracle.truffle.dsl.processor/src/com/oracle/truffle/dsl/processor/interop/UnaryGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "truffle/com.oracle.truffle.dsl.processor/src/com/oracle/truffle/dsl/processor/interop/WriteGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InteropProcessor.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.dsl.processor.InteropProcessor.UnaryGenerator.appendRootNode(java.io.Writer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.dsl.processor.InteropProcessor.ExecuteGenerator.appendRootNode(java.io.Writer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.dsl.processor.InteropProcessor.ReadGenerator.appendRootNode(java.io.Writer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.dsl.processor.InteropProcessor.WriteGenerator.appendRootNode(java.io.Writer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.dsl.processor.InteropProcessor.GenericGenerator.appendRootNode(java.io.Writer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ExecuteGenerator.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.dsl.processor.interop.ExecuteGenerator.appendRootNode(java.io.Writer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ForeignAccessFactoryGenerator.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.dsl.processor.interop.ForeignAccessFactoryGenerator.appendSingletonAndGetter(java.io.Writer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.dsl.processor.interop.ForeignAccessFactoryGenerator.appendPrivateConstructor(java.io.Writer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GenericGenerator.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.dsl.processor.interop.GenericGenerator.appendRootNode(java.io.Writer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LanguageCheckGenerator.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.dsl.processor.interop.LanguageCheckGenerator.appendRootNode(java.io.Writer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReadGenerator.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.dsl.processor.interop.ReadGenerator.appendRootNode(java.io.Writer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UnaryGenerator.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.dsl.processor.interop.UnaryGenerator.appendRootNode(java.io.Writer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WriteGenerator.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.dsl.processor.interop.WriteGenerator.appendRootNode(java.io.Writer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "DSL generating wrong type for @Cached", "body": "If the type used in a @Cached entry requires qualification, the DSL truncates after the `.` and ends up generating the wrong type.\n\nE.g., I have the following:\n\n```\n@Specialization(guards = { \"!isEmpty(string)\", \"isSingleByteOptimizable(string)\" })\npublic int ordAsciiOnly(DynamicObject string,\n      @Cached(\"create(getContext(), getSourceSection())\") RopeNodes.GetByteNode getByteNode) {\n...\n}\n```\n\nThe  generated class for this specialization ends up looking like:\n\n```\n@GeneratedBy(methodName = \"ordAsciiOnly(DynamicObject, GetByteNode)\", value = OrdNode.class)\nprivate static final class OrdAsciiOnlyNode_ extends BaseNode_ {\n\n  @Child private org.jruby.truffle.core.rope.RopeNodes getByteNode;\n\n   ....\n}\n```\n\nNote that the @Child field is of type `RopeNodes` rather than `RopeNodes.GetByteNode`.\n", "url": "https://github.com/oracle/graal/issues/151", "user": "nirvdrum", "labels": ["bug", "oracle-emp"], "created": "2016-03-28 17:33:32", "closed": "2016-07-18 12:32:08", "commits": {"086bf88308850af9930b3d80da4cee5bcdec7088": {"commitGHEventType": "referenced", "commitUser": "dougxc"}}, "ttf": 111.00027777777778, "commitsDetails": [{"commitHash": "086bf88308850af9930b3d80da4cee5bcdec7088", "commitGHEventType": "referenced", "commitUser": "dougxc", "commitParents": ["0f666d1a0c4eabc0d44d1a2ad75cebd3ea6dbadb", "91fc60b97b1dd110d5b331811a36b12f277eb49d"], "nameRev": "086bf88308850af9930b3d80da4cee5bcdec7088 tags/graal-vm-0.14", "commitMessage": "Merge pull request #151 in G/truffle from ~JAROSLAV.TULACH_ORACLE.COM/truffle:NoMessageDigest to master\n\n* commit '91fc60b97b1dd110d5b331811a36b12f277eb49d':\n  Don't assign value of a method parameter\n  Replace the generic MessageDigest algorith with a home made one that doesn't require the whole cryptographic architecture and plugins.\n", "commitDateTime": "2016-07-27 01:58:32", "authoredDateTime": "2016-07-27 01:58:32", "commitGitStats": [{"filePath": "truffle/com.oracle.truffle.api.test/src/com/oracle/truffle/api/source/ContentDigestTest.java", "insertions": 82, "deletions": 0, "lines": 82}, {"filePath": "truffle/com.oracle.truffle.api/src/com/oracle/truffle/api/source/Content.java", "insertions": 133, "deletions": 12, "lines": 145}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ContentDigestTest.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.api.source.ContentDigestTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Content.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.api.source.Content.getNamedURI(java.lang.String,byte[],int,int)", "TOT": 23, "UPD": 6, "INS": 1, "MOV": 14, "DEL": 2}, {"spoonMethodName": "com.oracle.truffle.api.source.Content", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.api.source.Content.digest(byte[],int,int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Truffle fails to compile with jdk7", "body": "On a clean Truffle repo:\n\n```\ndsimon@kurz ~/g/truffle> mx --strict build -n --no-javac-crosscompile --dependencies com.oracle.truffle.api.interop.java\nCompiling com.oracle.truffle.api with javac... [/Users/dsimon/graal/truffle/mxbuild/truffle/com.oracle.truffle.api/bin/com/oracle/truffle/api/Assumption.class does not exist]\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api/src/com/oracle/truffle/api/instrument/impl/DefaultVisualizer.java:91: warning: [deprecation] displayIdentifier(FrameSlot) in Visualizer has been deprecated\n    public String displayIdentifier(FrameSlot slot) {\n                  ^\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api/src/com/oracle/truffle/api/instrument/impl/DefaultVisualizer.java:83: warning: [deprecation] displayValue(Object,int) in Visualizer has been deprecated\n    public String displayValue(Object value, int trim) {\n                  ^\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api/src/com/oracle/truffle/api/instrument/impl/DefaultVisualizer.java:78: warning: [deprecation] displayCallTargetName(CallTarget) in Visualizer has been deprecated\n    public String displayCallTargetName(CallTarget callTarget) {\n                  ^\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api/src/com/oracle/truffle/api/instrument/impl/DefaultVisualizer.java:66: warning: [deprecation] displayMethodName(Node) in Visualizer has been deprecated\n    public String displayMethodName(Node node) {\n                  ^\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api/src/com/oracle/truffle/api/instrument/impl/DefaultVisualizer.java:49: warning: [deprecation] displaySourceLocation(Node) in Visualizer has been deprecated\n    public String displaySourceLocation(Node node) {\n                  ^\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api/src/com/oracle/truffle/api/instrument/impl/DefaultVisualizer.java:44: warning: [deprecation] getASTPrinter() in Visualizer has been deprecated\n    public ASTPrinter getASTPrinter() {\n                      ^\n6 warnings\nCompiling com.oracle.truffle.api.dsl with javac... [dependency com.oracle.truffle.api updated]\nCompiling com.oracle.truffle.api.interop with javac... [dependency com.oracle.truffle.api updated]\nCompiling com.oracle.truffle.api.instrumentation with javac... [dependency com.oracle.truffle.api updated]\nCompiling com.oracle.truffle.dsl.processor with javac... [dependency com.oracle.truffle.api.dsl updated]\nCompiling com.oracle.truffle.api.object with javac... [dependency com.oracle.truffle.api.interop updated]\nCompiling com.oracle.truffle.api.object.dsl with javac... [dependency com.oracle.truffle.api.object updated]\nCompiling com.oracle.truffle.object.dsl.processor with javac... [dependency com.oracle.truffle.api.object.dsl updated]\nArchiving TRUFFLE_DSL_PROCESSOR_INTERNAL... [dependency com.oracle.truffle.dsl.processor updated]\nCompiling com.oracle.truffle.api.interop.java with javac... [dependency TRUFFLE_DSL_PROCESSOR_INTERNAL updated]\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/ArrayGetSizeNode.java:33: error: cannot find symbol\nfinal class ArrayGetSizeNode extends ArrayGetSizeBaseNode {\n                                     ^\n  symbol: class ArrayGetSizeBaseNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/ArrayHasSizeNode.java:33: error: cannot find symbol\nfinal class ArrayHasSizeNode extends ArrayHasSizeBaseNode {\n                                     ^\n  symbol: class ArrayHasSizeBaseNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/ExecuteNode.java:39: error: cannot find symbol\nfinal class ExecuteNode extends JavaFunctionBaseNode {\n                                ^\n  symbol: class JavaFunctionBaseNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/InvokeNode.java:36: error: cannot find symbol\nfinal class InvokeNode extends InvokeBaseNode {\n                               ^\n  symbol: class InvokeBaseNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/IsExecutableNode.java:31: error: cannot find symbol\nfinal class IsExecutableNode extends IsExecutableBaseNode {\n                                     ^\n  symbol: class IsExecutableBaseNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/NewNode.java:34: error: cannot find symbol\nfinal class NewNode extends JavaNewBaseNode {\n                            ^\n  symbol: class JavaNewBaseNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/NullCheckNode.java:31: error: cannot find symbol\nfinal class NullCheckNode extends NullCheckBaseNode {\n                                  ^\n  symbol: class NullCheckBaseNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/ReadFieldNode.java:40: error: cannot find symbol\nfinal class ReadFieldNode extends ReadFieldBaseNode {\n                                  ^\n  symbol: class ReadFieldBaseNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/WriteFieldNode.java:33: error: cannot find symbol\nfinal class WriteFieldNode extends WriteFieldBaseNode {\n                                   ^\n  symbol: class WriteFieldBaseNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/ExecuteNode.java:41: error: cannot find symbol\n    @Child private DoExecuteNode doExecute;\n     ^\n  symbol:   class Child\n  location: class ExecuteNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/InvokeNode.java:38: error: cannot find symbol\n    @Child private DoExecuteNode doExecute;\n     ^\n  symbol:   class Child\n  location: class InvokeNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/WriteFieldNode.java:35: error: cannot find symbol\n    @Child private ToJavaNode toJava = new ToJavaNode();\n     ^\n  symbol:   class Child\n  location: class WriteFieldNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/ExecuteNode.java:41: error: Exception thrown during processing: java.lang.ClassCastException: com.sun.tools.javac.code.Symbol$VarSymbol cannot be cast to javax.lang.model.element.ExecutableElement\n    @Child private DoExecuteNode doExecute;\n                                 ^\n    at com.oracle.truffle.dsl.processor.verify.VerifyTruffleProcessor.process(VerifyTruffleProcessor.java:109)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.callProcessor(JavacProcessingEnvironment.java:793)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.discoverAndRunProcs(JavacProcessingEnvironment.java:722)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.access$1700(JavacProcessingEnvironment.java:97)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment$Round.run(JavacProcessingEnvironment.java:1029)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.doProcessing(JavacProcessingEnvironment.java:1163)\n    at com.sun.tools.javac.main.JavaCompiler.processAnnotations(JavaCompiler.java:1108)\n    at com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:824)\n    at com.sun.tools.javac.main.Main.compile(Main.java:439)\n    at com.sun.tools.javac.main.Main.compile(Main.java:353)\n    at com.sun.tools.javac.main.Main.compile(Main.java:342)\n    at com.sun.tools.javac.main.Main.compile(Main.java:333)\n    at com.sun.tools.javac.Main.compile(Main.java:76)\n    at com.sun.tools.javac.Main.main(Main.java:61)\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/InvokeNode.java:38: error: Exception thrown during processing: java.lang.ClassCastException: com.sun.tools.javac.code.Symbol$VarSymbol cannot be cast to javax.lang.model.element.ExecutableElement\n    @Child private DoExecuteNode doExecute;\n                                 ^\n    at com.oracle.truffle.dsl.processor.verify.VerifyTruffleProcessor.process(VerifyTruffleProcessor.java:109)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.callProcessor(JavacProcessingEnvironment.java:793)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.discoverAndRunProcs(JavacProcessingEnvironment.java:722)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.access$1700(JavacProcessingEnvironment.java:97)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment$Round.run(JavacProcessingEnvironment.java:1029)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.doProcessing(JavacProcessingEnvironment.java:1163)\n    at com.sun.tools.javac.main.JavaCompiler.processAnnotations(JavaCompiler.java:1108)\n    at com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:824)\n    at com.sun.tools.javac.main.Main.compile(Main.java:439)\n    at com.sun.tools.javac.main.Main.compile(Main.java:353)\n    at com.sun.tools.javac.main.Main.compile(Main.java:342)\n    at com.sun.tools.javac.main.Main.compile(Main.java:333)\n    at com.sun.tools.javac.Main.compile(Main.java:76)\n    at com.sun.tools.javac.Main.main(Main.java:61)\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/WriteFieldNode.java:35: error: Exception thrown during processing: java.lang.ClassCastException: com.sun.tools.javac.code.Symbol$VarSymbol cannot be cast to javax.lang.model.element.ExecutableElement\n    @Child private ToJavaNode toJava = new ToJavaNode();\n                              ^\n    at com.oracle.truffle.dsl.processor.verify.VerifyTruffleProcessor.process(VerifyTruffleProcessor.java:109)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.callProcessor(JavacProcessingEnvironment.java:793)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.discoverAndRunProcs(JavacProcessingEnvironment.java:722)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.access$1700(JavacProcessingEnvironment.java:97)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment$Round.run(JavacProcessingEnvironment.java:1029)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.doProcessing(JavacProcessingEnvironment.java:1163)\n    at com.sun.tools.javac.main.JavaCompiler.processAnnotations(JavaCompiler.java:1108)\n    at com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:824)\n    at com.sun.tools.javac.main.Main.compile(Main.java:439)\n    at com.sun.tools.javac.main.Main.compile(Main.java:353)\n    at com.sun.tools.javac.main.Main.compile(Main.java:342)\n    at com.sun.tools.javac.main.Main.compile(Main.java:333)\n    at com.sun.tools.javac.Main.compile(Main.java:76)\n    at com.sun.tools.javac.Main.main(Main.java:61)\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/ArrayGetSizeNode.java:33: error: cannot find symbol\nfinal class ArrayGetSizeNode extends ArrayGetSizeBaseNode {\n                                     ^\n  symbol: class ArrayGetSizeBaseNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/ArrayHasSizeNode.java:33: error: cannot find symbol\nfinal class ArrayHasSizeNode extends ArrayHasSizeBaseNode {\n                                     ^\n  symbol: class ArrayHasSizeBaseNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/ExecuteNode.java:39: error: cannot find symbol\nfinal class ExecuteNode extends JavaFunctionBaseNode {\n                                ^\n  symbol: class JavaFunctionBaseNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/InvokeNode.java:36: error: cannot find symbol\nfinal class InvokeNode extends InvokeBaseNode {\n                               ^\n  symbol: class InvokeBaseNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/IsExecutableNode.java:31: error: cannot find symbol\nfinal class IsExecutableNode extends IsExecutableBaseNode {\n                                     ^\n  symbol: class IsExecutableBaseNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/NewNode.java:34: error: cannot find symbol\nfinal class NewNode extends JavaNewBaseNode {\n                            ^\n  symbol: class JavaNewBaseNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/NullCheckNode.java:31: error: cannot find symbol\nfinal class NullCheckNode extends NullCheckBaseNode {\n                                  ^\n  symbol: class NullCheckBaseNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/ReadFieldNode.java:40: error: cannot find symbol\nfinal class ReadFieldNode extends ReadFieldBaseNode {\n                                  ^\n  symbol: class ReadFieldBaseNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/WriteFieldNode.java:33: error: cannot find symbol\nfinal class WriteFieldNode extends WriteFieldBaseNode {\n                                   ^\n  symbol: class WriteFieldBaseNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/ExecuteNode.java:41: error: cannot find symbol\n    @Child private DoExecuteNode doExecute;\n     ^\n  symbol:   class Child\n  location: class ExecuteNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/InvokeNode.java:38: error: cannot find symbol\n    @Child private DoExecuteNode doExecute;\n     ^\n  symbol:   class Child\n  location: class InvokeNode\n/Users/dsimon/graal/truffle/truffle/com.oracle.truffle.api.interop.java/src/com/oracle/truffle/api/interop/java/WriteFieldNode.java:35: error: cannot find symbol\n    @Child private ToJavaNode toJava = new ToJavaNode();\n     ^\n  symbol:   class Child\n  location: class WriteFieldNode\n15 errors\n```\n", "url": "https://github.com/oracle/graal/issues/128", "user": "dougxc", "labels": ["bug", "oracle-emp"], "created": "2016-03-15 10:37:05", "closed": "2016-03-18 11:41:29", "commits": {"3e3e3d2c5d2dcfbc9b70f94f1bf1dc7be033b8cc": {"commitGHEventType": "referenced", "commitUser": "dougxc"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "3e3e3d2c5d2dcfbc9b70f94f1bf1dc7be033b8cc", "commitGHEventType": "referenced", "commitUser": "dougxc", "commitParents": ["98add2bdcd72f3771c2492c99a86886c38bc6f0c", "11afa090040be1350b7602f9fb07cc5ff5e971ae"], "nameRev": "3e3e3d2c5d2dcfbc9b70f94f1bf1dc7be033b8cc tags/graal-vm-0.14~21", "commitMessage": "Merge pull request #128 in G/truffle from ~DANIELE.BONETTA_ORACLE.COM/truffle:bugfix/dsl to master\n\n* commit '11afa090040be1350b7602f9fb07cc5ff5e971ae':\n  Fix Interop DSL such that it does not generate unused imports. Interop DSL generates default message resolutions for predicate messages (e.g. IS_BOXED) and returns false if not otherwise specified. The default implementation requires an import of RootNode. This fix avoids an unused import if Interop DSL does not need to generate any default message resolution because all predicate messages are implemented using the Resolve annotation.\n", "commitDateTime": "2016-07-07 09:24:57", "authoredDateTime": "2016-07-07 09:24:57", "commitGitStats": [{"filePath": "truffle/com.oracle.truffle.dsl.processor/src/com/oracle/truffle/dsl/processor/interop/ForeignAccessFactoryGenerator.java", "insertions": 7, "deletions": 2, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ForeignAccessFactoryGenerator.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.dsl.processor.interop.ForeignAccessFactoryGenerator.appendImports(java.io.Writer)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.oracle.truffle.dsl.processor.interop.ForeignAccessFactoryGenerator.generate()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "FrameInstance missing documentation", "body": "Javadoc missing on FrameInstance.getFrame()\n", "url": "https://github.com/oracle/graal/issues/103", "user": "mlvdv", "labels": ["bug", "duplicate", "help wanted", "oracle-emp"], "created": "2016-03-06 00:58:23", "closed": "2016-03-07 13:53:20", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "SourceSection equality", "body": "SourceSection Javadoc does not say how equality/hash are defined, especially so with respect to associated tags.\n", "url": "https://github.com/oracle/graal/issues/100", "user": "mlvdv", "labels": ["bug", "oracle-emp"], "created": "2016-03-05 01:57:23", "closed": "2016-04-15 20:47:49", "commits": {"091c4abbb09d973e5423c1567a5dc31865f84bc0": {"commitGHEventType": "referenced", "commitUser": "dougxc"}}, "ttf": 41.000277777777775, "commitsDetails": [{"commitHash": "091c4abbb09d973e5423c1567a5dc31865f84bc0", "commitGHEventType": "referenced", "commitUser": "dougxc", "commitParents": ["ad5b5e2276a314ecb1dfb14f435e8cea51cf6996", "4528690a2c50424ef2ecc3070ddb04a3d2afa1a7"], "nameRev": "091c4abbb09d973e5423c1567a5dc31865f84bc0 tags/graal-vm-0.13~16", "commitMessage": "Merge pull request #100 in G/truffle from ~JAROSLAV.TULACH_ORACLE.COM/truffle:KillExecution to master\n\nExecWithTimeOut class needs to be part of TCK distribution JAR file\n\n* commit '4528690a2c50424ef2ecc3070ddb04a3d2afa1a7':\n  Include onEvent registration in the Javadoc snippet sample\n  ExecWithTimeOut needs to be included in the TCK distribution. Cannot use Snippets in the class name.\n", "commitDateTime": "2016-06-22 02:53:08", "authoredDateTime": "2016-06-22 02:53:08", "commitGitStats": [{"filePath": "truffle/com.oracle.truffle.api.debug/src/com/oracle/truffle/api/debug/SuspendedEvent.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "truffle/com.oracle.truffle.tck/src/com/oracle/truffle/tck/ExecWithTimeOut.java", "insertions": 115, "deletions": 0, "lines": 115}, {"filePath": "truffle/com.oracle.truffle.tck/src/com/oracle/truffle/tck/TckSnippets.java", "insertions": 0, "deletions": 110, "lines": 110}, {"filePath": "truffle/com.oracle.truffle.tck/src/com/oracle/truffle/tck/TruffleTCK.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SuspendedEvent.java", "spoonMethods": []}, {"spoonFilePath": "ExecWithTimeOut.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.tck.ExecWithTimeOut", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TckSnippets.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.tck.TckSnippets", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TruffleTCK.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.tck.TruffleTCK.timeOutTest()", "TOT": 8, "UPD": 2, "INS": 2, "MOV": 3, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "SourceSection.getTags()", "body": "Restore the ability for debugging and other tools to enumerate tags applied at particular code locations.  It can be slow, and should be clearly identified as such.\n", "url": "https://github.com/oracle/graal/issues/99", "user": "mlvdv", "labels": ["bug", "oracle-emp", "wontfix"], "created": "2016-03-05 00:24:45", "closed": "2016-03-07 21:02:41", "commits": {"91be904cb5bd898f3e0e50f0856d9f0a03cbeedc": {"commitGHEventType": "referenced", "commitUser": "dougxc"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "91be904cb5bd898f3e0e50f0856d9f0a03cbeedc", "commitGHEventType": "referenced", "commitUser": "dougxc", "commitParents": ["9c7566e2a1373b2e876b8992238dd670c3cf62ea", "02e06a40f8f61b882c24fc6d4eabcba9a1705ad7"], "nameRev": "91be904cb5bd898f3e0e50f0856d9f0a03cbeedc tags/graal-vm-0.13~18", "commitMessage": "Merge pull request #99 in G/truffle from ~JAROSLAV.TULACH_ORACLE.COM/truffle:MacGate to master\n\nMac OS X gate\n\n* commit '02e06a40f8f61b882c24fc6d4eabcba9a1705ad7':\n  More temporary files need to be canonicalized to make the tests pass on Mac OS X\n  Make sure .txt files have an associated MIME type in the tests\n  Make sure temporary file paths are canonicalized\n  Introducing Mac OS X gate to verify Truffle unit tests pass OK on Mac.\n", "commitDateTime": "2016-06-22 00:21:53", "authoredDateTime": "2016-06-22 00:21:53", "commitGitStats": [{"filePath": "ci.hocon", "insertions": 26, "deletions": 2, "lines": 28}, {"filePath": "truffle/com.oracle.truffle.api.debug.test/src/com/oracle/truffle/api/debug/test/TestSource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "truffle/com.oracle.truffle.api.test/src/com/oracle/truffle/api/source/CommonMIMETypeTestDetector.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "truffle/com.oracle.truffle.api.test/src/com/oracle/truffle/api/source/SourceBuilderTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "truffle/com.oracle.truffle.api.test/src/com/oracle/truffle/api/source/SourceSectionTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "truffle/com.oracle.truffle.api.test/src/com/oracle/truffle/api/source/SourceTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TestSource.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.api.debug.test.TestSource.createCallLoop3File()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CommonMIMETypeTestDetector.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.api.source.CommonMIMETypeTestDetector.probeContentType(java.nio.file.Path)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SourceBuilderTest.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.api.source.SourceBuilderTest.assignMimeTypeAndIdentityForFile()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.api.source.SourceBuilderTest.assignMimeTypeAndIdentityForVirtualFile()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.api.source.SourceBuilderTest.subSourceFromTwoFiles()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "SourceSectionTest.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.api.source.SourceSectionTest.onceObtainedAlwaysTheSame()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SourceTest.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.api.source.SourceTest.fileSample()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "graal-core cannot use Accessor", "body": "Right now the graal-core uses Truffle class from an implementation package: https://github.com/graalvm/graal-core/blob/6a3900d09cc4aa94196c58a9b136e4d422b6055b/graal/com.oracle.graal.truffle/src/com/oracle/graal/truffle/OptimizedCallTarget.java#L630\n\nSuch tight coupling between Truffle and graal-core will force us to release and use Truffle and graal+core in the same time. That is far from ideal. There shall be explicit, more stable API (probably more an SPI) for communication between Truffle and various runtimes.\n", "url": "https://github.com/oracle/graal/issues/81", "user": "jtulach", "labels": ["bug"], "created": "2016-02-29 08:25:11", "closed": "2016-07-18 12:11:48", "commits": {"65f86df08646934a714ff71aa4d18912a51eb91e": {"commitGHEventType": "referenced", "commitUser": "dougxc"}}, "ttf": 140.00027777777777, "commitsDetails": [{"commitHash": "65f86df08646934a714ff71aa4d18912a51eb91e", "commitGHEventType": "referenced", "commitUser": "dougxc", "commitParents": ["6a91d68cc4b39bf059c5de38eb7df2a13b5bf93c", "bc5a7633697c330cc7c7287e0790060e233fa22d"], "nameRev": "65f86df08646934a714ff71aa4d18912a51eb91e tags/graal-vm-0.13~23", "commitMessage": "Merge pull request #81 in G/truffle from ~MICHAEL.VAN.DE.VANTER_ORACLE.COM/truffle:feature/debugger-lang-spec-val-display to master\n\n* commit 'bc5a7633697c330cc7c7287e0790060e233fa22d':\n  SuspendedEvent.toString():  more reliable and faster access to the RootNode for language identification\n  Debugger.:  new method SuspendedEvent.toString() refactored so arguments and their order agree with SuspendedEvent.eval()\n  Debugger:  SuspendedEvent.eval() now throws IllegalArgumentException if supplied frame is not part of the current execution stack.\n  Debugger:  remove \"TODO\", Javadoc fix.\n  SL: override TruffleLanguage.tolString() to provide user-focused display strings for the internal representation of SL values. Revise SLDebugTest to compare frame slot values \"as displayed\", and add a test for the language-specific display of SL's null value representation.\n  REPL Debugger: update to use language-specific display of guest language values when displaying frame contents.\n  Debugger: new method SuspendedEvent.toString() provides for user-oriented display of guest-language managed values in the context of a frame in the current stack, implemented via TruffleLanguage.toString()\n", "commitDateTime": "2016-06-20 15:48:32", "authoredDateTime": "2016-06-20 15:48:32", "commitGitStats": [{"filePath": "truffle/com.oracle.truffle.api.debug/src/com/oracle/truffle/api/debug/Debugger.java", "insertions": 11, "deletions": 1, "lines": 12}, {"filePath": "truffle/com.oracle.truffle.api.debug/src/com/oracle/truffle/api/debug/SuspendedEvent.java", "insertions": 40, "deletions": 4, "lines": 44}, {"filePath": "truffle/com.oracle.truffle.api.vm/src/com/oracle/truffle/api/vm/PolyglotEngine.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "truffle/com.oracle.truffle.api/src/com/oracle/truffle/api/impl/Accessor.java", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "truffle/com.oracle.truffle.sl.test/src/com/oracle/truffle/sl/test/SLDebugTest.java", "insertions": 87, "deletions": 34, "lines": 121}, {"filePath": "truffle/com.oracle.truffle.sl.test/src/com/oracle/truffle/sl/test/SLJavaInteropTest.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "truffle/com.oracle.truffle.sl.test/src/com/oracle/truffle/sl/test/SLPolyglotEngineValueExecuteBenchmark.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "truffle/com.oracle.truffle.sl.test/src/com/oracle/truffle/sl/test/SLTckTest.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "truffle/com.oracle.truffle.sl.test/src/com/oracle/truffle/sl/test/ToStringOfEvalTest.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "truffle/com.oracle.truffle.sl/src/com/oracle/truffle/sl/SLLanguage.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "truffle/com.oracle.truffle.tools.debug.shell/src/com/oracle/truffle/tools/debug/shell/server/REPLHandler.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "truffle/com.oracle.truffle.tools.debug.shell/src/com/oracle/truffle/tools/debug/shell/server/REPLServer.java", "insertions": 35, "deletions": 25, "lines": 60}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Debugger.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.api.debug.Debugger.AccessorDebug.toStringInContext(com.oracle.truffle.api.nodes.RootNode,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SuspendedEvent.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.api.debug.SuspendedEvent.eval(java.lang.String,com.oracle.truffle.api.frame.FrameInstance)", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.api.debug.SuspendedEvent.toString(java.lang.Object,com.oracle.truffle.api.frame.FrameInstance)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PolyglotEngine.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.api.vm.PolyglotEngine.SPIAccessor.EngineImpl.findEnv(java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Accessor.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.api.impl.Accessor.EngineSupport.findEnv(java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SLDebugTest.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.sl.test.SLDebugTest.testBreakpoint()", "TOT": 7, "UPD": 1, "INS": 3, "MOV": 0, "DEL": 3}, {"spoonMethodName": "com.oracle.truffle.sl.test.SLDebugTest.testDebuggerBreakpoint()", "TOT": 5, "UPD": 3, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.oracle.truffle.sl.test.SLDebugTest.stepInStepOver()", "TOT": 34, "UPD": 12, "INS": 11, "MOV": 0, "DEL": 11}, {"spoonMethodName": "com.oracle.truffle.sl.test.SLDebugTest.stepOver(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.sl.test.SLDebugTest.stepOut()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.sl.test.SLDebugTest.continueExecution()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.sl.test.SLDebugTest.stepInto(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.sl.test.SLDebugTest.assertLocation(java.lang.String,int,boolean,java.lang.String,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.sl.test.SLDebugTest.stepOver(int).11", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.sl.test.SLDebugTest.stepOut().12", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.sl.test.SLDebugTest.continueExecution().13", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.sl.test.SLDebugTest.stepInto(int).14", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.sl.test.SLDebugTest.assertLocation(java.lang.String,int,boolean,java.lang.String,java.lang.Object[]).15", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.sl.test.SLDebugTest.assertLocation(java.lang.String,int,boolean,java.lang.String,java.lang.Object[]).15.run()", "TOT": 12, "UPD": 2, "INS": 0, "MOV": 7, "DEL": 3}, {"spoonMethodName": "com.oracle.truffle.sl.test.SLDebugTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.sl.test.SLDebugTest.createNull()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.sl.test.SLDebugTest.testNull()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.sl.test.SLDebugTest.assertLocation(java.lang.String,int,boolean,java.lang.String,java.lang.Object[]).16.run()", "TOT": 12, "UPD": 0, "INS": 12, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SLJavaInteropTest.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.sl.test.SLJavaInteropTest", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SLPolyglotEngineValueExecuteBenchmark.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.sl.test.SLPolyglotEngineValueExecuteBenchmark.prepare()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "SLTckTest.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.sl.test.SLTckTest.prepareVM(com.oracle.truffle.api.vm.PolyglotEngine$Builder)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "ToStringOfEvalTest.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.sl.test.ToStringOfEvalTest.checkToStringOnAFunction()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "SLLanguage.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.sl.SLLanguage.toString(com.oracle.truffle.sl.runtime.SLContext,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "REPLHandler.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.tools.debug.shell.server.REPLHandler.13.receive(com.oracle.truffle.tools.debug.shell.server.REPLMessage,com.oracle.truffle.tools.debug.shell.server.REPLServer)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.tools.debug.shell.server.REPLHandler.11.receive(com.oracle.truffle.tools.debug.shell.server.REPLMessage,com.oracle.truffle.tools.debug.shell.server.REPLServer)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "REPLServer.java", "spoonMethods": [{"spoonMethodName": "com.oracle.truffle.tools.debug.shell.server.REPLServer.Context.eval(java.lang.String,java.lang.Integer,boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.tools.debug.shell.server.REPLServer.REPLVisualizer.displayValue(java.lang.Object,int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.oracle.truffle.tools.debug.shell.server.REPLServer.Context.displayValue(java.lang.Integer,java.lang.Object,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.tools.debug.shell.server.REPLServer.trim(java.lang.String,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.oracle.truffle.tools.debug.shell.server.REPLServer.REPLVisualizer.trim(java.lang.String,int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}]}